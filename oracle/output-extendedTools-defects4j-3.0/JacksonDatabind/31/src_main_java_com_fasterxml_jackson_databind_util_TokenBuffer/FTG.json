{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "TypeDeclaration[456-58646]:TypeDeclaration[456-59569]"
    }, {
      "left" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "right" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "info" : "FieldDeclaration[1199-1295]:FieldDeclaration[1199-1295]"
    }, {
      "left" : "protected ObjectCodec _objectCodec;",
      "right" : "protected ObjectCodec _objectCodec;",
      "info" : "FieldDeclaration[1466-1669]:FieldDeclaration[1466-1669]"
    }, {
      "left" : "protected int _generatorFeatures;",
      "right" : "protected int _generatorFeatures;",
      "info" : "FieldDeclaration[1675-1928]:FieldDeclaration[1675-1928]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[1934-1960]:FieldDeclaration[1934-1960]"
    }, {
      "left" : "protected boolean _hasNativeTypeIds;",
      "right" : "protected boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[1966-2036]:FieldDeclaration[1966-2036]"
    }, {
      "left" : "protected boolean _hasNativeObjectIds;",
      "right" : "protected boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[2042-2114]:FieldDeclaration[2042-2114]"
    }, {
      "left" : "protected boolean _mayHaveNativeIds;",
      "right" : "protected boolean _mayHaveNativeIds;",
      "info" : "FieldDeclaration[2120-2190]:FieldDeclaration[2120-2190]"
    }, {
      "left" : "protected boolean _forceBigDecimal;",
      "right" : "protected boolean _forceBigDecimal;",
      "info" : "FieldDeclaration[2196-2391]:FieldDeclaration[2196-2391]"
    }, {
      "left" : "protected Segment _first;",
      "right" : "protected Segment _first;",
      "info" : "FieldDeclaration[2574-2666]:FieldDeclaration[2574-2666]"
    }, {
      "left" : "protected Segment _last;",
      "right" : "protected Segment _last;",
      "info" : "FieldDeclaration[2672-2798]:FieldDeclaration[2672-2798]"
    }, {
      "left" : "protected int _appendAt;",
      "right" : "protected int _appendAt;",
      "info" : "FieldDeclaration[2808-2884]:FieldDeclaration[2808-2884]"
    }, {
      "left" : "protected Object _typeId;",
      "right" : "protected Object _typeId;",
      "info" : "FieldDeclaration[2890-3049]:FieldDeclaration[2890-3049]"
    }, {
      "left" : "protected Object _objectId;",
      "right" : "protected Object _objectId;",
      "info" : "FieldDeclaration[3055-3218]:FieldDeclaration[3055-3218]"
    }, {
      "left" : "protected boolean _hasNativeId = false;",
      "right" : "protected boolean _hasNativeId = false;",
      "info" : "FieldDeclaration[3224-3344]:FieldDeclaration[3224-3344]"
    }, {
      "left" : "protected JsonWriteContext _writeContext;",
      "right" : "protected JsonWriteContext _writeContext;",
      "info" : "FieldDeclaration[3514-3555]:FieldDeclaration[3514-3555]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec)",
      "right" : "public TokenBuffer(ObjectCodec codec)",
      "info" : "MethodDeclaration[3723-4124]:MethodDeclaration[3723-4124]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "right" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "info" : "MethodDeclaration[4130-4941]:MethodDeclaration[4130-4941]"
    }, {
      "left" : "public TokenBuffer(JsonParser p)",
      "right" : "public TokenBuffer(JsonParser p)",
      "info" : "MethodDeclaration[4947-5044]:MethodDeclaration[4947-5044]"
    }, {
      "left" : "public TokenBuffer(JsonParser p, DeserializationContext ctxt)",
      "right" : "public TokenBuffer(JsonParser p, DeserializationContext ctxt)",
      "info" : "MethodDeclaration[5050-5727]:MethodDeclaration[5050-5727]"
    }, {
      "left" : "public TokenBuffer forceUseOfBigDecimal(boolean b)",
      "right" : "public TokenBuffer forceUseOfBigDecimal(boolean b)",
      "info" : "MethodDeclaration[5733-5876]:MethodDeclaration[5733-5876]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[5882-6002]:MethodDeclaration[5882-6002]"
    }, {
      "left" : "public JsonParser asParser()",
      "right" : "public JsonParser asParser()",
      "info" : "MethodDeclaration[6008-6524]:MethodDeclaration[6008-6524]"
    }, {
      "left" : "public JsonParser asParser(ObjectCodec codec)",
      "right" : "public JsonParser asParser(ObjectCodec codec)",
      "info" : "MethodDeclaration[6530-7208]:MethodDeclaration[6530-7208]"
    }, {
      "left" : "public JsonParser asParser(JsonParser src)",
      "right" : "public JsonParser asParser(JsonParser src)",
      "info" : "MethodDeclaration[7214-7551]:MethodDeclaration[7214-7551]"
    }, {
      "left" : "public JsonToken firstToken()",
      "right" : "public JsonToken firstToken()",
      "info" : "MethodDeclaration[7733-7866]:MethodDeclaration[7733-7866]"
    }, {
      "left" : "public TokenBuffer append(TokenBuffer other) throws IOException",
      "right" : "public TokenBuffer append(TokenBuffer other) throws IOException",
      "info" : "MethodDeclaration[8087-8904]:MethodDeclaration[8087-8904]"
    }, {
      "left" : "public void serialize(JsonGenerator gen) throws IOException",
      "right" : "public void serialize(JsonGenerator gen) throws IOException",
      "info" : "MethodDeclaration[8914-13863]:MethodDeclaration[8914-13863]"
    }, {
      "left" : "public TokenBuffer deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
      "right" : "public TokenBuffer deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
      "info" : "MethodDeclaration[13869-14837]:MethodDeclaration[13869-14837]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[14843-16422]:MethodDeclaration[14843-16422]"
    }, {
      "left" : "private final void _appendNativeIds(StringBuilder sb)",
      "right" : "private final void _appendNativeIds(StringBuilder sb)",
      "info" : "MethodDeclaration[16428-16849]:MethodDeclaration[16428-16849]"
    }, {
      "left" : "public JsonGenerator enable(Feature f)",
      "right" : "public JsonGenerator enable(Feature f)",
      "info" : "MethodDeclaration[17054-17178]:MethodDeclaration[17054-17178]"
    }, {
      "left" : "public JsonGenerator disable(Feature f)",
      "right" : "public JsonGenerator disable(Feature f)",
      "info" : "MethodDeclaration[17184-17310]:MethodDeclaration[17184-17310]"
    }, {
      "left" : "public boolean isEnabled(Feature f)",
      "right" : "public boolean isEnabled(Feature f)",
      "info" : "MethodDeclaration[17397-17510]:MethodDeclaration[17397-17510]"
    }, {
      "left" : "public int getFeatureMask()",
      "right" : "public int getFeatureMask()",
      "info" : "MethodDeclaration[17516-17600]:MethodDeclaration[17516-17600]"
    }, {
      "left" : "public JsonGenerator setFeatureMask(int mask)",
      "right" : "public JsonGenerator setFeatureMask(int mask)",
      "info" : "MethodDeclaration[17606-17729]:MethodDeclaration[17606-17729]"
    }, {
      "left" : "public JsonGenerator useDefaultPrettyPrinter()",
      "right" : "public JsonGenerator useDefaultPrettyPrinter()",
      "info" : "MethodDeclaration[17739-17862]:MethodDeclaration[17739-17862]"
    }, {
      "left" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "right" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "info" : "MethodDeclaration[17868-17983]:MethodDeclaration[17868-17983]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[17989-18057]:MethodDeclaration[17989-18057]"
    }, {
      "left" : "public final JsonWriteContext getOutputContext()",
      "right" : "public final JsonWriteContext getOutputContext()",
      "info" : "MethodDeclaration[18063-18151]:MethodDeclaration[18063-18151]"
    }, {
      "left" : "public boolean canWriteBinaryNatively()",
      "right" : "public boolean canWriteBinaryNatively()",
      "info" : "MethodDeclaration[18367-18529]:MethodDeclaration[18367-18529]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[18746-18812]:MethodDeclaration[18746-18812]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[18818-18902]:MethodDeclaration[18818-18902]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[18908-18967]:MethodDeclaration[18908-18967]"
    }, {
      "left" : "public final void writeStartArray() throws IOException",
      "right" : "public final void writeStartArray() throws IOException",
      "info" : "MethodDeclaration[19180-19365]:MethodDeclaration[19180-19365]"
    }, {
      "left" : "public final void writeEndArray() throws IOException",
      "right" : "public final void writeEndArray() throws IOException",
      "info" : "MethodDeclaration[19371-19687]:MethodDeclaration[19371-19687]"
    }, {
      "left" : "public final void writeStartObject() throws IOException",
      "right" : "public final void writeStartObject() throws IOException",
      "info" : "MethodDeclaration[19693-19881]:MethodDeclaration[19693-19881]"
    }, {
      "left" : "public final void writeEndObject() throws IOException",
      "right" : "public final void writeEndObject() throws IOException",
      "info" : "MethodDeclaration[19887-20205]:MethodDeclaration[19887-20205]"
    }, {
      "left" : "public final void writeFieldName(String name) throws IOException",
      "right" : "public final void writeFieldName(String name) throws IOException",
      "info" : "MethodDeclaration[20211-20390]:MethodDeclaration[20211-20390]"
    }, {
      "left" : "public void writeFieldName(SerializableString name) throws IOException",
      "right" : "public void writeFieldName(SerializableString name) throws IOException",
      "info" : "MethodDeclaration[20396-20592]:MethodDeclaration[20396-20592]"
    }, {
      "left" : "public void writeString(String text) throws IOException",
      "right" : "public void writeString(SerializableString text) throws IOException",
      "info" : "MethodDeclaration[20806-21014]:MethodDeclaration[21181-21406]"
    }, {
      "left" : "public void writeString(char[] text, int offset, int len) throws IOException",
      "right" : "public void writeString(char[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[21020-21170]:MethodDeclaration[21025-21175]"
    }, {
      "left" : "public void writeString(SerializableString text) throws IOException",
      "right" : "public void writeString(String text) throws IOException",
      "info" : "MethodDeclaration[21176-21396]:MethodDeclaration[20806-21019]"
    }, {
      "left" : "public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException",
      "right" : "public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException",
      "info" : "MethodDeclaration[21406-21624]:MethodDeclaration[21416-21634]"
    }, {
      "left" : "public void writeUTF8String(byte[] text, int offset, int length) throws IOException",
      "right" : "public void writeUTF8String(byte[] text, int offset, int length) throws IOException",
      "info" : "MethodDeclaration[21630-21845]:MethodDeclaration[21640-21855]"
    }, {
      "left" : "public void writeRaw(String text) throws IOException",
      "right" : "public void writeRaw(String text) throws IOException",
      "info" : "MethodDeclaration[21851-21964]:MethodDeclaration[21861-21974]"
    }, {
      "left" : "public void writeRaw(String text, int offset, int len) throws IOException",
      "right" : "public void writeRaw(String text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[21970-22104]:MethodDeclaration[21980-22114]"
    }, {
      "left" : "public void writeRaw(SerializableString text) throws IOException",
      "right" : "public void writeRaw(SerializableString text) throws IOException",
      "info" : "MethodDeclaration[22110-22235]:MethodDeclaration[22120-22245]"
    }, {
      "left" : "public void writeRaw(char[] text, int offset, int len) throws IOException",
      "right" : "public void writeRaw(char[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[22245-22379]:MethodDeclaration[22255-22389]"
    }, {
      "left" : "public void writeRaw(char c) throws IOException",
      "right" : "public void writeRaw(char c) throws IOException",
      "info" : "MethodDeclaration[22385-22493]:MethodDeclaration[22395-22503]"
    }, {
      "left" : "public void writeRawValue(String text) throws IOException",
      "right" : "public void writeRawValue(String text) throws IOException",
      "info" : "MethodDeclaration[22499-22648]:MethodDeclaration[22509-22663]"
    }, {
      "left" : "public void writeRawValue(String text, int offset, int len) throws IOException",
      "right" : "public void writeRawValue(String text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[22654-22939]:MethodDeclaration[22669-22959]"
    }, {
      "left" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
      "right" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[22945-23126]:MethodDeclaration[22965-23151]"
    }, {
      "left" : "public void writeNumber(short i) throws IOException",
      "right" : "public void writeNumber(short i) throws IOException",
      "info" : "MethodDeclaration[23344-23480]:MethodDeclaration[23369-23510]"
    }, {
      "left" : "public void writeNumber(int i) throws IOException",
      "right" : "public void writeNumber(int i) throws IOException",
      "info" : "MethodDeclaration[23486-23622]:MethodDeclaration[23516-23657]"
    }, {
      "left" : "public void writeNumber(long l) throws IOException",
      "right" : "public void writeNumber(long l) throws IOException",
      "info" : "MethodDeclaration[23628-23762]:MethodDeclaration[23663-23802]"
    }, {
      "left" : "public void writeNumber(double d) throws IOException",
      "right" : "public void writeNumber(double d) throws IOException",
      "info" : "MethodDeclaration[23768-23908]:MethodDeclaration[23808-23953]"
    }, {
      "left" : "public void writeNumber(float f) throws IOException",
      "right" : "public void writeNumber(float f) throws IOException",
      "info" : "MethodDeclaration[23914-24052]:MethodDeclaration[23959-24102]"
    }, {
      "left" : "public void writeNumber(BigDecimal dec) throws IOException",
      "right" : "public void writeNumber(BigDecimal dec) throws IOException",
      "info" : "MethodDeclaration[24058-24273]:MethodDeclaration[24108-24328]"
    }, {
      "left" : "public void writeNumber(BigInteger v) throws IOException",
      "right" : "public void writeNumber(BigInteger v) throws IOException",
      "info" : "MethodDeclaration[24279-24486]:MethodDeclaration[24334-24546]"
    }, {
      "left" : "public void writeNumber(String encodedValue) throws IOException",
      "right" : "public void writeNumber(String encodedValue) throws IOException",
      "info" : "MethodDeclaration[24492-24778]:MethodDeclaration[24552-24843]"
    }, {
      "left" : "public void writeBoolean(boolean state) throws IOException",
      "right" : "public void writeBoolean(boolean state) throws IOException",
      "info" : "MethodDeclaration[24784-24935]:MethodDeclaration[24849-25005]"
    }, {
      "left" : "public void writeNull() throws IOException",
      "right" : "public void writeNull() throws IOException",
      "info" : "MethodDeclaration[24941-25044]:MethodDeclaration[25011-25119]"
    }, {
      "left" : "public void writeObject(Object value) throws IOException",
      "right" : "public void writeObject(Object value) throws IOException",
      "info" : "MethodDeclaration[25263-26066]:MethodDeclaration[25338-26151]"
    }, {
      "left" : "public void writeTree(TreeNode node) throws IOException",
      "right" : "public void writeTree(TreeNode node) throws IOException",
      "info" : "MethodDeclaration[26072-26467]:MethodDeclaration[26157-26557]"
    }, {
      "left" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException",
      "right" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[26663-27252]:MethodDeclaration[26753-27342]"
    }, {
      "left" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "right" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "info" : "MethodDeclaration[27258-27697]:MethodDeclaration[27348-27787]"
    }, {
      "left" : "public boolean canWriteTypeId()",
      "right" : "public boolean canWriteTypeId()",
      "info" : "MethodDeclaration[27897-27984]:MethodDeclaration[27987-28074]"
    }, {
      "left" : "public boolean canWriteObjectId()",
      "right" : "public boolean canWriteObjectId()",
      "info" : "MethodDeclaration[27990-28081]:MethodDeclaration[28080-28171]"
    }, {
      "left" : "public void writeTypeId(Object id)",
      "right" : "public void writeTypeId(Object id)",
      "info" : "MethodDeclaration[28091-28198]:MethodDeclaration[28181-28288]"
    }, {
      "left" : "public void writeObjectId(Object id)",
      "right" : "public void writeObjectId(Object id)",
      "info" : "MethodDeclaration[28208-28319]:MethodDeclaration[28298-28409]"
    }, {
      "left" : "public void copyCurrentEvent(JsonParser p) throws IOException",
      "right" : "public void copyCurrentEvent(JsonParser p) throws IOException",
      "info" : "MethodDeclaration[28524-31101]:MethodDeclaration[28614-31191]"
    }, {
      "left" : "public void copyCurrentStructure(JsonParser jp) throws IOException",
      "right" : "public void copyCurrentStructure(JsonParser jp) throws IOException",
      "info" : "MethodDeclaration[31111-32213]:MethodDeclaration[31201-32303]"
    }, {
      "left" : "private final void _checkNativeIds(JsonParser jp) throws IOException",
      "right" : "private final void _checkNativeIds(JsonParser jp) throws IOException",
      "info" : "MethodDeclaration[32224-32494]:MethodDeclaration[32314-32584]"
    }, {
      "left" : "protected final void _append(JsonToken type)",
      "right" : "protected final void _append(JsonToken type)",
      "info" : "MethodDeclaration[32672-33043]:MethodDeclaration[32762-33133]"
    }, {
      "left" : "protected final void _append(JsonToken type, Object value)",
      "right" : "protected final void _append(JsonToken type, Object value)",
      "info" : "MethodDeclaration[33049-33419]:MethodDeclaration[33139-33509]"
    }, {
      "left" : "protected final void _appendRaw(int rawType, Object value)",
      "right" : "protected final void _appendRaw(int rawType, Object value)",
      "info" : "MethodDeclaration[33594-34156]:MethodDeclaration[34697-35079]"
    }, {
      "left" : "protected void _reportUnsupportedOperation()",
      "right" : "protected void _reportUnsupportedOperation()",
      "info" : "MethodDeclaration[34162-34327]:MethodDeclaration[35085-35250]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "TypeDeclaration[34507-50763]:TypeDeclaration[35430-51686]"
    }, {
      "left" : "protected ObjectCodec _codec;",
      "right" : "protected ObjectCodec _codec;",
      "info" : "FieldDeclaration[34776-34805]:FieldDeclaration[35699-35728]"
    }, {
      "left" : "protected final boolean _hasNativeTypeIds;",
      "right" : "protected final boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[34815-34903]:FieldDeclaration[35738-35826]"
    }, {
      "left" : "protected final boolean _hasNativeObjectIds;",
      "right" : "protected final boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[34913-35003]:FieldDeclaration[35836-35926]"
    }, {
      "left" : "protected final boolean _hasNativeIds;",
      "right" : "protected final boolean _hasNativeIds;",
      "info" : "FieldDeclaration[35013-35051]:FieldDeclaration[35936-35974]"
    }, {
      "left" : "protected Segment _segment;",
      "right" : "protected Segment _segment;",
      "info" : "FieldDeclaration[35254-35341]:FieldDeclaration[36177-36264]"
    }, {
      "left" : "protected int _segmentPtr;",
      "right" : "protected int _segmentPtr;",
      "info" : "FieldDeclaration[35351-35460]:FieldDeclaration[36274-36383]"
    }, {
      "left" : "protected JsonReadContext _parsingContext;",
      "right" : "protected JsonReadContext _parsingContext;",
      "info" : "FieldDeclaration[35470-35663]:FieldDeclaration[36393-36586]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[35681-35707]:FieldDeclaration[36604-36630]"
    }, {
      "left" : "protected transient ByteArrayBuilder _byteBuilder;",
      "right" : "protected transient ByteArrayBuilder _byteBuilder;",
      "info" : "FieldDeclaration[35717-35767]:FieldDeclaration[36640-36690]"
    }, {
      "left" : "protected JsonLocation _location = null;",
      "right" : "protected JsonLocation _location = null;",
      "info" : "FieldDeclaration[35777-35817]:FieldDeclaration[36700-36740]"
    }, {
      "left" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "right" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "info" : "MethodDeclaration[36025-36554]:MethodDeclaration[36948-37477]"
    }, {
      "left" : "public void setLocation(JsonLocation l)",
      "right" : "public void setLocation(JsonLocation l)",
      "info" : "MethodDeclaration[36564-36642]:MethodDeclaration[37487-37565]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[36660-36726]:MethodDeclaration[37583-37649]"
    }, {
      "left" : "public void setCodec(ObjectCodec c)",
      "right" : "public void setCodec(ObjectCodec c)",
      "info" : "MethodDeclaration[36736-36805]:MethodDeclaration[37659-37728]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[36815-36947]:MethodDeclaration[37738-37870]"
    }, {
      "left" : "public JsonToken peekNextToken() throws IOException",
      "right" : "public JsonToken peekNextToken() throws IOException",
      "info" : "MethodDeclaration[37167-37607]:MethodDeclaration[38090-38530]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[37821-37963]:MethodDeclaration[38744-38886]"
    }, {
      "left" : "public JsonToken nextToken() throws IOException",
      "right" : "public JsonToken nextToken() throws IOException",
      "info" : "MethodDeclaration[38174-39804]:MethodDeclaration[39097-40727]"
    }, {
      "left" : "public String nextFieldName() throws IOException",
      "right" : "public String nextFieldName() throws IOException",
      "info" : "MethodDeclaration[39814-40526]:MethodDeclaration[40737-41449]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[40536-40599]:MethodDeclaration[41459-41522]"
    }, {
      "left" : "public JsonStreamContext getParsingContext()",
      "right" : "public JsonStreamContext getParsingContext()",
      "info" : "MethodDeclaration[40808-40898]:MethodDeclaration[41731-41821]"
    }, {
      "left" : "public JsonLocation getTokenLocation()",
      "right" : "public JsonLocation getTokenLocation()",
      "info" : "MethodDeclaration[40908-40997]:MethodDeclaration[41831-41920]"
    }, {
      "left" : "public JsonLocation getCurrentLocation()",
      "right" : "public JsonLocation getCurrentLocation()",
      "info" : "MethodDeclaration[41007-41147]:MethodDeclaration[41930-42070]"
    }, {
      "left" : "public String getCurrentName()",
      "right" : "public String getCurrentName()",
      "info" : "MethodDeclaration[41157-41585]:MethodDeclaration[42080-42508]"
    }, {
      "left" : "public void overrideCurrentName(String name)",
      "right" : "public void overrideCurrentName(String name)",
      "info" : "MethodDeclaration[41595-42124]:MethodDeclaration[42518-43047]"
    }, {
      "left" : "public String getText()",
      "right" : "public String getText()",
      "info" : "MethodDeclaration[42351-43154]:MethodDeclaration[43274-44077]"
    }, {
      "left" : "public char[] getTextCharacters()",
      "right" : "public char[] getTextCharacters()",
      "info" : "MethodDeclaration[43164-43324]:MethodDeclaration[44087-44247]"
    }, {
      "left" : "public int getTextLength()",
      "right" : "public int getTextLength()",
      "info" : "MethodDeclaration[43334-43479]:MethodDeclaration[44257-44402]"
    }, {
      "left" : "public int getTextOffset()",
      "right" : "public int getTextOffset()",
      "info" : "MethodDeclaration[43489-43547]:MethodDeclaration[44412-44470]"
    }, {
      "left" : "public boolean hasTextCharacters()",
      "right" : "public boolean hasTextCharacters()",
      "info" : "MethodDeclaration[43557-43702]:MethodDeclaration[44480-44625]"
    }, {
      "left" : "public BigInteger getBigIntegerValue() throws IOException",
      "right" : "public BigInteger getBigIntegerValue() throws IOException",
      "info" : "MethodDeclaration[43940-44435]:MethodDeclaration[44863-45358]"
    }, {
      "left" : "public BigDecimal getDecimalValue() throws IOException",
      "right" : "public BigDecimal getDecimalValue() throws IOException",
      "info" : "MethodDeclaration[44445-45023]:MethodDeclaration[45368-45946]"
    }, {
      "left" : "public double getDoubleValue() throws IOException",
      "right" : "public double getDoubleValue() throws IOException",
      "info" : "MethodDeclaration[45033-45163]:MethodDeclaration[45956-46086]"
    }, {
      "left" : "public float getFloatValue() throws IOException",
      "right" : "public float getFloatValue() throws IOException",
      "info" : "MethodDeclaration[45173-45300]:MethodDeclaration[46096-46223]"
    }, {
      "left" : "public int getIntValue() throws IOException",
      "right" : "public int getIntValue() throws IOException",
      "info" : "MethodDeclaration[45310-45613]:MethodDeclaration[46233-46536]"
    }, {
      "left" : "public long getLongValue() throws IOException",
      "right" : "public long getLongValue() throws IOException",
      "info" : "MethodDeclaration[45623-45747]:MethodDeclaration[46546-46670]"
    }, {
      "left" : "public NumberType getNumberType() throws IOException",
      "right" : "public NumberType getNumberType() throws IOException",
      "info" : "MethodDeclaration[45757-46385]:MethodDeclaration[46680-47308]"
    }, {
      "left" : "public final Number getNumberValue() throws IOException",
      "right" : "public final Number getNumberValue() throws IOException",
      "info" : "MethodDeclaration[46395-47367]:MethodDeclaration[47318-48290]"
    }, {
      "left" : "public Object getEmbeddedObject()",
      "right" : "public Object getEmbeddedObject()",
      "info" : "MethodDeclaration[47595-47811]:MethodDeclaration[48518-48734]"
    }, {
      "left" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "right" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "info" : "MethodDeclaration[47821-49039]:MethodDeclaration[48744-49962]"
    }, {
      "left" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out) throws IOException",
      "right" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out) throws IOException",
      "info" : "MethodDeclaration[49049-49383]:MethodDeclaration[49972-50306]"
    }, {
      "left" : "public boolean canReadObjectId()",
      "right" : "public boolean canReadObjectId()",
      "info" : "MethodDeclaration[49587-49689]:MethodDeclaration[50510-50612]"
    }, {
      "left" : "public boolean canReadTypeId()",
      "right" : "public boolean canReadTypeId()",
      "info" : "MethodDeclaration[49699-49797]:MethodDeclaration[50622-50720]"
    }, {
      "left" : "public Object getTypeId()",
      "right" : "public Object getTypeId()",
      "info" : "MethodDeclaration[49807-49915]:MethodDeclaration[50730-50838]"
    }, {
      "left" : "public Object getObjectId()",
      "right" : "public Object getObjectId()",
      "info" : "MethodDeclaration[49925-50037]:MethodDeclaration[50848-50960]"
    }, {
      "left" : "protected final Object _currentObject()",
      "right" : "protected final Object _currentObject()",
      "info" : "MethodDeclaration[50243-50340]:MethodDeclaration[51166-51263]"
    }, {
      "left" : "protected final void _checkIsNumber() throws JsonParseException",
      "right" : "protected final void _checkIsNumber() throws JsonParseException",
      "info" : "MethodDeclaration[50350-50634]:MethodDeclaration[51273-51557]"
    }, {
      "left" : "protected void _handleEOF() throws JsonParseException",
      "right" : "protected void _handleEOF() throws JsonParseException",
      "info" : "MethodDeclaration[50644-50757]:MethodDeclaration[51567-51680]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "TypeDeclaration[50773-58644]:TypeDeclaration[51696-59567]"
    }, {
      "left" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "right" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "info" : "FieldDeclaration[51166-51214]:FieldDeclaration[52089-52137]"
    }, {
      "left" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "right" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "info" : "FieldDeclaration[51232-51433]:FieldDeclaration[52155-52356]"
    }, {
      "left" : "protected Segment _next;",
      "right" : "protected Segment _next;",
      "info" : "FieldDeclaration[51828-51852]:FieldDeclaration[52751-52775]"
    }, {
      "left" : "protected long _tokenTypes;",
      "right" : "protected long _tokenTypes;",
      "info" : "FieldDeclaration[51894-52072]:FieldDeclaration[52817-52995]"
    }, {
      "left" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "right" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "info" : "FieldDeclaration[52117-52183]:FieldDeclaration[53040-53106]"
    }, {
      "left" : "protected TreeMap<Integer,Object> _nativeIds;",
      "right" : "protected TreeMap<Integer,Object> _nativeIds;",
      "info" : "FieldDeclaration[52193-52343]:FieldDeclaration[53116-53266]"
    }, {
      "left" : "public Segment()",
      "right" : "public Segment()",
      "info" : "MethodDeclaration[52361-52381]:MethodDeclaration[53284-53304]"
    }, {
      "left" : "public JsonToken type(int index)",
      "right" : "public JsonToken type(int index)",
      "info" : "MethodDeclaration[52419-52667]:MethodDeclaration[53342-53590]"
    }, {
      "left" : "public int rawType(int index)",
      "right" : "public int rawType(int index)",
      "info" : "MethodDeclaration[52677-52900]:MethodDeclaration[53600-53823]"
    }, {
      "left" : "public Object get(int index)",
      "right" : "public Object get(int index)",
      "info" : "MethodDeclaration[52918-52993]:MethodDeclaration[53841-53916]"
    }, {
      "left" : "public Segment next()",
      "right" : "public Segment next()",
      "info" : "MethodDeclaration[53003-53042]:MethodDeclaration[53926-53965]"
    }, {
      "left" : "public boolean hasIds()",
      "right" : "public boolean hasIds()",
      "info" : "MethodDeclaration[53052-53251]:MethodDeclaration[53975-54174]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType)",
      "right" : "public Segment append(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[53304-53603]:MethodDeclaration[54227-54526]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[53613-53996]:MethodDeclaration[54536-54919]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[54006-54333]:MethodDeclaration[54929-55256]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[54343-54754]:MethodDeclaration[55266-55677]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[54764-55097]:MethodDeclaration[55687-56020]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[55107-55524]:MethodDeclaration[56030-56447]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType)",
      "right" : "private void set(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[55534-55942]:MethodDeclaration[56457-56865]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[55952-56294]:MethodDeclaration[56875-57217]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value)",
      "right" : "private void set(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[56304-56594]:MethodDeclaration[57227-57517]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[56604-56996]:MethodDeclaration[57527-57919]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value)",
      "right" : "private void set(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[57006-57293]:MethodDeclaration[57929-58216]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "right" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[57303-57676]:MethodDeclaration[58226-58599]"
    }, {
      "left" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "right" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[57686-58119]:MethodDeclaration[58609-59042]"
    }, {
      "left" : "public Object findObjectId(int index)",
      "right" : "public Object findObjectId(int index)",
      "info" : "MethodDeclaration[58129-58312]:MethodDeclaration[59052-59235]"
    }, {
      "left" : "public Object findTypeId(int index)",
      "right" : "public Object findTypeId(int index)",
      "info" : "MethodDeclaration[58330-58509]:MethodDeclaration[59253-59432]"
    }, {
      "left" : "private final int _typeIdIndex(int i)",
      "right" : "private final int _typeIdIndex(int i)",
      "info" : "MethodDeclaration[58519-58572]:MethodDeclaration[59442-59495]"
    }, {
      "left" : "private final int _objectIdIndex(int i)",
      "right" : "private final int _objectIdIndex(int i)",
      "info" : "MethodDeclaration[58581-58638]:MethodDeclaration[59504-59561]"
    } ],
    "mappings" : [
 {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[1179-1192]:SimpleType[1179-1192]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[4035-4046]:MarkerAnnotation[4035-4046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4051-4057]:Modifier[4051-4057]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[4058-4069]:SimpleName[4058-4069]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[4070-4087]:SingleVariableDeclaration[4070-4087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4089-4124]:Block[4089-4124]"
    }, {
      "left" : "this(codec, false);",
      "right" : "this(codec, false);",
      "info" : "ConstructorInvocation[4099-4118]:ConstructorInvocation[4099-4118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4453-4459]:Modifier[4453-4459]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[4460-4471]:SimpleName[4460-4471]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[4472-4489]:SingleVariableDeclaration[4472-4489]"
    }, {
      "left" : "boolean hasNativeIds",
      "right" : "boolean hasNativeIds",
      "info" : "SingleVariableDeclaration[4491-4511]:SingleVariableDeclaration[4491-4511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4517-4941]:Block[4517-4941]"
    }, {
      "left" : "_objectCodec = codec;",
      "right" : "_objectCodec = codec;",
      "info" : "ExpressionStatement[4527-4548]:ExpressionStatement[4527-4548]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[4557-4605]:ExpressionStatement[4557-4605]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[4614-4671]:ExpressionStatement[4614-4671]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[4725-4756]:ExpressionStatement[4725-4756]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[4765-4779]:ExpressionStatement[4765-4779]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeIds;",
      "right" : "_hasNativeTypeIds = hasNativeIds;",
      "info" : "ExpressionStatement[4788-4821]:ExpressionStatement[4788-4821]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeIds;",
      "right" : "_hasNativeObjectIds = hasNativeIds;",
      "info" : "ExpressionStatement[4830-4865]:ExpressionStatement[4830-4865]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[4875-4935]:ExpressionStatement[4875-4935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4981-4987]:Modifier[4981-4987]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[4988-4999]:SimpleName[4988-4999]"
    }, {
      "left" : "JsonParser p",
      "right" : "JsonParser p",
      "info" : "SingleVariableDeclaration[5000-5012]:SingleVariableDeclaration[5000-5012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5014-5044]:Block[5014-5044]"
    }, {
      "left" : "this(p, null);",
      "right" : "this(p, null);",
      "info" : "ConstructorInvocation[5024-5038]:ConstructorInvocation[5024-5038]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5084-5090]:Modifier[5084-5090]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[5091-5102]:SimpleName[5091-5102]"
    }, {
      "left" : "JsonParser p",
      "right" : "JsonParser p",
      "info" : "SingleVariableDeclaration[5103-5115]:SingleVariableDeclaration[5103-5115]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[5117-5144]:SingleVariableDeclaration[5117-5144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5150-5727]:Block[5150-5727]"
    }, {
      "left" : "_objectCodec = p.getCodec();",
      "right" : "_objectCodec = p.getCodec();",
      "info" : "ExpressionStatement[5160-5188]:ExpressionStatement[5160-5188]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[5197-5245]:ExpressionStatement[5197-5245]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[5254-5311]:ExpressionStatement[5254-5311]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[5365-5396]:ExpressionStatement[5365-5396]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[5405-5419]:ExpressionStatement[5405-5419]"
    }, {
      "left" : "_hasNativeTypeIds = p.canReadTypeId();",
      "right" : "_hasNativeTypeIds = p.canReadTypeId();",
      "info" : "ExpressionStatement[5428-5466]:ExpressionStatement[5428-5466]"
    }, {
      "left" : "_hasNativeObjectIds = p.canReadObjectId();",
      "right" : "_hasNativeObjectIds = p.canReadObjectId();",
      "info" : "ExpressionStatement[5475-5517]:ExpressionStatement[5475-5517]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[5526-5586]:ExpressionStatement[5526-5586]"
    }, {
      "left" : "_forceBigDecimal = (ctxt == null) ? false\n                : ctxt.isEnabled(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);",
      "right" : "_forceBigDecimal = (ctxt == null) ? false\n                : ctxt.isEnabled(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);",
      "info" : "ExpressionStatement[5595-5721]:ExpressionStatement[5595-5721]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5767-5773]:Modifier[5767-5773]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleType[5774-5785]:SimpleType[5774-5785]"
    }, {
      "left" : "forceUseOfBigDecimal",
      "right" : "forceUseOfBigDecimal",
      "info" : "SimpleName[5786-5806]:SimpleName[5786-5806]"
    }, {
      "left" : "boolean b",
      "right" : "boolean b",
      "info" : "SingleVariableDeclaration[5807-5816]:SingleVariableDeclaration[5807-5816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5818-5876]:Block[5818-5876]"
    }, {
      "left" : "_forceBigDecimal = b;",
      "right" : "_forceBigDecimal = b;",
      "info" : "ExpressionStatement[5828-5849]:ExpressionStatement[5828-5849]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5858-5870]:ReturnStatement[5858-5870]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5882-5891]:MarkerAnnotation[5882-5891]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5896-5902]:Modifier[5896-5902]"
    }, {
      "left" : "Version",
      "right" : "Version",
      "info" : "SimpleType[5903-5910]:SimpleType[5903-5910]"
    }, {
      "left" : "version",
      "right" : "version",
      "info" : "SimpleName[5911-5918]:SimpleName[5911-5918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5921-6002]:Block[5921-6002]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[5931-5996]:ReturnStatement[5931-5996]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6445-6451]:Modifier[6445-6451]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[6452-6462]:SimpleType[6452-6462]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[6463-6471]:SimpleName[6463-6471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6478-6524]:Block[6478-6524]"
    }, {
      "left" : "return asParser(_objectCodec);",
      "right" : "return asParser(_objectCodec);",
      "info" : "ReturnStatement[6488-6518]:ReturnStatement[6488-6518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7069-7075]:Modifier[7069-7075]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[7076-7086]:SimpleType[7076-7086]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[7087-7095]:SimpleName[7087-7095]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[7096-7113]:SingleVariableDeclaration[7096-7113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7119-7208]:Block[7119-7208]"
    }, {
      "left" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "ReturnStatement[7129-7202]:ReturnStatement[7129-7202]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7337-7343]:Modifier[7337-7343]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[7344-7354]:SimpleType[7344-7354]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[7355-7363]:SimpleName[7355-7363]"
    }, {
      "left" : "JsonParser src",
      "right" : "JsonParser src",
      "info" : "SingleVariableDeclaration[7364-7378]:SingleVariableDeclaration[7364-7378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7384-7551]:Block[7384-7551]"
    }, {
      "left" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "VariableDeclarationStatement[7394-7480]:VariableDeclarationStatement[7394-7480]"
    }, {
      "left" : "p.setLocation(src.getTokenLocation());",
      "right" : "p.setLocation(src.getTokenLocation());",
      "info" : "ExpressionStatement[7489-7527]:ExpressionStatement[7489-7527]"
    }, {
      "left" : "return p;",
      "right" : "return p;",
      "info" : "ReturnStatement[7536-7545]:ReturnStatement[7536-7545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7733-7739]:Modifier[7733-7739]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[7740-7749]:SimpleType[7740-7749]"
    }, {
      "left" : "firstToken",
      "right" : "firstToken",
      "info" : "SimpleName[7750-7760]:SimpleName[7750-7760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7763-7866]:Block[7763-7866]"
    }, {
      "left" : "if (_first != null)",
      "right" : "if (_first != null)",
      "info" : "IfStatement[7773-7839]:IfStatement[7773-7839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7793-7839]:Block[7793-7839]"
    }, {
      "left" : "return _first.type(0);",
      "right" : "return _first.type(0);",
      "info" : "ReturnStatement[7807-7829]:ReturnStatement[7807-7829]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7848-7860]:ReturnStatement[7848-7860]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[8298-8327]:SingleMemberAnnotation[8298-8327]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8332-8338]:Modifier[8332-8338]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleType[8339-8350]:SimpleType[8339-8350]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[8351-8357]:SimpleName[8351-8357]"
    }, {
      "left" : "TokenBuffer other",
      "right" : "TokenBuffer other",
      "info" : "SingleVariableDeclaration[8358-8375]:SingleVariableDeclaration[8358-8375]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8384-8395]:SimpleType[8384-8395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8400-8904]:Block[8400-8904]"
    }, {
      "left" : "if (!_hasNativeTypeIds)",
      "right" : "if (!_hasNativeTypeIds)",
      "info" : "IfStatement[8472-8565]:IfStatement[8472-8565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8496-8565]:Block[8496-8565]"
    }, {
      "left" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "right" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "info" : "ExpressionStatement[8512-8555]:ExpressionStatement[8512-8555]"
    }, {
      "left" : "if (!_hasNativeObjectIds)",
      "right" : "if (!_hasNativeObjectIds)",
      "info" : "IfStatement[8574-8671]:IfStatement[8574-8671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8600-8671]:Block[8600-8671]"
    }, {
      "left" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "right" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "info" : "ExpressionStatement[8614-8661]:ExpressionStatement[8614-8661]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[8680-8740]:ExpressionStatement[8680-8740]"
    }, {
      "left" : "JsonParser p = other.asParser();",
      "right" : "JsonParser p = other.asParser();",
      "info" : "VariableDeclarationStatement[8758-8790]:VariableDeclarationStatement[8758-8790]"
    }, {
      "left" : "while (p.nextToken() != null)",
      "right" : "while (p.nextToken() != null)",
      "info" : "WhileStatement[8799-8877]:WhileStatement[8799-8877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8829-8877]:Block[8829-8877]"
    }, {
      "left" : "copyCurrentStructure(p);",
      "right" : "copyCurrentStructure(p);",
      "info" : "ExpressionStatement[8843-8867]:ExpressionStatement[8843-8867]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8886-8898]:ReturnStatement[8886-8898]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9313-9319]:Modifier[9313-9319]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9320-9324]:PrimitiveType[9320-9324]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[9325-9334]:SimpleName[9325-9334]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[9335-9352]:SingleVariableDeclaration[9335-9352]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9361-9372]:SimpleType[9361-9372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9377-13863]:Block[9377-13863]"
    }, {
      "left" : "Segment segment = _first;",
      "right" : "Segment segment = _first;",
      "info" : "VariableDeclarationStatement[9387-9412]:VariableDeclarationStatement[9387-9412]"
    }, {
      "left" : "int ptr = -1;",
      "right" : "int ptr = -1;",
      "info" : "VariableDeclarationStatement[9421-9434]:VariableDeclarationStatement[9421-9434]"
    }, {
      "left" : "final boolean checkIds = _mayHaveNativeIds;",
      "right" : "final boolean checkIds = _mayHaveNativeIds;",
      "info" : "VariableDeclarationStatement[9444-9487]:VariableDeclarationStatement[9444-9487]"
    }, {
      "left" : "boolean hasIds = checkIds && (segment.hasIds());",
      "right" : "boolean hasIds = checkIds && (segment.hasIds());",
      "info" : "VariableDeclarationStatement[9496-9544]:VariableDeclarationStatement[9496-9544]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[9554-13857]:WhileStatement[9554-13857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9567-13857]:Block[9567-13857]"
    }, {
      "left" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[9581-9805]:IfStatement[9581-9805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9622-9805]:Block[9622-9805]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[9640-9648]:ExpressionStatement[9640-9648]"
    }, {
      "left" : "segment = segment.next();",
      "right" : "segment = segment.next();",
      "info" : "ExpressionStatement[9665-9690]:ExpressionStatement[9665-9690]"
    }, {
      "left" : "if (segment == null)",
      "right" : "if (segment == null)",
      "info" : "IfStatement[9707-9734]:IfStatement[9707-9734]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9728-9734]:BreakStatement[9728-9734]"
    }, {
      "left" : "hasIds = checkIds && (segment.hasIds());",
      "right" : "hasIds = checkIds && (segment.hasIds());",
      "info" : "ExpressionStatement[9751-9791]:ExpressionStatement[9751-9791]"
    }, {
      "left" : "JsonToken t = segment.type(ptr);",
      "right" : "JsonToken t = segment.type(ptr);",
      "info" : "VariableDeclarationStatement[9818-9850]:VariableDeclarationStatement[9818-9850]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[9863-9884]:IfStatement[9863-9884]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9878-9884]:BreakStatement[9878-9884]"
    }, {
      "left" : "if (hasIds)",
      "right" : "if (hasIds)",
      "info" : "IfStatement[9898-10214]:IfStatement[9898-10214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9910-10214]:Block[9910-10214]"
    }, {
      "left" : "Object id = segment.findObjectId(ptr);",
      "right" : "Object id = segment.findObjectId(ptr);",
      "info" : "VariableDeclarationStatement[9928-9966]:VariableDeclarationStatement[9928-9966]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[9983-10061]:IfStatement[9983-10061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9999-10061]:Block[9999-10061]"
    }, {
      "left" : "gen.writeObjectId(id);",
      "right" : "gen.writeObjectId(id);",
      "info" : "ExpressionStatement[10021-10043]:ExpressionStatement[10021-10043]"
    }, {
      "left" : "id = segment.findTypeId(ptr);",
      "right" : "id = segment.findTypeId(ptr);",
      "info" : "ExpressionStatement[10078-10107]:ExpressionStatement[10078-10107]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[10124-10200]:IfStatement[10124-10200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10140-10200]:Block[10140-10200]"
    }, {
      "left" : "gen.writeTypeId(id);",
      "right" : "gen.writeTypeId(id);",
      "info" : "ExpressionStatement[10162-10182]:ExpressionStatement[10162-10182]"
    }, {
      "left" : "switch (t) {\n            case START_OBJECT:\n                gen.writeStartObject();\n                break;\n            case END_OBJECT:\n                gen.writeEndObject();\n                break;\n            case START_ARRAY:\n                gen.writeStartArray();\n                break;\n            case END_ARRAY:\n                gen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    gen.writeFieldName((SerializableString) ob);\n                } else {\n                    gen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        gen.writeString((SerializableString) ob);\n                    } else {\n                        gen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        gen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        gen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        gen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        gen.writeNumber((Short) n);\n                    } else {\n                        gen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        gen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        gen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        gen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        gen.writeNull();\n                    } else if (n instanceof String) {\n                        gen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                gen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                gen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                gen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                {\n                    Object value = segment.get(ptr);\n                    if (value instanceof RawValue) {\n                        ((RawValue) value).serialize(gen);\n                    } else {\n                        gen.writeObject(value);\n                    }\n                }\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "right" : "switch (t) {\n            case START_OBJECT:\n                gen.writeStartObject();\n                break;\n            case END_OBJECT:\n                gen.writeEndObject();\n                break;\n            case START_ARRAY:\n                gen.writeStartArray();\n                break;\n            case END_ARRAY:\n                gen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    gen.writeFieldName((SerializableString) ob);\n                } else {\n                    gen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        gen.writeString((SerializableString) ob);\n                    } else {\n                        gen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        gen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        gen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        gen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        gen.writeNumber((Short) n);\n                    } else {\n                        gen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        gen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        gen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        gen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        gen.writeNull();\n                    } else if (n instanceof String) {\n                        gen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                gen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                gen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                gen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                {\n                    Object value = segment.get(ptr);\n                    if (value instanceof RawValue) {\n                        ((RawValue) value).serialize(gen);\n                    } else {\n                        gen.writeObject(value);\n                    }\n                }\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "info" : "SwitchStatement[10295-13847]:SwitchStatement[10295-13847]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[10320-10338]:SwitchCase[10320-10338]"
    }, {
      "left" : "gen.writeStartObject();",
      "right" : "gen.writeStartObject();",
      "info" : "ExpressionStatement[10355-10378]:ExpressionStatement[10355-10378]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10395-10401]:BreakStatement[10395-10401]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[10414-10430]:SwitchCase[10414-10430]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[10447-10468]:ExpressionStatement[10447-10468]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10485-10491]:BreakStatement[10485-10491]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[10504-10521]:SwitchCase[10504-10521]"
    }, {
      "left" : "gen.writeStartArray();",
      "right" : "gen.writeStartArray();",
      "info" : "ExpressionStatement[10538-10560]:ExpressionStatement[10538-10560]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10577-10583]:BreakStatement[10577-10583]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[10596-10611]:SwitchCase[10596-10611]"
    }, {
      "left" : "gen.writeEndArray();",
      "right" : "gen.writeEndArray();",
      "info" : "ExpressionStatement[10628-10648]:ExpressionStatement[10628-10648]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10665-10671]:BreakStatement[10665-10671]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[10684-10700]:SwitchCase[10684-10700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10713-11098]:Block[10713-11098]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[10838-10867]:VariableDeclarationStatement[10838-10867]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[10884-11084]:IfStatement[10884-11084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10922-11006]:Block[10922-11006]"
    }, {
      "left" : "gen.writeFieldName((SerializableString) ob);",
      "right" : "gen.writeFieldName((SerializableString) ob);",
      "info" : "ExpressionStatement[10944-10988]:ExpressionStatement[10944-10988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11012-11084]:Block[11012-11084]"
    }, {
      "left" : "gen.writeFieldName((String) ob);",
      "right" : "gen.writeFieldName((String) ob);",
      "info" : "ExpressionStatement[11034-11066]:ExpressionStatement[11034-11066]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11115-11121]:BreakStatement[11115-11121]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[11134-11152]:SwitchCase[11134-11152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11169-11469]:Block[11169-11469]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11191-11220]:VariableDeclarationStatement[11191-11220]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[11241-11451]:IfStatement[11241-11451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11279-11368]:Block[11279-11368]"
    }, {
      "left" : "gen.writeString((SerializableString) ob);",
      "right" : "gen.writeString((SerializableString) ob);",
      "info" : "ExpressionStatement[11305-11346]:ExpressionStatement[11305-11346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11374-11451]:Block[11374-11451]"
    }, {
      "left" : "gen.writeString((String) ob);",
      "right" : "gen.writeString((String) ob);",
      "info" : "ExpressionStatement[11400-11429]:ExpressionStatement[11400-11429]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11486-11492]:BreakStatement[11486-11492]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[11505-11527]:SwitchCase[11505-11527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11544-12154]:Block[11544-12154]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11566-11594]:VariableDeclarationStatement[11566-11594]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[11615-12136]:IfStatement[11615-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11641-11718]:Block[11641-11718]"
    }, {
      "left" : "gen.writeNumber((Integer) n);",
      "right" : "gen.writeNumber((Integer) n);",
      "info" : "ExpressionStatement[11667-11696]:ExpressionStatement[11667-11696]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[11724-12136]:IfStatement[11724-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11753-11833]:Block[11753-11833]"
    }, {
      "left" : "gen.writeNumber((BigInteger) n);",
      "right" : "gen.writeNumber((BigInteger) n);",
      "info" : "ExpressionStatement[11779-11811]:ExpressionStatement[11779-11811]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[11839-12136]:IfStatement[11839-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11862-11936]:Block[11862-11936]"
    }, {
      "left" : "gen.writeNumber((Long) n);",
      "right" : "gen.writeNumber((Long) n);",
      "info" : "ExpressionStatement[11888-11914]:ExpressionStatement[11888-11914]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[11942-12136]:IfStatement[11942-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11966-12041]:Block[11966-12041]"
    }, {
      "left" : "gen.writeNumber((Short) n);",
      "right" : "gen.writeNumber((Short) n);",
      "info" : "ExpressionStatement[11992-12019]:ExpressionStatement[11992-12019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12047-12136]:Block[12047-12136]"
    }, {
      "left" : "gen.writeNumber(((Number) n).intValue());",
      "right" : "gen.writeNumber(((Number) n).intValue());",
      "info" : "ExpressionStatement[12073-12114]:ExpressionStatement[12073-12114]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12171-12177]:BreakStatement[12171-12177]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[12190-12214]:SwitchCase[12190-12214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12231-13049]:Block[12231-13049]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[12253-12281]:VariableDeclarationStatement[12253-12281]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[12302-13031]:IfStatement[12302-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12327-12419]:Block[12327-12419]"
    }, {
      "left" : "gen.writeNumber(((Double) n).doubleValue());",
      "right" : "gen.writeNumber(((Double) n).doubleValue());",
      "info" : "ExpressionStatement[12353-12397]:ExpressionStatement[12353-12397]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[12425-13031]:IfStatement[12425-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12454-12534]:Block[12454-12534]"
    }, {
      "left" : "gen.writeNumber((BigDecimal) n);",
      "right" : "gen.writeNumber((BigDecimal) n);",
      "info" : "ExpressionStatement[12480-12512]:ExpressionStatement[12480-12512]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[12540-13031]:IfStatement[12540-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12564-12654]:Block[12564-12654]"
    }, {
      "left" : "gen.writeNumber(((Float) n).floatValue());",
      "right" : "gen.writeNumber(((Float) n).floatValue());",
      "info" : "ExpressionStatement[12590-12632]:ExpressionStatement[12590-12632]"
    }, {
      "left" : "if (n == null)",
      "right" : "if (n == null)",
      "info" : "IfStatement[12660-13031]:IfStatement[12660-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12675-12739]:Block[12675-12739]"
    }, {
      "left" : "gen.writeNull();",
      "right" : "gen.writeNull();",
      "info" : "ExpressionStatement[12701-12717]:ExpressionStatement[12701-12717]"
    }, {
      "left" : "if (n instanceof String)",
      "right" : "if (n instanceof String)",
      "info" : "IfStatement[12745-13031]:IfStatement[12745-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12770-12846]:Block[12770-12846]"
    }, {
      "left" : "gen.writeNumber((String) n);",
      "right" : "gen.writeNumber((String) n);",
      "info" : "ExpressionStatement[12796-12824]:ExpressionStatement[12796-12824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12852-13031]:Block[12852-13031]"
    }, {
      "left" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "right" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "info" : "ThrowStatement[12878-13009]:ThrowStatement[12878-13009]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13066-13072]:BreakStatement[13066-13072]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[13085-13101]:SwitchCase[13085-13101]"
    }, {
      "left" : "gen.writeBoolean(true);",
      "right" : "gen.writeBoolean(true);",
      "info" : "ExpressionStatement[13118-13141]:ExpressionStatement[13118-13141]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13158-13164]:BreakStatement[13158-13164]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[13177-13194]:SwitchCase[13177-13194]"
    }, {
      "left" : "gen.writeBoolean(false);",
      "right" : "gen.writeBoolean(false);",
      "info" : "ExpressionStatement[13211-13235]:ExpressionStatement[13211-13235]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13252-13258]:BreakStatement[13252-13258]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[13271-13287]:SwitchCase[13271-13287]"
    }, {
      "left" : "gen.writeNull();",
      "right" : "gen.writeNull();",
      "info" : "ExpressionStatement[13304-13320]:ExpressionStatement[13304-13320]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13337-13343]:BreakStatement[13337-13343]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[13356-13383]:SwitchCase[13356-13383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13400-13683]:Block[13400-13683]"
    }, {
      "left" : "Object value = segment.get(ptr);",
      "right" : "Object value = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[13422-13454]:VariableDeclarationStatement[13422-13454]"
    }, {
      "left" : "if (value instanceof RawValue)",
      "right" : "if (value instanceof RawValue)",
      "info" : "IfStatement[13475-13665]:IfStatement[13475-13665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13506-13588]:Block[13506-13588]"
    }, {
      "left" : "((RawValue) value).serialize(gen);",
      "right" : "((RawValue) value).serialize(gen);",
      "info" : "ExpressionStatement[13532-13566]:ExpressionStatement[13532-13566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13594-13665]:Block[13594-13665]"
    }, {
      "left" : "gen.writeObject(value);",
      "right" : "gen.writeObject(value);",
      "info" : "ExpressionStatement[13620-13643]:ExpressionStatement[13620-13643]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13700-13706]:BreakStatement[13700-13706]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[13719-13727]:SwitchCase[13719-13727]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[13744-13833]:ThrowStatement[13744-13833]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13963-13969]:Modifier[13963-13969]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleType[13970-13981]:SimpleType[13970-13981]"
    }, {
      "left" : "deserialize",
      "right" : "deserialize",
      "info" : "SimpleName[13982-13993]:SimpleName[13982-13993]"
    }, {
      "left" : "JsonParser p",
      "right" : "JsonParser p",
      "info" : "SingleVariableDeclaration[13994-14006]:SingleVariableDeclaration[13994-14006]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[14008-14035]:SingleVariableDeclaration[14008-14035]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[14044-14055]:SimpleType[14044-14055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14060-14837]:Block[14060-14837]"
    }, {
      "left" : "if (p.getCurrentTokenId() != JsonToken.FIELD_NAME.id())",
      "right" : "if (p.getCurrentTokenId() != JsonToken.FIELD_NAME.id())",
      "info" : "IfStatement[14070-14199]:IfStatement[14070-14199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14126-14199]:Block[14126-14199]"
    }, {
      "left" : "copyCurrentStructure(p);",
      "right" : "copyCurrentStructure(p);",
      "info" : "ExpressionStatement[14140-14164]:ExpressionStatement[14140-14164]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14177-14189]:ReturnStatement[14177-14189]"
    }, {
      "left" : "JsonToken t;",
      "right" : "JsonToken t;",
      "info" : "VariableDeclarationStatement[14452-14464]:VariableDeclarationStatement[14452-14464]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[14473-14492]:ExpressionStatement[14473-14492]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[14501-14605]:DoStatement[14501-14605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14504-14552]:Block[14504-14552]"
    }, {
      "left" : "copyCurrentStructure(p);",
      "right" : "copyCurrentStructure(p);",
      "info" : "ExpressionStatement[14518-14542]:ExpressionStatement[14518-14542]"
    }, {
      "left" : "if (t != JsonToken.END_OBJECT)",
      "right" : "if (t != JsonToken.END_OBJECT)",
      "info" : "IfStatement[14614-14784]:IfStatement[14614-14784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14645-14784]:Block[14645-14784]"
    }, {
      "left" : "throw ctxt.mappingException(\"Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got \"+t);",
      "right" : "throw ctxt.mappingException(\"Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got \"+t);",
      "info" : "ThrowStatement[14659-14774]:ThrowStatement[14659-14774]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[14793-14810]:ExpressionStatement[14793-14810]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14819-14831]:ReturnStatement[14819-14831]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14843-14852]:MarkerAnnotation[14843-14852]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[14857-14886]:SingleMemberAnnotation[14857-14886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14891-14897]:Modifier[14891-14897]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14898-14904]:SimpleType[14898-14904]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[14905-14913]:SimpleName[14905-14913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14920-16422]:Block[14920-16422]"
    }, {
      "left" : "final int MAX_COUNT = 100;",
      "right" : "final int MAX_COUNT = 100;",
      "info" : "VariableDeclarationStatement[14979-15005]:VariableDeclarationStatement[14979-15005]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[15015-15054]:VariableDeclarationStatement[15015-15054]"
    }, {
      "left" : "sb.append(\"[TokenBuffer: \");",
      "right" : "sb.append(\"[TokenBuffer: \");",
      "info" : "ExpressionStatement[15063-15091]:ExpressionStatement[15063-15091]"
    }, {
      "left" : "JsonParser jp = asParser();",
      "right" : "JsonParser jp = asParser();",
      "info" : "VariableDeclarationStatement[15262-15289]:VariableDeclarationStatement[15262-15289]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[15298-15312]:VariableDeclarationStatement[15298-15312]"
    }, {
      "left" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "right" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "info" : "VariableDeclarationStatement[15321-15391]:VariableDeclarationStatement[15321-15391]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[15401-16230]:WhileStatement[15401-16230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15414-16230]:Block[15414-16230]"
    }, {
      "left" : "JsonToken t;",
      "right" : "JsonToken t;",
      "info" : "VariableDeclarationStatement[15428-15440]:VariableDeclarationStatement[15428-15440]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[15453-16199]:TryStatement[15453-16199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15457-16083]:Block[15457-16083]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[15475-15494]:ExpressionStatement[15475-15494]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[15511-15532]:IfStatement[15511-15532]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[15526-15532]:BreakStatement[15526-15532]"
    }, {
      "left" : "if (hasNativeIds)",
      "right" : "if (hasNativeIds)",
      "info" : "IfStatement[15550-15629]:IfStatement[15550-15629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15568-15629]:Block[15568-15629]"
    }, {
      "left" : "_appendNativeIds(sb);",
      "right" : "_appendNativeIds(sb);",
      "info" : "ExpressionStatement[15590-15611]:ExpressionStatement[15590-15611]"
    }, {
      "left" : "if (count < MAX_COUNT)",
      "right" : "if (count < MAX_COUNT)",
      "info" : "IfStatement[15671-16069]:IfStatement[15671-16069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15694-16069]:Block[15694-16069]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[15716-15795]:IfStatement[15716-15795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15731-15795]:Block[15731-15795]"
    }, {
      "left" : "sb.append(\", \");",
      "right" : "sb.append(\", \");",
      "info" : "ExpressionStatement[15757-15773]:ExpressionStatement[15757-15773]"
    }, {
      "left" : "sb.append(t.toString());",
      "right" : "sb.append(t.toString());",
      "info" : "ExpressionStatement[15816-15840]:ExpressionStatement[15816-15840]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[15861-16051]:IfStatement[15861-16051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15892-16051]:Block[15892-16051]"
    }, {
      "left" : "sb.append('(');",
      "right" : "sb.append('(');",
      "info" : "ExpressionStatement[15918-15933]:ExpressionStatement[15918-15933]"
    }, {
      "left" : "sb.append(jp.getCurrentName());",
      "right" : "sb.append(jp.getCurrentName());",
      "info" : "ExpressionStatement[15958-15989]:ExpressionStatement[15958-15989]"
    }, {
      "left" : "sb.append(')');",
      "right" : "sb.append(')');",
      "info" : "ExpressionStatement[16014-16029]:ExpressionStatement[16014-16029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16108-16199]:Block[16108-16199]"
    }, {
      "left" : "throw new IllegalStateException(ioe);",
      "right" : "throw new IllegalStateException(ioe);",
      "info" : "ThrowStatement[16148-16185]:ThrowStatement[16148-16185]"
    }, {
      "left" : "++count;",
      "right" : "++count;",
      "info" : "ExpressionStatement[16212-16220]:ExpressionStatement[16212-16220]"
    }, {
      "left" : "if (count >= MAX_COUNT)",
      "right" : "if (count >= MAX_COUNT)",
      "info" : "IfStatement[16240-16362]:IfStatement[16240-16362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16264-16362]:Block[16264-16362]"
    }, {
      "left" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "right" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "info" : "ExpressionStatement[16278-16352]:ExpressionStatement[16278-16352]"
    }, {
      "left" : "sb.append(']');",
      "right" : "sb.append(']');",
      "info" : "ExpressionStatement[16371-16386]:ExpressionStatement[16371-16386]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[16395-16416]:ReturnStatement[16395-16416]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16428-16435]:Modifier[16428-16435]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[16436-16441]:Modifier[16436-16441]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16442-16446]:PrimitiveType[16442-16446]"
    }, {
      "left" : "_appendNativeIds",
      "right" : "_appendNativeIds",
      "info" : "SimpleName[16447-16463]:SimpleName[16447-16463]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[16464-16480]:SingleVariableDeclaration[16464-16480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16486-16849]:Block[16486-16849]"
    }, {
      "left" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "right" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[16496-16546]:VariableDeclarationStatement[16496-16546]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[16555-16670]:IfStatement[16555-16670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16577-16670]:Block[16577-16670]"
    }, {
      "left" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "right" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "info" : "ExpressionStatement[16591-16660]:ExpressionStatement[16591-16660]"
    }, {
      "left" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "right" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[16679-16725]:VariableDeclarationStatement[16679-16725]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[16734-16843]:IfStatement[16734-16843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16754-16843]:Block[16754-16843]"
    }, {
      "left" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "right" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "info" : "ExpressionStatement[16768-16833]:ExpressionStatement[16768-16833]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17054-17063]:MarkerAnnotation[17054-17063]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17068-17074]:Modifier[17068-17074]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[17075-17088]:SimpleType[17075-17088]"
    }, {
      "left" : "enable",
      "right" : "enable",
      "info" : "SimpleName[17089-17095]:SimpleName[17089-17095]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[17096-17105]:SingleVariableDeclaration[17096-17105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17107-17178]:Block[17107-17178]"
    }, {
      "left" : "_generatorFeatures |= f.getMask();",
      "right" : "_generatorFeatures |= f.getMask();",
      "info" : "ExpressionStatement[17117-17151]:ExpressionStatement[17117-17151]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17160-17172]:ReturnStatement[17160-17172]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17184-17193]:MarkerAnnotation[17184-17193]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17198-17204]:Modifier[17198-17204]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[17205-17218]:SimpleType[17205-17218]"
    }, {
      "left" : "disable",
      "right" : "disable",
      "info" : "SimpleName[17219-17226]:SimpleName[17219-17226]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[17227-17236]:SingleVariableDeclaration[17227-17236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17238-17310]:Block[17238-17310]"
    }, {
      "left" : "_generatorFeatures &= ~f.getMask();",
      "right" : "_generatorFeatures &= ~f.getMask();",
      "info" : "ExpressionStatement[17248-17283]:ExpressionStatement[17248-17283]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17292-17304]:ReturnStatement[17292-17304]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17397-17406]:MarkerAnnotation[17397-17406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17411-17417]:Modifier[17411-17417]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17418-17425]:PrimitiveType[17418-17425]"
    }, {
      "left" : "isEnabled",
      "right" : "isEnabled",
      "info" : "SimpleName[17426-17435]:SimpleName[17426-17435]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[17436-17445]:SingleVariableDeclaration[17436-17445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17447-17510]:Block[17447-17510]"
    }, {
      "left" : "return (_generatorFeatures & f.getMask()) != 0;",
      "right" : "return (_generatorFeatures & f.getMask()) != 0;",
      "info" : "ReturnStatement[17457-17504]:ReturnStatement[17457-17504]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17516-17525]:MarkerAnnotation[17516-17525]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17530-17536]:Modifier[17530-17536]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[17537-17540]:PrimitiveType[17537-17540]"
    }, {
      "left" : "getFeatureMask",
      "right" : "getFeatureMask",
      "info" : "SimpleName[17541-17555]:SimpleName[17541-17555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17558-17600]:Block[17558-17600]"
    }, {
      "left" : "return _generatorFeatures;",
      "right" : "return _generatorFeatures;",
      "info" : "ReturnStatement[17568-17594]:ReturnStatement[17568-17594]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17606-17615]:MarkerAnnotation[17606-17615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17620-17626]:Modifier[17620-17626]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[17627-17640]:SimpleType[17627-17640]"
    }, {
      "left" : "setFeatureMask",
      "right" : "setFeatureMask",
      "info" : "SimpleName[17641-17655]:SimpleName[17641-17655]"
    }, {
      "left" : "int mask",
      "right" : "int mask",
      "info" : "SingleVariableDeclaration[17656-17664]:SingleVariableDeclaration[17656-17664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17666-17729]:Block[17666-17729]"
    }, {
      "left" : "_generatorFeatures = mask;",
      "right" : "_generatorFeatures = mask;",
      "info" : "ExpressionStatement[17676-17702]:ExpressionStatement[17676-17702]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17711-17723]:ReturnStatement[17711-17723]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17739-17748]:MarkerAnnotation[17739-17748]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17753-17759]:Modifier[17753-17759]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[17760-17773]:SimpleType[17760-17773]"
    }, {
      "left" : "useDefaultPrettyPrinter",
      "right" : "useDefaultPrettyPrinter",
      "info" : "SimpleName[17774-17797]:SimpleName[17774-17797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17800-17862]:Block[17800-17862]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17844-17856]:ReturnStatement[17844-17856]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17868-17877]:MarkerAnnotation[17868-17877]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17882-17888]:Modifier[17882-17888]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[17889-17902]:SimpleType[17889-17902]"
    }, {
      "left" : "setCodec",
      "right" : "setCodec",
      "info" : "SimpleName[17903-17911]:SimpleName[17903-17911]"
    }, {
      "left" : "ObjectCodec oc",
      "right" : "ObjectCodec oc",
      "info" : "SingleVariableDeclaration[17912-17926]:SingleVariableDeclaration[17912-17926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17928-17983]:Block[17928-17983]"
    }, {
      "left" : "_objectCodec = oc;",
      "right" : "_objectCodec = oc;",
      "info" : "ExpressionStatement[17938-17956]:ExpressionStatement[17938-17956]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17965-17977]:ReturnStatement[17965-17977]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17989-17998]:MarkerAnnotation[17989-17998]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18003-18009]:Modifier[18003-18009]"
    }, {
      "left" : "ObjectCodec",
      "right" : "ObjectCodec",
      "info" : "SimpleType[18010-18021]:SimpleType[18010-18021]"
    }, {
      "left" : "getCodec",
      "right" : "getCodec",
      "info" : "SimpleName[18022-18030]:SimpleName[18022-18030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18033-18057]:Block[18033-18057]"
    }, {
      "left" : "return _objectCodec;",
      "right" : "return _objectCodec;",
      "info" : "ReturnStatement[18035-18055]:ReturnStatement[18035-18055]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18063-18072]:MarkerAnnotation[18063-18072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18077-18083]:Modifier[18077-18083]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18084-18089]:Modifier[18084-18089]"
    }, {
      "left" : "JsonWriteContext",
      "right" : "JsonWriteContext",
      "info" : "SimpleType[18090-18106]:SimpleType[18090-18106]"
    }, {
      "left" : "getOutputContext",
      "right" : "getOutputContext",
      "info" : "SimpleName[18107-18123]:SimpleName[18107-18123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18126-18151]:Block[18126-18151]"
    }, {
      "left" : "return _writeContext;",
      "right" : "return _writeContext;",
      "info" : "ReturnStatement[18128-18149]:ReturnStatement[18128-18149]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18447-18456]:MarkerAnnotation[18447-18456]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18461-18467]:Modifier[18461-18467]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18468-18475]:PrimitiveType[18468-18475]"
    }, {
      "left" : "canWriteBinaryNatively",
      "right" : "canWriteBinaryNatively",
      "info" : "SimpleName[18476-18498]:SimpleName[18476-18498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18501-18529]:Block[18501-18529]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[18511-18523]:ReturnStatement[18511-18523]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18746-18755]:MarkerAnnotation[18746-18755]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18760-18766]:Modifier[18760-18766]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18767-18771]:PrimitiveType[18767-18771]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[18772-18777]:SimpleName[18772-18777]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18787-18798]:SimpleType[18787-18798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18799-18812]:Block[18799-18812]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18818-18827]:MarkerAnnotation[18818-18827]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18832-18838]:Modifier[18832-18838]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18839-18843]:PrimitiveType[18839-18843]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[18844-18849]:SimpleName[18844-18849]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18859-18870]:SimpleType[18859-18870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18871-18902]:Block[18871-18902]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[18881-18896]:ExpressionStatement[18881-18896]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18908-18917]:MarkerAnnotation[18908-18917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18922-18928]:Modifier[18922-18928]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18929-18936]:PrimitiveType[18929-18936]"
    }, {
      "left" : "isClosed",
      "right" : "isClosed",
      "info" : "SimpleName[18937-18945]:SimpleName[18937-18945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18948-18967]:Block[18948-18967]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[18950-18965]:ReturnStatement[18950-18965]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19180-19189]:MarkerAnnotation[19180-19189]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19194-19200]:Modifier[19194-19200]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19201-19206]:Modifier[19201-19206]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19207-19211]:PrimitiveType[19207-19211]"
    }, {
      "left" : "writeStartArray",
      "right" : "writeStartArray",
      "info" : "SimpleName[19212-19227]:SimpleName[19212-19227]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19237-19248]:SimpleType[19237-19248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19253-19365]:Block[19253-19365]"
    }, {
      "left" : "_append(JsonToken.START_ARRAY);",
      "right" : "_append(JsonToken.START_ARRAY);",
      "info" : "ExpressionStatement[19263-19294]:ExpressionStatement[19263-19294]"
    }, {
      "left" : "_writeContext = _writeContext.createChildArrayContext();",
      "right" : "_writeContext = _writeContext.createChildArrayContext();",
      "info" : "ExpressionStatement[19303-19359]:ExpressionStatement[19303-19359]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19371-19380]:MarkerAnnotation[19371-19380]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19385-19391]:Modifier[19385-19391]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19392-19397]:Modifier[19392-19397]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19398-19402]:PrimitiveType[19398-19402]"
    }, {
      "left" : "writeEndArray",
      "right" : "writeEndArray",
      "info" : "SimpleName[19403-19416]:SimpleName[19403-19416]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19426-19437]:SimpleType[19426-19437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19442-19687]:Block[19442-19687]"
    }, {
      "left" : "_append(JsonToken.END_ARRAY);",
      "right" : "_append(JsonToken.END_ARRAY);",
      "info" : "ExpressionStatement[19452-19481]:ExpressionStatement[19452-19481]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[19568-19615]:VariableDeclarationStatement[19568-19615]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[19624-19681]:IfStatement[19624-19681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19639-19681]:Block[19639-19681]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[19653-19671]:ExpressionStatement[19653-19671]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19693-19702]:MarkerAnnotation[19693-19702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19707-19713]:Modifier[19707-19713]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19714-19719]:Modifier[19714-19719]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19720-19724]:PrimitiveType[19720-19724]"
    }, {
      "left" : "writeStartObject",
      "right" : "writeStartObject",
      "info" : "SimpleName[19725-19741]:SimpleName[19725-19741]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19751-19762]:SimpleType[19751-19762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19767-19881]:Block[19767-19881]"
    }, {
      "left" : "_append(JsonToken.START_OBJECT);",
      "right" : "_append(JsonToken.START_OBJECT);",
      "info" : "ExpressionStatement[19777-19809]:ExpressionStatement[19777-19809]"
    }, {
      "left" : "_writeContext = _writeContext.createChildObjectContext();",
      "right" : "_writeContext = _writeContext.createChildObjectContext();",
      "info" : "ExpressionStatement[19818-19875]:ExpressionStatement[19818-19875]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19887-19896]:MarkerAnnotation[19887-19896]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19901-19907]:Modifier[19901-19907]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19908-19913]:Modifier[19908-19913]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19914-19918]:PrimitiveType[19914-19918]"
    }, {
      "left" : "writeEndObject",
      "right" : "writeEndObject",
      "info" : "SimpleName[19919-19933]:SimpleName[19919-19933]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19943-19954]:SimpleType[19943-19954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19959-20205]:Block[19959-20205]"
    }, {
      "left" : "_append(JsonToken.END_OBJECT);",
      "right" : "_append(JsonToken.END_OBJECT);",
      "info" : "ExpressionStatement[19969-19999]:ExpressionStatement[19969-19999]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[20086-20133]:VariableDeclarationStatement[20086-20133]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[20142-20199]:IfStatement[20142-20199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20157-20199]:Block[20157-20199]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[20171-20189]:ExpressionStatement[20171-20189]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20211-20220]:MarkerAnnotation[20211-20220]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20225-20231]:Modifier[20225-20231]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[20232-20237]:Modifier[20232-20237]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20238-20242]:PrimitiveType[20238-20242]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[20243-20257]:SimpleName[20243-20257]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[20258-20269]:SingleVariableDeclaration[20258-20269]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20278-20289]:SimpleType[20278-20289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20294-20390]:Block[20294-20390]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[20304-20340]:ExpressionStatement[20304-20340]"
    }, {
      "left" : "_writeContext.writeFieldName(name);",
      "right" : "_writeContext.writeFieldName(name);",
      "info" : "ExpressionStatement[20349-20384]:ExpressionStatement[20349-20384]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20396-20405]:MarkerAnnotation[20396-20405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20410-20416]:Modifier[20410-20416]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20417-20421]:PrimitiveType[20417-20421]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[20422-20436]:SimpleName[20422-20436]"
    }, {
      "left" : "SerializableString name",
      "right" : "SerializableString name",
      "info" : "SingleVariableDeclaration[20437-20460]:SingleVariableDeclaration[20437-20460]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20469-20480]:SimpleType[20469-20480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20485-20592]:Block[20485-20592]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[20495-20531]:ExpressionStatement[20495-20531]"
    }, {
      "left" : "_writeContext.writeFieldName(name.getValue());",
      "right" : "_writeContext.writeFieldName(name.getValue());",
      "info" : "ExpressionStatement[20540-20586]:ExpressionStatement[20540-20586]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20806-20815]:MarkerAnnotation[20806-20815]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20820-20826]:Modifier[21195-21201]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20827-20831]:PrimitiveType[21202-21206]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[20832-20843]:SimpleName[21207-21218]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[20844-20855]:SingleVariableDeclaration[20844-20855]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20864-20875]:SimpleType[20864-20875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20876-21014]:Block[21263-21406]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[20886-21008]:IfStatement[21273-21400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20904-20940]:Block[21291-21327]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[20918-20930]:ExpressionStatement[21305-21317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20946-21008]:Block[21333-21400]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[20960-20967]:SimpleName[21347-21359]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_appendValue(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[20960-20998]:ExpressionStatement[21347-21390]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21020-21029]:MarkerAnnotation[21025-21034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21034-21040]:Modifier[21039-21045]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21041-21045]:PrimitiveType[21046-21050]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[21046-21057]:SimpleName[21051-21062]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[21058-21069]:SingleVariableDeclaration[21063-21074]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21071-21081]:SingleVariableDeclaration[21076-21086]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[21083-21090]:SingleVariableDeclaration[21088-21095]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21099-21110]:SimpleType[21104-21115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21111-21170]:Block[21116-21175]"
    }, {
      "left" : "writeString(new String(text, offset, len));",
      "right" : "writeString(new String(text, offset, len));",
      "info" : "ExpressionStatement[21121-21164]:ExpressionStatement[21126-21169]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21176-21185]:MarkerAnnotation[21181-21190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21190-21196]:Modifier[20820-20826]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21197-21201]:PrimitiveType[20827-20831]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[21202-21213]:SimpleName[20832-20843]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[21214-21237]:SingleVariableDeclaration[21219-21242]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21246-21257]:SimpleType[21251-21262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21258-21396]:Block[20876-21019]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[21268-21390]:IfStatement[20886-21013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21286-21322]:Block[20904-20940]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[21300-21312]:ExpressionStatement[20918-20930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21328-21390]:Block[20946-21013]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[21342-21349]:SimpleName[20960-20972]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_appendValue(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[21342-21380]:ExpressionStatement[20960-21003]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21406-21415]:MarkerAnnotation[21416-21425]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21420-21426]:Modifier[21430-21436]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21427-21431]:PrimitiveType[21437-21441]"
    }, {
      "left" : "writeRawUTF8String",
      "right" : "writeRawUTF8String",
      "info" : "SimpleName[21432-21450]:SimpleName[21442-21460]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[21451-21462]:SingleVariableDeclaration[21461-21472]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21464-21474]:SingleVariableDeclaration[21474-21484]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[21476-21486]:SingleVariableDeclaration[21486-21496]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21495-21506]:SimpleType[21505-21516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21511-21624]:Block[21521-21634]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21588-21618]:ExpressionStatement[21598-21628]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21630-21639]:MarkerAnnotation[21640-21649]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21644-21650]:Modifier[21654-21660]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21651-21655]:PrimitiveType[21661-21665]"
    }, {
      "left" : "writeUTF8String",
      "right" : "writeUTF8String",
      "info" : "SimpleName[21656-21671]:SimpleName[21666-21681]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[21672-21683]:SingleVariableDeclaration[21682-21693]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21685-21695]:SingleVariableDeclaration[21695-21705]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[21697-21707]:SingleVariableDeclaration[21707-21717]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21716-21727]:SimpleType[21726-21737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21732-21845]:Block[21742-21855]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21809-21839]:ExpressionStatement[21819-21849]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21851-21860]:MarkerAnnotation[21861-21870]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21865-21871]:Modifier[21875-21881]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21872-21876]:PrimitiveType[21882-21886]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21877-21885]:SimpleName[21887-21895]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21886-21897]:SingleVariableDeclaration[21896-21907]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21906-21917]:SimpleType[21916-21927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21918-21964]:Block[21928-21974]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21928-21958]:ExpressionStatement[21938-21968]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21970-21979]:MarkerAnnotation[21980-21989]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21984-21990]:Modifier[21994-22000]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21991-21995]:PrimitiveType[22001-22005]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21996-22004]:SimpleName[22006-22014]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[22005-22016]:SingleVariableDeclaration[22015-22026]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[22018-22028]:SingleVariableDeclaration[22028-22038]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[22030-22037]:SingleVariableDeclaration[22040-22047]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22046-22057]:SimpleType[22056-22067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22058-22104]:Block[22068-22114]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22068-22098]:ExpressionStatement[22078-22108]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22110-22119]:MarkerAnnotation[22120-22129]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22124-22130]:Modifier[22134-22140]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22131-22135]:PrimitiveType[22141-22145]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[22136-22144]:SimpleName[22146-22154]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[22145-22168]:SingleVariableDeclaration[22155-22178]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22177-22188]:SimpleType[22187-22198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22189-22235]:Block[22199-22245]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22199-22229]:ExpressionStatement[22209-22239]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22245-22254]:MarkerAnnotation[22255-22264]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22259-22265]:Modifier[22269-22275]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22266-22270]:PrimitiveType[22276-22280]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[22271-22279]:SimpleName[22281-22289]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[22280-22291]:SingleVariableDeclaration[22290-22301]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[22293-22303]:SingleVariableDeclaration[22303-22313]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[22305-22312]:SingleVariableDeclaration[22315-22322]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22321-22332]:SimpleType[22331-22342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22333-22379]:Block[22343-22389]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22343-22373]:ExpressionStatement[22353-22383]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22385-22394]:MarkerAnnotation[22395-22404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22399-22405]:Modifier[22409-22415]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22406-22410]:PrimitiveType[22416-22420]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[22411-22419]:SimpleName[22421-22429]"
    }, {
      "left" : "char c",
      "right" : "char c",
      "info" : "SingleVariableDeclaration[22420-22426]:SingleVariableDeclaration[22430-22436]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22435-22446]:SimpleType[22445-22456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22447-22493]:Block[22457-22503]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22457-22487]:ExpressionStatement[22467-22497]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22499-22508]:MarkerAnnotation[22509-22518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22513-22519]:Modifier[22523-22529]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22520-22524]:PrimitiveType[22530-22534]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[22525-22538]:SimpleName[22535-22548]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[22539-22550]:SingleVariableDeclaration[22549-22560]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22559-22570]:SimpleType[22569-22580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22571-22648]:Block[22581-22663]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[22581-22588]:SimpleName[22591-22603]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "right" : "_appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "info" : "ExpressionStatement[22581-22642]:ExpressionStatement[22591-22657]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22654-22663]:MarkerAnnotation[22669-22678]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22668-22674]:Modifier[22683-22689]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22675-22679]:PrimitiveType[22690-22694]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[22680-22693]:SimpleName[22695-22708]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[22694-22705]:SingleVariableDeclaration[22709-22720]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[22707-22717]:SingleVariableDeclaration[22722-22732]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[22719-22726]:SingleVariableDeclaration[22734-22741]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22735-22746]:SimpleType[22750-22761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22747-22939]:Block[22762-22959]"
    }, {
      "left" : "if (offset > 0 || len != text.length())",
      "right" : "if (offset > 0 || len != text.length())",
      "info" : "IfStatement[22757-22863]:IfStatement[22772-22878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22797-22863]:Block[22812-22878]"
    }, {
      "left" : "text = text.substring(offset, offset+len);",
      "right" : "text = text.substring(offset, offset+len);",
      "info" : "ExpressionStatement[22811-22853]:ExpressionStatement[22826-22868]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[22872-22879]:SimpleName[22887-22899]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "right" : "_appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "info" : "ExpressionStatement[22872-22933]:ExpressionStatement[22887-22953]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22945-22954]:MarkerAnnotation[22965-22974]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22959-22965]:Modifier[22979-22985]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22966-22970]:PrimitiveType[22986-22990]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[22971-22984]:SimpleName[22991-23004]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[22985-22996]:SingleVariableDeclaration[23005-23016]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[22998-23008]:SingleVariableDeclaration[23018-23028]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[23010-23017]:SingleVariableDeclaration[23030-23037]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23026-23037]:SimpleType[23046-23057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23038-23126]:Block[23058-23151]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[23048-23055]:SimpleName[23068-23080]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));",
      "right" : "_appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));",
      "info" : "ExpressionStatement[23048-23120]:ExpressionStatement[23068-23145]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23344-23353]:MarkerAnnotation[23369-23378]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23358-23364]:Modifier[23383-23389]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23365-23369]:PrimitiveType[23390-23394]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23370-23381]:SimpleName[23395-23406]"
    }, {
      "left" : "short i",
      "right" : "short i",
      "info" : "SingleVariableDeclaration[23382-23389]:SingleVariableDeclaration[23407-23414]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23398-23409]:SimpleType[23423-23434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23410-23480]:Block[23435-23510]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[23420-23427]:SimpleName[23445-23457]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "info" : "ExpressionStatement[23420-23474]:ExpressionStatement[23445-23504]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23486-23495]:MarkerAnnotation[23516-23525]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23500-23506]:Modifier[23530-23536]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23507-23511]:PrimitiveType[23537-23541]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23512-23523]:SimpleName[23542-23553]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[23524-23529]:SingleVariableDeclaration[23554-23559]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23538-23549]:SimpleType[23568-23579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23550-23622]:Block[23580-23657]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[23560-23567]:SimpleName[23590-23602]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "info" : "ExpressionStatement[23560-23616]:ExpressionStatement[23590-23651]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23628-23637]:MarkerAnnotation[23663-23672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23642-23648]:Modifier[23677-23683]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23649-23653]:PrimitiveType[23684-23688]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23654-23665]:SimpleName[23689-23700]"
    }, {
      "left" : "long l",
      "right" : "long l",
      "info" : "SingleVariableDeclaration[23666-23672]:SingleVariableDeclaration[23701-23707]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23681-23692]:SimpleType[23716-23727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23693-23762]:Block[23728-23802]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[23703-23710]:SimpleName[23738-23750]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "info" : "ExpressionStatement[23703-23756]:ExpressionStatement[23738-23796]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23768-23777]:MarkerAnnotation[23808-23817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23782-23788]:Modifier[23822-23828]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23789-23793]:PrimitiveType[23829-23833]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23794-23805]:SimpleName[23834-23845]"
    }, {
      "left" : "double d",
      "right" : "double d",
      "info" : "SingleVariableDeclaration[23806-23814]:SingleVariableDeclaration[23846-23854]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23823-23834]:SimpleType[23863-23874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23835-23908]:Block[23875-23953]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[23845-23852]:SimpleName[23885-23897]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "info" : "ExpressionStatement[23845-23902]:ExpressionStatement[23885-23947]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23914-23923]:MarkerAnnotation[23959-23968]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23928-23934]:Modifier[23973-23979]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23935-23939]:PrimitiveType[23980-23984]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23940-23951]:SimpleName[23985-23996]"
    }, {
      "left" : "float f",
      "right" : "float f",
      "info" : "SingleVariableDeclaration[23952-23959]:SingleVariableDeclaration[23997-24004]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23968-23979]:SimpleType[24013-24024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23980-24052]:Block[24025-24102]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[23990-23997]:SimpleName[24035-24047]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "info" : "ExpressionStatement[23990-24046]:ExpressionStatement[24035-24096]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24058-24067]:MarkerAnnotation[24108-24117]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24072-24078]:Modifier[24122-24128]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24079-24083]:PrimitiveType[24129-24133]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[24084-24095]:SimpleName[24134-24145]"
    }, {
      "left" : "BigDecimal dec",
      "right" : "BigDecimal dec",
      "info" : "SingleVariableDeclaration[24096-24110]:SingleVariableDeclaration[24146-24160]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24119-24130]:SimpleType[24169-24180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24131-24273]:Block[24181-24328]"
    }, {
      "left" : "if (dec == null)",
      "right" : "if (dec == null)",
      "info" : "IfStatement[24141-24267]:IfStatement[24191-24322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24158-24194]:Block[24208-24244]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[24172-24184]:ExpressionStatement[24222-24234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24200-24267]:Block[24250-24322]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[24214-24221]:SimpleName[24264-24276]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "info" : "ExpressionStatement[24214-24257]:ExpressionStatement[24264-24312]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24279-24288]:MarkerAnnotation[24334-24343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24293-24299]:Modifier[24348-24354]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24300-24304]:PrimitiveType[24355-24359]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[24305-24316]:SimpleName[24360-24371]"
    }, {
      "left" : "BigInteger v",
      "right" : "BigInteger v",
      "info" : "SingleVariableDeclaration[24317-24329]:SingleVariableDeclaration[24372-24384]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24338-24349]:SimpleType[24393-24404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24350-24486]:Block[24405-24546]"
    }, {
      "left" : "if (v == null)",
      "right" : "if (v == null)",
      "info" : "IfStatement[24360-24480]:IfStatement[24415-24540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24375-24411]:Block[24430-24466]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[24389-24401]:ExpressionStatement[24444-24456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24417-24480]:Block[24472-24540]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[24431-24438]:SimpleName[24486-24498]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, v);",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_INT, v);",
      "info" : "ExpressionStatement[24431-24470]:ExpressionStatement[24486-24530]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24492-24501]:MarkerAnnotation[24552-24561]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24506-24512]:Modifier[24566-24572]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24513-24517]:PrimitiveType[24573-24577]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[24518-24529]:SimpleName[24578-24589]"
    }, {
      "left" : "String encodedValue",
      "right" : "String encodedValue",
      "info" : "SingleVariableDeclaration[24530-24549]:SingleVariableDeclaration[24590-24609]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24558-24569]:SimpleType[24618-24629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24570-24778]:Block[24630-24843]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[24720-24727]:SimpleName[24780-24792]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "right" : "_appendValue(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "info" : "ExpressionStatement[24720-24772]:ExpressionStatement[24780-24837]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24784-24793]:MarkerAnnotation[24849-24858]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24798-24804]:Modifier[24863-24869]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24805-24809]:PrimitiveType[24870-24874]"
    }, {
      "left" : "writeBoolean",
      "right" : "writeBoolean",
      "info" : "SimpleName[24810-24822]:SimpleName[24875-24887]"
    }, {
      "left" : "boolean state",
      "right" : "boolean state",
      "info" : "SingleVariableDeclaration[24823-24836]:SingleVariableDeclaration[24888-24901]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24845-24856]:SimpleType[24910-24921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24857-24935]:Block[24922-25005]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[24867-24874]:SimpleName[24932-24944]"
    }, {
      "left" : "_append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "right" : "_appendValue(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "info" : "ExpressionStatement[24867-24929]:ExpressionStatement[24932-24999]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24941-24950]:MarkerAnnotation[25011-25020]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24955-24961]:Modifier[25025-25031]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24962-24966]:PrimitiveType[25032-25036]"
    }, {
      "left" : "writeNull",
      "right" : "writeNull",
      "info" : "SimpleName[24967-24976]:SimpleName[25037-25046]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24986-24997]:SimpleType[25056-25067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24998-25044]:Block[25068-25119]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[25008-25015]:SimpleName[25078-25090]"
    }, {
      "left" : "_append(JsonToken.VALUE_NULL);",
      "right" : "_appendValue(JsonToken.VALUE_NULL);",
      "info" : "ExpressionStatement[25008-25038]:ExpressionStatement[25078-25113]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25263-25272]:MarkerAnnotation[25338-25347]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25277-25283]:Modifier[25352-25358]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25284-25288]:PrimitiveType[25359-25363]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[25289-25300]:SimpleName[25364-25375]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[25301-25313]:SingleVariableDeclaration[25376-25388]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[25322-25333]:SimpleType[25397-25408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25338-26066]:Block[25413-26151]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[25348-25423]:IfStatement[25423-25498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25367-25423]:Block[25442-25498]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[25381-25393]:ExpressionStatement[25456-25468]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25406-25413]:ReturnStatement[25481-25488]"
    }, {
      "left" : "Class<?> raw = value.getClass();",
      "right" : "Class<?> raw = value.getClass();",
      "info" : "VariableDeclarationStatement[25432-25464]:VariableDeclarationStatement[25507-25539]"
    }, {
      "left" : "if (raw == byte[].class || (value instanceof RawValue))",
      "right" : "if (raw == byte[].class || (value instanceof RawValue))",
      "info" : "IfStatement[25473-25621]:IfStatement[25548-25701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25529-25621]:Block[25604-25701]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[25543-25550]:SimpleName[25618-25630]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[25543-25591]:ExpressionStatement[25618-25671]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25604-25611]:ReturnStatement[25684-25691]"
    }, {
      "left" : "if (_objectCodec == null)",
      "right" : "if (_objectCodec == null)",
      "info" : "IfStatement[25630-26060]:IfStatement[25710-26145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25656-25993]:Block[25736-26078]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[25935-25942]:SimpleName[26015-26027]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[25935-25983]:ExpressionStatement[26015-26068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25999-26060]:Block[26084-26145]"
    }, {
      "left" : "_objectCodec.writeValue(this, value);",
      "right" : "_objectCodec.writeValue(this, value);",
      "info" : "ExpressionStatement[26013-26050]:ExpressionStatement[26098-26135]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26072-26081]:MarkerAnnotation[26157-26166]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26086-26092]:Modifier[26171-26177]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26093-26097]:PrimitiveType[26178-26182]"
    }, {
      "left" : "writeTree",
      "right" : "writeTree",
      "info" : "SimpleName[26098-26107]:SimpleName[26183-26192]"
    }, {
      "left" : "TreeNode node",
      "right" : "TreeNode node",
      "info" : "SingleVariableDeclaration[26108-26121]:SingleVariableDeclaration[26193-26206]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[26130-26141]:SimpleType[26215-26226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26146-26467]:Block[26231-26557]"
    }, {
      "left" : "if (node == null)",
      "right" : "if (node == null)",
      "info" : "IfStatement[26156-26230]:IfStatement[26241-26315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26174-26230]:Block[26259-26315]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[26188-26200]:ExpressionStatement[26273-26285]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[26213-26220]:ReturnStatement[26298-26305]"
    }, {
      "left" : "if (_objectCodec == null)",
      "right" : "if (_objectCodec == null)",
      "info" : "IfStatement[26240-26461]:IfStatement[26325-26551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26266-26396]:Block[26351-26486]"
    }, {
      "left" : "_append",
      "right" : "_appendValue",
      "info" : "SimpleName[26339-26346]:SimpleName[26424-26436]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "right" : "_appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "info" : "ExpressionStatement[26339-26386]:ExpressionStatement[26424-26476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26402-26461]:Block[26492-26551]"
    }, {
      "left" : "_objectCodec.writeTree(this, node);",
      "right" : "_objectCodec.writeTree(this, node);",
      "info" : "ExpressionStatement[26416-26451]:ExpressionStatement[26506-26541]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26663-26672]:MarkerAnnotation[26753-26762]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26677-26683]:Modifier[26767-26773]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26684-26688]:PrimitiveType[26774-26778]"
    }, {
      "left" : "writeBinary",
      "right" : "writeBinary",
      "info" : "SimpleName[26689-26700]:SimpleName[26779-26790]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[26701-26725]:SingleVariableDeclaration[26791-26815]"
    }, {
      "left" : "byte[] data",
      "right" : "byte[] data",
      "info" : "SingleVariableDeclaration[26727-26738]:SingleVariableDeclaration[26817-26828]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[26740-26750]:SingleVariableDeclaration[26830-26840]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[26752-26759]:SingleVariableDeclaration[26842-26849]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[26768-26779]:SimpleType[26858-26869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26784-27252]:Block[26874-27342]"
    }, {
      "left" : "byte[] copy = new byte[len];",
      "right" : "byte[] copy = new byte[len];",
      "info" : "VariableDeclarationStatement[27137-27165]:VariableDeclarationStatement[27227-27255]"
    }, {
      "left" : "System.arraycopy(data, offset, copy, 0, len);",
      "right" : "System.arraycopy(data, offset, copy, 0, len);",
      "info" : "ExpressionStatement[27174-27219]:ExpressionStatement[27264-27309]"
    }, {
      "left" : "writeObject(copy);",
      "right" : "writeObject(copy);",
      "info" : "ExpressionStatement[27228-27246]:ExpressionStatement[27318-27336]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27542-27551]:MarkerAnnotation[27632-27641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27556-27562]:Modifier[27646-27652]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27563-27566]:PrimitiveType[27653-27656]"
    }, {
      "left" : "writeBinary",
      "right" : "writeBinary",
      "info" : "SimpleName[27567-27578]:SimpleName[27657-27668]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[27579-27603]:SingleVariableDeclaration[27669-27693]"
    }, {
      "left" : "InputStream data",
      "right" : "InputStream data",
      "info" : "SingleVariableDeclaration[27605-27621]:SingleVariableDeclaration[27695-27711]"
    }, {
      "left" : "int dataLength",
      "right" : "int dataLength",
      "info" : "SingleVariableDeclaration[27623-27637]:SingleVariableDeclaration[27713-27727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27639-27697]:Block[27729-27787]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[27649-27691]:ThrowStatement[27739-27781]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27897-27906]:MarkerAnnotation[27987-27996]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27911-27917]:Modifier[28001-28007]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27918-27925]:PrimitiveType[28008-28015]"
    }, {
      "left" : "canWriteTypeId",
      "right" : "canWriteTypeId",
      "info" : "SimpleName[27926-27940]:SimpleName[28016-28030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27943-27984]:Block[28033-28074]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[27953-27978]:ReturnStatement[28043-28068]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27990-27999]:MarkerAnnotation[28080-28089]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28004-28010]:Modifier[28094-28100]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[28011-28018]:PrimitiveType[28101-28108]"
    }, {
      "left" : "canWriteObjectId",
      "right" : "canWriteObjectId",
      "info" : "SimpleName[28019-28035]:SimpleName[28109-28125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28038-28081]:Block[28128-28171]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[28048-28075]:ReturnStatement[28138-28165]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28091-28100]:MarkerAnnotation[28181-28190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28105-28111]:Modifier[28195-28201]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28112-28116]:PrimitiveType[28202-28206]"
    }, {
      "left" : "writeTypeId",
      "right" : "writeTypeId",
      "info" : "SimpleName[28117-28128]:SimpleName[28207-28218]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[28129-28138]:SingleVariableDeclaration[28219-28228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28140-28198]:Block[28230-28288]"
    }, {
      "left" : "_typeId = id;",
      "right" : "_typeId = id;",
      "info" : "ExpressionStatement[28150-28163]:ExpressionStatement[28240-28253]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[28172-28192]:ExpressionStatement[28262-28282]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28208-28217]:MarkerAnnotation[28298-28307]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28222-28228]:Modifier[28312-28318]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28229-28233]:PrimitiveType[28319-28323]"
    }, {
      "left" : "writeObjectId",
      "right" : "writeObjectId",
      "info" : "SimpleName[28234-28247]:SimpleName[28324-28337]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[28248-28257]:SingleVariableDeclaration[28338-28347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28259-28319]:Block[28349-28409]"
    }, {
      "left" : "_objectId = id;",
      "right" : "_objectId = id;",
      "info" : "ExpressionStatement[28269-28284]:ExpressionStatement[28359-28374]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[28293-28313]:ExpressionStatement[28383-28403]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28524-28533]:MarkerAnnotation[28614-28623]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28538-28544]:Modifier[28628-28634]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28545-28549]:PrimitiveType[28635-28639]"
    }, {
      "left" : "copyCurrentEvent",
      "right" : "copyCurrentEvent",
      "info" : "SimpleName[28550-28566]:SimpleName[28640-28656]"
    }, {
      "left" : "JsonParser p",
      "right" : "JsonParser p",
      "info" : "SingleVariableDeclaration[28567-28579]:SingleVariableDeclaration[28657-28669]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[28588-28599]:SimpleType[28678-28689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28604-31101]:Block[28694-31191]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[28614-28680]:IfStatement[28704-28770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28637-28680]:Block[28727-28770]"
    }, {
      "left" : "_checkNativeIds(p);",
      "right" : "_checkNativeIds(p);",
      "info" : "ExpressionStatement[28651-28670]:ExpressionStatement[28741-28760]"
    }, {
      "left" : "switch (p.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(p.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (p.hasTextCharacters()) {\n                writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());\n            } else {\n                writeString(p.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n            if (_forceBigDecimal) {\n                /* 10-Oct-2015, tatu: Ideally we would first determine whether underlying\n                 *   number is already decoded into a number (in which case might as well\n                 *   access as number); or is still retained as text (in which case we\n                 *   should further defer decoding that may not need BigDecimal):\n                 */\n                writeNumber(p.getDecimalValue());\n            } else {\n                switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n                }\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(p.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "right" : "switch (p.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(p.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (p.hasTextCharacters()) {\n                writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());\n            } else {\n                writeString(p.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n            if (_forceBigDecimal) {\n                /* 10-Oct-2015, tatu: Ideally we would first determine whether underlying\n                 *   number is already decoded into a number (in which case might as well\n                 *   access as number); or is still retained as text (in which case we\n                 *   should further defer decoding that may not need BigDecimal):\n                 */\n                writeNumber(p.getDecimalValue());\n            } else {\n                switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n                }\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(p.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "info" : "SwitchStatement[28689-31095]:SwitchStatement[28779-31185]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[28728-28746]:SwitchCase[28818-28836]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[28759-28778]:ExpressionStatement[28849-28868]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28791-28797]:BreakStatement[28881-28887]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[28806-28822]:SwitchCase[28896-28912]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[28835-28852]:ExpressionStatement[28925-28942]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28865-28871]:BreakStatement[28955-28961]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[28880-28897]:SwitchCase[28970-28987]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[28910-28928]:ExpressionStatement[29000-29018]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28941-28947]:BreakStatement[29031-29037]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[28956-28971]:SwitchCase[29046-29061]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[28984-29000]:ExpressionStatement[29074-29090]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29013-29019]:BreakStatement[29103-29109]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[29028-29044]:SwitchCase[29118-29134]"
    }, {
      "left" : "writeFieldName(p.getCurrentName());",
      "right" : "writeFieldName(p.getCurrentName());",
      "info" : "ExpressionStatement[29057-29092]:ExpressionStatement[29147-29182]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29105-29111]:BreakStatement[29195-29201]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[29120-29138]:SwitchCase[29210-29228]"
    }, {
      "left" : "if (p.hasTextCharacters())",
      "right" : "if (p.hasTextCharacters())",
      "info" : "IfStatement[29151-29346]:IfStatement[29241-29436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29178-29283]:Block[29268-29373]"
    }, {
      "left" : "writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());",
      "right" : "writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());",
      "info" : "ExpressionStatement[29196-29269]:ExpressionStatement[29286-29359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29289-29346]:Block[29379-29436]"
    }, {
      "left" : "writeString(p.getText());",
      "right" : "writeString(p.getText());",
      "info" : "ExpressionStatement[29307-29332]:ExpressionStatement[29397-29422]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29359-29365]:BreakStatement[29449-29455]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[29374-29396]:SwitchCase[29464-29486]"
    }, {
      "left" : "switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }",
      "right" : "switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }",
      "info" : "SwitchStatement[29409-29716]:SwitchStatement[29499-29806]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[29450-29459]:SwitchCase[29540-29549]"
    }, {
      "left" : "writeNumber(p.getIntValue());",
      "right" : "writeNumber(p.getIntValue());",
      "info" : "ExpressionStatement[29476-29505]:ExpressionStatement[29566-29595]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29522-29528]:BreakStatement[29612-29618]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[29541-29558]:SwitchCase[29631-29648]"
    }, {
      "left" : "writeNumber(p.getBigIntegerValue());",
      "right" : "writeNumber(p.getBigIntegerValue());",
      "info" : "ExpressionStatement[29575-29611]:ExpressionStatement[29665-29701]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29628-29634]:BreakStatement[29718-29724]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29647-29655]:SwitchCase[29737-29745]"
    }, {
      "left" : "writeNumber(p.getLongValue());",
      "right" : "writeNumber(p.getLongValue());",
      "info" : "ExpressionStatement[29672-29702]:ExpressionStatement[29762-29792]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29729-29735]:BreakStatement[29819-29825]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[29744-29768]:SwitchCase[29834-29858]"
    }, {
      "left" : "if (_forceBigDecimal)",
      "right" : "if (_forceBigDecimal)",
      "info" : "IfStatement[29781-30621]:IfStatement[29871-30711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29803-30237]:Block[29893-30327]"
    }, {
      "left" : "writeNumber(p.getDecimalValue());",
      "right" : "writeNumber(p.getDecimalValue());",
      "info" : "ExpressionStatement[30190-30223]:ExpressionStatement[30280-30313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30243-30621]:Block[30333-30711]"
    }, {
      "left" : "switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n                }",
      "right" : "switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n                }",
      "info" : "SwitchStatement[30261-30607]:SwitchStatement[30351-30697]"
    }, {
      "left" : "case BIG_DECIMAL:",
      "right" : "case BIG_DECIMAL:",
      "info" : "SwitchCase[30306-30323]:SwitchCase[30396-30413]"
    }, {
      "left" : "writeNumber(p.getDecimalValue());",
      "right" : "writeNumber(p.getDecimalValue());",
      "info" : "ExpressionStatement[30344-30377]:ExpressionStatement[30434-30467]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30398-30404]:BreakStatement[30488-30494]"
    }, {
      "left" : "case FLOAT:",
      "right" : "case FLOAT:",
      "info" : "SwitchCase[30421-30432]:SwitchCase[30511-30522]"
    }, {
      "left" : "writeNumber(p.getFloatValue());",
      "right" : "writeNumber(p.getFloatValue());",
      "info" : "ExpressionStatement[30453-30484]:ExpressionStatement[30543-30574]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30505-30511]:BreakStatement[30595-30601]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[30528-30536]:SwitchCase[30618-30626]"
    }, {
      "left" : "writeNumber(p.getDoubleValue());",
      "right" : "writeNumber(p.getDoubleValue());",
      "info" : "ExpressionStatement[30557-30589]:ExpressionStatement[30647-30679]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30634-30640]:BreakStatement[30724-30730]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[30649-30665]:SwitchCase[30739-30755]"
    }, {
      "left" : "writeBoolean(true);",
      "right" : "writeBoolean(true);",
      "info" : "ExpressionStatement[30678-30697]:ExpressionStatement[30768-30787]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30710-30716]:BreakStatement[30800-30806]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[30725-30742]:SwitchCase[30815-30832]"
    }, {
      "left" : "writeBoolean(false);",
      "right" : "writeBoolean(false);",
      "info" : "ExpressionStatement[30755-30775]:ExpressionStatement[30845-30865]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30788-30794]:BreakStatement[30878-30884]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[30803-30819]:SwitchCase[30893-30909]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[30832-30844]:ExpressionStatement[30922-30934]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30857-30863]:BreakStatement[30947-30953]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[30872-30899]:SwitchCase[30962-30989]"
    }, {
      "left" : "writeObject(p.getEmbeddedObject());",
      "right" : "writeObject(p.getEmbeddedObject());",
      "info" : "ExpressionStatement[30912-30947]:ExpressionStatement[31002-31037]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30960-30966]:BreakStatement[31050-31056]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[30975-30983]:SwitchCase[31065-31073]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[30996-31085]:ThrowStatement[31086-31175]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[31111-31120]:MarkerAnnotation[31201-31210]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31125-31131]:Modifier[31215-31221]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31132-31136]:PrimitiveType[31222-31226]"
    }, {
      "left" : "copyCurrentStructure",
      "right" : "copyCurrentStructure",
      "info" : "SimpleName[31137-31157]:SimpleName[31227-31247]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[31158-31171]:SingleVariableDeclaration[31248-31261]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[31180-31191]:SimpleType[31270-31281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31196-32213]:Block[31286-32303]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[31206-31241]:VariableDeclarationStatement[31296-31331]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[31303-31571]:IfStatement[31393-31661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31334-31571]:Block[31424-31661]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[31348-31423]:IfStatement[31438-31513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31371-31423]:Block[31461-31513]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[31389-31409]:ExpressionStatement[31479-31499]"
    }, {
      "left" : "writeFieldName(jp.getCurrentName());",
      "right" : "writeFieldName(jp.getCurrentName());",
      "info" : "ExpressionStatement[31436-31472]:ExpressionStatement[31526-31562]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[31485-31504]:ExpressionStatement[31575-31594]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[31581-31648]:IfStatement[31671-31738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31604-31648]:Block[31694-31738]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[31618-31638]:ExpressionStatement[31708-31728]"
    }, {
      "left" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "right" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "info" : "SwitchStatement[31666-32207]:SwitchStatement[31756-32297]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[31687-31704]:SwitchCase[31777-31794]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[31717-31735]:ExpressionStatement[31807-31825]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "right" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "info" : "WhileStatement[31748-31851]:WhileStatement[31838-31941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31794-31851]:Block[31884-31941]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[31812-31837]:ExpressionStatement[31902-31927]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[31864-31880]:ExpressionStatement[31954-31970]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31893-31899]:BreakStatement[31983-31989]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[31908-31926]:SwitchCase[31998-32016]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[31939-31958]:ExpressionStatement[32029-32048]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "right" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "info" : "WhileStatement[31971-32075]:WhileStatement[32061-32165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32018-32075]:Block[32108-32165]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[32036-32061]:ExpressionStatement[32126-32151]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[32088-32105]:ExpressionStatement[32178-32195]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32118-32124]:BreakStatement[32208-32214]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[32133-32141]:SwitchCase[32223-32231]"
    }, {
      "left" : "copyCurrentEvent(jp);",
      "right" : "copyCurrentEvent(jp);",
      "info" : "ExpressionStatement[32176-32197]:ExpressionStatement[32266-32287]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32224-32231]:Modifier[32314-32321]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[32232-32237]:Modifier[32322-32327]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32238-32242]:PrimitiveType[32328-32332]"
    }, {
      "left" : "_checkNativeIds",
      "right" : "_checkNativeIds",
      "info" : "SimpleName[32243-32258]:SimpleName[32333-32348]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[32259-32272]:SingleVariableDeclaration[32349-32362]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[32281-32292]:SimpleType[32371-32382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32297-32494]:Block[32387-32584]"
    }, {
      "left" : "if ((_typeId = jp.getTypeId()) != null)",
      "right" : "if ((_typeId = jp.getTypeId()) != null)",
      "info" : "IfStatement[32307-32391]:IfStatement[32397-32481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32347-32391]:Block[32437-32481]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[32361-32381]:ExpressionStatement[32451-32471]"
    }, {
      "left" : "if ((_objectId = jp.getObjectId()) != null)",
      "right" : "if ((_objectId = jp.getObjectId()) != null)",
      "info" : "IfStatement[32400-32488]:IfStatement[32490-32578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32444-32488]:Block[32534-32578]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[32458-32478]:ExpressionStatement[32548-32568]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32672-32681]:Modifier[32762-32771]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[32682-32687]:Modifier[32772-32777]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32688-32692]:PrimitiveType[32778-32782]"
    }, {
      "left" : "_append",
      "right" : "_append",
      "info" : "SimpleName[32693-32700]:SimpleName[32783-32790]"
    }, {
      "left" : "JsonToken type",
      "right" : "JsonToken type",
      "info" : "SingleVariableDeclaration[32701-32715]:SingleVariableDeclaration[32791-32805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32721-33043]:Block[32811-33133]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "info" : "VariableDeclarationStatement[32731-32875]:VariableDeclarationStatement[32821-32965]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[32884-33037]:IfStatement[32974-33127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32902-32938]:Block[32992-33028]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[32916-32928]:ExpressionStatement[33006-33018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32944-33037]:Block[33034-33127]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[32958-32971]:ExpressionStatement[33048-33061]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[32984-32998]:ExpressionStatement[33074-33088]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33049-33058]:Modifier[33139-33148]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33059-33064]:Modifier[33149-33154]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33065-33069]:PrimitiveType[33155-33159]"
    }, {
      "left" : "_append",
      "right" : "_append",
      "info" : "SimpleName[33070-33077]:SimpleName[33160-33167]"
    }, {
      "left" : "JsonToken type",
      "right" : "JsonToken type",
      "info" : "SingleVariableDeclaration[33078-33092]:SingleVariableDeclaration[33168-33182]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[33094-33106]:SingleVariableDeclaration[33184-33196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33112-33419]:Block[33202-33509]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "info" : "VariableDeclarationStatement[33122-33280]:VariableDeclarationStatement[33212-33370]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[33289-33413]:IfStatement[33379-33503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33307-33343]:Block[33397-33433]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[33321-33333]:ExpressionStatement[33411-33423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33349-33413]:Block[33439-33503]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[33363-33376]:ExpressionStatement[33453-33466]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[33389-33403]:ExpressionStatement[33479-33493]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33774-33783]:Modifier[34697-34706]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33784-33789]:Modifier[34707-34712]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33790-33794]:PrimitiveType[34713-34717]"
    }, {
      "left" : "_appendRaw",
      "right" : "_appendRaw",
      "info" : "SimpleName[33795-33805]:SimpleName[34718-34728]"
    }, {
      "left" : "int rawType",
      "right" : "int rawType",
      "info" : "SingleVariableDeclaration[33806-33817]:SingleVariableDeclaration[34729-34740]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[33819-33831]:SingleVariableDeclaration[34742-34754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33837-34156]:Block[34760-35079]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "info" : "VariableDeclarationStatement[33847-34017]:VariableDeclarationStatement[34770-34940]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[34026-34150]:IfStatement[34949-35073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34044-34080]:Block[34967-35003]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[34058-34070]:ExpressionStatement[34981-34993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34086-34150]:Block[35009-35073]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[34100-34113]:ExpressionStatement[35023-35036]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[34126-34140]:ExpressionStatement[35049-35063]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34162-34171]:MarkerAnnotation[35085-35094]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34176-34185]:Modifier[35099-35108]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34186-34190]:PrimitiveType[35109-35113]"
    }, {
      "left" : "_reportUnsupportedOperation",
      "right" : "_reportUnsupportedOperation",
      "info" : "SimpleName[34191-34218]:SimpleName[35114-35141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34221-34327]:Block[35144-35250]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "right" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "info" : "ThrowStatement[34231-34321]:ThrowStatement[35154-35244]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34507-34516]:Modifier[35430-35439]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[34517-34522]:Modifier[35440-35445]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34523-34529]:Modifier[35446-35452]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[34530-34535]:TYPE_DECLARATION_KIND[35453-35458]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[34536-34542]:SimpleName[35459-35465]"
    }, {
      "left" : "ParserMinimalBase",
      "right" : "ParserMinimalBase",
      "info" : "SimpleType[34559-34576]:SimpleType[35482-35499]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36025-36031]:Modifier[36948-36954]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[36032-36038]:SimpleName[36955-36961]"
    }, {
      "left" : "Segment firstSeg",
      "right" : "Segment firstSeg",
      "info" : "SingleVariableDeclaration[36039-36055]:SingleVariableDeclaration[36962-36978]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[36057-36074]:SingleVariableDeclaration[36980-36997]"
    }, {
      "left" : "boolean hasNativeTypeIds",
      "right" : "boolean hasNativeTypeIds",
      "info" : "SingleVariableDeclaration[36092-36116]:SingleVariableDeclaration[37015-37039]"
    }, {
      "left" : "boolean hasNativeObjectIds",
      "right" : "boolean hasNativeObjectIds",
      "info" : "SingleVariableDeclaration[36134-36160]:SingleVariableDeclaration[37057-37083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36170-36554]:Block[37093-37477]"
    }, {
      "left" : "super(0);",
      "right" : "super(0);",
      "info" : "SuperConstructorInvocation[36184-36193]:SuperConstructorInvocation[37107-37116]"
    }, {
      "left" : "_segment = firstSeg;",
      "right" : "_segment = firstSeg;",
      "info" : "ExpressionStatement[36206-36226]:ExpressionStatement[37129-37149]"
    }, {
      "left" : "_segmentPtr = -1;",
      "right" : "_segmentPtr = -1;",
      "info" : "ExpressionStatement[36239-36256]:ExpressionStatement[37162-37179]"
    }, {
      "left" : "_codec = codec;",
      "right" : "_codec = codec;",
      "info" : "ExpressionStatement[36285-36300]:ExpressionStatement[37208-37223]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[36313-36371]:ExpressionStatement[37236-37294]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "right" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "info" : "ExpressionStatement[36384-36421]:ExpressionStatement[37307-37344]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "right" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "info" : "ExpressionStatement[36434-36475]:ExpressionStatement[37357-37398]"
    }, {
      "left" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "right" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "info" : "ExpressionStatement[36488-36544]:ExpressionStatement[37411-37467]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36564-36570]:Modifier[37487-37493]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36571-36575]:PrimitiveType[37494-37498]"
    }, {
      "left" : "setLocation",
      "right" : "setLocation",
      "info" : "SimpleName[36576-36587]:SimpleName[37499-37510]"
    }, {
      "left" : "JsonLocation l",
      "right" : "JsonLocation l",
      "info" : "SingleVariableDeclaration[36588-36602]:SingleVariableDeclaration[37511-37525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36604-36642]:Block[37527-37565]"
    }, {
      "left" : "_location = l;",
      "right" : "_location = l;",
      "info" : "ExpressionStatement[36618-36632]:ExpressionStatement[37541-37555]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36660-36669]:MarkerAnnotation[37583-37592]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36678-36684]:Modifier[37601-37607]"
    }, {
      "left" : "ObjectCodec",
      "right" : "ObjectCodec",
      "info" : "SimpleType[36685-36696]:SimpleType[37608-37619]"
    }, {
      "left" : "getCodec",
      "right" : "getCodec",
      "info" : "SimpleName[36697-36705]:SimpleName[37620-37628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36708-36726]:Block[37631-37649]"
    }, {
      "left" : "return _codec;",
      "right" : "return _codec;",
      "info" : "ReturnStatement[36710-36724]:ReturnStatement[37633-37647]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36736-36745]:MarkerAnnotation[37659-37668]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36754-36760]:Modifier[37677-37683]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36761-36765]:PrimitiveType[37684-37688]"
    }, {
      "left" : "setCodec",
      "right" : "setCodec",
      "info" : "SimpleName[36766-36774]:SimpleName[37689-37697]"
    }, {
      "left" : "ObjectCodec c",
      "right" : "ObjectCodec c",
      "info" : "SingleVariableDeclaration[36775-36788]:SingleVariableDeclaration[37698-37711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36790-36805]:Block[37713-37728]"
    }, {
      "left" : "_codec = c;",
      "right" : "_codec = c;",
      "info" : "ExpressionStatement[36792-36803]:ExpressionStatement[37715-37726]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36815-36824]:MarkerAnnotation[37738-37747]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36833-36839]:Modifier[37756-37762]"
    }, {
      "left" : "Version",
      "right" : "Version",
      "info" : "SimpleType[36840-36847]:SimpleType[37763-37770]"
    }, {
      "left" : "version",
      "right" : "version",
      "info" : "SimpleName[36848-36855]:SimpleName[37771-37778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36858-36947]:Block[37781-37870]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[36872-36937]:ReturnStatement[37795-37860]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37167-37173]:Modifier[38090-38096]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[37174-37183]:SimpleType[38097-38106]"
    }, {
      "left" : "peekNextToken",
      "right" : "peekNextToken",
      "info" : "SimpleName[37184-37197]:SimpleName[38107-38120]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[37207-37218]:SimpleType[38130-38141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37227-37607]:Block[38150-38530]"
    }, {
      "left" : "if (_closed)",
      "right" : "if (_closed)",
      "info" : "IfStatement[37293-37318]:IfStatement[38216-38241]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[37306-37318]:ReturnStatement[38229-38241]"
    }, {
      "left" : "Segment seg = _segment;",
      "right" : "Segment seg = _segment;",
      "info" : "VariableDeclarationStatement[37331-37354]:VariableDeclarationStatement[38254-38277]"
    }, {
      "left" : "int ptr = _segmentPtr+1;",
      "right" : "int ptr = _segmentPtr+1;",
      "info" : "VariableDeclarationStatement[37367-37391]:VariableDeclarationStatement[38290-38314]"
    }, {
      "left" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[37404-37540]:IfStatement[38327-38463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37443-37540]:Block[38366-38463]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[37461-37469]:ExpressionStatement[38384-38392]"
    }, {
      "left" : "seg = (seg == null) ? null : seg.next();",
      "right" : "seg = (seg == null) ? null : seg.next();",
      "info" : "ExpressionStatement[37486-37526]:ExpressionStatement[38409-38449]"
    }, {
      "left" : "return (seg == null) ? null : seg.type(ptr);",
      "right" : "return (seg == null) ? null : seg.type(ptr);",
      "info" : "ReturnStatement[37553-37597]:ReturnStatement[38476-38520]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37821-37830]:MarkerAnnotation[38744-38753]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37839-37845]:Modifier[38762-38768]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37846-37850]:PrimitiveType[38769-38773]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[37851-37856]:SimpleName[38774-38779]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[37866-37877]:SimpleType[38789-38800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37878-37963]:Block[38801-38886]"
    }, {
      "left" : "if (!_closed)",
      "right" : "if (!_closed)",
      "info" : "IfStatement[37892-37953]:IfStatement[38815-38876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37906-37953]:Block[38829-38876]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[37924-37939]:ExpressionStatement[38847-38862]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38174-38183]:MarkerAnnotation[39097-39106]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38192-38198]:Modifier[39115-39121]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[38199-38208]:SimpleType[39122-39131]"
    }, {
      "left" : "nextToken",
      "right" : "nextToken",
      "info" : "SimpleName[38209-38218]:SimpleName[39132-39141]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[38228-38239]:SimpleType[39151-39162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38248-39804]:Block[39171-40727]"
    }, {
      "left" : "if (_closed || (_segment == null))",
      "right" : "if (_closed || (_segment == null))",
      "info" : "IfStatement[38314-38361]:IfStatement[39237-39284]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[38349-38361]:ReturnStatement[39272-39284]"
    }, {
      "left" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[38417-38649]:IfStatement[39340-39572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38466-38649]:Block[39389-39572]"
    }, {
      "left" : "_segmentPtr = 0;",
      "right" : "_segmentPtr = 0;",
      "info" : "ExpressionStatement[38484-38500]:ExpressionStatement[39407-39423]"
    }, {
      "left" : "_segment = _segment.next();",
      "right" : "_segment = _segment.next();",
      "info" : "ExpressionStatement[38517-38544]:ExpressionStatement[39440-39467]"
    }, {
      "left" : "if (_segment == null)",
      "right" : "if (_segment == null)",
      "info" : "IfStatement[38561-38635]:IfStatement[39484-39558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38583-38635]:Block[39506-39558]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[38605-38617]:ReturnStatement[39528-39540]"
    }, {
      "left" : "_currToken = _segment.type(_segmentPtr);",
      "right" : "_currToken = _segment.type(_segmentPtr);",
      "info" : "ExpressionStatement[38662-38702]:ExpressionStatement[39585-39625]"
    }, {
      "left" : "if (_currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[38765-39763]:IfStatement[39688-40686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38805-39006]:Block[39728-39929]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[38823-38852]:VariableDeclarationStatement[39746-39775]"
    }, {
      "left" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "right" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "info" : "VariableDeclarationStatement[38869-38938]:VariableDeclarationStatement[39792-39861]"
    }, {
      "left" : "_parsingContext.setCurrentName(name);",
      "right" : "_parsingContext.setCurrentName(name);",
      "info" : "ExpressionStatement[38955-38992]:ExpressionStatement[39878-39915]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT)",
      "right" : "if (_currToken == JsonToken.START_OBJECT)",
      "info" : "IfStatement[39012-39763]:IfStatement[39935-40686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39054-39153]:Block[39977-40076]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "info" : "ExpressionStatement[39072-39139]:ExpressionStatement[39995-40062]"
    }, {
      "left" : "if (_currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[39159-39763]:IfStatement[40082-40686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39200-39298]:Block[40123-40221]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "info" : "ExpressionStatement[39218-39284]:ExpressionStatement[40141-40207]"
    }, {
      "left" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "right" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "info" : "IfStatement[39304-39763]:IfStatement[40227-40686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39401-39763]:Block[40324-40686]"
    }, {
      "left" : "_parsingContext = _parsingContext.getParent();",
      "right" : "_parsingContext = _parsingContext.getParent();",
      "info" : "ExpressionStatement[39488-39534]:ExpressionStatement[40411-40457]"
    }, {
      "left" : "if (_parsingContext == null)",
      "right" : "if (_parsingContext == null)",
      "info" : "IfStatement[39622-39749]:IfStatement[40545-40672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39651-39749]:Block[40574-40672]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[39673-39731]:ExpressionStatement[40596-40654]"
    }, {
      "left" : "return _currToken;",
      "right" : "return _currToken;",
      "info" : "ReturnStatement[39776-39794]:ReturnStatement[40699-40717]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39814-39823]:MarkerAnnotation[40737-40746]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39832-39838]:Modifier[40755-40761]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39839-39845]:SimpleType[40762-40768]"
    }, {
      "left" : "nextFieldName",
      "right" : "nextFieldName",
      "info" : "SimpleName[39846-39859]:SimpleName[40769-40782]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[39869-39880]:SimpleType[40792-40803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39889-40526]:Block[40812-41449]"
    }, {
      "left" : "if (_closed || (_segment == null))",
      "right" : "if (_closed || (_segment == null))",
      "info" : "IfStatement[39955-40002]:IfStatement[40878-40925]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[39990-40002]:ReturnStatement[40913-40925]"
    }, {
      "left" : "int ptr = _segmentPtr+1;",
      "right" : "int ptr = _segmentPtr+1;",
      "info" : "VariableDeclarationStatement[40016-40040]:VariableDeclarationStatement[40939-40963]"
    }, {
      "left" : "if (ptr < Segment.TOKENS_PER_SEGMENT && _segment.type(ptr) == JsonToken.FIELD_NAME)",
      "right" : "if (ptr < Segment.TOKENS_PER_SEGMENT && _segment.type(ptr) == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[40053-40432]:IfStatement[40976-41355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40137-40432]:Block[41060-41355]"
    }, {
      "left" : "_segmentPtr = ptr;",
      "right" : "_segmentPtr = ptr;",
      "info" : "ExpressionStatement[40155-40173]:ExpressionStatement[41078-41096]"
    }, {
      "left" : "Object ob = _segment.get(ptr);",
      "right" : "Object ob = _segment.get(ptr);",
      "info" : "VariableDeclarationStatement[40190-40220]:VariableDeclarationStatement[41113-41143]"
    }, {
      "left" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "right" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "info" : "VariableDeclarationStatement[40266-40335]:VariableDeclarationStatement[41189-41258]"
    }, {
      "left" : "_parsingContext.setCurrentName(name);",
      "right" : "_parsingContext.setCurrentName(name);",
      "info" : "ExpressionStatement[40352-40389]:ExpressionStatement[41275-41312]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[40406-40418]:ReturnStatement[41329-41341]"
    }, {
      "left" : "return (nextToken() == JsonToken.FIELD_NAME) ? getCurrentName() : null;",
      "right" : "return (nextToken() == JsonToken.FIELD_NAME) ? getCurrentName() : null;",
      "info" : "ReturnStatement[40445-40516]:ReturnStatement[41368-41439]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40536-40545]:MarkerAnnotation[41459-41468]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40554-40560]:Modifier[41477-41483]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40561-40568]:PrimitiveType[41484-41491]"
    }, {
      "left" : "isClosed",
      "right" : "isClosed",
      "info" : "SimpleName[40569-40577]:SimpleName[41492-41500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40580-40599]:Block[41503-41522]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[40582-40597]:ReturnStatement[41505-41520]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40808-40817]:MarkerAnnotation[41731-41740]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40826-40832]:Modifier[41749-41755]"
    }, {
      "left" : "JsonStreamContext",
      "right" : "JsonStreamContext",
      "info" : "SimpleType[40833-40850]:SimpleType[41756-41773]"
    }, {
      "left" : "getParsingContext",
      "right" : "getParsingContext",
      "info" : "SimpleName[40851-40868]:SimpleName[41774-41791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40871-40898]:Block[41794-41821]"
    }, {
      "left" : "return _parsingContext;",
      "right" : "return _parsingContext;",
      "info" : "ReturnStatement[40873-40896]:ReturnStatement[41796-41819]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40908-40917]:MarkerAnnotation[41831-41840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40926-40932]:Modifier[41849-41855]"
    }, {
      "left" : "JsonLocation",
      "right" : "JsonLocation",
      "info" : "SimpleType[40933-40945]:SimpleType[41856-41868]"
    }, {
      "left" : "getTokenLocation",
      "right" : "getTokenLocation",
      "info" : "SimpleName[40946-40962]:SimpleName[41869-41885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40965-40997]:Block[41888-41920]"
    }, {
      "left" : "return getCurrentLocation();",
      "right" : "return getCurrentLocation();",
      "info" : "ReturnStatement[40967-40995]:ReturnStatement[41890-41918]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41007-41016]:MarkerAnnotation[41930-41939]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41025-41031]:Modifier[41948-41954]"
    }, {
      "left" : "JsonLocation",
      "right" : "JsonLocation",
      "info" : "SimpleType[41032-41044]:SimpleType[41955-41967]"
    }, {
      "left" : "getCurrentLocation",
      "right" : "getCurrentLocation",
      "info" : "SimpleName[41045-41063]:SimpleName[41968-41986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41066-41147]:Block[41989-42070]"
    }, {
      "left" : "return (_location == null) ? JsonLocation.NA : _location;",
      "right" : "return (_location == null) ? JsonLocation.NA : _location;",
      "info" : "ReturnStatement[41080-41137]:ReturnStatement[42003-42060]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41157-41166]:MarkerAnnotation[42080-42089]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41175-41181]:Modifier[42098-42104]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41182-41188]:SimpleType[42105-42111]"
    }, {
      "left" : "getCurrentName",
      "right" : "getCurrentName",
      "info" : "SimpleName[41189-41203]:SimpleName[42112-42126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41206-41585]:Block[42129-42508]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[41308-41522]:IfStatement[42231-42445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41389-41522]:Block[42312-42445]"
    }, {
      "left" : "JsonReadContext parent = _parsingContext.getParent();",
      "right" : "JsonReadContext parent = _parsingContext.getParent();",
      "info" : "VariableDeclarationStatement[41407-41460]:VariableDeclarationStatement[42330-42383]"
    }, {
      "left" : "return parent.getCurrentName();",
      "right" : "return parent.getCurrentName();",
      "info" : "ReturnStatement[41477-41508]:ReturnStatement[42400-42431]"
    }, {
      "left" : "return _parsingContext.getCurrentName();",
      "right" : "return _parsingContext.getCurrentName();",
      "info" : "ReturnStatement[41535-41575]:ReturnStatement[42458-42498]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41595-41604]:MarkerAnnotation[42518-42527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41613-41619]:Modifier[42536-42542]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41620-41624]:PrimitiveType[42543-42547]"
    }, {
      "left" : "overrideCurrentName",
      "right" : "overrideCurrentName",
      "info" : "SimpleName[41625-41644]:SimpleName[42548-42567]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[41645-41656]:SingleVariableDeclaration[42568-42579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41666-42124]:Block[42589-43047]"
    }, {
      "left" : "JsonReadContext ctxt = _parsingContext;",
      "right" : "JsonReadContext ctxt = _parsingContext;",
      "info" : "VariableDeclarationStatement[41765-41804]:VariableDeclarationStatement[42688-42727]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[41817-41954]:IfStatement[42740-42877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41898-41954]:Block[42821-42877]"
    }, {
      "left" : "ctxt = ctxt.getParent();",
      "right" : "ctxt = ctxt.getParent();",
      "info" : "ExpressionStatement[41916-41940]:ExpressionStatement[42839-42863]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[41967-42114]:TryStatement[42890-43037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41971-42029]:Block[42894-42952]"
    }, {
      "left" : "ctxt.setCurrentName(name);",
      "right" : "ctxt.setCurrentName(name);",
      "info" : "ExpressionStatement[41989-42015]:ExpressionStatement[42912-42938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42052-42114]:Block[42975-43037]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[42070-42100]:ThrowStatement[42993-43023]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42351-42360]:MarkerAnnotation[43274-43283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42369-42375]:Modifier[43292-43298]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42376-42382]:SimpleType[43299-43305]"
    }, {
      "left" : "getText",
      "right" : "getText",
      "info" : "SimpleName[42383-42390]:SimpleName[43306-43313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42401-43154]:Block[43324-44077]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[42450-42773]:IfStatement[43373-43696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42550-42773]:Block[43473-43696]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[42568-42597]:VariableDeclarationStatement[43491-43520]"
    }, {
      "left" : "if (ob instanceof String)",
      "right" : "if (ob instanceof String)",
      "info" : "IfStatement[42614-42699]:IfStatement[43537-43622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42640-42699]:Block[43563-43622]"
    }, {
      "left" : "return (String) ob;",
      "right" : "return (String) ob;",
      "info" : "ReturnStatement[42662-42681]:ReturnStatement[43585-43604]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[42716-42759]:ReturnStatement[43639-43682]"
    }, {
      "left" : "if (_currToken == null)",
      "right" : "if (_currToken == null)",
      "info" : "IfStatement[42786-42854]:IfStatement[43709-43777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42810-42854]:Block[43733-43777]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[42828-42840]:ReturnStatement[43751-43763]"
    }, {
      "left" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "right" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "info" : "SwitchStatement[42867-43144]:SwitchStatement[43790-44067]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[42901-42923]:SwitchCase[43824-43846]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[42936-42960]:SwitchCase[43859-43883]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[42977-43006]:VariableDeclarationStatement[43900-43929]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[43023-43066]:ReturnStatement[43946-43989]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[43079-43087]:SwitchCase[44002-44010]"
    }, {
      "left" : "return _currToken.asString();",
      "right" : "return _currToken.asString();",
      "info" : "ReturnStatement[43101-43130]:ReturnStatement[44024-44053]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43164-43173]:MarkerAnnotation[44087-44096]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43182-43188]:Modifier[44105-44111]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[43189-43195]:ArrayType[44112-44118]"
    }, {
      "left" : "getTextCharacters",
      "right" : "getTextCharacters",
      "info" : "SimpleName[43196-43213]:SimpleName[44119-44136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43216-43324]:Block[44139-44247]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[43230-43253]:VariableDeclarationStatement[44153-44176]"
    }, {
      "left" : "return (str == null) ? null : str.toCharArray();",
      "right" : "return (str == null) ? null : str.toCharArray();",
      "info" : "ReturnStatement[43266-43314]:ReturnStatement[44189-44237]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43334-43343]:MarkerAnnotation[44257-44266]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43352-43358]:Modifier[44275-44281]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[43359-43362]:PrimitiveType[44282-44285]"
    }, {
      "left" : "getTextLength",
      "right" : "getTextLength",
      "info" : "SimpleName[43363-43376]:SimpleName[44286-44299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43379-43479]:Block[44302-44402]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[43393-43416]:VariableDeclarationStatement[44316-44339]"
    }, {
      "left" : "return (str == null) ? 0 : str.length();",
      "right" : "return (str == null) ? 0 : str.length();",
      "info" : "ReturnStatement[43429-43469]:ReturnStatement[44352-44392]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43489-43498]:MarkerAnnotation[44412-44421]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43507-43513]:Modifier[44430-44436]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[43514-43517]:PrimitiveType[44437-44440]"
    }, {
      "left" : "getTextOffset",
      "right" : "getTextOffset",
      "info" : "SimpleName[43518-43531]:SimpleName[44441-44454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43534-43547]:Block[44457-44470]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[43536-43545]:ReturnStatement[44459-44468]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43557-43566]:MarkerAnnotation[44480-44489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43575-43581]:Modifier[44498-44504]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[43582-43589]:PrimitiveType[44505-44512]"
    }, {
      "left" : "hasTextCharacters",
      "right" : "hasTextCharacters",
      "info" : "SimpleName[43590-43607]:SimpleName[44513-44530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43610-43702]:Block[44533-44625]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43679-43692]:ReturnStatement[44602-44615]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43940-43949]:MarkerAnnotation[44863-44872]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43958-43964]:Modifier[44881-44887]"
    }, {
      "left" : "BigInteger",
      "right" : "BigInteger",
      "info" : "SimpleType[43965-43975]:SimpleType[44888-44898]"
    }, {
      "left" : "getBigIntegerValue",
      "right" : "getBigIntegerValue",
      "info" : "SimpleName[43976-43994]:SimpleName[44899-44917]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[44004-44015]:SimpleType[44927-44938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44024-44435]:Block[44947-45358]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[44038-44066]:VariableDeclarationStatement[44961-44989]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[44079-44162]:IfStatement[45002-45085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44108-44162]:Block[45031-45085]"
    }, {
      "left" : "return (BigInteger) n;",
      "right" : "return (BigInteger) n;",
      "info" : "ReturnStatement[44126-44148]:ReturnStatement[45049-45071]"
    }, {
      "left" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "right" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "info" : "IfStatement[44175-44293]:IfStatement[45098-45216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44222-44293]:Block[45145-45216]"
    }, {
      "left" : "return ((BigDecimal) n).toBigInteger();",
      "right" : "return ((BigDecimal) n).toBigInteger();",
      "info" : "ReturnStatement[44240-44279]:ReturnStatement[45163-45202]"
    }, {
      "left" : "return BigInteger.valueOf(n.longValue());",
      "right" : "return BigInteger.valueOf(n.longValue());",
      "info" : "ReturnStatement[44384-44425]:ReturnStatement[45307-45348]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44445-44454]:MarkerAnnotation[45368-45377]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44463-44469]:Modifier[45386-45392]"
    }, {
      "left" : "BigDecimal",
      "right" : "BigDecimal",
      "info" : "SimpleType[44470-44480]:SimpleType[45393-45403]"
    }, {
      "left" : "getDecimalValue",
      "right" : "getDecimalValue",
      "info" : "SimpleName[44481-44496]:SimpleName[45404-45419]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[44506-44517]:SimpleType[45429-45440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44526-45023]:Block[45449-45946]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[44540-44568]:VariableDeclarationStatement[45463-45491]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[44581-44664]:IfStatement[45504-45587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44610-44664]:Block[45533-45587]"
    }, {
      "left" : "return (BigDecimal) n;",
      "right" : "return (BigDecimal) n;",
      "info" : "ReturnStatement[44628-44650]:ReturnStatement[45551-45573]"
    }, {
      "left" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "right" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "info" : "SwitchStatement[44677-44926]:SwitchStatement[45600-45849]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[44716-44725]:SwitchCase[45639-45648]"
    }, {
      "left" : "case LONG:",
      "right" : "case LONG:",
      "info" : "SwitchCase[44738-44748]:SwitchCase[45661-45671]"
    }, {
      "left" : "return BigDecimal.valueOf(n.longValue());",
      "right" : "return BigDecimal.valueOf(n.longValue());",
      "info" : "ReturnStatement[44765-44806]:ReturnStatement[45688-45729]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[44819-44836]:SwitchCase[45742-45759]"
    }, {
      "left" : "return new BigDecimal((BigInteger) n);",
      "right" : "return new BigDecimal((BigInteger) n);",
      "info" : "ReturnStatement[44853-44891]:ReturnStatement[45776-45814]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[44904-44912]:SwitchCase[45827-45835]"
    }, {
      "left" : "return BigDecimal.valueOf(n.doubleValue());",
      "right" : "return BigDecimal.valueOf(n.doubleValue());",
      "info" : "ReturnStatement[44970-45013]:ReturnStatement[45893-45936]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45033-45042]:MarkerAnnotation[45956-45965]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45051-45057]:Modifier[45974-45980]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[45058-45064]:PrimitiveType[45981-45987]"
    }, {
      "left" : "getDoubleValue",
      "right" : "getDoubleValue",
      "info" : "SimpleName[45065-45079]:SimpleName[45988-46002]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45089-45100]:SimpleType[46012-46023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45101-45163]:Block[46024-46086]"
    }, {
      "left" : "return getNumberValue().doubleValue();",
      "right" : "return getNumberValue().doubleValue();",
      "info" : "ReturnStatement[45115-45153]:ReturnStatement[46038-46076]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45173-45182]:MarkerAnnotation[46096-46105]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45191-45197]:Modifier[46114-46120]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[45198-45203]:PrimitiveType[46121-46126]"
    }, {
      "left" : "getFloatValue",
      "right" : "getFloatValue",
      "info" : "SimpleName[45204-45217]:SimpleName[46127-46140]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45227-45238]:SimpleType[46150-46161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45239-45300]:Block[46162-46223]"
    }, {
      "left" : "return getNumberValue().floatValue();",
      "right" : "return getNumberValue().floatValue();",
      "info" : "ReturnStatement[45253-45290]:ReturnStatement[46176-46213]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45310-45319]:MarkerAnnotation[46233-46242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45328-45334]:Modifier[46251-46257]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[45335-45338]:PrimitiveType[46258-46261]"
    }, {
      "left" : "getIntValue",
      "right" : "getIntValue",
      "info" : "SimpleName[45339-45350]:SimpleName[46262-46273]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45360-45371]:SimpleType[46283-46294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45380-45613]:Block[46303-46536]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "right" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "info" : "IfStatement[45431-45555]:IfStatement[46354-46478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45477-45555]:Block[46400-46478]"
    }, {
      "left" : "return ((Number) _currentObject()).intValue();",
      "right" : "return ((Number) _currentObject()).intValue();",
      "info" : "ReturnStatement[45495-45541]:ReturnStatement[46418-46464]"
    }, {
      "left" : "return getNumberValue().intValue();",
      "right" : "return getNumberValue().intValue();",
      "info" : "ReturnStatement[45568-45603]:ReturnStatement[46491-46526]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45623-45632]:MarkerAnnotation[46546-46555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45641-45647]:Modifier[46564-46570]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[45648-45652]:PrimitiveType[46571-46575]"
    }, {
      "left" : "getLongValue",
      "right" : "getLongValue",
      "info" : "SimpleName[45653-45665]:SimpleName[46576-46588]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45675-45686]:SimpleType[46598-46609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45687-45747]:Block[46610-46670]"
    }, {
      "left" : "return getNumberValue().longValue();",
      "right" : "return getNumberValue().longValue();",
      "info" : "ReturnStatement[45701-45737]:ReturnStatement[46624-46660]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45757-45766]:MarkerAnnotation[46680-46689]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45775-45781]:Modifier[46698-46704]"
    }, {
      "left" : "NumberType",
      "right" : "NumberType",
      "info" : "SimpleType[45782-45792]:SimpleType[46705-46715]"
    }, {
      "left" : "getNumberType",
      "right" : "getNumberType",
      "info" : "SimpleName[45793-45806]:SimpleName[46716-46729]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45816-45827]:SimpleType[46739-46750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45836-46385]:Block[46759-47308]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[45850-45878]:VariableDeclarationStatement[46773-46801]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[45891-45939]:IfStatement[46814-46862]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[45917-45939]:ReturnStatement[46840-46862]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[45952-45998]:IfStatement[46875-46921]"
    }, {
      "left" : "return NumberType.LONG;",
      "right" : "return NumberType.LONG;",
      "info" : "ReturnStatement[45975-45998]:ReturnStatement[46898-46921]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[46011-46061]:IfStatement[46934-46984]"
    }, {
      "left" : "return NumberType.DOUBLE;",
      "right" : "return NumberType.DOUBLE;",
      "info" : "ReturnStatement[46036-46061]:ReturnStatement[46959-46984]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[46074-46133]:IfStatement[46997-47056]"
    }, {
      "left" : "return NumberType.BIG_DECIMAL;",
      "right" : "return NumberType.BIG_DECIMAL;",
      "info" : "ReturnStatement[46103-46133]:ReturnStatement[47026-47056]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[46146-46205]:IfStatement[47069-47128]"
    }, {
      "left" : "return NumberType.BIG_INTEGER;",
      "right" : "return NumberType.BIG_INTEGER;",
      "info" : "ReturnStatement[46175-46205]:ReturnStatement[47098-47128]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[46218-46266]:IfStatement[47141-47189]"
    }, {
      "left" : "return NumberType.FLOAT;",
      "right" : "return NumberType.FLOAT;",
      "info" : "ReturnStatement[46242-46266]:ReturnStatement[47165-47189]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[46279-46325]:IfStatement[47202-47248]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[46303-46325]:ReturnStatement[47226-47248]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[46363-46375]:ReturnStatement[47286-47298]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46395-46404]:MarkerAnnotation[47318-47327]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46413-46419]:Modifier[47336-47342]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[46420-46425]:Modifier[47343-47348]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[46426-46432]:SimpleType[47349-47355]"
    }, {
      "left" : "getNumberValue",
      "right" : "getNumberValue",
      "info" : "SimpleName[46433-46447]:SimpleName[47356-47370]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[46457-46468]:SimpleType[47380-47391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46469-47367]:Block[47392-48290]"
    }, {
      "left" : "_checkIsNumber();",
      "right" : "_checkIsNumber();",
      "info" : "ExpressionStatement[46483-46500]:ExpressionStatement[47406-47423]"
    }, {
      "left" : "Object value = _currentObject();",
      "right" : "Object value = _currentObject();",
      "info" : "VariableDeclarationStatement[46513-46545]:VariableDeclarationStatement[47436-47468]"
    }, {
      "left" : "if (value instanceof Number)",
      "right" : "if (value instanceof Number)",
      "info" : "IfStatement[46558-46641]:IfStatement[47481-47564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46587-46641]:Block[47510-47564]"
    }, {
      "left" : "return (Number) value;",
      "right" : "return (Number) value;",
      "info" : "ReturnStatement[46605-46627]:ReturnStatement[47528-47550]"
    }, {
      "left" : "if (value instanceof String)",
      "right" : "if (value instanceof String)",
      "info" : "IfStatement[46879-47127]:IfStatement[47802-48050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46908-47127]:Block[47831-48050]"
    }, {
      "left" : "String str = (String) value;",
      "right" : "String str = (String) value;",
      "info" : "VariableDeclarationStatement[46926-46954]:VariableDeclarationStatement[47849-47877]"
    }, {
      "left" : "if (str.indexOf('.') >= 0)",
      "right" : "if (str.indexOf('.') >= 0)",
      "info" : "IfStatement[46971-47069]:IfStatement[47894-47992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46998-47069]:Block[47921-47992]"
    }, {
      "left" : "return Double.parseDouble(str);",
      "right" : "return Double.parseDouble(str);",
      "info" : "ReturnStatement[47020-47051]:ReturnStatement[47943-47974]"
    }, {
      "left" : "return Long.parseLong(str);",
      "right" : "return Long.parseLong(str);",
      "info" : "ReturnStatement[47086-47113]:ReturnStatement[48009-48036]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[47140-47203]:IfStatement[48063-48126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47159-47203]:Block[48082-48126]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47177-47189]:ReturnStatement[48100-48112]"
    }, {
      "left" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "right" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "info" : "ThrowStatement[47216-47357]:ThrowStatement[48139-48280]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47595-47604]:MarkerAnnotation[48518-48527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47613-47619]:Modifier[48536-48542]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[47620-47626]:SimpleType[48543-48549]"
    }, {
      "left" : "getEmbeddedObject",
      "right" : "getEmbeddedObject",
      "info" : "SimpleName[47627-47644]:SimpleName[48550-48567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47655-47811]:Block[48578-48734]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[47669-47776]:IfStatement[48592-48699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47720-47776]:Block[48643-48699]"
    }, {
      "left" : "return _currentObject();",
      "right" : "return _currentObject();",
      "info" : "ReturnStatement[47738-47762]:ReturnStatement[48661-48685]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47789-47801]:ReturnStatement[48712-48724]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47821-47830]:MarkerAnnotation[48744-48753]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[47839-47868]:SingleMemberAnnotation[48762-48791]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47877-47883]:Modifier[48800-48806]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[47884-47890]:ArrayType[48807-48813]"
    }, {
      "left" : "getBinaryValue",
      "right" : "getBinaryValue",
      "info" : "SimpleName[47891-47905]:SimpleName[48814-48828]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[47906-47930]:SingleVariableDeclaration[48829-48853]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[47939-47950]:SimpleType[48862-48873]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[47952-47970]:SimpleType[48875-48893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47979-49039]:Block[48902-49962]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[48044-48364]:IfStatement[48967-49287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48095-48364]:Block[49018-49287]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[48173-48202]:VariableDeclarationStatement[49096-49125]"
    }, {
      "left" : "if (ob instanceof byte[])",
      "right" : "if (ob instanceof byte[])",
      "info" : "IfStatement[48219-48304]:IfStatement[49142-49227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48245-48304]:Block[49168-49227]"
    }, {
      "left" : "return (byte[]) ob;",
      "right" : "return (byte[]) ob;",
      "info" : "ReturnStatement[48267-48286]:ReturnStatement[49190-49209]"
    }, {
      "left" : "if (_currToken != JsonToken.VALUE_STRING)",
      "right" : "if (_currToken != JsonToken.VALUE_STRING)",
      "info" : "IfStatement[48377-48589]:IfStatement[49300-49512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48419-48589]:Block[49342-49512]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "info" : "ThrowStatement[48437-48575]:ThrowStatement[49360-49498]"
    }, {
      "left" : "final String str = getText();",
      "right" : "final String str = getText();",
      "info" : "VariableDeclarationStatement[48602-48631]:VariableDeclarationStatement[49525-49554]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[48644-48705]:IfStatement[49567-49628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48661-48705]:Block[49584-49628]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[48679-48691]:ReturnStatement[49602-49614]"
    }, {
      "left" : "ByteArrayBuilder builder = _byteBuilder;",
      "right" : "ByteArrayBuilder builder = _byteBuilder;",
      "info" : "VariableDeclarationStatement[48718-48758]:VariableDeclarationStatement[49641-49681]"
    }, {
      "left" : "if (builder == null)",
      "right" : "if (builder == null)",
      "info" : "IfStatement[48771-48934]:IfStatement[49694-49857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48792-48875]:Block[49715-49798]"
    }, {
      "left" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "right" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "info" : "ExpressionStatement[48810-48861]:ExpressionStatement[49733-49784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48881-48934]:Block[49804-49857]"
    }, {
      "left" : "_byteBuilder.reset();",
      "right" : "_byteBuilder.reset();",
      "info" : "ExpressionStatement[48899-48920]:ExpressionStatement[49822-49843]"
    }, {
      "left" : "_decodeBase64(str, builder, b64variant);",
      "right" : "_decodeBase64(str, builder, b64variant);",
      "info" : "ExpressionStatement[48947-48987]:ExpressionStatement[49870-49910]"
    }, {
      "left" : "return builder.toByteArray();",
      "right" : "return builder.toByteArray();",
      "info" : "ReturnStatement[49000-49029]:ReturnStatement[49923-49952]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49049-49058]:MarkerAnnotation[49972-49981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49067-49073]:Modifier[49990-49996]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[49074-49077]:PrimitiveType[49997-50000]"
    }, {
      "left" : "readBinaryValue",
      "right" : "readBinaryValue",
      "info" : "SimpleName[49078-49093]:SimpleName[50001-50016]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[49094-49118]:SingleVariableDeclaration[50017-50041]"
    }, {
      "left" : "OutputStream out",
      "right" : "OutputStream out",
      "info" : "SingleVariableDeclaration[49120-49136]:SingleVariableDeclaration[50043-50059]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[49145-49156]:SimpleType[50068-50079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49165-49383]:Block[50088-50306]"
    }, {
      "left" : "byte[] data = getBinaryValue(b64variant);",
      "right" : "byte[] data = getBinaryValue(b64variant);",
      "info" : "VariableDeclarationStatement[49179-49220]:VariableDeclarationStatement[50102-50143]"
    }, {
      "left" : "if (data != null)",
      "right" : "if (data != null)",
      "info" : "IfStatement[49233-49351]:IfStatement[50156-50274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49251-49351]:Block[50174-50274]"
    }, {
      "left" : "out.write(data, 0, data.length);",
      "right" : "out.write(data, 0, data.length);",
      "info" : "ExpressionStatement[49269-49301]:ExpressionStatement[50192-50224]"
    }, {
      "left" : "return data.length;",
      "right" : "return data.length;",
      "info" : "ReturnStatement[49318-49337]:ReturnStatement[50241-50260]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[49364-49373]:ReturnStatement[50287-50296]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49587-49596]:MarkerAnnotation[50510-50519]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49605-49611]:Modifier[50528-50534]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49612-49619]:PrimitiveType[50535-50542]"
    }, {
      "left" : "canReadObjectId",
      "right" : "canReadObjectId",
      "info" : "SimpleName[49620-49635]:SimpleName[50543-50558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49638-49689]:Block[50561-50612]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[49652-49679]:ReturnStatement[50575-50602]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49699-49708]:MarkerAnnotation[50622-50631]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49717-49723]:Modifier[50640-50646]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49724-49731]:PrimitiveType[50647-50654]"
    }, {
      "left" : "canReadTypeId",
      "right" : "canReadTypeId",
      "info" : "SimpleName[49732-49745]:SimpleName[50655-50668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49748-49797]:Block[50671-50720]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[49762-49787]:ReturnStatement[50685-50710]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49807-49816]:MarkerAnnotation[50730-50739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49825-49831]:Modifier[50748-50754]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[49832-49838]:SimpleType[50755-50761]"
    }, {
      "left" : "getTypeId",
      "right" : "getTypeId",
      "info" : "SimpleName[49839-49848]:SimpleName[50762-50771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49851-49915]:Block[50774-50838]"
    }, {
      "left" : "return _segment.findTypeId(_segmentPtr);",
      "right" : "return _segment.findTypeId(_segmentPtr);",
      "info" : "ReturnStatement[49865-49905]:ReturnStatement[50788-50828]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49925-49934]:MarkerAnnotation[50848-50857]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49943-49949]:Modifier[50866-50872]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[49950-49956]:SimpleType[50873-50879]"
    }, {
      "left" : "getObjectId",
      "right" : "getObjectId",
      "info" : "SimpleName[49957-49968]:SimpleName[50880-50891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49971-50037]:Block[50894-50960]"
    }, {
      "left" : "return _segment.findObjectId(_segmentPtr);",
      "right" : "return _segment.findObjectId(_segmentPtr);",
      "info" : "ReturnStatement[49985-50027]:ReturnStatement[50908-50950]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[50243-50252]:Modifier[51166-51175]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[50253-50258]:Modifier[51176-51181]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[50259-50265]:SimpleType[51182-51188]"
    }, {
      "left" : "_currentObject",
      "right" : "_currentObject",
      "info" : "SimpleName[50266-50280]:SimpleName[51189-51203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50283-50340]:Block[51206-51263]"
    }, {
      "left" : "return _segment.get(_segmentPtr);",
      "right" : "return _segment.get(_segmentPtr);",
      "info" : "ReturnStatement[50297-50330]:ReturnStatement[51220-51253]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[50350-50359]:Modifier[51273-51282]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[50360-50365]:Modifier[51283-51288]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[50366-50370]:PrimitiveType[51289-51293]"
    }, {
      "left" : "_checkIsNumber",
      "right" : "_checkIsNumber",
      "info" : "SimpleName[50371-50385]:SimpleName[51294-51308]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[50395-50413]:SimpleType[51318-51336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50422-50634]:Block[51345-51557]"
    }, {
      "left" : "if (_currToken == null || !_currToken.isNumeric())",
      "right" : "if (_currToken == null || !_currToken.isNumeric())",
      "info" : "IfStatement[50436-50624]:IfStatement[51359-51547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50487-50624]:Block[51410-51547]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "info" : "ThrowStatement[50505-50610]:ThrowStatement[51428-51533]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50644-50653]:MarkerAnnotation[51567-51576]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[50662-50671]:Modifier[51585-51594]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[50672-50676]:PrimitiveType[51595-51599]"
    }, {
      "left" : "_handleEOF",
      "right" : "_handleEOF",
      "info" : "SimpleName[50677-50687]:SimpleName[51600-51610]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[50697-50715]:SimpleType[51620-51638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50716-50757]:Block[51639-51680]"
    }, {
      "left" : "_throwInternal();",
      "right" : "_throwInternal();",
      "info" : "ExpressionStatement[50730-50747]:ExpressionStatement[51653-51670]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[51114-51123]:Modifier[52037-52046]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51124-51129]:Modifier[52047-52052]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[51130-51136]:Modifier[52053-52059]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[51137-51142]:TYPE_DECLARATION_KIND[52060-52065]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleName[51143-51150]:SimpleName[52066-52073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51449-51784]:Block[52372-52707]"
    }, {
      "left" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "right" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "info" : "ExpressionStatement[51541-51582]:ExpressionStatement[52464-52505]"
    }, {
      "left" : "JsonToken[] t = JsonToken.values();",
      "right" : "JsonToken[] t = JsonToken.values();",
      "info" : "VariableDeclarationStatement[51595-51630]:VariableDeclarationStatement[52518-52553]"
    }, {
      "left" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "right" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "info" : "ExpressionStatement[51698-51774]:ExpressionStatement[52621-52697]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52361-52367]:Modifier[53284-53290]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleName[52368-52375]:SimpleName[53291-53298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52378-52381]:Block[53301-53304]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52419-52425]:Modifier[53342-53348]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[52426-52435]:SimpleType[53349-53358]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[52436-52440]:SimpleName[53359-53363]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[52441-52450]:SingleVariableDeclaration[53364-53373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52460-52667]:Block[53383-53590]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[52474-52495]:VariableDeclarationStatement[53397-53418]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[52508-52574]:IfStatement[53431-53497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52523-52574]:Block[53446-53497]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[52541-52560]:ExpressionStatement[53464-53483]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[52587-52612]:VariableDeclarationStatement[53510-53535]"
    }, {
      "left" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "right" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "info" : "ReturnStatement[52625-52657]:ReturnStatement[53548-53580]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52677-52683]:Modifier[53600-53606]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[52684-52687]:PrimitiveType[53607-53610]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[52688-52695]:SimpleName[53611-53618]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[52696-52705]:SingleVariableDeclaration[53619-53628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52715-52900]:Block[53638-53823]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[52729-52750]:VariableDeclarationStatement[53652-53673]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[52763-52829]:IfStatement[53686-53752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52778-52829]:Block[53701-53752]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[52796-52815]:ExpressionStatement[53719-53738]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[52842-52867]:VariableDeclarationStatement[53765-53790]"
    }, {
      "left" : "return ix;",
      "right" : "return ix;",
      "info" : "ReturnStatement[52880-52890]:ReturnStatement[53803-53813]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52918-52924]:Modifier[53841-53847]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[52925-52931]:SimpleType[53848-53854]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[52932-52935]:SimpleName[53855-53858]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[52936-52945]:SingleVariableDeclaration[53859-53868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52947-52993]:Block[53870-53916]"
    }, {
      "left" : "return _tokens[index];",
      "right" : "return _tokens[index];",
      "info" : "ReturnStatement[52961-52983]:ReturnStatement[53884-53906]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53003-53009]:Modifier[53926-53932]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[53010-53017]:SimpleType[53933-53940]"
    }, {
      "left" : "next",
      "right" : "next",
      "info" : "SimpleName[53018-53022]:SimpleName[53941-53945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53025-53042]:Block[53948-53965]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53027-53040]:ReturnStatement[53950-53963]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53177-53183]:Modifier[54100-54106]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53184-53191]:PrimitiveType[54107-54114]"
    }, {
      "left" : "hasIds",
      "right" : "hasIds",
      "info" : "SimpleName[53192-53198]:SimpleName[54115-54121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53201-53251]:Block[54124-54174]"
    }, {
      "left" : "return _nativeIds != null;",
      "right" : "return _nativeIds != null;",
      "info" : "ReturnStatement[53215-53241]:ReturnStatement[54138-54164]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53304-53310]:Modifier[54227-54233]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[53311-53318]:SimpleType[54234-54241]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[53319-53325]:SimpleName[54242-54248]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53326-53335]:SingleVariableDeclaration[54249-54258]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[53337-53356]:SingleVariableDeclaration[54260-54279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53366-53603]:Block[54289-54526]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[53380-53495]:IfStatement[54303-54418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53412-53495]:Block[54335-54418]"
    }, {
      "left" : "set(index, tokenType);",
      "right" : "set(index, tokenType);",
      "info" : "ExpressionStatement[53430-53452]:ExpressionStatement[54353-54375]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53469-53481]:ReturnStatement[54392-54404]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[53508-53530]:ExpressionStatement[54431-54453]"
    }, {
      "left" : "_next.set(0, tokenType);",
      "right" : "_next.set(0, tokenType);",
      "info" : "ExpressionStatement[53543-53567]:ExpressionStatement[54466-54490]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53580-53593]:ReturnStatement[54503-54516]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53613-53619]:Modifier[54536-54542]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[53620-53627]:SimpleType[54543-54550]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[53628-53634]:SimpleName[54551-54557]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53635-53644]:SingleVariableDeclaration[54558-54567]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[53646-53665]:SingleVariableDeclaration[54569-54588]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[53683-53698]:SingleVariableDeclaration[54606-54621]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[53700-53713]:SingleVariableDeclaration[54623-54636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53723-53996]:Block[54646-54919]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[53737-53870]:IfStatement[54660-54793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53769-53870]:Block[54692-54793]"
    }, {
      "left" : "set(index, tokenType, objectId, typeId);",
      "right" : "set(index, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[53787-53827]:ExpressionStatement[54710-54750]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53844-53856]:ReturnStatement[54767-54779]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[53883-53905]:ExpressionStatement[54806-54828]"
    }, {
      "left" : "_next.set(0, tokenType, objectId, typeId);",
      "right" : "_next.set(0, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[53918-53960]:ExpressionStatement[54841-54883]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53973-53986]:ReturnStatement[54896-54909]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54006-54012]:Modifier[54929-54935]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[54013-54020]:SimpleType[54936-54943]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[54021-54027]:SimpleName[54944-54950]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54028-54037]:SingleVariableDeclaration[54951-54960]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[54039-54058]:SingleVariableDeclaration[54962-54981]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[54060-54072]:SingleVariableDeclaration[54983-54995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54082-54333]:Block[55005-55256]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[54096-54218]:IfStatement[55019-55141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54128-54218]:Block[55051-55141]"
    }, {
      "left" : "set(index, tokenType, value);",
      "right" : "set(index, tokenType, value);",
      "info" : "ExpressionStatement[54146-54175]:ExpressionStatement[55069-55098]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[54192-54204]:ReturnStatement[55115-55127]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[54231-54253]:ExpressionStatement[55154-55176]"
    }, {
      "left" : "_next.set(0, tokenType, value);",
      "right" : "_next.set(0, tokenType, value);",
      "info" : "ExpressionStatement[54266-54297]:ExpressionStatement[55189-55220]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[54310-54323]:ReturnStatement[55233-55246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54343-54349]:Modifier[55266-55272]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[54350-54357]:SimpleType[55273-55280]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[54358-54364]:SimpleName[55281-55287]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54365-54374]:SingleVariableDeclaration[55288-55297]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[54376-54395]:SingleVariableDeclaration[55299-55318]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[54397-54409]:SingleVariableDeclaration[55320-55332]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[54427-54442]:SingleVariableDeclaration[55350-55365]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[54444-54457]:SingleVariableDeclaration[55367-55380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54467-54754]:Block[55390-55677]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[54481-54621]:IfStatement[55404-55544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54513-54621]:Block[55436-55544]"
    }, {
      "left" : "set(index, tokenType, value, objectId, typeId);",
      "right" : "set(index, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[54531-54578]:ExpressionStatement[55454-55501]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[54595-54607]:ReturnStatement[55518-55530]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[54634-54656]:ExpressionStatement[55557-55579]"
    }, {
      "left" : "_next.set(0, tokenType, value, objectId, typeId);",
      "right" : "_next.set(0, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[54669-54718]:ExpressionStatement[55592-55641]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[54731-54744]:ReturnStatement[55654-55667]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54764-54770]:Modifier[55687-55693]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[54771-54778]:SimpleType[55694-55701]"
    }, {
      "left" : "appendRaw",
      "right" : "appendRaw",
      "info" : "SimpleName[54779-54788]:SimpleName[55702-55711]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54789-54798]:SingleVariableDeclaration[55712-55721]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[54800-54816]:SingleVariableDeclaration[55723-55739]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[54818-54830]:SingleVariableDeclaration[55741-55753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54840-55097]:Block[55763-56020]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[54854-54979]:IfStatement[55777-55902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54886-54979]:Block[55809-55902]"
    }, {
      "left" : "set(index, rawTokenType, value);",
      "right" : "set(index, rawTokenType, value);",
      "info" : "ExpressionStatement[54904-54936]:ExpressionStatement[55827-55859]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[54953-54965]:ReturnStatement[55876-55888]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[54992-55014]:ExpressionStatement[55915-55937]"
    }, {
      "left" : "_next.set(0, rawTokenType, value);",
      "right" : "_next.set(0, rawTokenType, value);",
      "info" : "ExpressionStatement[55027-55061]:ExpressionStatement[55950-55984]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[55074-55087]:ReturnStatement[55997-56010]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55107-55113]:Modifier[56030-56036]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[55114-55121]:SimpleType[56037-56044]"
    }, {
      "left" : "appendRaw",
      "right" : "appendRaw",
      "info" : "SimpleName[55122-55131]:SimpleName[56045-56054]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[55132-55141]:SingleVariableDeclaration[56055-56064]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[55143-55159]:SingleVariableDeclaration[56066-56082]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[55161-55173]:SingleVariableDeclaration[56084-56096]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[55191-55206]:SingleVariableDeclaration[56114-56129]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[55208-55221]:SingleVariableDeclaration[56131-56144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55231-55524]:Block[56154-56447]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[55245-55388]:IfStatement[56168-56311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55277-55388]:Block[56200-56311]"
    }, {
      "left" : "set(index, rawTokenType, value, objectId, typeId);",
      "right" : "set(index, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[55295-55345]:ExpressionStatement[56218-56268]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[55362-55374]:ReturnStatement[56285-56297]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[55401-55423]:ExpressionStatement[56324-56346]"
    }, {
      "left" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "right" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[55436-55488]:ExpressionStatement[56359-56411]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[55501-55514]:ReturnStatement[56424-56437]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[55534-55541]:Modifier[56457-56464]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55542-55546]:PrimitiveType[56465-56469]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[55547-55550]:SimpleName[56470-56473]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[55551-55560]:SingleVariableDeclaration[56474-56483]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[55562-55581]:SingleVariableDeclaration[56485-56504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55591-55942]:Block[56514-56865]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[55773-55809]:VariableDeclarationStatement[56696-56732]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[55822-55895]:IfStatement[56745-56818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55837-55895]:Block[56760-56818]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[55855-55881]:ExpressionStatement[56778-56804]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[55908-55932]:ExpressionStatement[56831-56855]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[55952-55959]:Modifier[56875-56882]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55960-55964]:PrimitiveType[56883-56887]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[55965-55968]:SimpleName[56888-56891]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[55969-55978]:SingleVariableDeclaration[56892-56901]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[55980-55999]:SingleVariableDeclaration[56903-56922]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[56017-56032]:SingleVariableDeclaration[56940-56955]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[56034-56047]:SingleVariableDeclaration[56957-56970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56057-56294]:Block[56980-57217]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[56071-56107]:VariableDeclarationStatement[56994-57030]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[56120-56193]:IfStatement[57043-57116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56135-56193]:Block[57058-57116]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[56153-56179]:ExpressionStatement[57076-57102]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[56206-56230]:ExpressionStatement[57129-57153]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[56243-56284]:ExpressionStatement[57166-57207]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[56304-56311]:Modifier[57227-57234]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56312-56316]:PrimitiveType[57235-57239]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[56317-56320]:SimpleName[57240-57243]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[56321-56330]:SingleVariableDeclaration[57244-57253]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[56332-56351]:SingleVariableDeclaration[57255-57274]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[56353-56365]:SingleVariableDeclaration[57276-57288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56375-56594]:Block[57298-57517]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[56389-56412]:ExpressionStatement[57312-57335]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[56425-56461]:VariableDeclarationStatement[57348-57384]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[56474-56547]:IfStatement[57397-57470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56489-56547]:Block[57412-57470]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[56507-56533]:ExpressionStatement[57430-57456]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[56560-56584]:ExpressionStatement[57483-57507]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[56604-56611]:Modifier[57527-57534]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56612-56616]:PrimitiveType[57535-57539]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[56617-56620]:SimpleName[57540-57543]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[56621-56630]:SingleVariableDeclaration[57544-57553]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[56632-56651]:SingleVariableDeclaration[57555-57574]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[56653-56665]:SingleVariableDeclaration[57576-57588]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[56683-56698]:SingleVariableDeclaration[57606-57621]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[56700-56713]:SingleVariableDeclaration[57623-57636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56723-56996]:Block[57646-57919]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[56737-56760]:ExpressionStatement[57660-57683]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[56773-56809]:VariableDeclarationStatement[57696-57732]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[56822-56895]:IfStatement[57745-57818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56837-56895]:Block[57760-57818]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[56855-56881]:ExpressionStatement[57778-57804]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[56908-56932]:ExpressionStatement[57831-57855]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[56945-56986]:ExpressionStatement[57868-57909]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57006-57013]:Modifier[57929-57936]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57014-57018]:PrimitiveType[57937-57941]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[57019-57022]:SimpleName[57942-57945]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[57023-57032]:SingleVariableDeclaration[57946-57955]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[57034-57050]:SingleVariableDeclaration[57957-57973]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[57052-57064]:SingleVariableDeclaration[57975-57987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57074-57293]:Block[57997-58216]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[57088-57111]:ExpressionStatement[58011-58034]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[57124-57160]:VariableDeclarationStatement[58047-58083]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[57173-57246]:IfStatement[58096-58169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57188-57246]:Block[58111-58169]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[57206-57232]:ExpressionStatement[58129-58155]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[57259-57283]:ExpressionStatement[58182-58206]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57303-57310]:Modifier[58226-58233]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57311-57315]:PrimitiveType[58234-58238]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[57316-57319]:SimpleName[58239-58242]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[57320-57329]:SingleVariableDeclaration[58243-58252]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[57331-57347]:SingleVariableDeclaration[58254-58270]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[57349-57361]:SingleVariableDeclaration[58272-58284]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[57363-57378]:SingleVariableDeclaration[58286-58301]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[57380-57393]:SingleVariableDeclaration[58303-58316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57403-57676]:Block[58326-58599]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[57417-57440]:ExpressionStatement[58340-58363]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[57453-57489]:VariableDeclarationStatement[58376-58412]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[57502-57575]:IfStatement[58425-58498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57517-57575]:Block[58440-58498]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[57535-57561]:ExpressionStatement[58458-58484]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[57588-57612]:ExpressionStatement[58511-58535]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[57625-57666]:ExpressionStatement[58548-58589]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57686-57693]:Modifier[58609-58616]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[57694-57699]:Modifier[58617-58622]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57700-57704]:PrimitiveType[58623-58627]"
    }, {
      "left" : "assignNativeIds",
      "right" : "assignNativeIds",
      "info" : "SimpleName[57705-57720]:SimpleName[58628-58643]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[57721-57730]:SingleVariableDeclaration[58644-58653]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[57732-57747]:SingleVariableDeclaration[58655-58670]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[57749-57762]:SingleVariableDeclaration[58672-58685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57772-58119]:Block[58695-59042]"
    }, {
      "left" : "if (_nativeIds == null)",
      "right" : "if (_nativeIds == null)",
      "info" : "IfStatement[57786-57885]:IfStatement[58709-58808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57810-57885]:Block[58733-58808]"
    }, {
      "left" : "_nativeIds = new TreeMap<Integer,Object>();",
      "right" : "_nativeIds = new TreeMap<Integer,Object>();",
      "info" : "ExpressionStatement[57828-57871]:ExpressionStatement[58751-58794]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[57898-58000]:IfStatement[58821-58923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57920-58000]:Block[58843-58923]"
    }, {
      "left" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "right" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "info" : "ExpressionStatement[57938-57986]:ExpressionStatement[58861-58909]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[58013-58109]:IfStatement[58936-59032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58033-58109]:Block[58956-59032]"
    }, {
      "left" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "right" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "info" : "ExpressionStatement[58051-58095]:ExpressionStatement[58974-59018]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58175-58181]:Modifier[59098-59104]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[58182-58188]:SimpleType[59105-59111]"
    }, {
      "left" : "findObjectId",
      "right" : "findObjectId",
      "info" : "SimpleName[58189-58201]:SimpleName[59112-59124]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[58202-58211]:SingleVariableDeclaration[59125-59134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58213-58312]:Block[59136-59235]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "info" : "ReturnStatement[58227-58302]:ReturnStatement[59150-59225]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58376-58382]:Modifier[59299-59305]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[58383-58389]:SimpleType[59306-59312]"
    }, {
      "left" : "findTypeId",
      "right" : "findTypeId",
      "info" : "SimpleName[58390-58400]:SimpleName[59313-59323]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[58401-58410]:SingleVariableDeclaration[59324-59333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58412-58509]:Block[59335-59432]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "info" : "ReturnStatement[58426-58499]:ReturnStatement[59349-59422]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[58519-58526]:Modifier[59442-59449]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[58527-58532]:Modifier[59450-59455]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[58533-58536]:PrimitiveType[59456-59459]"
    }, {
      "left" : "_typeIdIndex",
      "right" : "_typeIdIndex",
      "info" : "SimpleName[58537-58549]:SimpleName[59460-59472]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[58550-58555]:SingleVariableDeclaration[59473-59478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58557-58572]:Block[59480-59495]"
    }, {
      "left" : "return i+i;",
      "right" : "return i+i;",
      "info" : "ReturnStatement[58559-58570]:ReturnStatement[59482-59493]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[58581-58588]:Modifier[59504-59511]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[58589-58594]:Modifier[59512-59517]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[58595-58598]:PrimitiveType[59518-59521]"
    }, {
      "left" : "_objectIdIndex",
      "right" : "_objectIdIndex",
      "info" : "SimpleName[58599-58613]:SimpleName[59522-59536]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[58614-58619]:SingleVariableDeclaration[59537-59542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58621-58638]:Block[59544-59561]"
    }, {
      "left" : "return i+i+1;",
      "right" : "return i+i+1;",
      "info" : "ReturnStatement[58623-58636]:ReturnStatement[59546-59559]"
    } ]
  },
  "interFileMappings" : { }
}