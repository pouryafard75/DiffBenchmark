{
  "matchedElements" : [
 {
    "left" : "class : PeriodFormatterBuilder",
    "right" : "class : PeriodFormatterBuilder",
    "info" : "TypeDeclaration[1024-68852]:TypeDeclaration[1024-69092]"
  }, {
    "left" : "PRINT_ZERO_RARELY_FIRST",
    "right" : "PRINT_ZERO_RARELY_FIRST",
    "info" : "FieldDeclaration[2264-2317]:FieldDeclaration[2264-2317]"
  }, {
    "left" : "PRINT_ZERO_RARELY_LAST",
    "right" : "PRINT_ZERO_RARELY_LAST",
    "info" : "FieldDeclaration[2322-2374]:FieldDeclaration[2322-2374]"
  }, {
    "left" : "PRINT_ZERO_IF_SUPPORTED",
    "right" : "PRINT_ZERO_IF_SUPPORTED",
    "info" : "FieldDeclaration[2379-2432]:FieldDeclaration[2379-2432]"
  }, {
    "left" : "PRINT_ZERO_ALWAYS",
    "right" : "PRINT_ZERO_ALWAYS",
    "info" : "FieldDeclaration[2437-2484]:FieldDeclaration[2437-2484]"
  }, {
    "left" : "PRINT_ZERO_NEVER",
    "right" : "PRINT_ZERO_NEVER",
    "info" : "FieldDeclaration[2489-2535]:FieldDeclaration[2489-2535]"
  }, {
    "left" : "YEARS",
    "right" : "YEARS",
    "info" : "FieldDeclaration[2545-2580]:FieldDeclaration[2545-2580]"
  }, {
    "left" : "MONTHS",
    "right" : "MONTHS",
    "info" : "FieldDeclaration[2585-2621]:FieldDeclaration[2585-2621]"
  }, {
    "left" : "WEEKS",
    "right" : "WEEKS",
    "info" : "FieldDeclaration[2626-2661]:FieldDeclaration[2626-2661]"
  }, {
    "left" : "DAYS",
    "right" : "DAYS",
    "info" : "FieldDeclaration[2666-2700]:FieldDeclaration[2666-2700]"
  }, {
    "left" : "HOURS",
    "right" : "HOURS",
    "info" : "FieldDeclaration[2705-2740]:FieldDeclaration[2705-2740]"
  }, {
    "left" : "MINUTES",
    "right" : "MINUTES",
    "info" : "FieldDeclaration[2745-2782]:FieldDeclaration[2745-2782]"
  }, {
    "left" : "SECONDS",
    "right" : "SECONDS",
    "info" : "FieldDeclaration[2787-2824]:FieldDeclaration[2787-2824]"
  }, {
    "left" : "MILLIS",
    "right" : "MILLIS",
    "info" : "FieldDeclaration[2829-2865]:FieldDeclaration[2829-2865]"
  }, {
    "left" : "SECONDS_MILLIS",
    "right" : "SECONDS_MILLIS",
    "info" : "FieldDeclaration[2870-2914]:FieldDeclaration[2870-2914]"
  }, {
    "left" : "SECONDS_OPTIONAL_MILLIS",
    "right" : "SECONDS_OPTIONAL_MILLIS",
    "info" : "FieldDeclaration[2919-2972]:FieldDeclaration[2919-2972]"
  }, {
    "left" : "MAX_FIELD",
    "right" : "MAX_FIELD",
    "info" : "FieldDeclaration[2977-3038]:FieldDeclaration[2977-3038]"
  }, {
    "left" : "iMinPrintedDigits",
    "right" : "iMinPrintedDigits",
    "info" : "FieldDeclaration[3044-3074]:FieldDeclaration[3044-3074]"
  }, {
    "left" : "iPrintZeroSetting",
    "right" : "iPrintZeroSetting",
    "info" : "FieldDeclaration[3079-3109]:FieldDeclaration[3079-3109]"
  }, {
    "left" : "iMaxParsedDigits",
    "right" : "iMaxParsedDigits",
    "info" : "FieldDeclaration[3114-3143]:FieldDeclaration[3114-3143]"
  }, {
    "left" : "iRejectSignedValues",
    "right" : "iRejectSignedValues",
    "info" : "FieldDeclaration[3148-3184]:FieldDeclaration[3148-3184]"
  }, {
    "left" : "iPrefix",
    "right" : "iPrefix",
    "info" : "FieldDeclaration[3190-3223]:FieldDeclaration[3190-3223]"
  }, {
    "left" : "iElementPairs",
    "right" : "iElementPairs",
    "info" : "FieldDeclaration[3298-3333]:FieldDeclaration[3298-3333]"
  }, {
    "left" : "iNotPrinter",
    "right" : "iNotPrinter",
    "info" : "FieldDeclaration[3338-3424]:FieldDeclaration[3338-3424]"
  }, {
    "left" : "iNotParser",
    "right" : "iNotParser",
    "info" : "FieldDeclaration[3429-3513]:FieldDeclaration[3429-3513]"
  }, {
    "left" : "iFieldFormatters",
    "right" : "iFieldFormatters",
    "info" : "FieldDeclaration[3576-3618]:FieldDeclaration[3576-3618]"
  }, {
    "left" : "public PeriodFormatterBuilder()",
    "right" : "public PeriodFormatterBuilder()",
    "info" : "MethodDeclaration[3624-3680]:MethodDeclaration[3624-3680]"
  }, {
    "left" : "public toFormatter() : ",
    "right" : "public toFormatter() : ",
    "info" : "MethodDeclaration[3764-4693]:MethodDeclaration[3764-4693]"
  }, {
    "left" : "public toPrinter() : ",
    "right" : "public toPrinter() : ",
    "info" : "MethodDeclaration[4699-5313]:MethodDeclaration[4699-5313]"
  }, {
    "left" : "public toParser() : ",
    "right" : "public toParser() : ",
    "info" : "MethodDeclaration[5319-5925]:MethodDeclaration[5319-5925]"
  }, {
    "left" : "public clear() : void",
    "right" : "public clear() : void",
    "info" : "MethodDeclaration[6009-6568]:MethodDeclaration[6009-6568]"
  }, {
    "left" : "public append(formatter ) : ",
    "right" : "public append(formatter ) : ",
    "info" : "MethodDeclaration[6574-6969]:MethodDeclaration[6574-6969]"
  }, {
    "left" : "public append(printer , parser ) : ",
    "right" : "public append(printer , parser ) : ",
    "info" : "MethodDeclaration[6975-7800]:MethodDeclaration[6975-7800]"
  }, {
    "left" : "public appendLiteral(text ) : ",
    "right" : "public appendLiteral(text ) : ",
    "info" : "MethodDeclaration[7806-8350]:MethodDeclaration[7806-8350]"
  }, {
    "left" : "public minimumPrintedDigits(minDigits int) : ",
    "right" : "public minimumPrintedDigits(minDigits int) : ",
    "info" : "MethodDeclaration[8356-8780]:MethodDeclaration[8356-8780]"
  }, {
    "left" : "public maximumParsedDigits(maxDigits int) : ",
    "right" : "public maximumParsedDigits(maxDigits int) : ",
    "info" : "MethodDeclaration[8786-9117]:MethodDeclaration[8786-9117]"
  }, {
    "left" : "public rejectSignedValues(v boolean) : ",
    "right" : "public rejectSignedValues(v boolean) : ",
    "info" : "MethodDeclaration[9123-9391]:MethodDeclaration[9123-9391]"
  }, {
    "left" : "public printZeroRarelyLast() : ",
    "right" : "public printZeroRarelyLast() : ",
    "info" : "MethodDeclaration[9397-9867]:MethodDeclaration[9397-9867]"
  }, {
    "left" : "public printZeroRarelyFirst() : ",
    "right" : "public printZeroRarelyFirst() : ",
    "info" : "MethodDeclaration[9873-10293]:MethodDeclaration[9873-10293]"
  }, {
    "left" : "public printZeroIfSupported() : ",
    "right" : "public printZeroIfSupported() : ",
    "info" : "MethodDeclaration[10299-10605]:MethodDeclaration[10299-10605]"
  }, {
    "left" : "public printZeroAlways() : ",
    "right" : "public printZeroAlways() : ",
    "info" : "MethodDeclaration[10611-10991]:MethodDeclaration[10611-10991]"
  }, {
    "left" : "public printZeroNever() : ",
    "right" : "public printZeroNever() : ",
    "info" : "MethodDeclaration[10997-11456]:MethodDeclaration[10997-11456]"
  }, {
    "left" : "public appendPrefix(text ) : ",
    "right" : "public appendPrefix(text ) : ",
    "info" : "MethodDeclaration[11540-12041]:MethodDeclaration[11540-12041]"
  }, {
    "left" : "public appendPrefix(singularText , pluralText ) : ",
    "right" : "public appendPrefix(singularText , pluralText ) : ",
    "info" : "MethodDeclaration[12047-12869]:MethodDeclaration[12047-12869]"
  }, {
    "left" : "private appendPrefix(prefix ) : ",
    "right" : "private appendPrefix(prefix ) : ",
    "info" : "MethodDeclaration[12875-13449]:MethodDeclaration[12875-13449]"
  }, {
    "left" : "public appendYears() : ",
    "right" : "public appendYears() : ",
    "info" : "MethodDeclaration[13533-13936]:MethodDeclaration[13533-13936]"
  }, {
    "left" : "public appendMonths() : ",
    "right" : "public appendMonths() : ",
    "info" : "MethodDeclaration[13942-14348]:MethodDeclaration[13942-14348]"
  }, {
    "left" : "public appendWeeks() : ",
    "right" : "public appendWeeks() : ",
    "info" : "MethodDeclaration[14354-14757]:MethodDeclaration[14354-14757]"
  }, {
    "left" : "public appendDays() : ",
    "right" : "public appendDays() : ",
    "info" : "MethodDeclaration[14763-15163]:MethodDeclaration[14763-15163]"
  }, {
    "left" : "public appendHours() : ",
    "right" : "public appendHours() : ",
    "info" : "MethodDeclaration[15169-15572]:MethodDeclaration[15169-15572]"
  }, {
    "left" : "public appendMinutes() : ",
    "right" : "public appendMinutes() : ",
    "info" : "MethodDeclaration[15578-15987]:MethodDeclaration[15578-15987]"
  }, {
    "left" : "public appendSeconds() : ",
    "right" : "public appendSeconds() : ",
    "info" : "MethodDeclaration[15993-16402]:MethodDeclaration[15993-16402]"
  }, {
    "left" : "public appendSecondsWithMillis() : ",
    "right" : "public appendSecondsWithMillis() : ",
    "info" : "MethodDeclaration[16408-16782]:MethodDeclaration[16408-16782]"
  }, {
    "left" : "public appendSecondsWithOptionalMillis() : ",
    "right" : "public appendSecondsWithOptionalMillis() : ",
    "info" : "MethodDeclaration[16788-17189]:MethodDeclaration[16788-17189]"
  }, {
    "left" : "public appendMillis() : ",
    "right" : "public appendMillis() : ",
    "info" : "MethodDeclaration[17195-17601]:MethodDeclaration[17195-17601]"
  }, {
    "left" : "public appendMillis3Digit() : ",
    "right" : "public appendMillis3Digit() : ",
    "info" : "MethodDeclaration[17607-17958]:MethodDeclaration[17607-17958]"
  }, {
    "left" : "private appendField(type int) : void",
    "right" : "private appendField(type int) : void",
    "info" : "MethodDeclaration[17964-18052]:MethodDeclaration[17964-18052]"
  }, {
    "left" : "private appendField(type int, minPrinted int) : void",
    "right" : "private appendField(type int, minPrinted int) : void",
    "info" : "MethodDeclaration[18058-18383]:MethodDeclaration[18058-18383]"
  }, {
    "left" : "public appendSuffix(text ) : ",
    "right" : "public appendSuffix(text ) : ",
    "info" : "MethodDeclaration[18467-19036]:MethodDeclaration[18467-19036]"
  }, {
    "left" : "public appendSuffix(singularText , pluralText ) : ",
    "right" : "public appendSuffix(singularText , pluralText ) : ",
    "info" : "MethodDeclaration[19042-19931]:MethodDeclaration[19042-19931]"
  }, {
    "left" : "private appendSuffix(suffix ) : ",
    "right" : "private appendSuffix(suffix ) : ",
    "info" : "MethodDeclaration[19937-21313]:MethodDeclaration[19937-21313]"
  }, {
    "left" : "public appendSeparator(text ) : ",
    "right" : "public appendSeparator(text ) : ",
    "info" : "MethodDeclaration[21397-22184]:MethodDeclaration[21397-22184]"
  }, {
    "left" : "public appendSeparatorIfFieldsAfter(text ) : ",
    "right" : "public appendSeparatorIfFieldsAfter(text ) : ",
    "info" : "MethodDeclaration[22190-22978]:MethodDeclaration[22190-22978]"
  }, {
    "left" : "public appendSeparatorIfFieldsBefore(text ) : ",
    "right" : "public appendSeparatorIfFieldsBefore(text ) : ",
    "info" : "MethodDeclaration[22984-23774]:MethodDeclaration[22984-23774]"
  }, {
    "left" : "public appendSeparator(text , finalText ) : ",
    "right" : "public appendSeparator(text , finalText ) : ",
    "info" : "MethodDeclaration[23780-24899]:MethodDeclaration[23780-24899]"
  }, {
    "left" : "public appendSeparator(text , finalText , variants ...) : ",
    "right" : "public appendSeparator(text , finalText , variants ...) : ",
    "info" : "MethodDeclaration[24905-26178]:MethodDeclaration[24905-26178]"
  }, {
    "left" : "private appendSeparator(text , finalText , variants , useBefore boolean, useAfter boolean) : ",
    "right" : "private appendSeparator(text , finalText , variants , useBefore boolean, useAfter boolean) : ",
    "info" : "MethodDeclaration[26184-28001]:MethodDeclaration[26184-28001]"
  }, {
    "left" : "private clearPrefix() : void",
    "right" : "private clearPrefix() : void",
    "info" : "MethodDeclaration[28085-28290]:MethodDeclaration[28085-28290]"
  }, {
    "left" : "private append0(printer , parser ) : ",
    "right" : "private append0(printer , parser ) : ",
    "info" : "MethodDeclaration[28296-28560]:MethodDeclaration[28296-28560]"
  }, {
    "left" : "private toFormatter(elementPairs , notPrinter boolean, notParser boolean) : ",
    "right" : "private toFormatter(elementPairs , notPrinter boolean, notParser boolean) : ",
    "info" : "MethodDeclaration[28644-29767]:MethodDeclaration[28644-29767]"
  }, {
    "left" : "private createComposite(elementPairs ...) : ",
    "right" : "private createComposite(elementPairs ...) : ",
    "info" : "MethodDeclaration[29773-30217]:MethodDeclaration[29773-30217]"
  }, {
    "left" : "interface : PeriodFieldAffix",
    "right" : "interface : PeriodFieldAffix",
    "info" : "TypeDeclaration[30301-30989]:TypeDeclaration[30301-30989]"
  }, {
    "left" : "public calculatePrintedLength(value int) : int",
    "right" : "public calculatePrintedLength(value int) : int",
    "info" : "MethodDeclaration[30493-30531]:MethodDeclaration[30493-30531]"
  }, {
    "left" : "public printTo(buf , value int) : void",
    "right" : "public printTo(buf , value int) : void",
    "info" : "MethodDeclaration[30549-30591]:MethodDeclaration[30549-30591]"
  }, {
    "left" : "public printTo(out , value int) : void",
    "right" : "public printTo(out , value int) : void",
    "info" : "MethodDeclaration[30609-30664]:MethodDeclaration[30609-30664]"
  }, {
    "left" : "public parse(periodStr , position int) : int",
    "right" : "public parse(periodStr , position int) : int",
    "info" : "MethodDeclaration[30682-30825]:MethodDeclaration[30682-30825]"
  }, {
    "left" : "public scan(periodStr , position int) : int",
    "right" : "public scan(periodStr , position int) : int",
    "info" : "MethodDeclaration[30835-30983]:MethodDeclaration[30835-30983]"
  }, {
    "left" : "class : SimpleAffix",
    "right" : "class : SimpleAffix",
    "info" : "TypeDeclaration[31073-32846]:TypeDeclaration[31073-32846]"
  }, {
    "left" : "iText",
    "right" : "iText",
    "info" : "FieldDeclaration[31223-31250]:FieldDeclaration[31223-31250]"
  }, {
    "left" : "package SimpleAffix(text )",
    "right" : "package SimpleAffix(text )",
    "info" : "MethodDeclaration[31260-31322]:MethodDeclaration[31260-31322]"
  }, {
    "left" : "public calculatePrintedLength(value int) : int",
    "right" : "public calculatePrintedLength(value int) : int",
    "info" : "MethodDeclaration[31332-31423]:MethodDeclaration[31332-31423]"
  }, {
    "left" : "public printTo(buf , value int) : void",
    "right" : "public printTo(buf , value int) : void",
    "info" : "MethodDeclaration[31433-31524]:MethodDeclaration[31433-31524]"
  }, {
    "left" : "public printTo(out , value int) : void",
    "right" : "public printTo(out , value int) : void",
    "info" : "MethodDeclaration[31534-31637]:MethodDeclaration[31534-31637]"
  }, {
    "left" : "public parse(periodStr , position int) : int",
    "right" : "public parse(periodStr , position int) : int",
    "info" : "MethodDeclaration[31647-31954]:MethodDeclaration[31647-31954]"
  }, {
    "left" : "public scan(periodStr , position int) : int",
    "right" : "public scan(periodStr , position int) : int",
    "info" : "MethodDeclaration[31964-32840]:MethodDeclaration[31964-32840]"
  }, {
    "left" : "class : PluralAffix",
    "right" : "class : PluralAffix",
    "info" : "TypeDeclaration[32930-35443]:TypeDeclaration[32930-35443]"
  }, {
    "left" : "iSingularText",
    "right" : "iSingularText",
    "info" : "FieldDeclaration[33145-33180]:FieldDeclaration[33145-33180]"
  }, {
    "left" : "iPluralText",
    "right" : "iPluralText",
    "info" : "FieldDeclaration[33189-33222]:FieldDeclaration[33189-33222]"
  }, {
    "left" : "package PluralAffix(singularText , pluralText )",
    "right" : "package PluralAffix(singularText , pluralText )",
    "info" : "MethodDeclaration[33232-33375]:MethodDeclaration[33232-33375]"
  }, {
    "left" : "public calculatePrintedLength(value int) : int",
    "right" : "public calculatePrintedLength(value int) : int",
    "info" : "MethodDeclaration[33385-33513]:MethodDeclaration[33385-33513]"
  }, {
    "left" : "public printTo(buf , value int) : void",
    "right" : "public printTo(buf , value int) : void",
    "info" : "MethodDeclaration[33523-33649]:MethodDeclaration[33523-33649]"
  }, {
    "left" : "public printTo(out , value int) : void",
    "right" : "public printTo(out , value int) : void",
    "info" : "MethodDeclaration[33659-33797]:MethodDeclaration[33659-33797]"
  }, {
    "left" : "public parse(periodStr , position int) : int",
    "right" : "public parse(periodStr , position int) : int",
    "info" : "MethodDeclaration[33807-34538]:MethodDeclaration[33807-34538]"
  }, {
    "left" : "public scan(periodStr , position int) : int",
    "right" : "public scan(periodStr , position int) : int",
    "info" : "MethodDeclaration[34548-35437]:MethodDeclaration[34548-35437]"
  }, {
    "left" : "class : CompositeAffix",
    "right" : "class : CompositeAffix",
    "info" : "TypeDeclaration[35527-36919]:TypeDeclaration[35527-36919]"
  }, {
    "left" : "iLeft",
    "right" : "iLeft",
    "info" : "FieldDeclaration[35685-35722]:FieldDeclaration[35685-35722]"
  }, {
    "left" : "iRight",
    "right" : "iRight",
    "info" : "FieldDeclaration[35731-35769]:FieldDeclaration[35731-35769]"
  }, {
    "left" : "package CompositeAffix(left , right )",
    "right" : "package CompositeAffix(left , right )",
    "info" : "MethodDeclaration[35779-35906]:MethodDeclaration[35779-35906]"
  }, {
    "left" : "public calculatePrintedLength(value int) : int",
    "right" : "public calculatePrintedLength(value int) : int",
    "info" : "MethodDeclaration[35916-36083]:MethodDeclaration[35916-36083]"
  }, {
    "left" : "public printTo(buf , value int) : void",
    "right" : "public printTo(buf , value int) : void",
    "info" : "MethodDeclaration[36093-36232]:MethodDeclaration[36093-36232]"
  }, {
    "left" : "public printTo(out , value int) : void",
    "right" : "public printTo(out , value int) : void",
    "info" : "MethodDeclaration[36242-36394]:MethodDeclaration[36242-36394]"
  }, {
    "left" : "public parse(periodStr , position int) : int",
    "right" : "public parse(periodStr , position int) : int",
    "info" : "MethodDeclaration[36404-36659]:MethodDeclaration[36404-36659]"
  }, {
    "left" : "public scan(periodStr , position int) : int",
    "right" : "public scan(periodStr , position int) : int",
    "info" : "MethodDeclaration[36669-36913]:MethodDeclaration[36669-36913]"
  }, {
    "left" : "class : FieldFormatter",
    "right" : "class : FieldFormatter",
    "info" : "TypeDeclaration[37003-56442]:TypeDeclaration[37003-56682]"
  }, {
    "left" : "iMinPrintedDigits",
    "right" : "iMinPrintedDigits",
    "info" : "FieldDeclaration[37185-37221]:FieldDeclaration[37185-37221]"
  }, {
    "left" : "iPrintZeroSetting",
    "right" : "iPrintZeroSetting",
    "info" : "FieldDeclaration[37230-37266]:FieldDeclaration[37230-37266]"
  }, {
    "left" : "iMaxParsedDigits",
    "right" : "iMaxParsedDigits",
    "info" : "FieldDeclaration[37275-37310]:FieldDeclaration[37275-37310]"
  }, {
    "left" : "iRejectSignedValues",
    "right" : "iRejectSignedValues",
    "info" : "FieldDeclaration[37319-37361]:FieldDeclaration[37319-37361]"
  }, {
    "left" : "iFieldType",
    "right" : "iFieldType",
    "info" : "FieldDeclaration[37379-37465]:FieldDeclaration[37379-37465]"
  }, {
    "left" : "iFieldFormatters",
    "right" : "iFieldFormatters",
    "info" : "FieldDeclaration[37474-37687]:FieldDeclaration[37474-37687]"
  }, {
    "left" : "iPrefix",
    "right" : "iPrefix",
    "info" : "FieldDeclaration[37705-37744]:FieldDeclaration[37705-37744]"
  }, {
    "left" : "iSuffix",
    "right" : "iSuffix",
    "info" : "FieldDeclaration[37753-37792]:FieldDeclaration[37753-37792]"
  }, {
    "left" : "package FieldFormatter(minPrintedDigits int, printZeroSetting int, maxParsedDigits int, rejectSignedValues boolean, fieldType int, fieldFormatters , prefix , suffix )",
    "right" : "package FieldFormatter(minPrintedDigits int, printZeroSetting int, maxParsedDigits int, rejectSignedValues boolean, fieldType int, fieldFormatters , prefix , suffix )",
    "info" : "MethodDeclaration[37802-38435]:MethodDeclaration[37802-38435]"
  }, {
    "left" : "package FieldFormatter(field , suffix )",
    "right" : "package FieldFormatter(field , suffix )",
    "info" : "MethodDeclaration[38445-39036]:MethodDeclaration[38445-39036]"
  }, {
    "left" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "right" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "info" : "MethodDeclaration[39046-39371]:MethodDeclaration[39046-39371]"
  }, {
    "left" : "public calculatePrintedLength(period , locale ) : int",
    "right" : "public calculatePrintedLength(period , locale ) : int",
    "info" : "MethodDeclaration[39381-40735]:MethodDeclaration[39381-40772]"
  }, {
    "left" : "public printTo(buf , period , locale ) : void",
    "right" : "public printTo(buf , period , locale ) : void",
    "info" : "MethodDeclaration[40753-41937]:MethodDeclaration[40790-42177]"
  }, {
    "left" : "public printTo(out , period , locale ) : void",
    "right" : "public printTo(out , period , locale ) : void",
    "info" : "MethodDeclaration[41947-43140]:MethodDeclaration[42187-43380]"
  }, {
    "left" : "public parseInto(period , text , position int, locale ) : int",
    "right" : "public parseInto(period , text , position int, locale ) : int",
    "info" : "MethodDeclaration[43150-49548]:MethodDeclaration[43390-49788]"
  }, {
    "left" : "private parseInt(text , position int, length int) : int",
    "right" : "private parseInt(text , position int, length int) : int",
    "info" : "MethodDeclaration[49558-50696]:MethodDeclaration[49798-50936]"
  }, {
    "left" : "package getFieldValue(period ) : long",
    "right" : "package getFieldValue(period ) : long",
    "info" : "MethodDeclaration[50706-54076]:MethodDeclaration[50946-54316]"
  }, {
    "left" : "package isZero(period ) : boolean",
    "right" : "package isZero(period ) : boolean",
    "info" : "MethodDeclaration[54086-54342]:MethodDeclaration[54326-54582]"
  }, {
    "left" : "package isSupported(type , field int) : boolean",
    "right" : "package isSupported(type , field int) : boolean",
    "info" : "MethodDeclaration[54352-55483]:MethodDeclaration[54592-55723]"
  }, {
    "left" : "package setFieldValue(period , field int, value int) : void",
    "right" : "package setFieldValue(period , field int, value int) : void",
    "info" : "MethodDeclaration[55493-56365]:MethodDeclaration[55733-56605]"
  }, {
    "left" : "package getFieldType() : int",
    "right" : "package getFieldType() : int",
    "info" : "MethodDeclaration[56375-56436]:MethodDeclaration[56615-56676]"
  }, {
    "left" : "class : Literal",
    "right" : "class : Literal",
    "info" : "TypeDeclaration[56526-57673]:TypeDeclaration[56766-57913]"
  }, {
    "left" : "EMPTY",
    "right" : "EMPTY",
    "info" : "FieldDeclaration[56671-56716]:FieldDeclaration[56911-56956]"
  }, {
    "left" : "iText",
    "right" : "iText",
    "info" : "FieldDeclaration[56725-56752]:FieldDeclaration[56965-56992]"
  }, {
    "left" : "package Literal(text )",
    "right" : "package Literal(text )",
    "info" : "MethodDeclaration[56762-56820]:MethodDeclaration[57002-57060]"
  }, {
    "left" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "right" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "info" : "MethodDeclaration[56830-56943]:MethodDeclaration[57070-57183]"
  }, {
    "left" : "public calculatePrintedLength(period , locale ) : int",
    "right" : "public calculatePrintedLength(period , locale ) : int",
    "info" : "MethodDeclaration[56953-57071]:MethodDeclaration[57193-57311]"
  }, {
    "left" : "public printTo(buf , period , locale ) : void",
    "right" : "public printTo(buf , period , locale ) : void",
    "info" : "MethodDeclaration[57081-57199]:MethodDeclaration[57321-57439]"
  }, {
    "left" : "public printTo(out , period , locale ) : void",
    "right" : "public printTo(out , period , locale ) : void",
    "info" : "MethodDeclaration[57209-57339]:MethodDeclaration[57449-57579]"
  }, {
    "left" : "public parseInto(period , periodStr , position int, locale ) : int",
    "right" : "public parseInto(period , periodStr , position int, locale ) : int",
    "info" : "MethodDeclaration[57349-57667]:MethodDeclaration[57589-57907]"
  }, {
    "left" : "class : Separator",
    "right" : "class : Separator",
    "info" : "TypeDeclaration[57757-64743]:TypeDeclaration[57997-64983]"
  }, {
    "left" : "iText",
    "right" : "iText",
    "info" : "FieldDeclaration[57982-58009]:FieldDeclaration[58222-58249]"
  }, {
    "left" : "iFinalText",
    "right" : "iFinalText",
    "info" : "FieldDeclaration[58018-58050]:FieldDeclaration[58258-58290]"
  }, {
    "left" : "iParsedForms",
    "right" : "iParsedForms",
    "info" : "FieldDeclaration[58059-58095]:FieldDeclaration[58299-58335]"
  }, {
    "left" : "iUseBefore",
    "right" : "iUseBefore",
    "info" : "FieldDeclaration[58105-58138]:FieldDeclaration[58345-58378]"
  }, {
    "left" : "iUseAfter",
    "right" : "iUseAfter",
    "info" : "FieldDeclaration[58147-58179]:FieldDeclaration[58387-58419]"
  }, {
    "left" : "iBeforePrinter",
    "right" : "iBeforePrinter",
    "info" : "FieldDeclaration[58189-58232]:FieldDeclaration[58429-58472]"
  }, {
    "left" : "iAfterPrinter",
    "right" : "iAfterPrinter",
    "info" : "FieldDeclaration[58241-58286]:FieldDeclaration[58481-58526]"
  }, {
    "left" : "iBeforeParser",
    "right" : "iBeforeParser",
    "info" : "FieldDeclaration[58295-58336]:FieldDeclaration[58535-58576]"
  }, {
    "left" : "iAfterParser",
    "right" : "iAfterParser",
    "info" : "FieldDeclaration[58345-58388]:FieldDeclaration[58585-58628]"
  }, {
    "left" : "package Separator(text , finalText , variants , beforePrinter , beforeParser , useBefore boolean, useAfter boolean)",
    "right" : "package Separator(text , finalText , variants , beforePrinter , beforeParser , useBefore boolean, useAfter boolean)",
    "info" : "MethodDeclaration[58398-59669]:MethodDeclaration[58638-59909]"
  }, {
    "left" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "right" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "info" : "MethodDeclaration[59679-60002]:MethodDeclaration[59919-60242]"
  }, {
    "left" : "public calculatePrintedLength(period , locale ) : int",
    "right" : "public calculatePrintedLength(period , locale ) : int",
    "info" : "MethodDeclaration[60012-61030]:MethodDeclaration[60252-61270]"
  }, {
    "left" : "public printTo(buf , period , locale ) : void",
    "right" : "public printTo(buf , period , locale ) : void",
    "info" : "MethodDeclaration[61040-61959]:MethodDeclaration[61280-62199]"
  }, {
    "left" : "public printTo(out , period , locale ) : void",
    "right" : "public printTo(out , period , locale ) : void",
    "info" : "MethodDeclaration[61969-62898]:MethodDeclaration[62209-63138]"
  }, {
    "left" : "public parseInto(period , periodStr , position int, locale ) : int",
    "right" : "public parseInto(period , periodStr , position int, locale ) : int",
    "info" : "MethodDeclaration[62908-64538]:MethodDeclaration[63148-64778]"
  }, {
    "left" : "package finish(afterPrinter , afterParser ) : ",
    "right" : "package finish(afterPrinter , afterParser ) : ",
    "info" : "MethodDeclaration[64548-64737]:MethodDeclaration[64788-64977]"
  }, {
    "left" : "class : Composite",
    "right" : "class : Composite",
    "info" : "TypeDeclaration[64827-68849]:TypeDeclaration[65067-69089]"
  }, {
    "left" : "iPrinters",
    "right" : "iPrinters",
    "info" : "FieldDeclaration[65019-65059]:FieldDeclaration[65259-65299]"
  }, {
    "left" : "iParsers",
    "right" : "iParsers",
    "info" : "FieldDeclaration[65068-65106]:FieldDeclaration[65308-65346]"
  }, {
    "left" : "package Composite(elementPairs ...)",
    "right" : "package Composite(elementPairs ...)",
    "info" : "MethodDeclaration[65116-65800]:MethodDeclaration[65356-66040]"
  }, {
    "left" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "right" : "public countFieldsToPrint(period , stopAt int, locale ) : int",
    "info" : "MethodDeclaration[65810-66172]:MethodDeclaration[66050-66412]"
  }, {
    "left" : "public calculatePrintedLength(period , locale ) : int",
    "right" : "public calculatePrintedLength(period , locale ) : int",
    "info" : "MethodDeclaration[66182-66505]:MethodDeclaration[66422-66745]"
  }, {
    "left" : "public printTo(buf , period , locale ) : void",
    "right" : "public printTo(buf , period , locale ) : void",
    "info" : "MethodDeclaration[66515-66803]:MethodDeclaration[66755-67043]"
  }, {
    "left" : "public printTo(out , period , locale ) : void",
    "right" : "public printTo(out , period , locale ) : void",
    "info" : "MethodDeclaration[66813-67114]:MethodDeclaration[67053-67354]"
  }, {
    "left" : "public parseInto(period , periodStr , position int, locale ) : int",
    "right" : "public parseInto(period , periodStr , position int, locale ) : int",
    "info" : "MethodDeclaration[67124-67643]:MethodDeclaration[67364-67883]"
  }, {
    "left" : "private decompose(elementPairs , printerList , parserList ...) : void",
    "right" : "private decompose(elementPairs , printerList , parserList ...) : void",
    "info" : "MethodDeclaration[67653-68601]:MethodDeclaration[67893-68841]"
  }, {
    "left" : "private addArrayToList(list , array ) : void",
    "right" : "private addArrayToList(list , array ) : void",
    "info" : "MethodDeclaration[68611-68843]:MethodDeclaration[68851-69083]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2222-2228]:Modifier[2222-2228]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[2229-2234]:TYPE_DECLARATION_KIND[2229-2234]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3624-3630]:Modifier[3624-3630]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleName[3631-3653]:SimpleName[3631-3653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3656-3680]:Block[3656-3680]"
  }, {
    "left" : "clear();",
    "right" : "clear();",
    "info" : "ExpressionStatement[3666-3674]:ExpressionStatement[3666-3674]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4462-4468]:Modifier[4462-4468]"
  }, {
    "left" : "PeriodFormatter",
    "right" : "PeriodFormatter",
    "info" : "SimpleType[4469-4484]:SimpleType[4469-4484]"
  }, {
    "left" : "toFormatter",
    "right" : "toFormatter",
    "info" : "SimpleName[4485-4496]:SimpleName[4485-4496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4499-4693]:Block[4499-4693]"
  }, {
    "left" : "PeriodFormatter formatter = toFormatter(iElementPairs, iNotPrinter, iNotParser);",
    "right" : "PeriodFormatter formatter = toFormatter(iElementPairs, iNotPrinter, iNotParser);",
    "info" : "VariableDeclarationStatement[4509-4589]:VariableDeclarationStatement[4509-4589]"
  }, {
    "left" : "iFieldFormatters = (FieldFormatter[]) iFieldFormatters.clone();",
    "right" : "iFieldFormatters = (FieldFormatter[]) iFieldFormatters.clone();",
    "info" : "ExpressionStatement[4598-4661]:ExpressionStatement[4598-4661]"
  }, {
    "left" : "return formatter;",
    "right" : "return formatter;",
    "info" : "ReturnStatement[4670-4687]:ReturnStatement[4670-4687]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5168-5174]:Modifier[5168-5174]"
  }, {
    "left" : "PeriodPrinter",
    "right" : "PeriodPrinter",
    "info" : "SimpleType[5175-5188]:SimpleType[5175-5188]"
  }, {
    "left" : "toPrinter",
    "right" : "toPrinter",
    "info" : "SimpleName[5189-5198]:SimpleName[5189-5198]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5201-5313]:Block[5201-5313]"
  }, {
    "left" : "if (iNotPrinter)",
    "right" : "if (iNotPrinter)",
    "info" : "IfStatement[5211-5264]:IfStatement[5211-5264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5228-5264]:Block[5228-5264]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[5242-5254]:ReturnStatement[5242-5254]"
  }, {
    "left" : "return toFormatter().getPrinter();",
    "right" : "return toFormatter().getPrinter();",
    "info" : "ReturnStatement[5273-5307]:ReturnStatement[5273-5307]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5784-5790]:Modifier[5784-5790]"
  }, {
    "left" : "PeriodParser",
    "right" : "PeriodParser",
    "info" : "SimpleType[5791-5803]:SimpleType[5791-5803]"
  }, {
    "left" : "toParser",
    "right" : "toParser",
    "info" : "SimpleName[5804-5812]:SimpleName[5804-5812]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5815-5925]:Block[5815-5925]"
  }, {
    "left" : "if (iNotParser)",
    "right" : "if (iNotParser)",
    "info" : "IfStatement[5825-5877]:IfStatement[5825-5877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5841-5877]:Block[5841-5877]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[5855-5867]:ReturnStatement[5855-5867]"
  }, {
    "left" : "return toFormatter().getParser();",
    "right" : "return toFormatter().getParser();",
    "info" : "ReturnStatement[5886-5919]:ReturnStatement[5886-5919]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6106-6112]:Modifier[6106-6112]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6113-6117]:PrimitiveType[6113-6117]"
  }, {
    "left" : "clear",
    "right" : "clear",
    "info" : "SimpleName[6118-6123]:SimpleName[6118-6123]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6126-6568]:Block[6126-6568]"
  }, {
    "left" : "iMinPrintedDigits = 1;",
    "right" : "iMinPrintedDigits = 1;",
    "info" : "ExpressionStatement[6136-6158]:ExpressionStatement[6136-6158]"
  }, {
    "left" : "iPrintZeroSetting = PRINT_ZERO_RARELY_LAST;",
    "right" : "iPrintZeroSetting = PRINT_ZERO_RARELY_LAST;",
    "info" : "ExpressionStatement[6167-6210]:ExpressionStatement[6167-6210]"
  }, {
    "left" : "iMaxParsedDigits = 10;",
    "right" : "iMaxParsedDigits = 10;",
    "info" : "ExpressionStatement[6219-6241]:ExpressionStatement[6219-6241]"
  }, {
    "left" : "iRejectSignedValues = false;",
    "right" : "iRejectSignedValues = false;",
    "info" : "ExpressionStatement[6250-6278]:ExpressionStatement[6250-6278]"
  }, {
    "left" : "iPrefix = null;",
    "right" : "iPrefix = null;",
    "info" : "ExpressionStatement[6287-6302]:ExpressionStatement[6287-6302]"
  }, {
    "left" : "if (iElementPairs == null)",
    "right" : "if (iElementPairs == null)",
    "info" : "IfStatement[6311-6454]:IfStatement[6311-6454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6338-6402]:Block[6338-6402]"
  }, {
    "left" : "iElementPairs = new ArrayList<Object>();",
    "right" : "iElementPairs = new ArrayList<Object>();",
    "info" : "ExpressionStatement[6352-6392]:ExpressionStatement[6352-6392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6408-6454]:Block[6408-6454]"
  }, {
    "left" : "iElementPairs.clear();",
    "right" : "iElementPairs.clear();",
    "info" : "ExpressionStatement[6422-6444]:ExpressionStatement[6422-6444]"
  }, {
    "left" : "iNotPrinter = false;",
    "right" : "iNotPrinter = false;",
    "info" : "ExpressionStatement[6463-6483]:ExpressionStatement[6463-6483]"
  }, {
    "left" : "iNotParser = false;",
    "right" : "iNotParser = false;",
    "info" : "ExpressionStatement[6492-6511]:ExpressionStatement[6492-6511]"
  }, {
    "left" : "iFieldFormatters = new FieldFormatter[10];",
    "right" : "iFieldFormatters = new FieldFormatter[10];",
    "info" : "ExpressionStatement[6520-6562]:ExpressionStatement[6520-6562]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6674-6680]:Modifier[6674-6680]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[6681-6703]:SimpleType[6681-6703]"
  }, {
    "left" : "append",
    "right" : "append",
    "info" : "SimpleName[6704-6710]:SimpleName[6704-6710]"
  }, {
    "left" : "PeriodFormatter formatter",
    "right" : "PeriodFormatter formatter",
    "info" : "SingleVariableDeclaration[6711-6736]:SingleVariableDeclaration[6711-6736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6738-6969]:Block[6738-6969]"
  }, {
    "left" : "if (formatter == null)",
    "right" : "if (formatter == null)",
    "info" : "IfStatement[6748-6855]:IfStatement[6748-6855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6771-6855]:Block[6771-6855]"
  }, {
    "left" : "throw new IllegalArgumentException(\"No formatter supplied\");",
    "right" : "throw new IllegalArgumentException(\"No formatter supplied\");",
    "info" : "ThrowStatement[6785-6845]:ThrowStatement[6785-6845]"
  }, {
    "left" : "clearPrefix();",
    "right" : "clearPrefix();",
    "info" : "ExpressionStatement[6864-6878]:ExpressionStatement[6864-6878]"
  }, {
    "left" : "append0(formatter.getPrinter(), formatter.getParser());",
    "right" : "append0(formatter.getPrinter(), formatter.getParser());",
    "info" : "ExpressionStatement[6887-6942]:ExpressionStatement[6887-6942]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[6951-6963]:ReturnStatement[6951-6963]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7494-7500]:Modifier[7494-7500]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[7501-7523]:SimpleType[7501-7523]"
  }, {
    "left" : "append",
    "right" : "append",
    "info" : "SimpleName[7524-7530]:SimpleName[7524-7530]"
  }, {
    "left" : "PeriodPrinter printer",
    "right" : "PeriodPrinter printer",
    "info" : "SingleVariableDeclaration[7531-7552]:SingleVariableDeclaration[7531-7552]"
  }, {
    "left" : "PeriodParser parser",
    "right" : "PeriodParser parser",
    "info" : "SingleVariableDeclaration[7554-7573]:SingleVariableDeclaration[7554-7573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7575-7800]:Block[7575-7800]"
  }, {
    "left" : "if (printer == null && parser == null)",
    "right" : "if (printer == null && parser == null)",
    "info" : "IfStatement[7585-7716]:IfStatement[7585-7716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7624-7716]:Block[7624-7716]"
  }, {
    "left" : "throw new IllegalArgumentException(\"No printer or parser supplied\");",
    "right" : "throw new IllegalArgumentException(\"No printer or parser supplied\");",
    "info" : "ThrowStatement[7638-7706]:ThrowStatement[7638-7706]"
  }, {
    "left" : "clearPrefix();",
    "right" : "clearPrefix();",
    "info" : "ExpressionStatement[7725-7739]:ExpressionStatement[7725-7739]"
  }, {
    "left" : "append0(printer, parser);",
    "right" : "append0(printer, parser);",
    "info" : "ExpressionStatement[7748-7773]:ExpressionStatement[7748-7773]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[7782-7794]:ReturnStatement[7782-7794]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8048-8054]:Modifier[8048-8054]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[8055-8077]:SimpleType[8055-8077]"
  }, {
    "left" : "appendLiteral",
    "right" : "appendLiteral",
    "info" : "SimpleName[8078-8091]:SimpleName[8078-8091]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[8092-8103]:SingleVariableDeclaration[8092-8103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8105-8350]:Block[8105-8350]"
  }, {
    "left" : "if (text == null)",
    "right" : "if (text == null)",
    "info" : "IfStatement[8115-8220]:IfStatement[8115-8220]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8133-8220]:Block[8133-8220]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Literal must not be null\");",
    "right" : "throw new IllegalArgumentException(\"Literal must not be null\");",
    "info" : "ThrowStatement[8147-8210]:ThrowStatement[8147-8210]"
  }, {
    "left" : "clearPrefix();",
    "right" : "clearPrefix();",
    "info" : "ExpressionStatement[8229-8243]:ExpressionStatement[8229-8243]"
  }, {
    "left" : "Literal literal = new Literal(text);",
    "right" : "Literal literal = new Literal(text);",
    "info" : "VariableDeclarationStatement[8252-8288]:VariableDeclarationStatement[8252-8288]"
  }, {
    "left" : "append0(literal, literal);",
    "right" : "append0(literal, literal);",
    "info" : "ExpressionStatement[8297-8323]:ExpressionStatement[8297-8323]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[8332-8344]:ReturnStatement[8332-8344]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8647-8653]:Modifier[8647-8653]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[8654-8676]:SimpleType[8654-8676]"
  }, {
    "left" : "minimumPrintedDigits",
    "right" : "minimumPrintedDigits",
    "info" : "SimpleName[8677-8697]:SimpleName[8677-8697]"
  }, {
    "left" : "int minDigits",
    "right" : "int minDigits",
    "info" : "SingleVariableDeclaration[8698-8711]:SingleVariableDeclaration[8698-8711]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8713-8780]:Block[8713-8780]"
  }, {
    "left" : "iMinPrintedDigits = minDigits;",
    "right" : "iMinPrintedDigits = minDigits;",
    "info" : "ExpressionStatement[8723-8753]:ExpressionStatement[8723-8753]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[8762-8774]:ReturnStatement[8762-8774]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8986-8992]:Modifier[8986-8992]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[8993-9015]:SimpleType[8993-9015]"
  }, {
    "left" : "maximumParsedDigits",
    "right" : "maximumParsedDigits",
    "info" : "SimpleName[9016-9035]:SimpleName[9016-9035]"
  }, {
    "left" : "int maxDigits",
    "right" : "int maxDigits",
    "info" : "SingleVariableDeclaration[9036-9049]:SingleVariableDeclaration[9036-9049]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9051-9117]:Block[9051-9117]"
  }, {
    "left" : "iMaxParsedDigits = maxDigits;",
    "right" : "iMaxParsedDigits = maxDigits;",
    "info" : "ExpressionStatement[9061-9090]:ExpressionStatement[9061-9090]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[9099-9111]:ReturnStatement[9099-9111]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9270-9276]:Modifier[9270-9276]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[9277-9299]:SimpleType[9277-9299]"
  }, {
    "left" : "rejectSignedValues",
    "right" : "rejectSignedValues",
    "info" : "SimpleName[9300-9318]:SimpleName[9300-9318]"
  }, {
    "left" : "boolean v",
    "right" : "boolean v",
    "info" : "SingleVariableDeclaration[9319-9328]:SingleVariableDeclaration[9319-9328]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9330-9391]:Block[9330-9391]"
  }, {
    "left" : "iRejectSignedValues = v;",
    "right" : "iRejectSignedValues = v;",
    "info" : "ExpressionStatement[9340-9364]:ExpressionStatement[9340-9364]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[9373-9385]:ReturnStatement[9373-9385]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9735-9741]:Modifier[9735-9741]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[9742-9764]:SimpleType[9742-9764]"
  }, {
    "left" : "printZeroRarelyLast",
    "right" : "printZeroRarelyLast",
    "info" : "SimpleName[9765-9784]:SimpleName[9765-9784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9787-9867]:Block[9787-9867]"
  }, {
    "left" : "iPrintZeroSetting = PRINT_ZERO_RARELY_LAST;",
    "right" : "iPrintZeroSetting = PRINT_ZERO_RARELY_LAST;",
    "info" : "ExpressionStatement[9797-9840]:ExpressionStatement[9797-9840]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[9849-9861]:ReturnStatement[9849-9861]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10159-10165]:Modifier[10159-10165]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[10166-10188]:SimpleType[10166-10188]"
  }, {
    "left" : "printZeroRarelyFirst",
    "right" : "printZeroRarelyFirst",
    "info" : "SimpleName[10189-10209]:SimpleName[10189-10209]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10212-10293]:Block[10212-10293]"
  }, {
    "left" : "iPrintZeroSetting = PRINT_ZERO_RARELY_FIRST;",
    "right" : "iPrintZeroSetting = PRINT_ZERO_RARELY_FIRST;",
    "info" : "ExpressionStatement[10222-10266]:ExpressionStatement[10222-10266]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[10275-10287]:ReturnStatement[10275-10287]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10471-10477]:Modifier[10471-10477]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[10478-10500]:SimpleType[10478-10500]"
  }, {
    "left" : "printZeroIfSupported",
    "right" : "printZeroIfSupported",
    "info" : "SimpleName[10501-10521]:SimpleName[10501-10521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10524-10605]:Block[10524-10605]"
  }, {
    "left" : "iPrintZeroSetting = PRINT_ZERO_IF_SUPPORTED;",
    "right" : "iPrintZeroSetting = PRINT_ZERO_IF_SUPPORTED;",
    "info" : "ExpressionStatement[10534-10578]:ExpressionStatement[10534-10578]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[10587-10599]:ReturnStatement[10587-10599]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10868-10874]:Modifier[10868-10874]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[10875-10897]:SimpleType[10875-10897]"
  }, {
    "left" : "printZeroAlways",
    "right" : "printZeroAlways",
    "info" : "SimpleName[10898-10913]:SimpleName[10898-10913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10916-10991]:Block[10916-10991]"
  }, {
    "left" : "iPrintZeroSetting = PRINT_ZERO_ALWAYS;",
    "right" : "iPrintZeroSetting = PRINT_ZERO_ALWAYS;",
    "info" : "ExpressionStatement[10926-10964]:ExpressionStatement[10926-10964]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[10973-10985]:ReturnStatement[10973-10985]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11335-11341]:Modifier[11335-11341]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[11342-11364]:SimpleType[11342-11364]"
  }, {
    "left" : "printZeroNever",
    "right" : "printZeroNever",
    "info" : "SimpleName[11365-11379]:SimpleName[11365-11379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11382-11456]:Block[11382-11456]"
  }, {
    "left" : "iPrintZeroSetting = PRINT_ZERO_NEVER;",
    "right" : "iPrintZeroSetting = PRINT_ZERO_NEVER;",
    "info" : "ExpressionStatement[11392-11429]:ExpressionStatement[11392-11429]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[11438-11450]:ReturnStatement[11438-11450]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11838-11844]:Modifier[11838-11844]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[11845-11867]:SimpleType[11845-11867]"
  }, {
    "left" : "appendPrefix",
    "right" : "appendPrefix",
    "info" : "SimpleName[11868-11880]:SimpleName[11868-11880]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[11881-11892]:SingleVariableDeclaration[11881-11892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11894-12041]:Block[11894-12041]"
  }, {
    "left" : "if (text == null)",
    "right" : "if (text == null)",
    "info" : "IfStatement[11904-11983]:IfStatement[11904-11983]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11922-11983]:Block[11922-11983]"
  }, {
    "left" : "throw new IllegalArgumentException();",
    "right" : "throw new IllegalArgumentException();",
    "info" : "ThrowStatement[11936-11973]:ThrowStatement[11936-11973]"
  }, {
    "left" : "return appendPrefix(new SimpleAffix(text));",
    "right" : "return appendPrefix(new SimpleAffix(text));",
    "info" : "ReturnStatement[11992-12035]:ReturnStatement[11992-12035]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12540-12546]:Modifier[12540-12546]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[12547-12569]:SimpleType[12547-12569]"
  }, {
    "left" : "appendPrefix",
    "right" : "appendPrefix",
    "info" : "SimpleName[12570-12582]:SimpleName[12570-12582]"
  }, {
    "left" : "String singularText",
    "right" : "String singularText",
    "info" : "SingleVariableDeclaration[12583-12602]:SingleVariableDeclaration[12583-12602]"
  }, {
    "left" : "String pluralText",
    "right" : "String pluralText",
    "info" : "SingleVariableDeclaration[12653-12670]:SingleVariableDeclaration[12653-12670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12672-12869]:Block[12672-12869]"
  }, {
    "left" : "if (singularText == null || pluralText == null)",
    "right" : "if (singularText == null || pluralText == null)",
    "info" : "IfStatement[12682-12791]:IfStatement[12682-12791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12730-12791]:Block[12730-12791]"
  }, {
    "left" : "throw new IllegalArgumentException();",
    "right" : "throw new IllegalArgumentException();",
    "info" : "ThrowStatement[12744-12781]:ThrowStatement[12744-12781]"
  }, {
    "left" : "return appendPrefix(new PluralAffix(singularText, pluralText));",
    "right" : "return appendPrefix(new PluralAffix(singularText, pluralText));",
    "info" : "ReturnStatement[12800-12863]:ReturnStatement[12800-12863]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13137-13144]:Modifier[13137-13144]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[13145-13167]:SimpleType[13145-13167]"
  }, {
    "left" : "appendPrefix",
    "right" : "appendPrefix",
    "info" : "SimpleName[13168-13180]:SimpleName[13168-13180]"
  }, {
    "left" : "PeriodFieldAffix prefix",
    "right" : "PeriodFieldAffix prefix",
    "info" : "SingleVariableDeclaration[13181-13204]:SingleVariableDeclaration[13181-13204]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13206-13449]:Block[13206-13449]"
  }, {
    "left" : "if (prefix == null)",
    "right" : "if (prefix == null)",
    "info" : "IfStatement[13216-13297]:IfStatement[13216-13297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13236-13297]:Block[13236-13297]"
  }, {
    "left" : "throw new IllegalArgumentException();",
    "right" : "throw new IllegalArgumentException();",
    "info" : "ThrowStatement[13250-13287]:ThrowStatement[13250-13287]"
  }, {
    "left" : "if (iPrefix != null)",
    "right" : "if (iPrefix != null)",
    "info" : "IfStatement[13306-13396]:IfStatement[13306-13396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13327-13396]:Block[13327-13396]"
  }, {
    "left" : "prefix = new CompositeAffix(iPrefix, prefix);",
    "right" : "prefix = new CompositeAffix(iPrefix, prefix);",
    "info" : "ExpressionStatement[13341-13386]:ExpressionStatement[13341-13386]"
  }, {
    "left" : "iPrefix = prefix;",
    "right" : "iPrefix = prefix;",
    "info" : "ExpressionStatement[13405-13422]:ExpressionStatement[13405-13422]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[13431-13443]:ReturnStatement[13431-13443]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13836-13842]:Modifier[13836-13842]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[13843-13865]:SimpleType[13843-13865]"
  }, {
    "left" : "appendYears",
    "right" : "appendYears",
    "info" : "SimpleName[13866-13877]:SimpleName[13866-13877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13880-13936]:Block[13880-13936]"
  }, {
    "left" : "appendField(YEARS);",
    "right" : "appendField(YEARS);",
    "info" : "ExpressionStatement[13890-13909]:ExpressionStatement[13890-13909]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[13918-13930]:ReturnStatement[13918-13930]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14246-14252]:Modifier[14246-14252]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[14253-14275]:SimpleType[14253-14275]"
  }, {
    "left" : "appendMonths",
    "right" : "appendMonths",
    "info" : "SimpleName[14276-14288]:SimpleName[14276-14288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14291-14348]:Block[14291-14348]"
  }, {
    "left" : "appendField(MONTHS);",
    "right" : "appendField(MONTHS);",
    "info" : "ExpressionStatement[14301-14321]:ExpressionStatement[14301-14321]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[14330-14342]:ReturnStatement[14330-14342]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14657-14663]:Modifier[14657-14663]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[14664-14686]:SimpleType[14664-14686]"
  }, {
    "left" : "appendWeeks",
    "right" : "appendWeeks",
    "info" : "SimpleName[14687-14698]:SimpleName[14687-14698]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14701-14757]:Block[14701-14757]"
  }, {
    "left" : "appendField(WEEKS);",
    "right" : "appendField(WEEKS);",
    "info" : "ExpressionStatement[14711-14730]:ExpressionStatement[14711-14730]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[14739-14751]:ReturnStatement[14739-14751]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15065-15071]:Modifier[15065-15071]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[15072-15094]:SimpleType[15072-15094]"
  }, {
    "left" : "appendDays",
    "right" : "appendDays",
    "info" : "SimpleName[15095-15105]:SimpleName[15095-15105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15108-15163]:Block[15108-15163]"
  }, {
    "left" : "appendField(DAYS);",
    "right" : "appendField(DAYS);",
    "info" : "ExpressionStatement[15118-15136]:ExpressionStatement[15118-15136]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[15145-15157]:ReturnStatement[15145-15157]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15472-15478]:Modifier[15472-15478]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[15479-15501]:SimpleType[15479-15501]"
  }, {
    "left" : "appendHours",
    "right" : "appendHours",
    "info" : "SimpleName[15502-15513]:SimpleName[15502-15513]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15516-15572]:Block[15516-15572]"
  }, {
    "left" : "appendField(HOURS);",
    "right" : "appendField(HOURS);",
    "info" : "ExpressionStatement[15526-15545]:ExpressionStatement[15526-15545]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[15554-15566]:ReturnStatement[15554-15566]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15883-15889]:Modifier[15883-15889]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[15890-15912]:SimpleType[15890-15912]"
  }, {
    "left" : "appendMinutes",
    "right" : "appendMinutes",
    "info" : "SimpleName[15913-15926]:SimpleName[15913-15926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15929-15987]:Block[15929-15987]"
  }, {
    "left" : "appendField(MINUTES);",
    "right" : "appendField(MINUTES);",
    "info" : "ExpressionStatement[15939-15960]:ExpressionStatement[15939-15960]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[15969-15981]:ReturnStatement[15969-15981]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16298-16304]:Modifier[16298-16304]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[16305-16327]:SimpleType[16305-16327]"
  }, {
    "left" : "appendSeconds",
    "right" : "appendSeconds",
    "info" : "SimpleName[16328-16341]:SimpleName[16328-16341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16344-16402]:Block[16344-16402]"
  }, {
    "left" : "appendField(SECONDS);",
    "right" : "appendField(SECONDS);",
    "info" : "ExpressionStatement[16354-16375]:ExpressionStatement[16354-16375]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[16384-16396]:ReturnStatement[16384-16396]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16661-16667]:Modifier[16661-16667]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[16668-16690]:SimpleType[16668-16690]"
  }, {
    "left" : "appendSecondsWithMillis",
    "right" : "appendSecondsWithMillis",
    "info" : "SimpleName[16691-16714]:SimpleName[16691-16714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16717-16782]:Block[16717-16782]"
  }, {
    "left" : "appendField(SECONDS_MILLIS);",
    "right" : "appendField(SECONDS_MILLIS);",
    "info" : "ExpressionStatement[16727-16755]:ExpressionStatement[16727-16755]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[16764-16776]:ReturnStatement[16764-16776]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17051-17057]:Modifier[17051-17057]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[17058-17080]:SimpleType[17058-17080]"
  }, {
    "left" : "appendSecondsWithOptionalMillis",
    "right" : "appendSecondsWithOptionalMillis",
    "info" : "SimpleName[17081-17112]:SimpleName[17081-17112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17115-17189]:Block[17115-17189]"
  }, {
    "left" : "appendField(SECONDS_OPTIONAL_MILLIS);",
    "right" : "appendField(SECONDS_OPTIONAL_MILLIS);",
    "info" : "ExpressionStatement[17125-17162]:ExpressionStatement[17125-17162]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[17171-17183]:ReturnStatement[17171-17183]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17499-17505]:Modifier[17499-17505]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[17506-17528]:SimpleType[17506-17528]"
  }, {
    "left" : "appendMillis",
    "right" : "appendMillis",
    "info" : "SimpleName[17529-17541]:SimpleName[17529-17541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17544-17601]:Block[17544-17601]"
  }, {
    "left" : "appendField(MILLIS);",
    "right" : "appendField(MILLIS);",
    "info" : "ExpressionStatement[17554-17574]:ExpressionStatement[17554-17574]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[17583-17595]:ReturnStatement[17583-17595]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17852-17858]:Modifier[17852-17858]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[17859-17881]:SimpleType[17859-17881]"
  }, {
    "left" : "appendMillis3Digit",
    "right" : "appendMillis3Digit",
    "info" : "SimpleName[17882-17900]:SimpleName[17882-17900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17903-17958]:Block[17903-17958]"
  }, {
    "left" : "appendField(7, 3);",
    "right" : "appendField(7, 3);",
    "info" : "ExpressionStatement[17913-17931]:ExpressionStatement[17913-17931]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[17940-17952]:ReturnStatement[17940-17952]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[17964-17971]:Modifier[17964-17971]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17972-17976]:PrimitiveType[17972-17976]"
  }, {
    "left" : "appendField",
    "right" : "appendField",
    "info" : "SimpleName[17977-17988]:SimpleName[17977-17988]"
  }, {
    "left" : "int type",
    "right" : "int type",
    "info" : "SingleVariableDeclaration[17989-17997]:SingleVariableDeclaration[17989-17997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17999-18052]:Block[17999-18052]"
  }, {
    "left" : "appendField(type, iMinPrintedDigits);",
    "right" : "appendField(type, iMinPrintedDigits);",
    "info" : "ExpressionStatement[18009-18046]:ExpressionStatement[18009-18046]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[18058-18065]:Modifier[18058-18065]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18066-18070]:PrimitiveType[18066-18070]"
  }, {
    "left" : "appendField",
    "right" : "appendField",
    "info" : "SimpleName[18071-18082]:SimpleName[18071-18082]"
  }, {
    "left" : "int type",
    "right" : "int type",
    "info" : "SingleVariableDeclaration[18083-18091]:SingleVariableDeclaration[18083-18091]"
  }, {
    "left" : "int minPrinted",
    "right" : "int minPrinted",
    "info" : "SingleVariableDeclaration[18093-18107]:SingleVariableDeclaration[18093-18107]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18109-18383]:Block[18109-18383]"
  }, {
    "left" : "FieldFormatter field = new FieldFormatter(minPrinted, iPrintZeroSetting,\n            iMaxParsedDigits, iRejectSignedValues, type, iFieldFormatters, iPrefix, null);",
    "right" : "FieldFormatter field = new FieldFormatter(minPrinted, iPrintZeroSetting,\n            iMaxParsedDigits, iRejectSignedValues, type, iFieldFormatters, iPrefix, null);",
    "info" : "VariableDeclarationStatement[18119-18282]:VariableDeclarationStatement[18119-18282]"
  }, {
    "left" : "append0(field, field);",
    "right" : "append0(field, field);",
    "info" : "ExpressionStatement[18291-18313]:ExpressionStatement[18291-18313]"
  }, {
    "left" : "iFieldFormatters[type] = field;",
    "right" : "iFieldFormatters[type] = field;",
    "info" : "ExpressionStatement[18322-18353]:ExpressionStatement[18322-18353]"
  }, {
    "left" : "iPrefix = null;",
    "right" : "iPrefix = null;",
    "info" : "ExpressionStatement[18362-18377]:ExpressionStatement[18362-18377]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18833-18839]:Modifier[18833-18839]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[18840-18862]:SimpleType[18840-18862]"
  }, {
    "left" : "appendSuffix",
    "right" : "appendSuffix",
    "info" : "SimpleName[18863-18875]:SimpleName[18863-18875]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[18876-18887]:SingleVariableDeclaration[18876-18887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18889-19036]:Block[18889-19036]"
  }, {
    "left" : "if (text == null)",
    "right" : "if (text == null)",
    "info" : "IfStatement[18899-18978]:IfStatement[18899-18978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18917-18978]:Block[18917-18978]"
  }, {
    "left" : "throw new IllegalArgumentException();",
    "right" : "throw new IllegalArgumentException();",
    "info" : "ThrowStatement[18931-18968]:ThrowStatement[18931-18968]"
  }, {
    "left" : "return appendSuffix(new SimpleAffix(text));",
    "right" : "return appendSuffix(new SimpleAffix(text));",
    "info" : "ReturnStatement[18987-19030]:ReturnStatement[18987-19030]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19604-19610]:Modifier[19604-19610]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[19611-19633]:SimpleType[19611-19633]"
  }, {
    "left" : "appendSuffix",
    "right" : "appendSuffix",
    "info" : "SimpleName[19634-19646]:SimpleName[19634-19646]"
  }, {
    "left" : "String singularText",
    "right" : "String singularText",
    "info" : "SingleVariableDeclaration[19647-19666]:SingleVariableDeclaration[19647-19666]"
  }, {
    "left" : "String pluralText",
    "right" : "String pluralText",
    "info" : "SingleVariableDeclaration[19715-19732]:SingleVariableDeclaration[19715-19732]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19734-19931]:Block[19734-19931]"
  }, {
    "left" : "if (singularText == null || pluralText == null)",
    "right" : "if (singularText == null || pluralText == null)",
    "info" : "IfStatement[19744-19853]:IfStatement[19744-19853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19792-19853]:Block[19792-19853]"
  }, {
    "left" : "throw new IllegalArgumentException();",
    "right" : "throw new IllegalArgumentException();",
    "info" : "ThrowStatement[19806-19843]:ThrowStatement[19806-19843]"
  }, {
    "left" : "return appendSuffix(new PluralAffix(singularText, pluralText));",
    "right" : "return appendSuffix(new PluralAffix(singularText, pluralText));",
    "info" : "ReturnStatement[19862-19925]:ReturnStatement[19862-19925]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20268-20275]:Modifier[20268-20275]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[20276-20298]:SimpleType[20276-20298]"
  }, {
    "left" : "appendSuffix",
    "right" : "appendSuffix",
    "info" : "SimpleName[20299-20311]:SimpleName[20299-20311]"
  }, {
    "left" : "PeriodFieldAffix suffix",
    "right" : "PeriodFieldAffix suffix",
    "info" : "SingleVariableDeclaration[20312-20335]:SingleVariableDeclaration[20312-20335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20337-21313]:Block[20337-21313]"
  }, {
    "left" : "final Object originalPrinter;",
    "right" : "final Object originalPrinter;",
    "info" : "VariableDeclarationStatement[20347-20376]:VariableDeclarationStatement[20347-20376]"
  }, {
    "left" : "final Object originalParser;",
    "right" : "final Object originalParser;",
    "info" : "VariableDeclarationStatement[20385-20413]:VariableDeclarationStatement[20385-20413]"
  }, {
    "left" : "if (iElementPairs.size() > 0)",
    "right" : "if (iElementPairs.size() > 0)",
    "info" : "IfStatement[20422-20700]:IfStatement[20422-20700]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20452-20612]:Block[20452-20612]"
  }, {
    "left" : "originalPrinter = iElementPairs.get(iElementPairs.size() - 2);",
    "right" : "originalPrinter = iElementPairs.get(iElementPairs.size() - 2);",
    "info" : "ExpressionStatement[20466-20528]:ExpressionStatement[20466-20528]"
  }, {
    "left" : "originalParser = iElementPairs.get(iElementPairs.size() - 1);",
    "right" : "originalParser = iElementPairs.get(iElementPairs.size() - 1);",
    "info" : "ExpressionStatement[20541-20602]:ExpressionStatement[20541-20602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20618-20700]:Block[20618-20700]"
  }, {
    "left" : "originalPrinter = null;",
    "right" : "originalPrinter = null;",
    "info" : "ExpressionStatement[20632-20655]:ExpressionStatement[20632-20655]"
  }, {
    "left" : "originalParser = null;",
    "right" : "originalParser = null;",
    "info" : "ExpressionStatement[20668-20690]:ExpressionStatement[20668-20690]"
  }, {
    "left" : "if (originalPrinter == null || originalParser == null ||\n                originalPrinter != originalParser ||\n                !(originalPrinter instanceof FieldFormatter))",
    "right" : "if (originalPrinter == null || originalParser == null ||\n                originalPrinter != originalParser ||\n                !(originalPrinter instanceof FieldFormatter))",
    "info" : "IfStatement[20710-20969]:IfStatement[20710-20969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20882-20969]:Block[20882-20969]"
  }, {
    "left" : "throw new IllegalStateException(\"No field to apply suffix to\");",
    "right" : "throw new IllegalStateException(\"No field to apply suffix to\");",
    "info" : "ThrowStatement[20896-20959]:ThrowStatement[20896-20959]"
  }, {
    "left" : "clearPrefix();",
    "right" : "clearPrefix();",
    "info" : "ExpressionStatement[20979-20993]:ExpressionStatement[20979-20993]"
  }, {
    "left" : "FieldFormatter newField = new FieldFormatter((FieldFormatter) originalPrinter, suffix);",
    "right" : "FieldFormatter newField = new FieldFormatter((FieldFormatter) originalPrinter, suffix);",
    "info" : "VariableDeclarationStatement[21002-21089]:VariableDeclarationStatement[21002-21089]"
  }, {
    "left" : "iElementPairs.set(iElementPairs.size() - 2, newField);",
    "right" : "iElementPairs.set(iElementPairs.size() - 2, newField);",
    "info" : "ExpressionStatement[21098-21152]:ExpressionStatement[21098-21152]"
  }, {
    "left" : "iElementPairs.set(iElementPairs.size() - 1, newField);",
    "right" : "iElementPairs.set(iElementPairs.size() - 1, newField);",
    "info" : "ExpressionStatement[21161-21215]:ExpressionStatement[21161-21215]"
  }, {
    "left" : "iFieldFormatters[newField.getFieldType()] = newField;",
    "right" : "iFieldFormatters[newField.getFieldType()] = newField;",
    "info" : "ExpressionStatement[21224-21277]:ExpressionStatement[21224-21277]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[21295-21307]:ReturnStatement[21295-21307]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22056-22062]:Modifier[22056-22062]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[22063-22085]:SimpleType[22063-22085]"
  }, {
    "left" : "appendSeparator",
    "right" : "appendSeparator",
    "info" : "SimpleName[22086-22101]:SimpleName[22086-22101]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[22102-22113]:SingleVariableDeclaration[22102-22113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22115-22184]:Block[22115-22184]"
  }, {
    "left" : "return appendSeparator(text, text, null, true, true);",
    "right" : "return appendSeparator(text, text, null, true, true);",
    "info" : "ReturnStatement[22125-22178]:ReturnStatement[22125-22178]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22836-22842]:Modifier[22836-22842]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[22843-22865]:SimpleType[22843-22865]"
  }, {
    "left" : "appendSeparatorIfFieldsAfter",
    "right" : "appendSeparatorIfFieldsAfter",
    "info" : "SimpleName[22866-22894]:SimpleName[22866-22894]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[22895-22906]:SingleVariableDeclaration[22895-22906]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22908-22978]:Block[22908-22978]"
  }, {
    "left" : "return appendSeparator(text, text, null, false, true);",
    "right" : "return appendSeparator(text, text, null, false, true);",
    "info" : "ReturnStatement[22918-22972]:ReturnStatement[22918-22972]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23631-23637]:Modifier[23631-23637]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[23638-23660]:SimpleType[23638-23660]"
  }, {
    "left" : "appendSeparatorIfFieldsBefore",
    "right" : "appendSeparatorIfFieldsBefore",
    "info" : "SimpleName[23661-23690]:SimpleName[23661-23690]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[23691-23702]:SingleVariableDeclaration[23691-23702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23704-23774]:Block[23704-23774]"
  }, {
    "left" : "return appendSeparator(text, text, null, true, false);",
    "right" : "return appendSeparator(text, text, null, true, false);",
    "info" : "ReturnStatement[23714-23768]:ReturnStatement[23714-23768]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24748-24754]:Modifier[24748-24754]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[24755-24777]:SimpleType[24755-24777]"
  }, {
    "left" : "appendSeparator",
    "right" : "appendSeparator",
    "info" : "SimpleName[24778-24793]:SimpleName[24778-24793]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[24794-24805]:SingleVariableDeclaration[24794-24805]"
  }, {
    "left" : "String finalText",
    "right" : "String finalText",
    "info" : "SingleVariableDeclaration[24807-24823]:SingleVariableDeclaration[24807-24823]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24825-24899]:Block[24825-24899]"
  }, {
    "left" : "return appendSeparator(text, finalText, null, true, true);",
    "right" : "return appendSeparator(text, finalText, null, true, true);",
    "info" : "ReturnStatement[24835-24893]:ReturnStatement[24835-24893]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25954-25960]:Modifier[25954-25960]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[25961-25983]:SimpleType[25961-25983]"
  }, {
    "left" : "appendSeparator",
    "right" : "appendSeparator",
    "info" : "SimpleName[25984-25999]:SimpleName[25984-25999]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[26000-26011]:SingleVariableDeclaration[26000-26011]"
  }, {
    "left" : "String finalText",
    "right" : "String finalText",
    "info" : "SingleVariableDeclaration[26013-26029]:SingleVariableDeclaration[26013-26029]"
  }, {
    "left" : "String[] variants",
    "right" : "String[] variants",
    "info" : "SingleVariableDeclaration[26081-26098]:SingleVariableDeclaration[26081-26098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26100-26178]:Block[26100-26178]"
  }, {
    "left" : "return appendSeparator(text, finalText, variants, true, true);",
    "right" : "return appendSeparator(text, finalText, variants, true, true);",
    "info" : "ReturnStatement[26110-26172]:ReturnStatement[26110-26172]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26184-26191]:Modifier[26184-26191]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[26192-26214]:SimpleType[26192-26214]"
  }, {
    "left" : "appendSeparator",
    "right" : "appendSeparator",
    "info" : "SimpleName[26215-26230]:SimpleName[26215-26230]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[26231-26242]:SingleVariableDeclaration[26231-26242]"
  }, {
    "left" : "String finalText",
    "right" : "String finalText",
    "info" : "SingleVariableDeclaration[26244-26260]:SingleVariableDeclaration[26244-26260]"
  }, {
    "left" : "String[] variants",
    "right" : "String[] variants",
    "info" : "SingleVariableDeclaration[26313-26330]:SingleVariableDeclaration[26313-26330]"
  }, {
    "left" : "boolean useBefore",
    "right" : "boolean useBefore",
    "info" : "SingleVariableDeclaration[26383-26400]:SingleVariableDeclaration[26383-26400]"
  }, {
    "left" : "boolean useAfter",
    "right" : "boolean useAfter",
    "info" : "SingleVariableDeclaration[26402-26418]:SingleVariableDeclaration[26402-26418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26420-28001]:Block[26420-28001]"
  }, {
    "left" : "if (text == null || finalText == null)",
    "right" : "if (text == null || finalText == null)",
    "info" : "IfStatement[26430-26530]:IfStatement[26430-26530]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26469-26530]:Block[26469-26530]"
  }, {
    "left" : "throw new IllegalArgumentException();",
    "right" : "throw new IllegalArgumentException();",
    "info" : "ThrowStatement[26483-26520]:ThrowStatement[26483-26520]"
  }, {
    "left" : "clearPrefix();",
    "right" : "clearPrefix();",
    "info" : "ExpressionStatement[26540-26554]:ExpressionStatement[26540-26554]"
  }, {
    "left" : "List<Object> pairs = iElementPairs;",
    "right" : "List<Object> pairs = iElementPairs;",
    "info" : "VariableDeclarationStatement[26612-26647]:VariableDeclarationStatement[26612-26647]"
  }, {
    "left" : "if (pairs.size() == 0)",
    "right" : "if (pairs.size() == 0)",
    "info" : "IfStatement[26656-27006]:IfStatement[26656-27006]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26679-27006]:Block[26679-27006]"
  }, {
    "left" : "if (useAfter && useBefore == false)",
    "right" : "if (useAfter && useBefore == false)",
    "info" : "IfStatement[26693-26971]:IfStatement[26693-26971]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26729-26971]:Block[26729-26971]"
  }, {
    "left" : "Separator separator = new Separator(\n                        text, finalText, variants,\n                        Literal.EMPTY, Literal.EMPTY, useBefore, useAfter);",
    "right" : "Separator separator = new Separator(\n                        text, finalText, variants,\n                        Literal.EMPTY, Literal.EMPTY, useBefore, useAfter);",
    "info" : "VariableDeclarationStatement[26747-26910]:VariableDeclarationStatement[26747-26910]"
  }, {
    "left" : "append0(separator, separator);",
    "right" : "append0(separator, separator);",
    "info" : "ExpressionStatement[26927-26957]:ExpressionStatement[26927-26957]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[26984-26996]:ReturnStatement[26984-26996]"
  }, {
    "left" : "int i;",
    "right" : "int i;",
    "info" : "VariableDeclarationStatement[27065-27071]:VariableDeclarationStatement[27065-27071]"
  }, {
    "left" : "Separator lastSeparator = null;",
    "right" : "Separator lastSeparator = null;",
    "info" : "VariableDeclarationStatement[27080-27111]:VariableDeclarationStatement[27080-27111]"
  }, {
    "left" : "for (i=pairs.size(); --i>=0)",
    "right" : "for (i=pairs.size(); --i>=0)",
    "info" : "ForStatement[27120-27405]:ForStatement[27120-27405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27151-27405]:Block[27151-27405]"
  }, {
    "left" : "if (pairs.get(i) instanceof Separator)",
    "right" : "if (pairs.get(i) instanceof Separator)",
    "info" : "IfStatement[27165-27360]:IfStatement[27165-27360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27204-27360]:Block[27204-27360]"
  }, {
    "left" : "lastSeparator = (Separator) pairs.get(i);",
    "right" : "lastSeparator = (Separator) pairs.get(i);",
    "info" : "ExpressionStatement[27222-27263]:ExpressionStatement[27222-27263]"
  }, {
    "left" : "pairs = pairs.subList(i + 1, pairs.size());",
    "right" : "pairs = pairs.subList(i + 1, pairs.size());",
    "info" : "ExpressionStatement[27280-27323]:ExpressionStatement[27280-27323]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[27340-27346]:BreakStatement[27340-27346]"
  }, {
    "left" : "i--;",
    "right" : "i--;",
    "info" : "ExpressionStatement[27373-27377]:ExpressionStatement[27373-27377]"
  }, {
    "left" : "if (lastSeparator != null && pairs.size() == 0)",
    "right" : "if (lastSeparator != null && pairs.size() == 0)",
    "info" : "IfStatement[27451-27965]:IfStatement[27451-27965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27499-27594]:Block[27499-27594]"
  }, {
    "left" : "throw new IllegalStateException(\"Cannot have two adjacent separators\");",
    "right" : "throw new IllegalStateException(\"Cannot have two adjacent separators\");",
    "info" : "ThrowStatement[27513-27584]:ThrowStatement[27513-27584]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27600-27965]:Block[27600-27965]"
  }, {
    "left" : "Object[] comp = createComposite(pairs);",
    "right" : "Object[] comp = createComposite(pairs);",
    "info" : "VariableDeclarationStatement[27614-27653]:VariableDeclarationStatement[27614-27653]"
  }, {
    "left" : "pairs.clear();",
    "right" : "pairs.clear();",
    "info" : "ExpressionStatement[27666-27680]:ExpressionStatement[27666-27680]"
  }, {
    "left" : "Separator separator = new Separator(\n                    text, finalText, variants,\n                    (PeriodPrinter) comp[0], (PeriodParser) comp[1],\n                    useBefore, useAfter);",
    "right" : "Separator separator = new Separator(\n                    text, finalText, variants,\n                    (PeriodPrinter) comp[0], (PeriodParser) comp[1],\n                    useBefore, useAfter);",
    "info" : "VariableDeclarationStatement[27693-27887]:VariableDeclarationStatement[27693-27887]"
  }, {
    "left" : "pairs.add(separator);",
    "right" : "pairs.add(separator);",
    "info" : "ExpressionStatement[27900-27921]:ExpressionStatement[27900-27921]"
  }, {
    "left" : "pairs.add(separator);",
    "right" : "pairs.add(separator);",
    "info" : "ExpressionStatement[27934-27955]:ExpressionStatement[27934-27955]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[27983-27995]:ReturnStatement[27983-27995]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28085-28092]:Modifier[28085-28092]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[28093-28097]:PrimitiveType[28093-28097]"
  }, {
    "left" : "clearPrefix",
    "right" : "clearPrefix",
    "info" : "SimpleName[28098-28109]:SimpleName[28098-28109]"
  }, {
    "left" : "IllegalStateException",
    "right" : "IllegalStateException",
    "info" : "SimpleType[28119-28140]:SimpleType[28119-28140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28141-28290]:Block[28141-28290]"
  }, {
    "left" : "if (iPrefix != null)",
    "right" : "if (iPrefix != null)",
    "info" : "IfStatement[28151-28260]:IfStatement[28151-28260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28172-28260]:Block[28172-28260]"
  }, {
    "left" : "throw new IllegalStateException(\"Prefix not followed by field\");",
    "right" : "throw new IllegalStateException(\"Prefix not followed by field\");",
    "info" : "ThrowStatement[28186-28250]:ThrowStatement[28186-28250]"
  }, {
    "left" : "iPrefix = null;",
    "right" : "iPrefix = null;",
    "info" : "ExpressionStatement[28269-28284]:ExpressionStatement[28269-28284]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28296-28303]:Modifier[28296-28303]"
  }, {
    "left" : "PeriodFormatterBuilder",
    "right" : "PeriodFormatterBuilder",
    "info" : "SimpleType[28304-28326]:SimpleType[28304-28326]"
  }, {
    "left" : "append0",
    "right" : "append0",
    "info" : "SimpleName[28327-28334]:SimpleName[28327-28334]"
  }, {
    "left" : "PeriodPrinter printer",
    "right" : "PeriodPrinter printer",
    "info" : "SingleVariableDeclaration[28335-28356]:SingleVariableDeclaration[28335-28356]"
  }, {
    "left" : "PeriodParser parser",
    "right" : "PeriodParser parser",
    "info" : "SingleVariableDeclaration[28358-28377]:SingleVariableDeclaration[28358-28377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28379-28560]:Block[28379-28560]"
  }, {
    "left" : "iElementPairs.add(printer);",
    "right" : "iElementPairs.add(printer);",
    "info" : "ExpressionStatement[28389-28416]:ExpressionStatement[28389-28416]"
  }, {
    "left" : "iElementPairs.add(parser);",
    "right" : "iElementPairs.add(parser);",
    "info" : "ExpressionStatement[28425-28451]:ExpressionStatement[28425-28451]"
  }, {
    "left" : "iNotPrinter |= (printer == null);",
    "right" : "iNotPrinter |= (printer == null);",
    "info" : "ExpressionStatement[28460-28493]:ExpressionStatement[28460-28493]"
  }, {
    "left" : "iNotParser |= (parser == null);",
    "right" : "iNotParser |= (parser == null);",
    "info" : "ExpressionStatement[28502-28533]:ExpressionStatement[28502-28533]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[28542-28554]:ReturnStatement[28542-28554]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28644-28651]:Modifier[28644-28651]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[28652-28658]:Modifier[28652-28658]"
  }, {
    "left" : "PeriodFormatter",
    "right" : "PeriodFormatter",
    "info" : "SimpleType[28659-28674]:SimpleType[28659-28674]"
  }, {
    "left" : "toFormatter",
    "right" : "toFormatter",
    "info" : "SimpleName[28675-28686]:SimpleName[28675-28686]"
  }, {
    "left" : "List<Object> elementPairs",
    "right" : "List<Object> elementPairs",
    "info" : "SingleVariableDeclaration[28687-28712]:SingleVariableDeclaration[28687-28712]"
  }, {
    "left" : "boolean notPrinter",
    "right" : "boolean notPrinter",
    "info" : "SingleVariableDeclaration[28714-28732]:SingleVariableDeclaration[28714-28732]"
  }, {
    "left" : "boolean notParser",
    "right" : "boolean notParser",
    "info" : "SingleVariableDeclaration[28734-28751]:SingleVariableDeclaration[28734-28751]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28753-29767]:Block[28753-29767]"
  }, {
    "left" : "if (notPrinter && notParser)",
    "right" : "if (notPrinter && notParser)",
    "info" : "IfStatement[28763-28902]:IfStatement[28763-28902]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28792-28902]:Block[28792-28902]"
  }, {
    "left" : "throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");",
    "right" : "throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");",
    "info" : "ThrowStatement[28806-28892]:ThrowStatement[28806-28892]"
  }, {
    "left" : "int size = elementPairs.size();",
    "right" : "int size = elementPairs.size();",
    "info" : "VariableDeclarationStatement[28911-28942]:VariableDeclarationStatement[28911-28942]"
  }, {
    "left" : "if (size >= 2 && elementPairs.get(0) instanceof Separator)",
    "right" : "if (size >= 2 && elementPairs.get(0) instanceof Separator)",
    "info" : "IfStatement[28951-29391]:IfStatement[28951-29391]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29010-29391]:Block[29010-29391]"
  }, {
    "left" : "Separator sep = (Separator) elementPairs.get(0);",
    "right" : "Separator sep = (Separator) elementPairs.get(0);",
    "info" : "VariableDeclarationStatement[29024-29072]:VariableDeclarationStatement[29024-29072]"
  }, {
    "left" : "if (sep.iAfterParser == null && sep.iAfterPrinter == null)",
    "right" : "if (sep.iAfterParser == null && sep.iAfterPrinter == null)",
    "info" : "IfStatement[29085-29381]:IfStatement[29085-29381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29144-29381]:Block[29144-29381]"
  }, {
    "left" : "PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);",
    "right" : "PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);",
    "info" : "VariableDeclarationStatement[29162-29248]:VariableDeclarationStatement[29162-29248]"
  }, {
    "left" : "sep = sep.finish(f.getPrinter(), f.getParser());",
    "right" : "sep = sep.finish(f.getPrinter(), f.getParser());",
    "info" : "ExpressionStatement[29265-29313]:ExpressionStatement[29265-29313]"
  }, {
    "left" : "return new PeriodFormatter(sep, sep);",
    "right" : "return new PeriodFormatter(sep, sep);",
    "info" : "ReturnStatement[29330-29367]:ReturnStatement[29330-29367]"
  }, {
    "left" : "Object[] comp = createComposite(elementPairs);",
    "right" : "Object[] comp = createComposite(elementPairs);",
    "info" : "VariableDeclarationStatement[29400-29446]:VariableDeclarationStatement[29400-29446]"
  }, {
    "left" : "if (notPrinter)",
    "right" : "if (notPrinter)",
    "info" : "IfStatement[29455-29761]:IfStatement[29455-29761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29471-29552]:Block[29471-29552]"
  }, {
    "left" : "return new PeriodFormatter(null, (PeriodParser) comp[1]);",
    "right" : "return new PeriodFormatter(null, (PeriodParser) comp[1]);",
    "info" : "ReturnStatement[29485-29542]:ReturnStatement[29485-29542]"
  }, {
    "left" : "if (notParser)",
    "right" : "if (notParser)",
    "info" : "IfStatement[29558-29761]:IfStatement[29558-29761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29573-29655]:Block[29573-29655]"
  }, {
    "left" : "return new PeriodFormatter((PeriodPrinter) comp[0], null);",
    "right" : "return new PeriodFormatter((PeriodPrinter) comp[0], null);",
    "info" : "ReturnStatement[29587-29645]:ReturnStatement[29587-29645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29661-29761]:Block[29661-29761]"
  }, {
    "left" : "return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);",
    "right" : "return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);",
    "info" : "ReturnStatement[29675-29751]:ReturnStatement[29675-29751]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[29773-29780]:Modifier[29773-29780]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[29781-29787]:Modifier[29781-29787]"
  }, {
    "left" : "Object[]",
    "right" : "Object[]",
    "info" : "ArrayType[29788-29796]:ArrayType[29788-29796]"
  }, {
    "left" : "createComposite",
    "right" : "createComposite",
    "info" : "SimpleName[29797-29812]:SimpleName[29797-29812]"
  }, {
    "left" : "List<Object> elementPairs",
    "right" : "List<Object> elementPairs",
    "info" : "SingleVariableDeclaration[29813-29838]:SingleVariableDeclaration[29813-29838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29840-30217]:Block[29840-30217]"
  }, {
    "left" : "switch (elementPairs.size()) {\n            case 0:\n                return new Object[] {Literal.EMPTY, Literal.EMPTY};\n            case 1:\n                return new Object[] {elementPairs.get(0), elementPairs.get(1)};\n            default:\n                Composite comp = new Composite(elementPairs);\n                return new Object[] {comp, comp};\n        }",
    "right" : "switch (elementPairs.size()) {\n            case 0:\n                return new Object[] {Literal.EMPTY, Literal.EMPTY};\n            case 1:\n                return new Object[] {elementPairs.get(0), elementPairs.get(1)};\n            default:\n                Composite comp = new Composite(elementPairs);\n                return new Object[] {comp, comp};\n        }",
    "info" : "SwitchStatement[29850-30211]:SwitchStatement[29850-30211]"
  }, {
    "left" : "case 0:",
    "right" : "case 0:",
    "info" : "SwitchCase[29893-29900]:SwitchCase[29893-29900]"
  }, {
    "left" : "return new Object[] {Literal.EMPTY, Literal.EMPTY};",
    "right" : "return new Object[] {Literal.EMPTY, Literal.EMPTY};",
    "info" : "ReturnStatement[29917-29968]:ReturnStatement[29917-29968]"
  }, {
    "left" : "case 1:",
    "right" : "case 1:",
    "info" : "SwitchCase[29981-29988]:SwitchCase[29981-29988]"
  }, {
    "left" : "return new Object[] {elementPairs.get(0), elementPairs.get(1)};",
    "right" : "return new Object[] {elementPairs.get(0), elementPairs.get(1)};",
    "info" : "ReturnStatement[30005-30068]:ReturnStatement[30005-30068]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[30081-30089]:SwitchCase[30081-30089]"
  }, {
    "left" : "Composite comp = new Composite(elementPairs);",
    "right" : "Composite comp = new Composite(elementPairs);",
    "info" : "VariableDeclarationStatement[30106-30151]:VariableDeclarationStatement[30106-30151]"
  }, {
    "left" : "return new Object[] {comp, comp};",
    "right" : "return new Object[] {comp, comp};",
    "info" : "ReturnStatement[30168-30201]:ReturnStatement[30168-30201]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[30449-30455]:Modifier[30449-30455]"
  }, {
    "left" : "interface",
    "right" : "interface",
    "info" : "TYPE_DECLARATION_KIND[30456-30465]:TYPE_DECLARATION_KIND[30456-30465]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[30493-30496]:PrimitiveType[30493-30496]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[30497-30519]:SimpleName[30497-30519]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[30520-30529]:SingleVariableDeclaration[30520-30529]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30549-30553]:PrimitiveType[30549-30553]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[30554-30561]:SimpleName[30554-30561]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[30562-30578]:SingleVariableDeclaration[30562-30578]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[30580-30589]:SingleVariableDeclaration[30580-30589]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30609-30613]:PrimitiveType[30609-30613]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[30614-30621]:SimpleName[30614-30621]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[30622-30632]:SingleVariableDeclaration[30622-30632]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[30634-30643]:SingleVariableDeclaration[30634-30643]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[30652-30663]:SimpleType[30652-30663]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[30783-30786]:PrimitiveType[30783-30786]"
  }, {
    "left" : "parse",
    "right" : "parse",
    "info" : "SimpleName[30787-30792]:SimpleName[30787-30792]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[30793-30809]:SingleVariableDeclaration[30793-30809]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[30811-30823]:SingleVariableDeclaration[30811-30823]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[30942-30945]:PrimitiveType[30942-30945]"
  }, {
    "left" : "scan",
    "right" : "scan",
    "info" : "SimpleName[30946-30950]:SimpleName[30946-30950]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[30951-30967]:SingleVariableDeclaration[30951-30967]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[30969-30981]:SingleVariableDeclaration[30969-30981]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[31160-31166]:Modifier[31160-31166]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[31167-31172]:TYPE_DECLARATION_KIND[31167-31172]"
  }, {
    "left" : "SimpleAffix",
    "right" : "SimpleAffix",
    "info" : "SimpleName[31260-31271]:SimpleName[31260-31271]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[31272-31283]:SingleVariableDeclaration[31272-31283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31285-31322]:Block[31285-31322]"
  }, {
    "left" : "iText = text;",
    "right" : "iText = text;",
    "info" : "ExpressionStatement[31299-31312]:ExpressionStatement[31299-31312]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31332-31338]:Modifier[31332-31338]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[31339-31342]:PrimitiveType[31339-31342]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[31343-31365]:SimpleName[31343-31365]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[31366-31375]:SingleVariableDeclaration[31366-31375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31377-31423]:Block[31377-31423]"
  }, {
    "left" : "return iText.length();",
    "right" : "return iText.length();",
    "info" : "ReturnStatement[31391-31413]:ReturnStatement[31391-31413]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31433-31439]:Modifier[31433-31439]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31440-31444]:PrimitiveType[31440-31444]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[31445-31452]:SimpleName[31445-31452]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[31453-31469]:SingleVariableDeclaration[31453-31469]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[31471-31480]:SingleVariableDeclaration[31471-31480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31482-31524]:Block[31482-31524]"
  }, {
    "left" : "buf.append(iText);",
    "right" : "buf.append(iText);",
    "info" : "ExpressionStatement[31496-31514]:ExpressionStatement[31496-31514]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31534-31540]:Modifier[31534-31540]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31541-31545]:PrimitiveType[31541-31545]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[31546-31553]:SimpleName[31546-31553]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[31554-31564]:SingleVariableDeclaration[31554-31564]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[31566-31575]:SingleVariableDeclaration[31566-31575]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[31584-31595]:SimpleType[31584-31595]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31596-31637]:Block[31596-31637]"
  }, {
    "left" : "out.write(iText);",
    "right" : "out.write(iText);",
    "info" : "ExpressionStatement[31610-31627]:ExpressionStatement[31610-31627]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31647-31653]:Modifier[31647-31653]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[31654-31657]:PrimitiveType[31654-31657]"
  }, {
    "left" : "parse",
    "right" : "parse",
    "info" : "SimpleName[31658-31663]:SimpleName[31658-31663]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[31664-31680]:SingleVariableDeclaration[31664-31680]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[31682-31694]:SingleVariableDeclaration[31682-31694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31696-31954]:Block[31696-31954]"
  }, {
    "left" : "String text = iText;",
    "right" : "String text = iText;",
    "info" : "VariableDeclarationStatement[31710-31730]:VariableDeclarationStatement[31710-31730]"
  }, {
    "left" : "int textLength = text.length();",
    "right" : "int textLength = text.length();",
    "info" : "VariableDeclarationStatement[31743-31774]:VariableDeclarationStatement[31743-31774]"
  }, {
    "left" : "if (periodStr.regionMatches(true, position, text, 0, textLength))",
    "right" : "if (periodStr.regionMatches(true, position, text, 0, textLength))",
    "info" : "IfStatement[31787-31914]:IfStatement[31787-31914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31853-31914]:Block[31853-31914]"
  }, {
    "left" : "return position + textLength;",
    "right" : "return position + textLength;",
    "info" : "ReturnStatement[31871-31900]:ReturnStatement[31871-31900]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[31927-31944]:ReturnStatement[31927-31944]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31964-31970]:Modifier[31964-31970]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[31971-31974]:PrimitiveType[31971-31974]"
  }, {
    "left" : "scan",
    "right" : "scan",
    "info" : "SimpleName[31975-31979]:SimpleName[31975-31979]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[31980-31996]:SingleVariableDeclaration[31980-31996]"
  }, {
    "left" : "final int position",
    "right" : "final int position",
    "info" : "SingleVariableDeclaration[31998-32016]:SingleVariableDeclaration[31998-32016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32018-32840]:Block[32018-32840]"
  }, {
    "left" : "String text = iText;",
    "right" : "String text = iText;",
    "info" : "VariableDeclarationStatement[32032-32052]:VariableDeclarationStatement[32032-32052]"
  }, {
    "left" : "int textLength = text.length();",
    "right" : "int textLength = text.length();",
    "info" : "VariableDeclarationStatement[32065-32096]:VariableDeclarationStatement[32065-32096]"
  }, {
    "left" : "int sourceLength = periodStr.length();",
    "right" : "int sourceLength = periodStr.length();",
    "info" : "VariableDeclarationStatement[32109-32147]:VariableDeclarationStatement[32109-32147]"
  }, {
    "left" : "search:\n            for (int pos = position; pos < sourceLength; pos++) {\n                if (periodStr.regionMatches(true, pos, text, 0, textLength)) {\n                    return pos;\n                }\n                // Only allow number characters to be skipped in search of suffix.\n                switch (periodStr.charAt(pos)) {\n                case '0': case '1': case '2': case '3': case '4':\n                case '5': case '6': case '7': case '8': case '9':\n                case '.': case ',': case '+': case '-':\n                    break;\n                default:\n                    break search;\n                }\n            }",
    "right" : "search:\n            for (int pos = position; pos < sourceLength; pos++) {\n                if (periodStr.regionMatches(true, pos, text, 0, textLength)) {\n                    return pos;\n                }\n                // Only allow number characters to be skipped in search of suffix.\n                switch (periodStr.charAt(pos)) {\n                case '0': case '1': case '2': case '3': case '4':\n                case '5': case '6': case '7': case '8': case '9':\n                case '.': case ',': case '+': case '-':\n                    break;\n                default:\n                    break search;\n                }\n            }",
    "info" : "LabeledStatement[32160-32800]:LabeledStatement[32160-32800]"
  }, {
    "left" : "for (int pos = position; pos < sourceLength; pos++)",
    "right" : "for (int pos = position; pos < sourceLength; pos++)",
    "info" : "ForStatement[32180-32800]:ForStatement[32180-32800]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32232-32800]:Block[32232-32800]"
  }, {
    "left" : "if (periodStr.regionMatches(true, pos, text, 0, textLength))",
    "right" : "if (periodStr.regionMatches(true, pos, text, 0, textLength))",
    "info" : "IfStatement[32250-32362]:IfStatement[32250-32362]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32311-32362]:Block[32311-32362]"
  }, {
    "left" : "return pos;",
    "right" : "return pos;",
    "info" : "ReturnStatement[32333-32344]:ReturnStatement[32333-32344]"
  }, {
    "left" : "switch (periodStr.charAt(pos)) {\n                case '0': case '1': case '2': case '3': case '4':\n                case '5': case '6': case '7': case '8': case '9':\n                case '.': case ',': case '+': case '-':\n                    break;\n                default:\n                    break search;\n                }",
    "right" : "switch (periodStr.charAt(pos)) {\n                case '0': case '1': case '2': case '3': case '4':\n                case '5': case '6': case '7': case '8': case '9':\n                case '.': case ',': case '+': case '-':\n                    break;\n                default:\n                    break search;\n                }",
    "info" : "SwitchStatement[32462-32786]:SwitchStatement[32462-32786]"
  }, {
    "left" : "case '0':",
    "right" : "case '0':",
    "info" : "SwitchCase[32511-32520]:SwitchCase[32511-32520]"
  }, {
    "left" : "case '1':",
    "right" : "case '1':",
    "info" : "SwitchCase[32521-32530]:SwitchCase[32521-32530]"
  }, {
    "left" : "case '2':",
    "right" : "case '2':",
    "info" : "SwitchCase[32531-32540]:SwitchCase[32531-32540]"
  }, {
    "left" : "case '3':",
    "right" : "case '3':",
    "info" : "SwitchCase[32541-32550]:SwitchCase[32541-32550]"
  }, {
    "left" : "case '4':",
    "right" : "case '4':",
    "info" : "SwitchCase[32551-32560]:SwitchCase[32551-32560]"
  }, {
    "left" : "case '5':",
    "right" : "case '5':",
    "info" : "SwitchCase[32577-32586]:SwitchCase[32577-32586]"
  }, {
    "left" : "case '6':",
    "right" : "case '6':",
    "info" : "SwitchCase[32587-32596]:SwitchCase[32587-32596]"
  }, {
    "left" : "case '7':",
    "right" : "case '7':",
    "info" : "SwitchCase[32597-32606]:SwitchCase[32597-32606]"
  }, {
    "left" : "case '8':",
    "right" : "case '8':",
    "info" : "SwitchCase[32607-32616]:SwitchCase[32607-32616]"
  }, {
    "left" : "case '9':",
    "right" : "case '9':",
    "info" : "SwitchCase[32617-32626]:SwitchCase[32617-32626]"
  }, {
    "left" : "case '.':",
    "right" : "case '.':",
    "info" : "SwitchCase[32643-32652]:SwitchCase[32643-32652]"
  }, {
    "left" : "case ',':",
    "right" : "case ',':",
    "info" : "SwitchCase[32653-32662]:SwitchCase[32653-32662]"
  }, {
    "left" : "case '+':",
    "right" : "case '+':",
    "info" : "SwitchCase[32663-32672]:SwitchCase[32663-32672]"
  }, {
    "left" : "case '-':",
    "right" : "case '-':",
    "info" : "SwitchCase[32673-32682]:SwitchCase[32673-32682]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[32703-32709]:BreakStatement[32703-32709]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[32726-32734]:SwitchCase[32726-32734]"
  }, {
    "left" : "break search;",
    "right" : "break search;",
    "info" : "BreakStatement[32755-32768]:BreakStatement[32755-32768]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[32813-32830]:ReturnStatement[32813-32830]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[33082-33088]:Modifier[33082-33088]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[33089-33094]:TYPE_DECLARATION_KIND[33089-33094]"
  }, {
    "left" : "PluralAffix",
    "right" : "PluralAffix",
    "info" : "SimpleName[33232-33243]:SimpleName[33232-33243]"
  }, {
    "left" : "String singularText",
    "right" : "String singularText",
    "info" : "SingleVariableDeclaration[33244-33263]:SingleVariableDeclaration[33244-33263]"
  }, {
    "left" : "String pluralText",
    "right" : "String pluralText",
    "info" : "SingleVariableDeclaration[33265-33282]:SingleVariableDeclaration[33265-33282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33284-33375]:Block[33284-33375]"
  }, {
    "left" : "iSingularText = singularText;",
    "right" : "iSingularText = singularText;",
    "info" : "ExpressionStatement[33298-33327]:ExpressionStatement[33298-33327]"
  }, {
    "left" : "iPluralText = pluralText;",
    "right" : "iPluralText = pluralText;",
    "info" : "ExpressionStatement[33340-33365]:ExpressionStatement[33340-33365]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33385-33391]:Modifier[33385-33391]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[33392-33395]:PrimitiveType[33392-33395]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[33396-33418]:SimpleName[33396-33418]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[33419-33428]:SingleVariableDeclaration[33419-33428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33430-33513]:Block[33430-33513]"
  }, {
    "left" : "return (value == 1 ? iSingularText : iPluralText).length();",
    "right" : "return (value == 1 ? iSingularText : iPluralText).length();",
    "info" : "ReturnStatement[33444-33503]:ReturnStatement[33444-33503]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33523-33529]:Modifier[33523-33529]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[33530-33534]:PrimitiveType[33530-33534]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[33535-33542]:SimpleName[33535-33542]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[33543-33559]:SingleVariableDeclaration[33543-33559]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[33561-33570]:SingleVariableDeclaration[33561-33570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33572-33649]:Block[33572-33649]"
  }, {
    "left" : "buf.append(value == 1 ? iSingularText : iPluralText);",
    "right" : "buf.append(value == 1 ? iSingularText : iPluralText);",
    "info" : "ExpressionStatement[33586-33639]:ExpressionStatement[33586-33639]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33659-33665]:Modifier[33659-33665]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[33666-33670]:PrimitiveType[33666-33670]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[33671-33678]:SimpleName[33671-33678]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[33679-33689]:SingleVariableDeclaration[33679-33689]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[33691-33700]:SingleVariableDeclaration[33691-33700]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[33709-33720]:SimpleType[33709-33720]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33721-33797]:Block[33721-33797]"
  }, {
    "left" : "out.write(value == 1 ? iSingularText : iPluralText);",
    "right" : "out.write(value == 1 ? iSingularText : iPluralText);",
    "info" : "ExpressionStatement[33735-33787]:ExpressionStatement[33735-33787]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33807-33813]:Modifier[33807-33813]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[33814-33817]:PrimitiveType[33814-33817]"
  }, {
    "left" : "parse",
    "right" : "parse",
    "info" : "SimpleName[33818-33823]:SimpleName[33818-33823]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[33824-33840]:SingleVariableDeclaration[33824-33840]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[33842-33854]:SingleVariableDeclaration[33842-33854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33856-34538]:Block[33856-34538]"
  }, {
    "left" : "String text1 = iPluralText;",
    "right" : "String text1 = iPluralText;",
    "info" : "VariableDeclarationStatement[33870-33897]:VariableDeclarationStatement[33870-33897]"
  }, {
    "left" : "String text2 = iSingularText;",
    "right" : "String text2 = iSingularText;",
    "info" : "VariableDeclarationStatement[33910-33939]:VariableDeclarationStatement[33910-33939]"
  }, {
    "left" : "if (text1.length() < text2.length())",
    "right" : "if (text1.length() < text2.length())",
    "info" : "IfStatement[33954-34164]:IfStatement[33954-34164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33991-34164]:Block[33991-34164]"
  }, {
    "left" : "String temp = text1;",
    "right" : "String temp = text1;",
    "info" : "VariableDeclarationStatement[34069-34089]:VariableDeclarationStatement[34069-34089]"
  }, {
    "left" : "text1 = text2;",
    "right" : "text1 = text2;",
    "info" : "ExpressionStatement[34106-34120]:ExpressionStatement[34106-34120]"
  }, {
    "left" : "text2 = temp;",
    "right" : "text2 = temp;",
    "info" : "ExpressionStatement[34137-34150]:ExpressionStatement[34137-34150]"
  }, {
    "left" : "if (periodStr.regionMatches\n                (true, position, text1, 0, text1.length()))",
    "right" : "if (periodStr.regionMatches\n                (true, position, text1, 0, text1.length()))",
    "info" : "IfStatement[34178-34331]:IfStatement[34178-34331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34266-34331]:Block[34266-34331]"
  }, {
    "left" : "return position + text1.length();",
    "right" : "return position + text1.length();",
    "info" : "ReturnStatement[34284-34317]:ReturnStatement[34284-34317]"
  }, {
    "left" : "if (periodStr.regionMatches\n                (true, position, text2, 0, text2.length()))",
    "right" : "if (periodStr.regionMatches\n                (true, position, text2, 0, text2.length()))",
    "info" : "IfStatement[34344-34497]:IfStatement[34344-34497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34432-34497]:Block[34432-34497]"
  }, {
    "left" : "return position + text2.length();",
    "right" : "return position + text2.length();",
    "info" : "ReturnStatement[34450-34483]:ReturnStatement[34450-34483]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[34511-34528]:ReturnStatement[34511-34528]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34548-34554]:Modifier[34548-34554]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[34555-34558]:PrimitiveType[34555-34558]"
  }, {
    "left" : "scan",
    "right" : "scan",
    "info" : "SimpleName[34559-34563]:SimpleName[34559-34563]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[34564-34580]:SingleVariableDeclaration[34564-34580]"
  }, {
    "left" : "final int position",
    "right" : "final int position",
    "info" : "SingleVariableDeclaration[34582-34600]:SingleVariableDeclaration[34582-34600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34602-35437]:Block[34602-35437]"
  }, {
    "left" : "String text1 = iPluralText;",
    "right" : "String text1 = iPluralText;",
    "info" : "VariableDeclarationStatement[34616-34643]:VariableDeclarationStatement[34616-34643]"
  }, {
    "left" : "String text2 = iSingularText;",
    "right" : "String text2 = iSingularText;",
    "info" : "VariableDeclarationStatement[34656-34685]:VariableDeclarationStatement[34656-34685]"
  }, {
    "left" : "if (text1.length() < text2.length())",
    "right" : "if (text1.length() < text2.length())",
    "info" : "IfStatement[34700-34910]:IfStatement[34700-34910]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34737-34910]:Block[34737-34910]"
  }, {
    "left" : "String temp = text1;",
    "right" : "String temp = text1;",
    "info" : "VariableDeclarationStatement[34815-34835]:VariableDeclarationStatement[34815-34835]"
  }, {
    "left" : "text1 = text2;",
    "right" : "text1 = text2;",
    "info" : "ExpressionStatement[34852-34866]:ExpressionStatement[34852-34866]"
  }, {
    "left" : "text2 = temp;",
    "right" : "text2 = temp;",
    "info" : "ExpressionStatement[34883-34896]:ExpressionStatement[34883-34896]"
  }, {
    "left" : "int textLength1 = text1.length();",
    "right" : "int textLength1 = text1.length();",
    "info" : "VariableDeclarationStatement[34924-34957]:VariableDeclarationStatement[34924-34957]"
  }, {
    "left" : "int textLength2 = text2.length();",
    "right" : "int textLength2 = text2.length();",
    "info" : "VariableDeclarationStatement[34970-35003]:VariableDeclarationStatement[34970-35003]"
  }, {
    "left" : "int sourceLength = periodStr.length();",
    "right" : "int sourceLength = periodStr.length();",
    "info" : "VariableDeclarationStatement[35017-35055]:VariableDeclarationStatement[35017-35055]"
  }, {
    "left" : "for (int pos = position; pos < sourceLength; pos++)",
    "right" : "for (int pos = position; pos < sourceLength; pos++)",
    "info" : "ForStatement[35068-35397]:ForStatement[35068-35397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35120-35397]:Block[35120-35397]"
  }, {
    "left" : "if (periodStr.regionMatches(true, pos, text1, 0, textLength1))",
    "right" : "if (periodStr.regionMatches(true, pos, text1, 0, textLength1))",
    "info" : "IfStatement[35138-35252]:IfStatement[35138-35252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35201-35252]:Block[35201-35252]"
  }, {
    "left" : "return pos;",
    "right" : "return pos;",
    "info" : "ReturnStatement[35223-35234]:ReturnStatement[35223-35234]"
  }, {
    "left" : "if (periodStr.regionMatches(true, pos, text2, 0, textLength2))",
    "right" : "if (periodStr.regionMatches(true, pos, text2, 0, textLength2))",
    "info" : "IfStatement[35269-35383]:IfStatement[35269-35383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35332-35383]:Block[35332-35383]"
  }, {
    "left" : "return pos;",
    "right" : "return pos;",
    "info" : "ReturnStatement[35354-35365]:ReturnStatement[35354-35365]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[35410-35427]:ReturnStatement[35410-35427]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[35619-35625]:Modifier[35619-35625]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[35626-35631]:TYPE_DECLARATION_KIND[35626-35631]"
  }, {
    "left" : "CompositeAffix",
    "right" : "CompositeAffix",
    "info" : "SimpleName[35779-35793]:SimpleName[35779-35793]"
  }, {
    "left" : "PeriodFieldAffix left",
    "right" : "PeriodFieldAffix left",
    "info" : "SingleVariableDeclaration[35794-35815]:SingleVariableDeclaration[35794-35815]"
  }, {
    "left" : "PeriodFieldAffix right",
    "right" : "PeriodFieldAffix right",
    "info" : "SingleVariableDeclaration[35817-35839]:SingleVariableDeclaration[35817-35839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35841-35906]:Block[35841-35906]"
  }, {
    "left" : "iLeft = left;",
    "right" : "iLeft = left;",
    "info" : "ExpressionStatement[35855-35868]:ExpressionStatement[35855-35868]"
  }, {
    "left" : "iRight = right;",
    "right" : "iRight = right;",
    "info" : "ExpressionStatement[35881-35896]:ExpressionStatement[35881-35896]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35916-35922]:Modifier[35916-35922]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[35923-35926]:PrimitiveType[35923-35926]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[35927-35949]:SimpleName[35927-35949]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[35950-35959]:SingleVariableDeclaration[35950-35959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35961-36083]:Block[35961-36083]"
  }, {
    "left" : "return iLeft.calculatePrintedLength(value)\n                + iRight.calculatePrintedLength(value);",
    "right" : "return iLeft.calculatePrintedLength(value)\n                + iRight.calculatePrintedLength(value);",
    "info" : "ReturnStatement[35975-36073]:ReturnStatement[35975-36073]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36093-36099]:Modifier[36093-36099]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[36100-36104]:PrimitiveType[36100-36104]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[36105-36112]:SimpleName[36105-36112]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[36113-36129]:SingleVariableDeclaration[36113-36129]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[36131-36140]:SingleVariableDeclaration[36131-36140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36142-36232]:Block[36142-36232]"
  }, {
    "left" : "iLeft.printTo(buf, value);",
    "right" : "iLeft.printTo(buf, value);",
    "info" : "ExpressionStatement[36156-36182]:ExpressionStatement[36156-36182]"
  }, {
    "left" : "iRight.printTo(buf, value);",
    "right" : "iRight.printTo(buf, value);",
    "info" : "ExpressionStatement[36195-36222]:ExpressionStatement[36195-36222]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36242-36248]:Modifier[36242-36248]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[36249-36253]:PrimitiveType[36249-36253]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[36254-36261]:SimpleName[36254-36261]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[36262-36272]:SingleVariableDeclaration[36262-36272]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[36274-36283]:SingleVariableDeclaration[36274-36283]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[36292-36303]:SimpleType[36292-36303]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36304-36394]:Block[36304-36394]"
  }, {
    "left" : "iLeft.printTo(out, value);",
    "right" : "iLeft.printTo(out, value);",
    "info" : "ExpressionStatement[36318-36344]:ExpressionStatement[36318-36344]"
  }, {
    "left" : "iRight.printTo(out, value);",
    "right" : "iRight.printTo(out, value);",
    "info" : "ExpressionStatement[36357-36384]:ExpressionStatement[36357-36384]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36404-36410]:Modifier[36404-36410]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[36411-36414]:PrimitiveType[36411-36414]"
  }, {
    "left" : "parse",
    "right" : "parse",
    "info" : "SimpleName[36415-36420]:SimpleName[36415-36420]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[36421-36437]:SingleVariableDeclaration[36421-36437]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[36439-36451]:SingleVariableDeclaration[36439-36451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36453-36659]:Block[36453-36659]"
  }, {
    "left" : "position = iLeft.parse(periodStr, position);",
    "right" : "position = iLeft.parse(periodStr, position);",
    "info" : "ExpressionStatement[36467-36511]:ExpressionStatement[36467-36511]"
  }, {
    "left" : "if (position >= 0)",
    "right" : "if (position >= 0)",
    "info" : "IfStatement[36524-36620]:IfStatement[36524-36620]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36543-36620]:Block[36543-36620]"
  }, {
    "left" : "position = iRight.parse(periodStr, position);",
    "right" : "position = iRight.parse(periodStr, position);",
    "info" : "ExpressionStatement[36561-36606]:ExpressionStatement[36561-36606]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[36633-36649]:ReturnStatement[36633-36649]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36669-36675]:Modifier[36669-36675]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[36676-36679]:PrimitiveType[36676-36679]"
  }, {
    "left" : "scan",
    "right" : "scan",
    "info" : "SimpleName[36680-36684]:SimpleName[36680-36684]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[36685-36701]:SingleVariableDeclaration[36685-36701]"
  }, {
    "left" : "final int position",
    "right" : "final int position",
    "info" : "SingleVariableDeclaration[36703-36721]:SingleVariableDeclaration[36703-36721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36723-36913]:Block[36723-36913]"
  }, {
    "left" : "int pos = iLeft.scan(periodStr, position);",
    "right" : "int pos = iLeft.scan(periodStr, position);",
    "info" : "VariableDeclarationStatement[36737-36779]:VariableDeclarationStatement[36737-36779]"
  }, {
    "left" : "if (pos >= 0)",
    "right" : "if (pos >= 0)",
    "info" : "IfStatement[36792-36873]:IfStatement[36792-36873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36806-36873]:Block[36806-36873]"
  }, {
    "left" : "return iRight.scan(periodStr, pos);",
    "right" : "return iRight.scan(periodStr, pos);",
    "info" : "ReturnStatement[36824-36859]:ReturnStatement[36824-36859]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[36886-36903]:ReturnStatement[36886-36903]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37096-37102]:Modifier[37096-37102]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[37103-37108]:TYPE_DECLARATION_KIND[37103-37108]"
  }, {
    "left" : "FieldFormatter",
    "right" : "FieldFormatter",
    "info" : "SimpleName[37802-37816]:SimpleName[37802-37816]"
  }, {
    "left" : "int minPrintedDigits",
    "right" : "int minPrintedDigits",
    "info" : "SingleVariableDeclaration[37817-37837]:SingleVariableDeclaration[37817-37837]"
  }, {
    "left" : "int printZeroSetting",
    "right" : "int printZeroSetting",
    "info" : "SingleVariableDeclaration[37839-37859]:SingleVariableDeclaration[37839-37859]"
  }, {
    "left" : "int maxParsedDigits",
    "right" : "int maxParsedDigits",
    "info" : "SingleVariableDeclaration[37884-37903]:SingleVariableDeclaration[37884-37903]"
  }, {
    "left" : "boolean rejectSignedValues",
    "right" : "boolean rejectSignedValues",
    "info" : "SingleVariableDeclaration[37905-37931]:SingleVariableDeclaration[37905-37931]"
  }, {
    "left" : "int fieldType",
    "right" : "int fieldType",
    "info" : "SingleVariableDeclaration[37956-37969]:SingleVariableDeclaration[37956-37969]"
  }, {
    "left" : "FieldFormatter[] fieldFormatters",
    "right" : "FieldFormatter[] fieldFormatters",
    "info" : "SingleVariableDeclaration[37971-38003]:SingleVariableDeclaration[37971-38003]"
  }, {
    "left" : "PeriodFieldAffix prefix",
    "right" : "PeriodFieldAffix prefix",
    "info" : "SingleVariableDeclaration[38028-38051]:SingleVariableDeclaration[38028-38051]"
  }, {
    "left" : "PeriodFieldAffix suffix",
    "right" : "PeriodFieldAffix suffix",
    "info" : "SingleVariableDeclaration[38053-38076]:SingleVariableDeclaration[38053-38076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38078-38435]:Block[38078-38435]"
  }, {
    "left" : "iMinPrintedDigits = minPrintedDigits;",
    "right" : "iMinPrintedDigits = minPrintedDigits;",
    "info" : "ExpressionStatement[38092-38129]:ExpressionStatement[38092-38129]"
  }, {
    "left" : "iPrintZeroSetting = printZeroSetting;",
    "right" : "iPrintZeroSetting = printZeroSetting;",
    "info" : "ExpressionStatement[38142-38179]:ExpressionStatement[38142-38179]"
  }, {
    "left" : "iMaxParsedDigits = maxParsedDigits;",
    "right" : "iMaxParsedDigits = maxParsedDigits;",
    "info" : "ExpressionStatement[38192-38227]:ExpressionStatement[38192-38227]"
  }, {
    "left" : "iRejectSignedValues = rejectSignedValues;",
    "right" : "iRejectSignedValues = rejectSignedValues;",
    "info" : "ExpressionStatement[38240-38281]:ExpressionStatement[38240-38281]"
  }, {
    "left" : "iFieldType = fieldType;",
    "right" : "iFieldType = fieldType;",
    "info" : "ExpressionStatement[38294-38317]:ExpressionStatement[38294-38317]"
  }, {
    "left" : "iFieldFormatters = fieldFormatters;",
    "right" : "iFieldFormatters = fieldFormatters;",
    "info" : "ExpressionStatement[38330-38365]:ExpressionStatement[38330-38365]"
  }, {
    "left" : "iPrefix = prefix;",
    "right" : "iPrefix = prefix;",
    "info" : "ExpressionStatement[38378-38395]:ExpressionStatement[38378-38395]"
  }, {
    "left" : "iSuffix = suffix;",
    "right" : "iSuffix = suffix;",
    "info" : "ExpressionStatement[38408-38425]:ExpressionStatement[38408-38425]"
  }, {
    "left" : "FieldFormatter",
    "right" : "FieldFormatter",
    "info" : "SimpleName[38445-38459]:SimpleName[38445-38459]"
  }, {
    "left" : "FieldFormatter field",
    "right" : "FieldFormatter field",
    "info" : "SingleVariableDeclaration[38460-38480]:SingleVariableDeclaration[38460-38480]"
  }, {
    "left" : "PeriodFieldAffix suffix",
    "right" : "PeriodFieldAffix suffix",
    "info" : "SingleVariableDeclaration[38482-38505]:SingleVariableDeclaration[38482-38505]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38507-39036]:Block[38507-39036]"
  }, {
    "left" : "iMinPrintedDigits = field.iMinPrintedDigits;",
    "right" : "iMinPrintedDigits = field.iMinPrintedDigits;",
    "info" : "ExpressionStatement[38521-38565]:ExpressionStatement[38521-38565]"
  }, {
    "left" : "iPrintZeroSetting = field.iPrintZeroSetting;",
    "right" : "iPrintZeroSetting = field.iPrintZeroSetting;",
    "info" : "ExpressionStatement[38578-38622]:ExpressionStatement[38578-38622]"
  }, {
    "left" : "iMaxParsedDigits = field.iMaxParsedDigits;",
    "right" : "iMaxParsedDigits = field.iMaxParsedDigits;",
    "info" : "ExpressionStatement[38635-38677]:ExpressionStatement[38635-38677]"
  }, {
    "left" : "iRejectSignedValues = field.iRejectSignedValues;",
    "right" : "iRejectSignedValues = field.iRejectSignedValues;",
    "info" : "ExpressionStatement[38690-38738]:ExpressionStatement[38690-38738]"
  }, {
    "left" : "iFieldType = field.iFieldType;",
    "right" : "iFieldType = field.iFieldType;",
    "info" : "ExpressionStatement[38751-38781]:ExpressionStatement[38751-38781]"
  }, {
    "left" : "iFieldFormatters = field.iFieldFormatters;",
    "right" : "iFieldFormatters = field.iFieldFormatters;",
    "info" : "ExpressionStatement[38794-38836]:ExpressionStatement[38794-38836]"
  }, {
    "left" : "iPrefix = field.iPrefix;",
    "right" : "iPrefix = field.iPrefix;",
    "info" : "ExpressionStatement[38849-38873]:ExpressionStatement[38849-38873]"
  }, {
    "left" : "if (field.iSuffix != null)",
    "right" : "if (field.iSuffix != null)",
    "info" : "IfStatement[38886-38996]:IfStatement[38886-38996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38913-38996]:Block[38913-38996]"
  }, {
    "left" : "suffix = new CompositeAffix(field.iSuffix, suffix);",
    "right" : "suffix = new CompositeAffix(field.iSuffix, suffix);",
    "info" : "ExpressionStatement[38931-38982]:ExpressionStatement[38931-38982]"
  }, {
    "left" : "iSuffix = suffix;",
    "right" : "iSuffix = suffix;",
    "info" : "ExpressionStatement[39009-39026]:ExpressionStatement[39009-39026]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39046-39052]:Modifier[39046-39052]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[39053-39056]:PrimitiveType[39053-39056]"
  }, {
    "left" : "countFieldsToPrint",
    "right" : "countFieldsToPrint",
    "info" : "SimpleName[39057-39075]:SimpleName[39057-39075]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[39076-39097]:SingleVariableDeclaration[39076-39097]"
  }, {
    "left" : "int stopAt",
    "right" : "int stopAt",
    "info" : "SingleVariableDeclaration[39099-39109]:SingleVariableDeclaration[39099-39109]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[39111-39124]:SingleVariableDeclaration[39111-39124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39126-39371]:Block[39126-39371]"
  }, {
    "left" : "if (stopAt <= 0)",
    "right" : "if (stopAt <= 0)",
    "info" : "IfStatement[39140-39198]:IfStatement[39140-39198]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39157-39198]:Block[39157-39198]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[39175-39184]:ReturnStatement[39175-39184]"
  }, {
    "left" : "if (iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE)",
    "right" : "if (iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE)",
    "info" : "IfStatement[39211-39339]:IfStatement[39211-39339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39298-39339]:Block[39298-39339]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[39316-39325]:ReturnStatement[39316-39325]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[39352-39361]:ReturnStatement[39352-39361]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39381-39387]:Modifier[39381-39387]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[39388-39391]:PrimitiveType[39388-39391]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[39392-39414]:SimpleName[39392-39414]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[39415-39436]:SingleVariableDeclaration[39415-39436]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[39438-39451]:SingleVariableDeclaration[39438-39451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39453-40735]:Block[39453-40772]"
  }, {
    "left" : "long valueLong = getFieldValue(period);",
    "right" : "long valueLong = getFieldValue(period);",
    "info" : "VariableDeclarationStatement[39467-39506]:VariableDeclarationStatement[39467-39506]"
  }, {
    "left" : "if (valueLong == Long.MAX_VALUE)",
    "right" : "if (valueLong == Long.MAX_VALUE)",
    "info" : "IfStatement[39519-39593]:IfStatement[39519-39593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39552-39593]:Block[39552-39593]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[39570-39579]:ReturnStatement[39570-39579]"
  }, {
    "left" : "int sum = Math.max(FormatUtils.calculateDigitCount(valueLong), iMinPrintedDigits);",
    "right" : "int sum = Math.max(FormatUtils.calculateDigitCount(valueLong), iMinPrintedDigits);",
    "info" : "VariableDeclarationStatement[39607-39689]:VariableDeclarationStatement[39607-39689]"
  }, {
    "left" : "if (iFieldType >= SECONDS_MILLIS)",
    "right" : "if (iFieldType >= SECONDS_MILLIS)",
    "info" : "IfStatement[39702-40436]:IfStatement[39702-40473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39736-40436]:Block[39736-40473]"
  }, {
    "left" : "sum = Math.max(sum, 4);",
    "right" : "sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4));",
    "info" : "ExpressionStatement[39909-39932]:ExpressionStatement[39909-39969]"
  }, {
    "left" : "Math.max(sum, 4)",
    "right" : "Math.max(sum, 4)",
    "info" : "MethodInvocation[39915-39931]:MethodInvocation[39951-39967]"
  }, {
    "left" : "sum++;",
    "right" : "sum++;",
    "info" : "ExpressionStatement[39999-40005]:ExpressionStatement[40036-40042]"
  }, {
    "left" : "if (iFieldType == SECONDS_OPTIONAL_MILLIS &&\n                        (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)",
    "right" : "if (iFieldType == SECONDS_OPTIONAL_MILLIS &&\n                        (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)",
    "info" : "IfStatement[40022-40247]:IfStatement[40059-40284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40157-40247]:Block[40194-40284]"
  }, {
    "left" : "sum -= 4;",
    "right" : "sum -= 4;",
    "info" : "ExpressionStatement[40179-40188]:ExpressionStatement[40216-40225]"
  }, {
    "left" : "valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND;",
    "right" : "valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND;",
    "info" : "ExpressionStatement[40362-40422]:ExpressionStatement[40399-40459]"
  }, {
    "left" : "int value = (int) valueLong;",
    "right" : "int value = (int) valueLong;",
    "info" : "VariableDeclarationStatement[40449-40477]:VariableDeclarationStatement[40486-40514]"
  }, {
    "left" : "if (iPrefix != null)",
    "right" : "if (iPrefix != null)",
    "info" : "IfStatement[40491-40589]:IfStatement[40528-40626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40512-40589]:Block[40549-40626]"
  }, {
    "left" : "sum += iPrefix.calculatePrintedLength(value);",
    "right" : "sum += iPrefix.calculatePrintedLength(value);",
    "info" : "ExpressionStatement[40530-40575]:ExpressionStatement[40567-40612]"
  }, {
    "left" : "if (iSuffix != null)",
    "right" : "if (iSuffix != null)",
    "info" : "IfStatement[40602-40700]:IfStatement[40639-40737]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40623-40700]:Block[40660-40737]"
  }, {
    "left" : "sum += iSuffix.calculatePrintedLength(value);",
    "right" : "sum += iSuffix.calculatePrintedLength(value);",
    "info" : "ExpressionStatement[40641-40686]:ExpressionStatement[40678-40723]"
  }, {
    "left" : "return sum;",
    "right" : "return sum;",
    "info" : "ReturnStatement[40714-40725]:ReturnStatement[40751-40762]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40753-40759]:Modifier[40790-40796]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40760-40764]:PrimitiveType[40797-40801]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[40765-40772]:SimpleName[40802-40809]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[40773-40789]:SingleVariableDeclaration[40810-40826]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[40791-40812]:SingleVariableDeclaration[40828-40849]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[40814-40827]:SingleVariableDeclaration[40851-40864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40829-41937]:Block[40866-42177]"
  }, {
    "left" : "long valueLong = getFieldValue(period);",
    "right" : "long valueLong = getFieldValue(period);",
    "info" : "VariableDeclarationStatement[40843-40882]:VariableDeclarationStatement[40880-40919]"
  }, {
    "left" : "if (valueLong == Long.MAX_VALUE)",
    "right" : "if (valueLong == Long.MAX_VALUE)",
    "info" : "IfStatement[40895-40967]:IfStatement[40932-41004]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40928-40967]:Block[40965-41004]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[40946-40953]:ReturnStatement[40983-40990]"
  }, {
    "left" : "int value = (int) valueLong;",
    "right" : "int value = (int) valueLong;",
    "info" : "VariableDeclarationStatement[40980-41008]:VariableDeclarationStatement[41017-41045]"
  }, {
    "left" : "if (iFieldType >= SECONDS_MILLIS)",
    "right" : "if (iFieldType >= SECONDS_MILLIS)",
    "info" : "IfStatement[41021-41151]:IfStatement[41058-41188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41055-41151]:Block[41092-41188]"
  }, {
    "left" : "value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);",
    "right" : "value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);",
    "info" : "ExpressionStatement[41073-41137]:ExpressionStatement[41110-41174]"
  }, {
    "left" : "if (iPrefix != null)",
    "right" : "if (iPrefix != null)",
    "info" : "IfStatement[41165-41246]:IfStatement[41202-41283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41186-41246]:Block[41223-41283]"
  }, {
    "left" : "iPrefix.printTo(buf, value);",
    "right" : "iPrefix.printTo(buf, value);",
    "info" : "ExpressionStatement[41204-41232]:ExpressionStatement[41241-41269]"
  }, {
    "left" : "int minDigits = iMinPrintedDigits;",
    "right" : "int minDigits = iMinPrintedDigits;",
    "info" : "VariableDeclarationStatement[41259-41293]:VariableDeclarationStatement[41335-41369]"
  }, {
    "left" : "if (minDigits <= 1)",
    "right" : "if (minDigits <= 1)",
    "info" : "IfStatement[41306-41497]:IfStatement[41382-41573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41326-41404]:Block[41402-41480]"
  }, {
    "left" : "FormatUtils.appendUnpaddedInteger(buf, value);",
    "right" : "FormatUtils.appendUnpaddedInteger(buf, value);",
    "info" : "ExpressionStatement[41344-41390]:ExpressionStatement[41420-41466]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41410-41497]:Block[41486-41573]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, value, minDigits);",
    "right" : "FormatUtils.appendPaddedInteger(buf, value, minDigits);",
    "info" : "ExpressionStatement[41428-41483]:ExpressionStatement[41504-41559]"
  }, {
    "left" : "if (iFieldType >= SECONDS_MILLIS)",
    "right" : "if (iFieldType >= SECONDS_MILLIS)",
    "info" : "IfStatement[41510-41833]:IfStatement[41586-42073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41544-41833]:Block[41620-42073]"
  }, {
    "left" : "int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);",
    "right" : "int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);",
    "info" : "VariableDeclarationStatement[41562-41637]:VariableDeclarationStatement[41638-41713]"
  }, {
    "left" : "if (iFieldType == SECONDS_MILLIS || dp > 0)",
    "right" : "if (iFieldType == SECONDS_MILLIS || dp > 0)",
    "info" : "IfStatement[41654-41819]:IfStatement[41730-42059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41698-41819]:Block[41774-42059]"
  }, {
    "left" : "buf.append('.');",
    "right" : "buf.append('.');",
    "info" : "ExpressionStatement[41720-41736]:ExpressionStatement[41960-41976]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, dp, 3);",
    "right" : "FormatUtils.appendPaddedInteger(buf, dp, 3);",
    "info" : "ExpressionStatement[41757-41801]:ExpressionStatement[41997-42041]"
  }, {
    "left" : "if (iSuffix != null)",
    "right" : "if (iSuffix != null)",
    "info" : "IfStatement[41846-41927]:IfStatement[42086-42167]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41867-41927]:Block[42107-42167]"
  }, {
    "left" : "iSuffix.printTo(buf, value);",
    "right" : "iSuffix.printTo(buf, value);",
    "info" : "ExpressionStatement[41885-41913]:ExpressionStatement[42125-42153]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41947-41953]:Modifier[42187-42193]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[41954-41958]:PrimitiveType[42194-42198]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[41959-41966]:SimpleName[42199-42206]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[41967-41977]:SingleVariableDeclaration[42207-42217]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[41979-42000]:SingleVariableDeclaration[42219-42240]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[42002-42015]:SingleVariableDeclaration[42242-42255]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[42024-42035]:SimpleType[42264-42275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42036-43140]:Block[42276-43380]"
  }, {
    "left" : "long valueLong = getFieldValue(period);",
    "right" : "long valueLong = getFieldValue(period);",
    "info" : "VariableDeclarationStatement[42050-42089]:VariableDeclarationStatement[42290-42329]"
  }, {
    "left" : "if (valueLong == Long.MAX_VALUE)",
    "right" : "if (valueLong == Long.MAX_VALUE)",
    "info" : "IfStatement[42102-42174]:IfStatement[42342-42414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42135-42174]:Block[42375-42414]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[42153-42160]:ReturnStatement[42393-42400]"
  }, {
    "left" : "int value = (int) valueLong;",
    "right" : "int value = (int) valueLong;",
    "info" : "VariableDeclarationStatement[42187-42215]:VariableDeclarationStatement[42427-42455]"
  }, {
    "left" : "if (iFieldType >= SECONDS_MILLIS)",
    "right" : "if (iFieldType >= SECONDS_MILLIS)",
    "info" : "IfStatement[42228-42358]:IfStatement[42468-42598]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42262-42358]:Block[42502-42598]"
  }, {
    "left" : "value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);",
    "right" : "value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);",
    "info" : "ExpressionStatement[42280-42344]:ExpressionStatement[42520-42584]"
  }, {
    "left" : "if (iPrefix != null)",
    "right" : "if (iPrefix != null)",
    "info" : "IfStatement[42372-42453]:IfStatement[42612-42693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42393-42453]:Block[42633-42693]"
  }, {
    "left" : "iPrefix.printTo(out, value);",
    "right" : "iPrefix.printTo(out, value);",
    "info" : "ExpressionStatement[42411-42439]:ExpressionStatement[42651-42679]"
  }, {
    "left" : "int minDigits = iMinPrintedDigits;",
    "right" : "int minDigits = iMinPrintedDigits;",
    "info" : "VariableDeclarationStatement[42466-42500]:VariableDeclarationStatement[42706-42740]"
  }, {
    "left" : "if (minDigits <= 1)",
    "right" : "if (minDigits <= 1)",
    "info" : "IfStatement[42513-42702]:IfStatement[42753-42942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42533-42610]:Block[42773-42850]"
  }, {
    "left" : "FormatUtils.writeUnpaddedInteger(out, value);",
    "right" : "FormatUtils.writeUnpaddedInteger(out, value);",
    "info" : "ExpressionStatement[42551-42596]:ExpressionStatement[42791-42836]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42616-42702]:Block[42856-42942]"
  }, {
    "left" : "FormatUtils.writePaddedInteger(out, value, minDigits);",
    "right" : "FormatUtils.writePaddedInteger(out, value, minDigits);",
    "info" : "ExpressionStatement[42634-42688]:ExpressionStatement[42874-42928]"
  }, {
    "left" : "if (iFieldType >= SECONDS_MILLIS)",
    "right" : "if (iFieldType >= SECONDS_MILLIS)",
    "info" : "IfStatement[42715-43036]:IfStatement[42955-43276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42749-43036]:Block[42989-43276]"
  }, {
    "left" : "int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);",
    "right" : "int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);",
    "info" : "VariableDeclarationStatement[42767-42842]:VariableDeclarationStatement[43007-43082]"
  }, {
    "left" : "if (iFieldType == SECONDS_MILLIS || dp > 0)",
    "right" : "if (iFieldType == SECONDS_MILLIS || dp > 0)",
    "info" : "IfStatement[42859-43022]:IfStatement[43099-43262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42903-43022]:Block[43143-43262]"
  }, {
    "left" : "out.write('.');",
    "right" : "out.write('.');",
    "info" : "ExpressionStatement[42925-42940]:ExpressionStatement[43165-43180]"
  }, {
    "left" : "FormatUtils.writePaddedInteger(out, dp, 3);",
    "right" : "FormatUtils.writePaddedInteger(out, dp, 3);",
    "info" : "ExpressionStatement[42961-43004]:ExpressionStatement[43201-43244]"
  }, {
    "left" : "if (iSuffix != null)",
    "right" : "if (iSuffix != null)",
    "info" : "IfStatement[43049-43130]:IfStatement[43289-43370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43070-43130]:Block[43310-43370]"
  }, {
    "left" : "iSuffix.printTo(out, value);",
    "right" : "iSuffix.printTo(out, value);",
    "info" : "ExpressionStatement[43088-43116]:ExpressionStatement[43328-43356]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43150-43156]:Modifier[43390-43396]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[43157-43160]:PrimitiveType[43397-43400]"
  }, {
    "left" : "parseInto",
    "right" : "parseInto",
    "info" : "SimpleName[43161-43170]:SimpleName[43401-43410]"
  }, {
    "left" : "ReadWritablePeriod period",
    "right" : "ReadWritablePeriod period",
    "info" : "SingleVariableDeclaration[43188-43213]:SingleVariableDeclaration[43428-43453]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[43215-43226]:SingleVariableDeclaration[43455-43466]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[43245-43257]:SingleVariableDeclaration[43485-43497]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[43259-43272]:SingleVariableDeclaration[43499-43512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43274-49548]:Block[43514-49788]"
  }, {
    "left" : "boolean mustParse = (iPrintZeroSetting == PRINT_ZERO_ALWAYS);",
    "right" : "boolean mustParse = (iPrintZeroSetting == PRINT_ZERO_ALWAYS);",
    "info" : "VariableDeclarationStatement[43289-43350]:VariableDeclarationStatement[43529-43590]"
  }, {
    "left" : "if (position >= text.length())",
    "right" : "if (position >= text.length())",
    "info" : "IfStatement[43394-43497]:IfStatement[43634-43737]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43425-43497]:Block[43665-43737]"
  }, {
    "left" : "return mustParse ? ~position : position;",
    "right" : "return mustParse ? ~position : position;",
    "info" : "ReturnStatement[43443-43483]:ReturnStatement[43683-43723]"
  }, {
    "left" : "if (iPrefix != null)",
    "right" : "if (iPrefix != null)",
    "info" : "IfStatement[43511-44200]:IfStatement[43751-44440]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43532-44200]:Block[43772-44440]"
  }, {
    "left" : "position = iPrefix.parse(text, position);",
    "right" : "position = iPrefix.parse(text, position);",
    "info" : "ExpressionStatement[43550-43591]:ExpressionStatement[43790-43831]"
  }, {
    "left" : "if (position >= 0)",
    "right" : "if (position >= 0)",
    "info" : "IfStatement[43608-44186]:IfStatement[43848-44426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43627-43755]:Block[43867-43995]"
  }, {
    "left" : "mustParse = true;",
    "right" : "mustParse = true;",
    "info" : "ExpressionStatement[43720-43737]:ExpressionStatement[43960-43977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43761-44186]:Block[44001-44426]"
  }, {
    "left" : "if (!mustParse)",
    "right" : "if (!mustParse)",
    "info" : "IfStatement[43833-44131]:IfStatement[44073-44371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43849-44131]:Block[44089-44371]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[44092-44109]:ReturnStatement[44332-44349]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[44152-44168]:ReturnStatement[44392-44408]"
  }, {
    "left" : "int suffixPos = -1;",
    "right" : "int suffixPos = -1;",
    "info" : "VariableDeclarationStatement[44214-44233]:VariableDeclarationStatement[44454-44473]"
  }, {
    "left" : "if (iSuffix != null && !mustParse)",
    "right" : "if (iSuffix != null && !mustParse)",
    "info" : "IfStatement[44246-45055]:IfStatement[44486-45295]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44281-45055]:Block[44521-45295]"
  }, {
    "left" : "suffixPos = iSuffix.scan(text, position);",
    "right" : "suffixPos = iSuffix.scan(text, position);",
    "info" : "ExpressionStatement[44406-44447]:ExpressionStatement[44646-44687]"
  }, {
    "left" : "if (suffixPos >= 0)",
    "right" : "if (suffixPos >= 0)",
    "info" : "IfStatement[44464-45041]:IfStatement[44704-45281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44484-44608]:Block[44724-44848]"
  }, {
    "left" : "mustParse = true;",
    "right" : "mustParse = true;",
    "info" : "ExpressionStatement[44573-44590]:ExpressionStatement[44813-44830]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44614-45041]:Block[44854-45281]"
  }, {
    "left" : "if (!mustParse)",
    "right" : "if (!mustParse)",
    "info" : "IfStatement[44686-44985]:IfStatement[44926-45225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44702-44985]:Block[44942-45225]"
  }, {
    "left" : "return ~suffixPos;",
    "right" : "return ~suffixPos;",
    "info" : "ReturnStatement[44945-44963]:ReturnStatement[45185-45203]"
  }, {
    "left" : "return suffixPos;",
    "right" : "return suffixPos;",
    "info" : "ReturnStatement[45006-45023]:ReturnStatement[45246-45263]"
  }, {
    "left" : "if (!mustParse && !isSupported(period.getPeriodType(), iFieldType))",
    "right" : "if (!mustParse && !isSupported(period.getPeriodType(), iFieldType))",
    "info" : "IfStatement[45069-45338]:IfStatement[45309-45578]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45137-45338]:Block[45377-45578]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[45308-45324]:ReturnStatement[45548-45564]"
  }, {
    "left" : "int limit;",
    "right" : "int limit;",
    "info" : "VariableDeclarationStatement[45352-45362]:VariableDeclarationStatement[45592-45602]"
  }, {
    "left" : "if (suffixPos > 0)",
    "right" : "if (suffixPos > 0)",
    "info" : "IfStatement[45375-45582]:IfStatement[45615-45822]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45394-45483]:Block[45634-45723]"
  }, {
    "left" : "limit = Math.min(iMaxParsedDigits, suffixPos - position);",
    "right" : "limit = Math.min(iMaxParsedDigits, suffixPos - position);",
    "info" : "ExpressionStatement[45412-45469]:ExpressionStatement[45652-45709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45489-45582]:Block[45729-45822]"
  }, {
    "left" : "limit = Math.min(iMaxParsedDigits, text.length() - position);",
    "right" : "limit = Math.min(iMaxParsedDigits, text.length() - position);",
    "info" : "ExpressionStatement[45507-45568]:ExpressionStatement[45747-45808]"
  }, {
    "left" : "int length = 0;",
    "right" : "int length = 0;",
    "info" : "VariableDeclarationStatement[45633-45648]:VariableDeclarationStatement[45873-45888]"
  }, {
    "left" : "int fractPos = -1;",
    "right" : "int fractPos = -1;",
    "info" : "VariableDeclarationStatement[45661-45679]:VariableDeclarationStatement[45901-45919]"
  }, {
    "left" : "boolean hasDigits = false;",
    "right" : "boolean hasDigits = false;",
    "info" : "VariableDeclarationStatement[45692-45718]:VariableDeclarationStatement[45932-45958]"
  }, {
    "left" : "while (length < limit)",
    "right" : "while (length < limit)",
    "info" : "WhileStatement[45731-47461]:WhileStatement[45971-47701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45754-47461]:Block[45994-47701]"
  }, {
    "left" : "char c = text.charAt(position + length);",
    "right" : "char c = text.charAt(position + length);",
    "info" : "VariableDeclarationStatement[45772-45812]:VariableDeclarationStatement[46012-46052]"
  }, {
    "left" : "if (length == 0 && (c == '-' || c == '+') && !iRejectSignedValues)",
    "right" : "if (length == 0 && (c == '-' || c == '+') && !iRejectSignedValues)",
    "info" : "IfStatement[45861-46659]:IfStatement[46101-46899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45928-46659]:Block[46168-46899]"
  }, {
    "left" : "boolean negative = c == '-';",
    "right" : "boolean negative = c == '-';",
    "info" : "VariableDeclarationStatement[45950-45978]:VariableDeclarationStatement[46190-46218]"
  }, {
    "left" : "if (length + 1 >= limit || \n                        (c = text.charAt(position + length + 1)) < '0' || c > '9')",
    "right" : "if (length + 1 >= limit || \n                        (c = text.charAt(position + length + 1)) < '0' || c > '9')",
    "info" : "IfStatement[46055-46240]:IfStatement[46295-46480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46186-46240]:Block[46426-46480]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[46212-46218]:BreakStatement[46452-46458]"
  }, {
    "left" : "if (negative)",
    "right" : "if (negative)",
    "info" : "IfStatement[46262-46463]:IfStatement[46502-46703]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46276-46333]:Block[46516-46573]"
  }, {
    "left" : "length++;",
    "right" : "length++;",
    "info" : "ExpressionStatement[46302-46311]:ExpressionStatement[46542-46551]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46339-46463]:Block[46579-46703]"
  }, {
    "left" : "position++;",
    "right" : "position++;",
    "info" : "ExpressionStatement[46430-46441]:ExpressionStatement[46670-46681]"
  }, {
    "left" : "limit = Math.min(limit + 1, text.length() - position);",
    "right" : "limit = Math.min(limit + 1, text.length() - position);",
    "info" : "ExpressionStatement[46557-46611]:ExpressionStatement[46797-46851]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[46632-46641]:ContinueStatement[46872-46881]"
  }, {
    "left" : "if (c >= '0' && c <= '9')",
    "right" : "if (c >= '0' && c <= '9')",
    "info" : "IfStatement[46707-47421]:IfStatement[46947-47661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46733-46790]:Block[46973-47030]"
  }, {
    "left" : "hasDigits = true;",
    "right" : "hasDigits = true;",
    "info" : "ExpressionStatement[46755-46772]:ExpressionStatement[46995-47012]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46796-47421]:Block[47036-47661]"
  }, {
    "left" : "if ((c == '.' || c == ',')\n                         && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS))",
    "right" : "if ((c == '.' || c == ',')\n                         && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS))",
    "info" : "IfStatement[46818-47403]:IfStatement[47058-47643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46946-47343]:Block[47186-47583]"
  }, {
    "left" : "if (fractPos >= 0)",
    "right" : "if (fractPos >= 0)",
    "info" : "IfStatement[46972-47108]:IfStatement[47212-47348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46991-47108]:Block[47231-47348]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[47076-47082]:BreakStatement[47316-47322]"
  }, {
    "left" : "fractPos = position + length + 1;",
    "right" : "fractPos = position + length + 1;",
    "info" : "ExpressionStatement[47133-47166]:ExpressionStatement[47373-47406]"
  }, {
    "left" : "limit = Math.min(limit + 1, text.length() - position);",
    "right" : "limit = Math.min(limit + 1, text.length() - position);",
    "info" : "ExpressionStatement[47267-47321]:ExpressionStatement[47507-47561]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47349-47403]:Block[47589-47643]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[47375-47381]:BreakStatement[47615-47621]"
  }, {
    "left" : "length++;",
    "right" : "length++;",
    "info" : "ExpressionStatement[47438-47447]:ExpressionStatement[47678-47687]"
  }, {
    "left" : "if (!hasDigits)",
    "right" : "if (!hasDigits)",
    "info" : "IfStatement[47475-47540]:IfStatement[47715-47780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47491-47540]:Block[47731-47780]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[47509-47526]:ReturnStatement[47749-47766]"
  }, {
    "left" : "if (suffixPos >= 0 && position + length != suffixPos)",
    "right" : "if (suffixPos >= 0 && position + length != suffixPos)",
    "info" : "IfStatement[47554-47942]:IfStatement[47794-48182]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47608-47942]:Block[47848-48182]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[47912-47928]:ReturnStatement[48152-48168]"
  }, {
    "left" : "if (iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS)",
    "right" : "if (iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS)",
    "info" : "IfStatement[47956-49318]:IfStatement[48196-49558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48031-48170]:Block[48271-48410]"
  }, {
    "left" : "setFieldValue(period, iFieldType, parseInt(text, position, length));",
    "right" : "setFieldValue(period, iFieldType, parseInt(text, position, length));",
    "info" : "ExpressionStatement[48088-48156]:ExpressionStatement[48328-48396]"
  }, {
    "left" : "if (fractPos < 0)",
    "right" : "if (fractPos < 0)",
    "info" : "IfStatement[48176-49318]:IfStatement[48416-49558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48194-48341]:Block[48434-48581]"
  }, {
    "left" : "setFieldValue(period, SECONDS, parseInt(text, position, length));",
    "right" : "setFieldValue(period, SECONDS, parseInt(text, position, length));",
    "info" : "ExpressionStatement[48212-48277]:ExpressionStatement[48452-48517]"
  }, {
    "left" : "setFieldValue(period, MILLIS, 0);",
    "right" : "setFieldValue(period, MILLIS, 0);",
    "info" : "ExpressionStatement[48294-48327]:ExpressionStatement[48534-48567]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48347-49318]:Block[48587-49558]"
  }, {
    "left" : "int wholeValue = parseInt(text, position, fractPos - position - 1);",
    "right" : "int wholeValue = parseInt(text, position, fractPos - position - 1);",
    "info" : "VariableDeclarationStatement[48365-48432]:VariableDeclarationStatement[48605-48672]"
  }, {
    "left" : "setFieldValue(period, SECONDS, wholeValue);",
    "right" : "setFieldValue(period, SECONDS, wholeValue);",
    "info" : "ExpressionStatement[48449-48492]:ExpressionStatement[48689-48732]"
  }, {
    "left" : "int fractLen = position + length - fractPos;",
    "right" : "int fractLen = position + length - fractPos;",
    "info" : "VariableDeclarationStatement[48510-48554]:VariableDeclarationStatement[48750-48794]"
  }, {
    "left" : "int fractValue;",
    "right" : "int fractValue;",
    "info" : "VariableDeclarationStatement[48571-48586]:VariableDeclarationStatement[48811-48826]"
  }, {
    "left" : "if (fractLen <= 0)",
    "right" : "if (fractLen <= 0)",
    "info" : "IfStatement[48603-49244]:IfStatement[48843-49484]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48622-48677]:Block[48862-48917]"
  }, {
    "left" : "fractValue = 0;",
    "right" : "fractValue = 0;",
    "info" : "ExpressionStatement[48644-48659]:ExpressionStatement[48884-48899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48683-49244]:Block[48923-49484]"
  }, {
    "left" : "if (fractLen >= 3)",
    "right" : "if (fractLen >= 3)",
    "info" : "IfStatement[48705-49112]:IfStatement[48945-49352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48724-48813]:Block[48964-49053]"
  }, {
    "left" : "fractValue = parseInt(text, fractPos, 3);",
    "right" : "fractValue = parseInt(text, fractPos, 3);",
    "info" : "ExpressionStatement[48750-48791]:ExpressionStatement[48990-49031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48819-49112]:Block[49059-49352]"
  }, {
    "left" : "fractValue = parseInt(text, fractPos, fractLen);",
    "right" : "fractValue = parseInt(text, fractPos, fractLen);",
    "info" : "ExpressionStatement[48845-48893]:ExpressionStatement[49085-49133]"
  }, {
    "left" : "if (fractLen == 1)",
    "right" : "if (fractLen == 1)",
    "info" : "IfStatement[48918-49090]:IfStatement[49158-49330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48937-49011]:Block[49177-49251]"
  }, {
    "left" : "fractValue *= 100;",
    "right" : "fractValue *= 100;",
    "info" : "ExpressionStatement[48967-48985]:ExpressionStatement[49207-49225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49017-49090]:Block[49257-49330]"
  }, {
    "left" : "fractValue *= 10;",
    "right" : "fractValue *= 10;",
    "info" : "ExpressionStatement[49047-49064]:ExpressionStatement[49287-49304]"
  }, {
    "left" : "if (wholeValue < 0)",
    "right" : "if (wholeValue < 0)",
    "info" : "IfStatement[49133-49226]:IfStatement[49373-49466]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49153-49226]:Block[49393-49466]"
  }, {
    "left" : "fractValue = -fractValue;",
    "right" : "fractValue = -fractValue;",
    "info" : "ExpressionStatement[49179-49204]:ExpressionStatement[49419-49444]"
  }, {
    "left" : "setFieldValue(period, MILLIS, fractValue);",
    "right" : "setFieldValue(period, MILLIS, fractValue);",
    "info" : "ExpressionStatement[49262-49304]:ExpressionStatement[49502-49544]"
  }, {
    "left" : "position += length;",
    "right" : "position += length;",
    "info" : "ExpressionStatement[49348-49367]:ExpressionStatement[49588-49607]"
  }, {
    "left" : "if (position >= 0 && iSuffix != null)",
    "right" : "if (position >= 0 && iSuffix != null)",
    "info" : "IfStatement[49381-49492]:IfStatement[49621-49732]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49419-49492]:Block[49659-49732]"
  }, {
    "left" : "position = iSuffix.parse(text, position);",
    "right" : "position = iSuffix.parse(text, position);",
    "info" : "ExpressionStatement[49437-49478]:ExpressionStatement[49677-49718]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[49522-49538]:ReturnStatement[49762-49778]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[49759-49766]:Modifier[49999-50006]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[49767-49770]:PrimitiveType[50007-50010]"
  }, {
    "left" : "parseInt",
    "right" : "parseInt",
    "info" : "SimpleName[49771-49779]:SimpleName[50011-50019]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[49780-49791]:SingleVariableDeclaration[50020-50031]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[49793-49805]:SingleVariableDeclaration[50033-50045]"
  }, {
    "left" : "int length",
    "right" : "int length",
    "info" : "SingleVariableDeclaration[49807-49817]:SingleVariableDeclaration[50047-50057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49819-50696]:Block[50059-50936]"
  }, {
    "left" : "if (length >= 10)",
    "right" : "if (length >= 10)",
    "info" : "IfStatement[49833-50039]:IfStatement[50073-50279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49851-50039]:Block[50091-50279]"
  }, {
    "left" : "return Integer.parseInt(text.substring(position, position + length));",
    "right" : "return Integer.parseInt(text.substring(position, position + length));",
    "info" : "ReturnStatement[49956-50025]:ReturnStatement[50196-50265]"
  }, {
    "left" : "if (length <= 0)",
    "right" : "if (length <= 0)",
    "info" : "IfStatement[50052-50110]:IfStatement[50292-50350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50069-50110]:Block[50309-50350]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[50087-50096]:ReturnStatement[50327-50336]"
  }, {
    "left" : "int value = text.charAt(position++);",
    "right" : "int value = text.charAt(position++);",
    "info" : "VariableDeclarationStatement[50123-50159]:VariableDeclarationStatement[50363-50399]"
  }, {
    "left" : "length--;",
    "right" : "length--;",
    "info" : "ExpressionStatement[50172-50181]:ExpressionStatement[50412-50421]"
  }, {
    "left" : "boolean negative;",
    "right" : "boolean negative;",
    "info" : "VariableDeclarationStatement[50194-50211]:VariableDeclarationStatement[50434-50451]"
  }, {
    "left" : "if (value == '-')",
    "right" : "if (value == '-')",
    "info" : "IfStatement[50224-50478]:IfStatement[50464-50718]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50242-50423]:Block[50482-50663]"
  }, {
    "left" : "if (--length < 0)",
    "right" : "if (--length < 0)",
    "info" : "IfStatement[50260-50327]:IfStatement[50500-50567]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50278-50327]:Block[50518-50567]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[50300-50309]:ReturnStatement[50540-50549]"
  }, {
    "left" : "negative = true;",
    "right" : "negative = true;",
    "info" : "ExpressionStatement[50344-50360]:ExpressionStatement[50584-50600]"
  }, {
    "left" : "value = text.charAt(position++);",
    "right" : "value = text.charAt(position++);",
    "info" : "ExpressionStatement[50377-50409]:ExpressionStatement[50617-50649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50429-50478]:Block[50669-50718]"
  }, {
    "left" : "negative = false;",
    "right" : "negative = false;",
    "info" : "ExpressionStatement[50447-50464]:ExpressionStatement[50687-50704]"
  }, {
    "left" : "value -= '0';",
    "right" : "value -= '0';",
    "info" : "ExpressionStatement[50491-50504]:ExpressionStatement[50731-50744]"
  }, {
    "left" : "while (length-- > 0)",
    "right" : "while (length-- > 0)",
    "info" : "WhileStatement[50517-50640]:WhileStatement[50757-50880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50538-50640]:Block[50778-50880]"
  }, {
    "left" : "value = ((value << 3) + (value << 1)) + text.charAt(position++) - '0';",
    "right" : "value = ((value << 3) + (value << 1)) + text.charAt(position++) - '0';",
    "info" : "ExpressionStatement[50556-50626]:ExpressionStatement[50796-50866]"
  }, {
    "left" : "return negative ? -value : value;",
    "right" : "return negative ? -value : value;",
    "info" : "ReturnStatement[50653-50686]:ReturnStatement[50893-50926]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[50801-50805]:PrimitiveType[51041-51045]"
  }, {
    "left" : "getFieldValue",
    "right" : "getFieldValue",
    "info" : "SimpleName[50806-50819]:SimpleName[51046-51059]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[50820-50841]:SingleVariableDeclaration[51060-51081]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50843-54076]:Block[51083-54316]"
  }, {
    "left" : "PeriodType type;",
    "right" : "PeriodType type;",
    "info" : "VariableDeclarationStatement[50857-50873]:VariableDeclarationStatement[51097-51113]"
  }, {
    "left" : "if (iPrintZeroSetting == PRINT_ZERO_ALWAYS)",
    "right" : "if (iPrintZeroSetting == PRINT_ZERO_ALWAYS)",
    "info" : "IfStatement[50886-51079]:IfStatement[51126-51319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50930-51011]:Block[51170-51251]"
  }, {
    "left" : "type = null;",
    "right" : "type = null;",
    "info" : "ExpressionStatement[50948-50960]:ExpressionStatement[51188-51200]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51017-51079]:Block[51257-51319]"
  }, {
    "left" : "type = period.getPeriodType();",
    "right" : "type = period.getPeriodType();",
    "info" : "ExpressionStatement[51035-51065]:ExpressionStatement[51275-51305]"
  }, {
    "left" : "if (type != null && isSupported(type, iFieldType) == false)",
    "right" : "if (type != null && isSupported(type, iFieldType) == false)",
    "info" : "IfStatement[51092-51206]:IfStatement[51332-51446]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51152-51206]:Block[51392-51446]"
  }, {
    "left" : "return Long.MAX_VALUE;",
    "right" : "return Long.MAX_VALUE;",
    "info" : "ReturnStatement[51170-51192]:ReturnStatement[51410-51432]"
  }, {
    "left" : "long value;",
    "right" : "long value;",
    "info" : "VariableDeclarationStatement[51220-51231]:VariableDeclarationStatement[51460-51471]"
  }, {
    "left" : "switch (iFieldType) {\n            default:\n                return Long.MAX_VALUE;\n            case YEARS:\n                value = period.get(DurationFieldType.years());\n                break;\n            case MONTHS:\n                value = period.get(DurationFieldType.months());\n                break;\n            case WEEKS:\n                value = period.get(DurationFieldType.weeks());\n                break;\n            case DAYS:\n                value = period.get(DurationFieldType.days());\n                break;\n            case HOURS:\n                value = period.get(DurationFieldType.hours());\n                break;\n            case MINUTES:\n                value = period.get(DurationFieldType.minutes());\n                break;\n            case SECONDS:\n                value = period.get(DurationFieldType.seconds());\n                break;\n            case MILLIS:\n                value = period.get(DurationFieldType.millis());\n                break;\n            case SECONDS_MILLIS: // drop through\n            case SECONDS_OPTIONAL_MILLIS:\n                int seconds = period.get(DurationFieldType.seconds());\n                int millis = period.get(DurationFieldType.millis());\n                value = (seconds * (long) DateTimeConstants.MILLIS_PER_SECOND) + millis;\n                break;\n            }",
    "right" : "switch (iFieldType) {\n            default:\n                return Long.MAX_VALUE;\n            case YEARS:\n                value = period.get(DurationFieldType.years());\n                break;\n            case MONTHS:\n                value = period.get(DurationFieldType.months());\n                break;\n            case WEEKS:\n                value = period.get(DurationFieldType.weeks());\n                break;\n            case DAYS:\n                value = period.get(DurationFieldType.days());\n                break;\n            case HOURS:\n                value = period.get(DurationFieldType.hours());\n                break;\n            case MINUTES:\n                value = period.get(DurationFieldType.minutes());\n                break;\n            case SECONDS:\n                value = period.get(DurationFieldType.seconds());\n                break;\n            case MILLIS:\n                value = period.get(DurationFieldType.millis());\n                break;\n            case SECONDS_MILLIS: // drop through\n            case SECONDS_OPTIONAL_MILLIS:\n                int seconds = period.get(DurationFieldType.seconds());\n                int millis = period.get(DurationFieldType.millis());\n                value = (seconds * (long) DateTimeConstants.MILLIS_PER_SECOND) + millis;\n                break;\n            }",
    "info" : "SwitchStatement[51245-52573]:SwitchStatement[51485-52813]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[51279-51287]:SwitchCase[51519-51527]"
  }, {
    "left" : "return Long.MAX_VALUE;",
    "right" : "return Long.MAX_VALUE;",
    "info" : "ReturnStatement[51304-51326]:ReturnStatement[51544-51566]"
  }, {
    "left" : "case YEARS:",
    "right" : "case YEARS:",
    "info" : "SwitchCase[51339-51350]:SwitchCase[51579-51590]"
  }, {
    "left" : "value = period.get(DurationFieldType.years());",
    "right" : "value = period.get(DurationFieldType.years());",
    "info" : "ExpressionStatement[51367-51413]:ExpressionStatement[51607-51653]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[51430-51436]:BreakStatement[51670-51676]"
  }, {
    "left" : "case MONTHS:",
    "right" : "case MONTHS:",
    "info" : "SwitchCase[51449-51461]:SwitchCase[51689-51701]"
  }, {
    "left" : "value = period.get(DurationFieldType.months());",
    "right" : "value = period.get(DurationFieldType.months());",
    "info" : "ExpressionStatement[51478-51525]:ExpressionStatement[51718-51765]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[51542-51548]:BreakStatement[51782-51788]"
  }, {
    "left" : "case WEEKS:",
    "right" : "case WEEKS:",
    "info" : "SwitchCase[51561-51572]:SwitchCase[51801-51812]"
  }, {
    "left" : "value = period.get(DurationFieldType.weeks());",
    "right" : "value = period.get(DurationFieldType.weeks());",
    "info" : "ExpressionStatement[51589-51635]:ExpressionStatement[51829-51875]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[51652-51658]:BreakStatement[51892-51898]"
  }, {
    "left" : "case DAYS:",
    "right" : "case DAYS:",
    "info" : "SwitchCase[51671-51681]:SwitchCase[51911-51921]"
  }, {
    "left" : "value = period.get(DurationFieldType.days());",
    "right" : "value = period.get(DurationFieldType.days());",
    "info" : "ExpressionStatement[51698-51743]:ExpressionStatement[51938-51983]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[51760-51766]:BreakStatement[52000-52006]"
  }, {
    "left" : "case HOURS:",
    "right" : "case HOURS:",
    "info" : "SwitchCase[51779-51790]:SwitchCase[52019-52030]"
  }, {
    "left" : "value = period.get(DurationFieldType.hours());",
    "right" : "value = period.get(DurationFieldType.hours());",
    "info" : "ExpressionStatement[51807-51853]:ExpressionStatement[52047-52093]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[51870-51876]:BreakStatement[52110-52116]"
  }, {
    "left" : "case MINUTES:",
    "right" : "case MINUTES:",
    "info" : "SwitchCase[51889-51902]:SwitchCase[52129-52142]"
  }, {
    "left" : "value = period.get(DurationFieldType.minutes());",
    "right" : "value = period.get(DurationFieldType.minutes());",
    "info" : "ExpressionStatement[51919-51967]:ExpressionStatement[52159-52207]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[51984-51990]:BreakStatement[52224-52230]"
  }, {
    "left" : "case SECONDS:",
    "right" : "case SECONDS:",
    "info" : "SwitchCase[52003-52016]:SwitchCase[52243-52256]"
  }, {
    "left" : "value = period.get(DurationFieldType.seconds());",
    "right" : "value = period.get(DurationFieldType.seconds());",
    "info" : "ExpressionStatement[52033-52081]:ExpressionStatement[52273-52321]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[52098-52104]:BreakStatement[52338-52344]"
  }, {
    "left" : "case MILLIS:",
    "right" : "case MILLIS:",
    "info" : "SwitchCase[52117-52129]:SwitchCase[52357-52369]"
  }, {
    "left" : "value = period.get(DurationFieldType.millis());",
    "right" : "value = period.get(DurationFieldType.millis());",
    "info" : "ExpressionStatement[52146-52193]:ExpressionStatement[52386-52433]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[52210-52216]:BreakStatement[52450-52456]"
  }, {
    "left" : "case SECONDS_MILLIS:",
    "right" : "case SECONDS_MILLIS:",
    "info" : "SwitchCase[52229-52249]:SwitchCase[52469-52489]"
  }, {
    "left" : "case SECONDS_OPTIONAL_MILLIS:",
    "right" : "case SECONDS_OPTIONAL_MILLIS:",
    "info" : "SwitchCase[52278-52307]:SwitchCase[52518-52547]"
  }, {
    "left" : "int seconds = period.get(DurationFieldType.seconds());",
    "right" : "int seconds = period.get(DurationFieldType.seconds());",
    "info" : "VariableDeclarationStatement[52324-52378]:VariableDeclarationStatement[52564-52618]"
  }, {
    "left" : "int millis = period.get(DurationFieldType.millis());",
    "right" : "int millis = period.get(DurationFieldType.millis());",
    "info" : "VariableDeclarationStatement[52395-52447]:VariableDeclarationStatement[52635-52687]"
  }, {
    "left" : "value = (seconds * (long) DateTimeConstants.MILLIS_PER_SECOND) + millis;",
    "right" : "value = (seconds * (long) DateTimeConstants.MILLIS_PER_SECOND) + millis;",
    "info" : "ExpressionStatement[52464-52536]:ExpressionStatement[52704-52776]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[52553-52559]:BreakStatement[52793-52799]"
  }, {
    "left" : "if (value == 0)",
    "right" : "if (value == 0)",
    "info" : "IfStatement[52657-54039]:IfStatement[52897-54279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52673-54039]:Block[52913-54279]"
  }, {
    "left" : "switch (iPrintZeroSetting) {\n                case PRINT_ZERO_NEVER:\n                    return Long.MAX_VALUE;\n                case PRINT_ZERO_RARELY_LAST:\n                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {\n                        for (int i = iFieldType + 1; i <= MAX_FIELD; i++) {\n                            if (isSupported(type, i) && iFieldFormatters[i] != null) {\n                                return Long.MAX_VALUE;\n                            }\n                        }\n                    } else {\n                        return Long.MAX_VALUE;\n                    }\n                    break;\n                case PRINT_ZERO_RARELY_FIRST:\n                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {\n                        int i = Math.min(iFieldType, 8);  // line split out for IBM JDK\n                        i--;                              // see bug 1660490\n                        for (; i >= 0 && i <= MAX_FIELD; i--) {\n                            if (isSupported(type, i) && iFieldFormatters[i] != null) {\n                                return Long.MAX_VALUE;\n                            }\n                        }\n                    } else {\n                        return Long.MAX_VALUE;\n                    }\n                    break;\n                }",
    "right" : "switch (iPrintZeroSetting) {\n                case PRINT_ZERO_NEVER:\n                    return Long.MAX_VALUE;\n                case PRINT_ZERO_RARELY_LAST:\n                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {\n                        for (int i = iFieldType + 1; i <= MAX_FIELD; i++) {\n                            if (isSupported(type, i) && iFieldFormatters[i] != null) {\n                                return Long.MAX_VALUE;\n                            }\n                        }\n                    } else {\n                        return Long.MAX_VALUE;\n                    }\n                    break;\n                case PRINT_ZERO_RARELY_FIRST:\n                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {\n                        int i = Math.min(iFieldType, 8);  // line split out for IBM JDK\n                        i--;                              // see bug 1660490\n                        for (; i >= 0 && i <= MAX_FIELD; i--) {\n                            if (isSupported(type, i) && iFieldFormatters[i] != null) {\n                                return Long.MAX_VALUE;\n                            }\n                        }\n                    } else {\n                        return Long.MAX_VALUE;\n                    }\n                    break;\n                }",
    "info" : "SwitchStatement[52691-54025]:SwitchStatement[52931-54265]"
  }, {
    "left" : "case PRINT_ZERO_NEVER:",
    "right" : "case PRINT_ZERO_NEVER:",
    "info" : "SwitchCase[52736-52758]:SwitchCase[52976-52998]"
  }, {
    "left" : "return Long.MAX_VALUE;",
    "right" : "return Long.MAX_VALUE;",
    "info" : "ReturnStatement[52779-52801]:ReturnStatement[53019-53041]"
  }, {
    "left" : "case PRINT_ZERO_RARELY_LAST:",
    "right" : "case PRINT_ZERO_RARELY_LAST:",
    "info" : "SwitchCase[52818-52846]:SwitchCase[53058-53086]"
  }, {
    "left" : "if (isZero(period) && iFieldFormatters[iFieldType] == this)",
    "right" : "if (isZero(period) && iFieldFormatters[iFieldType] == this)",
    "info" : "IfStatement[52867-53300]:IfStatement[53107-53540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52927-53224]:Block[53167-53464]"
  }, {
    "left" : "for (int i = iFieldType + 1; i <= MAX_FIELD; i++)",
    "right" : "for (int i = iFieldType + 1; i <= MAX_FIELD; i++)",
    "info" : "ForStatement[52953-53202]:ForStatement[53193-53442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53003-53202]:Block[53243-53442]"
  }, {
    "left" : "if (isSupported(type, i) && iFieldFormatters[i] != null)",
    "right" : "if (isSupported(type, i) && iFieldFormatters[i] != null)",
    "info" : "IfStatement[53033-53176]:IfStatement[53273-53416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53090-53176]:Block[53330-53416]"
  }, {
    "left" : "return Long.MAX_VALUE;",
    "right" : "return Long.MAX_VALUE;",
    "info" : "ReturnStatement[53124-53146]:ReturnStatement[53364-53386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53230-53300]:Block[53470-53540]"
  }, {
    "left" : "return Long.MAX_VALUE;",
    "right" : "return Long.MAX_VALUE;",
    "info" : "ReturnStatement[53256-53278]:ReturnStatement[53496-53518]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[53321-53327]:BreakStatement[53561-53567]"
  }, {
    "left" : "case PRINT_ZERO_RARELY_FIRST:",
    "right" : "case PRINT_ZERO_RARELY_FIRST:",
    "info" : "SwitchCase[53344-53373]:SwitchCase[53584-53613]"
  }, {
    "left" : "if (isZero(period) && iFieldFormatters[iFieldType] == this)",
    "right" : "if (isZero(period) && iFieldFormatters[iFieldType] == this)",
    "info" : "IfStatement[53394-53980]:IfStatement[53634-54220]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53454-53904]:Block[53694-54144]"
  }, {
    "left" : "int i = Math.min(iFieldType, 8);",
    "right" : "int i = Math.min(iFieldType, 8);",
    "info" : "VariableDeclarationStatement[53480-53512]:VariableDeclarationStatement[53720-53752]"
  }, {
    "left" : "i--;",
    "right" : "i--;",
    "info" : "ExpressionStatement[53568-53572]:ExpressionStatement[53808-53812]"
  }, {
    "left" : "for (; i >= 0 && i <= MAX_FIELD; i--)",
    "right" : "for (; i >= 0 && i <= MAX_FIELD; i--)",
    "info" : "ForStatement[53645-53882]:ForStatement[53885-54122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53683-53882]:Block[53923-54122]"
  }, {
    "left" : "if (isSupported(type, i) && iFieldFormatters[i] != null)",
    "right" : "if (isSupported(type, i) && iFieldFormatters[i] != null)",
    "info" : "IfStatement[53713-53856]:IfStatement[53953-54096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53770-53856]:Block[54010-54096]"
  }, {
    "left" : "return Long.MAX_VALUE;",
    "right" : "return Long.MAX_VALUE;",
    "info" : "ReturnStatement[53804-53826]:ReturnStatement[54044-54066]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53910-53980]:Block[54150-54220]"
  }, {
    "left" : "return Long.MAX_VALUE;",
    "right" : "return Long.MAX_VALUE;",
    "info" : "ReturnStatement[53936-53958]:ReturnStatement[54176-54198]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[54001-54007]:BreakStatement[54241-54247]"
  }, {
    "left" : "return value;",
    "right" : "return value;",
    "info" : "ReturnStatement[54053-54066]:ReturnStatement[54293-54306]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[54086-54093]:PrimitiveType[54326-54333]"
  }, {
    "left" : "isZero",
    "right" : "isZero",
    "info" : "SimpleName[54094-54100]:SimpleName[54334-54340]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[54101-54122]:SingleVariableDeclaration[54341-54362]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54124-54342]:Block[54364-54582]"
  }, {
    "left" : "for (int i = 0, isize = period.size(); i < isize; i++)",
    "right" : "for (int i = 0, isize = period.size(); i < isize; i++)",
    "info" : "ForStatement[54138-54307]:ForStatement[54378-54547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54193-54307]:Block[54433-54547]"
  }, {
    "left" : "if (period.getValue(i) != 0)",
    "right" : "if (period.getValue(i) != 0)",
    "info" : "IfStatement[54211-54293]:IfStatement[54451-54533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54240-54293]:Block[54480-54533]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[54262-54275]:ReturnStatement[54502-54515]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[54320-54332]:ReturnStatement[54560-54572]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[54352-54359]:PrimitiveType[54592-54599]"
  }, {
    "left" : "isSupported",
    "right" : "isSupported",
    "info" : "SimpleName[54360-54371]:SimpleName[54600-54611]"
  }, {
    "left" : "PeriodType type",
    "right" : "PeriodType type",
    "info" : "SingleVariableDeclaration[54372-54387]:SingleVariableDeclaration[54612-54627]"
  }, {
    "left" : "int field",
    "right" : "int field",
    "info" : "SingleVariableDeclaration[54389-54398]:SingleVariableDeclaration[54629-54638]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54400-55483]:Block[54640-55723]"
  }, {
    "left" : "switch (field) {\n            default:\n                return false;\n            case YEARS:\n                return type.isSupported(DurationFieldType.years());\n            case MONTHS:\n                return type.isSupported(DurationFieldType.months());\n            case WEEKS:\n                return type.isSupported(DurationFieldType.weeks());\n            case DAYS:\n                return type.isSupported(DurationFieldType.days());\n            case HOURS:\n                return type.isSupported(DurationFieldType.hours());\n            case MINUTES:\n                return type.isSupported(DurationFieldType.minutes());\n            case SECONDS:\n                return type.isSupported(DurationFieldType.seconds());\n            case MILLIS:\n                return type.isSupported(DurationFieldType.millis());\n            case SECONDS_MILLIS: // drop through\n            case SECONDS_OPTIONAL_MILLIS:\n                return type.isSupported(DurationFieldType.seconds()) ||\n                       type.isSupported(DurationFieldType.millis());\n            }",
    "right" : "switch (field) {\n            default:\n                return false;\n            case YEARS:\n                return type.isSupported(DurationFieldType.years());\n            case MONTHS:\n                return type.isSupported(DurationFieldType.months());\n            case WEEKS:\n                return type.isSupported(DurationFieldType.weeks());\n            case DAYS:\n                return type.isSupported(DurationFieldType.days());\n            case HOURS:\n                return type.isSupported(DurationFieldType.hours());\n            case MINUTES:\n                return type.isSupported(DurationFieldType.minutes());\n            case SECONDS:\n                return type.isSupported(DurationFieldType.seconds());\n            case MILLIS:\n                return type.isSupported(DurationFieldType.millis());\n            case SECONDS_MILLIS: // drop through\n            case SECONDS_OPTIONAL_MILLIS:\n                return type.isSupported(DurationFieldType.seconds()) ||\n                       type.isSupported(DurationFieldType.millis());\n            }",
    "info" : "SwitchStatement[54414-55473]:SwitchStatement[54654-55713]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[54443-54451]:SwitchCase[54683-54691]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[54468-54481]:ReturnStatement[54708-54721]"
  }, {
    "left" : "case YEARS:",
    "right" : "case YEARS:",
    "info" : "SwitchCase[54494-54505]:SwitchCase[54734-54745]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.years());",
    "right" : "return type.isSupported(DurationFieldType.years());",
    "info" : "ReturnStatement[54522-54573]:ReturnStatement[54762-54813]"
  }, {
    "left" : "case MONTHS:",
    "right" : "case MONTHS:",
    "info" : "SwitchCase[54586-54598]:SwitchCase[54826-54838]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.months());",
    "right" : "return type.isSupported(DurationFieldType.months());",
    "info" : "ReturnStatement[54615-54667]:ReturnStatement[54855-54907]"
  }, {
    "left" : "case WEEKS:",
    "right" : "case WEEKS:",
    "info" : "SwitchCase[54680-54691]:SwitchCase[54920-54931]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.weeks());",
    "right" : "return type.isSupported(DurationFieldType.weeks());",
    "info" : "ReturnStatement[54708-54759]:ReturnStatement[54948-54999]"
  }, {
    "left" : "case DAYS:",
    "right" : "case DAYS:",
    "info" : "SwitchCase[54772-54782]:SwitchCase[55012-55022]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.days());",
    "right" : "return type.isSupported(DurationFieldType.days());",
    "info" : "ReturnStatement[54799-54849]:ReturnStatement[55039-55089]"
  }, {
    "left" : "case HOURS:",
    "right" : "case HOURS:",
    "info" : "SwitchCase[54862-54873]:SwitchCase[55102-55113]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.hours());",
    "right" : "return type.isSupported(DurationFieldType.hours());",
    "info" : "ReturnStatement[54890-54941]:ReturnStatement[55130-55181]"
  }, {
    "left" : "case MINUTES:",
    "right" : "case MINUTES:",
    "info" : "SwitchCase[54954-54967]:SwitchCase[55194-55207]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.minutes());",
    "right" : "return type.isSupported(DurationFieldType.minutes());",
    "info" : "ReturnStatement[54984-55037]:ReturnStatement[55224-55277]"
  }, {
    "left" : "case SECONDS:",
    "right" : "case SECONDS:",
    "info" : "SwitchCase[55050-55063]:SwitchCase[55290-55303]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.seconds());",
    "right" : "return type.isSupported(DurationFieldType.seconds());",
    "info" : "ReturnStatement[55080-55133]:ReturnStatement[55320-55373]"
  }, {
    "left" : "case MILLIS:",
    "right" : "case MILLIS:",
    "info" : "SwitchCase[55146-55158]:SwitchCase[55386-55398]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.millis());",
    "right" : "return type.isSupported(DurationFieldType.millis());",
    "info" : "ReturnStatement[55175-55227]:ReturnStatement[55415-55467]"
  }, {
    "left" : "case SECONDS_MILLIS:",
    "right" : "case SECONDS_MILLIS:",
    "info" : "SwitchCase[55240-55260]:SwitchCase[55480-55500]"
  }, {
    "left" : "case SECONDS_OPTIONAL_MILLIS:",
    "right" : "case SECONDS_OPTIONAL_MILLIS:",
    "info" : "SwitchCase[55289-55318]:SwitchCase[55529-55558]"
  }, {
    "left" : "return type.isSupported(DurationFieldType.seconds()) ||\n                       type.isSupported(DurationFieldType.millis());",
    "right" : "return type.isSupported(DurationFieldType.seconds()) ||\n                       type.isSupported(DurationFieldType.millis());",
    "info" : "ReturnStatement[55335-55459]:ReturnStatement[55575-55699]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[55493-55497]:PrimitiveType[55733-55737]"
  }, {
    "left" : "setFieldValue",
    "right" : "setFieldValue",
    "info" : "SimpleName[55498-55511]:SimpleName[55738-55751]"
  }, {
    "left" : "ReadWritablePeriod period",
    "right" : "ReadWritablePeriod period",
    "info" : "SingleVariableDeclaration[55512-55537]:SingleVariableDeclaration[55752-55777]"
  }, {
    "left" : "int field",
    "right" : "int field",
    "info" : "SingleVariableDeclaration[55539-55548]:SingleVariableDeclaration[55779-55788]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[55550-55559]:SingleVariableDeclaration[55790-55799]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55561-56365]:Block[55801-56605]"
  }, {
    "left" : "switch (field) {\n            default:\n                break;\n            case YEARS:\n                period.setYears(value);\n                break;\n            case MONTHS:\n                period.setMonths(value);\n                break;\n            case WEEKS:\n                period.setWeeks(value);\n                break;\n            case DAYS:\n                period.setDays(value);\n                break;\n            case HOURS:\n                period.setHours(value);\n                break;\n            case MINUTES:\n                period.setMinutes(value);\n                break;\n            case SECONDS:\n                period.setSeconds(value);\n                break;\n            case MILLIS:\n                period.setMillis(value);\n                break;\n            }",
    "right" : "switch (field) {\n            default:\n                break;\n            case YEARS:\n                period.setYears(value);\n                break;\n            case MONTHS:\n                period.setMonths(value);\n                break;\n            case WEEKS:\n                period.setWeeks(value);\n                break;\n            case DAYS:\n                period.setDays(value);\n                break;\n            case HOURS:\n                period.setHours(value);\n                break;\n            case MINUTES:\n                period.setMinutes(value);\n                break;\n            case SECONDS:\n                period.setSeconds(value);\n                break;\n            case MILLIS:\n                period.setMillis(value);\n                break;\n            }",
    "info" : "SwitchStatement[55575-56355]:SwitchStatement[55815-56595]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[55604-55612]:SwitchCase[55844-55852]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[55629-55635]:BreakStatement[55869-55875]"
  }, {
    "left" : "case YEARS:",
    "right" : "case YEARS:",
    "info" : "SwitchCase[55648-55659]:SwitchCase[55888-55899]"
  }, {
    "left" : "period.setYears(value);",
    "right" : "period.setYears(value);",
    "info" : "ExpressionStatement[55676-55699]:ExpressionStatement[55916-55939]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[55716-55722]:BreakStatement[55956-55962]"
  }, {
    "left" : "case MONTHS:",
    "right" : "case MONTHS:",
    "info" : "SwitchCase[55735-55747]:SwitchCase[55975-55987]"
  }, {
    "left" : "period.setMonths(value);",
    "right" : "period.setMonths(value);",
    "info" : "ExpressionStatement[55764-55788]:ExpressionStatement[56004-56028]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[55805-55811]:BreakStatement[56045-56051]"
  }, {
    "left" : "case WEEKS:",
    "right" : "case WEEKS:",
    "info" : "SwitchCase[55824-55835]:SwitchCase[56064-56075]"
  }, {
    "left" : "period.setWeeks(value);",
    "right" : "period.setWeeks(value);",
    "info" : "ExpressionStatement[55852-55875]:ExpressionStatement[56092-56115]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[55892-55898]:BreakStatement[56132-56138]"
  }, {
    "left" : "case DAYS:",
    "right" : "case DAYS:",
    "info" : "SwitchCase[55911-55921]:SwitchCase[56151-56161]"
  }, {
    "left" : "period.setDays(value);",
    "right" : "period.setDays(value);",
    "info" : "ExpressionStatement[55938-55960]:ExpressionStatement[56178-56200]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[55977-55983]:BreakStatement[56217-56223]"
  }, {
    "left" : "case HOURS:",
    "right" : "case HOURS:",
    "info" : "SwitchCase[55996-56007]:SwitchCase[56236-56247]"
  }, {
    "left" : "period.setHours(value);",
    "right" : "period.setHours(value);",
    "info" : "ExpressionStatement[56024-56047]:ExpressionStatement[56264-56287]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[56064-56070]:BreakStatement[56304-56310]"
  }, {
    "left" : "case MINUTES:",
    "right" : "case MINUTES:",
    "info" : "SwitchCase[56083-56096]:SwitchCase[56323-56336]"
  }, {
    "left" : "period.setMinutes(value);",
    "right" : "period.setMinutes(value);",
    "info" : "ExpressionStatement[56113-56138]:ExpressionStatement[56353-56378]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[56155-56161]:BreakStatement[56395-56401]"
  }, {
    "left" : "case SECONDS:",
    "right" : "case SECONDS:",
    "info" : "SwitchCase[56174-56187]:SwitchCase[56414-56427]"
  }, {
    "left" : "period.setSeconds(value);",
    "right" : "period.setSeconds(value);",
    "info" : "ExpressionStatement[56204-56229]:ExpressionStatement[56444-56469]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[56246-56252]:BreakStatement[56486-56492]"
  }, {
    "left" : "case MILLIS:",
    "right" : "case MILLIS:",
    "info" : "SwitchCase[56265-56277]:SwitchCase[56505-56517]"
  }, {
    "left" : "period.setMillis(value);",
    "right" : "period.setMillis(value);",
    "info" : "ExpressionStatement[56294-56318]:ExpressionStatement[56534-56558]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[56335-56341]:BreakStatement[56575-56581]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[56375-56378]:PrimitiveType[56615-56618]"
  }, {
    "left" : "getFieldType",
    "right" : "getFieldType",
    "info" : "SimpleName[56379-56391]:SimpleName[56619-56631]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56394-56436]:Block[56634-56676]"
  }, {
    "left" : "return iFieldType;",
    "right" : "return iFieldType;",
    "info" : "ReturnStatement[56408-56426]:ReturnStatement[56648-56666]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[56589-56595]:Modifier[56829-56835]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[56596-56601]:TYPE_DECLARATION_KIND[56836-56841]"
  }, {
    "left" : "Literal",
    "right" : "Literal",
    "info" : "SimpleName[56762-56769]:SimpleName[57002-57009]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[56770-56781]:SingleVariableDeclaration[57010-57021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56783-56820]:Block[57023-57060]"
  }, {
    "left" : "iText = text;",
    "right" : "iText = text;",
    "info" : "ExpressionStatement[56797-56810]:ExpressionStatement[57037-57050]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56830-56836]:Modifier[57070-57076]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[56837-56840]:PrimitiveType[57077-57080]"
  }, {
    "left" : "countFieldsToPrint",
    "right" : "countFieldsToPrint",
    "info" : "SimpleName[56841-56859]:SimpleName[57081-57099]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[56860-56881]:SingleVariableDeclaration[57100-57121]"
  }, {
    "left" : "int stopAt",
    "right" : "int stopAt",
    "info" : "SingleVariableDeclaration[56883-56893]:SingleVariableDeclaration[57123-57133]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[56895-56908]:SingleVariableDeclaration[57135-57148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56910-56943]:Block[57150-57183]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[56924-56933]:ReturnStatement[57164-57173]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56953-56959]:Modifier[57193-57199]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[56960-56963]:PrimitiveType[57200-57203]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[56964-56986]:SimpleName[57204-57226]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[56987-57008]:SingleVariableDeclaration[57227-57248]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[57010-57023]:SingleVariableDeclaration[57250-57263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57025-57071]:Block[57265-57311]"
  }, {
    "left" : "return iText.length();",
    "right" : "return iText.length();",
    "info" : "ReturnStatement[57039-57061]:ReturnStatement[57279-57301]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57081-57087]:Modifier[57321-57327]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[57088-57092]:PrimitiveType[57328-57332]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[57093-57100]:SimpleName[57333-57340]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[57101-57117]:SingleVariableDeclaration[57341-57357]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[57119-57140]:SingleVariableDeclaration[57359-57380]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[57142-57155]:SingleVariableDeclaration[57382-57395]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57157-57199]:Block[57397-57439]"
  }, {
    "left" : "buf.append(iText);",
    "right" : "buf.append(iText);",
    "info" : "ExpressionStatement[57171-57189]:ExpressionStatement[57411-57429]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57209-57215]:Modifier[57449-57455]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[57216-57220]:PrimitiveType[57456-57460]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[57221-57228]:SimpleName[57461-57468]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[57229-57239]:SingleVariableDeclaration[57469-57479]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[57241-57262]:SingleVariableDeclaration[57481-57502]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[57264-57277]:SingleVariableDeclaration[57504-57517]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[57286-57297]:SimpleType[57526-57537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57298-57339]:Block[57538-57579]"
  }, {
    "left" : "out.write(iText);",
    "right" : "out.write(iText);",
    "info" : "ExpressionStatement[57312-57329]:ExpressionStatement[57552-57569]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57349-57355]:Modifier[57589-57595]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[57356-57359]:PrimitiveType[57596-57599]"
  }, {
    "left" : "parseInto",
    "right" : "parseInto",
    "info" : "SimpleName[57360-57369]:SimpleName[57600-57609]"
  }, {
    "left" : "ReadWritablePeriod period",
    "right" : "ReadWritablePeriod period",
    "info" : "SingleVariableDeclaration[57387-57412]:SingleVariableDeclaration[57627-57652]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[57414-57430]:SingleVariableDeclaration[57654-57670]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[57448-57460]:SingleVariableDeclaration[57688-57700]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[57462-57475]:SingleVariableDeclaration[57702-57715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57477-57667]:Block[57717-57907]"
  }, {
    "left" : "if (periodStr.regionMatches(true, position, iText, 0, iText.length()))",
    "right" : "if (periodStr.regionMatches(true, position, iText, 0, iText.length()))",
    "info" : "IfStatement[57491-57627]:IfStatement[57731-57867]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57562-57627]:Block[57802-57867]"
  }, {
    "left" : "return position + iText.length();",
    "right" : "return position + iText.length();",
    "info" : "ReturnStatement[57580-57613]:ReturnStatement[57820-57853]"
  }, {
    "left" : "return ~position;",
    "right" : "return ~position;",
    "info" : "ReturnStatement[57640-57657]:ReturnStatement[57880-57897]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[57898-57904]:Modifier[58138-58144]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[57905-57910]:TYPE_DECLARATION_KIND[58145-58150]"
  }, {
    "left" : "Separator",
    "right" : "Separator",
    "info" : "SimpleName[58398-58407]:SimpleName[58638-58647]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[58408-58419]:SingleVariableDeclaration[58648-58659]"
  }, {
    "left" : "String finalText",
    "right" : "String finalText",
    "info" : "SingleVariableDeclaration[58421-58437]:SingleVariableDeclaration[58661-58677]"
  }, {
    "left" : "String[] variants",
    "right" : "String[] variants",
    "info" : "SingleVariableDeclaration[58439-58456]:SingleVariableDeclaration[58679-58696]"
  }, {
    "left" : "PeriodPrinter beforePrinter",
    "right" : "PeriodPrinter beforePrinter",
    "info" : "SingleVariableDeclaration[58474-58501]:SingleVariableDeclaration[58714-58741]"
  }, {
    "left" : "PeriodParser beforeParser",
    "right" : "PeriodParser beforeParser",
    "info" : "SingleVariableDeclaration[58503-58528]:SingleVariableDeclaration[58743-58768]"
  }, {
    "left" : "boolean useBefore",
    "right" : "boolean useBefore",
    "info" : "SingleVariableDeclaration[58546-58563]:SingleVariableDeclaration[58786-58803]"
  }, {
    "left" : "boolean useAfter",
    "right" : "boolean useAfter",
    "info" : "SingleVariableDeclaration[58565-58581]:SingleVariableDeclaration[58805-58821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58583-59669]:Block[58823-59909]"
  }, {
    "left" : "iText = text;",
    "right" : "iText = text;",
    "info" : "ExpressionStatement[58597-58610]:ExpressionStatement[58837-58850]"
  }, {
    "left" : "iFinalText = finalText;",
    "right" : "iFinalText = finalText;",
    "info" : "ExpressionStatement[58623-58646]:ExpressionStatement[58863-58886]"
  }, {
    "left" : "if ((finalText == null || text.equals(finalText)) &&\n                (variants == null || variants.length == 0))",
    "right" : "if ((finalText == null || text.equals(finalText)) &&\n                (variants == null || variants.length == 0))",
    "info" : "IfStatement[58660-59502]:IfStatement[58900-59742]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58773-58841]:Block[59013-59081]"
  }, {
    "left" : "iParsedForms = new String[] {text};",
    "right" : "iParsedForms = new String[] {text};",
    "info" : "ExpressionStatement[58792-58827]:ExpressionStatement[59032-59067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58847-59502]:Block[59087-59742]"
  }, {
    "left" : "TreeSet<String> parsedSet = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);",
    "right" : "TreeSet<String> parsedSet = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);",
    "info" : "VariableDeclarationStatement[58926-59005]:VariableDeclarationStatement[59166-59245]"
  }, {
    "left" : "parsedSet.add(text);",
    "right" : "parsedSet.add(text);",
    "info" : "ExpressionStatement[59022-59042]:ExpressionStatement[59262-59282]"
  }, {
    "left" : "parsedSet.add(finalText);",
    "right" : "parsedSet.add(finalText);",
    "info" : "ExpressionStatement[59059-59084]:ExpressionStatement[59299-59324]"
  }, {
    "left" : "if (variants != null)",
    "right" : "if (variants != null)",
    "info" : "IfStatement[59101-59276]:IfStatement[59341-59516]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59123-59276]:Block[59363-59516]"
  }, {
    "left" : "for (int i=variants.length; --i>=0)",
    "right" : "for (int i=variants.length; --i>=0)",
    "info" : "ForStatement[59145-59258]:ForStatement[59385-59498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59183-59258]:Block[59423-59498]"
  }, {
    "left" : "parsedSet.add(variants[i]);",
    "right" : "parsedSet.add(variants[i]);",
    "info" : "ExpressionStatement[59209-59236]:ExpressionStatement[59449-59476]"
  }, {
    "left" : "ArrayList<String> parsedList = new ArrayList<String>(parsedSet);",
    "right" : "ArrayList<String> parsedList = new ArrayList<String>(parsedSet);",
    "info" : "VariableDeclarationStatement[59293-59357]:VariableDeclarationStatement[59533-59597]"
  }, {
    "left" : "Collections.reverse(parsedList);",
    "right" : "Collections.reverse(parsedList);",
    "info" : "ExpressionStatement[59374-59406]:ExpressionStatement[59614-59646]"
  }, {
    "left" : "iParsedForms = parsedList.toArray(new String[parsedList.size()]);",
    "right" : "iParsedForms = parsedList.toArray(new String[parsedList.size()]);",
    "info" : "ExpressionStatement[59423-59488]:ExpressionStatement[59663-59728]"
  }, {
    "left" : "iBeforePrinter = beforePrinter;",
    "right" : "iBeforePrinter = beforePrinter;",
    "info" : "ExpressionStatement[59516-59547]:ExpressionStatement[59756-59787]"
  }, {
    "left" : "iBeforeParser = beforeParser;",
    "right" : "iBeforeParser = beforeParser;",
    "info" : "ExpressionStatement[59560-59589]:ExpressionStatement[59800-59829]"
  }, {
    "left" : "iUseBefore = useBefore;",
    "right" : "iUseBefore = useBefore;",
    "info" : "ExpressionStatement[59602-59625]:ExpressionStatement[59842-59865]"
  }, {
    "left" : "iUseAfter = useAfter;",
    "right" : "iUseAfter = useAfter;",
    "info" : "ExpressionStatement[59638-59659]:ExpressionStatement[59878-59899]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[59679-59685]:Modifier[59919-59925]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[59686-59689]:PrimitiveType[59926-59929]"
  }, {
    "left" : "countFieldsToPrint",
    "right" : "countFieldsToPrint",
    "info" : "SimpleName[59690-59708]:SimpleName[59930-59948]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[59709-59730]:SingleVariableDeclaration[59949-59970]"
  }, {
    "left" : "int stopAt",
    "right" : "int stopAt",
    "info" : "SingleVariableDeclaration[59732-59742]:SingleVariableDeclaration[59972-59982]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[59744-59757]:SingleVariableDeclaration[59984-59997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59759-60002]:Block[59999-60242]"
  }, {
    "left" : "int sum = iBeforePrinter.countFieldsToPrint(period, stopAt, locale);",
    "right" : "int sum = iBeforePrinter.countFieldsToPrint(period, stopAt, locale);",
    "info" : "VariableDeclarationStatement[59773-59841]:VariableDeclarationStatement[60013-60081]"
  }, {
    "left" : "if (sum < stopAt)",
    "right" : "if (sum < stopAt)",
    "info" : "IfStatement[59854-59968]:IfStatement[60094-60208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59872-59968]:Block[60112-60208]"
  }, {
    "left" : "sum += iAfterPrinter.countFieldsToPrint(period, stopAt, locale);",
    "right" : "sum += iAfterPrinter.countFieldsToPrint(period, stopAt, locale);",
    "info" : "ExpressionStatement[59890-59954]:ExpressionStatement[60130-60194]"
  }, {
    "left" : "return sum;",
    "right" : "return sum;",
    "info" : "ReturnStatement[59981-59992]:ReturnStatement[60221-60232]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[60012-60018]:Modifier[60252-60258]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[60019-60022]:PrimitiveType[60259-60262]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[60023-60045]:SimpleName[60263-60285]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[60046-60067]:SingleVariableDeclaration[60286-60307]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[60069-60082]:SingleVariableDeclaration[60309-60322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60084-61030]:Block[60324-61270]"
  }, {
    "left" : "PeriodPrinter before = iBeforePrinter;",
    "right" : "PeriodPrinter before = iBeforePrinter;",
    "info" : "VariableDeclarationStatement[60098-60136]:VariableDeclarationStatement[60338-60376]"
  }, {
    "left" : "PeriodPrinter after = iAfterPrinter;",
    "right" : "PeriodPrinter after = iAfterPrinter;",
    "info" : "VariableDeclarationStatement[60149-60185]:VariableDeclarationStatement[60389-60425]"
  }, {
    "left" : "int sum = before.calculatePrintedLength(period, locale)\n                    + after.calculatePrintedLength(period, locale);",
    "right" : "int sum = before.calculatePrintedLength(period, locale)\n                    + after.calculatePrintedLength(period, locale);",
    "info" : "VariableDeclarationStatement[60211-60334]:VariableDeclarationStatement[60451-60574]"
  }, {
    "left" : "if (iUseBefore)",
    "right" : "if (iUseBefore)",
    "info" : "IfStatement[60360-60983]:IfStatement[60600-61223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60376-60857]:Block[60616-61097]"
  }, {
    "left" : "if (before.countFieldsToPrint(period, 1, locale) > 0)",
    "right" : "if (before.countFieldsToPrint(period, 1, locale) > 0)",
    "info" : "IfStatement[60394-60843]:IfStatement[60634-61083]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60448-60843]:Block[60688-61083]"
  }, {
    "left" : "if (iUseAfter)",
    "right" : "if (iUseAfter)",
    "info" : "IfStatement[60470-60825]:IfStatement[60710-61065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60485-60749]:Block[60725-60989]"
  }, {
    "left" : "int afterCount = after.countFieldsToPrint(period, 2, locale);",
    "right" : "int afterCount = after.countFieldsToPrint(period, 2, locale);",
    "info" : "VariableDeclarationStatement[60511-60572]:VariableDeclarationStatement[60751-60812]"
  }, {
    "left" : "if (afterCount > 0)",
    "right" : "if (afterCount > 0)",
    "info" : "IfStatement[60597-60727]:IfStatement[60837-60967]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60617-60727]:Block[60857-60967]"
  }, {
    "left" : "sum += (afterCount > 1 ? iText : iFinalText).length();",
    "right" : "sum += (afterCount > 1 ? iText : iFinalText).length();",
    "info" : "ExpressionStatement[60647-60701]:ExpressionStatement[60887-60941]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60755-60825]:Block[60995-61065]"
  }, {
    "left" : "sum += iText.length();",
    "right" : "sum += iText.length();",
    "info" : "ExpressionStatement[60781-60803]:ExpressionStatement[61021-61043]"
  }, {
    "left" : "if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0)",
    "right" : "if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0)",
    "info" : "IfStatement[60863-60983]:IfStatement[61103-61223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60929-60983]:Block[61169-61223]"
  }, {
    "left" : "sum += iText.length();",
    "right" : "sum += iText.length();",
    "info" : "ExpressionStatement[60947-60969]:ExpressionStatement[61187-61209]"
  }, {
    "left" : "return sum;",
    "right" : "return sum;",
    "info" : "ReturnStatement[61009-61020]:ReturnStatement[61249-61260]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61040-61046]:Modifier[61280-61286]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[61047-61051]:PrimitiveType[61287-61291]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[61052-61059]:SimpleName[61292-61299]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[61060-61076]:SingleVariableDeclaration[61300-61316]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[61078-61099]:SingleVariableDeclaration[61318-61339]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[61101-61114]:SingleVariableDeclaration[61341-61354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61116-61959]:Block[61356-62199]"
  }, {
    "left" : "PeriodPrinter before = iBeforePrinter;",
    "right" : "PeriodPrinter before = iBeforePrinter;",
    "info" : "VariableDeclarationStatement[61130-61168]:VariableDeclarationStatement[61370-61408]"
  }, {
    "left" : "PeriodPrinter after = iAfterPrinter;",
    "right" : "PeriodPrinter after = iAfterPrinter;",
    "info" : "VariableDeclarationStatement[61181-61217]:VariableDeclarationStatement[61421-61457]"
  }, {
    "left" : "before.printTo(buf, period, locale);",
    "right" : "before.printTo(buf, period, locale);",
    "info" : "ExpressionStatement[61243-61279]:ExpressionStatement[61483-61519]"
  }, {
    "left" : "if (iUseBefore)",
    "right" : "if (iUseBefore)",
    "info" : "IfStatement[61292-61901]:IfStatement[61532-62141]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61308-61779]:Block[61548-62019]"
  }, {
    "left" : "if (before.countFieldsToPrint(period, 1, locale) > 0)",
    "right" : "if (before.countFieldsToPrint(period, 1, locale) > 0)",
    "info" : "IfStatement[61326-61765]:IfStatement[61566-62005]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61380-61765]:Block[61620-62005]"
  }, {
    "left" : "if (iUseAfter)",
    "right" : "if (iUseAfter)",
    "info" : "IfStatement[61402-61747]:IfStatement[61642-61987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61417-61675]:Block[61657-61915]"
  }, {
    "left" : "int afterCount = after.countFieldsToPrint(period, 2, locale);",
    "right" : "int afterCount = after.countFieldsToPrint(period, 2, locale);",
    "info" : "VariableDeclarationStatement[61443-61504]:VariableDeclarationStatement[61683-61744]"
  }, {
    "left" : "if (afterCount > 0)",
    "right" : "if (afterCount > 0)",
    "info" : "IfStatement[61529-61653]:IfStatement[61769-61893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61549-61653]:Block[61789-61893]"
  }, {
    "left" : "buf.append(afterCount > 1 ? iText : iFinalText);",
    "right" : "buf.append(afterCount > 1 ? iText : iFinalText);",
    "info" : "ExpressionStatement[61579-61627]:ExpressionStatement[61819-61867]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61681-61747]:Block[61921-61987]"
  }, {
    "left" : "buf.append(iText);",
    "right" : "buf.append(iText);",
    "info" : "ExpressionStatement[61707-61725]:ExpressionStatement[61947-61965]"
  }, {
    "left" : "if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0)",
    "right" : "if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0)",
    "info" : "IfStatement[61785-61901]:IfStatement[62025-62141]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61851-61901]:Block[62091-62141]"
  }, {
    "left" : "buf.append(iText);",
    "right" : "buf.append(iText);",
    "info" : "ExpressionStatement[61869-61887]:ExpressionStatement[62109-62127]"
  }, {
    "left" : "after.printTo(buf, period, locale);",
    "right" : "after.printTo(buf, period, locale);",
    "info" : "ExpressionStatement[61914-61949]:ExpressionStatement[62154-62189]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61969-61975]:Modifier[62209-62215]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[61976-61980]:PrimitiveType[62216-62220]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[61981-61988]:SimpleName[62221-62228]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[61989-61999]:SingleVariableDeclaration[62229-62239]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[62001-62022]:SingleVariableDeclaration[62241-62262]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[62024-62037]:SingleVariableDeclaration[62264-62277]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[62046-62057]:SimpleType[62286-62297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62058-62898]:Block[62298-63138]"
  }, {
    "left" : "PeriodPrinter before = iBeforePrinter;",
    "right" : "PeriodPrinter before = iBeforePrinter;",
    "info" : "VariableDeclarationStatement[62072-62110]:VariableDeclarationStatement[62312-62350]"
  }, {
    "left" : "PeriodPrinter after = iAfterPrinter;",
    "right" : "PeriodPrinter after = iAfterPrinter;",
    "info" : "VariableDeclarationStatement[62123-62159]:VariableDeclarationStatement[62363-62399]"
  }, {
    "left" : "before.printTo(out, period, locale);",
    "right" : "before.printTo(out, period, locale);",
    "info" : "ExpressionStatement[62185-62221]:ExpressionStatement[62425-62461]"
  }, {
    "left" : "if (iUseBefore)",
    "right" : "if (iUseBefore)",
    "info" : "IfStatement[62234-62840]:IfStatement[62474-63080]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62250-62719]:Block[62490-62959]"
  }, {
    "left" : "if (before.countFieldsToPrint(period, 1, locale) > 0)",
    "right" : "if (before.countFieldsToPrint(period, 1, locale) > 0)",
    "info" : "IfStatement[62268-62705]:IfStatement[62508-62945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62322-62705]:Block[62562-62945]"
  }, {
    "left" : "if (iUseAfter)",
    "right" : "if (iUseAfter)",
    "info" : "IfStatement[62344-62687]:IfStatement[62584-62927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62359-62616]:Block[62599-62856]"
  }, {
    "left" : "int afterCount = after.countFieldsToPrint(period, 2, locale);",
    "right" : "int afterCount = after.countFieldsToPrint(period, 2, locale);",
    "info" : "VariableDeclarationStatement[62385-62446]:VariableDeclarationStatement[62625-62686]"
  }, {
    "left" : "if (afterCount > 0)",
    "right" : "if (afterCount > 0)",
    "info" : "IfStatement[62471-62594]:IfStatement[62711-62834]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62491-62594]:Block[62731-62834]"
  }, {
    "left" : "out.write(afterCount > 1 ? iText : iFinalText);",
    "right" : "out.write(afterCount > 1 ? iText : iFinalText);",
    "info" : "ExpressionStatement[62521-62568]:ExpressionStatement[62761-62808]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62622-62687]:Block[62862-62927]"
  }, {
    "left" : "out.write(iText);",
    "right" : "out.write(iText);",
    "info" : "ExpressionStatement[62648-62665]:ExpressionStatement[62888-62905]"
  }, {
    "left" : "if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0)",
    "right" : "if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0)",
    "info" : "IfStatement[62725-62840]:IfStatement[62965-63080]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62791-62840]:Block[63031-63080]"
  }, {
    "left" : "out.write(iText);",
    "right" : "out.write(iText);",
    "info" : "ExpressionStatement[62809-62826]:ExpressionStatement[63049-63066]"
  }, {
    "left" : "after.printTo(out, period, locale);",
    "right" : "after.printTo(out, period, locale);",
    "info" : "ExpressionStatement[62853-62888]:ExpressionStatement[63093-63128]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62908-62914]:Modifier[63148-63154]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[62915-62918]:PrimitiveType[63155-63158]"
  }, {
    "left" : "parseInto",
    "right" : "parseInto",
    "info" : "SimpleName[62919-62928]:SimpleName[63159-63168]"
  }, {
    "left" : "ReadWritablePeriod period",
    "right" : "ReadWritablePeriod period",
    "info" : "SingleVariableDeclaration[62946-62971]:SingleVariableDeclaration[63186-63211]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[62973-62989]:SingleVariableDeclaration[63213-63229]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[63007-63019]:SingleVariableDeclaration[63247-63259]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[63021-63034]:SingleVariableDeclaration[63261-63274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63036-64538]:Block[63276-64778]"
  }, {
    "left" : "int oldPos = position;",
    "right" : "int oldPos = position;",
    "info" : "VariableDeclarationStatement[63050-63072]:VariableDeclarationStatement[63290-63312]"
  }, {
    "left" : "position = iBeforeParser.parseInto(period, periodStr, position, locale);",
    "right" : "position = iBeforeParser.parseInto(period, periodStr, position, locale);",
    "info" : "ExpressionStatement[63085-63157]:ExpressionStatement[63325-63397]"
  }, {
    "left" : "if (position < 0)",
    "right" : "if (position < 0)",
    "info" : "IfStatement[63171-63237]:IfStatement[63411-63477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63189-63237]:Block[63429-63477]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[63207-63223]:ReturnStatement[63447-63463]"
  }, {
    "left" : "boolean found = false;",
    "right" : "boolean found = false;",
    "info" : "VariableDeclarationStatement[63251-63273]:VariableDeclarationStatement[63491-63513]"
  }, {
    "left" : "if (position > oldPos)",
    "right" : "if (position > oldPos)",
    "info" : "IfStatement[63286-63996]:IfStatement[63526-64236]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63309-63996]:Block[63549-64236]"
  }, {
    "left" : "String[] parsedForms = iParsedForms;",
    "right" : "String[] parsedForms = iParsedForms;",
    "info" : "VariableDeclarationStatement[63370-63406]:VariableDeclarationStatement[63610-63646]"
  }, {
    "left" : "int length = parsedForms.length;",
    "right" : "int length = parsedForms.length;",
    "info" : "VariableDeclarationStatement[63423-63455]:VariableDeclarationStatement[63663-63695]"
  }, {
    "left" : "for (int i=0; i < length; i++)",
    "right" : "for (int i=0; i < length; i++)",
    "info" : "ForStatement[63472-63982]:ForStatement[63712-64222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63503-63982]:Block[63743-64222]"
  }, {
    "left" : "String parsedForm = parsedForms[i];",
    "right" : "String parsedForm = parsedForms[i];",
    "info" : "VariableDeclarationStatement[63525-63560]:VariableDeclarationStatement[63765-63800]"
  }, {
    "left" : "if ((parsedForm == null || parsedForm.length() == 0) ||\n                        periodStr.regionMatches\n                        (true, position, parsedForm, 0, parsedForm.length()))",
    "right" : "if ((parsedForm == null || parsedForm.length() == 0) ||\n                        periodStr.regionMatches\n                        (true, position, parsedForm, 0, parsedForm.length()))",
    "info" : "IfStatement[63581-63964]:IfStatement[63821-64204]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63763-63964]:Block[64003-64204]"
  }, {
    "left" : "position += (parsedForm == null ? 0 : parsedForm.length());",
    "right" : "position += (parsedForm == null ? 0 : parsedForm.length());",
    "info" : "ExpressionStatement[63814-63873]:ExpressionStatement[64054-64113]"
  }, {
    "left" : "found = true;",
    "right" : "found = true;",
    "info" : "ExpressionStatement[63898-63911]:ExpressionStatement[64138-64151]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[63936-63942]:BreakStatement[64176-64182]"
  }, {
    "left" : "oldPos = position;",
    "right" : "oldPos = position;",
    "info" : "ExpressionStatement[64010-64028]:ExpressionStatement[64250-64268]"
  }, {
    "left" : "position = iAfterParser.parseInto(period, periodStr, position, locale);",
    "right" : "position = iAfterParser.parseInto(period, periodStr, position, locale);",
    "info" : "ExpressionStatement[64041-64112]:ExpressionStatement[64281-64352]"
  }, {
    "left" : "if (position < 0)",
    "right" : "if (position < 0)",
    "info" : "IfStatement[64126-64192]:IfStatement[64366-64432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64144-64192]:Block[64384-64432]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[64162-64178]:ReturnStatement[64402-64418]"
  }, {
    "left" : "if (found && position == oldPos)",
    "right" : "if (found && position == oldPos)",
    "info" : "IfStatement[64206-64346]:IfStatement[64446-64586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64239-64346]:Block[64479-64586]"
  }, {
    "left" : "return ~oldPos;",
    "right" : "return ~oldPos;",
    "info" : "ReturnStatement[64317-64332]:ReturnStatement[64557-64572]"
  }, {
    "left" : "if (position > oldPos && !found && !iUseBefore)",
    "right" : "if (position > oldPos && !found && !iUseBefore)",
    "info" : "IfStatement[64360-64498]:IfStatement[64600-64738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64408-64498]:Block[64648-64738]"
  }, {
    "left" : "return ~oldPos;",
    "right" : "return ~oldPos;",
    "info" : "ReturnStatement[64469-64484]:ReturnStatement[64709-64724]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[64512-64528]:ReturnStatement[64752-64768]"
  }, {
    "left" : "Separator",
    "right" : "Separator",
    "info" : "SimpleType[64548-64557]:SimpleType[64788-64797]"
  }, {
    "left" : "finish",
    "right" : "finish",
    "info" : "SimpleName[64558-64564]:SimpleName[64798-64804]"
  }, {
    "left" : "PeriodPrinter afterPrinter",
    "right" : "PeriodPrinter afterPrinter",
    "info" : "SingleVariableDeclaration[64565-64591]:SingleVariableDeclaration[64805-64831]"
  }, {
    "left" : "PeriodParser afterParser",
    "right" : "PeriodParser afterParser",
    "info" : "SingleVariableDeclaration[64593-64617]:SingleVariableDeclaration[64833-64857]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64619-64737]:Block[64859-64977]"
  }, {
    "left" : "iAfterPrinter = afterPrinter;",
    "right" : "iAfterPrinter = afterPrinter;",
    "info" : "ExpressionStatement[64633-64662]:ExpressionStatement[64873-64902]"
  }, {
    "left" : "iAfterParser = afterParser;",
    "right" : "iAfterParser = afterParser;",
    "info" : "ExpressionStatement[64675-64702]:ExpressionStatement[64915-64942]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[64715-64727]:ReturnStatement[64955-64967]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[64926-64932]:Modifier[65166-65172]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[64933-64938]:TYPE_DECLARATION_KIND[65173-65178]"
  }, {
    "left" : "Composite",
    "right" : "Composite",
    "info" : "SimpleName[65116-65125]:SimpleName[65356-65365]"
  }, {
    "left" : "List<Object> elementPairs",
    "right" : "List<Object> elementPairs",
    "info" : "SingleVariableDeclaration[65126-65151]:SingleVariableDeclaration[65366-65391]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65153-65800]:Block[65393-66040]"
  }, {
    "left" : "List<Object> printerList = new ArrayList<Object>();",
    "right" : "List<Object> printerList = new ArrayList<Object>();",
    "info" : "VariableDeclarationStatement[65167-65218]:VariableDeclarationStatement[65407-65458]"
  }, {
    "left" : "List<Object> parserList = new ArrayList<Object>();",
    "right" : "List<Object> parserList = new ArrayList<Object>();",
    "info" : "VariableDeclarationStatement[65231-65281]:VariableDeclarationStatement[65471-65521]"
  }, {
    "left" : "decompose(elementPairs, printerList, parserList);",
    "right" : "decompose(elementPairs, printerList, parserList);",
    "info" : "ExpressionStatement[65295-65344]:ExpressionStatement[65535-65584]"
  }, {
    "left" : "if (printerList.size() <= 0)",
    "right" : "if (printerList.size() <= 0)",
    "info" : "IfStatement[65358-65570]:IfStatement[65598-65810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65387-65436]:Block[65627-65676]"
  }, {
    "left" : "iPrinters = null;",
    "right" : "iPrinters = null;",
    "info" : "ExpressionStatement[65405-65422]:ExpressionStatement[65645-65662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65442-65570]:Block[65682-65810]"
  }, {
    "left" : "iPrinters = printerList.toArray(\n                        new PeriodPrinter[printerList.size()]);",
    "right" : "iPrinters = printerList.toArray(\n                        new PeriodPrinter[printerList.size()]);",
    "info" : "ExpressionStatement[65460-65556]:ExpressionStatement[65700-65796]"
  }, {
    "left" : "if (parserList.size() <= 0)",
    "right" : "if (parserList.size() <= 0)",
    "info" : "IfStatement[65584-65790]:IfStatement[65824-66030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65612-65660]:Block[65852-65900]"
  }, {
    "left" : "iParsers = null;",
    "right" : "iParsers = null;",
    "info" : "ExpressionStatement[65630-65646]:ExpressionStatement[65870-65886]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65666-65790]:Block[65906-66030]"
  }, {
    "left" : "iParsers = parserList.toArray(\n                        new PeriodParser[parserList.size()]);",
    "right" : "iParsers = parserList.toArray(\n                        new PeriodParser[parserList.size()]);",
    "info" : "ExpressionStatement[65684-65776]:ExpressionStatement[65924-66016]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[65810-65816]:Modifier[66050-66056]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[65817-65820]:PrimitiveType[66057-66060]"
  }, {
    "left" : "countFieldsToPrint",
    "right" : "countFieldsToPrint",
    "info" : "SimpleName[65821-65839]:SimpleName[66061-66079]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[65840-65861]:SingleVariableDeclaration[66080-66101]"
  }, {
    "left" : "int stopAt",
    "right" : "int stopAt",
    "info" : "SingleVariableDeclaration[65863-65873]:SingleVariableDeclaration[66103-66113]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[65875-65888]:SingleVariableDeclaration[66115-66128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65890-66172]:Block[66130-66412]"
  }, {
    "left" : "int sum = 0;",
    "right" : "int sum = 0;",
    "info" : "VariableDeclarationStatement[65904-65916]:VariableDeclarationStatement[66144-66156]"
  }, {
    "left" : "PeriodPrinter[] printers = iPrinters;",
    "right" : "PeriodPrinter[] printers = iPrinters;",
    "info" : "VariableDeclarationStatement[65929-65966]:VariableDeclarationStatement[66169-66206]"
  }, {
    "left" : "for (int i=printers.length; sum < stopAt && --i>=0)",
    "right" : "for (int i=printers.length; sum < stopAt && --i>=0)",
    "info" : "ForStatement[65979-66138]:ForStatement[66219-66378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66033-66138]:Block[66273-66378]"
  }, {
    "left" : "sum += printers[i].countFieldsToPrint(period, Integer.MAX_VALUE, locale);",
    "right" : "sum += printers[i].countFieldsToPrint(period, Integer.MAX_VALUE, locale);",
    "info" : "ExpressionStatement[66051-66124]:ExpressionStatement[66291-66364]"
  }, {
    "left" : "return sum;",
    "right" : "return sum;",
    "info" : "ReturnStatement[66151-66162]:ReturnStatement[66391-66402]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[66182-66188]:Modifier[66422-66428]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[66189-66192]:PrimitiveType[66429-66432]"
  }, {
    "left" : "calculatePrintedLength",
    "right" : "calculatePrintedLength",
    "info" : "SimpleName[66193-66215]:SimpleName[66433-66455]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[66216-66237]:SingleVariableDeclaration[66456-66477]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[66239-66252]:SingleVariableDeclaration[66479-66492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66254-66505]:Block[66494-66745]"
  }, {
    "left" : "int sum = 0;",
    "right" : "int sum = 0;",
    "info" : "VariableDeclarationStatement[66268-66280]:VariableDeclarationStatement[66508-66520]"
  }, {
    "left" : "PeriodPrinter[] printers = iPrinters;",
    "right" : "PeriodPrinter[] printers = iPrinters;",
    "info" : "VariableDeclarationStatement[66293-66330]:VariableDeclarationStatement[66533-66570]"
  }, {
    "left" : "for (int i=printers.length; --i>=0)",
    "right" : "for (int i=printers.length; --i>=0)",
    "info" : "ForStatement[66343-66471]:ForStatement[66583-66711]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66381-66471]:Block[66621-66711]"
  }, {
    "left" : "sum += printers[i].calculatePrintedLength(period, locale);",
    "right" : "sum += printers[i].calculatePrintedLength(period, locale);",
    "info" : "ExpressionStatement[66399-66457]:ExpressionStatement[66639-66697]"
  }, {
    "left" : "return sum;",
    "right" : "return sum;",
    "info" : "ReturnStatement[66484-66495]:ReturnStatement[66724-66735]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[66515-66521]:Modifier[66755-66761]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[66522-66526]:PrimitiveType[66762-66766]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[66527-66534]:SimpleName[66767-66774]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[66535-66551]:SingleVariableDeclaration[66775-66791]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[66553-66574]:SingleVariableDeclaration[66793-66814]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[66576-66589]:SingleVariableDeclaration[66816-66829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66591-66803]:Block[66831-67043]"
  }, {
    "left" : "PeriodPrinter[] printers = iPrinters;",
    "right" : "PeriodPrinter[] printers = iPrinters;",
    "info" : "VariableDeclarationStatement[66605-66642]:VariableDeclarationStatement[66845-66882]"
  }, {
    "left" : "int len = printers.length;",
    "right" : "int len = printers.length;",
    "info" : "VariableDeclarationStatement[66655-66681]:VariableDeclarationStatement[66895-66921]"
  }, {
    "left" : "for (int i=0; i<len; i++)",
    "right" : "for (int i=0; i<len; i++)",
    "info" : "ForStatement[66694-66793]:ForStatement[66934-67033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66720-66793]:Block[66960-67033]"
  }, {
    "left" : "printers[i].printTo(buf, period, locale);",
    "right" : "printers[i].printTo(buf, period, locale);",
    "info" : "ExpressionStatement[66738-66779]:ExpressionStatement[66978-67019]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[66813-66819]:Modifier[67053-67059]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[66820-66824]:PrimitiveType[67060-67064]"
  }, {
    "left" : "printTo",
    "right" : "printTo",
    "info" : "SimpleName[66825-66832]:SimpleName[67065-67072]"
  }, {
    "left" : "Writer out",
    "right" : "Writer out",
    "info" : "SingleVariableDeclaration[66833-66843]:SingleVariableDeclaration[67073-67083]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[66845-66866]:SingleVariableDeclaration[67085-67106]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[66868-66881]:SingleVariableDeclaration[67108-67121]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[66890-66901]:SimpleType[67130-67141]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66902-67114]:Block[67142-67354]"
  }, {
    "left" : "PeriodPrinter[] printers = iPrinters;",
    "right" : "PeriodPrinter[] printers = iPrinters;",
    "info" : "VariableDeclarationStatement[66916-66953]:VariableDeclarationStatement[67156-67193]"
  }, {
    "left" : "int len = printers.length;",
    "right" : "int len = printers.length;",
    "info" : "VariableDeclarationStatement[66966-66992]:VariableDeclarationStatement[67206-67232]"
  }, {
    "left" : "for (int i=0; i<len; i++)",
    "right" : "for (int i=0; i<len; i++)",
    "info" : "ForStatement[67005-67104]:ForStatement[67245-67344]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67031-67104]:Block[67271-67344]"
  }, {
    "left" : "printers[i].printTo(out, period, locale);",
    "right" : "printers[i].printTo(out, period, locale);",
    "info" : "ExpressionStatement[67049-67090]:ExpressionStatement[67289-67330]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[67124-67130]:Modifier[67364-67370]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[67131-67134]:PrimitiveType[67371-67374]"
  }, {
    "left" : "parseInto",
    "right" : "parseInto",
    "info" : "SimpleName[67135-67144]:SimpleName[67375-67384]"
  }, {
    "left" : "ReadWritablePeriod period",
    "right" : "ReadWritablePeriod period",
    "info" : "SingleVariableDeclaration[67162-67187]:SingleVariableDeclaration[67402-67427]"
  }, {
    "left" : "String periodStr",
    "right" : "String periodStr",
    "info" : "SingleVariableDeclaration[67189-67205]:SingleVariableDeclaration[67429-67445]"
  }, {
    "left" : "int position",
    "right" : "int position",
    "info" : "SingleVariableDeclaration[67223-67235]:SingleVariableDeclaration[67463-67475]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[67237-67250]:SingleVariableDeclaration[67477-67490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67252-67643]:Block[67492-67883]"
  }, {
    "left" : "PeriodParser[] parsers = iParsers;",
    "right" : "PeriodParser[] parsers = iParsers;",
    "info" : "VariableDeclarationStatement[67266-67300]:VariableDeclarationStatement[67506-67540]"
  }, {
    "left" : "if (parsers == null)",
    "right" : "if (parsers == null)",
    "info" : "IfStatement[67313-67408]:IfStatement[67553-67648]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67334-67408]:Block[67574-67648]"
  }, {
    "left" : "throw new UnsupportedOperationException();",
    "right" : "throw new UnsupportedOperationException();",
    "info" : "ThrowStatement[67352-67394]:ThrowStatement[67592-67634]"
  }, {
    "left" : "int len = parsers.length;",
    "right" : "int len = parsers.length;",
    "info" : "VariableDeclarationStatement[67422-67447]:VariableDeclarationStatement[67662-67687]"
  }, {
    "left" : "for (int i=0; i<len && position >= 0; i++)",
    "right" : "for (int i=0; i<len && position >= 0; i++)",
    "info" : "ForStatement[67460-67604]:ForStatement[67700-67844]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67503-67604]:Block[67743-67844]"
  }, {
    "left" : "position = parsers[i].parseInto(period, periodStr, position, locale);",
    "right" : "position = parsers[i].parseInto(period, periodStr, position, locale);",
    "info" : "ExpressionStatement[67521-67590]:ExpressionStatement[67761-67830]"
  }, {
    "left" : "return position;",
    "right" : "return position;",
    "info" : "ReturnStatement[67617-67633]:ReturnStatement[67857-67873]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[67653-67660]:Modifier[67893-67900]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[67661-67665]:PrimitiveType[67901-67905]"
  }, {
    "left" : "decompose",
    "right" : "decompose",
    "info" : "SimpleName[67666-67675]:SimpleName[67906-67915]"
  }, {
    "left" : "List<Object> elementPairs",
    "right" : "List<Object> elementPairs",
    "info" : "SingleVariableDeclaration[67676-67701]:SingleVariableDeclaration[67916-67941]"
  }, {
    "left" : "List<Object> printerList",
    "right" : "List<Object> printerList",
    "info" : "SingleVariableDeclaration[67703-67727]:SingleVariableDeclaration[67943-67967]"
  }, {
    "left" : "List<Object> parserList",
    "right" : "List<Object> parserList",
    "info" : "SingleVariableDeclaration[67729-67752]:SingleVariableDeclaration[67969-67992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67754-68601]:Block[67994-68841]"
  }, {
    "left" : "int size = elementPairs.size();",
    "right" : "int size = elementPairs.size();",
    "info" : "VariableDeclarationStatement[67768-67799]:VariableDeclarationStatement[68008-68039]"
  }, {
    "left" : "for (int i=0; i<size; i+=2)",
    "right" : "for (int i=0; i<size; i+=2)",
    "info" : "ForStatement[67812-68591]:ForStatement[68052-68831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67840-68591]:Block[68080-68831]"
  }, {
    "left" : "Object element = elementPairs.get(i);",
    "right" : "Object element = elementPairs.get(i);",
    "info" : "VariableDeclarationStatement[67858-67895]:VariableDeclarationStatement[68098-68135]"
  }, {
    "left" : "if (element instanceof PeriodPrinter)",
    "right" : "if (element instanceof PeriodPrinter)",
    "info" : "IfStatement[67912-68212]:IfStatement[68152-68452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67950-68212]:Block[68190-68452]"
  }, {
    "left" : "if (element instanceof Composite)",
    "right" : "if (element instanceof Composite)",
    "info" : "IfStatement[67972-68194]:IfStatement[68212-68434]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68006-68115]:Block[68246-68355]"
  }, {
    "left" : "addArrayToList(printerList, ((Composite) element).iPrinters);",
    "right" : "addArrayToList(printerList, ((Composite) element).iPrinters);",
    "info" : "ExpressionStatement[68032-68093]:ExpressionStatement[68272-68333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68121-68194]:Block[68361-68434]"
  }, {
    "left" : "printerList.add(element);",
    "right" : "printerList.add(element);",
    "info" : "ExpressionStatement[68147-68172]:ExpressionStatement[68387-68412]"
  }, {
    "left" : "element = elementPairs.get(i + 1);",
    "right" : "element = elementPairs.get(i + 1);",
    "info" : "ExpressionStatement[68230-68264]:ExpressionStatement[68470-68504]"
  }, {
    "left" : "if (element instanceof PeriodParser)",
    "right" : "if (element instanceof PeriodParser)",
    "info" : "IfStatement[68281-68577]:IfStatement[68521-68817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68318-68577]:Block[68558-68817]"
  }, {
    "left" : "if (element instanceof Composite)",
    "right" : "if (element instanceof Composite)",
    "info" : "IfStatement[68340-68559]:IfStatement[68580-68799]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68374-68481]:Block[68614-68721]"
  }, {
    "left" : "addArrayToList(parserList, ((Composite) element).iParsers);",
    "right" : "addArrayToList(parserList, ((Composite) element).iParsers);",
    "info" : "ExpressionStatement[68400-68459]:ExpressionStatement[68640-68699]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68487-68559]:Block[68727-68799]"
  }, {
    "left" : "parserList.add(element);",
    "right" : "parserList.add(element);",
    "info" : "ExpressionStatement[68513-68537]:ExpressionStatement[68753-68777]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[68611-68618]:Modifier[68851-68858]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[68619-68623]:PrimitiveType[68859-68863]"
  }, {
    "left" : "addArrayToList",
    "right" : "addArrayToList",
    "info" : "SimpleName[68624-68638]:SimpleName[68864-68878]"
  }, {
    "left" : "List<Object> list",
    "right" : "List<Object> list",
    "info" : "SingleVariableDeclaration[68639-68656]:SingleVariableDeclaration[68879-68896]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[68658-68672]:SingleVariableDeclaration[68898-68912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68674-68843]:Block[68914-69083]"
  }, {
    "left" : "if (array != null)",
    "right" : "if (array != null)",
    "info" : "IfStatement[68688-68833]:IfStatement[68928-69073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68707-68833]:Block[68947-69073]"
  }, {
    "left" : "for (int i=0; i<array.length; i++)",
    "right" : "for (int i=0; i<array.length; i++)",
    "info" : "ForStatement[68725-68819]:ForStatement[68965-69059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68760-68819]:Block[69000-69059]"
  }, {
    "left" : "list.add(array[i]);",
    "right" : "list.add(array[i]);",
    "info" : "ExpressionStatement[68782-68801]:ExpressionStatement[69022-69041]"
  } ]
}