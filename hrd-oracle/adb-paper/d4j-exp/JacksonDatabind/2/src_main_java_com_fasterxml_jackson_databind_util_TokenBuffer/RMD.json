{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "TypeDeclaration[456-55843]:TypeDeclaration[456-56398]"
    }, {
      "left" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "right" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "info" : "FieldDeclaration[1199-1295]:FieldDeclaration[1199-1295]"
    }, {
      "left" : "protected ObjectCodec _objectCodec;",
      "right" : "protected ObjectCodec _objectCodec;",
      "info" : "FieldDeclaration[1466-1669]:FieldDeclaration[1466-1669]"
    }, {
      "left" : "protected int _generatorFeatures;",
      "right" : "protected int _generatorFeatures;",
      "info" : "FieldDeclaration[1675-1928]:FieldDeclaration[1675-1928]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[1934-1960]:FieldDeclaration[1934-1960]"
    }, {
      "left" : "protected boolean _hasNativeTypeIds;",
      "right" : "protected boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[1966-2036]:FieldDeclaration[1966-2036]"
    }, {
      "left" : "protected boolean _hasNativeObjectIds;",
      "right" : "protected boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[2042-2114]:FieldDeclaration[2042-2114]"
    }, {
      "left" : "protected boolean _mayHaveNativeIds;",
      "right" : "protected boolean _mayHaveNativeIds;",
      "info" : "FieldDeclaration[2120-2190]:FieldDeclaration[2120-2190]"
    }, {
      "left" : "protected Segment _first;",
      "right" : "protected Segment _first;",
      "info" : "FieldDeclaration[2373-2465]:FieldDeclaration[2373-2465]"
    }, {
      "left" : "protected Segment _last;",
      "right" : "protected Segment _last;",
      "info" : "FieldDeclaration[2471-2597]:FieldDeclaration[2471-2597]"
    }, {
      "left" : "protected int _appendAt;",
      "right" : "protected int _appendAt;",
      "info" : "FieldDeclaration[2607-2683]:FieldDeclaration[2607-2683]"
    }, {
      "left" : "protected Object _typeId;",
      "right" : "protected Object _typeId;",
      "info" : "FieldDeclaration[2689-2848]:FieldDeclaration[2689-2848]"
    }, {
      "left" : "protected Object _objectId;",
      "right" : "protected Object _objectId;",
      "info" : "FieldDeclaration[2854-3017]:FieldDeclaration[2854-3017]"
    }, {
      "left" : "protected boolean _hasNativeId = false;",
      "right" : "protected boolean _hasNativeId = false;",
      "info" : "FieldDeclaration[3023-3143]:FieldDeclaration[3023-3143]"
    }, {
      "left" : "protected JsonWriteContext _writeContext;",
      "right" : "protected JsonWriteContext _writeContext;",
      "info" : "FieldDeclaration[3313-3354]:FieldDeclaration[3313-3354]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec)",
      "right" : "public TokenBuffer(ObjectCodec codec)",
      "info" : "MethodDeclaration[3522-3923]:MethodDeclaration[3522-3923]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "right" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "info" : "MethodDeclaration[3929-4740]:MethodDeclaration[3929-4740]"
    }, {
      "left" : "public TokenBuffer(JsonParser jp)",
      "right" : "public TokenBuffer(JsonParser jp)",
      "info" : "MethodDeclaration[4746-5263]:MethodDeclaration[4746-5263]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[5273-5393]:MethodDeclaration[5273-5393]"
    }, {
      "left" : "public JsonParser asParser()",
      "right" : "public JsonParser asParser()",
      "info" : "MethodDeclaration[5399-5915]:MethodDeclaration[5399-5915]"
    }, {
      "left" : "public JsonParser asParser(ObjectCodec codec)",
      "right" : "public JsonParser asParser(ObjectCodec codec)",
      "info" : "MethodDeclaration[5921-6599]:MethodDeclaration[5921-6599]"
    }, {
      "left" : "public JsonParser asParser(JsonParser src)",
      "right" : "public JsonParser asParser(JsonParser src)",
      "info" : "MethodDeclaration[6605-6942]:MethodDeclaration[6605-6942]"
    }, {
      "left" : "public JsonToken firstToken()",
      "right" : "public JsonToken firstToken()",
      "info" : "MethodDeclaration[7124-7257]:MethodDeclaration[7124-7257]"
    }, {
      "left" : "public TokenBuffer append(TokenBuffer other)\n        throws IOException, JsonGenerationException",
      "right" : "public TokenBuffer append(TokenBuffer other)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[7478-8331]:MethodDeclaration[7478-8331]"
    }, {
      "left" : "public void serialize(JsonGenerator jgen)\n        throws IOException, JsonGenerationException",
      "right" : "public void serialize(JsonGenerator jgen)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[8341-13099]:MethodDeclaration[8341-13099]"
    }, {
      "left" : "public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException",
      "right" : "public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[13105-13392]:MethodDeclaration[13105-13392]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[13402-14981]:MethodDeclaration[13402-14981]"
    }, {
      "left" : "private final void _appendNativeIds(StringBuilder sb)",
      "right" : "private final void _appendNativeIds(StringBuilder sb)",
      "info" : "MethodDeclaration[14987-15408]:MethodDeclaration[14987-15408]"
    }, {
      "left" : "public JsonGenerator enable(Feature f)",
      "right" : "public JsonGenerator enable(Feature f)",
      "info" : "MethodDeclaration[15613-15737]:MethodDeclaration[15613-15737]"
    }, {
      "left" : "public JsonGenerator disable(Feature f)",
      "right" : "public JsonGenerator disable(Feature f)",
      "info" : "MethodDeclaration[15743-15869]:MethodDeclaration[15743-15869]"
    }, {
      "left" : "public boolean isEnabled(Feature f)",
      "right" : "public boolean isEnabled(Feature f)",
      "info" : "MethodDeclaration[15956-16069]:MethodDeclaration[15956-16069]"
    }, {
      "left" : "public int getFeatureMask()",
      "right" : "public int getFeatureMask()",
      "info" : "MethodDeclaration[16075-16159]:MethodDeclaration[16075-16159]"
    }, {
      "left" : "public JsonGenerator setFeatureMask(int mask)",
      "right" : "public JsonGenerator setFeatureMask(int mask)",
      "info" : "MethodDeclaration[16165-16288]:MethodDeclaration[16165-16288]"
    }, {
      "left" : "public JsonGenerator useDefaultPrettyPrinter()",
      "right" : "public JsonGenerator useDefaultPrettyPrinter()",
      "info" : "MethodDeclaration[16298-16421]:MethodDeclaration[16298-16421]"
    }, {
      "left" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "right" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "info" : "MethodDeclaration[16427-16542]:MethodDeclaration[16427-16542]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[16548-16616]:MethodDeclaration[16548-16616]"
    }, {
      "left" : "public final JsonWriteContext getOutputContext()",
      "right" : "public final JsonWriteContext getOutputContext()",
      "info" : "MethodDeclaration[16622-16710]:MethodDeclaration[16622-16710]"
    }, {
      "left" : "public boolean canWriteBinaryNatively()",
      "right" : "public boolean canWriteBinaryNatively()",
      "info" : "MethodDeclaration[16926-17088]:MethodDeclaration[16926-17088]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[17305-17371]:MethodDeclaration[17305-17371]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[17377-17461]:MethodDeclaration[17377-17461]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[17467-17526]:MethodDeclaration[17467-17526]"
    }, {
      "left" : "public final void writeStartArray()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeStartArray()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[17739-17957]:MethodDeclaration[17739-17957]"
    }, {
      "left" : "public final void writeEndArray()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeEndArray()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[17963-18312]:MethodDeclaration[17963-18312]"
    }, {
      "left" : "public final void writeStartObject()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeStartObject()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[18318-18539]:MethodDeclaration[18318-18539]"
    }, {
      "left" : "public final void writeEndObject()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeEndObject()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[18545-18896]:MethodDeclaration[18545-18896]"
    }, {
      "left" : "public final void writeFieldName(String name)\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeFieldName(String name)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[18902-19114]:MethodDeclaration[18902-19114]"
    }, {
      "left" : "public void writeFieldName(SerializableString name)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeFieldName(SerializableString name)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[19120-19349]:MethodDeclaration[19120-19349]"
    }, {
      "left" : "public void writeString(String text) throws IOException,JsonGenerationException",
      "right" : "public void writeString(String text) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[19563-19795]:MethodDeclaration[19563-19795]"
    }, {
      "left" : "public void writeString(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeString(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[19801-19976]:MethodDeclaration[19801-19976]"
    }, {
      "left" : "public void writeString(SerializableString text) throws IOException, JsonGenerationException",
      "right" : "public void writeString(SerializableString text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[19982-20227]:MethodDeclaration[19982-20227]"
    }, {
      "left" : "public void writeRawUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeRawUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20237-20488]:MethodDeclaration[20237-20488]"
    }, {
      "left" : "public void writeUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20494-20742]:MethodDeclaration[20494-20742]"
    }, {
      "left" : "public void writeRaw(String text) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(String text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20748-20886]:MethodDeclaration[20748-20886]"
    }, {
      "left" : "public void writeRaw(String text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(String text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20892-21051]:MethodDeclaration[20892-21051]"
    }, {
      "left" : "public void writeRaw(SerializableString text) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(SerializableString text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21057-21207]:MethodDeclaration[21057-21207]"
    }, {
      "left" : "public void writeRaw(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21217-21376]:MethodDeclaration[21217-21376]"
    }, {
      "left" : "public void writeRaw(char c) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(char c) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21382-21515]:MethodDeclaration[21382-21515]"
    }, {
      "left" : "public void writeRawValue(String text) throws IOException, JsonGenerationException",
      "right" : "public void writeRawValue(String text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21521-21664]:MethodDeclaration[21521-21664]"
    }, {
      "left" : "public void writeRawValue(String text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRawValue(String text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21670-21834]:MethodDeclaration[21670-21834]"
    }, {
      "left" : "public void writeRawValue(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRawValue(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21840-22004]:MethodDeclaration[21840-22004]"
    }, {
      "left" : "public void writeNumber(short i) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(short i) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22222-22383]:MethodDeclaration[22222-22383]"
    }, {
      "left" : "public void writeNumber(int i) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(int i) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22389-22550]:MethodDeclaration[22389-22550]"
    }, {
      "left" : "public void writeNumber(long l) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(long l) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22556-22715]:MethodDeclaration[22556-22715]"
    }, {
      "left" : "public void writeNumber(double d) throws IOException,JsonGenerationException",
      "right" : "public void writeNumber(double d) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[22721-22885]:MethodDeclaration[22721-22885]"
    }, {
      "left" : "public void writeNumber(float f) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(float f) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22891-23054]:MethodDeclaration[22891-23054]"
    }, {
      "left" : "public void writeNumber(BigDecimal dec) throws IOException,JsonGenerationException",
      "right" : "public void writeNumber(BigDecimal dec) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[23060-23299]:MethodDeclaration[23060-23299]"
    }, {
      "left" : "public void writeNumber(BigInteger v) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(BigInteger v) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[23305-23537]:MethodDeclaration[23305-23537]"
    }, {
      "left" : "public void writeNumber(String encodedValue) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(String encodedValue) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[23543-23854]:MethodDeclaration[23543-23854]"
    }, {
      "left" : "public void writeBoolean(boolean state) throws IOException,JsonGenerationException",
      "right" : "public void writeBoolean(boolean state) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[23860-24035]:MethodDeclaration[23860-24035]"
    }, {
      "left" : "public void writeNull() throws IOException, JsonGenerationException",
      "right" : "public void writeNull() throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[24041-24169]:MethodDeclaration[24041-24169]"
    }, {
      "left" : "public void writeObject(Object value) throws IOException",
      "right" : "public void writeObject(Object value) throws IOException",
      "info" : "MethodDeclaration[24388-24796]:MethodDeclaration[24388-25157]"
    }, {
      "left" : "public void writeTree(TreeNode node) throws IOException",
      "right" : "public void writeTree(TreeNode node) throws IOException",
      "info" : "MethodDeclaration[24802-25003]:MethodDeclaration[25163-25558]"
    }, {
      "left" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[25199-25821]:MethodDeclaration[25754-26376]"
    }, {
      "left" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "right" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "info" : "MethodDeclaration[25827-26266]:MethodDeclaration[26382-26821]"
    }, {
      "left" : "public boolean canWriteTypeId()",
      "right" : "public boolean canWriteTypeId()",
      "info" : "MethodDeclaration[26466-26553]:MethodDeclaration[27021-27108]"
    }, {
      "left" : "public boolean canWriteObjectId()",
      "right" : "public boolean canWriteObjectId()",
      "info" : "MethodDeclaration[26559-26650]:MethodDeclaration[27114-27205]"
    }, {
      "left" : "public void writeTypeId(Object id)",
      "right" : "public void writeTypeId(Object id)",
      "info" : "MethodDeclaration[26660-26767]:MethodDeclaration[27215-27322]"
    }, {
      "left" : "public void writeObjectId(Object id)",
      "right" : "public void writeObjectId(Object id)",
      "info" : "MethodDeclaration[26777-26888]:MethodDeclaration[27332-27443]"
    }, {
      "left" : "public void copyCurrentEvent(JsonParser jp) throws IOException, JsonProcessingException",
      "right" : "public void copyCurrentEvent(JsonParser jp) throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[27093-29183]:MethodDeclaration[27648-29738]"
    }, {
      "left" : "public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException",
      "right" : "public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[29193-30320]:MethodDeclaration[29748-30875]"
    }, {
      "left" : "private final void _checkNativeIds(JsonParser jp) throws IOException, JsonProcessingException",
      "right" : "private final void _checkNativeIds(JsonParser jp) throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[30331-30626]:MethodDeclaration[30886-31181]"
    }, {
      "left" : "protected final void _append(JsonToken type)",
      "right" : "protected final void _append(JsonToken type)",
      "info" : "MethodDeclaration[30804-31175]:MethodDeclaration[31359-31730]"
    }, {
      "left" : "protected final void _append(JsonToken type, Object value)",
      "right" : "protected final void _append(JsonToken type, Object value)",
      "info" : "MethodDeclaration[31181-31551]:MethodDeclaration[31736-32106]"
    }, {
      "left" : "protected final void _appendRaw(int rawType, Object value)",
      "right" : "protected final void _appendRaw(int rawType, Object value)",
      "info" : "MethodDeclaration[31557-31939]:MethodDeclaration[32112-32494]"
    }, {
      "left" : "protected void _reportUnsupportedOperation()",
      "right" : "protected void _reportUnsupportedOperation()",
      "info" : "MethodDeclaration[31945-32110]:MethodDeclaration[32500-32665]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "TypeDeclaration[32290-47960]:TypeDeclaration[32845-48515]"
    }, {
      "left" : "protected ObjectCodec _codec;",
      "right" : "protected ObjectCodec _codec;",
      "info" : "FieldDeclaration[32559-32588]:FieldDeclaration[33114-33143]"
    }, {
      "left" : "protected final boolean _hasNativeTypeIds;",
      "right" : "protected final boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[32598-32686]:FieldDeclaration[33153-33241]"
    }, {
      "left" : "protected final boolean _hasNativeObjectIds;",
      "right" : "protected final boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[32696-32786]:FieldDeclaration[33251-33341]"
    }, {
      "left" : "protected final boolean _hasNativeIds;",
      "right" : "protected final boolean _hasNativeIds;",
      "info" : "FieldDeclaration[32796-32834]:FieldDeclaration[33351-33389]"
    }, {
      "left" : "protected Segment _segment;",
      "right" : "protected Segment _segment;",
      "info" : "FieldDeclaration[33037-33124]:FieldDeclaration[33592-33679]"
    }, {
      "left" : "protected int _segmentPtr;",
      "right" : "protected int _segmentPtr;",
      "info" : "FieldDeclaration[33134-33243]:FieldDeclaration[33689-33798]"
    }, {
      "left" : "protected JsonReadContext _parsingContext;",
      "right" : "protected JsonReadContext _parsingContext;",
      "info" : "FieldDeclaration[33253-33446]:FieldDeclaration[33808-34001]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[33464-33490]:FieldDeclaration[34019-34045]"
    }, {
      "left" : "protected transient ByteArrayBuilder _byteBuilder;",
      "right" : "protected transient ByteArrayBuilder _byteBuilder;",
      "info" : "FieldDeclaration[33500-33550]:FieldDeclaration[34055-34105]"
    }, {
      "left" : "protected JsonLocation _location = null;",
      "right" : "protected JsonLocation _location = null;",
      "info" : "FieldDeclaration[33560-33600]:FieldDeclaration[34115-34155]"
    }, {
      "left" : "// since 2.3\n        protected Parser(Segment firstSeg, ObjectCodec codec)",
      "right" : "// since 2.3\n        protected Parser(Segment firstSeg, ObjectCodec codec)",
      "info" : "MethodDeclaration[33808-33955]:MethodDeclaration[34363-34510]"
    }, {
      "left" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "right" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "info" : "MethodDeclaration[33965-34540]:MethodDeclaration[34520-35095]"
    }, {
      "left" : "public void setLocation(JsonLocation l)",
      "right" : "public void setLocation(JsonLocation l)",
      "info" : "MethodDeclaration[34550-34628]:MethodDeclaration[35105-35183]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[34646-34712]:MethodDeclaration[35201-35267]"
    }, {
      "left" : "public void setCodec(ObjectCodec c)",
      "right" : "public void setCodec(ObjectCodec c)",
      "info" : "MethodDeclaration[34722-34791]:MethodDeclaration[35277-35346]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[34801-34933]:MethodDeclaration[35356-35488]"
    }, {
      "left" : "public JsonToken peekNextToken()\n            throws IOException, JsonParseException",
      "right" : "public JsonToken peekNextToken()\n            throws IOException, JsonParseException",
      "info" : "MethodDeclaration[35153-35625]:MethodDeclaration[35708-36180]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[35839-35981]:MethodDeclaration[36394-36536]"
    }, {
      "left" : "public JsonToken nextToken() throws IOException, JsonParseException",
      "right" : "public JsonToken nextToken() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[36192-37842]:MethodDeclaration[36747-38397]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[37852-37915]:MethodDeclaration[38407-38470]"
    }, {
      "left" : "public JsonStreamContext getParsingContext()",
      "right" : "public JsonStreamContext getParsingContext()",
      "info" : "MethodDeclaration[38132-38222]:MethodDeclaration[38687-38777]"
    }, {
      "left" : "public JsonLocation getTokenLocation()",
      "right" : "public JsonLocation getTokenLocation()",
      "info" : "MethodDeclaration[38232-38321]:MethodDeclaration[38787-38876]"
    }, {
      "left" : "public JsonLocation getCurrentLocation()",
      "right" : "public JsonLocation getCurrentLocation()",
      "info" : "MethodDeclaration[38331-38471]:MethodDeclaration[38886-39026]"
    }, {
      "left" : "public String getCurrentName()",
      "right" : "public String getCurrentName()",
      "info" : "MethodDeclaration[38481-38574]:MethodDeclaration[39036-39129]"
    }, {
      "left" : "public void overrideCurrentName(String name)",
      "right" : "public void overrideCurrentName(String name)",
      "info" : "MethodDeclaration[38584-39113]:MethodDeclaration[39139-39668]"
    }, {
      "left" : "public String getText()",
      "right" : "public String getText()",
      "info" : "MethodDeclaration[39356-40159]:MethodDeclaration[39911-40714]"
    }, {
      "left" : "public char[] getTextCharacters()",
      "right" : "public char[] getTextCharacters()",
      "info" : "MethodDeclaration[40169-40329]:MethodDeclaration[40724-40884]"
    }, {
      "left" : "public int getTextLength()",
      "right" : "public int getTextLength()",
      "info" : "MethodDeclaration[40339-40484]:MethodDeclaration[40894-41039]"
    }, {
      "left" : "public int getTextOffset()",
      "right" : "public int getTextOffset()",
      "info" : "MethodDeclaration[40494-40552]:MethodDeclaration[41049-41107]"
    }, {
      "left" : "public boolean hasTextCharacters()",
      "right" : "public boolean hasTextCharacters()",
      "info" : "MethodDeclaration[40562-40707]:MethodDeclaration[41117-41262]"
    }, {
      "left" : "public BigInteger getBigIntegerValue() throws IOException, JsonParseException",
      "right" : "public BigInteger getBigIntegerValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[40945-41460]:MethodDeclaration[41500-42015]"
    }, {
      "left" : "public BigDecimal getDecimalValue() throws IOException, JsonParseException",
      "right" : "public BigDecimal getDecimalValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[41470-42068]:MethodDeclaration[42025-42623]"
    }, {
      "left" : "public double getDoubleValue() throws IOException, JsonParseException",
      "right" : "public double getDoubleValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42078-42228]:MethodDeclaration[42633-42783]"
    }, {
      "left" : "public float getFloatValue() throws IOException, JsonParseException",
      "right" : "public float getFloatValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42238-42385]:MethodDeclaration[42793-42940]"
    }, {
      "left" : "public int getIntValue() throws IOException, JsonParseException",
      "right" : "public int getIntValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42395-42718]:MethodDeclaration[42950-43273]"
    }, {
      "left" : "public long getLongValue() throws IOException, JsonParseException",
      "right" : "public long getLongValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42728-42872]:MethodDeclaration[43283-43427]"
    }, {
      "left" : "public NumberType getNumberType() throws IOException, JsonParseException",
      "right" : "public NumberType getNumberType() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42882-43530]:MethodDeclaration[43437-44085]"
    }, {
      "left" : "public final Number getNumberValue() throws IOException, JsonParseException",
      "right" : "public final Number getNumberValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[43540-44532]:MethodDeclaration[44095-45087]"
    }, {
      "left" : "public Object getEmbeddedObject()",
      "right" : "public Object getEmbeddedObject()",
      "info" : "MethodDeclaration[44760-44976]:MethodDeclaration[45315-45531]"
    }, {
      "left" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "right" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "info" : "MethodDeclaration[44986-46204]:MethodDeclaration[45541-46759]"
    }, {
      "left" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out)\n            throws IOException, JsonParseException",
      "right" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out)\n            throws IOException, JsonParseException",
      "info" : "MethodDeclaration[46214-46580]:MethodDeclaration[46769-47135]"
    }, {
      "left" : "public boolean canReadObjectId()",
      "right" : "public boolean canReadObjectId()",
      "info" : "MethodDeclaration[46784-46886]:MethodDeclaration[47339-47441]"
    }, {
      "left" : "public boolean canReadTypeId()",
      "right" : "public boolean canReadTypeId()",
      "info" : "MethodDeclaration[46896-46994]:MethodDeclaration[47451-47549]"
    }, {
      "left" : "public Object getTypeId()",
      "right" : "public Object getTypeId()",
      "info" : "MethodDeclaration[47004-47112]:MethodDeclaration[47559-47667]"
    }, {
      "left" : "public Object getObjectId()",
      "right" : "public Object getObjectId()",
      "info" : "MethodDeclaration[47122-47234]:MethodDeclaration[47677-47789]"
    }, {
      "left" : "protected final Object _currentObject()",
      "right" : "protected final Object _currentObject()",
      "info" : "MethodDeclaration[47440-47537]:MethodDeclaration[47995-48092]"
    }, {
      "left" : "protected final void _checkIsNumber() throws JsonParseException",
      "right" : "protected final void _checkIsNumber() throws JsonParseException",
      "info" : "MethodDeclaration[47547-47831]:MethodDeclaration[48102-48386]"
    }, {
      "left" : "protected void _handleEOF() throws JsonParseException",
      "right" : "protected void _handleEOF() throws JsonParseException",
      "info" : "MethodDeclaration[47841-47954]:MethodDeclaration[48396-48509]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "TypeDeclaration[47970-55841]:TypeDeclaration[48525-56396]"
    }, {
      "left" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "right" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "info" : "FieldDeclaration[48363-48411]:FieldDeclaration[48918-48966]"
    }, {
      "left" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "right" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "info" : "FieldDeclaration[48429-48630]:FieldDeclaration[48984-49185]"
    }, {
      "left" : "protected Segment _next;",
      "right" : "protected Segment _next;",
      "info" : "FieldDeclaration[49025-49049]:FieldDeclaration[49580-49604]"
    }, {
      "left" : "protected long _tokenTypes;",
      "right" : "protected long _tokenTypes;",
      "info" : "FieldDeclaration[49091-49269]:FieldDeclaration[49646-49824]"
    }, {
      "left" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "right" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "info" : "FieldDeclaration[49314-49380]:FieldDeclaration[49869-49935]"
    }, {
      "left" : "protected TreeMap<Integer,Object> _nativeIds;",
      "right" : "protected TreeMap<Integer,Object> _nativeIds;",
      "info" : "FieldDeclaration[49390-49540]:FieldDeclaration[49945-50095]"
    }, {
      "left" : "public Segment()",
      "right" : "public Segment()",
      "info" : "MethodDeclaration[49558-49578]:MethodDeclaration[50113-50133]"
    }, {
      "left" : "public JsonToken type(int index)",
      "right" : "public JsonToken type(int index)",
      "info" : "MethodDeclaration[49616-49864]:MethodDeclaration[50171-50419]"
    }, {
      "left" : "public int rawType(int index)",
      "right" : "public int rawType(int index)",
      "info" : "MethodDeclaration[49874-50097]:MethodDeclaration[50429-50652]"
    }, {
      "left" : "public Object get(int index)",
      "right" : "public Object get(int index)",
      "info" : "MethodDeclaration[50115-50190]:MethodDeclaration[50670-50745]"
    }, {
      "left" : "public Segment next()",
      "right" : "public Segment next()",
      "info" : "MethodDeclaration[50200-50239]:MethodDeclaration[50755-50794]"
    }, {
      "left" : "public boolean hasIds()",
      "right" : "public boolean hasIds()",
      "info" : "MethodDeclaration[50249-50448]:MethodDeclaration[50804-51003]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType)",
      "right" : "public Segment append(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[50501-50800]:MethodDeclaration[51056-51355]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[50810-51193]:MethodDeclaration[51365-51748]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[51203-51530]:MethodDeclaration[51758-52085]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[51540-51951]:MethodDeclaration[52095-52506]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[51961-52294]:MethodDeclaration[52516-52849]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[52304-52721]:MethodDeclaration[52859-53276]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType)",
      "right" : "private void set(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[52731-53139]:MethodDeclaration[53286-53694]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[53149-53491]:MethodDeclaration[53704-54046]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value)",
      "right" : "private void set(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[53501-53791]:MethodDeclaration[54056-54346]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[53801-54193]:MethodDeclaration[54356-54748]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value)",
      "right" : "private void set(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[54203-54490]:MethodDeclaration[54758-55045]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "right" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[54500-54873]:MethodDeclaration[55055-55428]"
    }, {
      "left" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "right" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[54883-55316]:MethodDeclaration[55438-55871]"
    }, {
      "left" : "public Object findObjectId(int index)",
      "right" : "public Object findObjectId(int index)",
      "info" : "MethodDeclaration[55326-55509]:MethodDeclaration[55881-56064]"
    }, {
      "left" : "public Object findTypeId(int index)",
      "right" : "public Object findTypeId(int index)",
      "info" : "MethodDeclaration[55527-55706]:MethodDeclaration[56082-56261]"
    }, {
      "left" : "private final int _typeIdIndex(int i)",
      "right" : "private final int _typeIdIndex(int i)",
      "info" : "MethodDeclaration[55716-55769]:MethodDeclaration[56271-56324]"
    }, {
      "left" : "private final int _objectIdIndex(int i)",
      "right" : "private final int _objectIdIndex(int i)",
      "info" : "MethodDeclaration[55778-55835]:MethodDeclaration[56333-56390]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1060-1066]:Modifier[1060-1066]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1067-1072]:TYPE_DECLARATION_KIND[1067-1072]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[1073-1084]:SimpleName[1073-1084]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[3834-3845]:MarkerAnnotation[3834-3845]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3850-3856]:Modifier[3850-3856]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[3857-3868]:SimpleName[3857-3868]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[3869-3886]:SingleVariableDeclaration[3869-3886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3888-3923]:Block[3888-3923]"
    }, {
      "left" : "this(codec, false);",
      "right" : "this(codec, false);",
      "info" : "ConstructorInvocation[3898-3917]:ConstructorInvocation[3898-3917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4252-4258]:Modifier[4252-4258]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[4259-4270]:SimpleName[4259-4270]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[4271-4288]:SingleVariableDeclaration[4271-4288]"
    }, {
      "left" : "boolean hasNativeIds",
      "right" : "boolean hasNativeIds",
      "info" : "SingleVariableDeclaration[4290-4310]:SingleVariableDeclaration[4290-4310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4316-4740]:Block[4316-4740]"
    }, {
      "left" : "_objectCodec = codec;",
      "right" : "_objectCodec = codec;",
      "info" : "ExpressionStatement[4326-4347]:ExpressionStatement[4326-4347]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[4356-4404]:ExpressionStatement[4356-4404]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[4413-4470]:ExpressionStatement[4413-4470]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[4524-4555]:ExpressionStatement[4524-4555]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[4564-4578]:ExpressionStatement[4564-4578]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeIds;",
      "right" : "_hasNativeTypeIds = hasNativeIds;",
      "info" : "ExpressionStatement[4587-4620]:ExpressionStatement[4587-4620]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeIds;",
      "right" : "_hasNativeObjectIds = hasNativeIds;",
      "info" : "ExpressionStatement[4629-4664]:ExpressionStatement[4629-4664]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[4674-4734]:ExpressionStatement[4674-4734]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4780-4786]:Modifier[4780-4786]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[4787-4798]:SimpleName[4787-4798]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[4799-4812]:SingleVariableDeclaration[4799-4812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4818-5263]:Block[4818-5263]"
    }, {
      "left" : "_objectCodec = jp.getCodec();",
      "right" : "_objectCodec = jp.getCodec();",
      "info" : "ExpressionStatement[4828-4857]:ExpressionStatement[4828-4857]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[4866-4914]:ExpressionStatement[4866-4914]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[4923-4980]:ExpressionStatement[4923-4980]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[5034-5065]:ExpressionStatement[5034-5065]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[5074-5088]:ExpressionStatement[5074-5088]"
    }, {
      "left" : "_hasNativeTypeIds = jp.canReadTypeId();",
      "right" : "_hasNativeTypeIds = jp.canReadTypeId();",
      "info" : "ExpressionStatement[5097-5136]:ExpressionStatement[5097-5136]"
    }, {
      "left" : "_hasNativeObjectIds = jp.canReadObjectId();",
      "right" : "_hasNativeObjectIds = jp.canReadObjectId();",
      "info" : "ExpressionStatement[5145-5188]:ExpressionStatement[5145-5188]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[5197-5257]:ExpressionStatement[5197-5257]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5273-5282]:MarkerAnnotation[5273-5282]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5287-5293]:Modifier[5287-5293]"
    }, {
      "left" : "Version",
      "right" : "Version",
      "info" : "SimpleType[5294-5301]:SimpleType[5294-5301]"
    }, {
      "left" : "version",
      "right" : "version",
      "info" : "SimpleName[5302-5309]:SimpleName[5302-5309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5312-5393]:Block[5312-5393]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[5322-5387]:ReturnStatement[5322-5387]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5836-5842]:Modifier[5836-5842]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[5843-5853]:SimpleType[5843-5853]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[5854-5862]:SimpleName[5854-5862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5869-5915]:Block[5869-5915]"
    }, {
      "left" : "return asParser(_objectCodec);",
      "right" : "return asParser(_objectCodec);",
      "info" : "ReturnStatement[5879-5909]:ReturnStatement[5879-5909]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6460-6466]:Modifier[6460-6466]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[6467-6477]:SimpleType[6467-6477]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[6478-6486]:SimpleName[6478-6486]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[6487-6504]:SingleVariableDeclaration[6487-6504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6510-6599]:Block[6510-6599]"
    }, {
      "left" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "ReturnStatement[6520-6593]:ReturnStatement[6520-6593]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6728-6734]:Modifier[6728-6734]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[6735-6745]:SimpleType[6735-6745]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[6746-6754]:SimpleName[6746-6754]"
    }, {
      "left" : "JsonParser src",
      "right" : "JsonParser src",
      "info" : "SingleVariableDeclaration[6755-6769]:SingleVariableDeclaration[6755-6769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6775-6942]:Block[6775-6942]"
    }, {
      "left" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "VariableDeclarationStatement[6785-6871]:VariableDeclarationStatement[6785-6871]"
    }, {
      "left" : "p.setLocation(src.getTokenLocation());",
      "right" : "p.setLocation(src.getTokenLocation());",
      "info" : "ExpressionStatement[6880-6918]:ExpressionStatement[6880-6918]"
    }, {
      "left" : "return p;",
      "right" : "return p;",
      "info" : "ReturnStatement[6927-6936]:ReturnStatement[6927-6936]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7124-7130]:Modifier[7124-7130]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[7131-7140]:SimpleType[7131-7140]"
    }, {
      "left" : "firstToken",
      "right" : "firstToken",
      "info" : "SimpleName[7141-7151]:SimpleName[7141-7151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7154-7257]:Block[7154-7257]"
    }, {
      "left" : "if (_first != null)",
      "right" : "if (_first != null)",
      "info" : "IfStatement[7164-7230]:IfStatement[7164-7230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7184-7230]:Block[7184-7230]"
    }, {
      "left" : "return _first.type(0);",
      "right" : "return _first.type(0);",
      "info" : "ReturnStatement[7198-7220]:ReturnStatement[7198-7220]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7239-7251]:ReturnStatement[7239-7251]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[7689-7718]:SingleMemberAnnotation[7689-7718]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7723-7729]:Modifier[7723-7729]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleType[7730-7741]:SimpleType[7730-7741]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[7742-7748]:SimpleName[7742-7748]"
    }, {
      "left" : "TokenBuffer other",
      "right" : "TokenBuffer other",
      "info" : "SingleVariableDeclaration[7749-7766]:SingleVariableDeclaration[7749-7766]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[7783-7794]:SimpleType[7783-7794]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[7796-7819]:SimpleType[7796-7819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7824-8331]:Block[7824-8331]"
    }, {
      "left" : "if (!_hasNativeTypeIds)",
      "right" : "if (!_hasNativeTypeIds)",
      "info" : "IfStatement[7896-7989]:IfStatement[7896-7989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7920-7989]:Block[7920-7989]"
    }, {
      "left" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "right" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "info" : "ExpressionStatement[7936-7979]:ExpressionStatement[7936-7979]"
    }, {
      "left" : "if (!_hasNativeObjectIds)",
      "right" : "if (!_hasNativeObjectIds)",
      "info" : "IfStatement[7998-8095]:IfStatement[7998-8095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8024-8095]:Block[8024-8095]"
    }, {
      "left" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "right" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "info" : "ExpressionStatement[8038-8085]:ExpressionStatement[8038-8085]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[8104-8164]:ExpressionStatement[8104-8164]"
    }, {
      "left" : "JsonParser jp = other.asParser();",
      "right" : "JsonParser jp = other.asParser();",
      "info" : "VariableDeclarationStatement[8182-8215]:VariableDeclarationStatement[8182-8215]"
    }, {
      "left" : "while (jp.nextToken() != null)",
      "right" : "while (jp.nextToken() != null)",
      "info" : "WhileStatement[8224-8304]:WhileStatement[8224-8304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8255-8304]:Block[8255-8304]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[8269-8294]:ExpressionStatement[8269-8294]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8313-8325]:ReturnStatement[8313-8325]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8740-8746]:Modifier[8740-8746]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8747-8751]:PrimitiveType[8747-8751]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[8752-8761]:SimpleName[8752-8761]"
    }, {
      "left" : "JsonGenerator jgen",
      "right" : "JsonGenerator jgen",
      "info" : "SingleVariableDeclaration[8762-8780]:SingleVariableDeclaration[8762-8780]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8797-8808]:SimpleType[8797-8808]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[8810-8833]:SimpleType[8810-8833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8838-13099]:Block[8838-13099]"
    }, {
      "left" : "Segment segment = _first;",
      "right" : "Segment segment = _first;",
      "info" : "VariableDeclarationStatement[8848-8873]:VariableDeclarationStatement[8848-8873]"
    }, {
      "left" : "int ptr = -1;",
      "right" : "int ptr = -1;",
      "info" : "VariableDeclarationStatement[8882-8895]:VariableDeclarationStatement[8882-8895]"
    }, {
      "left" : "final boolean checkIds = _mayHaveNativeIds;",
      "right" : "final boolean checkIds = _mayHaveNativeIds;",
      "info" : "VariableDeclarationStatement[8905-8948]:VariableDeclarationStatement[8905-8948]"
    }, {
      "left" : "boolean hasIds = checkIds && (segment.hasIds());",
      "right" : "boolean hasIds = checkIds && (segment.hasIds());",
      "info" : "VariableDeclarationStatement[8957-9005]:VariableDeclarationStatement[8957-9005]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[9015-13093]:WhileStatement[9015-13093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9028-13093]:Block[9028-13093]"
    }, {
      "left" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[9042-9266]:IfStatement[9042-9266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9083-9266]:Block[9083-9266]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[9101-9109]:ExpressionStatement[9101-9109]"
    }, {
      "left" : "segment = segment.next();",
      "right" : "segment = segment.next();",
      "info" : "ExpressionStatement[9126-9151]:ExpressionStatement[9126-9151]"
    }, {
      "left" : "if (segment == null)",
      "right" : "if (segment == null)",
      "info" : "IfStatement[9168-9195]:IfStatement[9168-9195]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9189-9195]:BreakStatement[9189-9195]"
    }, {
      "left" : "hasIds = checkIds && (segment.hasIds());",
      "right" : "hasIds = checkIds && (segment.hasIds());",
      "info" : "ExpressionStatement[9212-9252]:ExpressionStatement[9212-9252]"
    }, {
      "left" : "JsonToken t = segment.type(ptr);",
      "right" : "JsonToken t = segment.type(ptr);",
      "info" : "VariableDeclarationStatement[9279-9311]:VariableDeclarationStatement[9279-9311]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[9324-9345]:IfStatement[9324-9345]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9339-9345]:BreakStatement[9339-9345]"
    }, {
      "left" : "if (hasIds)",
      "right" : "if (hasIds)",
      "info" : "IfStatement[9359-9677]:IfStatement[9359-9677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9371-9677]:Block[9371-9677]"
    }, {
      "left" : "Object id = segment.findObjectId(ptr);",
      "right" : "Object id = segment.findObjectId(ptr);",
      "info" : "VariableDeclarationStatement[9389-9427]:VariableDeclarationStatement[9389-9427]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[9444-9523]:IfStatement[9444-9523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9460-9523]:Block[9460-9523]"
    }, {
      "left" : "jgen.writeObjectId(id);",
      "right" : "jgen.writeObjectId(id);",
      "info" : "ExpressionStatement[9482-9505]:ExpressionStatement[9482-9505]"
    }, {
      "left" : "id = segment.findTypeId(ptr);",
      "right" : "id = segment.findTypeId(ptr);",
      "info" : "ExpressionStatement[9540-9569]:ExpressionStatement[9540-9569]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[9586-9663]:IfStatement[9586-9663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9602-9663]:Block[9602-9663]"
    }, {
      "left" : "jgen.writeTypeId(id);",
      "right" : "jgen.writeTypeId(id);",
      "info" : "ExpressionStatement[9624-9645]:ExpressionStatement[9624-9645]"
    }, {
      "left" : "switch (t) {\n            case START_OBJECT:\n                jgen.writeStartObject();\n                break;\n            case END_OBJECT:\n                jgen.writeEndObject();\n                break;\n            case START_ARRAY:\n                jgen.writeStartArray();\n                break;\n            case END_ARRAY:\n                jgen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    jgen.writeFieldName((SerializableString) ob);\n                } else {\n                    jgen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        jgen.writeString((SerializableString) ob);\n                    } else {\n                        jgen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        jgen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        jgen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        jgen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        jgen.writeNumber((Short) n);\n                    } else {\n                        jgen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        jgen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        jgen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        jgen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        jgen.writeNull();\n                    } else if (n instanceof String) {\n                        jgen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                jgen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                jgen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                jgen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                jgen.writeObject(segment.get(ptr));\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "right" : "switch (t) {\n            case START_OBJECT:\n                jgen.writeStartObject();\n                break;\n            case END_OBJECT:\n                jgen.writeEndObject();\n                break;\n            case START_ARRAY:\n                jgen.writeStartArray();\n                break;\n            case END_ARRAY:\n                jgen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    jgen.writeFieldName((SerializableString) ob);\n                } else {\n                    jgen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        jgen.writeString((SerializableString) ob);\n                    } else {\n                        jgen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        jgen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        jgen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        jgen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        jgen.writeNumber((Short) n);\n                    } else {\n                        jgen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        jgen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        jgen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        jgen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        jgen.writeNull();\n                    } else if (n instanceof String) {\n                        jgen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                jgen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                jgen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                jgen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                jgen.writeObject(segment.get(ptr));\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "info" : "SwitchStatement[9758-13083]:SwitchStatement[9758-13083]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[9783-9801]:SwitchCase[9783-9801]"
    }, {
      "left" : "jgen.writeStartObject();",
      "right" : "jgen.writeStartObject();",
      "info" : "ExpressionStatement[9818-9842]:ExpressionStatement[9818-9842]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9859-9865]:BreakStatement[9859-9865]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[9878-9894]:SwitchCase[9878-9894]"
    }, {
      "left" : "jgen.writeEndObject();",
      "right" : "jgen.writeEndObject();",
      "info" : "ExpressionStatement[9911-9933]:ExpressionStatement[9911-9933]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9950-9956]:BreakStatement[9950-9956]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[9969-9986]:SwitchCase[9969-9986]"
    }, {
      "left" : "jgen.writeStartArray();",
      "right" : "jgen.writeStartArray();",
      "info" : "ExpressionStatement[10003-10026]:ExpressionStatement[10003-10026]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10043-10049]:BreakStatement[10043-10049]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[10062-10077]:SwitchCase[10062-10077]"
    }, {
      "left" : "jgen.writeEndArray();",
      "right" : "jgen.writeEndArray();",
      "info" : "ExpressionStatement[10094-10115]:ExpressionStatement[10094-10115]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10132-10138]:BreakStatement[10132-10138]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[10151-10167]:SwitchCase[10151-10167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10180-10567]:Block[10180-10567]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[10305-10334]:VariableDeclarationStatement[10305-10334]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[10351-10553]:IfStatement[10351-10553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10389-10474]:Block[10389-10474]"
    }, {
      "left" : "jgen.writeFieldName((SerializableString) ob);",
      "right" : "jgen.writeFieldName((SerializableString) ob);",
      "info" : "ExpressionStatement[10411-10456]:ExpressionStatement[10411-10456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10480-10553]:Block[10480-10553]"
    }, {
      "left" : "jgen.writeFieldName((String) ob);",
      "right" : "jgen.writeFieldName((String) ob);",
      "info" : "ExpressionStatement[10502-10535]:ExpressionStatement[10502-10535]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10584-10590]:BreakStatement[10584-10590]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[10603-10621]:SwitchCase[10603-10621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10638-10940]:Block[10638-10940]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[10660-10689]:VariableDeclarationStatement[10660-10689]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[10710-10922]:IfStatement[10710-10922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10748-10838]:Block[10748-10838]"
    }, {
      "left" : "jgen.writeString((SerializableString) ob);",
      "right" : "jgen.writeString((SerializableString) ob);",
      "info" : "ExpressionStatement[10774-10816]:ExpressionStatement[10774-10816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10844-10922]:Block[10844-10922]"
    }, {
      "left" : "jgen.writeString((String) ob);",
      "right" : "jgen.writeString((String) ob);",
      "info" : "ExpressionStatement[10870-10900]:ExpressionStatement[10870-10900]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10957-10963]:BreakStatement[10957-10963]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[10976-10998]:SwitchCase[10976-10998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11015-11630]:Block[11015-11630]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11037-11065]:VariableDeclarationStatement[11037-11065]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[11086-11612]:IfStatement[11086-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11112-11190]:Block[11112-11190]"
    }, {
      "left" : "jgen.writeNumber((Integer) n);",
      "right" : "jgen.writeNumber((Integer) n);",
      "info" : "ExpressionStatement[11138-11168]:ExpressionStatement[11138-11168]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[11196-11612]:IfStatement[11196-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11225-11306]:Block[11225-11306]"
    }, {
      "left" : "jgen.writeNumber((BigInteger) n);",
      "right" : "jgen.writeNumber((BigInteger) n);",
      "info" : "ExpressionStatement[11251-11284]:ExpressionStatement[11251-11284]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[11312-11612]:IfStatement[11312-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11335-11410]:Block[11335-11410]"
    }, {
      "left" : "jgen.writeNumber((Long) n);",
      "right" : "jgen.writeNumber((Long) n);",
      "info" : "ExpressionStatement[11361-11388]:ExpressionStatement[11361-11388]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[11416-11612]:IfStatement[11416-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11440-11516]:Block[11440-11516]"
    }, {
      "left" : "jgen.writeNumber((Short) n);",
      "right" : "jgen.writeNumber((Short) n);",
      "info" : "ExpressionStatement[11466-11494]:ExpressionStatement[11466-11494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11522-11612]:Block[11522-11612]"
    }, {
      "left" : "jgen.writeNumber(((Number) n).intValue());",
      "right" : "jgen.writeNumber(((Number) n).intValue());",
      "info" : "ExpressionStatement[11548-11590]:ExpressionStatement[11548-11590]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11647-11653]:BreakStatement[11647-11653]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[11666-11690]:SwitchCase[11666-11690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11707-12530]:Block[11707-12530]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11729-11757]:VariableDeclarationStatement[11729-11757]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[11778-12512]:IfStatement[11778-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11803-11896]:Block[11803-11896]"
    }, {
      "left" : "jgen.writeNumber(((Double) n).doubleValue());",
      "right" : "jgen.writeNumber(((Double) n).doubleValue());",
      "info" : "ExpressionStatement[11829-11874]:ExpressionStatement[11829-11874]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[11902-12512]:IfStatement[11902-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11931-12012]:Block[11931-12012]"
    }, {
      "left" : "jgen.writeNumber((BigDecimal) n);",
      "right" : "jgen.writeNumber((BigDecimal) n);",
      "info" : "ExpressionStatement[11957-11990]:ExpressionStatement[11957-11990]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[12018-12512]:IfStatement[12018-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12042-12133]:Block[12042-12133]"
    }, {
      "left" : "jgen.writeNumber(((Float) n).floatValue());",
      "right" : "jgen.writeNumber(((Float) n).floatValue());",
      "info" : "ExpressionStatement[12068-12111]:ExpressionStatement[12068-12111]"
    }, {
      "left" : "if (n == null)",
      "right" : "if (n == null)",
      "info" : "IfStatement[12139-12512]:IfStatement[12139-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12154-12219]:Block[12154-12219]"
    }, {
      "left" : "jgen.writeNull();",
      "right" : "jgen.writeNull();",
      "info" : "ExpressionStatement[12180-12197]:ExpressionStatement[12180-12197]"
    }, {
      "left" : "if (n instanceof String)",
      "right" : "if (n instanceof String)",
      "info" : "IfStatement[12225-12512]:IfStatement[12225-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12250-12327]:Block[12250-12327]"
    }, {
      "left" : "jgen.writeNumber((String) n);",
      "right" : "jgen.writeNumber((String) n);",
      "info" : "ExpressionStatement[12276-12305]:ExpressionStatement[12276-12305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12333-12512]:Block[12333-12512]"
    }, {
      "left" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "right" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "info" : "ThrowStatement[12359-12490]:ThrowStatement[12359-12490]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12547-12553]:BreakStatement[12547-12553]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[12566-12582]:SwitchCase[12566-12582]"
    }, {
      "left" : "jgen.writeBoolean(true);",
      "right" : "jgen.writeBoolean(true);",
      "info" : "ExpressionStatement[12599-12623]:ExpressionStatement[12599-12623]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12640-12646]:BreakStatement[12640-12646]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[12659-12676]:SwitchCase[12659-12676]"
    }, {
      "left" : "jgen.writeBoolean(false);",
      "right" : "jgen.writeBoolean(false);",
      "info" : "ExpressionStatement[12693-12718]:ExpressionStatement[12693-12718]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12735-12741]:BreakStatement[12735-12741]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[12754-12770]:SwitchCase[12754-12770]"
    }, {
      "left" : "jgen.writeNull();",
      "right" : "jgen.writeNull();",
      "info" : "ExpressionStatement[12787-12804]:ExpressionStatement[12787-12804]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12821-12827]:BreakStatement[12821-12827]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[12840-12867]:SwitchCase[12840-12867]"
    }, {
      "left" : "jgen.writeObject(segment.get(ptr));",
      "right" : "jgen.writeObject(segment.get(ptr));",
      "info" : "ExpressionStatement[12884-12919]:ExpressionStatement[12884-12919]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12936-12942]:BreakStatement[12936-12942]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[12955-12963]:SwitchCase[12955-12963]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[12980-13069]:ThrowStatement[12980-13069]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13199-13205]:Modifier[13199-13205]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleType[13206-13217]:SimpleType[13206-13217]"
    }, {
      "left" : "deserialize",
      "right" : "deserialize",
      "info" : "SimpleName[13218-13229]:SimpleName[13218-13229]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[13230-13243]:SingleVariableDeclaration[13230-13243]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[13245-13272]:SingleVariableDeclaration[13245-13272]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13289-13300]:SimpleType[13289-13300]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[13302-13325]:SimpleType[13302-13325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13330-13392]:Block[13330-13392]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[13340-13365]:ExpressionStatement[13340-13365]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13374-13386]:ReturnStatement[13374-13386]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13402-13411]:MarkerAnnotation[13402-13411]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[13416-13445]:SingleMemberAnnotation[13416-13445]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13450-13456]:Modifier[13450-13456]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[13457-13463]:SimpleType[13457-13463]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[13464-13472]:SimpleName[13464-13472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13479-14981]:Block[13479-14981]"
    }, {
      "left" : "final int MAX_COUNT = 100;",
      "right" : "final int MAX_COUNT = 100;",
      "info" : "VariableDeclarationStatement[13538-13564]:VariableDeclarationStatement[13538-13564]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[13574-13613]:VariableDeclarationStatement[13574-13613]"
    }, {
      "left" : "sb.append(\"[TokenBuffer: \");",
      "right" : "sb.append(\"[TokenBuffer: \");",
      "info" : "ExpressionStatement[13622-13650]:ExpressionStatement[13622-13650]"
    }, {
      "left" : "JsonParser jp = asParser();",
      "right" : "JsonParser jp = asParser();",
      "info" : "VariableDeclarationStatement[13821-13848]:VariableDeclarationStatement[13821-13848]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[13857-13871]:VariableDeclarationStatement[13857-13871]"
    }, {
      "left" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "right" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "info" : "VariableDeclarationStatement[13880-13950]:VariableDeclarationStatement[13880-13950]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[13960-14789]:WhileStatement[13960-14789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13973-14789]:Block[13973-14789]"
    }, {
      "left" : "JsonToken t;",
      "right" : "JsonToken t;",
      "info" : "VariableDeclarationStatement[13987-13999]:VariableDeclarationStatement[13987-13999]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14012-14758]:TryStatement[14012-14758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14016-14642]:Block[14016-14642]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[14034-14053]:ExpressionStatement[14034-14053]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[14070-14091]:IfStatement[14070-14091]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[14085-14091]:BreakStatement[14085-14091]"
    }, {
      "left" : "if (hasNativeIds)",
      "right" : "if (hasNativeIds)",
      "info" : "IfStatement[14109-14188]:IfStatement[14109-14188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14127-14188]:Block[14127-14188]"
    }, {
      "left" : "_appendNativeIds(sb);",
      "right" : "_appendNativeIds(sb);",
      "info" : "ExpressionStatement[14149-14170]:ExpressionStatement[14149-14170]"
    }, {
      "left" : "if (count < MAX_COUNT)",
      "right" : "if (count < MAX_COUNT)",
      "info" : "IfStatement[14230-14628]:IfStatement[14230-14628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14253-14628]:Block[14253-14628]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[14275-14354]:IfStatement[14275-14354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14290-14354]:Block[14290-14354]"
    }, {
      "left" : "sb.append(\", \");",
      "right" : "sb.append(\", \");",
      "info" : "ExpressionStatement[14316-14332]:ExpressionStatement[14316-14332]"
    }, {
      "left" : "sb.append(t.toString());",
      "right" : "sb.append(t.toString());",
      "info" : "ExpressionStatement[14375-14399]:ExpressionStatement[14375-14399]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[14420-14610]:IfStatement[14420-14610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14451-14610]:Block[14451-14610]"
    }, {
      "left" : "sb.append('(');",
      "right" : "sb.append('(');",
      "info" : "ExpressionStatement[14477-14492]:ExpressionStatement[14477-14492]"
    }, {
      "left" : "sb.append(jp.getCurrentName());",
      "right" : "sb.append(jp.getCurrentName());",
      "info" : "ExpressionStatement[14517-14548]:ExpressionStatement[14517-14548]"
    }, {
      "left" : "sb.append(')');",
      "right" : "sb.append(')');",
      "info" : "ExpressionStatement[14573-14588]:ExpressionStatement[14573-14588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14667-14758]:Block[14667-14758]"
    }, {
      "left" : "throw new IllegalStateException(ioe);",
      "right" : "throw new IllegalStateException(ioe);",
      "info" : "ThrowStatement[14707-14744]:ThrowStatement[14707-14744]"
    }, {
      "left" : "++count;",
      "right" : "++count;",
      "info" : "ExpressionStatement[14771-14779]:ExpressionStatement[14771-14779]"
    }, {
      "left" : "if (count >= MAX_COUNT)",
      "right" : "if (count >= MAX_COUNT)",
      "info" : "IfStatement[14799-14921]:IfStatement[14799-14921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14823-14921]:Block[14823-14921]"
    }, {
      "left" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "right" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "info" : "ExpressionStatement[14837-14911]:ExpressionStatement[14837-14911]"
    }, {
      "left" : "sb.append(']');",
      "right" : "sb.append(']');",
      "info" : "ExpressionStatement[14930-14945]:ExpressionStatement[14930-14945]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[14954-14975]:ReturnStatement[14954-14975]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14987-14994]:Modifier[14987-14994]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[14995-15000]:Modifier[14995-15000]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15001-15005]:PrimitiveType[15001-15005]"
    }, {
      "left" : "_appendNativeIds",
      "right" : "_appendNativeIds",
      "info" : "SimpleName[15006-15022]:SimpleName[15006-15022]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[15023-15039]:SingleVariableDeclaration[15023-15039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15045-15408]:Block[15045-15408]"
    }, {
      "left" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "right" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[15055-15105]:VariableDeclarationStatement[15055-15105]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[15114-15229]:IfStatement[15114-15229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15136-15229]:Block[15136-15229]"
    }, {
      "left" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "right" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "info" : "ExpressionStatement[15150-15219]:ExpressionStatement[15150-15219]"
    }, {
      "left" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "right" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[15238-15284]:VariableDeclarationStatement[15238-15284]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[15293-15402]:IfStatement[15293-15402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15313-15402]:Block[15313-15402]"
    }, {
      "left" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "right" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "info" : "ExpressionStatement[15327-15392]:ExpressionStatement[15327-15392]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15613-15622]:MarkerAnnotation[15613-15622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15627-15633]:Modifier[15627-15633]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[15634-15647]:SimpleType[15634-15647]"
    }, {
      "left" : "enable",
      "right" : "enable",
      "info" : "SimpleName[15648-15654]:SimpleName[15648-15654]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[15655-15664]:SingleVariableDeclaration[15655-15664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15666-15737]:Block[15666-15737]"
    }, {
      "left" : "_generatorFeatures |= f.getMask();",
      "right" : "_generatorFeatures |= f.getMask();",
      "info" : "ExpressionStatement[15676-15710]:ExpressionStatement[15676-15710]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15719-15731]:ReturnStatement[15719-15731]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15743-15752]:MarkerAnnotation[15743-15752]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15757-15763]:Modifier[15757-15763]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[15764-15777]:SimpleType[15764-15777]"
    }, {
      "left" : "disable",
      "right" : "disable",
      "info" : "SimpleName[15778-15785]:SimpleName[15778-15785]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[15786-15795]:SingleVariableDeclaration[15786-15795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15797-15869]:Block[15797-15869]"
    }, {
      "left" : "_generatorFeatures &= ~f.getMask();",
      "right" : "_generatorFeatures &= ~f.getMask();",
      "info" : "ExpressionStatement[15807-15842]:ExpressionStatement[15807-15842]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15851-15863]:ReturnStatement[15851-15863]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15956-15965]:MarkerAnnotation[15956-15965]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15970-15976]:Modifier[15970-15976]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[15977-15984]:PrimitiveType[15977-15984]"
    }, {
      "left" : "isEnabled",
      "right" : "isEnabled",
      "info" : "SimpleName[15985-15994]:SimpleName[15985-15994]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[15995-16004]:SingleVariableDeclaration[15995-16004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16006-16069]:Block[16006-16069]"
    }, {
      "left" : "return (_generatorFeatures & f.getMask()) != 0;",
      "right" : "return (_generatorFeatures & f.getMask()) != 0;",
      "info" : "ReturnStatement[16016-16063]:ReturnStatement[16016-16063]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16075-16084]:MarkerAnnotation[16075-16084]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16089-16095]:Modifier[16089-16095]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[16096-16099]:PrimitiveType[16096-16099]"
    }, {
      "left" : "getFeatureMask",
      "right" : "getFeatureMask",
      "info" : "SimpleName[16100-16114]:SimpleName[16100-16114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16117-16159]:Block[16117-16159]"
    }, {
      "left" : "return _generatorFeatures;",
      "right" : "return _generatorFeatures;",
      "info" : "ReturnStatement[16127-16153]:ReturnStatement[16127-16153]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16165-16174]:MarkerAnnotation[16165-16174]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16179-16185]:Modifier[16179-16185]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[16186-16199]:SimpleType[16186-16199]"
    }, {
      "left" : "setFeatureMask",
      "right" : "setFeatureMask",
      "info" : "SimpleName[16200-16214]:SimpleName[16200-16214]"
    }, {
      "left" : "int mask",
      "right" : "int mask",
      "info" : "SingleVariableDeclaration[16215-16223]:SingleVariableDeclaration[16215-16223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16225-16288]:Block[16225-16288]"
    }, {
      "left" : "_generatorFeatures = mask;",
      "right" : "_generatorFeatures = mask;",
      "info" : "ExpressionStatement[16235-16261]:ExpressionStatement[16235-16261]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16270-16282]:ReturnStatement[16270-16282]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16298-16307]:MarkerAnnotation[16298-16307]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16312-16318]:Modifier[16312-16318]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[16319-16332]:SimpleType[16319-16332]"
    }, {
      "left" : "useDefaultPrettyPrinter",
      "right" : "useDefaultPrettyPrinter",
      "info" : "SimpleName[16333-16356]:SimpleName[16333-16356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16359-16421]:Block[16359-16421]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16403-16415]:ReturnStatement[16403-16415]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16427-16436]:MarkerAnnotation[16427-16436]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16441-16447]:Modifier[16441-16447]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[16448-16461]:SimpleType[16448-16461]"
    }, {
      "left" : "setCodec",
      "right" : "setCodec",
      "info" : "SimpleName[16462-16470]:SimpleName[16462-16470]"
    }, {
      "left" : "ObjectCodec oc",
      "right" : "ObjectCodec oc",
      "info" : "SingleVariableDeclaration[16471-16485]:SingleVariableDeclaration[16471-16485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16487-16542]:Block[16487-16542]"
    }, {
      "left" : "_objectCodec = oc;",
      "right" : "_objectCodec = oc;",
      "info" : "ExpressionStatement[16497-16515]:ExpressionStatement[16497-16515]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16524-16536]:ReturnStatement[16524-16536]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16548-16557]:MarkerAnnotation[16548-16557]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16562-16568]:Modifier[16562-16568]"
    }, {
      "left" : "ObjectCodec",
      "right" : "ObjectCodec",
      "info" : "SimpleType[16569-16580]:SimpleType[16569-16580]"
    }, {
      "left" : "getCodec",
      "right" : "getCodec",
      "info" : "SimpleName[16581-16589]:SimpleName[16581-16589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16592-16616]:Block[16592-16616]"
    }, {
      "left" : "return _objectCodec;",
      "right" : "return _objectCodec;",
      "info" : "ReturnStatement[16594-16614]:ReturnStatement[16594-16614]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16622-16631]:MarkerAnnotation[16622-16631]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16636-16642]:Modifier[16636-16642]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[16643-16648]:Modifier[16643-16648]"
    }, {
      "left" : "JsonWriteContext",
      "right" : "JsonWriteContext",
      "info" : "SimpleType[16649-16665]:SimpleType[16649-16665]"
    }, {
      "left" : "getOutputContext",
      "right" : "getOutputContext",
      "info" : "SimpleName[16666-16682]:SimpleName[16666-16682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16685-16710]:Block[16685-16710]"
    }, {
      "left" : "return _writeContext;",
      "right" : "return _writeContext;",
      "info" : "ReturnStatement[16687-16708]:ReturnStatement[16687-16708]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17006-17015]:MarkerAnnotation[17006-17015]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17020-17026]:Modifier[17020-17026]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17027-17034]:PrimitiveType[17027-17034]"
    }, {
      "left" : "canWriteBinaryNatively",
      "right" : "canWriteBinaryNatively",
      "info" : "SimpleName[17035-17057]:SimpleName[17035-17057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17060-17088]:Block[17060-17088]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[17070-17082]:ReturnStatement[17070-17082]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17305-17314]:MarkerAnnotation[17305-17314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17319-17325]:Modifier[17319-17325]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17326-17330]:PrimitiveType[17326-17330]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[17331-17336]:SimpleName[17331-17336]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17346-17357]:SimpleType[17346-17357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17358-17371]:Block[17358-17371]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17377-17386]:MarkerAnnotation[17377-17386]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17391-17397]:Modifier[17391-17397]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17398-17402]:PrimitiveType[17398-17402]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[17403-17408]:SimpleName[17403-17408]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17418-17429]:SimpleType[17418-17429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17430-17461]:Block[17430-17461]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[17440-17455]:ExpressionStatement[17440-17455]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17467-17476]:MarkerAnnotation[17467-17476]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17481-17487]:Modifier[17481-17487]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17488-17495]:PrimitiveType[17488-17495]"
    }, {
      "left" : "isClosed",
      "right" : "isClosed",
      "info" : "SimpleName[17496-17504]:SimpleName[17496-17504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17507-17526]:Block[17507-17526]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[17509-17524]:ReturnStatement[17509-17524]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17739-17748]:MarkerAnnotation[17739-17748]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17753-17759]:Modifier[17753-17759]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17760-17765]:Modifier[17760-17765]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17766-17770]:PrimitiveType[17766-17770]"
    }, {
      "left" : "writeStartArray",
      "right" : "writeStartArray",
      "info" : "SimpleName[17771-17786]:SimpleName[17771-17786]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17804-17815]:SimpleType[17804-17815]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[17817-17840]:SimpleType[17817-17840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17845-17957]:Block[17845-17957]"
    }, {
      "left" : "_append(JsonToken.START_ARRAY);",
      "right" : "_append(JsonToken.START_ARRAY);",
      "info" : "ExpressionStatement[17855-17886]:ExpressionStatement[17855-17886]"
    }, {
      "left" : "_writeContext = _writeContext.createChildArrayContext();",
      "right" : "_writeContext = _writeContext.createChildArrayContext();",
      "info" : "ExpressionStatement[17895-17951]:ExpressionStatement[17895-17951]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17963-17972]:MarkerAnnotation[17963-17972]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17977-17983]:Modifier[17977-17983]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17984-17989]:Modifier[17984-17989]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17990-17994]:PrimitiveType[17990-17994]"
    }, {
      "left" : "writeEndArray",
      "right" : "writeEndArray",
      "info" : "SimpleName[17995-18008]:SimpleName[17995-18008]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18026-18037]:SimpleType[18026-18037]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18039-18062]:SimpleType[18039-18062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18067-18312]:Block[18067-18312]"
    }, {
      "left" : "_append(JsonToken.END_ARRAY);",
      "right" : "_append(JsonToken.END_ARRAY);",
      "info" : "ExpressionStatement[18077-18106]:ExpressionStatement[18077-18106]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[18193-18240]:VariableDeclarationStatement[18193-18240]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[18249-18306]:IfStatement[18249-18306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18264-18306]:Block[18264-18306]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[18278-18296]:ExpressionStatement[18278-18296]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18318-18327]:MarkerAnnotation[18318-18327]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18332-18338]:Modifier[18332-18338]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18339-18344]:Modifier[18339-18344]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18345-18349]:PrimitiveType[18345-18349]"
    }, {
      "left" : "writeStartObject",
      "right" : "writeStartObject",
      "info" : "SimpleName[18350-18366]:SimpleName[18350-18366]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18384-18395]:SimpleType[18384-18395]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18397-18420]:SimpleType[18397-18420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18425-18539]:Block[18425-18539]"
    }, {
      "left" : "_append(JsonToken.START_OBJECT);",
      "right" : "_append(JsonToken.START_OBJECT);",
      "info" : "ExpressionStatement[18435-18467]:ExpressionStatement[18435-18467]"
    }, {
      "left" : "_writeContext = _writeContext.createChildObjectContext();",
      "right" : "_writeContext = _writeContext.createChildObjectContext();",
      "info" : "ExpressionStatement[18476-18533]:ExpressionStatement[18476-18533]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18545-18554]:MarkerAnnotation[18545-18554]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18559-18565]:Modifier[18559-18565]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18566-18571]:Modifier[18566-18571]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18572-18576]:PrimitiveType[18572-18576]"
    }, {
      "left" : "writeEndObject",
      "right" : "writeEndObject",
      "info" : "SimpleName[18577-18591]:SimpleName[18577-18591]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18609-18620]:SimpleType[18609-18620]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18622-18645]:SimpleType[18622-18645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18650-18896]:Block[18650-18896]"
    }, {
      "left" : "_append(JsonToken.END_OBJECT);",
      "right" : "_append(JsonToken.END_OBJECT);",
      "info" : "ExpressionStatement[18660-18690]:ExpressionStatement[18660-18690]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[18777-18824]:VariableDeclarationStatement[18777-18824]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[18833-18890]:IfStatement[18833-18890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18848-18890]:Block[18848-18890]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[18862-18880]:ExpressionStatement[18862-18880]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18902-18911]:MarkerAnnotation[18902-18911]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18916-18922]:Modifier[18916-18922]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18923-18928]:Modifier[18923-18928]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18929-18933]:PrimitiveType[18929-18933]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[18934-18948]:SimpleName[18934-18948]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[18949-18960]:SingleVariableDeclaration[18949-18960]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18977-18988]:SimpleType[18977-18988]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18990-19013]:SimpleType[18990-19013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19018-19114]:Block[19018-19114]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[19028-19064]:ExpressionStatement[19028-19064]"
    }, {
      "left" : "_writeContext.writeFieldName(name);",
      "right" : "_writeContext.writeFieldName(name);",
      "info" : "ExpressionStatement[19073-19108]:ExpressionStatement[19073-19108]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19120-19129]:MarkerAnnotation[19120-19129]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19134-19140]:Modifier[19134-19140]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19141-19145]:PrimitiveType[19141-19145]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[19146-19160]:SimpleName[19146-19160]"
    }, {
      "left" : "SerializableString name",
      "right" : "SerializableString name",
      "info" : "SingleVariableDeclaration[19161-19184]:SingleVariableDeclaration[19161-19184]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19201-19212]:SimpleType[19201-19212]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[19214-19237]:SimpleType[19214-19237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19242-19349]:Block[19242-19349]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[19252-19288]:ExpressionStatement[19252-19288]"
    }, {
      "left" : "_writeContext.writeFieldName(name.getValue());",
      "right" : "_writeContext.writeFieldName(name.getValue());",
      "info" : "ExpressionStatement[19297-19343]:ExpressionStatement[19297-19343]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19563-19572]:MarkerAnnotation[19563-19572]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19577-19583]:Modifier[19577-19583]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19584-19588]:PrimitiveType[19584-19588]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[19589-19600]:SimpleName[19589-19600]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[19601-19612]:SingleVariableDeclaration[19601-19612]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19621-19632]:SimpleType[19621-19632]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[19633-19656]:SimpleType[19633-19656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19657-19795]:Block[19657-19795]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[19667-19789]:IfStatement[19667-19789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19685-19721]:Block[19685-19721]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[19699-19711]:ExpressionStatement[19699-19711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19727-19789]:Block[19727-19789]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_append(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[19741-19779]:ExpressionStatement[19741-19779]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19801-19810]:MarkerAnnotation[19801-19810]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19815-19821]:Modifier[19815-19821]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19822-19826]:PrimitiveType[19822-19826]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[19827-19838]:SimpleName[19827-19838]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[19839-19850]:SingleVariableDeclaration[19839-19850]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[19852-19862]:SingleVariableDeclaration[19852-19862]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[19864-19871]:SingleVariableDeclaration[19864-19871]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19880-19891]:SimpleType[19880-19891]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[19893-19916]:SimpleType[19893-19916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19917-19976]:Block[19917-19976]"
    }, {
      "left" : "writeString(new String(text, offset, len));",
      "right" : "writeString(new String(text, offset, len));",
      "info" : "ExpressionStatement[19927-19970]:ExpressionStatement[19927-19970]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19982-19991]:MarkerAnnotation[19982-19991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19996-20002]:Modifier[19996-20002]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20003-20007]:PrimitiveType[20003-20007]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[20008-20019]:SimpleName[20008-20019]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[20020-20043]:SingleVariableDeclaration[20020-20043]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20052-20063]:SimpleType[20052-20063]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20065-20088]:SimpleType[20065-20088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20089-20227]:Block[20089-20227]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[20099-20221]:IfStatement[20099-20221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20117-20153]:Block[20117-20153]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[20131-20143]:ExpressionStatement[20131-20143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20159-20221]:Block[20159-20221]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_append(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[20173-20211]:ExpressionStatement[20173-20211]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20237-20246]:MarkerAnnotation[20237-20246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20251-20257]:Modifier[20251-20257]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20258-20262]:PrimitiveType[20258-20262]"
    }, {
      "left" : "writeRawUTF8String",
      "right" : "writeRawUTF8String",
      "info" : "SimpleName[20263-20281]:SimpleName[20263-20281]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[20282-20293]:SingleVariableDeclaration[20282-20293]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[20295-20305]:SingleVariableDeclaration[20295-20305]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[20307-20317]:SingleVariableDeclaration[20307-20317]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20334-20345]:SimpleType[20334-20345]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20347-20370]:SimpleType[20347-20370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20375-20488]:Block[20375-20488]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[20452-20482]:ExpressionStatement[20452-20482]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20494-20503]:MarkerAnnotation[20494-20503]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20508-20514]:Modifier[20508-20514]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20515-20519]:PrimitiveType[20515-20519]"
    }, {
      "left" : "writeUTF8String",
      "right" : "writeUTF8String",
      "info" : "SimpleName[20520-20535]:SimpleName[20520-20535]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[20536-20547]:SingleVariableDeclaration[20536-20547]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[20549-20559]:SingleVariableDeclaration[20549-20559]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[20561-20571]:SingleVariableDeclaration[20561-20571]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20588-20599]:SimpleType[20588-20599]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20601-20624]:SimpleType[20601-20624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20629-20742]:Block[20629-20742]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[20706-20736]:ExpressionStatement[20706-20736]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20748-20757]:MarkerAnnotation[20748-20757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20762-20768]:Modifier[20762-20768]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20769-20773]:PrimitiveType[20769-20773]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[20774-20782]:SimpleName[20774-20782]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[20783-20794]:SingleVariableDeclaration[20783-20794]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20803-20814]:SimpleType[20803-20814]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20816-20839]:SimpleType[20816-20839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20840-20886]:Block[20840-20886]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[20850-20880]:ExpressionStatement[20850-20880]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20892-20901]:MarkerAnnotation[20892-20901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20906-20912]:Modifier[20906-20912]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20913-20917]:PrimitiveType[20913-20917]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[20918-20926]:SimpleName[20918-20926]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[20927-20938]:SingleVariableDeclaration[20927-20938]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[20940-20950]:SingleVariableDeclaration[20940-20950]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[20952-20959]:SingleVariableDeclaration[20952-20959]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20968-20979]:SimpleType[20968-20979]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20981-21004]:SimpleType[20981-21004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21005-21051]:Block[21005-21051]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21015-21045]:ExpressionStatement[21015-21045]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21057-21066]:MarkerAnnotation[21057-21066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21071-21077]:Modifier[21071-21077]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21078-21082]:PrimitiveType[21078-21082]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21083-21091]:SimpleName[21083-21091]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[21092-21115]:SingleVariableDeclaration[21092-21115]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21124-21135]:SimpleType[21124-21135]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21137-21160]:SimpleType[21137-21160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21161-21207]:Block[21161-21207]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21171-21201]:ExpressionStatement[21171-21201]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21217-21226]:MarkerAnnotation[21217-21226]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21231-21237]:Modifier[21231-21237]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21238-21242]:PrimitiveType[21238-21242]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21243-21251]:SimpleName[21243-21251]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[21252-21263]:SingleVariableDeclaration[21252-21263]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21265-21275]:SingleVariableDeclaration[21265-21275]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[21277-21284]:SingleVariableDeclaration[21277-21284]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21293-21304]:SimpleType[21293-21304]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21306-21329]:SimpleType[21306-21329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21330-21376]:Block[21330-21376]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21340-21370]:ExpressionStatement[21340-21370]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21382-21391]:MarkerAnnotation[21382-21391]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21396-21402]:Modifier[21396-21402]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21403-21407]:PrimitiveType[21403-21407]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21408-21416]:SimpleName[21408-21416]"
    }, {
      "left" : "char c",
      "right" : "char c",
      "info" : "SingleVariableDeclaration[21417-21423]:SingleVariableDeclaration[21417-21423]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21432-21443]:SimpleType[21432-21443]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21445-21468]:SimpleType[21445-21468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21469-21515]:Block[21469-21515]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21479-21509]:ExpressionStatement[21479-21509]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21521-21530]:MarkerAnnotation[21521-21530]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21535-21541]:Modifier[21535-21541]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21542-21546]:PrimitiveType[21542-21546]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[21547-21560]:SimpleName[21547-21560]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21561-21572]:SingleVariableDeclaration[21561-21572]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21581-21592]:SimpleType[21581-21592]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21594-21617]:SimpleType[21594-21617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21618-21664]:Block[21618-21664]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21628-21658]:ExpressionStatement[21628-21658]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21670-21679]:MarkerAnnotation[21670-21679]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21684-21690]:Modifier[21684-21690]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21691-21695]:PrimitiveType[21691-21695]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[21696-21709]:SimpleName[21696-21709]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21710-21721]:SingleVariableDeclaration[21710-21721]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21723-21733]:SingleVariableDeclaration[21723-21733]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[21735-21742]:SingleVariableDeclaration[21735-21742]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21751-21762]:SimpleType[21751-21762]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21764-21787]:SimpleType[21764-21787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21788-21834]:Block[21788-21834]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21798-21828]:ExpressionStatement[21798-21828]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21840-21849]:MarkerAnnotation[21840-21849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21854-21860]:Modifier[21854-21860]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21861-21865]:PrimitiveType[21861-21865]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[21866-21879]:SimpleName[21866-21879]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[21880-21891]:SingleVariableDeclaration[21880-21891]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21893-21903]:SingleVariableDeclaration[21893-21903]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[21905-21912]:SingleVariableDeclaration[21905-21912]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21921-21932]:SimpleType[21921-21932]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21934-21957]:SimpleType[21934-21957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21958-22004]:Block[21958-22004]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21968-21998]:ExpressionStatement[21968-21998]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22222-22231]:MarkerAnnotation[22222-22231]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22236-22242]:Modifier[22236-22242]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22243-22247]:PrimitiveType[22243-22247]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22248-22259]:SimpleName[22248-22259]"
    }, {
      "left" : "short i",
      "right" : "short i",
      "info" : "SingleVariableDeclaration[22260-22267]:SingleVariableDeclaration[22260-22267]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22276-22287]:SimpleType[22276-22287]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22289-22312]:SimpleType[22289-22312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22313-22383]:Block[22313-22383]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "info" : "ExpressionStatement[22323-22377]:ExpressionStatement[22323-22377]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22389-22398]:MarkerAnnotation[22389-22398]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22403-22409]:Modifier[22403-22409]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22410-22414]:PrimitiveType[22410-22414]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22415-22426]:SimpleName[22415-22426]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[22427-22432]:SingleVariableDeclaration[22427-22432]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22441-22452]:SimpleType[22441-22452]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22454-22477]:SimpleType[22454-22477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22478-22550]:Block[22478-22550]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "info" : "ExpressionStatement[22488-22544]:ExpressionStatement[22488-22544]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22556-22565]:MarkerAnnotation[22556-22565]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22570-22576]:Modifier[22570-22576]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22577-22581]:PrimitiveType[22577-22581]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22582-22593]:SimpleName[22582-22593]"
    }, {
      "left" : "long l",
      "right" : "long l",
      "info" : "SingleVariableDeclaration[22594-22600]:SingleVariableDeclaration[22594-22600]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22609-22620]:SimpleType[22609-22620]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22622-22645]:SimpleType[22622-22645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22646-22715]:Block[22646-22715]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "info" : "ExpressionStatement[22656-22709]:ExpressionStatement[22656-22709]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22721-22730]:MarkerAnnotation[22721-22730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22735-22741]:Modifier[22735-22741]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22742-22746]:PrimitiveType[22742-22746]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22747-22758]:SimpleName[22747-22758]"
    }, {
      "left" : "double d",
      "right" : "double d",
      "info" : "SingleVariableDeclaration[22759-22767]:SingleVariableDeclaration[22759-22767]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22776-22787]:SimpleType[22776-22787]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22788-22811]:SimpleType[22788-22811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22812-22885]:Block[22812-22885]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "info" : "ExpressionStatement[22822-22879]:ExpressionStatement[22822-22879]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22891-22900]:MarkerAnnotation[22891-22900]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22905-22911]:Modifier[22905-22911]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22912-22916]:PrimitiveType[22912-22916]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22917-22928]:SimpleName[22917-22928]"
    }, {
      "left" : "float f",
      "right" : "float f",
      "info" : "SingleVariableDeclaration[22929-22936]:SingleVariableDeclaration[22929-22936]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22945-22956]:SimpleType[22945-22956]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22958-22981]:SimpleType[22958-22981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22982-23054]:Block[22982-23054]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "info" : "ExpressionStatement[22992-23048]:ExpressionStatement[22992-23048]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23060-23069]:MarkerAnnotation[23060-23069]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23074-23080]:Modifier[23074-23080]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23081-23085]:PrimitiveType[23081-23085]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23086-23097]:SimpleName[23086-23097]"
    }, {
      "left" : "BigDecimal dec",
      "right" : "BigDecimal dec",
      "info" : "SingleVariableDeclaration[23098-23112]:SingleVariableDeclaration[23098-23112]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23121-23132]:SimpleType[23121-23132]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23133-23156]:SimpleType[23133-23156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23157-23299]:Block[23157-23299]"
    }, {
      "left" : "if (dec == null)",
      "right" : "if (dec == null)",
      "info" : "IfStatement[23167-23293]:IfStatement[23167-23293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23184-23220]:Block[23184-23220]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[23198-23210]:ExpressionStatement[23198-23210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23226-23293]:Block[23226-23293]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "info" : "ExpressionStatement[23240-23283]:ExpressionStatement[23240-23283]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23305-23314]:MarkerAnnotation[23305-23314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23319-23325]:Modifier[23319-23325]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23326-23330]:PrimitiveType[23326-23330]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23331-23342]:SimpleName[23331-23342]"
    }, {
      "left" : "BigInteger v",
      "right" : "BigInteger v",
      "info" : "SingleVariableDeclaration[23343-23355]:SingleVariableDeclaration[23343-23355]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23364-23375]:SimpleType[23364-23375]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23377-23400]:SimpleType[23377-23400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23401-23537]:Block[23401-23537]"
    }, {
      "left" : "if (v == null)",
      "right" : "if (v == null)",
      "info" : "IfStatement[23411-23531]:IfStatement[23411-23531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23426-23462]:Block[23426-23462]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[23440-23452]:ExpressionStatement[23440-23452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23468-23531]:Block[23468-23531]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, v);",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, v);",
      "info" : "ExpressionStatement[23482-23521]:ExpressionStatement[23482-23521]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23543-23552]:MarkerAnnotation[23543-23552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23557-23563]:Modifier[23557-23563]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23564-23568]:PrimitiveType[23564-23568]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23569-23580]:SimpleName[23569-23580]"
    }, {
      "left" : "String encodedValue",
      "right" : "String encodedValue",
      "info" : "SingleVariableDeclaration[23581-23600]:SingleVariableDeclaration[23581-23600]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23609-23620]:SimpleType[23609-23620]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23622-23645]:SimpleType[23622-23645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23646-23854]:Block[23646-23854]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "info" : "ExpressionStatement[23796-23848]:ExpressionStatement[23796-23848]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23860-23869]:MarkerAnnotation[23860-23869]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23874-23880]:Modifier[23874-23880]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23881-23885]:PrimitiveType[23881-23885]"
    }, {
      "left" : "writeBoolean",
      "right" : "writeBoolean",
      "info" : "SimpleName[23886-23898]:SimpleName[23886-23898]"
    }, {
      "left" : "boolean state",
      "right" : "boolean state",
      "info" : "SingleVariableDeclaration[23899-23912]:SingleVariableDeclaration[23899-23912]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23921-23932]:SimpleType[23921-23932]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23933-23956]:SimpleType[23933-23956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23957-24035]:Block[23957-24035]"
    }, {
      "left" : "_append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "right" : "_append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "info" : "ExpressionStatement[23967-24029]:ExpressionStatement[23967-24029]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24041-24050]:MarkerAnnotation[24041-24050]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24055-24061]:Modifier[24055-24061]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24062-24066]:PrimitiveType[24062-24066]"
    }, {
      "left" : "writeNull",
      "right" : "writeNull",
      "info" : "SimpleName[24067-24076]:SimpleName[24067-24076]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24086-24097]:SimpleType[24086-24097]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[24099-24122]:SimpleType[24099-24122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24123-24169]:Block[24123-24169]"
    }, {
      "left" : "_append(JsonToken.VALUE_NULL);",
      "right" : "_append(JsonToken.VALUE_NULL);",
      "info" : "ExpressionStatement[24133-24163]:ExpressionStatement[24133-24163]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24388-24397]:MarkerAnnotation[24388-24397]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24402-24408]:Modifier[24402-24408]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24409-24413]:PrimitiveType[24409-24413]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[24414-24425]:SimpleName[24414-24425]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[24426-24438]:SingleVariableDeclaration[24426-24438]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24447-24458]:SimpleType[24447-24458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24463-24796]:Block[24463-25157]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[24477-24525]:ExpressionStatement[24637-24685]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[24477-24525]:ExpressionStatement[25026-25074]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24802-24811]:MarkerAnnotation[25163-25172]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24816-24822]:Modifier[25177-25183]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24823-24827]:PrimitiveType[25184-25188]"
    }, {
      "left" : "writeTree",
      "right" : "writeTree",
      "info" : "SimpleName[24828-24837]:SimpleName[25189-25198]"
    }, {
      "left" : "TreeNode node",
      "right" : "TreeNode node",
      "info" : "SingleVariableDeclaration[24838-24851]:SingleVariableDeclaration[25199-25212]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24860-24871]:SimpleType[25221-25232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24876-25003]:Block[25237-25558]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "info" : "ExpressionStatement[24950-24997]:ExpressionStatement[25430-25477]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25199-25208]:MarkerAnnotation[25754-25763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25213-25219]:Modifier[25768-25774]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25220-25224]:PrimitiveType[25775-25779]"
    }, {
      "left" : "writeBinary",
      "right" : "writeBinary",
      "info" : "SimpleName[25225-25236]:SimpleName[25780-25791]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[25237-25261]:SingleVariableDeclaration[25792-25816]"
    }, {
      "left" : "byte[] data",
      "right" : "byte[] data",
      "info" : "SingleVariableDeclaration[25263-25274]:SingleVariableDeclaration[25818-25829]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[25276-25286]:SingleVariableDeclaration[25831-25841]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[25288-25295]:SingleVariableDeclaration[25843-25850]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[25312-25323]:SimpleType[25867-25878]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[25325-25348]:SimpleType[25880-25903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25353-25821]:Block[25908-26376]"
    }, {
      "left" : "byte[] copy = new byte[len];",
      "right" : "byte[] copy = new byte[len];",
      "info" : "VariableDeclarationStatement[25706-25734]:VariableDeclarationStatement[26261-26289]"
    }, {
      "left" : "System.arraycopy(data, offset, copy, 0, len);",
      "right" : "System.arraycopy(data, offset, copy, 0, len);",
      "info" : "ExpressionStatement[25743-25788]:ExpressionStatement[26298-26343]"
    }, {
      "left" : "writeObject(copy);",
      "right" : "writeObject(copy);",
      "info" : "ExpressionStatement[25797-25815]:ExpressionStatement[26352-26370]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26111-26120]:MarkerAnnotation[26666-26675]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26125-26131]:Modifier[26680-26686]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[26132-26135]:PrimitiveType[26687-26690]"
    }, {
      "left" : "writeBinary",
      "right" : "writeBinary",
      "info" : "SimpleName[26136-26147]:SimpleName[26691-26702]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[26148-26172]:SingleVariableDeclaration[26703-26727]"
    }, {
      "left" : "InputStream data",
      "right" : "InputStream data",
      "info" : "SingleVariableDeclaration[26174-26190]:SingleVariableDeclaration[26729-26745]"
    }, {
      "left" : "int dataLength",
      "right" : "int dataLength",
      "info" : "SingleVariableDeclaration[26192-26206]:SingleVariableDeclaration[26747-26761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26208-26266]:Block[26763-26821]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[26218-26260]:ThrowStatement[26773-26815]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26466-26475]:MarkerAnnotation[27021-27030]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26480-26486]:Modifier[27035-27041]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[26487-26494]:PrimitiveType[27042-27049]"
    }, {
      "left" : "canWriteTypeId",
      "right" : "canWriteTypeId",
      "info" : "SimpleName[26495-26509]:SimpleName[27050-27064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26512-26553]:Block[27067-27108]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[26522-26547]:ReturnStatement[27077-27102]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26559-26568]:MarkerAnnotation[27114-27123]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26573-26579]:Modifier[27128-27134]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[26580-26587]:PrimitiveType[27135-27142]"
    }, {
      "left" : "canWriteObjectId",
      "right" : "canWriteObjectId",
      "info" : "SimpleName[26588-26604]:SimpleName[27143-27159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26607-26650]:Block[27162-27205]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[26617-26644]:ReturnStatement[27172-27199]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26660-26669]:MarkerAnnotation[27215-27224]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26674-26680]:Modifier[27229-27235]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26681-26685]:PrimitiveType[27236-27240]"
    }, {
      "left" : "writeTypeId",
      "right" : "writeTypeId",
      "info" : "SimpleName[26686-26697]:SimpleName[27241-27252]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[26698-26707]:SingleVariableDeclaration[27253-27262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26709-26767]:Block[27264-27322]"
    }, {
      "left" : "_typeId = id;",
      "right" : "_typeId = id;",
      "info" : "ExpressionStatement[26719-26732]:ExpressionStatement[27274-27287]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[26741-26761]:ExpressionStatement[27296-27316]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26777-26786]:MarkerAnnotation[27332-27341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26791-26797]:Modifier[27346-27352]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26798-26802]:PrimitiveType[27353-27357]"
    }, {
      "left" : "writeObjectId",
      "right" : "writeObjectId",
      "info" : "SimpleName[26803-26816]:SimpleName[27358-27371]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[26817-26826]:SingleVariableDeclaration[27372-27381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26828-26888]:Block[27383-27443]"
    }, {
      "left" : "_objectId = id;",
      "right" : "_objectId = id;",
      "info" : "ExpressionStatement[26838-26853]:ExpressionStatement[27393-27408]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[26862-26882]:ExpressionStatement[27417-27437]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27093-27102]:MarkerAnnotation[27648-27657]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27107-27113]:Modifier[27662-27668]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27114-27118]:PrimitiveType[27669-27673]"
    }, {
      "left" : "copyCurrentEvent",
      "right" : "copyCurrentEvent",
      "info" : "SimpleName[27119-27135]:SimpleName[27674-27690]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[27136-27149]:SingleVariableDeclaration[27691-27704]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[27158-27169]:SimpleType[27713-27724]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[27171-27194]:SimpleType[27726-27749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27199-29183]:Block[27754-29738]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[27209-27276]:IfStatement[27764-27831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27232-27276]:Block[27787-27831]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[27246-27266]:ExpressionStatement[27801-27821]"
    }, {
      "left" : "switch (jp.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(jp.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (jp.hasTextCharacters()) {\n                writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());\n            } else {\n                writeString(jp.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n            switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(jp.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "right" : "switch (jp.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(jp.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (jp.hasTextCharacters()) {\n                writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());\n            } else {\n                writeString(jp.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n            switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(jp.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "info" : "SwitchStatement[27285-29177]:SwitchStatement[27840-29732]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[27325-27343]:SwitchCase[27880-27898]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[27356-27375]:ExpressionStatement[27911-27930]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27388-27394]:BreakStatement[27943-27949]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[27403-27419]:SwitchCase[27958-27974]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[27432-27449]:ExpressionStatement[27987-28004]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27462-27468]:BreakStatement[28017-28023]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[27477-27494]:SwitchCase[28032-28049]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[27507-27525]:ExpressionStatement[28062-28080]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27538-27544]:BreakStatement[28093-28099]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[27553-27568]:SwitchCase[28108-28123]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[27581-27597]:ExpressionStatement[28136-28152]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27610-27616]:BreakStatement[28165-28171]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[27625-27641]:SwitchCase[28180-28196]"
    }, {
      "left" : "writeFieldName(jp.getCurrentName());",
      "right" : "writeFieldName(jp.getCurrentName());",
      "info" : "ExpressionStatement[27654-27690]:ExpressionStatement[28209-28245]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27703-27709]:BreakStatement[28258-28264]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[27718-27736]:SwitchCase[28273-28291]"
    }, {
      "left" : "if (jp.hasTextCharacters())",
      "right" : "if (jp.hasTextCharacters())",
      "info" : "IfStatement[27749-27949]:IfStatement[28304-28504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27777-27885]:Block[28332-28440]"
    }, {
      "left" : "writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());",
      "right" : "writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());",
      "info" : "ExpressionStatement[27795-27871]:ExpressionStatement[28350-28426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27891-27949]:Block[28446-28504]"
    }, {
      "left" : "writeString(jp.getText());",
      "right" : "writeString(jp.getText());",
      "info" : "ExpressionStatement[27909-27935]:ExpressionStatement[28464-28490]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27962-27968]:BreakStatement[28517-28523]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[27977-27999]:SwitchCase[28532-28554]"
    }, {
      "left" : "switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }",
      "right" : "switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }",
      "info" : "SwitchStatement[28012-28323]:SwitchStatement[28567-28878]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[28054-28063]:SwitchCase[28609-28618]"
    }, {
      "left" : "writeNumber(jp.getIntValue());",
      "right" : "writeNumber(jp.getIntValue());",
      "info" : "ExpressionStatement[28080-28110]:ExpressionStatement[28635-28665]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28127-28133]:BreakStatement[28682-28688]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[28146-28163]:SwitchCase[28701-28718]"
    }, {
      "left" : "writeNumber(jp.getBigIntegerValue());",
      "right" : "writeNumber(jp.getBigIntegerValue());",
      "info" : "ExpressionStatement[28180-28217]:ExpressionStatement[28735-28772]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28234-28240]:BreakStatement[28789-28795]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[28253-28261]:SwitchCase[28808-28816]"
    }, {
      "left" : "writeNumber(jp.getLongValue());",
      "right" : "writeNumber(jp.getLongValue());",
      "info" : "ExpressionStatement[28278-28309]:ExpressionStatement[28833-28864]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28336-28342]:BreakStatement[28891-28897]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[28351-28375]:SwitchCase[28906-28930]"
    }, {
      "left" : "switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }",
      "right" : "switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }",
      "info" : "SwitchStatement[28388-28702]:SwitchStatement[28943-29257]"
    }, {
      "left" : "case BIG_DECIMAL:",
      "right" : "case BIG_DECIMAL:",
      "info" : "SwitchCase[28430-28447]:SwitchCase[28985-29002]"
    }, {
      "left" : "writeNumber(jp.getDecimalValue());",
      "right" : "writeNumber(jp.getDecimalValue());",
      "info" : "ExpressionStatement[28464-28498]:ExpressionStatement[29019-29053]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28515-28521]:BreakStatement[29070-29076]"
    }, {
      "left" : "case FLOAT:",
      "right" : "case FLOAT:",
      "info" : "SwitchCase[28534-28545]:SwitchCase[29089-29100]"
    }, {
      "left" : "writeNumber(jp.getFloatValue());",
      "right" : "writeNumber(jp.getFloatValue());",
      "info" : "ExpressionStatement[28562-28594]:ExpressionStatement[29117-29149]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28611-28617]:BreakStatement[29166-29172]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[28630-28638]:SwitchCase[29185-29193]"
    }, {
      "left" : "writeNumber(jp.getDoubleValue());",
      "right" : "writeNumber(jp.getDoubleValue());",
      "info" : "ExpressionStatement[28655-28688]:ExpressionStatement[29210-29243]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28715-28721]:BreakStatement[29270-29276]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[28730-28746]:SwitchCase[29285-29301]"
    }, {
      "left" : "writeBoolean(true);",
      "right" : "writeBoolean(true);",
      "info" : "ExpressionStatement[28759-28778]:ExpressionStatement[29314-29333]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28791-28797]:BreakStatement[29346-29352]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[28806-28823]:SwitchCase[29361-29378]"
    }, {
      "left" : "writeBoolean(false);",
      "right" : "writeBoolean(false);",
      "info" : "ExpressionStatement[28836-28856]:ExpressionStatement[29391-29411]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28869-28875]:BreakStatement[29424-29430]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[28884-28900]:SwitchCase[29439-29455]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[28913-28925]:ExpressionStatement[29468-29480]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28938-28944]:BreakStatement[29493-29499]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[28953-28980]:SwitchCase[29508-29535]"
    }, {
      "left" : "writeObject(jp.getEmbeddedObject());",
      "right" : "writeObject(jp.getEmbeddedObject());",
      "info" : "ExpressionStatement[28993-29029]:ExpressionStatement[29548-29584]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29042-29048]:BreakStatement[29597-29603]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29057-29065]:SwitchCase[29612-29620]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[29078-29167]:ThrowStatement[29633-29722]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29193-29202]:MarkerAnnotation[29748-29757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29207-29213]:Modifier[29762-29768]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29214-29218]:PrimitiveType[29769-29773]"
    }, {
      "left" : "copyCurrentStructure",
      "right" : "copyCurrentStructure",
      "info" : "SimpleName[29219-29239]:SimpleName[29774-29794]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[29240-29253]:SingleVariableDeclaration[29795-29808]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[29262-29273]:SimpleType[29817-29828]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[29275-29298]:SimpleType[29830-29853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29303-30320]:Block[29858-30875]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[29313-29348]:VariableDeclarationStatement[29868-29903]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[29410-29678]:IfStatement[29965-30233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29441-29678]:Block[29996-30233]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[29455-29530]:IfStatement[30010-30085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29478-29530]:Block[30033-30085]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[29496-29516]:ExpressionStatement[30051-30071]"
    }, {
      "left" : "writeFieldName(jp.getCurrentName());",
      "right" : "writeFieldName(jp.getCurrentName());",
      "info" : "ExpressionStatement[29543-29579]:ExpressionStatement[30098-30134]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[29592-29611]:ExpressionStatement[30147-30166]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[29688-29755]:IfStatement[30243-30310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29711-29755]:Block[30266-30310]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[29725-29745]:ExpressionStatement[30280-30300]"
    }, {
      "left" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "right" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "info" : "SwitchStatement[29773-30314]:SwitchStatement[30328-30869]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[29794-29811]:SwitchCase[30349-30366]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[29824-29842]:ExpressionStatement[30379-30397]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "right" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "info" : "WhileStatement[29855-29958]:WhileStatement[30410-30513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29901-29958]:Block[30456-30513]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[29919-29944]:ExpressionStatement[30474-30499]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[29971-29987]:ExpressionStatement[30526-30542]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30000-30006]:BreakStatement[30555-30561]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[30015-30033]:SwitchCase[30570-30588]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[30046-30065]:ExpressionStatement[30601-30620]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "right" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "info" : "WhileStatement[30078-30182]:WhileStatement[30633-30737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30125-30182]:Block[30680-30737]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[30143-30168]:ExpressionStatement[30698-30723]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[30195-30212]:ExpressionStatement[30750-30767]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30225-30231]:BreakStatement[30780-30786]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[30240-30248]:SwitchCase[30795-30803]"
    }, {
      "left" : "copyCurrentEvent(jp);",
      "right" : "copyCurrentEvent(jp);",
      "info" : "ExpressionStatement[30283-30304]:ExpressionStatement[30838-30859]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30331-30338]:Modifier[30886-30893]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30339-30344]:Modifier[30894-30899]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30345-30349]:PrimitiveType[30900-30904]"
    }, {
      "left" : "_checkNativeIds",
      "right" : "_checkNativeIds",
      "info" : "SimpleName[30350-30365]:SimpleName[30905-30920]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[30366-30379]:SingleVariableDeclaration[30921-30934]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[30388-30399]:SimpleType[30943-30954]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[30401-30424]:SimpleType[30956-30979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30429-30626]:Block[30984-31181]"
    }, {
      "left" : "if ((_typeId = jp.getTypeId()) != null)",
      "right" : "if ((_typeId = jp.getTypeId()) != null)",
      "info" : "IfStatement[30439-30523]:IfStatement[30994-31078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30479-30523]:Block[31034-31078]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[30493-30513]:ExpressionStatement[31048-31068]"
    }, {
      "left" : "if ((_objectId = jp.getObjectId()) != null)",
      "right" : "if ((_objectId = jp.getObjectId()) != null)",
      "info" : "IfStatement[30532-30620]:IfStatement[31087-31175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30576-30620]:Block[31131-31175]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[30590-30610]:ExpressionStatement[31145-31165]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30804-30813]:Modifier[31359-31368]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30814-30819]:Modifier[31369-31374]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30820-30824]:PrimitiveType[31375-31379]"
    }, {
      "left" : "_append",
      "right" : "_append",
      "info" : "SimpleName[30825-30832]:SimpleName[31380-31387]"
    }, {
      "left" : "JsonToken type",
      "right" : "JsonToken type",
      "info" : "SingleVariableDeclaration[30833-30847]:SingleVariableDeclaration[31388-31402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30853-31175]:Block[31408-31730]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "info" : "VariableDeclarationStatement[30863-31007]:VariableDeclarationStatement[31418-31562]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[31016-31169]:IfStatement[31571-31724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31034-31070]:Block[31589-31625]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[31048-31060]:ExpressionStatement[31603-31615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31076-31169]:Block[31631-31724]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[31090-31103]:ExpressionStatement[31645-31658]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[31116-31130]:ExpressionStatement[31671-31685]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31181-31190]:Modifier[31736-31745]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31191-31196]:Modifier[31746-31751]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31197-31201]:PrimitiveType[31752-31756]"
    }, {
      "left" : "_append",
      "right" : "_append",
      "info" : "SimpleName[31202-31209]:SimpleName[31757-31764]"
    }, {
      "left" : "JsonToken type",
      "right" : "JsonToken type",
      "info" : "SingleVariableDeclaration[31210-31224]:SingleVariableDeclaration[31765-31779]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[31226-31238]:SingleVariableDeclaration[31781-31793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31244-31551]:Block[31799-32106]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "info" : "VariableDeclarationStatement[31254-31412]:VariableDeclarationStatement[31809-31967]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[31421-31545]:IfStatement[31976-32100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31439-31475]:Block[31994-32030]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[31453-31465]:ExpressionStatement[32008-32020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31481-31545]:Block[32036-32100]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[31495-31508]:ExpressionStatement[32050-32063]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[31521-31535]:ExpressionStatement[32076-32090]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31557-31566]:Modifier[32112-32121]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31567-31572]:Modifier[32122-32127]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31573-31577]:PrimitiveType[32128-32132]"
    }, {
      "left" : "_appendRaw",
      "right" : "_appendRaw",
      "info" : "SimpleName[31578-31588]:SimpleName[32133-32143]"
    }, {
      "left" : "int rawType",
      "right" : "int rawType",
      "info" : "SingleVariableDeclaration[31589-31600]:SingleVariableDeclaration[32144-32155]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[31602-31614]:SingleVariableDeclaration[32157-32169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31620-31939]:Block[32175-32494]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "info" : "VariableDeclarationStatement[31630-31800]:VariableDeclarationStatement[32185-32355]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[31809-31933]:IfStatement[32364-32488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31827-31863]:Block[32382-32418]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[31841-31853]:ExpressionStatement[32396-32408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31869-31933]:Block[32424-32488]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[31883-31896]:ExpressionStatement[32438-32451]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[31909-31923]:ExpressionStatement[32464-32478]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[31945-31954]:MarkerAnnotation[32500-32509]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31959-31968]:Modifier[32514-32523]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31969-31973]:PrimitiveType[32524-32528]"
    }, {
      "left" : "_reportUnsupportedOperation",
      "right" : "_reportUnsupportedOperation",
      "info" : "SimpleName[31974-32001]:SimpleName[32529-32556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32004-32110]:Block[32559-32665]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "right" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "info" : "ThrowStatement[32014-32104]:ThrowStatement[32569-32659]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32290-32299]:Modifier[32845-32854]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[32300-32305]:Modifier[32855-32860]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32306-32312]:Modifier[32861-32867]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[32313-32318]:TYPE_DECLARATION_KIND[32868-32873]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[32319-32325]:SimpleName[32874-32880]"
    }, {
      "left" : "ParserMinimalBase",
      "right" : "ParserMinimalBase",
      "info" : "SimpleType[32342-32359]:SimpleType[32897-32914]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[33808-33819]:MarkerAnnotation[34363-34374]"
    }, {
      "left" : "// since 2.3",
      "right" : "// since 2.3",
      "info" : "LineComment[33820-33832]:LineComment[34375-34387]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33841-33850]:Modifier[34396-34405]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[33851-33857]:SimpleName[34406-34412]"
    }, {
      "left" : "Segment firstSeg",
      "right" : "Segment firstSeg",
      "info" : "SingleVariableDeclaration[33858-33874]:SingleVariableDeclaration[34413-34429]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[33876-33893]:SingleVariableDeclaration[34431-34448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33895-33955]:Block[34450-34510]"
    }, {
      "left" : "this(firstSeg, codec, false, false);",
      "right" : "this(firstSeg, codec, false, false);",
      "info" : "ConstructorInvocation[33909-33945]:ConstructorInvocation[34464-34500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34011-34017]:Modifier[34566-34572]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[34018-34024]:SimpleName[34573-34579]"
    }, {
      "left" : "Segment firstSeg",
      "right" : "Segment firstSeg",
      "info" : "SingleVariableDeclaration[34025-34041]:SingleVariableDeclaration[34580-34596]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[34043-34060]:SingleVariableDeclaration[34598-34615]"
    }, {
      "left" : "boolean hasNativeTypeIds",
      "right" : "boolean hasNativeTypeIds",
      "info" : "SingleVariableDeclaration[34078-34102]:SingleVariableDeclaration[34633-34657]"
    }, {
      "left" : "boolean hasNativeObjectIds",
      "right" : "boolean hasNativeObjectIds",
      "info" : "SingleVariableDeclaration[34120-34146]:SingleVariableDeclaration[34675-34701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34156-34540]:Block[34711-35095]"
    }, {
      "left" : "super(0);",
      "right" : "super(0);",
      "info" : "SuperConstructorInvocation[34170-34179]:SuperConstructorInvocation[34725-34734]"
    }, {
      "left" : "_segment = firstSeg;",
      "right" : "_segment = firstSeg;",
      "info" : "ExpressionStatement[34192-34212]:ExpressionStatement[34747-34767]"
    }, {
      "left" : "_segmentPtr = -1;",
      "right" : "_segmentPtr = -1;",
      "info" : "ExpressionStatement[34225-34242]:ExpressionStatement[34780-34797]"
    }, {
      "left" : "_codec = codec;",
      "right" : "_codec = codec;",
      "info" : "ExpressionStatement[34271-34286]:ExpressionStatement[34826-34841]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[34299-34357]:ExpressionStatement[34854-34912]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "right" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "info" : "ExpressionStatement[34370-34407]:ExpressionStatement[34925-34962]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "right" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "info" : "ExpressionStatement[34420-34461]:ExpressionStatement[34975-35016]"
    }, {
      "left" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "right" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "info" : "ExpressionStatement[34474-34530]:ExpressionStatement[35029-35085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34550-34556]:Modifier[35105-35111]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34557-34561]:PrimitiveType[35112-35116]"
    }, {
      "left" : "setLocation",
      "right" : "setLocation",
      "info" : "SimpleName[34562-34573]:SimpleName[35117-35128]"
    }, {
      "left" : "JsonLocation l",
      "right" : "JsonLocation l",
      "info" : "SingleVariableDeclaration[34574-34588]:SingleVariableDeclaration[35129-35143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34590-34628]:Block[35145-35183]"
    }, {
      "left" : "_location = l;",
      "right" : "_location = l;",
      "info" : "ExpressionStatement[34604-34618]:ExpressionStatement[35159-35173]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34646-34655]:MarkerAnnotation[35201-35210]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34664-34670]:Modifier[35219-35225]"
    }, {
      "left" : "ObjectCodec",
      "right" : "ObjectCodec",
      "info" : "SimpleType[34671-34682]:SimpleType[35226-35237]"
    }, {
      "left" : "getCodec",
      "right" : "getCodec",
      "info" : "SimpleName[34683-34691]:SimpleName[35238-35246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34694-34712]:Block[35249-35267]"
    }, {
      "left" : "return _codec;",
      "right" : "return _codec;",
      "info" : "ReturnStatement[34696-34710]:ReturnStatement[35251-35265]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34722-34731]:MarkerAnnotation[35277-35286]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34740-34746]:Modifier[35295-35301]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34747-34751]:PrimitiveType[35302-35306]"
    }, {
      "left" : "setCodec",
      "right" : "setCodec",
      "info" : "SimpleName[34752-34760]:SimpleName[35307-35315]"
    }, {
      "left" : "ObjectCodec c",
      "right" : "ObjectCodec c",
      "info" : "SingleVariableDeclaration[34761-34774]:SingleVariableDeclaration[35316-35329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34776-34791]:Block[35331-35346]"
    }, {
      "left" : "_codec = c;",
      "right" : "_codec = c;",
      "info" : "ExpressionStatement[34778-34789]:ExpressionStatement[35333-35344]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34801-34810]:MarkerAnnotation[35356-35365]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34819-34825]:Modifier[35374-35380]"
    }, {
      "left" : "Version",
      "right" : "Version",
      "info" : "SimpleType[34826-34833]:SimpleType[35381-35388]"
    }, {
      "left" : "version",
      "right" : "version",
      "info" : "SimpleName[34834-34841]:SimpleName[35389-35396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34844-34933]:Block[35399-35488]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[34858-34923]:ReturnStatement[35413-35478]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35153-35159]:Modifier[35708-35714]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[35160-35169]:SimpleType[35715-35724]"
    }, {
      "left" : "peekNextToken",
      "right" : "peekNextToken",
      "info" : "SimpleName[35170-35183]:SimpleName[35725-35738]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[35205-35216]:SimpleType[35760-35771]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[35218-35236]:SimpleType[35773-35791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35245-35625]:Block[35800-36180]"
    }, {
      "left" : "if (_closed)",
      "right" : "if (_closed)",
      "info" : "IfStatement[35311-35336]:IfStatement[35866-35891]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[35324-35336]:ReturnStatement[35879-35891]"
    }, {
      "left" : "Segment seg = _segment;",
      "right" : "Segment seg = _segment;",
      "info" : "VariableDeclarationStatement[35349-35372]:VariableDeclarationStatement[35904-35927]"
    }, {
      "left" : "int ptr = _segmentPtr+1;",
      "right" : "int ptr = _segmentPtr+1;",
      "info" : "VariableDeclarationStatement[35385-35409]:VariableDeclarationStatement[35940-35964]"
    }, {
      "left" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[35422-35558]:IfStatement[35977-36113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35461-35558]:Block[36016-36113]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[35479-35487]:ExpressionStatement[36034-36042]"
    }, {
      "left" : "seg = (seg == null) ? null : seg.next();",
      "right" : "seg = (seg == null) ? null : seg.next();",
      "info" : "ExpressionStatement[35504-35544]:ExpressionStatement[36059-36099]"
    }, {
      "left" : "return (seg == null) ? null : seg.type(ptr);",
      "right" : "return (seg == null) ? null : seg.type(ptr);",
      "info" : "ReturnStatement[35571-35615]:ReturnStatement[36126-36170]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35839-35848]:MarkerAnnotation[36394-36403]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35857-35863]:Modifier[36412-36418]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35864-35868]:PrimitiveType[36419-36423]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[35869-35874]:SimpleName[36424-36429]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[35884-35895]:SimpleType[36439-36450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35896-35981]:Block[36451-36536]"
    }, {
      "left" : "if (!_closed)",
      "right" : "if (!_closed)",
      "info" : "IfStatement[35910-35971]:IfStatement[36465-36526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35924-35971]:Block[36479-36526]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[35942-35957]:ExpressionStatement[36497-36512]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36192-36201]:MarkerAnnotation[36747-36756]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36210-36216]:Modifier[36765-36771]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[36217-36226]:SimpleType[36772-36781]"
    }, {
      "left" : "nextToken",
      "right" : "nextToken",
      "info" : "SimpleName[36227-36236]:SimpleName[36782-36791]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[36246-36257]:SimpleType[36801-36812]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[36259-36277]:SimpleType[36814-36832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36286-37842]:Block[36841-38397]"
    }, {
      "left" : "if (_closed || (_segment == null))",
      "right" : "if (_closed || (_segment == null))",
      "info" : "IfStatement[36352-36399]:IfStatement[36907-36954]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[36387-36399]:ReturnStatement[36942-36954]"
    }, {
      "left" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[36455-36687]:IfStatement[37010-37242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36504-36687]:Block[37059-37242]"
    }, {
      "left" : "_segmentPtr = 0;",
      "right" : "_segmentPtr = 0;",
      "info" : "ExpressionStatement[36522-36538]:ExpressionStatement[37077-37093]"
    }, {
      "left" : "_segment = _segment.next();",
      "right" : "_segment = _segment.next();",
      "info" : "ExpressionStatement[36555-36582]:ExpressionStatement[37110-37137]"
    }, {
      "left" : "if (_segment == null)",
      "right" : "if (_segment == null)",
      "info" : "IfStatement[36599-36673]:IfStatement[37154-37228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36621-36673]:Block[37176-37228]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[36643-36655]:ReturnStatement[37198-37210]"
    }, {
      "left" : "_currToken = _segment.type(_segmentPtr);",
      "right" : "_currToken = _segment.type(_segmentPtr);",
      "info" : "ExpressionStatement[36700-36740]:ExpressionStatement[37255-37295]"
    }, {
      "left" : "if (_currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[36803-37801]:IfStatement[37358-38356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36843-37044]:Block[37398-37599]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[36861-36890]:VariableDeclarationStatement[37416-37445]"
    }, {
      "left" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "right" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "info" : "VariableDeclarationStatement[36907-36976]:VariableDeclarationStatement[37462-37531]"
    }, {
      "left" : "_parsingContext.setCurrentName(name);",
      "right" : "_parsingContext.setCurrentName(name);",
      "info" : "ExpressionStatement[36993-37030]:ExpressionStatement[37548-37585]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT)",
      "right" : "if (_currToken == JsonToken.START_OBJECT)",
      "info" : "IfStatement[37050-37801]:IfStatement[37605-38356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37092-37191]:Block[37647-37746]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "info" : "ExpressionStatement[37110-37177]:ExpressionStatement[37665-37732]"
    }, {
      "left" : "if (_currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[37197-37801]:IfStatement[37752-38356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37238-37336]:Block[37793-37891]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "info" : "ExpressionStatement[37256-37322]:ExpressionStatement[37811-37877]"
    }, {
      "left" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "right" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "info" : "IfStatement[37342-37801]:IfStatement[37897-38356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37439-37801]:Block[37994-38356]"
    }, {
      "left" : "_parsingContext = _parsingContext.getParent();",
      "right" : "_parsingContext = _parsingContext.getParent();",
      "info" : "ExpressionStatement[37526-37572]:ExpressionStatement[38081-38127]"
    }, {
      "left" : "if (_parsingContext == null)",
      "right" : "if (_parsingContext == null)",
      "info" : "IfStatement[37660-37787]:IfStatement[38215-38342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37689-37787]:Block[38244-38342]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[37711-37769]:ExpressionStatement[38266-38324]"
    }, {
      "left" : "return _currToken;",
      "right" : "return _currToken;",
      "info" : "ReturnStatement[37814-37832]:ReturnStatement[38369-38387]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37852-37861]:MarkerAnnotation[38407-38416]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37870-37876]:Modifier[38425-38431]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37877-37884]:PrimitiveType[38432-38439]"
    }, {
      "left" : "isClosed",
      "right" : "isClosed",
      "info" : "SimpleName[37885-37893]:SimpleName[38440-38448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37896-37915]:Block[38451-38470]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[37898-37913]:ReturnStatement[38453-38468]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38132-38141]:MarkerAnnotation[38687-38696]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38150-38156]:Modifier[38705-38711]"
    }, {
      "left" : "JsonStreamContext",
      "right" : "JsonStreamContext",
      "info" : "SimpleType[38157-38174]:SimpleType[38712-38729]"
    }, {
      "left" : "getParsingContext",
      "right" : "getParsingContext",
      "info" : "SimpleName[38175-38192]:SimpleName[38730-38747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38195-38222]:Block[38750-38777]"
    }, {
      "left" : "return _parsingContext;",
      "right" : "return _parsingContext;",
      "info" : "ReturnStatement[38197-38220]:ReturnStatement[38752-38775]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38232-38241]:MarkerAnnotation[38787-38796]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38250-38256]:Modifier[38805-38811]"
    }, {
      "left" : "JsonLocation",
      "right" : "JsonLocation",
      "info" : "SimpleType[38257-38269]:SimpleType[38812-38824]"
    }, {
      "left" : "getTokenLocation",
      "right" : "getTokenLocation",
      "info" : "SimpleName[38270-38286]:SimpleName[38825-38841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38289-38321]:Block[38844-38876]"
    }, {
      "left" : "return getCurrentLocation();",
      "right" : "return getCurrentLocation();",
      "info" : "ReturnStatement[38291-38319]:ReturnStatement[38846-38874]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38331-38340]:MarkerAnnotation[38886-38895]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38349-38355]:Modifier[38904-38910]"
    }, {
      "left" : "JsonLocation",
      "right" : "JsonLocation",
      "info" : "SimpleType[38356-38368]:SimpleType[38911-38923]"
    }, {
      "left" : "getCurrentLocation",
      "right" : "getCurrentLocation",
      "info" : "SimpleName[38369-38387]:SimpleName[38924-38942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38390-38471]:Block[38945-39026]"
    }, {
      "left" : "return (_location == null) ? JsonLocation.NA : _location;",
      "right" : "return (_location == null) ? JsonLocation.NA : _location;",
      "info" : "ReturnStatement[38404-38461]:ReturnStatement[38959-39016]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38481-38490]:MarkerAnnotation[39036-39045]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38499-38505]:Modifier[39054-39060]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[38506-38512]:SimpleType[39061-39067]"
    }, {
      "left" : "getCurrentName",
      "right" : "getCurrentName",
      "info" : "SimpleName[38513-38527]:SimpleName[39068-39082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38530-38574]:Block[39085-39129]"
    }, {
      "left" : "return _parsingContext.getCurrentName();",
      "right" : "return _parsingContext.getCurrentName();",
      "info" : "ReturnStatement[38532-38572]:ReturnStatement[39087-39127]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38584-38593]:MarkerAnnotation[39139-39148]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38602-38608]:Modifier[39157-39163]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38609-38613]:PrimitiveType[39164-39168]"
    }, {
      "left" : "overrideCurrentName",
      "right" : "overrideCurrentName",
      "info" : "SimpleName[38614-38633]:SimpleName[39169-39188]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[38634-38645]:SingleVariableDeclaration[39189-39200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38655-39113]:Block[39210-39668]"
    }, {
      "left" : "JsonReadContext ctxt = _parsingContext;",
      "right" : "JsonReadContext ctxt = _parsingContext;",
      "info" : "VariableDeclarationStatement[38754-38793]:VariableDeclarationStatement[39309-39348]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[38806-38943]:IfStatement[39361-39498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38887-38943]:Block[39442-39498]"
    }, {
      "left" : "ctxt = ctxt.getParent();",
      "right" : "ctxt = ctxt.getParent();",
      "info" : "ExpressionStatement[38905-38929]:ExpressionStatement[39460-39484]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[38956-39103]:TryStatement[39511-39658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38960-39018]:Block[39515-39573]"
    }, {
      "left" : "ctxt.setCurrentName(name);",
      "right" : "ctxt.setCurrentName(name);",
      "info" : "ExpressionStatement[38978-39004]:ExpressionStatement[39533-39559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39041-39103]:Block[39596-39658]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[39059-39089]:ThrowStatement[39614-39644]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39356-39365]:MarkerAnnotation[39911-39920]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39374-39380]:Modifier[39929-39935]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39381-39387]:SimpleType[39936-39942]"
    }, {
      "left" : "getText",
      "right" : "getText",
      "info" : "SimpleName[39388-39395]:SimpleName[39943-39950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39406-40159]:Block[39961-40714]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[39455-39778]:IfStatement[40010-40333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39555-39778]:Block[40110-40333]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[39573-39602]:VariableDeclarationStatement[40128-40157]"
    }, {
      "left" : "if (ob instanceof String)",
      "right" : "if (ob instanceof String)",
      "info" : "IfStatement[39619-39704]:IfStatement[40174-40259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39645-39704]:Block[40200-40259]"
    }, {
      "left" : "return (String) ob;",
      "right" : "return (String) ob;",
      "info" : "ReturnStatement[39667-39686]:ReturnStatement[40222-40241]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[39721-39764]:ReturnStatement[40276-40319]"
    }, {
      "left" : "if (_currToken == null)",
      "right" : "if (_currToken == null)",
      "info" : "IfStatement[39791-39859]:IfStatement[40346-40414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39815-39859]:Block[40370-40414]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[39833-39845]:ReturnStatement[40388-40400]"
    }, {
      "left" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "right" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "info" : "SwitchStatement[39872-40149]:SwitchStatement[40427-40704]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[39906-39928]:SwitchCase[40461-40483]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[39941-39965]:SwitchCase[40496-40520]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[39982-40011]:VariableDeclarationStatement[40537-40566]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[40028-40071]:ReturnStatement[40583-40626]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[40084-40092]:SwitchCase[40639-40647]"
    }, {
      "left" : "return _currToken.asString();",
      "right" : "return _currToken.asString();",
      "info" : "ReturnStatement[40106-40135]:ReturnStatement[40661-40690]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40169-40178]:MarkerAnnotation[40724-40733]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40187-40193]:Modifier[40742-40748]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[40194-40200]:ArrayType[40749-40755]"
    }, {
      "left" : "getTextCharacters",
      "right" : "getTextCharacters",
      "info" : "SimpleName[40201-40218]:SimpleName[40756-40773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40221-40329]:Block[40776-40884]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[40235-40258]:VariableDeclarationStatement[40790-40813]"
    }, {
      "left" : "return (str == null) ? null : str.toCharArray();",
      "right" : "return (str == null) ? null : str.toCharArray();",
      "info" : "ReturnStatement[40271-40319]:ReturnStatement[40826-40874]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40339-40348]:MarkerAnnotation[40894-40903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40357-40363]:Modifier[40912-40918]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[40364-40367]:PrimitiveType[40919-40922]"
    }, {
      "left" : "getTextLength",
      "right" : "getTextLength",
      "info" : "SimpleName[40368-40381]:SimpleName[40923-40936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40384-40484]:Block[40939-41039]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[40398-40421]:VariableDeclarationStatement[40953-40976]"
    }, {
      "left" : "return (str == null) ? 0 : str.length();",
      "right" : "return (str == null) ? 0 : str.length();",
      "info" : "ReturnStatement[40434-40474]:ReturnStatement[40989-41029]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40494-40503]:MarkerAnnotation[41049-41058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40512-40518]:Modifier[41067-41073]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[40519-40522]:PrimitiveType[41074-41077]"
    }, {
      "left" : "getTextOffset",
      "right" : "getTextOffset",
      "info" : "SimpleName[40523-40536]:SimpleName[41078-41091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40539-40552]:Block[41094-41107]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[40541-40550]:ReturnStatement[41096-41105]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40562-40571]:MarkerAnnotation[41117-41126]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40580-40586]:Modifier[41135-41141]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40587-40594]:PrimitiveType[41142-41149]"
    }, {
      "left" : "hasTextCharacters",
      "right" : "hasTextCharacters",
      "info" : "SimpleName[40595-40612]:SimpleName[41150-41167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40615-40707]:Block[41170-41262]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40684-40697]:ReturnStatement[41239-41252]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40945-40954]:MarkerAnnotation[41500-41509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40963-40969]:Modifier[41518-41524]"
    }, {
      "left" : "BigInteger",
      "right" : "BigInteger",
      "info" : "SimpleType[40970-40980]:SimpleType[41525-41535]"
    }, {
      "left" : "getBigIntegerValue",
      "right" : "getBigIntegerValue",
      "info" : "SimpleName[40981-40999]:SimpleName[41536-41554]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[41009-41020]:SimpleType[41564-41575]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[41022-41040]:SimpleType[41577-41595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41049-41460]:Block[41604-42015]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[41063-41091]:VariableDeclarationStatement[41618-41646]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[41104-41187]:IfStatement[41659-41742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41133-41187]:Block[41688-41742]"
    }, {
      "left" : "return (BigInteger) n;",
      "right" : "return (BigInteger) n;",
      "info" : "ReturnStatement[41151-41173]:ReturnStatement[41706-41728]"
    }, {
      "left" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "right" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "info" : "IfStatement[41200-41318]:IfStatement[41755-41873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41247-41318]:Block[41802-41873]"
    }, {
      "left" : "return ((BigDecimal) n).toBigInteger();",
      "right" : "return ((BigDecimal) n).toBigInteger();",
      "info" : "ReturnStatement[41265-41304]:ReturnStatement[41820-41859]"
    }, {
      "left" : "return BigInteger.valueOf(n.longValue());",
      "right" : "return BigInteger.valueOf(n.longValue());",
      "info" : "ReturnStatement[41409-41450]:ReturnStatement[41964-42005]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41470-41479]:MarkerAnnotation[42025-42034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41488-41494]:Modifier[42043-42049]"
    }, {
      "left" : "BigDecimal",
      "right" : "BigDecimal",
      "info" : "SimpleType[41495-41505]:SimpleType[42050-42060]"
    }, {
      "left" : "getDecimalValue",
      "right" : "getDecimalValue",
      "info" : "SimpleName[41506-41521]:SimpleName[42061-42076]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[41531-41542]:SimpleType[42086-42097]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[41544-41562]:SimpleType[42099-42117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41571-42068]:Block[42126-42623]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[41585-41613]:VariableDeclarationStatement[42140-42168]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[41626-41709]:IfStatement[42181-42264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41655-41709]:Block[42210-42264]"
    }, {
      "left" : "return (BigDecimal) n;",
      "right" : "return (BigDecimal) n;",
      "info" : "ReturnStatement[41673-41695]:ReturnStatement[42228-42250]"
    }, {
      "left" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "right" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "info" : "SwitchStatement[41722-41971]:SwitchStatement[42277-42526]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[41761-41770]:SwitchCase[42316-42325]"
    }, {
      "left" : "case LONG:",
      "right" : "case LONG:",
      "info" : "SwitchCase[41783-41793]:SwitchCase[42338-42348]"
    }, {
      "left" : "return BigDecimal.valueOf(n.longValue());",
      "right" : "return BigDecimal.valueOf(n.longValue());",
      "info" : "ReturnStatement[41810-41851]:ReturnStatement[42365-42406]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[41864-41881]:SwitchCase[42419-42436]"
    }, {
      "left" : "return new BigDecimal((BigInteger) n);",
      "right" : "return new BigDecimal((BigInteger) n);",
      "info" : "ReturnStatement[41898-41936]:ReturnStatement[42453-42491]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[41949-41957]:SwitchCase[42504-42512]"
    }, {
      "left" : "return BigDecimal.valueOf(n.doubleValue());",
      "right" : "return BigDecimal.valueOf(n.doubleValue());",
      "info" : "ReturnStatement[42015-42058]:ReturnStatement[42570-42613]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42078-42087]:MarkerAnnotation[42633-42642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42096-42102]:Modifier[42651-42657]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[42103-42109]:PrimitiveType[42658-42664]"
    }, {
      "left" : "getDoubleValue",
      "right" : "getDoubleValue",
      "info" : "SimpleName[42110-42124]:SimpleName[42665-42679]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[42134-42145]:SimpleType[42689-42700]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[42147-42165]:SimpleType[42702-42720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42166-42228]:Block[42721-42783]"
    }, {
      "left" : "return getNumberValue().doubleValue();",
      "right" : "return getNumberValue().doubleValue();",
      "info" : "ReturnStatement[42180-42218]:ReturnStatement[42735-42773]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42238-42247]:MarkerAnnotation[42793-42802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42256-42262]:Modifier[42811-42817]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[42263-42268]:PrimitiveType[42818-42823]"
    }, {
      "left" : "getFloatValue",
      "right" : "getFloatValue",
      "info" : "SimpleName[42269-42282]:SimpleName[42824-42837]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[42292-42303]:SimpleType[42847-42858]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[42305-42323]:SimpleType[42860-42878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42324-42385]:Block[42879-42940]"
    }, {
      "left" : "return getNumberValue().floatValue();",
      "right" : "return getNumberValue().floatValue();",
      "info" : "ReturnStatement[42338-42375]:ReturnStatement[42893-42930]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42395-42404]:MarkerAnnotation[42950-42959]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42413-42419]:Modifier[42968-42974]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42420-42423]:PrimitiveType[42975-42978]"
    }, {
      "left" : "getIntValue",
      "right" : "getIntValue",
      "info" : "SimpleName[42424-42435]:SimpleName[42979-42990]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[42445-42456]:SimpleType[43000-43011]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[42458-42476]:SimpleType[43013-43031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42485-42718]:Block[43040-43273]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "right" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "info" : "IfStatement[42536-42660]:IfStatement[43091-43215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42582-42660]:Block[43137-43215]"
    }, {
      "left" : "return ((Number) _currentObject()).intValue();",
      "right" : "return ((Number) _currentObject()).intValue();",
      "info" : "ReturnStatement[42600-42646]:ReturnStatement[43155-43201]"
    }, {
      "left" : "return getNumberValue().intValue();",
      "right" : "return getNumberValue().intValue();",
      "info" : "ReturnStatement[42673-42708]:ReturnStatement[43228-43263]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42728-42737]:MarkerAnnotation[43283-43292]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42746-42752]:Modifier[43301-43307]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[42753-42757]:PrimitiveType[43308-43312]"
    }, {
      "left" : "getLongValue",
      "right" : "getLongValue",
      "info" : "SimpleName[42758-42770]:SimpleName[43313-43325]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[42780-42791]:SimpleType[43335-43346]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[42793-42811]:SimpleType[43348-43366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42812-42872]:Block[43367-43427]"
    }, {
      "left" : "return getNumberValue().longValue();",
      "right" : "return getNumberValue().longValue();",
      "info" : "ReturnStatement[42826-42862]:ReturnStatement[43381-43417]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42882-42891]:MarkerAnnotation[43437-43446]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42900-42906]:Modifier[43455-43461]"
    }, {
      "left" : "NumberType",
      "right" : "NumberType",
      "info" : "SimpleType[42907-42917]:SimpleType[43462-43472]"
    }, {
      "left" : "getNumberType",
      "right" : "getNumberType",
      "info" : "SimpleName[42918-42931]:SimpleName[43473-43486]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[42941-42952]:SimpleType[43496-43507]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[42954-42972]:SimpleType[43509-43527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42981-43530]:Block[43536-44085]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[42995-43023]:VariableDeclarationStatement[43550-43578]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[43036-43084]:IfStatement[43591-43639]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[43062-43084]:ReturnStatement[43617-43639]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[43097-43143]:IfStatement[43652-43698]"
    }, {
      "left" : "return NumberType.LONG;",
      "right" : "return NumberType.LONG;",
      "info" : "ReturnStatement[43120-43143]:ReturnStatement[43675-43698]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[43156-43206]:IfStatement[43711-43761]"
    }, {
      "left" : "return NumberType.DOUBLE;",
      "right" : "return NumberType.DOUBLE;",
      "info" : "ReturnStatement[43181-43206]:ReturnStatement[43736-43761]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[43219-43278]:IfStatement[43774-43833]"
    }, {
      "left" : "return NumberType.BIG_DECIMAL;",
      "right" : "return NumberType.BIG_DECIMAL;",
      "info" : "ReturnStatement[43248-43278]:ReturnStatement[43803-43833]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[43291-43350]:IfStatement[43846-43905]"
    }, {
      "left" : "return NumberType.BIG_INTEGER;",
      "right" : "return NumberType.BIG_INTEGER;",
      "info" : "ReturnStatement[43320-43350]:ReturnStatement[43875-43905]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[43363-43411]:IfStatement[43918-43966]"
    }, {
      "left" : "return NumberType.FLOAT;",
      "right" : "return NumberType.FLOAT;",
      "info" : "ReturnStatement[43387-43411]:ReturnStatement[43942-43966]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[43424-43470]:IfStatement[43979-44025]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[43448-43470]:ReturnStatement[44003-44025]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[43508-43520]:ReturnStatement[44063-44075]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43540-43549]:MarkerAnnotation[44095-44104]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43558-43564]:Modifier[44113-44119]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[43565-43570]:Modifier[44120-44125]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[43571-43577]:SimpleType[44126-44132]"
    }, {
      "left" : "getNumberValue",
      "right" : "getNumberValue",
      "info" : "SimpleName[43578-43592]:SimpleName[44133-44147]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[43602-43613]:SimpleType[44157-44168]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[43615-43633]:SimpleType[44170-44188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43634-44532]:Block[44189-45087]"
    }, {
      "left" : "_checkIsNumber();",
      "right" : "_checkIsNumber();",
      "info" : "ExpressionStatement[43648-43665]:ExpressionStatement[44203-44220]"
    }, {
      "left" : "Object value = _currentObject();",
      "right" : "Object value = _currentObject();",
      "info" : "VariableDeclarationStatement[43678-43710]:VariableDeclarationStatement[44233-44265]"
    }, {
      "left" : "if (value instanceof Number)",
      "right" : "if (value instanceof Number)",
      "info" : "IfStatement[43723-43806]:IfStatement[44278-44361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43752-43806]:Block[44307-44361]"
    }, {
      "left" : "return (Number) value;",
      "right" : "return (Number) value;",
      "info" : "ReturnStatement[43770-43792]:ReturnStatement[44325-44347]"
    }, {
      "left" : "if (value instanceof String)",
      "right" : "if (value instanceof String)",
      "info" : "IfStatement[44044-44292]:IfStatement[44599-44847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44073-44292]:Block[44628-44847]"
    }, {
      "left" : "String str = (String) value;",
      "right" : "String str = (String) value;",
      "info" : "VariableDeclarationStatement[44091-44119]:VariableDeclarationStatement[44646-44674]"
    }, {
      "left" : "if (str.indexOf('.') >= 0)",
      "right" : "if (str.indexOf('.') >= 0)",
      "info" : "IfStatement[44136-44234]:IfStatement[44691-44789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44163-44234]:Block[44718-44789]"
    }, {
      "left" : "return Double.parseDouble(str);",
      "right" : "return Double.parseDouble(str);",
      "info" : "ReturnStatement[44185-44216]:ReturnStatement[44740-44771]"
    }, {
      "left" : "return Long.parseLong(str);",
      "right" : "return Long.parseLong(str);",
      "info" : "ReturnStatement[44251-44278]:ReturnStatement[44806-44833]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[44305-44368]:IfStatement[44860-44923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44324-44368]:Block[44879-44923]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[44342-44354]:ReturnStatement[44897-44909]"
    }, {
      "left" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "right" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "info" : "ThrowStatement[44381-44522]:ThrowStatement[44936-45077]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44760-44769]:MarkerAnnotation[45315-45324]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44778-44784]:Modifier[45333-45339]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[44785-44791]:SimpleType[45340-45346]"
    }, {
      "left" : "getEmbeddedObject",
      "right" : "getEmbeddedObject",
      "info" : "SimpleName[44792-44809]:SimpleName[45347-45364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44820-44976]:Block[45375-45531]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[44834-44941]:IfStatement[45389-45496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44885-44941]:Block[45440-45496]"
    }, {
      "left" : "return _currentObject();",
      "right" : "return _currentObject();",
      "info" : "ReturnStatement[44903-44927]:ReturnStatement[45458-45482]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[44954-44966]:ReturnStatement[45509-45521]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44986-44995]:MarkerAnnotation[45541-45550]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[45004-45033]:SingleMemberAnnotation[45559-45588]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45042-45048]:Modifier[45597-45603]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[45049-45055]:ArrayType[45604-45610]"
    }, {
      "left" : "getBinaryValue",
      "right" : "getBinaryValue",
      "info" : "SimpleName[45056-45070]:SimpleName[45611-45625]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[45071-45095]:SingleVariableDeclaration[45626-45650]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45104-45115]:SimpleType[45659-45670]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[45117-45135]:SimpleType[45672-45690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45144-46204]:Block[45699-46759]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[45209-45529]:IfStatement[45764-46084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45260-45529]:Block[45815-46084]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[45338-45367]:VariableDeclarationStatement[45893-45922]"
    }, {
      "left" : "if (ob instanceof byte[])",
      "right" : "if (ob instanceof byte[])",
      "info" : "IfStatement[45384-45469]:IfStatement[45939-46024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45410-45469]:Block[45965-46024]"
    }, {
      "left" : "return (byte[]) ob;",
      "right" : "return (byte[]) ob;",
      "info" : "ReturnStatement[45432-45451]:ReturnStatement[45987-46006]"
    }, {
      "left" : "if (_currToken != JsonToken.VALUE_STRING)",
      "right" : "if (_currToken != JsonToken.VALUE_STRING)",
      "info" : "IfStatement[45542-45754]:IfStatement[46097-46309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45584-45754]:Block[46139-46309]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "info" : "ThrowStatement[45602-45740]:ThrowStatement[46157-46295]"
    }, {
      "left" : "final String str = getText();",
      "right" : "final String str = getText();",
      "info" : "VariableDeclarationStatement[45767-45796]:VariableDeclarationStatement[46322-46351]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[45809-45870]:IfStatement[46364-46425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45826-45870]:Block[46381-46425]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45844-45856]:ReturnStatement[46399-46411]"
    }, {
      "left" : "ByteArrayBuilder builder = _byteBuilder;",
      "right" : "ByteArrayBuilder builder = _byteBuilder;",
      "info" : "VariableDeclarationStatement[45883-45923]:VariableDeclarationStatement[46438-46478]"
    }, {
      "left" : "if (builder == null)",
      "right" : "if (builder == null)",
      "info" : "IfStatement[45936-46099]:IfStatement[46491-46654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45957-46040]:Block[46512-46595]"
    }, {
      "left" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "right" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "info" : "ExpressionStatement[45975-46026]:ExpressionStatement[46530-46581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46046-46099]:Block[46601-46654]"
    }, {
      "left" : "_byteBuilder.reset();",
      "right" : "_byteBuilder.reset();",
      "info" : "ExpressionStatement[46064-46085]:ExpressionStatement[46619-46640]"
    }, {
      "left" : "_decodeBase64(str, builder, b64variant);",
      "right" : "_decodeBase64(str, builder, b64variant);",
      "info" : "ExpressionStatement[46112-46152]:ExpressionStatement[46667-46707]"
    }, {
      "left" : "return builder.toByteArray();",
      "right" : "return builder.toByteArray();",
      "info" : "ReturnStatement[46165-46194]:ReturnStatement[46720-46749]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46214-46223]:MarkerAnnotation[46769-46778]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46232-46238]:Modifier[46787-46793]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[46239-46242]:PrimitiveType[46794-46797]"
    }, {
      "left" : "readBinaryValue",
      "right" : "readBinaryValue",
      "info" : "SimpleName[46243-46258]:SimpleName[46798-46813]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[46259-46283]:SingleVariableDeclaration[46814-46838]"
    }, {
      "left" : "OutputStream out",
      "right" : "OutputStream out",
      "info" : "SingleVariableDeclaration[46285-46301]:SingleVariableDeclaration[46840-46856]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[46322-46333]:SimpleType[46877-46888]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[46335-46353]:SimpleType[46890-46908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46362-46580]:Block[46917-47135]"
    }, {
      "left" : "byte[] data = getBinaryValue(b64variant);",
      "right" : "byte[] data = getBinaryValue(b64variant);",
      "info" : "VariableDeclarationStatement[46376-46417]:VariableDeclarationStatement[46931-46972]"
    }, {
      "left" : "if (data != null)",
      "right" : "if (data != null)",
      "info" : "IfStatement[46430-46548]:IfStatement[46985-47103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46448-46548]:Block[47003-47103]"
    }, {
      "left" : "out.write(data, 0, data.length);",
      "right" : "out.write(data, 0, data.length);",
      "info" : "ExpressionStatement[46466-46498]:ExpressionStatement[47021-47053]"
    }, {
      "left" : "return data.length;",
      "right" : "return data.length;",
      "info" : "ReturnStatement[46515-46534]:ReturnStatement[47070-47089]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[46561-46570]:ReturnStatement[47116-47125]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46784-46793]:MarkerAnnotation[47339-47348]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46802-46808]:Modifier[47357-47363]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[46809-46816]:PrimitiveType[47364-47371]"
    }, {
      "left" : "canReadObjectId",
      "right" : "canReadObjectId",
      "info" : "SimpleName[46817-46832]:SimpleName[47372-47387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46835-46886]:Block[47390-47441]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[46849-46876]:ReturnStatement[47404-47431]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46896-46905]:MarkerAnnotation[47451-47460]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46914-46920]:Modifier[47469-47475]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[46921-46928]:PrimitiveType[47476-47483]"
    }, {
      "left" : "canReadTypeId",
      "right" : "canReadTypeId",
      "info" : "SimpleName[46929-46942]:SimpleName[47484-47497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46945-46994]:Block[47500-47549]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[46959-46984]:ReturnStatement[47514-47539]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47004-47013]:MarkerAnnotation[47559-47568]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47022-47028]:Modifier[47577-47583]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[47029-47035]:SimpleType[47584-47590]"
    }, {
      "left" : "getTypeId",
      "right" : "getTypeId",
      "info" : "SimpleName[47036-47045]:SimpleName[47591-47600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47048-47112]:Block[47603-47667]"
    }, {
      "left" : "return _segment.findTypeId(_segmentPtr);",
      "right" : "return _segment.findTypeId(_segmentPtr);",
      "info" : "ReturnStatement[47062-47102]:ReturnStatement[47617-47657]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47122-47131]:MarkerAnnotation[47677-47686]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47140-47146]:Modifier[47695-47701]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[47147-47153]:SimpleType[47702-47708]"
    }, {
      "left" : "getObjectId",
      "right" : "getObjectId",
      "info" : "SimpleName[47154-47165]:SimpleName[47709-47720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47168-47234]:Block[47723-47789]"
    }, {
      "left" : "return _segment.findObjectId(_segmentPtr);",
      "right" : "return _segment.findObjectId(_segmentPtr);",
      "info" : "ReturnStatement[47182-47224]:ReturnStatement[47737-47779]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47440-47449]:Modifier[47995-48004]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[47450-47455]:Modifier[48005-48010]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[47456-47462]:SimpleType[48011-48017]"
    }, {
      "left" : "_currentObject",
      "right" : "_currentObject",
      "info" : "SimpleName[47463-47477]:SimpleName[48018-48032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47480-47537]:Block[48035-48092]"
    }, {
      "left" : "return _segment.get(_segmentPtr);",
      "right" : "return _segment.get(_segmentPtr);",
      "info" : "ReturnStatement[47494-47527]:ReturnStatement[48049-48082]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47547-47556]:Modifier[48102-48111]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[47557-47562]:Modifier[48112-48117]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47563-47567]:PrimitiveType[48118-48122]"
    }, {
      "left" : "_checkIsNumber",
      "right" : "_checkIsNumber",
      "info" : "SimpleName[47568-47582]:SimpleName[48123-48137]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[47592-47610]:SimpleType[48147-48165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47619-47831]:Block[48174-48386]"
    }, {
      "left" : "if (_currToken == null || !_currToken.isNumeric())",
      "right" : "if (_currToken == null || !_currToken.isNumeric())",
      "info" : "IfStatement[47633-47821]:IfStatement[48188-48376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47684-47821]:Block[48239-48376]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "info" : "ThrowStatement[47702-47807]:ThrowStatement[48257-48362]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47841-47850]:MarkerAnnotation[48396-48405]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47859-47868]:Modifier[48414-48423]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47869-47873]:PrimitiveType[48424-48428]"
    }, {
      "left" : "_handleEOF",
      "right" : "_handleEOF",
      "info" : "SimpleName[47874-47884]:SimpleName[48429-48439]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[47894-47912]:SimpleType[48449-48467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47913-47954]:Block[48468-48509]"
    }, {
      "left" : "_throwInternal();",
      "right" : "_throwInternal();",
      "info" : "ExpressionStatement[47927-47944]:ExpressionStatement[48482-48499]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[48311-48320]:Modifier[48866-48875]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[48321-48326]:Modifier[48876-48881]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[48327-48333]:Modifier[48882-48888]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[48334-48339]:TYPE_DECLARATION_KIND[48889-48894]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleName[48340-48347]:SimpleName[48895-48902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48646-48981]:Block[49201-49536]"
    }, {
      "left" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "right" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "info" : "ExpressionStatement[48738-48779]:ExpressionStatement[49293-49334]"
    }, {
      "left" : "JsonToken[] t = JsonToken.values();",
      "right" : "JsonToken[] t = JsonToken.values();",
      "info" : "VariableDeclarationStatement[48792-48827]:VariableDeclarationStatement[49347-49382]"
    }, {
      "left" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "right" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "info" : "ExpressionStatement[48895-48971]:ExpressionStatement[49450-49526]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49558-49564]:Modifier[50113-50119]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleName[49565-49572]:SimpleName[50120-50127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49575-49578]:Block[50130-50133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49616-49622]:Modifier[50171-50177]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[49623-49632]:SimpleType[50178-50187]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[49633-49637]:SimpleName[50188-50192]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[49638-49647]:SingleVariableDeclaration[50193-50202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49657-49864]:Block[50212-50419]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[49671-49692]:VariableDeclarationStatement[50226-50247]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[49705-49771]:IfStatement[50260-50326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49720-49771]:Block[50275-50326]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[49738-49757]:ExpressionStatement[50293-50312]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[49784-49809]:VariableDeclarationStatement[50339-50364]"
    }, {
      "left" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "right" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "info" : "ReturnStatement[49822-49854]:ReturnStatement[50377-50409]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49874-49880]:Modifier[50429-50435]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[49881-49884]:PrimitiveType[50436-50439]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[49885-49892]:SimpleName[50440-50447]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[49893-49902]:SingleVariableDeclaration[50448-50457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49912-50097]:Block[50467-50652]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[49926-49947]:VariableDeclarationStatement[50481-50502]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[49960-50026]:IfStatement[50515-50581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49975-50026]:Block[50530-50581]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[49993-50012]:ExpressionStatement[50548-50567]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[50039-50064]:VariableDeclarationStatement[50594-50619]"
    }, {
      "left" : "return ix;",
      "right" : "return ix;",
      "info" : "ReturnStatement[50077-50087]:ReturnStatement[50632-50642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50115-50121]:Modifier[50670-50676]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[50122-50128]:SimpleType[50677-50683]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[50129-50132]:SimpleName[50684-50687]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[50133-50142]:SingleVariableDeclaration[50688-50697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50144-50190]:Block[50699-50745]"
    }, {
      "left" : "return _tokens[index];",
      "right" : "return _tokens[index];",
      "info" : "ReturnStatement[50158-50180]:ReturnStatement[50713-50735]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50200-50206]:Modifier[50755-50761]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[50207-50214]:SimpleType[50762-50769]"
    }, {
      "left" : "next",
      "right" : "next",
      "info" : "SimpleName[50215-50219]:SimpleName[50770-50774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50222-50239]:Block[50777-50794]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[50224-50237]:ReturnStatement[50779-50792]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50374-50380]:Modifier[50929-50935]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50381-50388]:PrimitiveType[50936-50943]"
    }, {
      "left" : "hasIds",
      "right" : "hasIds",
      "info" : "SimpleName[50389-50395]:SimpleName[50944-50950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50398-50448]:Block[50953-51003]"
    }, {
      "left" : "return _nativeIds != null;",
      "right" : "return _nativeIds != null;",
      "info" : "ReturnStatement[50412-50438]:ReturnStatement[50967-50993]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50501-50507]:Modifier[51056-51062]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[50508-50515]:SimpleType[51063-51070]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[50516-50522]:SimpleName[51071-51077]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[50523-50532]:SingleVariableDeclaration[51078-51087]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[50534-50553]:SingleVariableDeclaration[51089-51108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50563-50800]:Block[51118-51355]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[50577-50692]:IfStatement[51132-51247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50609-50692]:Block[51164-51247]"
    }, {
      "left" : "set(index, tokenType);",
      "right" : "set(index, tokenType);",
      "info" : "ExpressionStatement[50627-50649]:ExpressionStatement[51182-51204]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[50666-50678]:ReturnStatement[51221-51233]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[50705-50727]:ExpressionStatement[51260-51282]"
    }, {
      "left" : "_next.set(0, tokenType);",
      "right" : "_next.set(0, tokenType);",
      "info" : "ExpressionStatement[50740-50764]:ExpressionStatement[51295-51319]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[50777-50790]:ReturnStatement[51332-51345]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50810-50816]:Modifier[51365-51371]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[50817-50824]:SimpleType[51372-51379]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[50825-50831]:SimpleName[51380-51386]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[50832-50841]:SingleVariableDeclaration[51387-51396]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[50843-50862]:SingleVariableDeclaration[51398-51417]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[50880-50895]:SingleVariableDeclaration[51435-51450]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[50897-50910]:SingleVariableDeclaration[51452-51465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50920-51193]:Block[51475-51748]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[50934-51067]:IfStatement[51489-51622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50966-51067]:Block[51521-51622]"
    }, {
      "left" : "set(index, tokenType, objectId, typeId);",
      "right" : "set(index, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[50984-51024]:ExpressionStatement[51539-51579]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51041-51053]:ReturnStatement[51596-51608]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[51080-51102]:ExpressionStatement[51635-51657]"
    }, {
      "left" : "_next.set(0, tokenType, objectId, typeId);",
      "right" : "_next.set(0, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[51115-51157]:ExpressionStatement[51670-51712]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[51170-51183]:ReturnStatement[51725-51738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51203-51209]:Modifier[51758-51764]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[51210-51217]:SimpleType[51765-51772]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[51218-51224]:SimpleName[51773-51779]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[51225-51234]:SingleVariableDeclaration[51780-51789]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[51236-51255]:SingleVariableDeclaration[51791-51810]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[51257-51269]:SingleVariableDeclaration[51812-51824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51279-51530]:Block[51834-52085]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[51293-51415]:IfStatement[51848-51970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51325-51415]:Block[51880-51970]"
    }, {
      "left" : "set(index, tokenType, value);",
      "right" : "set(index, tokenType, value);",
      "info" : "ExpressionStatement[51343-51372]:ExpressionStatement[51898-51927]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51389-51401]:ReturnStatement[51944-51956]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[51428-51450]:ExpressionStatement[51983-52005]"
    }, {
      "left" : "_next.set(0, tokenType, value);",
      "right" : "_next.set(0, tokenType, value);",
      "info" : "ExpressionStatement[51463-51494]:ExpressionStatement[52018-52049]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[51507-51520]:ReturnStatement[52062-52075]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51540-51546]:Modifier[52095-52101]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[51547-51554]:SimpleType[52102-52109]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[51555-51561]:SimpleName[52110-52116]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[51562-51571]:SingleVariableDeclaration[52117-52126]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[51573-51592]:SingleVariableDeclaration[52128-52147]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[51594-51606]:SingleVariableDeclaration[52149-52161]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[51624-51639]:SingleVariableDeclaration[52179-52194]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[51641-51654]:SingleVariableDeclaration[52196-52209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51664-51951]:Block[52219-52506]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[51678-51818]:IfStatement[52233-52373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51710-51818]:Block[52265-52373]"
    }, {
      "left" : "set(index, tokenType, value, objectId, typeId);",
      "right" : "set(index, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[51728-51775]:ExpressionStatement[52283-52330]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51792-51804]:ReturnStatement[52347-52359]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[51831-51853]:ExpressionStatement[52386-52408]"
    }, {
      "left" : "_next.set(0, tokenType, value, objectId, typeId);",
      "right" : "_next.set(0, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[51866-51915]:ExpressionStatement[52421-52470]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[51928-51941]:ReturnStatement[52483-52496]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51961-51967]:Modifier[52516-52522]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[51968-51975]:SimpleType[52523-52530]"
    }, {
      "left" : "appendRaw",
      "right" : "appendRaw",
      "info" : "SimpleName[51976-51985]:SimpleName[52531-52540]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[51986-51995]:SingleVariableDeclaration[52541-52550]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[51997-52013]:SingleVariableDeclaration[52552-52568]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[52015-52027]:SingleVariableDeclaration[52570-52582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52037-52294]:Block[52592-52849]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[52051-52176]:IfStatement[52606-52731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52083-52176]:Block[52638-52731]"
    }, {
      "left" : "set(index, rawTokenType, value);",
      "right" : "set(index, rawTokenType, value);",
      "info" : "ExpressionStatement[52101-52133]:ExpressionStatement[52656-52688]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52150-52162]:ReturnStatement[52705-52717]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[52189-52211]:ExpressionStatement[52744-52766]"
    }, {
      "left" : "_next.set(0, rawTokenType, value);",
      "right" : "_next.set(0, rawTokenType, value);",
      "info" : "ExpressionStatement[52224-52258]:ExpressionStatement[52779-52813]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[52271-52284]:ReturnStatement[52826-52839]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52304-52310]:Modifier[52859-52865]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[52311-52318]:SimpleType[52866-52873]"
    }, {
      "left" : "appendRaw",
      "right" : "appendRaw",
      "info" : "SimpleName[52319-52328]:SimpleName[52874-52883]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[52329-52338]:SingleVariableDeclaration[52884-52893]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[52340-52356]:SingleVariableDeclaration[52895-52911]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[52358-52370]:SingleVariableDeclaration[52913-52925]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[52388-52403]:SingleVariableDeclaration[52943-52958]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[52405-52418]:SingleVariableDeclaration[52960-52973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52428-52721]:Block[52983-53276]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[52442-52585]:IfStatement[52997-53140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52474-52585]:Block[53029-53140]"
    }, {
      "left" : "set(index, rawTokenType, value, objectId, typeId);",
      "right" : "set(index, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[52492-52542]:ExpressionStatement[53047-53097]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52559-52571]:ReturnStatement[53114-53126]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[52598-52620]:ExpressionStatement[53153-53175]"
    }, {
      "left" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "right" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[52633-52685]:ExpressionStatement[53188-53240]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[52698-52711]:ReturnStatement[53253-53266]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[52731-52738]:Modifier[53286-53293]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[52739-52743]:PrimitiveType[53294-53298]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[52744-52747]:SimpleName[53299-53302]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[52748-52757]:SingleVariableDeclaration[53303-53312]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[52759-52778]:SingleVariableDeclaration[53314-53333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52788-53139]:Block[53343-53694]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[52970-53006]:VariableDeclarationStatement[53525-53561]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[53019-53092]:IfStatement[53574-53647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53034-53092]:Block[53589-53647]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[53052-53078]:ExpressionStatement[53607-53633]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[53105-53129]:ExpressionStatement[53660-53684]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53149-53156]:Modifier[53704-53711]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53157-53161]:PrimitiveType[53712-53716]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[53162-53165]:SimpleName[53717-53720]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53166-53175]:SingleVariableDeclaration[53721-53730]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[53177-53196]:SingleVariableDeclaration[53732-53751]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[53214-53229]:SingleVariableDeclaration[53769-53784]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[53231-53244]:SingleVariableDeclaration[53786-53799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53254-53491]:Block[53809-54046]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[53268-53304]:VariableDeclarationStatement[53823-53859]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[53317-53390]:IfStatement[53872-53945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53332-53390]:Block[53887-53945]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[53350-53376]:ExpressionStatement[53905-53931]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[53403-53427]:ExpressionStatement[53958-53982]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[53440-53481]:ExpressionStatement[53995-54036]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53501-53508]:Modifier[54056-54063]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53509-53513]:PrimitiveType[54064-54068]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[53514-53517]:SimpleName[54069-54072]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53518-53527]:SingleVariableDeclaration[54073-54082]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[53529-53548]:SingleVariableDeclaration[54084-54103]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[53550-53562]:SingleVariableDeclaration[54105-54117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53572-53791]:Block[54127-54346]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[53586-53609]:ExpressionStatement[54141-54164]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[53622-53658]:VariableDeclarationStatement[54177-54213]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[53671-53744]:IfStatement[54226-54299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53686-53744]:Block[54241-54299]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[53704-53730]:ExpressionStatement[54259-54285]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[53757-53781]:ExpressionStatement[54312-54336]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53801-53808]:Modifier[54356-54363]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53809-53813]:PrimitiveType[54364-54368]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[53814-53817]:SimpleName[54369-54372]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53818-53827]:SingleVariableDeclaration[54373-54382]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[53829-53848]:SingleVariableDeclaration[54384-54403]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[53850-53862]:SingleVariableDeclaration[54405-54417]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[53880-53895]:SingleVariableDeclaration[54435-54450]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[53897-53910]:SingleVariableDeclaration[54452-54465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53920-54193]:Block[54475-54748]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[53934-53957]:ExpressionStatement[54489-54512]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[53970-54006]:VariableDeclarationStatement[54525-54561]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[54019-54092]:IfStatement[54574-54647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54034-54092]:Block[54589-54647]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[54052-54078]:ExpressionStatement[54607-54633]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[54105-54129]:ExpressionStatement[54660-54684]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[54142-54183]:ExpressionStatement[54697-54738]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54203-54210]:Modifier[54758-54765]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54211-54215]:PrimitiveType[54766-54770]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[54216-54219]:SimpleName[54771-54774]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54220-54229]:SingleVariableDeclaration[54775-54784]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[54231-54247]:SingleVariableDeclaration[54786-54802]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[54249-54261]:SingleVariableDeclaration[54804-54816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54271-54490]:Block[54826-55045]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[54285-54308]:ExpressionStatement[54840-54863]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[54321-54357]:VariableDeclarationStatement[54876-54912]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[54370-54443]:IfStatement[54925-54998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54385-54443]:Block[54940-54998]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[54403-54429]:ExpressionStatement[54958-54984]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[54456-54480]:ExpressionStatement[55011-55035]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54500-54507]:Modifier[55055-55062]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54508-54512]:PrimitiveType[55063-55067]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[54513-54516]:SimpleName[55068-55071]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54517-54526]:SingleVariableDeclaration[55072-55081]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[54528-54544]:SingleVariableDeclaration[55083-55099]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[54546-54558]:SingleVariableDeclaration[55101-55113]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[54560-54575]:SingleVariableDeclaration[55115-55130]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[54577-54590]:SingleVariableDeclaration[55132-55145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54600-54873]:Block[55155-55428]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[54614-54637]:ExpressionStatement[55169-55192]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[54650-54686]:VariableDeclarationStatement[55205-55241]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[54699-54772]:IfStatement[55254-55327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54714-54772]:Block[55269-55327]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[54732-54758]:ExpressionStatement[55287-55313]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[54785-54809]:ExpressionStatement[55340-55364]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[54822-54863]:ExpressionStatement[55377-55418]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54883-54890]:Modifier[55438-55445]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54891-54896]:Modifier[55446-55451]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54897-54901]:PrimitiveType[55452-55456]"
    }, {
      "left" : "assignNativeIds",
      "right" : "assignNativeIds",
      "info" : "SimpleName[54902-54917]:SimpleName[55457-55472]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54918-54927]:SingleVariableDeclaration[55473-55482]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[54929-54944]:SingleVariableDeclaration[55484-55499]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[54946-54959]:SingleVariableDeclaration[55501-55514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54969-55316]:Block[55524-55871]"
    }, {
      "left" : "if (_nativeIds == null)",
      "right" : "if (_nativeIds == null)",
      "info" : "IfStatement[54983-55082]:IfStatement[55538-55637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55007-55082]:Block[55562-55637]"
    }, {
      "left" : "_nativeIds = new TreeMap<Integer,Object>();",
      "right" : "_nativeIds = new TreeMap<Integer,Object>();",
      "info" : "ExpressionStatement[55025-55068]:ExpressionStatement[55580-55623]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[55095-55197]:IfStatement[55650-55752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55117-55197]:Block[55672-55752]"
    }, {
      "left" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "right" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "info" : "ExpressionStatement[55135-55183]:ExpressionStatement[55690-55738]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[55210-55306]:IfStatement[55765-55861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55230-55306]:Block[55785-55861]"
    }, {
      "left" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "right" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "info" : "ExpressionStatement[55248-55292]:ExpressionStatement[55803-55847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55372-55378]:Modifier[55927-55933]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[55379-55385]:SimpleType[55934-55940]"
    }, {
      "left" : "findObjectId",
      "right" : "findObjectId",
      "info" : "SimpleName[55386-55398]:SimpleName[55941-55953]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[55399-55408]:SingleVariableDeclaration[55954-55963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55410-55509]:Block[55965-56064]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "info" : "ReturnStatement[55424-55499]:ReturnStatement[55979-56054]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55573-55579]:Modifier[56128-56134]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[55580-55586]:SimpleType[56135-56141]"
    }, {
      "left" : "findTypeId",
      "right" : "findTypeId",
      "info" : "SimpleName[55587-55597]:SimpleName[56142-56152]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[55598-55607]:SingleVariableDeclaration[56153-56162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55609-55706]:Block[56164-56261]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "info" : "ReturnStatement[55623-55696]:ReturnStatement[56178-56251]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[55716-55723]:Modifier[56271-56278]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55724-55729]:Modifier[56279-56284]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55730-55733]:PrimitiveType[56285-56288]"
    }, {
      "left" : "_typeIdIndex",
      "right" : "_typeIdIndex",
      "info" : "SimpleName[55734-55746]:SimpleName[56289-56301]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[55747-55752]:SingleVariableDeclaration[56302-56307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55754-55769]:Block[56309-56324]"
    }, {
      "left" : "return i+i;",
      "right" : "return i+i;",
      "info" : "ReturnStatement[55756-55767]:ReturnStatement[56311-56322]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[55778-55785]:Modifier[56333-56340]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55786-55791]:Modifier[56341-56346]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55792-55795]:PrimitiveType[56347-56350]"
    }, {
      "left" : "_objectIdIndex",
      "right" : "_objectIdIndex",
      "info" : "SimpleName[55796-55810]:SimpleName[56351-56365]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[55811-55816]:SingleVariableDeclaration[56366-56371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55818-55835]:Block[56373-56390]"
    }, {
      "left" : "return i+i+1;",
      "right" : "return i+i+1;",
      "info" : "ReturnStatement[55820-55833]:ReturnStatement[56375-56388]"
    } ]
  },
  "interFileMappings" : { }
}