{
  "matchedElements" : [
 {
    "left" : "class : LockPatternView",
    "right" : "class : LockPatternView",
    "info" : "TypeDeclaration[1513-43655]:TypeDeclaration[1513-44101]"
  }, {
    "left" : "ASPECT_SQUARE",
    "right" : "ASPECT_SQUARE",
    "info" : "FieldDeclaration[1830-1873]:FieldDeclaration[1830-1873]"
  }, {
    "left" : "ASPECT_LOCK_WIDTH",
    "right" : "ASPECT_LOCK_WIDTH",
    "info" : "FieldDeclaration[1922-1969]:FieldDeclaration[1922-1969]"
  }, {
    "left" : "ASPECT_LOCK_HEIGHT",
    "right" : "ASPECT_LOCK_HEIGHT",
    "info" : "FieldDeclaration[2022-2070]:FieldDeclaration[2022-2070]"
  }, {
    "left" : "PROFILE_DRAWING",
    "right" : "PROFILE_DRAWING",
    "info" : "FieldDeclaration[2124-2177]:FieldDeclaration[2124-2177]"
  }, {
    "left" : "mCellStates",
    "right" : "mCellStates",
    "info" : "FieldDeclaration[2182-2216]:FieldDeclaration[2182-2216]"
  }, {
    "left" : "mDotSize",
    "right" : "mDotSize",
    "info" : "FieldDeclaration[2222-2249]:FieldDeclaration[2222-2249]"
  }, {
    "left" : "mDotSizeActivated",
    "right" : "mDotSizeActivated",
    "info" : "FieldDeclaration[2254-2290]:FieldDeclaration[2254-2290]"
  }, {
    "left" : "mPathWidth",
    "right" : "mPathWidth",
    "info" : "FieldDeclaration[2295-2324]:FieldDeclaration[2295-2324]"
  }, {
    "left" : "mDrawingProfilingStarted",
    "right" : "mDrawingProfilingStarted",
    "info" : "FieldDeclaration[2330-2379]:FieldDeclaration[2330-2379]"
  }, {
    "left" : "mPaint",
    "right" : "mPaint",
    "info" : "FieldDeclaration[2385-2420]:FieldDeclaration[2385-2420]"
  }, {
    "left" : "mPathPaint",
    "right" : "mPathPaint",
    "info" : "FieldDeclaration[2425-2464]:FieldDeclaration[2425-2464]"
  }, {
    "left" : "MILLIS_PER_CIRCLE_ANIMATING",
    "right" : "MILLIS_PER_CIRCLE_ANIMATING",
    "info" : "FieldDeclaration[2470-2756]:FieldDeclaration[2470-2756]"
  }, {
    "left" : "mPatternSize",
    "right" : "mPatternSize",
    "info" : "FieldDeclaration[2762-2828]:FieldDeclaration[2762-2828]"
  }, {
    "left" : "DRAG_THRESHHOLD",
    "right" : "DRAG_THRESHHOLD",
    "info" : "FieldDeclaration[2834-3082]:FieldDeclaration[2834-3082]"
  }, {
    "left" : "mOnPatternListener",
    "right" : "mOnPatternListener",
    "info" : "FieldDeclaration[3088-3133]:FieldDeclaration[3088-3133]"
  }, {
    "left" : "mPattern",
    "right" : "mPattern",
    "info" : "FieldDeclaration[3138-3222]:FieldDeclaration[3138-3222]"
  }, {
    "left" : "mPatternDrawLookup",
    "right" : "mPatternDrawLookup",
    "info" : "FieldDeclaration[3228-3585]:FieldDeclaration[3228-3585]"
  }, {
    "left" : "mInProgressX",
    "right" : "mInProgressX",
    "info" : "FieldDeclaration[3591-3790]:FieldDeclaration[3591-3790]"
  }, {
    "left" : "mInProgressY",
    "right" : "mInProgressY",
    "info" : "FieldDeclaration[3795-3827]:FieldDeclaration[3795-3827]"
  }, {
    "left" : "mAnimatingPeriodStart",
    "right" : "mAnimatingPeriodStart",
    "info" : "FieldDeclaration[3833-3868]:FieldDeclaration[3833-3868]"
  }, {
    "left" : "mPatternDisplayMode",
    "right" : "mPatternDisplayMode",
    "info" : "FieldDeclaration[3874-3936]:FieldDeclaration[3874-3936]"
  }, {
    "left" : "mInputEnabled",
    "right" : "mInputEnabled",
    "info" : "FieldDeclaration[3941-3978]:FieldDeclaration[3941-3978]"
  }, {
    "left" : "mInStealthMode",
    "right" : "mInStealthMode",
    "info" : "FieldDeclaration[3983-4022]:FieldDeclaration[3983-4022]"
  }, {
    "left" : "mEnableHapticFeedback",
    "right" : "mEnableHapticFeedback",
    "info" : "FieldDeclaration[4027-4072]:FieldDeclaration[4027-4072]"
  }, {
    "left" : "mPatternInProgress",
    "right" : "mPatternInProgress",
    "info" : "FieldDeclaration[4077-4120]:FieldDeclaration[4077-4120]"
  }, {
    "left" : "mVisibleDots",
    "right" : "mVisibleDots",
    "info" : "FieldDeclaration[4125-4161]:FieldDeclaration[4125-4161]"
  }, {
    "left" : "mShowErrorPath",
    "right" : "mShowErrorPath",
    "info" : "FieldDeclaration[4166-4204]:FieldDeclaration[4166-4204]"
  }, {
    "left" : "mHitFactor",
    "right" : "mHitFactor",
    "info" : "FieldDeclaration[4210-4242]:FieldDeclaration[4210-4242]"
  }, {
    "left" : "mSquareWidth",
    "right" : "mSquareWidth",
    "info" : "FieldDeclaration[4248-4275]:FieldDeclaration[4248-4275]"
  }, {
    "left" : "mSquareHeight",
    "right" : "mSquareHeight",
    "info" : "FieldDeclaration[4280-4308]:FieldDeclaration[4280-4308]"
  }, {
    "left" : "mCurrentPath",
    "right" : "mCurrentPath",
    "info" : "FieldDeclaration[4314-4359]:FieldDeclaration[4314-4359]"
  }, {
    "left" : "mInvalidate",
    "right" : "mInvalidate",
    "info" : "FieldDeclaration[4364-4408]:FieldDeclaration[4364-4408]"
  }, {
    "left" : "mTmpInvalidateRect",
    "right" : "mTmpInvalidateRect",
    "info" : "FieldDeclaration[4413-4464]:FieldDeclaration[4413-4464]"
  }, {
    "left" : "mAspect",
    "right" : "mAspect",
    "info" : "FieldDeclaration[4470-4490]:FieldDeclaration[4470-4490]"
  }, {
    "left" : "mRegularColor",
    "right" : "mRegularColor",
    "info" : "FieldDeclaration[4495-4521]:FieldDeclaration[4495-4521]"
  }, {
    "left" : "mErrorColor",
    "right" : "mErrorColor",
    "info" : "FieldDeclaration[4526-4550]:FieldDeclaration[4526-4550]"
  }, {
    "left" : "mSuccessColor",
    "right" : "mSuccessColor",
    "info" : "FieldDeclaration[4555-4581]:FieldDeclaration[4555-4581]"
  }, {
    "left" : "mFastOutSlowInInterpolator",
    "right" : "mFastOutSlowInInterpolator",
    "info" : "FieldDeclaration[4587-4635]:FieldDeclaration[4587-4635]"
  }, {
    "left" : "mLinearOutSlowInInterpolator",
    "right" : "mLinearOutSlowInInterpolator",
    "info" : "FieldDeclaration[4640-4690]:FieldDeclaration[4640-4690]"
  }, {
    "left" : "mLockPatternUtils",
    "right" : "mLockPatternUtils",
    "info" : "FieldDeclaration[4696-4739]:FieldDeclaration[4696-4739]"
  }, {
    "left" : "class : Cell",
    "right" : "class : Cell",
    "info" : "TypeDeclaration[4745-6553]:TypeDeclaration[4745-7003]"
  }, {
    "left" : "row",
    "right" : "row",
    "info" : "FieldDeclaration[4863-4871]:FieldDeclaration[4863-4871]"
  }, {
    "left" : "column",
    "right" : "column",
    "info" : "FieldDeclaration[4880-4891]:FieldDeclaration[4880-4891]"
  }, {
    "left" : "sCells",
    "right" : "sCells",
    "info" : "FieldDeclaration[4935-4958]:FieldDeclaration[4935-4958]"
  }, {
    "left" : "private Cell(row int, column int, size byte)",
    "right" : "package Cell(row int, column int, size byte)",
    "info" : "MethodDeclaration[5058-5335]:MethodDeclaration[5058-5341]"
  }, {
    "left" : "public getRow() : int",
    "right" : "public getRow() : int",
    "info" : "MethodDeclaration[5345-5400]:MethodDeclaration[5351-5406]"
  }, {
    "left" : "public getColumn() : int",
    "right" : "public getColumn() : int",
    "info" : "MethodDeclaration[5410-5471]:MethodDeclaration[5416-5477]"
  }, {
    "left" : "public of(row int, column int, size byte) : ",
    "right" : "public of(cells , row int, column int, size byte) : ",
    "info" : "MethodDeclaration[5481-5758]:MethodDeclaration[5741-5904]"
  }, {
    "left" : "public updateSize(size byte) : void",
    "right" : "public updateSize(size byte) : void",
    "info" : "MethodDeclaration[5768-6046]:MethodDeclaration[5914-6192]"
  }, {
    "left" : "private checkRange(row int, column int, size byte) : void",
    "right" : "private checkRange(row int, column int, size byte) : void",
    "info" : "MethodDeclaration[6056-6441]:MethodDeclaration[6202-6587]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[6451-6547]:MethodDeclaration[6901-6997]"
  }, {
    "left" : "class : CellState",
    "right" : "class : CellState",
    "info" : "TypeDeclaration[6559-6875]:TypeDeclaration[7009-7325]"
  }, {
    "left" : "scale",
    "right" : "scale",
    "info" : "FieldDeclaration[6599-6625]:FieldDeclaration[7049-7075]"
  }, {
    "left" : "translateY",
    "right" : "translateY",
    "info" : "FieldDeclaration[6634-6665]:FieldDeclaration[7084-7115]"
  }, {
    "left" : "alpha",
    "right" : "alpha",
    "info" : "FieldDeclaration[6674-6700]:FieldDeclaration[7124-7150]"
  }, {
    "left" : "size",
    "right" : "size",
    "info" : "FieldDeclaration[6709-6727]:FieldDeclaration[7159-7177]"
  }, {
    "left" : "lineEndX",
    "right" : "lineEndX",
    "info" : "FieldDeclaration[6736-6776]:FieldDeclaration[7186-7226]"
  }, {
    "left" : "lineEndY",
    "right" : "lineEndY",
    "info" : "FieldDeclaration[6785-6825]:FieldDeclaration[7235-7275]"
  }, {
    "left" : "lineAnimator",
    "right" : "lineAnimator",
    "info" : "FieldDeclaration[6834-6868]:FieldDeclaration[7284-7318]"
  }, {
    "left" : "interface : OnPatternListener",
    "right" : "interface : OnPatternListener",
    "info" : "TypeDeclaration[7289-7995]:TypeDeclaration[7739-8445]"
  }, {
    "left" : "public onPatternStart() : void",
    "right" : "public onPatternStart() : void",
    "info" : "MethodDeclaration[7433-7515]:MethodDeclaration[7883-7965]"
  }, {
    "left" : "public onPatternCleared() : void",
    "right" : "public onPatternCleared() : void",
    "info" : "MethodDeclaration[7525-7609]:MethodDeclaration[7975-8059]"
  }, {
    "left" : "public onPatternCellAdded(pattern ) : void",
    "right" : "public onPatternCellAdded(pattern ) : void",
    "info" : "MethodDeclaration[7619-7824]:MethodDeclaration[8069-8274]"
  }, {
    "left" : "public onPatternDetected(pattern ) : void",
    "right" : "public onPatternDetected(pattern ) : void",
    "info" : "MethodDeclaration[7834-7989]:MethodDeclaration[8284-8439]"
  }, {
    "left" : "public LockPatternView(context )",
    "right" : "public LockPatternView(context )",
    "info" : "MethodDeclaration[8001-8077]:MethodDeclaration[8451-8527]"
  }, {
    "left" : "public LockPatternView(context , attrs ...)",
    "right" : "public LockPatternView(context , attrs ...)",
    "info" : "MethodDeclaration[8083-10605]:MethodDeclaration[8533-11055]"
  }, {
    "left" : "public getCellStates() : ",
    "right" : "public getCellStates() : ",
    "info" : "MethodDeclaration[10611-10683]:MethodDeclaration[11061-11133]"
  }, {
    "left" : "public isInStealthMode() : boolean",
    "right" : "public isInStealthMode() : boolean",
    "info" : "MethodDeclaration[10689-10828]:MethodDeclaration[11139-11278]"
  }, {
    "left" : "public isTactileFeedbackEnabled() : boolean",
    "right" : "public isTactileFeedbackEnabled() : boolean",
    "info" : "MethodDeclaration[10834-10999]:MethodDeclaration[11284-11449]"
  }, {
    "left" : "public getLockPatternSize() : int",
    "right" : "public getLockPatternSize() : int",
    "info" : "MethodDeclaration[11005-11141]:MethodDeclaration[11455-11591]"
  }, {
    "left" : "public setInStealthMode(inStealthMode boolean) : void",
    "right" : "public setInStealthMode(inStealthMode boolean) : void",
    "info" : "MethodDeclaration[11147-11453]:MethodDeclaration[11597-11903]"
  }, {
    "left" : "public setVisibleDots(visibleDots boolean) : void",
    "right" : "public setVisibleDots(visibleDots boolean) : void",
    "info" : "MethodDeclaration[11459-11550]:MethodDeclaration[11909-12000]"
  }, {
    "left" : "public isVisibleDots() : boolean",
    "right" : "public isVisibleDots() : boolean",
    "info" : "MethodDeclaration[11556-11623]:MethodDeclaration[12006-12073]"
  }, {
    "left" : "public setShowErrorPath(showErrorPath boolean) : void",
    "right" : "public setShowErrorPath(showErrorPath boolean) : void",
    "info" : "MethodDeclaration[11629-11728]:MethodDeclaration[12079-12178]"
  }, {
    "left" : "public isShowErrorPath() : boolean",
    "right" : "public isShowErrorPath() : boolean",
    "info" : "MethodDeclaration[11734-11805]:MethodDeclaration[12184-12255]"
  }, {
    "left" : "public setTactileFeedbackEnabled(tactileFeedbackEnabled boolean) : void",
    "right" : "public setTactileFeedbackEnabled(tactileFeedbackEnabled boolean) : void",
    "info" : "MethodDeclaration[11811-12175]:MethodDeclaration[12261-12625]"
  }, {
    "left" : "public setLockPatternSize(size byte) : void",
    "right" : "public setLockPatternSize(size byte) : void",
    "info" : "MethodDeclaration[12181-12798]:MethodDeclaration[12631-13248]"
  }, {
    "left" : "public setLockPatternUtils(utils ...) : void",
    "right" : "public setLockPatternUtils(utils ...) : void",
    "info" : "MethodDeclaration[12804-13029]:MethodDeclaration[13254-13479]"
  }, {
    "left" : "public setOnPatternListener(onPatternListener ) : void",
    "right" : "public setOnPatternListener(onPatternListener ) : void",
    "info" : "MethodDeclaration[13035-13284]:MethodDeclaration[13485-13734]"
  }, {
    "left" : "public setPattern(displayMode , pattern ) : void",
    "right" : "public setPattern(displayMode , pattern ) : void",
    "info" : "MethodDeclaration[13290-13817]:MethodDeclaration[13740-14267]"
  }, {
    "left" : "public setDisplayMode(displayMode ) : void",
    "right" : "public setDisplayMode(displayMode ) : void",
    "info" : "MethodDeclaration[13823-14769]:MethodDeclaration[14273-15219]"
  }, {
    "left" : "private notifyCellAdded() : void",
    "right" : "private notifyCellAdded() : void",
    "info" : "MethodDeclaration[14775-14998]:MethodDeclaration[15225-15448]"
  }, {
    "left" : "private notifyPatternStarted() : void",
    "right" : "private notifyPatternStarted() : void",
    "info" : "MethodDeclaration[15004-15215]:MethodDeclaration[15454-15665]"
  }, {
    "left" : "private notifyPatternDetected() : void",
    "right" : "private notifyPatternDetected() : void",
    "info" : "MethodDeclaration[15221-15447]:MethodDeclaration[15671-15897]"
  }, {
    "left" : "private notifyPatternCleared() : void",
    "right" : "private notifyPatternCleared() : void",
    "info" : "MethodDeclaration[15453-15668]:MethodDeclaration[15903-16118]"
  }, {
    "left" : "public clearPattern() : void",
    "right" : "public clearPattern() : void",
    "info" : "MethodDeclaration[15674-15774]:MethodDeclaration[16124-16224]"
  }, {
    "left" : "private resetPattern() : void",
    "right" : "private resetPattern() : void",
    "info" : "MethodDeclaration[15780-15996]:MethodDeclaration[16230-16446]"
  }, {
    "left" : "private clearPatternDrawLookup() : void",
    "right" : "private clearPatternDrawLookup() : void",
    "info" : "MethodDeclaration[16002-16278]:MethodDeclaration[16452-16728]"
  }, {
    "left" : "public disableInput() : void",
    "right" : "public disableInput() : void",
    "info" : "MethodDeclaration[16284-16495]:MethodDeclaration[16734-16945]"
  }, {
    "left" : "public enableInput() : void",
    "right" : "public enableInput() : void",
    "info" : "MethodDeclaration[16501-16601]:MethodDeclaration[16951-17051]"
  }, {
    "left" : "protected onSizeChanged(w int, h int, oldw int, oldh int) : void",
    "right" : "protected onSizeChanged(w int, h int, oldw int, oldh int) : void",
    "info" : "MethodDeclaration[16607-16921]:MethodDeclaration[17057-17371]"
  }, {
    "left" : "private resolveMeasured(measureSpec int, desired int) : int",
    "right" : "private resolveMeasured(measureSpec int, desired int) : int",
    "info" : "MethodDeclaration[16927-17470]:MethodDeclaration[17377-17920]"
  }, {
    "left" : "protected onMeasure(widthMeasureSpec int, heightMeasureSpec int) : void",
    "right" : "protected onMeasure(widthMeasureSpec int, heightMeasureSpec int) : void",
    "info" : "MethodDeclaration[17476-18388]:MethodDeclaration[17926-18838]"
  }, {
    "left" : "private detectAndAddHit(x float, y float) : ",
    "right" : "private detectAndAddHit(x float, y float) : ",
    "info" : "MethodDeclaration[18394-20285]:MethodDeclaration[18844-20735]"
  }, {
    "left" : "private addCellToPattern(newCell ) : void",
    "right" : "private addCellToPattern(newCell ) : void",
    "info" : "MethodDeclaration[20291-20565]:MethodDeclaration[20741-21015]"
  }, {
    "left" : "private startCellActivatedAnimation(cell ) : void",
    "right" : "private startCellActivatedAnimation(cell ) : void",
    "info" : "MethodDeclaration[20571-21203]:MethodDeclaration[21021-21653]"
  }, {
    "left" : "public run() : void",
    "right" : "public run() : void",
    "info" : "MethodDeclaration[20843-21037]:MethodDeclaration[21293-21487]"
  }, {
    "left" : "private startLineEndAnimation(state , startX float, startY float, targetX float, targetY float) : void",
    "right" : "private startLineEndAnimation(state , startX float, startY float, targetX float, targetY float) : void",
    "info" : "MethodDeclaration[21209-22261]:MethodDeclaration[21659-22711]"
  }, {
    "left" : "public onAnimationUpdate(animation ) : void",
    "right" : "public onAnimationUpdate(animation ) : void",
    "info" : "MethodDeclaration[21527-21843]:MethodDeclaration[21977-22293]"
  }, {
    "left" : "public onAnimationEnd(animation ) : void",
    "right" : "public onAnimationEnd(animation ) : void",
    "info" : "MethodDeclaration[21934-22061]:MethodDeclaration[22384-22511]"
  }, {
    "left" : "private startSizeAnimation(start float, end float, duration long, interpolator , state , endRunnable ) : void",
    "right" : "private startSizeAnimation(start float, end float, duration long, interpolator , state , endRunnable ) : void",
    "info" : "MethodDeclaration[22267-23215]:MethodDeclaration[22717-23665]"
  }, {
    "left" : "public onAnimationUpdate(animation ) : void",
    "right" : "public onAnimationUpdate(animation ) : void",
    "info" : "MethodDeclaration[22600-22789]:MethodDeclaration[23050-23239]"
  }, {
    "left" : "public onAnimationEnd(animation ) : void",
    "right" : "public onAnimationEnd(animation ) : void",
    "info" : "MethodDeclaration[22923-23054]:MethodDeclaration[23373-23504]"
  }, {
    "left" : "private checkForNewHit(x float, y float) : ",
    "right" : "private checkForNewHit(x float, y float) : ",
    "info" : "MethodDeclaration[23277-23690]:MethodDeclaration[23727-24140]"
  }, {
    "left" : "private getRowHit(y float) : int",
    "right" : "private getRowHit(y float) : int",
    "info" : "MethodDeclaration[23696-24314]:MethodDeclaration[24146-24764]"
  }, {
    "left" : "private getColumnHit(x float) : int",
    "right" : "private getColumnHit(x float) : int",
    "info" : "MethodDeclaration[24320-24945]:MethodDeclaration[24770-25395]"
  }, {
    "left" : "public onHoverEvent(event ) : boolean",
    "right" : "public onHoverEvent(event ) : boolean",
    "info" : "MethodDeclaration[24951-25743]:MethodDeclaration[25401-26193]"
  }, {
    "left" : "public onTouchEvent(event ) : boolean",
    "right" : "public onTouchEvent(event ) : boolean",
    "info" : "MethodDeclaration[25749-26801]:MethodDeclaration[26199-27251]"
  }, {
    "left" : "private handleActionMove(event ) : void",
    "right" : "private handleActionMove(event ) : void",
    "info" : "MethodDeclaration[26807-29959]:MethodDeclaration[27257-30409]"
  }, {
    "left" : "private sendAccessEvent(resId int) : void",
    "right" : "private sendAccessEvent(resId int) : void",
    "info" : "MethodDeclaration[29965-30073]:MethodDeclaration[30415-30523]"
  }, {
    "left" : "private handleActionUp(event ) : void",
    "right" : "private handleActionUp(event ) : void",
    "info" : "MethodDeclaration[30079-30544]:MethodDeclaration[30529-30994]"
  }, {
    "left" : "private cancelLineAnimations() : void",
    "right" : "private cancelLineAnimations() : void",
    "info" : "MethodDeclaration[30550-30997]:MethodDeclaration[31000-31447]"
  }, {
    "left" : "private handleActionDown(event ) : void",
    "right" : "private handleActionDown(event ) : void",
    "info" : "MethodDeclaration[31002-32222]:MethodDeclaration[31452-32672]"
  }, {
    "left" : "private getCenterXForColumn(column int) : float",
    "right" : "private getCenterXForColumn(column int) : float",
    "info" : "MethodDeclaration[32228-32354]:MethodDeclaration[32678-32804]"
  }, {
    "left" : "private getCenterYForRow(row int) : float",
    "right" : "private getCenterYForRow(row int) : float",
    "info" : "MethodDeclaration[32360-32478]:MethodDeclaration[32810-32928]"
  }, {
    "left" : "protected onDraw(canvas ...) : void",
    "right" : "protected onDraw(canvas ...) : void",
    "info" : "MethodDeclaration[32484-37498]:MethodDeclaration[32934-37948]"
  }, {
    "left" : "private calculateLastSegmentAlpha(x float, y float, lastX float, lastY float) : float",
    "right" : "private calculateLastSegmentAlpha(x float, y float, lastX float, lastY float) : float",
    "info" : "MethodDeclaration[37504-37831]:MethodDeclaration[37954-38281]"
  }, {
    "left" : "private getCurrentColor(partOfPattern boolean) : int",
    "right" : "private getCurrentColor(partOfPattern boolean) : int",
    "info" : "MethodDeclaration[37837-38586]:MethodDeclaration[38287-39036]"
  }, {
    "left" : "private drawCircle(canvas , centerX float, centerY float, size float, partOfPattern boolean, alpha float) : void",
    "right" : "private drawCircle(canvas , centerX float, centerY float, size float, partOfPattern boolean, alpha float) : void",
    "info" : "MethodDeclaration[38592-39039]:MethodDeclaration[39042-39489]"
  }, {
    "left" : "protected onSaveInstanceState() : ",
    "right" : "protected onSaveInstanceState() : ",
    "info" : "MethodDeclaration[39045-39448]:MethodDeclaration[39495-39898]"
  }, {
    "left" : "protected onRestoreInstanceState(state ) : void",
    "right" : "protected onRestoreInstanceState(state ) : void",
    "info" : "MethodDeclaration[39454-40137]:MethodDeclaration[39904-40583]"
  }, {
    "left" : "class : SavedState",
    "right" : "class : SavedState",
    "info" : "TypeDeclaration[40143-43653]:TypeDeclaration[40589-44099]"
  }, {
    "left" : "mSerializedPattern",
    "right" : "mSerializedPattern",
    "info" : "FieldDeclaration[40294-40334]:FieldDeclaration[40740-40780]"
  }, {
    "left" : "mDisplayMode",
    "right" : "mDisplayMode",
    "info" : "FieldDeclaration[40343-40374]:FieldDeclaration[40789-40820]"
  }, {
    "left" : "mPatternSize",
    "right" : "mPatternSize",
    "info" : "FieldDeclaration[40383-40415]:FieldDeclaration[40829-40861]"
  }, {
    "left" : "mInputEnabled",
    "right" : "mInputEnabled",
    "info" : "FieldDeclaration[40424-40460]:FieldDeclaration[40870-40906]"
  }, {
    "left" : "mInStealthMode",
    "right" : "mInStealthMode",
    "info" : "FieldDeclaration[40469-40506]:FieldDeclaration[40915-40952]"
  }, {
    "left" : "mTactileFeedbackEnabled",
    "right" : "mTactileFeedbackEnabled",
    "info" : "FieldDeclaration[40515-40561]:FieldDeclaration[40961-41007]"
  }, {
    "left" : "mVisibleDots",
    "right" : "mVisibleDots",
    "info" : "FieldDeclaration[40570-40605]:FieldDeclaration[41016-41051]"
  }, {
    "left" : "mShowErrorPath",
    "right" : "mShowErrorPath",
    "info" : "FieldDeclaration[40614-40651]:FieldDeclaration[41060-41097]"
  }, {
    "left" : "private SavedState(superState , serializedPattern , displayMode int, patternSize byte, inputEnabled boolean, inStealthMode boolean, tactileFeedbackEnabled boolean, visibleDots boolean, showErrorPath boolean)",
    "right" : "private SavedState(superState , serializedPattern , displayMode int, patternSize byte, inputEnabled boolean, inStealthMode boolean, tactileFeedbackEnabled boolean, visibleDots boolean, showErrorPath boolean)",
    "info" : "MethodDeclaration[40661-41428]:MethodDeclaration[41107-41874]"
  }, {
    "left" : "private SavedState(in )",
    "right" : "private SavedState(in )",
    "info" : "MethodDeclaration[41438-42019]:MethodDeclaration[41884-42465]"
  }, {
    "left" : "public getSerializedPattern() : ",
    "right" : "public getSerializedPattern() : ",
    "info" : "MethodDeclaration[42029-42116]:MethodDeclaration[42475-42562]"
  }, {
    "left" : "public getDisplayMode() : int",
    "right" : "public getDisplayMode() : int",
    "info" : "MethodDeclaration[42126-42198]:MethodDeclaration[42572-42644]"
  }, {
    "left" : "public getPatternSize() : byte",
    "right" : "public getPatternSize() : byte",
    "info" : "MethodDeclaration[42208-42281]:MethodDeclaration[42654-42727]"
  }, {
    "left" : "public isInputEnabled() : boolean",
    "right" : "public isInputEnabled() : boolean",
    "info" : "MethodDeclaration[42291-42368]:MethodDeclaration[42737-42814]"
  }, {
    "left" : "public isInStealthMode() : boolean",
    "right" : "public isInStealthMode() : boolean",
    "info" : "MethodDeclaration[42378-42457]:MethodDeclaration[42824-42903]"
  }, {
    "left" : "public isTactileFeedbackEnabled() : boolean",
    "right" : "public isTactileFeedbackEnabled() : boolean",
    "info" : "MethodDeclaration[42467-42563]:MethodDeclaration[42913-43009]"
  }, {
    "left" : "public isVisibleDots() : boolean",
    "right" : "public isVisibleDots() : boolean",
    "info" : "MethodDeclaration[42573-42648]:MethodDeclaration[43019-43094]"
  }, {
    "left" : "public isShowErrorPath() : boolean",
    "right" : "public isShowErrorPath() : boolean",
    "info" : "MethodDeclaration[42658-42737]:MethodDeclaration[43104-43183]"
  }, {
    "left" : "public writeToParcel(dest , flags int) : void",
    "right" : "public writeToParcel(dest , flags int) : void",
    "info" : "MethodDeclaration[42747-43236]:MethodDeclaration[43193-43682]"
  }, {
    "left" : "CREATOR",
    "right" : "CREATOR",
    "info" : "FieldDeclaration[43246-43647]:FieldDeclaration[43692-44093]"
  }, {
    "left" : "public createFromParcel(in ) : ",
    "right" : "public createFromParcel(in ) : ",
    "info" : "MethodDeclaration[43371-43491]:MethodDeclaration[43817-43937]"
  }, {
    "left" : "public newArray(size int) : ",
    "right" : "public newArray(size int) : ",
    "info" : "MethodDeclaration[43513-43628]:MethodDeclaration[43959-44074]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4828-4834]:Modifier[4828-4834]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4835-4841]:Modifier[4835-4841]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[4842-4847]:TYPE_DECLARATION_KIND[4842-4847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4974-5048]:Block[4974-5048]"
  }, {
    "left" : "updateSize(LockPatternUtils.PATTERN_SIZE_DEFAULT);",
    "right" : "updateSize(LockPatternUtils.PATTERN_SIZE_DEFAULT);",
    "info" : "ExpressionStatement[4988-5038]:ExpressionStatement[4988-5038]"
  }, {
    "left" : "Cell",
    "right" : "Cell",
    "info" : "SimpleName[5182-5186]:SimpleName[5188-5192]"
  }, {
    "left" : "int row",
    "right" : "int row",
    "info" : "SingleVariableDeclaration[5187-5194]:SingleVariableDeclaration[5193-5200]"
  }, {
    "left" : "int column",
    "right" : "int column",
    "info" : "SingleVariableDeclaration[5196-5206]:SingleVariableDeclaration[5202-5212]"
  }, {
    "left" : "byte size",
    "right" : "byte size",
    "info" : "SingleVariableDeclaration[5208-5217]:SingleVariableDeclaration[5214-5223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5219-5335]:Block[5225-5341]"
  }, {
    "left" : "checkRange(row, column, size);",
    "right" : "checkRange(row, column, size);",
    "info" : "ExpressionStatement[5233-5263]:ExpressionStatement[5239-5269]"
  }, {
    "left" : "this.row = row;",
    "right" : "this.row = row;",
    "info" : "ExpressionStatement[5276-5291]:ExpressionStatement[5282-5297]"
  }, {
    "left" : "this.column = column;",
    "right" : "this.column = column;",
    "info" : "ExpressionStatement[5304-5325]:ExpressionStatement[5310-5331]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5345-5351]:Modifier[5351-5357]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[5352-5355]:PrimitiveType[5358-5361]"
  }, {
    "left" : "getRow",
    "right" : "getRow",
    "info" : "SimpleName[5356-5362]:SimpleName[5362-5368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5365-5400]:Block[5371-5406]"
  }, {
    "left" : "return row;",
    "right" : "return row;",
    "info" : "ReturnStatement[5379-5390]:ReturnStatement[5385-5396]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5410-5416]:Modifier[5416-5422]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[5417-5420]:PrimitiveType[5423-5426]"
  }, {
    "left" : "getColumn",
    "right" : "getColumn",
    "info" : "SimpleName[5421-5430]:SimpleName[5427-5436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5433-5471]:Block[5439-5477]"
  }, {
    "left" : "return column;",
    "right" : "return column;",
    "info" : "ReturnStatement[5447-5461]:ReturnStatement[5453-5467]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5597-5603]:Modifier[5741-5747]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5604-5610]:Modifier[5748-5754]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[5611-5623]:Modifier[5617-5629]"
  }, {
    "left" : "Cell",
    "right" : "Cell",
    "info" : "SimpleType[5624-5628]:SimpleType[5755-5759]"
  }, {
    "left" : "of",
    "right" : "of",
    "info" : "SimpleName[5629-5631]:SimpleName[5760-5762]"
  }, {
    "left" : "int row",
    "right" : "int row",
    "info" : "SingleVariableDeclaration[5632-5639]:SingleVariableDeclaration[5779-5786]"
  }, {
    "left" : "int column",
    "right" : "int column",
    "info" : "SingleVariableDeclaration[5641-5651]:SingleVariableDeclaration[5788-5798]"
  }, {
    "left" : "byte size",
    "right" : "byte size",
    "info" : "SingleVariableDeclaration[5653-5662]:SingleVariableDeclaration[5800-5809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5664-5758]:Block[5811-5904]"
  }, {
    "left" : "checkRange(row, column, size);",
    "right" : "checkRange(row, column, size);",
    "info" : "ExpressionStatement[5678-5708]:ExpressionStatement[5825-5855]"
  }, {
    "left" : "return sCells[row][column];",
    "right" : "return cells[row][column];",
    "info" : "ReturnStatement[5721-5748]:ReturnStatement[5868-5894]"
  }, {
    "left" : "sCells",
    "right" : "cells",
    "info" : "SimpleName[5728-5734]:SimpleName[5875-5880]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5768-5774]:Modifier[5914-5920]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5775-5781]:Modifier[5921-5927]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5782-5786]:PrimitiveType[5928-5932]"
  }, {
    "left" : "updateSize",
    "right" : "updateSize",
    "info" : "SimpleName[5787-5797]:SimpleName[5933-5943]"
  }, {
    "left" : "byte size",
    "right" : "byte size",
    "info" : "SingleVariableDeclaration[5798-5807]:SingleVariableDeclaration[5944-5953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5809-6046]:Block[5955-6192]"
  }, {
    "left" : "sCells = new Cell[size][size];",
    "right" : "sCells = new Cell[size][size];",
    "info" : "ExpressionStatement[5823-5853]:ExpressionStatement[5969-5999]"
  }, {
    "left" : "for (int i = 0; i < size; i++)",
    "right" : "for (int i = 0; i < size; i++)",
    "info" : "ForStatement[5866-6036]:ForStatement[6012-6182]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5897-6036]:Block[6043-6182]"
  }, {
    "left" : "for (int j = 0; j < size; j++)",
    "right" : "for (int j = 0; j < size; j++)",
    "info" : "ForStatement[5915-6022]:ForStatement[6061-6168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5946-6022]:Block[6092-6168]"
  }, {
    "left" : "sCells[i][j] = new Cell(i, j, size);",
    "right" : "sCells[i][j] = new Cell(i, j, size);",
    "info" : "ExpressionStatement[5968-6004]:ExpressionStatement[6114-6150]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[6056-6063]:Modifier[6202-6209]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6064-6070]:Modifier[6210-6216]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6071-6075]:PrimitiveType[6217-6221]"
  }, {
    "left" : "checkRange",
    "right" : "checkRange",
    "info" : "SimpleName[6076-6086]:SimpleName[6222-6232]"
  }, {
    "left" : "int row",
    "right" : "int row",
    "info" : "SingleVariableDeclaration[6087-6094]:SingleVariableDeclaration[6233-6240]"
  }, {
    "left" : "int column",
    "right" : "int column",
    "info" : "SingleVariableDeclaration[6096-6106]:SingleVariableDeclaration[6242-6252]"
  }, {
    "left" : "byte size",
    "right" : "byte size",
    "info" : "SingleVariableDeclaration[6108-6117]:SingleVariableDeclaration[6254-6263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6119-6441]:Block[6265-6587]"
  }, {
    "left" : "if (row < 0 || row > size - 1)",
    "right" : "if (row < 0 || row > size - 1)",
    "info" : "IfStatement[6133-6271]:IfStatement[6279-6417]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6164-6271]:Block[6310-6417]"
  }, {
    "left" : "throw new IllegalArgumentException(\"row must be in range 0-\" + (size - 1));",
    "right" : "throw new IllegalArgumentException(\"row must be in range 0-\" + (size - 1));",
    "info" : "ThrowStatement[6182-6257]:ThrowStatement[6328-6403]"
  }, {
    "left" : "if (column < 0 || column > size - 1)",
    "right" : "if (column < 0 || column > size - 1)",
    "info" : "IfStatement[6284-6431]:IfStatement[6430-6577]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6321-6431]:Block[6467-6577]"
  }, {
    "left" : "throw new IllegalArgumentException(\"column must be in range 0-\" + (size - 1));",
    "right" : "throw new IllegalArgumentException(\"column must be in range 0-\" + (size - 1));",
    "info" : "ThrowStatement[6339-6417]:ThrowStatement[6485-6563]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6451-6457]:Modifier[6901-6907]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6458-6464]:SimpleType[6908-6914]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[6465-6473]:SimpleName[6915-6923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6476-6547]:Block[6926-6997]"
  }, {
    "left" : "return \"(row=\" + row + \",clmn=\" + column + \")\";",
    "right" : "return \"(row=\" + row + \",clmn=\" + column + \")\";",
    "info" : "ReturnStatement[6490-6537]:ReturnStatement[6940-6987]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6559-6565]:Modifier[7009-7015]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6566-6572]:Modifier[7016-7022]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[6573-6578]:TYPE_DECLARATION_KIND[7023-7028]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7380-7386]:Modifier[7830-7836]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7387-7393]:Modifier[7837-7843]"
  }, {
    "left" : "interface",
    "right" : "interface",
    "info" : "TYPE_DECLARATION_KIND[7394-7403]:TYPE_DECLARATION_KIND[7844-7853]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7493-7497]:PrimitiveType[7943-7947]"
  }, {
    "left" : "onPatternStart",
    "right" : "onPatternStart",
    "info" : "SimpleName[7498-7512]:SimpleName[7948-7962]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7585-7589]:PrimitiveType[8035-8039]"
  }, {
    "left" : "onPatternCleared",
    "right" : "onPatternCleared",
    "info" : "SimpleName[7590-7606]:SimpleName[8040-8056]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7780-7784]:PrimitiveType[8230-8234]"
  }, {
    "left" : "onPatternCellAdded",
    "right" : "onPatternCellAdded",
    "info" : "SimpleName[7785-7803]:SimpleName[8235-8253]"
  }, {
    "left" : "List<Cell> pattern",
    "right" : "List<Cell> pattern",
    "info" : "SingleVariableDeclaration[7804-7822]:SingleVariableDeclaration[8254-8272]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7946-7950]:PrimitiveType[8396-8400]"
  }, {
    "left" : "onPatternDetected",
    "right" : "onPatternDetected",
    "info" : "SimpleName[7951-7968]:SimpleName[8401-8418]"
  }, {
    "left" : "List<Cell> pattern",
    "right" : "List<Cell> pattern",
    "info" : "SingleVariableDeclaration[7969-7987]:SingleVariableDeclaration[8419-8437]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8001-8007]:Modifier[8451-8457]"
  }, {
    "left" : "LockPatternView",
    "right" : "LockPatternView",
    "info" : "SimpleName[8008-8023]:SimpleName[8458-8473]"
  }, {
    "left" : "Context context",
    "right" : "Context context",
    "info" : "SingleVariableDeclaration[8024-8039]:SingleVariableDeclaration[8474-8489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8041-8077]:Block[8491-8527]"
  }, {
    "left" : "this(context, null);",
    "right" : "this(context, null);",
    "info" : "ConstructorInvocation[8051-8071]:ConstructorInvocation[8501-8521]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8083-8089]:Modifier[8533-8539]"
  }, {
    "left" : "LockPatternView",
    "right" : "LockPatternView",
    "info" : "SimpleName[8090-8105]:SimpleName[8540-8555]"
  }, {
    "left" : "Context context",
    "right" : "Context context",
    "info" : "SingleVariableDeclaration[8106-8121]:SingleVariableDeclaration[8556-8571]"
  }, {
    "left" : "AttributeSet attrs",
    "right" : "AttributeSet attrs",
    "info" : "SingleVariableDeclaration[8123-8141]:SingleVariableDeclaration[8573-8591]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8143-10605]:Block[8593-11055]"
  }, {
    "left" : "super(context, attrs);",
    "right" : "super(context, attrs);",
    "info" : "SuperConstructorInvocation[8153-8175]:SuperConstructorInvocation[8603-8625]"
  }, {
    "left" : "TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.LockPatternView);",
    "right" : "TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.LockPatternView);",
    "info" : "VariableDeclarationStatement[8185-8267]:VariableDeclarationStatement[8635-8717]"
  }, {
    "left" : "final String aspect = a.getString(R.styleable.LockPatternView_aspect);",
    "right" : "final String aspect = a.getString(R.styleable.LockPatternView_aspect);",
    "info" : "VariableDeclarationStatement[8277-8347]:VariableDeclarationStatement[8727-8797]"
  }, {
    "left" : "if (\"square\".equals(aspect))",
    "right" : "if (\"square\".equals(aspect))",
    "info" : "IfStatement[8357-8672]:IfStatement[8807-9122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8386-8434]:Block[8836-8884]"
  }, {
    "left" : "mAspect = ASPECT_SQUARE;",
    "right" : "mAspect = ASPECT_SQUARE;",
    "info" : "ExpressionStatement[8400-8424]:ExpressionStatement[8850-8874]"
  }, {
    "left" : "if (\"lock_width\".equals(aspect))",
    "right" : "if (\"lock_width\".equals(aspect))",
    "info" : "IfStatement[8440-8672]:IfStatement[8890-9122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8473-8525]:Block[8923-8975]"
  }, {
    "left" : "mAspect = ASPECT_LOCK_WIDTH;",
    "right" : "mAspect = ASPECT_LOCK_WIDTH;",
    "info" : "ExpressionStatement[8487-8515]:ExpressionStatement[8937-8965]"
  }, {
    "left" : "if (\"lock_height\".equals(aspect))",
    "right" : "if (\"lock_height\".equals(aspect))",
    "info" : "IfStatement[8531-8672]:IfStatement[8981-9122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8565-8618]:Block[9015-9068]"
  }, {
    "left" : "mAspect = ASPECT_LOCK_HEIGHT;",
    "right" : "mAspect = ASPECT_LOCK_HEIGHT;",
    "info" : "ExpressionStatement[8579-8608]:ExpressionStatement[9029-9058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8624-8672]:Block[9074-9122]"
  }, {
    "left" : "mAspect = ASPECT_SQUARE;",
    "right" : "mAspect = ASPECT_SQUARE;",
    "info" : "ExpressionStatement[8638-8662]:ExpressionStatement[9088-9112]"
  }, {
    "left" : "setClickable(true);",
    "right" : "setClickable(true);",
    "info" : "ExpressionStatement[8682-8701]:ExpressionStatement[9132-9151]"
  }, {
    "left" : "mPathPaint.setAntiAlias(true);",
    "right" : "mPathPaint.setAntiAlias(true);",
    "info" : "ExpressionStatement[8712-8742]:ExpressionStatement[9162-9192]"
  }, {
    "left" : "mPathPaint.setDither(true);",
    "right" : "mPathPaint.setDither(true);",
    "info" : "ExpressionStatement[8751-8778]:ExpressionStatement[9201-9228]"
  }, {
    "left" : "mRegularColor = getResources().getColor(R.color.lock_pattern_view_regular_color);",
    "right" : "mRegularColor = getResources().getColor(R.color.lock_pattern_view_regular_color);",
    "info" : "ExpressionStatement[8788-8869]:ExpressionStatement[9238-9319]"
  }, {
    "left" : "mErrorColor = getResources().getColor(R.color.lock_pattern_view_error_color);",
    "right" : "mErrorColor = getResources().getColor(R.color.lock_pattern_view_error_color);",
    "info" : "ExpressionStatement[8878-8955]:ExpressionStatement[9328-9405]"
  }, {
    "left" : "mSuccessColor = getResources().getColor(R.color.lock_pattern_view_success_color);",
    "right" : "mSuccessColor = getResources().getColor(R.color.lock_pattern_view_success_color);",
    "info" : "ExpressionStatement[8964-9045]:ExpressionStatement[9414-9495]"
  }, {
    "left" : "mRegularColor = a.getColor(R.styleable.LockPatternView_regularColor, mRegularColor);",
    "right" : "mRegularColor = a.getColor(R.styleable.LockPatternView_regularColor, mRegularColor);",
    "info" : "ExpressionStatement[9054-9138]:ExpressionStatement[9504-9588]"
  }, {
    "left" : "mErrorColor = a.getColor(R.styleable.LockPatternView_errorColor, mErrorColor);",
    "right" : "mErrorColor = a.getColor(R.styleable.LockPatternView_errorColor, mErrorColor);",
    "info" : "ExpressionStatement[9147-9225]:ExpressionStatement[9597-9675]"
  }, {
    "left" : "mSuccessColor = a.getColor(R.styleable.LockPatternView_successColor, mSuccessColor);",
    "right" : "mSuccessColor = a.getColor(R.styleable.LockPatternView_successColor, mSuccessColor);",
    "info" : "ExpressionStatement[9234-9318]:ExpressionStatement[9684-9768]"
  }, {
    "left" : "int pathColor = a.getColor(R.styleable.LockPatternView_pathColor, mRegularColor);",
    "right" : "int pathColor = a.getColor(R.styleable.LockPatternView_pathColor, mRegularColor);",
    "info" : "VariableDeclarationStatement[9328-9409]:VariableDeclarationStatement[9778-9859]"
  }, {
    "left" : "mPathPaint.setColor(pathColor);",
    "right" : "mPathPaint.setColor(pathColor);",
    "info" : "ExpressionStatement[9418-9449]:ExpressionStatement[9868-9899]"
  }, {
    "left" : "mPathPaint.setStyle(Paint.Style.STROKE);",
    "right" : "mPathPaint.setStyle(Paint.Style.STROKE);",
    "info" : "ExpressionStatement[9459-9499]:ExpressionStatement[9909-9949]"
  }, {
    "left" : "mPathPaint.setStrokeJoin(Paint.Join.ROUND);",
    "right" : "mPathPaint.setStrokeJoin(Paint.Join.ROUND);",
    "info" : "ExpressionStatement[9508-9551]:ExpressionStatement[9958-10001]"
  }, {
    "left" : "mPathPaint.setStrokeCap(Paint.Cap.ROUND);",
    "right" : "mPathPaint.setStrokeCap(Paint.Cap.ROUND);",
    "info" : "ExpressionStatement[9560-9601]:ExpressionStatement[10010-10051]"
  }, {
    "left" : "mPathWidth = getResources().getDimensionPixelSize(R.dimen.lock_pattern_dot_line_width);",
    "right" : "mPathWidth = getResources().getDimensionPixelSize(R.dimen.lock_pattern_dot_line_width);",
    "info" : "ExpressionStatement[9611-9698]:ExpressionStatement[10061-10148]"
  }, {
    "left" : "mPathPaint.setStrokeWidth(mPathWidth);",
    "right" : "mPathPaint.setStrokeWidth(mPathWidth);",
    "info" : "ExpressionStatement[9707-9745]:ExpressionStatement[10157-10195]"
  }, {
    "left" : "mDotSize = getResources().getDimensionPixelSize(R.dimen.lock_pattern_dot_size);",
    "right" : "mDotSize = getResources().getDimensionPixelSize(R.dimen.lock_pattern_dot_size);",
    "info" : "ExpressionStatement[9755-9834]:ExpressionStatement[10205-10284]"
  }, {
    "left" : "mDotSizeActivated = getResources().getDimensionPixelSize(\n                R.dimen.lock_pattern_dot_size_activated);",
    "right" : "mDotSizeActivated = getResources().getDimensionPixelSize(\n                R.dimen.lock_pattern_dot_size_activated);",
    "info" : "ExpressionStatement[9843-9958]:ExpressionStatement[10293-10408]"
  }, {
    "left" : "mPaint.setAntiAlias(true);",
    "right" : "mPaint.setAntiAlias(true);",
    "info" : "ExpressionStatement[9968-9994]:ExpressionStatement[10418-10444]"
  }, {
    "left" : "mPaint.setDither(true);",
    "right" : "mPaint.setDither(true);",
    "info" : "ExpressionStatement[10003-10026]:ExpressionStatement[10453-10476]"
  }, {
    "left" : "mCellStates = new CellState[mPatternSize][mPatternSize];",
    "right" : "mCellStates = new CellState[mPatternSize][mPatternSize];",
    "info" : "ExpressionStatement[10036-10092]:ExpressionStatement[10486-10542]"
  }, {
    "left" : "for (int i = 0; i < mPatternSize; i++)",
    "right" : "for (int i = 0; i < mPatternSize; i++)",
    "info" : "ForStatement[10101-10322]:ForStatement[10551-10772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10140-10322]:Block[10590-10772]"
  }, {
    "left" : "for (int j = 0; j < mPatternSize; j++)",
    "right" : "for (int j = 0; j < mPatternSize; j++)",
    "info" : "ForStatement[10154-10312]:ForStatement[10604-10762]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10193-10312]:Block[10643-10762]"
  }, {
    "left" : "mCellStates[i][j] = new CellState();",
    "right" : "mCellStates[i][j] = new CellState();",
    "info" : "ExpressionStatement[10211-10247]:ExpressionStatement[10661-10697]"
  }, {
    "left" : "mCellStates[i][j].size = mDotSize;",
    "right" : "mCellStates[i][j].size = mDotSize;",
    "info" : "ExpressionStatement[10264-10298]:ExpressionStatement[10714-10748]"
  }, {
    "left" : "mFastOutSlowInInterpolator =\n                AnimationUtils.loadInterpolator(context, android.R.interpolator.fast_out_slow_in);",
    "right" : "mFastOutSlowInInterpolator =\n                AnimationUtils.loadInterpolator(context, android.R.interpolator.fast_out_slow_in);",
    "info" : "ExpressionStatement[10332-10459]:ExpressionStatement[10782-10909]"
  }, {
    "left" : "mLinearOutSlowInInterpolator =\n                AnimationUtils.loadInterpolator(context, android.R.interpolator.linear_out_slow_in);",
    "right" : "mLinearOutSlowInInterpolator =\n                AnimationUtils.loadInterpolator(context, android.R.interpolator.linear_out_slow_in);",
    "info" : "ExpressionStatement[10468-10599]:ExpressionStatement[10918-11049]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10611-10617]:Modifier[11061-11067]"
  }, {
    "left" : "CellState[][]",
    "right" : "CellState[][]",
    "info" : "ArrayType[10618-10631]:ArrayType[11068-11081]"
  }, {
    "left" : "getCellStates",
    "right" : "getCellStates",
    "info" : "SimpleName[10632-10645]:SimpleName[11082-11095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10648-10683]:Block[11098-11133]"
  }, {
    "left" : "return mCellStates;",
    "right" : "return mCellStates;",
    "info" : "ReturnStatement[10658-10677]:ReturnStatement[11108-11127]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10757-10763]:Modifier[11207-11213]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[10764-10771]:PrimitiveType[11214-11221]"
  }, {
    "left" : "isInStealthMode",
    "right" : "isInStealthMode",
    "info" : "SimpleName[10772-10787]:SimpleName[11222-11237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10790-10828]:Block[11240-11278]"
  }, {
    "left" : "return mInStealthMode;",
    "right" : "return mInStealthMode;",
    "info" : "ReturnStatement[10800-10822]:ReturnStatement[11250-11272]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10912-10918]:Modifier[11362-11368]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[10919-10926]:PrimitiveType[11369-11376]"
  }, {
    "left" : "isTactileFeedbackEnabled",
    "right" : "isTactileFeedbackEnabled",
    "info" : "SimpleName[10927-10951]:SimpleName[11377-11401]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10954-10999]:Block[11404-11449]"
  }, {
    "left" : "return mEnableHapticFeedback;",
    "right" : "return mEnableHapticFeedback;",
    "info" : "ReturnStatement[10964-10993]:ReturnStatement[11414-11443]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11073-11079]:Modifier[11523-11529]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[11080-11083]:PrimitiveType[11530-11533]"
  }, {
    "left" : "getLockPatternSize",
    "right" : "getLockPatternSize",
    "info" : "SimpleName[11084-11102]:SimpleName[11534-11552]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11105-11141]:Block[11555-11591]"
  }, {
    "left" : "return mPatternSize;",
    "right" : "return mPatternSize;",
    "info" : "ReturnStatement[11115-11135]:ReturnStatement[11565-11585]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11354-11360]:Modifier[11804-11810]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11361-11365]:PrimitiveType[11811-11815]"
  }, {
    "left" : "setInStealthMode",
    "right" : "setInStealthMode",
    "info" : "SimpleName[11366-11382]:SimpleName[11816-11832]"
  }, {
    "left" : "boolean inStealthMode",
    "right" : "boolean inStealthMode",
    "info" : "SingleVariableDeclaration[11383-11404]:SingleVariableDeclaration[11833-11854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11406-11453]:Block[11856-11903]"
  }, {
    "left" : "mInStealthMode = inStealthMode;",
    "right" : "mInStealthMode = inStealthMode;",
    "info" : "ExpressionStatement[11416-11447]:ExpressionStatement[11866-11897]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11459-11465]:Modifier[11909-11915]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11466-11470]:PrimitiveType[11916-11920]"
  }, {
    "left" : "setVisibleDots",
    "right" : "setVisibleDots",
    "info" : "SimpleName[11471-11485]:SimpleName[11921-11935]"
  }, {
    "left" : "boolean visibleDots",
    "right" : "boolean visibleDots",
    "info" : "SingleVariableDeclaration[11486-11505]:SingleVariableDeclaration[11936-11955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11507-11550]:Block[11957-12000]"
  }, {
    "left" : "mVisibleDots = visibleDots;",
    "right" : "mVisibleDots = visibleDots;",
    "info" : "ExpressionStatement[11517-11544]:ExpressionStatement[11967-11994]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11556-11562]:Modifier[12006-12012]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11563-11570]:PrimitiveType[12013-12020]"
  }, {
    "left" : "isVisibleDots",
    "right" : "isVisibleDots",
    "info" : "SimpleName[11571-11584]:SimpleName[12021-12034]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11587-11623]:Block[12037-12073]"
  }, {
    "left" : "return mVisibleDots;",
    "right" : "return mVisibleDots;",
    "info" : "ReturnStatement[11597-11617]:ReturnStatement[12047-12067]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11629-11635]:Modifier[12079-12085]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11636-11640]:PrimitiveType[12086-12090]"
  }, {
    "left" : "setShowErrorPath",
    "right" : "setShowErrorPath",
    "info" : "SimpleName[11641-11657]:SimpleName[12091-12107]"
  }, {
    "left" : "boolean showErrorPath",
    "right" : "boolean showErrorPath",
    "info" : "SingleVariableDeclaration[11658-11679]:SingleVariableDeclaration[12108-12129]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11681-11728]:Block[12131-12178]"
  }, {
    "left" : "mShowErrorPath = showErrorPath;",
    "right" : "mShowErrorPath = showErrorPath;",
    "info" : "ExpressionStatement[11691-11722]:ExpressionStatement[12141-12172]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11734-11740]:Modifier[12184-12190]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11741-11748]:PrimitiveType[12191-12198]"
  }, {
    "left" : "isShowErrorPath",
    "right" : "isShowErrorPath",
    "info" : "SimpleName[11749-11764]:SimpleName[12199-12214]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11767-11805]:Block[12217-12255]"
  }, {
    "left" : "return mShowErrorPath;",
    "right" : "return mShowErrorPath;",
    "info" : "ReturnStatement[11777-11799]:ReturnStatement[12227-12249]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12042-12048]:Modifier[12492-12498]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12049-12053]:PrimitiveType[12499-12503]"
  }, {
    "left" : "setTactileFeedbackEnabled",
    "right" : "setTactileFeedbackEnabled",
    "info" : "SimpleName[12054-12079]:SimpleName[12504-12529]"
  }, {
    "left" : "boolean tactileFeedbackEnabled",
    "right" : "boolean tactileFeedbackEnabled",
    "info" : "SingleVariableDeclaration[12080-12110]:SingleVariableDeclaration[12530-12560]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12112-12175]:Block[12562-12625]"
  }, {
    "left" : "mEnableHapticFeedback = tactileFeedbackEnabled;",
    "right" : "mEnableHapticFeedback = tactileFeedbackEnabled;",
    "info" : "ExpressionStatement[12122-12169]:ExpressionStatement[12572-12619]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12287-12293]:Modifier[12737-12743]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12294-12298]:PrimitiveType[12744-12748]"
  }, {
    "left" : "setLockPatternSize",
    "right" : "setLockPatternSize",
    "info" : "SimpleName[12299-12317]:SimpleName[12749-12767]"
  }, {
    "left" : "byte size",
    "right" : "byte size",
    "info" : "SingleVariableDeclaration[12318-12327]:SingleVariableDeclaration[12768-12777]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12329-12798]:Block[12779-13248]"
  }, {
    "left" : "mPatternSize = size;",
    "right" : "mPatternSize = size;",
    "info" : "ExpressionStatement[12339-12359]:ExpressionStatement[12789-12809]"
  }, {
    "left" : "Cell.updateSize(size);",
    "right" : "Cell.updateSize(size);",
    "info" : "ExpressionStatement[12368-12390]:ExpressionStatement[12818-12840]"
  }, {
    "left" : "mCellStates = new CellState[mPatternSize][mPatternSize];",
    "right" : "mCellStates = new CellState[mPatternSize][mPatternSize];",
    "info" : "ExpressionStatement[12399-12455]:ExpressionStatement[12849-12905]"
  }, {
    "left" : "for (int i = 0; i < mPatternSize; i++)",
    "right" : "for (int i = 0; i < mPatternSize; i++)",
    "info" : "ForStatement[12464-12685]:ForStatement[12914-13135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12503-12685]:Block[12953-13135]"
  }, {
    "left" : "for (int j = 0; j < mPatternSize; j++)",
    "right" : "for (int j = 0; j < mPatternSize; j++)",
    "info" : "ForStatement[12517-12675]:ForStatement[12967-13125]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12556-12675]:Block[13006-13125]"
  }, {
    "left" : "mCellStates[i][j] = new CellState();",
    "right" : "mCellStates[i][j] = new CellState();",
    "info" : "ExpressionStatement[12574-12610]:ExpressionStatement[13024-13060]"
  }, {
    "left" : "mCellStates[i][j].size = mDotSize;",
    "right" : "mCellStates[i][j].size = mDotSize;",
    "info" : "ExpressionStatement[12627-12661]:ExpressionStatement[13077-13111]"
  }, {
    "left" : "mPattern = new ArrayList<Cell>(size * size);",
    "right" : "mPattern = new ArrayList<Cell>(size * size);",
    "info" : "ExpressionStatement[12694-12738]:ExpressionStatement[13144-13188]"
  }, {
    "left" : "mPatternDrawLookup = new boolean[size][size];",
    "right" : "mPatternDrawLookup = new boolean[size][size];",
    "info" : "ExpressionStatement[12747-12792]:ExpressionStatement[13197-13242]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12931-12937]:Modifier[13381-13387]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12938-12942]:PrimitiveType[13388-13392]"
  }, {
    "left" : "setLockPatternUtils",
    "right" : "setLockPatternUtils",
    "info" : "SimpleName[12943-12962]:SimpleName[13393-13412]"
  }, {
    "left" : "LockPatternUtils utils",
    "right" : "LockPatternUtils utils",
    "info" : "SingleVariableDeclaration[12963-12985]:SingleVariableDeclaration[13413-13435]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12987-13029]:Block[13437-13479]"
  }, {
    "left" : "mLockPatternUtils = utils;",
    "right" : "mLockPatternUtils = utils;",
    "info" : "ExpressionStatement[12997-13023]:ExpressionStatement[13447-13473]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13146-13152]:Modifier[13596-13602]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13153-13157]:PrimitiveType[13603-13607]"
  }, {
    "left" : "setOnPatternListener",
    "right" : "setOnPatternListener",
    "info" : "SimpleName[13158-13178]:SimpleName[13608-13628]"
  }, {
    "left" : "OnPatternListener onPatternListener",
    "right" : "OnPatternListener onPatternListener",
    "info" : "SingleVariableDeclaration[13192-13227]:SingleVariableDeclaration[13642-13677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13229-13284]:Block[13679-13734]"
  }, {
    "left" : "mOnPatternListener = onPatternListener;",
    "right" : "mOnPatternListener = onPatternListener;",
    "info" : "ExpressionStatement[13239-13278]:ExpressionStatement[13689-13728]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13492-13498]:Modifier[13942-13948]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13499-13503]:PrimitiveType[13949-13953]"
  }, {
    "left" : "setPattern",
    "right" : "setPattern",
    "info" : "SimpleName[13504-13514]:SimpleName[13954-13964]"
  }, {
    "left" : "DisplayMode displayMode",
    "right" : "DisplayMode displayMode",
    "info" : "SingleVariableDeclaration[13515-13538]:SingleVariableDeclaration[13965-13988]"
  }, {
    "left" : "List<Cell> pattern",
    "right" : "List<Cell> pattern",
    "info" : "SingleVariableDeclaration[13540-13558]:SingleVariableDeclaration[13990-14008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13560-13817]:Block[14010-14267]"
  }, {
    "left" : "mPattern.clear();",
    "right" : "mPattern.clear();",
    "info" : "ExpressionStatement[13570-13587]:ExpressionStatement[14020-14037]"
  }, {
    "left" : "mPattern.addAll(pattern);",
    "right" : "mPattern.addAll(pattern);",
    "info" : "ExpressionStatement[13596-13621]:ExpressionStatement[14046-14071]"
  }, {
    "left" : "clearPatternDrawLookup();",
    "right" : "clearPatternDrawLookup();",
    "info" : "ExpressionStatement[13630-13655]:ExpressionStatement[14080-14105]"
  }, {
    "left" : "for (Cell cell : pattern)",
    "right" : "for (Cell cell : pattern)",
    "info" : "EnhancedForStatement[13664-13773]:EnhancedForStatement[14114-14223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13690-13773]:Block[14140-14223]"
  }, {
    "left" : "mPatternDrawLookup[cell.getRow()][cell.getColumn()] = true;",
    "right" : "mPatternDrawLookup[cell.getRow()][cell.getColumn()] = true;",
    "info" : "ExpressionStatement[13704-13763]:ExpressionStatement[14154-14213]"
  }, {
    "left" : "setDisplayMode(displayMode);",
    "right" : "setDisplayMode(displayMode);",
    "info" : "ExpressionStatement[13783-13811]:ExpressionStatement[14233-14261]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14087-14093]:Modifier[14537-14543]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14094-14098]:PrimitiveType[14544-14548]"
  }, {
    "left" : "setDisplayMode",
    "right" : "setDisplayMode",
    "info" : "SimpleName[14099-14113]:SimpleName[14549-14563]"
  }, {
    "left" : "DisplayMode displayMode",
    "right" : "DisplayMode displayMode",
    "info" : "SingleVariableDeclaration[14114-14137]:SingleVariableDeclaration[14564-14587]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14139-14769]:Block[14589-15219]"
  }, {
    "left" : "mPatternDisplayMode = displayMode;",
    "right" : "mPatternDisplayMode = displayMode;",
    "info" : "ExpressionStatement[14149-14183]:ExpressionStatement[14599-14633]"
  }, {
    "left" : "if (displayMode == DisplayMode.Animate)",
    "right" : "if (displayMode == DisplayMode.Animate)",
    "info" : "IfStatement[14192-14741]:IfStatement[14642-15191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14232-14741]:Block[14682-15191]"
  }, {
    "left" : "if (mPattern.size() == 0)",
    "right" : "if (mPattern.size() == 0)",
    "info" : "IfStatement[14246-14450]:IfStatement[14696-14900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14272-14450]:Block[14722-14900]"
  }, {
    "left" : "throw new IllegalStateException(\"you must have a pattern to \"\n                        + \"animate if you want to set the display mode to animate\");",
    "right" : "throw new IllegalStateException(\"you must have a pattern to \"\n                        + \"animate if you want to set the display mode to animate\");",
    "info" : "ThrowStatement[14290-14436]:ThrowStatement[14740-14886]"
  }, {
    "left" : "mAnimatingPeriodStart = SystemClock.elapsedRealtime();",
    "right" : "mAnimatingPeriodStart = SystemClock.elapsedRealtime();",
    "info" : "ExpressionStatement[14463-14517]:ExpressionStatement[14913-14967]"
  }, {
    "left" : "final Cell first = mPattern.get(0);",
    "right" : "final Cell first = mPattern.get(0);",
    "info" : "VariableDeclarationStatement[14530-14565]:VariableDeclarationStatement[14980-15015]"
  }, {
    "left" : "mInProgressX = getCenterXForColumn(first.getColumn());",
    "right" : "mInProgressX = getCenterXForColumn(first.getColumn());",
    "info" : "ExpressionStatement[14578-14632]:ExpressionStatement[15028-15082]"
  }, {
    "left" : "mInProgressY = getCenterYForRow(first.getRow());",
    "right" : "mInProgressY = getCenterYForRow(first.getRow());",
    "info" : "ExpressionStatement[14645-14693]:ExpressionStatement[15095-15143]"
  }, {
    "left" : "clearPatternDrawLookup();",
    "right" : "clearPatternDrawLookup();",
    "info" : "ExpressionStatement[14706-14731]:ExpressionStatement[15156-15181]"
  }, {
    "left" : "invalidate();",
    "right" : "invalidate();",
    "info" : "ExpressionStatement[14750-14763]:ExpressionStatement[15200-15213]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14775-14782]:Modifier[15225-15232]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14783-14787]:PrimitiveType[15233-15237]"
  }, {
    "left" : "notifyCellAdded",
    "right" : "notifyCellAdded",
    "info" : "SimpleName[14788-14803]:SimpleName[15238-15253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14806-14998]:Block[15256-15448]"
  }, {
    "left" : "sendAccessEvent(R.string.lockscreen_access_pattern_cell_added);",
    "right" : "sendAccessEvent(R.string.lockscreen_access_pattern_cell_added);",
    "info" : "ExpressionStatement[14816-14879]:ExpressionStatement[15266-15329]"
  }, {
    "left" : "if (mOnPatternListener != null)",
    "right" : "if (mOnPatternListener != null)",
    "info" : "IfStatement[14888-14992]:IfStatement[15338-15442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14920-14992]:Block[15370-15442]"
  }, {
    "left" : "mOnPatternListener.onPatternCellAdded(mPattern);",
    "right" : "mOnPatternListener.onPatternCellAdded(mPattern);",
    "info" : "ExpressionStatement[14934-14982]:ExpressionStatement[15384-15432]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15004-15011]:Modifier[15454-15461]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15012-15016]:PrimitiveType[15462-15466]"
  }, {
    "left" : "notifyPatternStarted",
    "right" : "notifyPatternStarted",
    "info" : "SimpleName[15017-15037]:SimpleName[15467-15487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15040-15215]:Block[15490-15665]"
  }, {
    "left" : "sendAccessEvent(R.string.lockscreen_access_pattern_start);",
    "right" : "sendAccessEvent(R.string.lockscreen_access_pattern_start);",
    "info" : "ExpressionStatement[15050-15108]:ExpressionStatement[15500-15558]"
  }, {
    "left" : "if (mOnPatternListener != null)",
    "right" : "if (mOnPatternListener != null)",
    "info" : "IfStatement[15117-15209]:IfStatement[15567-15659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15149-15209]:Block[15599-15659]"
  }, {
    "left" : "mOnPatternListener.onPatternStart();",
    "right" : "mOnPatternListener.onPatternStart();",
    "info" : "ExpressionStatement[15163-15199]:ExpressionStatement[15613-15649]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15221-15228]:Modifier[15671-15678]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15229-15233]:PrimitiveType[15679-15683]"
  }, {
    "left" : "notifyPatternDetected",
    "right" : "notifyPatternDetected",
    "info" : "SimpleName[15234-15255]:SimpleName[15684-15705]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15258-15447]:Block[15708-15897]"
  }, {
    "left" : "sendAccessEvent(R.string.lockscreen_access_pattern_detected);",
    "right" : "sendAccessEvent(R.string.lockscreen_access_pattern_detected);",
    "info" : "ExpressionStatement[15268-15329]:ExpressionStatement[15718-15779]"
  }, {
    "left" : "if (mOnPatternListener != null)",
    "right" : "if (mOnPatternListener != null)",
    "info" : "IfStatement[15338-15441]:IfStatement[15788-15891]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15370-15441]:Block[15820-15891]"
  }, {
    "left" : "mOnPatternListener.onPatternDetected(mPattern);",
    "right" : "mOnPatternListener.onPatternDetected(mPattern);",
    "info" : "ExpressionStatement[15384-15431]:ExpressionStatement[15834-15881]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15453-15460]:Modifier[15903-15910]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15461-15465]:PrimitiveType[15911-15915]"
  }, {
    "left" : "notifyPatternCleared",
    "right" : "notifyPatternCleared",
    "info" : "SimpleName[15466-15486]:SimpleName[15916-15936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15489-15668]:Block[15939-16118]"
  }, {
    "left" : "sendAccessEvent(R.string.lockscreen_access_pattern_cleared);",
    "right" : "sendAccessEvent(R.string.lockscreen_access_pattern_cleared);",
    "info" : "ExpressionStatement[15499-15559]:ExpressionStatement[15949-16009]"
  }, {
    "left" : "if (mOnPatternListener != null)",
    "right" : "if (mOnPatternListener != null)",
    "info" : "IfStatement[15568-15662]:IfStatement[16018-16112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15600-15662]:Block[16050-16112]"
  }, {
    "left" : "mOnPatternListener.onPatternCleared();",
    "right" : "mOnPatternListener.onPatternCleared();",
    "info" : "ExpressionStatement[15614-15652]:ExpressionStatement[16064-16102]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15716-15722]:Modifier[16166-16172]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15723-15727]:PrimitiveType[16173-16177]"
  }, {
    "left" : "clearPattern",
    "right" : "clearPattern",
    "info" : "SimpleName[15728-15740]:SimpleName[16178-16190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15743-15774]:Block[16193-16224]"
  }, {
    "left" : "resetPattern();",
    "right" : "resetPattern();",
    "info" : "ExpressionStatement[15753-15768]:ExpressionStatement[16203-16218]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15828-15835]:Modifier[16278-16285]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15836-15840]:PrimitiveType[16286-16290]"
  }, {
    "left" : "resetPattern",
    "right" : "resetPattern",
    "info" : "SimpleName[15841-15853]:SimpleName[16291-16303]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15856-15996]:Block[16306-16446]"
  }, {
    "left" : "mPattern.clear();",
    "right" : "mPattern.clear();",
    "info" : "ExpressionStatement[15866-15883]:ExpressionStatement[16316-16333]"
  }, {
    "left" : "clearPatternDrawLookup();",
    "right" : "clearPatternDrawLookup();",
    "info" : "ExpressionStatement[15892-15917]:ExpressionStatement[16342-16367]"
  }, {
    "left" : "mPatternDisplayMode = DisplayMode.Correct;",
    "right" : "mPatternDisplayMode = DisplayMode.Correct;",
    "info" : "ExpressionStatement[15926-15968]:ExpressionStatement[16376-16418]"
  }, {
    "left" : "invalidate();",
    "right" : "invalidate();",
    "info" : "ExpressionStatement[15977-15990]:ExpressionStatement[16427-16440]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16057-16064]:Modifier[16507-16514]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16065-16069]:PrimitiveType[16515-16519]"
  }, {
    "left" : "clearPatternDrawLookup",
    "right" : "clearPatternDrawLookup",
    "info" : "SimpleName[16070-16092]:SimpleName[16520-16542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16095-16278]:Block[16545-16728]"
  }, {
    "left" : "for (int i = 0; i < mPatternSize; i++)",
    "right" : "for (int i = 0; i < mPatternSize; i++)",
    "info" : "ForStatement[16105-16272]:ForStatement[16555-16722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16144-16272]:Block[16594-16722]"
  }, {
    "left" : "for (int j = 0; j < mPatternSize; j++)",
    "right" : "for (int j = 0; j < mPatternSize; j++)",
    "info" : "ForStatement[16158-16262]:ForStatement[16608-16712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16197-16262]:Block[16647-16712]"
  }, {
    "left" : "mPatternDrawLookup[i][j] = false;",
    "right" : "mPatternDrawLookup[i][j] = false;",
    "info" : "ExpressionStatement[16215-16248]:ExpressionStatement[16665-16698]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16430-16436]:Modifier[16880-16886]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16437-16441]:PrimitiveType[16887-16891]"
  }, {
    "left" : "disableInput",
    "right" : "disableInput",
    "info" : "SimpleName[16442-16454]:SimpleName[16892-16904]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16457-16495]:Block[16907-16945]"
  }, {
    "left" : "mInputEnabled = false;",
    "right" : "mInputEnabled = false;",
    "info" : "ExpressionStatement[16467-16489]:ExpressionStatement[16917-16939]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16538-16544]:Modifier[16988-16994]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16545-16549]:PrimitiveType[16995-16999]"
  }, {
    "left" : "enableInput",
    "right" : "enableInput",
    "info" : "SimpleName[16550-16561]:SimpleName[17000-17011]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16564-16601]:Block[17014-17051]"
  }, {
    "left" : "mInputEnabled = true;",
    "right" : "mInputEnabled = true;",
    "info" : "ExpressionStatement[16574-16595]:ExpressionStatement[17024-17045]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16607-16616]:MarkerAnnotation[17057-17066]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16621-16630]:Modifier[17071-17080]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16631-16635]:PrimitiveType[17081-17085]"
  }, {
    "left" : "onSizeChanged",
    "right" : "onSizeChanged",
    "info" : "SimpleName[16636-16649]:SimpleName[17086-17099]"
  }, {
    "left" : "int w",
    "right" : "int w",
    "info" : "SingleVariableDeclaration[16650-16655]:SingleVariableDeclaration[17100-17105]"
  }, {
    "left" : "int h",
    "right" : "int h",
    "info" : "SingleVariableDeclaration[16657-16662]:SingleVariableDeclaration[17107-17112]"
  }, {
    "left" : "int oldw",
    "right" : "int oldw",
    "info" : "SingleVariableDeclaration[16664-16672]:SingleVariableDeclaration[17114-17122]"
  }, {
    "left" : "int oldh",
    "right" : "int oldh",
    "info" : "SingleVariableDeclaration[16674-16682]:SingleVariableDeclaration[17124-17132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16684-16921]:Block[17134-17371]"
  }, {
    "left" : "final int width = w - mPaddingLeft - mPaddingRight;",
    "right" : "final int width = w - mPaddingLeft - mPaddingRight;",
    "info" : "VariableDeclarationStatement[16694-16745]:VariableDeclarationStatement[17144-17195]"
  }, {
    "left" : "mSquareWidth = width / (float) mPatternSize;",
    "right" : "mSquareWidth = width / (float) mPatternSize;",
    "info" : "ExpressionStatement[16754-16798]:ExpressionStatement[17204-17248]"
  }, {
    "left" : "final int height = h - mPaddingTop - mPaddingBottom;",
    "right" : "final int height = h - mPaddingTop - mPaddingBottom;",
    "info" : "VariableDeclarationStatement[16808-16860]:VariableDeclarationStatement[17258-17310]"
  }, {
    "left" : "mSquareHeight = height / (float) mPatternSize;",
    "right" : "mSquareHeight = height / (float) mPatternSize;",
    "info" : "ExpressionStatement[16869-16915]:ExpressionStatement[17319-17365]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16927-16934]:Modifier[17377-17384]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[16935-16938]:PrimitiveType[17385-17388]"
  }, {
    "left" : "resolveMeasured",
    "right" : "resolveMeasured",
    "info" : "SimpleName[16939-16954]:SimpleName[17389-17404]"
  }, {
    "left" : "int measureSpec",
    "right" : "int measureSpec",
    "info" : "SingleVariableDeclaration[16955-16970]:SingleVariableDeclaration[17405-17420]"
  }, {
    "left" : "int desired",
    "right" : "int desired",
    "info" : "SingleVariableDeclaration[16972-16983]:SingleVariableDeclaration[17422-17433]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16989-17470]:Block[17439-17920]"
  }, {
    "left" : "int result = 0;",
    "right" : "int result = 0;",
    "info" : "VariableDeclarationStatement[16999-17014]:VariableDeclarationStatement[17449-17464]"
  }, {
    "left" : "int specSize = MeasureSpec.getSize(measureSpec);",
    "right" : "int specSize = MeasureSpec.getSize(measureSpec);",
    "info" : "VariableDeclarationStatement[17023-17071]:VariableDeclarationStatement[17473-17521]"
  }, {
    "left" : "switch (MeasureSpec.getMode(measureSpec)) {\n            case MeasureSpec.UNSPECIFIED:\n                result = desired;\n                break;\n            case MeasureSpec.AT_MOST:\n                result = Math.max(specSize, desired);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                result = specSize;\n        }",
    "right" : "switch (MeasureSpec.getMode(measureSpec)) {\n            case MeasureSpec.UNSPECIFIED:\n                result = desired;\n                break;\n            case MeasureSpec.AT_MOST:\n                result = Math.max(specSize, desired);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                result = specSize;\n        }",
    "info" : "SwitchStatement[17080-17441]:SwitchStatement[17530-17891]"
  }, {
    "left" : "case MeasureSpec.UNSPECIFIED:",
    "right" : "case MeasureSpec.UNSPECIFIED:",
    "info" : "SwitchCase[17136-17165]:SwitchCase[17586-17615]"
  }, {
    "left" : "result = desired;",
    "right" : "result = desired;",
    "info" : "ExpressionStatement[17182-17199]:ExpressionStatement[17632-17649]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17216-17222]:BreakStatement[17666-17672]"
  }, {
    "left" : "case MeasureSpec.AT_MOST:",
    "right" : "case MeasureSpec.AT_MOST:",
    "info" : "SwitchCase[17235-17260]:SwitchCase[17685-17710]"
  }, {
    "left" : "result = Math.max(specSize, desired);",
    "right" : "result = Math.max(specSize, desired);",
    "info" : "ExpressionStatement[17277-17314]:ExpressionStatement[17727-17764]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17331-17337]:BreakStatement[17781-17787]"
  }, {
    "left" : "case MeasureSpec.EXACTLY:",
    "right" : "case MeasureSpec.EXACTLY:",
    "info" : "SwitchCase[17350-17375]:SwitchCase[17800-17825]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[17388-17396]:SwitchCase[17838-17846]"
  }, {
    "left" : "result = specSize;",
    "right" : "result = specSize;",
    "info" : "ExpressionStatement[17413-17431]:ExpressionStatement[17863-17881]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[17450-17464]:ReturnStatement[17900-17914]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17476-17485]:MarkerAnnotation[17926-17935]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[17490-17499]:Modifier[17940-17949]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17500-17504]:PrimitiveType[17950-17954]"
  }, {
    "left" : "onMeasure",
    "right" : "onMeasure",
    "info" : "SimpleName[17505-17514]:SimpleName[17955-17964]"
  }, {
    "left" : "int widthMeasureSpec",
    "right" : "int widthMeasureSpec",
    "info" : "SingleVariableDeclaration[17515-17535]:SingleVariableDeclaration[17965-17985]"
  }, {
    "left" : "int heightMeasureSpec",
    "right" : "int heightMeasureSpec",
    "info" : "SingleVariableDeclaration[17537-17558]:SingleVariableDeclaration[17987-18008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17560-18388]:Block[18010-18838]"
  }, {
    "left" : "final int minimumWidth = getSuggestedMinimumWidth();",
    "right" : "final int minimumWidth = getSuggestedMinimumWidth();",
    "info" : "VariableDeclarationStatement[17570-17622]:VariableDeclarationStatement[18020-18072]"
  }, {
    "left" : "final int minimumHeight = getSuggestedMinimumHeight();",
    "right" : "final int minimumHeight = getSuggestedMinimumHeight();",
    "info" : "VariableDeclarationStatement[17631-17685]:VariableDeclarationStatement[18081-18135]"
  }, {
    "left" : "int viewWidth = resolveMeasured(widthMeasureSpec, minimumWidth);",
    "right" : "int viewWidth = resolveMeasured(widthMeasureSpec, minimumWidth);",
    "info" : "VariableDeclarationStatement[17694-17758]:VariableDeclarationStatement[18144-18208]"
  }, {
    "left" : "int viewHeight = resolveMeasured(heightMeasureSpec, minimumHeight);",
    "right" : "int viewHeight = resolveMeasured(heightMeasureSpec, minimumHeight);",
    "info" : "VariableDeclarationStatement[17767-17834]:VariableDeclarationStatement[18217-18284]"
  }, {
    "left" : "switch (mAspect) {\n            case ASPECT_SQUARE:\n                viewWidth = viewHeight = Math.min(viewWidth, viewHeight);\n                break;\n            case ASPECT_LOCK_WIDTH:\n                viewHeight = Math.min(viewWidth, viewHeight);\n                break;\n            case ASPECT_LOCK_HEIGHT:\n                viewWidth = Math.min(viewWidth, viewHeight);\n                break;\n        }",
    "right" : "switch (mAspect) {\n            case ASPECT_SQUARE:\n                viewWidth = viewHeight = Math.min(viewWidth, viewHeight);\n                break;\n            case ASPECT_LOCK_WIDTH:\n                viewHeight = Math.min(viewWidth, viewHeight);\n                break;\n            case ASPECT_LOCK_HEIGHT:\n                viewWidth = Math.min(viewWidth, viewHeight);\n                break;\n        }",
    "info" : "SwitchStatement[17844-18243]:SwitchStatement[18294-18693]"
  }, {
    "left" : "case ASPECT_SQUARE:",
    "right" : "case ASPECT_SQUARE:",
    "info" : "SwitchCase[17875-17894]:SwitchCase[18325-18344]"
  }, {
    "left" : "viewWidth = viewHeight = Math.min(viewWidth, viewHeight);",
    "right" : "viewWidth = viewHeight = Math.min(viewWidth, viewHeight);",
    "info" : "ExpressionStatement[17911-17968]:ExpressionStatement[18361-18418]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17985-17991]:BreakStatement[18435-18441]"
  }, {
    "left" : "case ASPECT_LOCK_WIDTH:",
    "right" : "case ASPECT_LOCK_WIDTH:",
    "info" : "SwitchCase[18004-18027]:SwitchCase[18454-18477]"
  }, {
    "left" : "viewHeight = Math.min(viewWidth, viewHeight);",
    "right" : "viewHeight = Math.min(viewWidth, viewHeight);",
    "info" : "ExpressionStatement[18044-18089]:ExpressionStatement[18494-18539]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18106-18112]:BreakStatement[18556-18562]"
  }, {
    "left" : "case ASPECT_LOCK_HEIGHT:",
    "right" : "case ASPECT_LOCK_HEIGHT:",
    "info" : "SwitchCase[18125-18149]:SwitchCase[18575-18599]"
  }, {
    "left" : "viewWidth = Math.min(viewWidth, viewHeight);",
    "right" : "viewWidth = Math.min(viewWidth, viewHeight);",
    "info" : "ExpressionStatement[18166-18210]:ExpressionStatement[18616-18660]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18227-18233]:BreakStatement[18677-18683]"
  }, {
    "left" : "setMeasuredDimension(viewWidth, viewHeight);",
    "right" : "setMeasuredDimension(viewWidth, viewHeight);",
    "info" : "ExpressionStatement[18338-18382]:ExpressionStatement[18788-18832]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[18691-18698]:Modifier[19141-19148]"
  }, {
    "left" : "Cell",
    "right" : "Cell",
    "info" : "SimpleType[18699-18703]:SimpleType[19149-19153]"
  }, {
    "left" : "detectAndAddHit",
    "right" : "detectAndAddHit",
    "info" : "SimpleName[18704-18719]:SimpleName[19154-19169]"
  }, {
    "left" : "float x",
    "right" : "float x",
    "info" : "SingleVariableDeclaration[18720-18727]:SingleVariableDeclaration[19170-19177]"
  }, {
    "left" : "float y",
    "right" : "float y",
    "info" : "SingleVariableDeclaration[18729-18736]:SingleVariableDeclaration[19179-19186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18738-20285]:Block[19188-20735]"
  }, {
    "left" : "final Cell cell = checkForNewHit(x, y);",
    "right" : "final Cell cell = checkForNewHit(x, y);",
    "info" : "VariableDeclarationStatement[18748-18787]:VariableDeclarationStatement[19198-19237]"
  }, {
    "left" : "if (cell != null)",
    "right" : "if (cell != null)",
    "info" : "IfStatement[18796-20258]:IfStatement[19246-20708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18814-20258]:Block[19264-20708]"
  }, {
    "left" : "final ArrayList<Cell> pattern = mPattern;",
    "right" : "final ArrayList<Cell> pattern = mPattern;",
    "info" : "VariableDeclarationStatement[18879-18920]:VariableDeclarationStatement[19329-19370]"
  }, {
    "left" : "if (!pattern.isEmpty())",
    "right" : "if (!pattern.isEmpty())",
    "info" : "IfStatement[18933-19904]:IfStatement[19383-20354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18957-19904]:Block[19407-20354]"
  }, {
    "left" : "final Cell lastCell = pattern.get(pattern.size() - 1);",
    "right" : "final Cell lastCell = pattern.get(pattern.size() - 1);",
    "info" : "VariableDeclarationStatement[18975-19029]:VariableDeclarationStatement[19425-19479]"
  }, {
    "left" : "int dRow = cell.row - lastCell.row;",
    "right" : "int dRow = cell.row - lastCell.row;",
    "info" : "VariableDeclarationStatement[19046-19081]:VariableDeclarationStatement[19496-19531]"
  }, {
    "left" : "int dColumn = cell.column - lastCell.column;",
    "right" : "int dColumn = cell.column - lastCell.column;",
    "info" : "VariableDeclarationStatement[19098-19142]:VariableDeclarationStatement[19548-19592]"
  }, {
    "left" : "int fillInRow = lastCell.row;",
    "right" : "int fillInRow = lastCell.row;",
    "info" : "VariableDeclarationStatement[19160-19189]:VariableDeclarationStatement[19610-19639]"
  }, {
    "left" : "int fillInColumn = lastCell.column;",
    "right" : "int fillInColumn = lastCell.column;",
    "info" : "VariableDeclarationStatement[19206-19241]:VariableDeclarationStatement[19656-19691]"
  }, {
    "left" : "if (dRow == 0 || dColumn == 0 || Math.abs(dRow) == Math.abs(dColumn))",
    "right" : "if (dRow == 0 || dColumn == 0 || Math.abs(dRow) == Math.abs(dColumn))",
    "info" : "IfStatement[19259-19890]:IfStatement[19709-20340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19329-19890]:Block[19779-20340]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[19351-19872]:WhileStatement[19801-20322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19364-19872]:Block[19814-20322]"
  }, {
    "left" : "fillInRow += Integer.signum(dRow);",
    "right" : "fillInRow += Integer.signum(dRow);",
    "info" : "ExpressionStatement[19390-19424]:ExpressionStatement[19840-19874]"
  }, {
    "left" : "fillInColumn += Integer.signum(dColumn);",
    "right" : "fillInColumn += Integer.signum(dColumn);",
    "info" : "ExpressionStatement[19449-19489]:ExpressionStatement[19899-19939]"
  }, {
    "left" : "if (fillInRow == cell.row && fillInColumn == cell.column)",
    "right" : "if (fillInRow == cell.row && fillInColumn == cell.column)",
    "info" : "IfStatement[19514-19578]:IfStatement[19964-20028]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[19572-19578]:BreakStatement[20022-20028]"
  }, {
    "left" : "Cell fillInGapCell = Cell.of(fillInRow, fillInColumn, mPatternSize);",
    "right" : "Cell fillInGapCell = Cell.of(fillInRow, fillInColumn, mPatternSize);",
    "info" : "VariableDeclarationStatement[19603-19671]:VariableDeclarationStatement[20053-20121]"
  }, {
    "left" : "if (!mPatternDrawLookup[fillInGapCell.row][fillInGapCell.column])",
    "right" : "if (!mPatternDrawLookup[fillInGapCell.row][fillInGapCell.column])",
    "info" : "IfStatement[19696-19850]:IfStatement[20146-20300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19762-19850]:Block[20212-20300]"
  }, {
    "left" : "addCellToPattern(fillInGapCell);",
    "right" : "addCellToPattern(fillInGapCell);",
    "info" : "ExpressionStatement[19792-19824]:ExpressionStatement[20242-20274]"
  }, {
    "left" : "addCellToPattern(cell);",
    "right" : "addCellToPattern(cell);",
    "info" : "ExpressionStatement[19918-19941]:ExpressionStatement[20368-20391]"
  }, {
    "left" : "if (mEnableHapticFeedback)",
    "right" : "if (mEnableHapticFeedback)",
    "info" : "IfStatement[19954-20223]:IfStatement[20404-20673]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19981-20223]:Block[20431-20673]"
  }, {
    "left" : "performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY,\n                        HapticFeedbackConstants.FLAG_IGNORE_VIEW_SETTING\n                        | HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING);",
    "right" : "performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY,\n                        HapticFeedbackConstants.FLAG_IGNORE_VIEW_SETTING\n                        | HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING);",
    "info" : "ExpressionStatement[19999-20209]:ExpressionStatement[20449-20659]"
  }, {
    "left" : "return cell;",
    "right" : "return cell;",
    "info" : "ReturnStatement[20236-20248]:ReturnStatement[20686-20698]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[20267-20279]:ReturnStatement[20717-20729]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20291-20298]:Modifier[20741-20748]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20299-20303]:PrimitiveType[20749-20753]"
  }, {
    "left" : "addCellToPattern",
    "right" : "addCellToPattern",
    "info" : "SimpleName[20304-20320]:SimpleName[20754-20770]"
  }, {
    "left" : "Cell newCell",
    "right" : "Cell newCell",
    "info" : "SingleVariableDeclaration[20321-20333]:SingleVariableDeclaration[20771-20783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20335-20565]:Block[20785-21015]"
  }, {
    "left" : "mPatternDrawLookup[newCell.getRow()][newCell.getColumn()] = true;",
    "right" : "mPatternDrawLookup[newCell.getRow()][newCell.getColumn()] = true;",
    "info" : "ExpressionStatement[20345-20410]:ExpressionStatement[20795-20860]"
  }, {
    "left" : "mPattern.add(newCell);",
    "right" : "mPattern.add(newCell);",
    "info" : "ExpressionStatement[20419-20441]:ExpressionStatement[20869-20891]"
  }, {
    "left" : "if (!mInStealthMode)",
    "right" : "if (!mInStealthMode)",
    "info" : "IfStatement[20450-20532]:IfStatement[20900-20982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20471-20532]:Block[20921-20982]"
  }, {
    "left" : "startCellActivatedAnimation(newCell);",
    "right" : "startCellActivatedAnimation(newCell);",
    "info" : "ExpressionStatement[20485-20522]:ExpressionStatement[20935-20972]"
  }, {
    "left" : "notifyCellAdded();",
    "right" : "notifyCellAdded();",
    "info" : "ExpressionStatement[20541-20559]:ExpressionStatement[20991-21009]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20571-20578]:Modifier[21021-21028]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20579-20583]:PrimitiveType[21029-21033]"
  }, {
    "left" : "startCellActivatedAnimation",
    "right" : "startCellActivatedAnimation",
    "info" : "SimpleName[20584-20611]:SimpleName[21034-21061]"
  }, {
    "left" : "Cell cell",
    "right" : "Cell cell",
    "info" : "SingleVariableDeclaration[20612-20621]:SingleVariableDeclaration[21062-21071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20623-21203]:Block[21073-21653]"
  }, {
    "left" : "final CellState cellState = mCellStates[cell.row][cell.column];",
    "right" : "final CellState cellState = mCellStates[cell.row][cell.column];",
    "info" : "VariableDeclarationStatement[20633-20696]:VariableDeclarationStatement[21083-21146]"
  }, {
    "left" : "startSizeAnimation(mDotSize, mDotSizeActivated, 96, mLinearOutSlowInInterpolator,\n                cellState, new Runnable() {\n            @Override\n            public void run() {\n                startSizeAnimation(mDotSizeActivated, mDotSize, 192, mFastOutSlowInInterpolator,\n                        cellState, null);\n            }\n        });",
    "right" : "startSizeAnimation(mDotSize, mDotSizeActivated, 96, mLinearOutSlowInInterpolator,\n                cellState, new Runnable() {\n            @Override\n            public void run() {\n                startSizeAnimation(mDotSizeActivated, mDotSize, 192, mFastOutSlowInInterpolator,\n                        cellState, null);\n            }\n        });",
    "info" : "ExpressionStatement[20705-21049]:ExpressionStatement[21155-21499]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20843-20852]:MarkerAnnotation[21293-21302]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20865-20871]:Modifier[21315-21321]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20872-20876]:PrimitiveType[21322-21326]"
  }, {
    "left" : "run",
    "right" : "run",
    "info" : "SimpleName[20877-20880]:SimpleName[21327-21330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20883-21037]:Block[21333-21487]"
  }, {
    "left" : "startSizeAnimation(mDotSizeActivated, mDotSize, 192, mFastOutSlowInInterpolator,\n                        cellState, null);",
    "right" : "startSizeAnimation(mDotSizeActivated, mDotSize, 192, mFastOutSlowInInterpolator,\n                        cellState, null);",
    "info" : "ExpressionStatement[20901-21023]:ExpressionStatement[21351-21473]"
  }, {
    "left" : "startLineEndAnimation(cellState, mInProgressX, mInProgressY,\n                getCenterXForColumn(cell.column), getCenterYForRow(cell.row));",
    "right" : "startLineEndAnimation(cellState, mInProgressX, mInProgressY,\n                getCenterXForColumn(cell.column), getCenterYForRow(cell.row));",
    "info" : "ExpressionStatement[21058-21197]:ExpressionStatement[21508-21647]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21209-21216]:Modifier[21659-21666]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21217-21221]:PrimitiveType[21667-21671]"
  }, {
    "left" : "startLineEndAnimation",
    "right" : "startLineEndAnimation",
    "info" : "SimpleName[21222-21243]:SimpleName[21672-21693]"
  }, {
    "left" : "final CellState state",
    "right" : "final CellState state",
    "info" : "SingleVariableDeclaration[21244-21265]:SingleVariableDeclaration[21694-21715]"
  }, {
    "left" : "final float startX",
    "right" : "final float startX",
    "info" : "SingleVariableDeclaration[21279-21297]:SingleVariableDeclaration[21729-21747]"
  }, {
    "left" : "final float startY",
    "right" : "final float startY",
    "info" : "SingleVariableDeclaration[21299-21317]:SingleVariableDeclaration[21749-21767]"
  }, {
    "left" : "final float targetX",
    "right" : "final float targetX",
    "info" : "SingleVariableDeclaration[21319-21338]:SingleVariableDeclaration[21769-21788]"
  }, {
    "left" : "final float targetY",
    "right" : "final float targetY",
    "info" : "SingleVariableDeclaration[21340-21359]:SingleVariableDeclaration[21790-21809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21361-22261]:Block[21811-22711]"
  }, {
    "left" : "ValueAnimator valueAnimator = ValueAnimator.ofFloat(0, 1);",
    "right" : "ValueAnimator valueAnimator = ValueAnimator.ofFloat(0, 1);",
    "info" : "VariableDeclarationStatement[21371-21429]:VariableDeclarationStatement[21821-21879]"
  }, {
    "left" : "valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n                float t = (float) animation.getAnimatedValue();\n                state.lineEndX = (1 - t) * startX + t * targetX;\n                state.lineEndY = (1 - t) * startY + t * targetY;\n                invalidate();\n            }\n        });",
    "right" : "valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n                float t = (float) animation.getAnimatedValue();\n                state.lineEndX = (1 - t) * startX + t * targetX;\n                state.lineEndY = (1 - t) * startY + t * targetY;\n                invalidate();\n            }\n        });",
    "info" : "ExpressionStatement[21438-21855]:ExpressionStatement[21888-22305]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[21527-21536]:MarkerAnnotation[21977-21986]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21549-21555]:Modifier[21999-22005]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21556-21560]:PrimitiveType[22006-22010]"
  }, {
    "left" : "onAnimationUpdate",
    "right" : "onAnimationUpdate",
    "info" : "SimpleName[21561-21578]:SimpleName[22011-22028]"
  }, {
    "left" : "ValueAnimator animation",
    "right" : "ValueAnimator animation",
    "info" : "SingleVariableDeclaration[21579-21602]:SingleVariableDeclaration[22029-22052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21604-21843]:Block[22054-22293]"
  }, {
    "left" : "float t = (float) animation.getAnimatedValue();",
    "right" : "float t = (float) animation.getAnimatedValue();",
    "info" : "VariableDeclarationStatement[21622-21669]:VariableDeclarationStatement[22072-22119]"
  }, {
    "left" : "state.lineEndX = (1 - t) * startX + t * targetX;",
    "right" : "state.lineEndX = (1 - t) * startX + t * targetX;",
    "info" : "ExpressionStatement[21686-21734]:ExpressionStatement[22136-22184]"
  }, {
    "left" : "state.lineEndY = (1 - t) * startY + t * targetY;",
    "right" : "state.lineEndY = (1 - t) * startY + t * targetY;",
    "info" : "ExpressionStatement[21751-21799]:ExpressionStatement[22201-22249]"
  }, {
    "left" : "invalidate();",
    "right" : "invalidate();",
    "info" : "ExpressionStatement[21816-21829]:ExpressionStatement[22266-22279]"
  }, {
    "left" : "valueAnimator.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                state.lineAnimator = null;\n            }\n        });",
    "right" : "valueAnimator.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                state.lineAnimator = null;\n            }\n        });",
    "info" : "ExpressionStatement[21864-22073]:ExpressionStatement[22314-22523]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[21934-21943]:MarkerAnnotation[22384-22393]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21956-21962]:Modifier[22406-22412]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21963-21967]:PrimitiveType[22413-22417]"
  }, {
    "left" : "onAnimationEnd",
    "right" : "onAnimationEnd",
    "info" : "SimpleName[21968-21982]:SimpleName[22418-22432]"
  }, {
    "left" : "Animator animation",
    "right" : "Animator animation",
    "info" : "SingleVariableDeclaration[21983-22001]:SingleVariableDeclaration[22433-22451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22003-22061]:Block[22453-22511]"
  }, {
    "left" : "state.lineAnimator = null;",
    "right" : "state.lineAnimator = null;",
    "info" : "ExpressionStatement[22021-22047]:ExpressionStatement[22471-22497]"
  }, {
    "left" : "valueAnimator.setInterpolator(mFastOutSlowInInterpolator);",
    "right" : "valueAnimator.setInterpolator(mFastOutSlowInInterpolator);",
    "info" : "ExpressionStatement[22082-22140]:ExpressionStatement[22532-22590]"
  }, {
    "left" : "valueAnimator.setDuration(100);",
    "right" : "valueAnimator.setDuration(100);",
    "info" : "ExpressionStatement[22149-22180]:ExpressionStatement[22599-22630]"
  }, {
    "left" : "valueAnimator.start();",
    "right" : "valueAnimator.start();",
    "info" : "ExpressionStatement[22189-22211]:ExpressionStatement[22639-22661]"
  }, {
    "left" : "state.lineAnimator = valueAnimator;",
    "right" : "state.lineAnimator = valueAnimator;",
    "info" : "ExpressionStatement[22220-22255]:ExpressionStatement[22670-22705]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22267-22274]:Modifier[22717-22724]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22275-22279]:PrimitiveType[22725-22729]"
  }, {
    "left" : "startSizeAnimation",
    "right" : "startSizeAnimation",
    "info" : "SimpleName[22280-22298]:SimpleName[22730-22748]"
  }, {
    "left" : "float start",
    "right" : "float start",
    "info" : "SingleVariableDeclaration[22299-22310]:SingleVariableDeclaration[22749-22760]"
  }, {
    "left" : "float end",
    "right" : "float end",
    "info" : "SingleVariableDeclaration[22312-22321]:SingleVariableDeclaration[22762-22771]"
  }, {
    "left" : "long duration",
    "right" : "long duration",
    "info" : "SingleVariableDeclaration[22323-22336]:SingleVariableDeclaration[22773-22786]"
  }, {
    "left" : "Interpolator interpolator",
    "right" : "Interpolator interpolator",
    "info" : "SingleVariableDeclaration[22338-22363]:SingleVariableDeclaration[22788-22813]"
  }, {
    "left" : "final CellState state",
    "right" : "final CellState state",
    "info" : "SingleVariableDeclaration[22377-22398]:SingleVariableDeclaration[22827-22848]"
  }, {
    "left" : "final Runnable endRunnable",
    "right" : "final Runnable endRunnable",
    "info" : "SingleVariableDeclaration[22400-22426]:SingleVariableDeclaration[22850-22876]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22428-23215]:Block[22878-23665]"
  }, {
    "left" : "ValueAnimator valueAnimator = ValueAnimator.ofFloat(start, end);",
    "right" : "ValueAnimator valueAnimator = ValueAnimator.ofFloat(start, end);",
    "info" : "VariableDeclarationStatement[22438-22502]:VariableDeclarationStatement[22888-22952]"
  }, {
    "left" : "valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n                state.size = (float) animation.getAnimatedValue();\n                invalidate();\n            }\n        });",
    "right" : "valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n                state.size = (float) animation.getAnimatedValue();\n                invalidate();\n            }\n        });",
    "info" : "ExpressionStatement[22511-22801]:ExpressionStatement[22961-23251]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[22600-22609]:MarkerAnnotation[23050-23059]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22622-22628]:Modifier[23072-23078]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22629-22633]:PrimitiveType[23079-23083]"
  }, {
    "left" : "onAnimationUpdate",
    "right" : "onAnimationUpdate",
    "info" : "SimpleName[22634-22651]:SimpleName[23084-23101]"
  }, {
    "left" : "ValueAnimator animation",
    "right" : "ValueAnimator animation",
    "info" : "SingleVariableDeclaration[22652-22675]:SingleVariableDeclaration[23102-23125]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22677-22789]:Block[23127-23239]"
  }, {
    "left" : "state.size = (float) animation.getAnimatedValue();",
    "right" : "state.size = (float) animation.getAnimatedValue();",
    "info" : "ExpressionStatement[22695-22745]:ExpressionStatement[23145-23195]"
  }, {
    "left" : "invalidate();",
    "right" : "invalidate();",
    "info" : "ExpressionStatement[22762-22775]:ExpressionStatement[23212-23225]"
  }, {
    "left" : "if (endRunnable != null)",
    "right" : "if (endRunnable != null)",
    "info" : "IfStatement[22810-23080]:IfStatement[23260-23530]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22835-23080]:Block[23285-23530]"
  }, {
    "left" : "valueAnimator.addListener(new AnimatorListenerAdapter() {\n                @Override\n                public void onAnimationEnd(Animator animation) {\n                    endRunnable.run();\n                }\n            });",
    "right" : "valueAnimator.addListener(new AnimatorListenerAdapter() {\n                @Override\n                public void onAnimationEnd(Animator animation) {\n                    endRunnable.run();\n                }\n            });",
    "info" : "ExpressionStatement[22849-23070]:ExpressionStatement[23299-23520]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[22923-22932]:MarkerAnnotation[23373-23382]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22949-22955]:Modifier[23399-23405]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22956-22960]:PrimitiveType[23406-23410]"
  }, {
    "left" : "onAnimationEnd",
    "right" : "onAnimationEnd",
    "info" : "SimpleName[22961-22975]:SimpleName[23411-23425]"
  }, {
    "left" : "Animator animation",
    "right" : "Animator animation",
    "info" : "SingleVariableDeclaration[22976-22994]:SingleVariableDeclaration[23426-23444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22996-23054]:Block[23446-23504]"
  }, {
    "left" : "endRunnable.run();",
    "right" : "endRunnable.run();",
    "info" : "ExpressionStatement[23018-23036]:ExpressionStatement[23468-23486]"
  }, {
    "left" : "valueAnimator.setInterpolator(interpolator);",
    "right" : "valueAnimator.setInterpolator(interpolator);",
    "info" : "ExpressionStatement[23089-23133]:ExpressionStatement[23539-23583]"
  }, {
    "left" : "valueAnimator.setDuration(duration);",
    "right" : "valueAnimator.setDuration(duration);",
    "info" : "ExpressionStatement[23142-23178]:ExpressionStatement[23592-23628]"
  }, {
    "left" : "valueAnimator.start();",
    "right" : "valueAnimator.start();",
    "info" : "ExpressionStatement[23187-23209]:ExpressionStatement[23637-23659]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23277-23284]:Modifier[23727-23734]"
  }, {
    "left" : "Cell",
    "right" : "Cell",
    "info" : "SimpleType[23285-23289]:SimpleType[23735-23739]"
  }, {
    "left" : "checkForNewHit",
    "right" : "checkForNewHit",
    "info" : "SimpleName[23290-23304]:SimpleName[23740-23754]"
  }, {
    "left" : "float x",
    "right" : "float x",
    "info" : "SingleVariableDeclaration[23305-23312]:SingleVariableDeclaration[23755-23762]"
  }, {
    "left" : "float y",
    "right" : "float y",
    "info" : "SingleVariableDeclaration[23314-23321]:SingleVariableDeclaration[23764-23771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23323-23690]:Block[23773-24140]"
  }, {
    "left" : "final int rowHit = getRowHit(y);",
    "right" : "final int rowHit = getRowHit(y);",
    "info" : "VariableDeclarationStatement[23334-23366]:VariableDeclarationStatement[23784-23816]"
  }, {
    "left" : "if (rowHit < 0)",
    "right" : "if (rowHit < 0)",
    "info" : "IfStatement[23375-23427]:IfStatement[23825-23877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23391-23427]:Block[23841-23877]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[23405-23417]:ReturnStatement[23855-23867]"
  }, {
    "left" : "final int columnHit = getColumnHit(x);",
    "right" : "final int columnHit = getColumnHit(x);",
    "info" : "VariableDeclarationStatement[23436-23474]:VariableDeclarationStatement[23886-23924]"
  }, {
    "left" : "if (columnHit < 0)",
    "right" : "if (columnHit < 0)",
    "info" : "IfStatement[23483-23538]:IfStatement[23933-23988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23502-23538]:Block[23952-23988]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[23516-23528]:ReturnStatement[23966-23978]"
  }, {
    "left" : "if (mPatternDrawLookup[rowHit][columnHit])",
    "right" : "if (mPatternDrawLookup[rowHit][columnHit])",
    "info" : "IfStatement[23548-23627]:IfStatement[23998-24077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23591-23627]:Block[24041-24077]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[23605-23617]:ReturnStatement[24055-24067]"
  }, {
    "left" : "return Cell.of(rowHit, columnHit, mPatternSize);",
    "right" : "return Cell.of(rowHit, columnHit, mPatternSize);",
    "info" : "ReturnStatement[23636-23684]:ReturnStatement[24086-24134]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23870-23877]:Modifier[24320-24327]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[23878-23881]:PrimitiveType[24328-24331]"
  }, {
    "left" : "getRowHit",
    "right" : "getRowHit",
    "info" : "SimpleName[23882-23891]:SimpleName[24332-24341]"
  }, {
    "left" : "float y",
    "right" : "float y",
    "info" : "SingleVariableDeclaration[23892-23899]:SingleVariableDeclaration[24342-24349]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23901-24314]:Block[24351-24764]"
  }, {
    "left" : "final float squareHeight = mSquareHeight;",
    "right" : "final float squareHeight = mSquareHeight;",
    "info" : "VariableDeclarationStatement[23912-23953]:VariableDeclarationStatement[24362-24403]"
  }, {
    "left" : "float hitSize = squareHeight * mHitFactor;",
    "right" : "float hitSize = squareHeight * mHitFactor;",
    "info" : "VariableDeclarationStatement[23962-24004]:VariableDeclarationStatement[24412-24454]"
  }, {
    "left" : "float offset = mPaddingTop + (squareHeight - hitSize) / 2f;",
    "right" : "float offset = mPaddingTop + (squareHeight - hitSize) / 2f;",
    "info" : "VariableDeclarationStatement[24014-24073]:VariableDeclarationStatement[24464-24523]"
  }, {
    "left" : "for (int i = 0; i < mPatternSize; i++)",
    "right" : "for (int i = 0; i < mPatternSize; i++)",
    "info" : "ForStatement[24082-24289]:ForStatement[24532-24739]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24121-24289]:Block[24571-24739]"
  }, {
    "left" : "final float hitTop = offset + squareHeight * i;",
    "right" : "final float hitTop = offset + squareHeight * i;",
    "info" : "VariableDeclarationStatement[24136-24183]:VariableDeclarationStatement[24586-24633]"
  }, {
    "left" : "if (y >= hitTop && y <= hitTop + hitSize)",
    "right" : "if (y >= hitTop && y <= hitTop + hitSize)",
    "info" : "IfStatement[24196-24279]:IfStatement[24646-24729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24238-24279]:Block[24688-24729]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[24256-24265]:ReturnStatement[24706-24715]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[24298-24308]:ReturnStatement[24748-24758]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[24500-24507]:Modifier[24950-24957]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[24508-24511]:PrimitiveType[24958-24961]"
  }, {
    "left" : "getColumnHit",
    "right" : "getColumnHit",
    "info" : "SimpleName[24512-24524]:SimpleName[24962-24974]"
  }, {
    "left" : "float x",
    "right" : "float x",
    "info" : "SingleVariableDeclaration[24525-24532]:SingleVariableDeclaration[24975-24982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24534-24945]:Block[24984-25395]"
  }, {
    "left" : "final float squareWidth = mSquareWidth;",
    "right" : "final float squareWidth = mSquareWidth;",
    "info" : "VariableDeclarationStatement[24544-24583]:VariableDeclarationStatement[24994-25033]"
  }, {
    "left" : "float hitSize = squareWidth * mHitFactor;",
    "right" : "float hitSize = squareWidth * mHitFactor;",
    "info" : "VariableDeclarationStatement[24592-24633]:VariableDeclarationStatement[25042-25083]"
  }, {
    "left" : "float offset = mPaddingLeft + (squareWidth - hitSize) / 2f;",
    "right" : "float offset = mPaddingLeft + (squareWidth - hitSize) / 2f;",
    "info" : "VariableDeclarationStatement[24643-24702]:VariableDeclarationStatement[25093-25152]"
  }, {
    "left" : "for (int i = 0; i < mPatternSize; i++)",
    "right" : "for (int i = 0; i < mPatternSize; i++)",
    "info" : "ForStatement[24711-24920]:ForStatement[25161-25370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24750-24920]:Block[25200-25370]"
  }, {
    "left" : "final float hitLeft = offset + squareWidth * i;",
    "right" : "final float hitLeft = offset + squareWidth * i;",
    "info" : "VariableDeclarationStatement[24765-24812]:VariableDeclarationStatement[25215-25262]"
  }, {
    "left" : "if (x >= hitLeft && x <= hitLeft + hitSize)",
    "right" : "if (x >= hitLeft && x <= hitLeft + hitSize)",
    "info" : "IfStatement[24825-24910]:IfStatement[25275-25360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24869-24910]:Block[25319-25360]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[24887-24896]:ReturnStatement[25337-25346]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[24929-24939]:ReturnStatement[25379-25389]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[24951-24960]:MarkerAnnotation[25401-25410]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24965-24971]:Modifier[25415-25421]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[24972-24979]:PrimitiveType[25422-25429]"
  }, {
    "left" : "onHoverEvent",
    "right" : "onHoverEvent",
    "info" : "SimpleName[24980-24992]:SimpleName[25430-25442]"
  }, {
    "left" : "MotionEvent event",
    "right" : "MotionEvent event",
    "info" : "SingleVariableDeclaration[24993-25010]:SingleVariableDeclaration[25443-25460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25012-25743]:Block[25462-26193]"
  }, {
    "left" : "if (AccessibilityManager.getInstance(mContext).isTouchExplorationEnabled())",
    "right" : "if (AccessibilityManager.getInstance(mContext).isTouchExplorationEnabled())",
    "info" : "IfStatement[25022-25695]:IfStatement[25472-26145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25098-25695]:Block[25548-26145]"
  }, {
    "left" : "final int action = event.getAction();",
    "right" : "final int action = event.getAction();",
    "info" : "VariableDeclarationStatement[25112-25149]:VariableDeclarationStatement[25562-25599]"
  }, {
    "left" : "switch (action) {\n                case MotionEvent.ACTION_HOVER_ENTER:\n                    event.setAction(MotionEvent.ACTION_DOWN);\n                    break;\n                case MotionEvent.ACTION_HOVER_MOVE:\n                    event.setAction(MotionEvent.ACTION_MOVE);\n                    break;\n                case MotionEvent.ACTION_HOVER_EXIT:\n                    event.setAction(MotionEvent.ACTION_UP);\n                    break;\n            }",
    "right" : "switch (action) {\n                case MotionEvent.ACTION_HOVER_ENTER:\n                    event.setAction(MotionEvent.ACTION_DOWN);\n                    break;\n                case MotionEvent.ACTION_HOVER_MOVE:\n                    event.setAction(MotionEvent.ACTION_MOVE);\n                    break;\n                case MotionEvent.ACTION_HOVER_EXIT:\n                    event.setAction(MotionEvent.ACTION_UP);\n                    break;\n            }",
    "info" : "SwitchStatement[25162-25615]:SwitchStatement[25612-26065]"
  }, {
    "left" : "case MotionEvent.ACTION_HOVER_ENTER:",
    "right" : "case MotionEvent.ACTION_HOVER_ENTER:",
    "info" : "SwitchCase[25196-25232]:SwitchCase[25646-25682]"
  }, {
    "left" : "event.setAction(MotionEvent.ACTION_DOWN);",
    "right" : "event.setAction(MotionEvent.ACTION_DOWN);",
    "info" : "ExpressionStatement[25253-25294]:ExpressionStatement[25703-25744]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25315-25321]:BreakStatement[25765-25771]"
  }, {
    "left" : "case MotionEvent.ACTION_HOVER_MOVE:",
    "right" : "case MotionEvent.ACTION_HOVER_MOVE:",
    "info" : "SwitchCase[25338-25373]:SwitchCase[25788-25823]"
  }, {
    "left" : "event.setAction(MotionEvent.ACTION_MOVE);",
    "right" : "event.setAction(MotionEvent.ACTION_MOVE);",
    "info" : "ExpressionStatement[25394-25435]:ExpressionStatement[25844-25885]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25456-25462]:BreakStatement[25906-25912]"
  }, {
    "left" : "case MotionEvent.ACTION_HOVER_EXIT:",
    "right" : "case MotionEvent.ACTION_HOVER_EXIT:",
    "info" : "SwitchCase[25479-25514]:SwitchCase[25929-25964]"
  }, {
    "left" : "event.setAction(MotionEvent.ACTION_UP);",
    "right" : "event.setAction(MotionEvent.ACTION_UP);",
    "info" : "ExpressionStatement[25535-25574]:ExpressionStatement[25985-26024]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25595-25601]:BreakStatement[26045-26051]"
  }, {
    "left" : "onTouchEvent(event);",
    "right" : "onTouchEvent(event);",
    "info" : "ExpressionStatement[25628-25648]:ExpressionStatement[26078-26098]"
  }, {
    "left" : "event.setAction(action);",
    "right" : "event.setAction(action);",
    "info" : "ExpressionStatement[25661-25685]:ExpressionStatement[26111-26135]"
  }, {
    "left" : "return super.onHoverEvent(event);",
    "right" : "return super.onHoverEvent(event);",
    "info" : "ReturnStatement[25704-25737]:ReturnStatement[26154-26187]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[25749-25758]:MarkerAnnotation[26199-26208]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25763-25769]:Modifier[26213-26219]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[25770-25777]:PrimitiveType[26220-26227]"
  }, {
    "left" : "onTouchEvent",
    "right" : "onTouchEvent",
    "info" : "SimpleName[25778-25790]:SimpleName[26228-26240]"
  }, {
    "left" : "MotionEvent event",
    "right" : "MotionEvent event",
    "info" : "SingleVariableDeclaration[25791-25808]:SingleVariableDeclaration[26241-26258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25810-26801]:Block[26260-27251]"
  }, {
    "left" : "if (!mInputEnabled || !isEnabled())",
    "right" : "if (!mInputEnabled || !isEnabled())",
    "info" : "IfStatement[25820-25893]:IfStatement[26270-26343]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25856-25893]:Block[26306-26343]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[25870-25883]:ReturnStatement[26320-26333]"
  }, {
    "left" : "switch(event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                handleActionDown(event);\n                return true;\n            case MotionEvent.ACTION_UP:\n                handleActionUp(event);\n                return true;\n            case MotionEvent.ACTION_MOVE:\n                handleActionMove(event);\n                return true;\n            case MotionEvent.ACTION_CANCEL:\n                if (mPatternInProgress) {\n                    mPatternInProgress = false;\n                    resetPattern();\n                    notifyPatternCleared();\n                }\n                if (PROFILE_DRAWING) {\n                    if (mDrawingProfilingStarted) {\n                        Debug.stopMethodTracing();\n                        mDrawingProfilingStarted = false;\n                    }\n                }\n                return true;\n        }",
    "right" : "switch(event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                handleActionDown(event);\n                return true;\n            case MotionEvent.ACTION_UP:\n                handleActionUp(event);\n                return true;\n            case MotionEvent.ACTION_MOVE:\n                handleActionMove(event);\n                return true;\n            case MotionEvent.ACTION_CANCEL:\n                if (mPatternInProgress) {\n                    mPatternInProgress = false;\n                    resetPattern();\n                    notifyPatternCleared();\n                }\n                if (PROFILE_DRAWING) {\n                    if (mDrawingProfilingStarted) {\n                        Debug.stopMethodTracing();\n                        mDrawingProfilingStarted = false;\n                    }\n                }\n                return true;\n        }",
    "info" : "SwitchStatement[25903-26773]:SwitchStatement[26353-27223]"
  }, {
    "left" : "case MotionEvent.ACTION_DOWN:",
    "right" : "case MotionEvent.ACTION_DOWN:",
    "info" : "SwitchCase[25943-25972]:SwitchCase[26393-26422]"
  }, {
    "left" : "handleActionDown(event);",
    "right" : "handleActionDown(event);",
    "info" : "ExpressionStatement[25989-26013]:ExpressionStatement[26439-26463]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[26030-26042]:ReturnStatement[26480-26492]"
  }, {
    "left" : "case MotionEvent.ACTION_UP:",
    "right" : "case MotionEvent.ACTION_UP:",
    "info" : "SwitchCase[26055-26082]:SwitchCase[26505-26532]"
  }, {
    "left" : "handleActionUp(event);",
    "right" : "handleActionUp(event);",
    "info" : "ExpressionStatement[26099-26121]:ExpressionStatement[26549-26571]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[26138-26150]:ReturnStatement[26588-26600]"
  }, {
    "left" : "case MotionEvent.ACTION_MOVE:",
    "right" : "case MotionEvent.ACTION_MOVE:",
    "info" : "SwitchCase[26163-26192]:SwitchCase[26613-26642]"
  }, {
    "left" : "handleActionMove(event);",
    "right" : "handleActionMove(event);",
    "info" : "ExpressionStatement[26209-26233]:ExpressionStatement[26659-26683]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[26250-26262]:ReturnStatement[26700-26712]"
  }, {
    "left" : "case MotionEvent.ACTION_CANCEL:",
    "right" : "case MotionEvent.ACTION_CANCEL:",
    "info" : "SwitchCase[26275-26306]:SwitchCase[26725-26756]"
  }, {
    "left" : "if (mPatternInProgress)",
    "right" : "if (mPatternInProgress)",
    "info" : "IfStatement[26323-26494]:IfStatement[26773-26944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26347-26494]:Block[26797-26944]"
  }, {
    "left" : "mPatternInProgress = false;",
    "right" : "mPatternInProgress = false;",
    "info" : "ExpressionStatement[26369-26396]:ExpressionStatement[26819-26846]"
  }, {
    "left" : "resetPattern();",
    "right" : "resetPattern();",
    "info" : "ExpressionStatement[26417-26432]:ExpressionStatement[26867-26882]"
  }, {
    "left" : "notifyPatternCleared();",
    "right" : "notifyPatternCleared();",
    "info" : "ExpressionStatement[26453-26476]:ExpressionStatement[26903-26926]"
  }, {
    "left" : "if (PROFILE_DRAWING)",
    "right" : "if (PROFILE_DRAWING)",
    "info" : "IfStatement[26511-26734]:IfStatement[26961-27184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26532-26734]:Block[26982-27184]"
  }, {
    "left" : "if (mDrawingProfilingStarted)",
    "right" : "if (mDrawingProfilingStarted)",
    "info" : "IfStatement[26554-26716]:IfStatement[27004-27166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26584-26716]:Block[27034-27166]"
  }, {
    "left" : "Debug.stopMethodTracing();",
    "right" : "Debug.stopMethodTracing();",
    "info" : "ExpressionStatement[26610-26636]:ExpressionStatement[27060-27086]"
  }, {
    "left" : "mDrawingProfilingStarted = false;",
    "right" : "mDrawingProfilingStarted = false;",
    "info" : "ExpressionStatement[26661-26694]:ExpressionStatement[27111-27144]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[26751-26763]:ReturnStatement[27201-27213]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[26782-26795]:ReturnStatement[27232-27245]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26807-26814]:Modifier[27257-27264]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26815-26819]:PrimitiveType[27265-27269]"
  }, {
    "left" : "handleActionMove",
    "right" : "handleActionMove",
    "info" : "SimpleName[26820-26836]:SimpleName[27270-27286]"
  }, {
    "left" : "MotionEvent event",
    "right" : "MotionEvent event",
    "info" : "SingleVariableDeclaration[26837-26854]:SingleVariableDeclaration[27287-27304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26856-29959]:Block[27306-30409]"
  }, {
    "left" : "final float radius = mPathWidth;",
    "right" : "final float radius = mPathWidth;",
    "info" : "VariableDeclarationStatement[26979-27011]:VariableDeclarationStatement[27429-27461]"
  }, {
    "left" : "final int historySize = event.getHistorySize();",
    "right" : "final int historySize = event.getHistorySize();",
    "info" : "VariableDeclarationStatement[27020-27067]:VariableDeclarationStatement[27470-27517]"
  }, {
    "left" : "mTmpInvalidateRect.setEmpty();",
    "right" : "mTmpInvalidateRect.setEmpty();",
    "info" : "ExpressionStatement[27076-27106]:ExpressionStatement[27526-27556]"
  }, {
    "left" : "boolean invalidateNow = false;",
    "right" : "boolean invalidateNow = false;",
    "info" : "VariableDeclarationStatement[27115-27145]:VariableDeclarationStatement[27565-27595]"
  }, {
    "left" : "for (int i = 0; i < historySize + 1; i++)",
    "right" : "for (int i = 0; i < historySize + 1; i++)",
    "info" : "ForStatement[27154-29612]:ForStatement[27604-30062]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27196-29612]:Block[27646-30062]"
  }, {
    "left" : "final float x = i < historySize ? event.getHistoricalX(i) : event.getX();",
    "right" : "final float x = i < historySize ? event.getHistoricalX(i) : event.getX();",
    "info" : "VariableDeclarationStatement[27210-27283]:VariableDeclarationStatement[27660-27733]"
  }, {
    "left" : "final float y = i < historySize ? event.getHistoricalY(i) : event.getY();",
    "right" : "final float y = i < historySize ? event.getHistoricalY(i) : event.getY();",
    "info" : "VariableDeclarationStatement[27296-27369]:VariableDeclarationStatement[27746-27819]"
  }, {
    "left" : "Cell hitCell = detectAndAddHit(x, y);",
    "right" : "Cell hitCell = detectAndAddHit(x, y);",
    "info" : "VariableDeclarationStatement[27382-27419]:VariableDeclarationStatement[27832-27869]"
  }, {
    "left" : "final int patternSize = mPattern.size();",
    "right" : "final int patternSize = mPattern.size();",
    "info" : "VariableDeclarationStatement[27432-27472]:VariableDeclarationStatement[27882-27922]"
  }, {
    "left" : "if (hitCell != null && patternSize == 1)",
    "right" : "if (hitCell != null && patternSize == 1)",
    "info" : "IfStatement[27485-27624]:IfStatement[27935-28074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27526-27624]:Block[27976-28074]"
  }, {
    "left" : "mPatternInProgress = true;",
    "right" : "mPatternInProgress = true;",
    "info" : "ExpressionStatement[27544-27570]:ExpressionStatement[27994-28020]"
  }, {
    "left" : "notifyPatternStarted();",
    "right" : "notifyPatternStarted();",
    "info" : "ExpressionStatement[27587-27610]:ExpressionStatement[28037-28060]"
  }, {
    "left" : "final float dx = Math.abs(x - mInProgressX);",
    "right" : "final float dx = Math.abs(x - mInProgressX);",
    "info" : "VariableDeclarationStatement[27716-27760]:VariableDeclarationStatement[28166-28210]"
  }, {
    "left" : "final float dy = Math.abs(y - mInProgressY);",
    "right" : "final float dy = Math.abs(y - mInProgressY);",
    "info" : "VariableDeclarationStatement[27773-27817]:VariableDeclarationStatement[28223-28267]"
  }, {
    "left" : "if (dx > DRAG_THRESHHOLD || dy > DRAG_THRESHHOLD)",
    "right" : "if (dx > DRAG_THRESHHOLD || dy > DRAG_THRESHHOLD)",
    "info" : "IfStatement[27830-27933]:IfStatement[28280-28383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27880-27933]:Block[28330-28383]"
  }, {
    "left" : "invalidateNow = true;",
    "right" : "invalidateNow = true;",
    "info" : "ExpressionStatement[27898-27919]:ExpressionStatement[28348-28369]"
  }, {
    "left" : "if (mPatternInProgress && patternSize > 0)",
    "right" : "if (mPatternInProgress && patternSize > 0)",
    "info" : "IfStatement[27947-29602]:IfStatement[28397-30052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27990-29602]:Block[28440-30052]"
  }, {
    "left" : "final ArrayList<Cell> pattern = mPattern;",
    "right" : "final ArrayList<Cell> pattern = mPattern;",
    "info" : "VariableDeclarationStatement[28008-28049]:VariableDeclarationStatement[28458-28499]"
  }, {
    "left" : "final Cell lastCell = pattern.get(patternSize - 1);",
    "right" : "final Cell lastCell = pattern.get(patternSize - 1);",
    "info" : "VariableDeclarationStatement[28066-28117]:VariableDeclarationStatement[28516-28567]"
  }, {
    "left" : "float lastCellCenterX = getCenterXForColumn(lastCell.column);",
    "right" : "float lastCellCenterX = getCenterXForColumn(lastCell.column);",
    "info" : "VariableDeclarationStatement[28134-28195]:VariableDeclarationStatement[28584-28645]"
  }, {
    "left" : "float lastCellCenterY = getCenterYForRow(lastCell.row);",
    "right" : "float lastCellCenterY = getCenterYForRow(lastCell.row);",
    "info" : "VariableDeclarationStatement[28212-28267]:VariableDeclarationStatement[28662-28717]"
  }, {
    "left" : "float left = Math.min(lastCellCenterX, x) - radius;",
    "right" : "float left = Math.min(lastCellCenterX, x) - radius;",
    "info" : "VariableDeclarationStatement[28386-28437]:VariableDeclarationStatement[28836-28887]"
  }, {
    "left" : "float right = Math.max(lastCellCenterX, x) + radius;",
    "right" : "float right = Math.max(lastCellCenterX, x) + radius;",
    "info" : "VariableDeclarationStatement[28454-28506]:VariableDeclarationStatement[28904-28956]"
  }, {
    "left" : "float top = Math.min(lastCellCenterY, y) - radius;",
    "right" : "float top = Math.min(lastCellCenterY, y) - radius;",
    "info" : "VariableDeclarationStatement[28523-28573]:VariableDeclarationStatement[28973-29023]"
  }, {
    "left" : "float bottom = Math.max(lastCellCenterY, y) + radius;",
    "right" : "float bottom = Math.max(lastCellCenterY, y) + radius;",
    "info" : "VariableDeclarationStatement[28590-28643]:VariableDeclarationStatement[29040-29093]"
  }, {
    "left" : "if (hitCell != null)",
    "right" : "if (hitCell != null)",
    "info" : "IfStatement[28754-29359]:IfStatement[29204-29809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28775-29359]:Block[29225-29809]"
  }, {
    "left" : "final float width = mSquareWidth * 0.5f;",
    "right" : "final float width = mSquareWidth * 0.5f;",
    "info" : "VariableDeclarationStatement[28797-28837]:VariableDeclarationStatement[29247-29287]"
  }, {
    "left" : "final float height = mSquareHeight * 0.5f;",
    "right" : "final float height = mSquareHeight * 0.5f;",
    "info" : "VariableDeclarationStatement[28858-28900]:VariableDeclarationStatement[29308-29350]"
  }, {
    "left" : "final float hitCellCenterX = getCenterXForColumn(hitCell.column);",
    "right" : "final float hitCellCenterX = getCenterXForColumn(hitCell.column);",
    "info" : "VariableDeclarationStatement[28921-28986]:VariableDeclarationStatement[29371-29436]"
  }, {
    "left" : "final float hitCellCenterY = getCenterYForRow(hitCell.row);",
    "right" : "final float hitCellCenterY = getCenterYForRow(hitCell.row);",
    "info" : "VariableDeclarationStatement[29007-29066]:VariableDeclarationStatement[29457-29516]"
  }, {
    "left" : "left = Math.min(hitCellCenterX - width, left);",
    "right" : "left = Math.min(hitCellCenterX - width, left);",
    "info" : "ExpressionStatement[29088-29134]:ExpressionStatement[29538-29584]"
  }, {
    "left" : "right = Math.max(hitCellCenterX + width, right);",
    "right" : "right = Math.max(hitCellCenterX + width, right);",
    "info" : "ExpressionStatement[29155-29203]:ExpressionStatement[29605-29653]"
  }, {
    "left" : "top = Math.min(hitCellCenterY - height, top);",
    "right" : "top = Math.min(hitCellCenterY - height, top);",
    "info" : "ExpressionStatement[29224-29269]:ExpressionStatement[29674-29719]"
  }, {
    "left" : "bottom = Math.max(hitCellCenterY + height, bottom);",
    "right" : "bottom = Math.max(hitCellCenterY + height, bottom);",
    "info" : "ExpressionStatement[29290-29341]:ExpressionStatement[29740-29791]"
  }, {
    "left" : "mTmpInvalidateRect.union(Math.round(left), Math.round(top),\n                        Math.round(right), Math.round(bottom));",
    "right" : "mTmpInvalidateRect.union(Math.round(left), Math.round(top),\n                        Math.round(right), Math.round(bottom));",
    "info" : "ExpressionStatement[29465-29588]:ExpressionStatement[29915-30038]"
  }, {
    "left" : "mInProgressX = event.getX();",
    "right" : "mInProgressX = event.getX();",
    "info" : "ExpressionStatement[29621-29649]:ExpressionStatement[30071-30099]"
  }, {
    "left" : "mInProgressY = event.getY();",
    "right" : "mInProgressY = event.getY();",
    "info" : "ExpressionStatement[29658-29686]:ExpressionStatement[30108-30136]"
  }, {
    "left" : "if (invalidateNow)",
    "right" : "if (invalidateNow)",
    "info" : "IfStatement[29786-29953]:IfStatement[30236-30403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29805-29953]:Block[30255-30403]"
  }, {
    "left" : "mInvalidate.union(mTmpInvalidateRect);",
    "right" : "mInvalidate.union(mTmpInvalidateRect);",
    "info" : "ExpressionStatement[29819-29857]:ExpressionStatement[30269-30307]"
  }, {
    "left" : "invalidate(mInvalidate);",
    "right" : "invalidate(mInvalidate);",
    "info" : "ExpressionStatement[29870-29894]:ExpressionStatement[30320-30344]"
  }, {
    "left" : "mInvalidate.set(mTmpInvalidateRect);",
    "right" : "mInvalidate.set(mTmpInvalidateRect);",
    "info" : "ExpressionStatement[29907-29943]:ExpressionStatement[30357-30393]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[29965-29972]:Modifier[30415-30422]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[29973-29977]:PrimitiveType[30423-30427]"
  }, {
    "left" : "sendAccessEvent",
    "right" : "sendAccessEvent",
    "info" : "SimpleName[29978-29993]:SimpleName[30428-30443]"
  }, {
    "left" : "int resId",
    "right" : "int resId",
    "info" : "SingleVariableDeclaration[29994-30003]:SingleVariableDeclaration[30444-30453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30005-30073]:Block[30455-30523]"
  }, {
    "left" : "announceForAccessibility(mContext.getString(resId));",
    "right" : "announceForAccessibility(mContext.getString(resId));",
    "info" : "ExpressionStatement[30015-30067]:ExpressionStatement[30465-30517]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[30079-30086]:Modifier[30529-30536]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30087-30091]:PrimitiveType[30537-30541]"
  }, {
    "left" : "handleActionUp",
    "right" : "handleActionUp",
    "info" : "SimpleName[30092-30106]:SimpleName[30542-30556]"
  }, {
    "left" : "MotionEvent event",
    "right" : "MotionEvent event",
    "info" : "SingleVariableDeclaration[30107-30124]:SingleVariableDeclaration[30557-30574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30126-30544]:Block[30576-30994]"
  }, {
    "left" : "if (!mPattern.isEmpty())",
    "right" : "if (!mPattern.isEmpty())",
    "info" : "IfStatement[30171-30346]:IfStatement[30621-30796]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30196-30346]:Block[30646-30796]"
  }, {
    "left" : "mPatternInProgress = false;",
    "right" : "mPatternInProgress = false;",
    "info" : "ExpressionStatement[30210-30237]:ExpressionStatement[30660-30687]"
  }, {
    "left" : "cancelLineAnimations();",
    "right" : "cancelLineAnimations();",
    "info" : "ExpressionStatement[30250-30273]:ExpressionStatement[30700-30723]"
  }, {
    "left" : "notifyPatternDetected();",
    "right" : "notifyPatternDetected();",
    "info" : "ExpressionStatement[30286-30310]:ExpressionStatement[30736-30760]"
  }, {
    "left" : "invalidate();",
    "right" : "invalidate();",
    "info" : "ExpressionStatement[30323-30336]:ExpressionStatement[30773-30786]"
  }, {
    "left" : "if (PROFILE_DRAWING)",
    "right" : "if (PROFILE_DRAWING)",
    "info" : "IfStatement[30355-30538]:IfStatement[30805-30988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30376-30538]:Block[30826-30988]"
  }, {
    "left" : "if (mDrawingProfilingStarted)",
    "right" : "if (mDrawingProfilingStarted)",
    "info" : "IfStatement[30390-30528]:IfStatement[30840-30978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30420-30528]:Block[30870-30978]"
  }, {
    "left" : "Debug.stopMethodTracing();",
    "right" : "Debug.stopMethodTracing();",
    "info" : "ExpressionStatement[30438-30464]:ExpressionStatement[30888-30914]"
  }, {
    "left" : "mDrawingProfilingStarted = false;",
    "right" : "mDrawingProfilingStarted = false;",
    "info" : "ExpressionStatement[30481-30514]:ExpressionStatement[30931-30964]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[30550-30557]:Modifier[31000-31007]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30558-30562]:PrimitiveType[31008-31012]"
  }, {
    "left" : "cancelLineAnimations",
    "right" : "cancelLineAnimations",
    "info" : "SimpleName[30563-30583]:SimpleName[31013-31033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30586-30997]:Block[31036-31447]"
  }, {
    "left" : "for (int i = 0; i < mPatternSize; i++)",
    "right" : "for (int i = 0; i < mPatternSize; i++)",
    "info" : "ForStatement[30596-30991]:ForStatement[31046-31441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30635-30991]:Block[31085-31441]"
  }, {
    "left" : "for (int j = 0; j < mPatternSize; j++)",
    "right" : "for (int j = 0; j < mPatternSize; j++)",
    "info" : "ForStatement[30649-30981]:ForStatement[31099-31431]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30688-30981]:Block[31138-31431]"
  }, {
    "left" : "CellState state = mCellStates[i][j];",
    "right" : "CellState state = mCellStates[i][j];",
    "info" : "VariableDeclarationStatement[30706-30742]:VariableDeclarationStatement[31156-31192]"
  }, {
    "left" : "if (state.lineAnimator != null)",
    "right" : "if (state.lineAnimator != null)",
    "info" : "IfStatement[30759-30967]:IfStatement[31209-31417]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30791-30967]:Block[31241-31417]"
  }, {
    "left" : "state.lineAnimator.cancel();",
    "right" : "state.lineAnimator.cancel();",
    "info" : "ExpressionStatement[30813-30841]:ExpressionStatement[31263-31291]"
  }, {
    "left" : "state.lineEndX = Float.MIN_VALUE;",
    "right" : "state.lineEndX = Float.MIN_VALUE;",
    "info" : "ExpressionStatement[30862-30895]:ExpressionStatement[31312-31345]"
  }, {
    "left" : "state.lineEndY = Float.MIN_VALUE;",
    "right" : "state.lineEndY = Float.MIN_VALUE;",
    "info" : "ExpressionStatement[30916-30949]:ExpressionStatement[31366-31399]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[31002-31009]:Modifier[31452-31459]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31010-31014]:PrimitiveType[31460-31464]"
  }, {
    "left" : "handleActionDown",
    "right" : "handleActionDown",
    "info" : "SimpleName[31015-31031]:SimpleName[31465-31481]"
  }, {
    "left" : "MotionEvent event",
    "right" : "MotionEvent event",
    "info" : "SingleVariableDeclaration[31032-31049]:SingleVariableDeclaration[31482-31499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31051-32222]:Block[31501-32672]"
  }, {
    "left" : "resetPattern();",
    "right" : "resetPattern();",
    "info" : "ExpressionStatement[31061-31076]:ExpressionStatement[31511-31526]"
  }, {
    "left" : "final float x = event.getX();",
    "right" : "final float x = event.getX();",
    "info" : "VariableDeclarationStatement[31085-31114]:VariableDeclarationStatement[31535-31564]"
  }, {
    "left" : "final float y = event.getY();",
    "right" : "final float y = event.getY();",
    "info" : "VariableDeclarationStatement[31123-31152]:VariableDeclarationStatement[31573-31602]"
  }, {
    "left" : "final Cell hitCell = detectAndAddHit(x, y);",
    "right" : "final Cell hitCell = detectAndAddHit(x, y);",
    "info" : "VariableDeclarationStatement[31161-31204]:VariableDeclarationStatement[31611-31654]"
  }, {
    "left" : "if (hitCell != null)",
    "right" : "if (hitCell != null)",
    "info" : "IfStatement[31213-31492]:IfStatement[31663-31942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31234-31375]:Block[31684-31825]"
  }, {
    "left" : "mPatternInProgress = true;",
    "right" : "mPatternInProgress = true;",
    "info" : "ExpressionStatement[31248-31274]:ExpressionStatement[31698-31724]"
  }, {
    "left" : "mPatternDisplayMode = DisplayMode.Correct;",
    "right" : "mPatternDisplayMode = DisplayMode.Correct;",
    "info" : "ExpressionStatement[31287-31329]:ExpressionStatement[31737-31779]"
  }, {
    "left" : "notifyPatternStarted();",
    "right" : "notifyPatternStarted();",
    "info" : "ExpressionStatement[31342-31365]:ExpressionStatement[31792-31815]"
  }, {
    "left" : "if (mPatternInProgress)",
    "right" : "if (mPatternInProgress)",
    "info" : "IfStatement[31381-31492]:IfStatement[31831-31942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31405-31492]:Block[31855-31942]"
  }, {
    "left" : "mPatternInProgress = false;",
    "right" : "mPatternInProgress = false;",
    "info" : "ExpressionStatement[31419-31446]:ExpressionStatement[31869-31896]"
  }, {
    "left" : "notifyPatternCleared();",
    "right" : "notifyPatternCleared();",
    "info" : "ExpressionStatement[31459-31482]:ExpressionStatement[31909-31932]"
  }, {
    "left" : "if (hitCell != null)",
    "right" : "if (hitCell != null)",
    "info" : "IfStatement[31501-31951]:IfStatement[31951-32401]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31522-31951]:Block[31972-32401]"
  }, {
    "left" : "final float startX = getCenterXForColumn(hitCell.column);",
    "right" : "final float startX = getCenterXForColumn(hitCell.column);",
    "info" : "VariableDeclarationStatement[31536-31593]:VariableDeclarationStatement[31986-32043]"
  }, {
    "left" : "final float startY = getCenterYForRow(hitCell.row);",
    "right" : "final float startY = getCenterYForRow(hitCell.row);",
    "info" : "VariableDeclarationStatement[31606-31657]:VariableDeclarationStatement[32056-32107]"
  }, {
    "left" : "final float widthOffset = mSquareWidth / 2f;",
    "right" : "final float widthOffset = mSquareWidth / 2f;",
    "info" : "VariableDeclarationStatement[31671-31715]:VariableDeclarationStatement[32121-32165]"
  }, {
    "left" : "final float heightOffset = mSquareHeight / 2f;",
    "right" : "final float heightOffset = mSquareHeight / 2f;",
    "info" : "VariableDeclarationStatement[31728-31774]:VariableDeclarationStatement[32178-32224]"
  }, {
    "left" : "invalidate((int) (startX - widthOffset), (int) (startY - heightOffset),\n                    (int) (startX + widthOffset), (int) (startY + heightOffset));",
    "right" : "invalidate((int) (startX - widthOffset), (int) (startY - heightOffset),\n                    (int) (startX + widthOffset), (int) (startY + heightOffset));",
    "info" : "ExpressionStatement[31788-31941]:ExpressionStatement[32238-32391]"
  }, {
    "left" : "mInProgressX = x;",
    "right" : "mInProgressX = x;",
    "info" : "ExpressionStatement[31960-31977]:ExpressionStatement[32410-32427]"
  }, {
    "left" : "mInProgressY = y;",
    "right" : "mInProgressY = y;",
    "info" : "ExpressionStatement[31986-32003]:ExpressionStatement[32436-32453]"
  }, {
    "left" : "if (PROFILE_DRAWING)",
    "right" : "if (PROFILE_DRAWING)",
    "info" : "IfStatement[32012-32216]:IfStatement[32462-32666]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32033-32216]:Block[32483-32666]"
  }, {
    "left" : "if (!mDrawingProfilingStarted)",
    "right" : "if (!mDrawingProfilingStarted)",
    "info" : "IfStatement[32047-32206]:IfStatement[32497-32656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32078-32206]:Block[32528-32656]"
  }, {
    "left" : "Debug.startMethodTracing(\"LockPatternDrawing\");",
    "right" : "Debug.startMethodTracing(\"LockPatternDrawing\");",
    "info" : "ExpressionStatement[32096-32143]:ExpressionStatement[32546-32593]"
  }, {
    "left" : "mDrawingProfilingStarted = true;",
    "right" : "mDrawingProfilingStarted = true;",
    "info" : "ExpressionStatement[32160-32192]:ExpressionStatement[32610-32642]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[32228-32235]:Modifier[32678-32685]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[32236-32241]:PrimitiveType[32686-32691]"
  }, {
    "left" : "getCenterXForColumn",
    "right" : "getCenterXForColumn",
    "info" : "SimpleName[32242-32261]:SimpleName[32692-32711]"
  }, {
    "left" : "int column",
    "right" : "int column",
    "info" : "SingleVariableDeclaration[32262-32272]:SingleVariableDeclaration[32712-32722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32274-32354]:Block[32724-32804]"
  }, {
    "left" : "return mPaddingLeft + column * mSquareWidth + mSquareWidth / 2f;",
    "right" : "return mPaddingLeft + column * mSquareWidth + mSquareWidth / 2f;",
    "info" : "ReturnStatement[32284-32348]:ReturnStatement[32734-32798]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[32360-32367]:Modifier[32810-32817]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[32368-32373]:PrimitiveType[32818-32823]"
  }, {
    "left" : "getCenterYForRow",
    "right" : "getCenterYForRow",
    "info" : "SimpleName[32374-32390]:SimpleName[32824-32840]"
  }, {
    "left" : "int row",
    "right" : "int row",
    "info" : "SingleVariableDeclaration[32391-32398]:SingleVariableDeclaration[32841-32848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32400-32478]:Block[32850-32928]"
  }, {
    "left" : "return mPaddingTop + row * mSquareHeight + mSquareHeight / 2f;",
    "right" : "return mPaddingTop + row * mSquareHeight + mSquareHeight / 2f;",
    "info" : "ReturnStatement[32410-32472]:ReturnStatement[32860-32922]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[32484-32493]:MarkerAnnotation[32934-32943]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[32498-32507]:Modifier[32948-32957]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[32508-32512]:PrimitiveType[32958-32962]"
  }, {
    "left" : "onDraw",
    "right" : "onDraw",
    "info" : "SimpleName[32513-32519]:SimpleName[32963-32969]"
  }, {
    "left" : "Canvas canvas",
    "right" : "Canvas canvas",
    "info" : "SingleVariableDeclaration[32520-32533]:SingleVariableDeclaration[32970-32983]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32535-37498]:Block[32985-37948]"
  }, {
    "left" : "final ArrayList<Cell> pattern = mPattern;",
    "right" : "final ArrayList<Cell> pattern = mPattern;",
    "info" : "VariableDeclarationStatement[32545-32586]:VariableDeclarationStatement[32995-33036]"
  }, {
    "left" : "final int count = pattern.size();",
    "right" : "final int count = pattern.size();",
    "info" : "VariableDeclarationStatement[32595-32628]:VariableDeclarationStatement[33045-33078]"
  }, {
    "left" : "final boolean[][] drawLookup = mPatternDrawLookup;",
    "right" : "final boolean[][] drawLookup = mPatternDrawLookup;",
    "info" : "VariableDeclarationStatement[32637-32687]:VariableDeclarationStatement[33087-33137]"
  }, {
    "left" : "if (mPatternDisplayMode == DisplayMode.Animate)",
    "right" : "if (mPatternDisplayMode == DisplayMode.Animate)",
    "info" : "IfStatement[32697-34502]:IfStatement[33147-34952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32745-34502]:Block[33195-34952]"
  }, {
    "left" : "final int oneCycle = (count + 1) * MILLIS_PER_CIRCLE_ANIMATING;",
    "right" : "final int oneCycle = (count + 1) * MILLIS_PER_CIRCLE_ANIMATING;",
    "info" : "VariableDeclarationStatement[32860-32923]:VariableDeclarationStatement[33310-33373]"
  }, {
    "left" : "final int spotInCycle = (int) (SystemClock.elapsedRealtime() -\n                    mAnimatingPeriodStart) % oneCycle;",
    "right" : "final int spotInCycle = (int) (SystemClock.elapsedRealtime() -\n                    mAnimatingPeriodStart) % oneCycle;",
    "info" : "VariableDeclarationStatement[32936-33053]:VariableDeclarationStatement[33386-33503]"
  }, {
    "left" : "final int numCircles = spotInCycle / MILLIS_PER_CIRCLE_ANIMATING;",
    "right" : "final int numCircles = spotInCycle / MILLIS_PER_CIRCLE_ANIMATING;",
    "info" : "VariableDeclarationStatement[33066-33131]:VariableDeclarationStatement[33516-33581]"
  }, {
    "left" : "clearPatternDrawLookup();",
    "right" : "clearPatternDrawLookup();",
    "info" : "ExpressionStatement[33145-33170]:ExpressionStatement[33595-33620]"
  }, {
    "left" : "for (int i = 0; i < numCircles; i++)",
    "right" : "for (int i = 0; i < numCircles; i++)",
    "info" : "ForStatement[33183-33353]:ForStatement[33633-33803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33220-33353]:Block[33670-33803]"
  }, {
    "left" : "final Cell cell = pattern.get(i);",
    "right" : "final Cell cell = pattern.get(i);",
    "info" : "VariableDeclarationStatement[33238-33271]:VariableDeclarationStatement[33688-33721]"
  }, {
    "left" : "drawLookup[cell.getRow()][cell.getColumn()] = true;",
    "right" : "drawLookup[cell.getRow()][cell.getColumn()] = true;",
    "info" : "ExpressionStatement[33288-33339]:ExpressionStatement[33738-33789]"
  }, {
    "left" : "final boolean needToUpdateInProgressPoint = numCircles > 0\n                    && numCircles < count;",
    "right" : "final boolean needToUpdateInProgressPoint = numCircles > 0\n                    && numCircles < count;",
    "info" : "VariableDeclarationStatement[33431-33532]:VariableDeclarationStatement[33881-33982]"
  }, {
    "left" : "if (needToUpdateInProgressPoint)",
    "right" : "if (needToUpdateInProgressPoint)",
    "info" : "IfStatement[33546-34423]:IfStatement[33996-34873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33579-34423]:Block[34029-34873]"
  }, {
    "left" : "final float percentageOfNextCircle =\n                        ((float) (spotInCycle % MILLIS_PER_CIRCLE_ANIMATING)) /\n                                MILLIS_PER_CIRCLE_ANIMATING;",
    "right" : "final float percentageOfNextCircle =\n                        ((float) (spotInCycle % MILLIS_PER_CIRCLE_ANIMATING)) /\n                                MILLIS_PER_CIRCLE_ANIMATING;",
    "info" : "VariableDeclarationStatement[33597-33774]:VariableDeclarationStatement[34047-34224]"
  }, {
    "left" : "final Cell currentCell = pattern.get(numCircles - 1);",
    "right" : "final Cell currentCell = pattern.get(numCircles - 1);",
    "info" : "VariableDeclarationStatement[33792-33845]:VariableDeclarationStatement[34242-34295]"
  }, {
    "left" : "final float centerX = getCenterXForColumn(currentCell.column);",
    "right" : "final float centerX = getCenterXForColumn(currentCell.column);",
    "info" : "VariableDeclarationStatement[33862-33924]:VariableDeclarationStatement[34312-34374]"
  }, {
    "left" : "final float centerY = getCenterYForRow(currentCell.row);",
    "right" : "final float centerY = getCenterYForRow(currentCell.row);",
    "info" : "VariableDeclarationStatement[33941-33997]:VariableDeclarationStatement[34391-34447]"
  }, {
    "left" : "final Cell nextCell = pattern.get(numCircles);",
    "right" : "final Cell nextCell = pattern.get(numCircles);",
    "info" : "VariableDeclarationStatement[34015-34061]:VariableDeclarationStatement[34465-34511]"
  }, {
    "left" : "final float dx = percentageOfNextCircle *\n                        (getCenterXForColumn(nextCell.column) - centerX);",
    "right" : "final float dx = percentageOfNextCircle *\n                        (getCenterXForColumn(nextCell.column) - centerX);",
    "info" : "VariableDeclarationStatement[34078-34193]:VariableDeclarationStatement[34528-34643]"
  }, {
    "left" : "final float dy = percentageOfNextCircle *\n                        (getCenterYForRow(nextCell.row) - centerY);",
    "right" : "final float dy = percentageOfNextCircle *\n                        (getCenterYForRow(nextCell.row) - centerY);",
    "info" : "VariableDeclarationStatement[34210-34319]:VariableDeclarationStatement[34660-34769]"
  }, {
    "left" : "mInProgressX = centerX + dx;",
    "right" : "mInProgressX = centerX + dx;",
    "info" : "ExpressionStatement[34336-34364]:ExpressionStatement[34786-34814]"
  }, {
    "left" : "mInProgressY = centerY + dy;",
    "right" : "mInProgressY = centerY + dy;",
    "info" : "ExpressionStatement[34381-34409]:ExpressionStatement[34831-34859]"
  }, {
    "left" : "invalidate();",
    "right" : "invalidate();",
    "info" : "ExpressionStatement[34479-34492]:ExpressionStatement[34929-34942]"
  }, {
    "left" : "final Path currentPath = mCurrentPath;",
    "right" : "final Path currentPath = mCurrentPath;",
    "info" : "VariableDeclarationStatement[34512-34550]:VariableDeclarationStatement[34962-35000]"
  }, {
    "left" : "currentPath.rewind();",
    "right" : "currentPath.rewind();",
    "info" : "ExpressionStatement[34559-34580]:ExpressionStatement[35009-35030]"
  }, {
    "left" : "for (int i = 0; i < mPatternSize; i++)",
    "right" : "for (int i = 0; i < mPatternSize; i++)",
    "info" : "ForStatement[34618-35165]:ForStatement[35068-35615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34657-35165]:Block[35107-35615]"
  }, {
    "left" : "float centerY = getCenterYForRow(i);",
    "right" : "float centerY = getCenterYForRow(i);",
    "info" : "VariableDeclarationStatement[34671-34707]:VariableDeclarationStatement[35121-35157]"
  }, {
    "left" : "for (int j = 0; j < mPatternSize; j++)",
    "right" : "for (int j = 0; j < mPatternSize; j++)",
    "info" : "ForStatement[34720-35155]:ForStatement[35170-35605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34759-35155]:Block[35209-35605]"
  }, {
    "left" : "CellState cellState = mCellStates[i][j];",
    "right" : "CellState cellState = mCellStates[i][j];",
    "info" : "VariableDeclarationStatement[34777-34817]:VariableDeclarationStatement[35227-35267]"
  }, {
    "left" : "float centerX = getCenterXForColumn(j);",
    "right" : "float centerX = getCenterXForColumn(j);",
    "info" : "VariableDeclarationStatement[34834-34873]:VariableDeclarationStatement[35284-35323]"
  }, {
    "left" : "float size = cellState.size * cellState.scale;",
    "right" : "float size = cellState.size * cellState.scale;",
    "info" : "VariableDeclarationStatement[34890-34936]:VariableDeclarationStatement[35340-35386]"
  }, {
    "left" : "float translationY = cellState.translateY;",
    "right" : "float translationY = cellState.translateY;",
    "info" : "VariableDeclarationStatement[34953-34995]:VariableDeclarationStatement[35403-35445]"
  }, {
    "left" : "drawCircle(canvas, (int) centerX, (int) centerY + translationY,\n                        size, drawLookup[i][j], cellState.alpha);",
    "right" : "drawCircle(canvas, (int) centerX, (int) centerY + translationY,\n                        size, drawLookup[i][j], cellState.alpha);",
    "info" : "ExpressionStatement[35012-35141]:ExpressionStatement[35462-35591]"
  }, {
    "left" : "final boolean drawPath = ((!mInStealthMode && mPatternDisplayMode != DisplayMode.Wrong)\n                || (mPatternDisplayMode == DisplayMode.Wrong && mShowErrorPath));",
    "right" : "final boolean drawPath = ((!mInStealthMode && mPatternDisplayMode != DisplayMode.Wrong)\n                || (mPatternDisplayMode == DisplayMode.Wrong && mShowErrorPath));",
    "info" : "VariableDeclarationStatement[35403-35572]:VariableDeclarationStatement[35853-36022]"
  }, {
    "left" : "if (drawPath)",
    "right" : "if (drawPath)",
    "info" : "IfStatement[35581-37492]:IfStatement[36031-37942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35595-37492]:Block[36045-37942]"
  }, {
    "left" : "mPathPaint.setColor(getCurrentColor(true /* partOfPattern */));",
    "right" : "mPathPaint.setColor(getCurrentColor(true /* partOfPattern */));",
    "info" : "ExpressionStatement[35609-35672]:ExpressionStatement[36059-36122]"
  }, {
    "left" : "boolean anyCircles = false;",
    "right" : "boolean anyCircles = false;",
    "info" : "VariableDeclarationStatement[35686-35713]:VariableDeclarationStatement[36136-36163]"
  }, {
    "left" : "float lastX = 0f;",
    "right" : "float lastX = 0f;",
    "info" : "VariableDeclarationStatement[35726-35743]:VariableDeclarationStatement[36176-36193]"
  }, {
    "left" : "float lastY = 0f;",
    "right" : "float lastY = 0f;",
    "info" : "VariableDeclarationStatement[35756-35773]:VariableDeclarationStatement[36206-36223]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[35786-36945]:ForStatement[36236-37395]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35818-36945]:Block[36268-37395]"
  }, {
    "left" : "Cell cell = pattern.get(i);",
    "right" : "Cell cell = pattern.get(i);",
    "info" : "VariableDeclarationStatement[35836-35863]:VariableDeclarationStatement[36286-36313]"
  }, {
    "left" : "if (!drawLookup[cell.row][cell.column])",
    "right" : "if (!drawLookup[cell.row][cell.column])",
    "info" : "IfStatement[36050-36136]:IfStatement[36500-36586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36090-36136]:Block[36540-36586]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[36112-36118]:BreakStatement[36562-36568]"
  }, {
    "left" : "anyCircles = true;",
    "right" : "anyCircles = true;",
    "info" : "ExpressionStatement[36153-36171]:ExpressionStatement[36603-36621]"
  }, {
    "left" : "float centerX = getCenterXForColumn(cell.column);",
    "right" : "float centerX = getCenterXForColumn(cell.column);",
    "info" : "VariableDeclarationStatement[36189-36238]:VariableDeclarationStatement[36639-36688]"
  }, {
    "left" : "float centerY = getCenterYForRow(cell.row);",
    "right" : "float centerY = getCenterYForRow(cell.row);",
    "info" : "VariableDeclarationStatement[36255-36298]:VariableDeclarationStatement[36705-36748]"
  }, {
    "left" : "if (i != 0)",
    "right" : "if (i != 0)",
    "info" : "IfStatement[36315-36865]:IfStatement[36765-37315]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36327-36865]:Block[36777-37315]"
  }, {
    "left" : "CellState state = mCellStates[cell.row][cell.column];",
    "right" : "CellState state = mCellStates[cell.row][cell.column];",
    "info" : "VariableDeclarationStatement[36349-36402]:VariableDeclarationStatement[36799-36852]"
  }, {
    "left" : "currentPath.rewind();",
    "right" : "currentPath.rewind();",
    "info" : "ExpressionStatement[36423-36444]:ExpressionStatement[36873-36894]"
  }, {
    "left" : "currentPath.moveTo(lastX, lastY);",
    "right" : "currentPath.moveTo(lastX, lastY);",
    "info" : "ExpressionStatement[36465-36498]:ExpressionStatement[36915-36948]"
  }, {
    "left" : "if (state.lineEndX != Float.MIN_VALUE && state.lineEndY != Float.MIN_VALUE)",
    "right" : "if (state.lineEndX != Float.MIN_VALUE && state.lineEndY != Float.MIN_VALUE)",
    "info" : "IfStatement[36519-36785]:IfStatement[36969-37235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36595-36694]:Block[37045-37144]"
  }, {
    "left" : "currentPath.lineTo(state.lineEndX, state.lineEndY);",
    "right" : "currentPath.lineTo(state.lineEndX, state.lineEndY);",
    "info" : "ExpressionStatement[36621-36672]:ExpressionStatement[37071-37122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36700-36785]:Block[37150-37235]"
  }, {
    "left" : "currentPath.lineTo(centerX, centerY);",
    "right" : "currentPath.lineTo(centerX, centerY);",
    "info" : "ExpressionStatement[36726-36763]:ExpressionStatement[37176-37213]"
  }, {
    "left" : "canvas.drawPath(currentPath, mPathPaint);",
    "right" : "canvas.drawPath(currentPath, mPathPaint);",
    "info" : "ExpressionStatement[36806-36847]:ExpressionStatement[37256-37297]"
  }, {
    "left" : "lastX = centerX;",
    "right" : "lastX = centerX;",
    "info" : "ExpressionStatement[36882-36898]:ExpressionStatement[37332-37348]"
  }, {
    "left" : "lastY = centerY;",
    "right" : "lastY = centerY;",
    "info" : "ExpressionStatement[36915-36931]:ExpressionStatement[37365-37381]"
  }, {
    "left" : "if ((mPatternInProgress || mPatternDisplayMode == DisplayMode.Animate)\n                    && anyCircles)",
    "right" : "if ((mPatternInProgress || mPatternDisplayMode == DisplayMode.Animate)\n                    && anyCircles)",
    "info" : "IfStatement[37004-37482]:IfStatement[37454-37932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37110-37482]:Block[37560-37932]"
  }, {
    "left" : "currentPath.rewind();",
    "right" : "currentPath.rewind();",
    "info" : "ExpressionStatement[37128-37149]:ExpressionStatement[37578-37599]"
  }, {
    "left" : "currentPath.moveTo(lastX, lastY);",
    "right" : "currentPath.moveTo(lastX, lastY);",
    "info" : "ExpressionStatement[37166-37199]:ExpressionStatement[37616-37649]"
  }, {
    "left" : "currentPath.lineTo(mInProgressX, mInProgressY);",
    "right" : "currentPath.lineTo(mInProgressX, mInProgressY);",
    "info" : "ExpressionStatement[37216-37263]:ExpressionStatement[37666-37713]"
  }, {
    "left" : "mPathPaint.setAlpha((int) (calculateLastSegmentAlpha(\n                        mInProgressX, mInProgressY, lastX, lastY) * 255f));",
    "right" : "mPathPaint.setAlpha((int) (calculateLastSegmentAlpha(\n                        mInProgressX, mInProgressY, lastX, lastY) * 255f));",
    "info" : "ExpressionStatement[37281-37410]:ExpressionStatement[37731-37860]"
  }, {
    "left" : "canvas.drawPath(currentPath, mPathPaint);",
    "right" : "canvas.drawPath(currentPath, mPathPaint);",
    "info" : "ExpressionStatement[37427-37468]:ExpressionStatement[37877-37918]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37504-37511]:Modifier[37954-37961]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[37512-37517]:PrimitiveType[37962-37967]"
  }, {
    "left" : "calculateLastSegmentAlpha",
    "right" : "calculateLastSegmentAlpha",
    "info" : "SimpleName[37518-37543]:SimpleName[37968-37993]"
  }, {
    "left" : "float x",
    "right" : "float x",
    "info" : "SingleVariableDeclaration[37544-37551]:SingleVariableDeclaration[37994-38001]"
  }, {
    "left" : "float y",
    "right" : "float y",
    "info" : "SingleVariableDeclaration[37553-37560]:SingleVariableDeclaration[38003-38010]"
  }, {
    "left" : "float lastX",
    "right" : "float lastX",
    "info" : "SingleVariableDeclaration[37562-37573]:SingleVariableDeclaration[38012-38023]"
  }, {
    "left" : "float lastY",
    "right" : "float lastY",
    "info" : "SingleVariableDeclaration[37575-37586]:SingleVariableDeclaration[38025-38036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37588-37831]:Block[38038-38281]"
  }, {
    "left" : "float diffX = x - lastX;",
    "right" : "float diffX = x - lastX;",
    "info" : "VariableDeclarationStatement[37598-37622]:VariableDeclarationStatement[38048-38072]"
  }, {
    "left" : "float diffY = y - lastY;",
    "right" : "float diffY = y - lastY;",
    "info" : "VariableDeclarationStatement[37631-37655]:VariableDeclarationStatement[38081-38105]"
  }, {
    "left" : "float dist = (float) Math.sqrt(diffX*diffX + diffY*diffY);",
    "right" : "float dist = (float) Math.sqrt(diffX*diffX + diffY*diffY);",
    "info" : "VariableDeclarationStatement[37664-37722]:VariableDeclarationStatement[38114-38172]"
  }, {
    "left" : "float frac = dist/mSquareWidth;",
    "right" : "float frac = dist/mSquareWidth;",
    "info" : "VariableDeclarationStatement[37731-37762]:VariableDeclarationStatement[38181-38212]"
  }, {
    "left" : "return Math.min(1f, Math.max(0f, (frac - 0.3f) * 4f));",
    "right" : "return Math.min(1f, Math.max(0f, (frac - 0.3f) * 4f));",
    "info" : "ReturnStatement[37771-37825]:ReturnStatement[38221-38275]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37837-37844]:Modifier[38287-38294]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[37845-37848]:PrimitiveType[38295-38298]"
  }, {
    "left" : "getCurrentColor",
    "right" : "getCurrentColor",
    "info" : "SimpleName[37849-37864]:SimpleName[38299-38314]"
  }, {
    "left" : "boolean partOfPattern",
    "right" : "boolean partOfPattern",
    "info" : "SingleVariableDeclaration[37865-37886]:SingleVariableDeclaration[38315-38336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37888-38586]:Block[38338-39036]"
  }, {
    "left" : "if (!partOfPattern || (mInStealthMode && mPatternDisplayMode != DisplayMode.Wrong)\n                || (mPatternDisplayMode == DisplayMode.Wrong && !mShowErrorPath)\n                || mPatternInProgress)",
    "right" : "if (!partOfPattern || (mInStealthMode && mPatternDisplayMode != DisplayMode.Wrong)\n                || (mPatternDisplayMode == DisplayMode.Wrong && !mShowErrorPath)\n                || mPatternInProgress)",
    "info" : "IfStatement[37898-38580]:IfStatement[38348-39030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38101-38179]:Block[38551-38629]"
  }, {
    "left" : "return mRegularColor;",
    "right" : "return mRegularColor;",
    "info" : "ReturnStatement[38148-38169]:ReturnStatement[38598-38619]"
  }, {
    "left" : "if (mPatternDisplayMode == DisplayMode.Wrong)",
    "right" : "if (mPatternDisplayMode == DisplayMode.Wrong)",
    "info" : "IfStatement[38185-38580]:IfStatement[38635-39030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38231-38310]:Block[38681-38760]"
  }, {
    "left" : "return mErrorColor;",
    "right" : "return mErrorColor;",
    "info" : "ReturnStatement[38281-38300]:ReturnStatement[38731-38750]"
  }, {
    "left" : "if (mPatternDisplayMode == DisplayMode.Correct ||\n                mPatternDisplayMode == DisplayMode.Animate)",
    "right" : "if (mPatternDisplayMode == DisplayMode.Correct ||\n                mPatternDisplayMode == DisplayMode.Animate)",
    "info" : "IfStatement[38316-38580]:IfStatement[38766-39030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38426-38471]:Block[38876-38921]"
  }, {
    "left" : "return mSuccessColor;",
    "right" : "return mSuccessColor;",
    "info" : "ReturnStatement[38440-38461]:ReturnStatement[38890-38911]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38477-38580]:Block[38927-39030]"
  }, {
    "left" : "throw new IllegalStateException(\"unknown display mode \" + mPatternDisplayMode);",
    "right" : "throw new IllegalStateException(\"unknown display mode \" + mPatternDisplayMode);",
    "info" : "ThrowStatement[38491-38570]:ThrowStatement[38941-39020]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[38680-38687]:Modifier[39130-39137]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[38688-38692]:PrimitiveType[39138-39142]"
  }, {
    "left" : "drawCircle",
    "right" : "drawCircle",
    "info" : "SimpleName[38693-38703]:SimpleName[39143-39153]"
  }, {
    "left" : "Canvas canvas",
    "right" : "Canvas canvas",
    "info" : "SingleVariableDeclaration[38704-38717]:SingleVariableDeclaration[39154-39167]"
  }, {
    "left" : "float centerX",
    "right" : "float centerX",
    "info" : "SingleVariableDeclaration[38719-38732]:SingleVariableDeclaration[39169-39182]"
  }, {
    "left" : "float centerY",
    "right" : "float centerY",
    "info" : "SingleVariableDeclaration[38734-38747]:SingleVariableDeclaration[39184-39197]"
  }, {
    "left" : "float size",
    "right" : "float size",
    "info" : "SingleVariableDeclaration[38749-38759]:SingleVariableDeclaration[39199-39209]"
  }, {
    "left" : "boolean partOfPattern",
    "right" : "boolean partOfPattern",
    "info" : "SingleVariableDeclaration[38773-38794]:SingleVariableDeclaration[39223-39244]"
  }, {
    "left" : "float alpha",
    "right" : "float alpha",
    "info" : "SingleVariableDeclaration[38796-38807]:SingleVariableDeclaration[39246-39257]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38809-39039]:Block[39259-39489]"
  }, {
    "left" : "if (!mVisibleDots)",
    "right" : "if (!mVisibleDots)",
    "info" : "IfStatement[38819-38869]:IfStatement[39269-39319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38838-38869]:Block[39288-39319]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[38852-38859]:ReturnStatement[39302-39309]"
  }, {
    "left" : "mPaint.setColor(getCurrentColor(partOfPattern));",
    "right" : "mPaint.setColor(getCurrentColor(partOfPattern));",
    "info" : "ExpressionStatement[38878-38926]:ExpressionStatement[39328-39376]"
  }, {
    "left" : "mPaint.setAlpha((int) (alpha * 255));",
    "right" : "mPaint.setAlpha((int) (alpha * 255));",
    "info" : "ExpressionStatement[38935-38972]:ExpressionStatement[39385-39422]"
  }, {
    "left" : "canvas.drawCircle(centerX, centerY, size/2, mPaint);",
    "right" : "canvas.drawCircle(centerX, centerY, size/2, mPaint);",
    "info" : "ExpressionStatement[38981-39033]:ExpressionStatement[39431-39483]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[39045-39054]:MarkerAnnotation[39495-39504]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[39059-39068]:Modifier[39509-39518]"
  }, {
    "left" : "Parcelable",
    "right" : "Parcelable",
    "info" : "SimpleType[39069-39079]:SimpleType[39519-39529]"
  }, {
    "left" : "onSaveInstanceState",
    "right" : "onSaveInstanceState",
    "info" : "SimpleName[39080-39099]:SimpleName[39530-39549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39102-39448]:Block[39552-39898]"
  }, {
    "left" : "Parcelable superState = super.onSaveInstanceState();",
    "right" : "Parcelable superState = super.onSaveInstanceState();",
    "info" : "VariableDeclarationStatement[39112-39164]:VariableDeclarationStatement[39562-39614]"
  }, {
    "left" : "return new SavedState(superState,\n                LockPatternUtils.patternToString(mPattern, mPatternSize),\n                mPatternDisplayMode.ordinal(), mPatternSize,\n                mInputEnabled, mInStealthMode, mEnableHapticFeedback, mVisibleDots, mShowErrorPath);",
    "right" : "return new SavedState(superState,\n                LockPatternUtils.patternToString(mPattern, mPatternSize),\n                mPatternDisplayMode.ordinal(), mPatternSize,\n                mInputEnabled, mInStealthMode, mEnableHapticFeedback, mVisibleDots, mShowErrorPath);",
    "info" : "ReturnStatement[39173-39442]:ReturnStatement[39623-39892]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[39454-39463]:MarkerAnnotation[39904-39913]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[39468-39477]:Modifier[39918-39927]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[39478-39482]:PrimitiveType[39928-39932]"
  }, {
    "left" : "onRestoreInstanceState",
    "right" : "onRestoreInstanceState",
    "info" : "SimpleName[39483-39505]:SimpleName[39933-39955]"
  }, {
    "left" : "Parcelable state",
    "right" : "Parcelable state",
    "info" : "SingleVariableDeclaration[39506-39522]:SingleVariableDeclaration[39956-39972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39524-40137]:Block[39974-40583]"
  }, {
    "left" : "final SavedState ss = (SavedState) state;",
    "right" : "final SavedState ss = (SavedState) state;",
    "info" : "VariableDeclarationStatement[39534-39575]:VariableDeclarationStatement[39984-40025]"
  }, {
    "left" : "super.onRestoreInstanceState(ss.getSuperState());",
    "right" : "super.onRestoreInstanceState(ss.getSuperState());",
    "info" : "ExpressionStatement[39584-39633]:ExpressionStatement[40034-40083]"
  }, {
    "left" : "setPattern(\n                DisplayMode.Correct,\n                mLockPatternUtils.stringToPattern(ss.getSerializedPattern()));",
    "right" : "setPattern(DisplayMode.Correct,\n                LockPatternUtils.stringToPattern(ss.getSerializedPattern(), mPatternSize));",
    "info" : "ExpressionStatement[39642-39769]:ExpressionStatement[40454-40577]"
  }, {
    "left" : "mLockPatternUtils",
    "right" : "LockPatternUtils",
    "info" : "SimpleName[39707-39724]:SimpleName[40502-40518]"
  }, {
    "left" : "mPatternDisplayMode = DisplayMode.values()[ss.getDisplayMode()];",
    "right" : "mPatternDisplayMode = DisplayMode.values()[ss.getDisplayMode()];",
    "info" : "ExpressionStatement[39778-39842]:ExpressionStatement[40092-40156]"
  }, {
    "left" : "mPatternSize = ss.getPatternSize();",
    "right" : "mPatternSize = ss.getPatternSize();",
    "info" : "ExpressionStatement[39851-39886]:ExpressionStatement[40165-40200]"
  }, {
    "left" : "mInputEnabled = ss.isInputEnabled();",
    "right" : "mInputEnabled = ss.isInputEnabled();",
    "info" : "ExpressionStatement[39895-39931]:ExpressionStatement[40209-40245]"
  }, {
    "left" : "mInStealthMode = ss.isInStealthMode();",
    "right" : "mInStealthMode = ss.isInStealthMode();",
    "info" : "ExpressionStatement[39940-39978]:ExpressionStatement[40254-40292]"
  }, {
    "left" : "mEnableHapticFeedback = ss.isTactileFeedbackEnabled();",
    "right" : "mEnableHapticFeedback = ss.isTactileFeedbackEnabled();",
    "info" : "ExpressionStatement[39987-40041]:ExpressionStatement[40301-40355]"
  }, {
    "left" : "mVisibleDots = ss.isVisibleDots();",
    "right" : "mVisibleDots = ss.isVisibleDots();",
    "info" : "ExpressionStatement[40050-40084]:ExpressionStatement[40364-40398]"
  }, {
    "left" : "mShowErrorPath = ss.isShowErrorPath();",
    "right" : "mShowErrorPath = ss.isShowErrorPath();",
    "info" : "ExpressionStatement[40093-40131]:ExpressionStatement[40407-40445]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[40228-40235]:Modifier[40674-40681]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[40236-40242]:Modifier[40682-40688]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[40243-40248]:TYPE_DECLARATION_KIND[40689-40694]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[40766-40773]:Modifier[41212-41219]"
  }, {
    "left" : "SavedState",
    "right" : "SavedState",
    "info" : "SimpleName[40774-40784]:SimpleName[41220-41230]"
  }, {
    "left" : "Parcelable superState",
    "right" : "Parcelable superState",
    "info" : "SingleVariableDeclaration[40785-40806]:SingleVariableDeclaration[41231-41252]"
  }, {
    "left" : "String serializedPattern",
    "right" : "String serializedPattern",
    "info" : "SingleVariableDeclaration[40808-40832]:SingleVariableDeclaration[41254-41278]"
  }, {
    "left" : "int displayMode",
    "right" : "int displayMode",
    "info" : "SingleVariableDeclaration[40834-40849]:SingleVariableDeclaration[41280-41295]"
  }, {
    "left" : "byte patternSize",
    "right" : "byte patternSize",
    "info" : "SingleVariableDeclaration[40867-40883]:SingleVariableDeclaration[41313-41329]"
  }, {
    "left" : "boolean inputEnabled",
    "right" : "boolean inputEnabled",
    "info" : "SingleVariableDeclaration[40885-40905]:SingleVariableDeclaration[41331-41351]"
  }, {
    "left" : "boolean inStealthMode",
    "right" : "boolean inStealthMode",
    "info" : "SingleVariableDeclaration[40907-40928]:SingleVariableDeclaration[41353-41374]"
  }, {
    "left" : "boolean tactileFeedbackEnabled",
    "right" : "boolean tactileFeedbackEnabled",
    "info" : "SingleVariableDeclaration[40946-40976]:SingleVariableDeclaration[41392-41422]"
  }, {
    "left" : "boolean visibleDots",
    "right" : "boolean visibleDots",
    "info" : "SingleVariableDeclaration[40978-40997]:SingleVariableDeclaration[41424-41443]"
  }, {
    "left" : "boolean showErrorPath",
    "right" : "boolean showErrorPath",
    "info" : "SingleVariableDeclaration[40999-41020]:SingleVariableDeclaration[41445-41466]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41022-41428]:Block[41468-41874]"
  }, {
    "left" : "super(superState);",
    "right" : "super(superState);",
    "info" : "SuperConstructorInvocation[41036-41054]:SuperConstructorInvocation[41482-41500]"
  }, {
    "left" : "mSerializedPattern = serializedPattern;",
    "right" : "mSerializedPattern = serializedPattern;",
    "info" : "ExpressionStatement[41067-41106]:ExpressionStatement[41513-41552]"
  }, {
    "left" : "mDisplayMode = displayMode;",
    "right" : "mDisplayMode = displayMode;",
    "info" : "ExpressionStatement[41119-41146]:ExpressionStatement[41565-41592]"
  }, {
    "left" : "mPatternSize = patternSize;",
    "right" : "mPatternSize = patternSize;",
    "info" : "ExpressionStatement[41159-41186]:ExpressionStatement[41605-41632]"
  }, {
    "left" : "mInputEnabled = inputEnabled;",
    "right" : "mInputEnabled = inputEnabled;",
    "info" : "ExpressionStatement[41199-41228]:ExpressionStatement[41645-41674]"
  }, {
    "left" : "mInStealthMode = inStealthMode;",
    "right" : "mInStealthMode = inStealthMode;",
    "info" : "ExpressionStatement[41241-41272]:ExpressionStatement[41687-41718]"
  }, {
    "left" : "mTactileFeedbackEnabled = tactileFeedbackEnabled;",
    "right" : "mTactileFeedbackEnabled = tactileFeedbackEnabled;",
    "info" : "ExpressionStatement[41285-41334]:ExpressionStatement[41731-41780]"
  }, {
    "left" : "mVisibleDots = visibleDots;",
    "right" : "mVisibleDots = visibleDots;",
    "info" : "ExpressionStatement[41347-41374]:ExpressionStatement[41793-41820]"
  }, {
    "left" : "mShowErrorPath = showErrorPath;",
    "right" : "mShowErrorPath = showErrorPath;",
    "info" : "ExpressionStatement[41387-41418]:ExpressionStatement[41833-41864]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[41514-41521]:Modifier[41960-41967]"
  }, {
    "left" : "SavedState",
    "right" : "SavedState",
    "info" : "SimpleName[41522-41532]:SimpleName[41968-41978]"
  }, {
    "left" : "Parcel in",
    "right" : "Parcel in",
    "info" : "SingleVariableDeclaration[41533-41542]:SingleVariableDeclaration[41979-41988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41544-42019]:Block[41990-42465]"
  }, {
    "left" : "super(in);",
    "right" : "super(in);",
    "info" : "SuperConstructorInvocation[41558-41568]:SuperConstructorInvocation[42004-42014]"
  }, {
    "left" : "mSerializedPattern = in.readString();",
    "right" : "mSerializedPattern = in.readString();",
    "info" : "ExpressionStatement[41581-41618]:ExpressionStatement[42027-42064]"
  }, {
    "left" : "mDisplayMode = in.readInt();",
    "right" : "mDisplayMode = in.readInt();",
    "info" : "ExpressionStatement[41631-41659]:ExpressionStatement[42077-42105]"
  }, {
    "left" : "mPatternSize = (byte) in.readByte();",
    "right" : "mPatternSize = (byte) in.readByte();",
    "info" : "ExpressionStatement[41672-41708]:ExpressionStatement[42118-42154]"
  }, {
    "left" : "mInputEnabled = (Boolean) in.readValue(null);",
    "right" : "mInputEnabled = (Boolean) in.readValue(null);",
    "info" : "ExpressionStatement[41721-41766]:ExpressionStatement[42167-42212]"
  }, {
    "left" : "mInStealthMode = (Boolean) in.readValue(null);",
    "right" : "mInStealthMode = (Boolean) in.readValue(null);",
    "info" : "ExpressionStatement[41779-41825]:ExpressionStatement[42225-42271]"
  }, {
    "left" : "mTactileFeedbackEnabled = (Boolean) in.readValue(null);",
    "right" : "mTactileFeedbackEnabled = (Boolean) in.readValue(null);",
    "info" : "ExpressionStatement[41838-41893]:ExpressionStatement[42284-42339]"
  }, {
    "left" : "mVisibleDots = (Boolean) in.readValue(null);",
    "right" : "mVisibleDots = (Boolean) in.readValue(null);",
    "info" : "ExpressionStatement[41906-41950]:ExpressionStatement[42352-42396]"
  }, {
    "left" : "mShowErrorPath = (Boolean) in.readValue(null);",
    "right" : "mShowErrorPath = (Boolean) in.readValue(null);",
    "info" : "ExpressionStatement[41963-42009]:ExpressionStatement[42409-42455]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42029-42035]:Modifier[42475-42481]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[42036-42042]:SimpleType[42482-42488]"
  }, {
    "left" : "getSerializedPattern",
    "right" : "getSerializedPattern",
    "info" : "SimpleName[42043-42063]:SimpleName[42489-42509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42066-42116]:Block[42512-42562]"
  }, {
    "left" : "return mSerializedPattern;",
    "right" : "return mSerializedPattern;",
    "info" : "ReturnStatement[42080-42106]:ReturnStatement[42526-42552]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42126-42132]:Modifier[42572-42578]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[42133-42136]:PrimitiveType[42579-42582]"
  }, {
    "left" : "getDisplayMode",
    "right" : "getDisplayMode",
    "info" : "SimpleName[42137-42151]:SimpleName[42583-42597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42154-42198]:Block[42600-42644]"
  }, {
    "left" : "return mDisplayMode;",
    "right" : "return mDisplayMode;",
    "info" : "ReturnStatement[42168-42188]:ReturnStatement[42614-42634]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42208-42214]:Modifier[42654-42660]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[42215-42219]:PrimitiveType[42661-42665]"
  }, {
    "left" : "getPatternSize",
    "right" : "getPatternSize",
    "info" : "SimpleName[42220-42234]:SimpleName[42666-42680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42237-42281]:Block[42683-42727]"
  }, {
    "left" : "return mPatternSize;",
    "right" : "return mPatternSize;",
    "info" : "ReturnStatement[42251-42271]:ReturnStatement[42697-42717]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42291-42297]:Modifier[42737-42743]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42298-42305]:PrimitiveType[42744-42751]"
  }, {
    "left" : "isInputEnabled",
    "right" : "isInputEnabled",
    "info" : "SimpleName[42306-42320]:SimpleName[42752-42766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42323-42368]:Block[42769-42814]"
  }, {
    "left" : "return mInputEnabled;",
    "right" : "return mInputEnabled;",
    "info" : "ReturnStatement[42337-42358]:ReturnStatement[42783-42804]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42378-42384]:Modifier[42824-42830]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42385-42392]:PrimitiveType[42831-42838]"
  }, {
    "left" : "isInStealthMode",
    "right" : "isInStealthMode",
    "info" : "SimpleName[42393-42408]:SimpleName[42839-42854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42411-42457]:Block[42857-42903]"
  }, {
    "left" : "return mInStealthMode;",
    "right" : "return mInStealthMode;",
    "info" : "ReturnStatement[42425-42447]:ReturnStatement[42871-42893]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42467-42473]:Modifier[42913-42919]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42474-42481]:PrimitiveType[42920-42927]"
  }, {
    "left" : "isTactileFeedbackEnabled",
    "right" : "isTactileFeedbackEnabled",
    "info" : "SimpleName[42482-42506]:SimpleName[42928-42952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42508-42563]:Block[42954-43009]"
  }, {
    "left" : "return mTactileFeedbackEnabled;",
    "right" : "return mTactileFeedbackEnabled;",
    "info" : "ReturnStatement[42522-42553]:ReturnStatement[42968-42999]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42573-42579]:Modifier[43019-43025]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42580-42587]:PrimitiveType[43026-43033]"
  }, {
    "left" : "isVisibleDots",
    "right" : "isVisibleDots",
    "info" : "SimpleName[42588-42601]:SimpleName[43034-43047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42604-42648]:Block[43050-43094]"
  }, {
    "left" : "return mVisibleDots;",
    "right" : "return mVisibleDots;",
    "info" : "ReturnStatement[42618-42638]:ReturnStatement[43064-43084]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42658-42664]:Modifier[43104-43110]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42665-42672]:PrimitiveType[43111-43118]"
  }, {
    "left" : "isShowErrorPath",
    "right" : "isShowErrorPath",
    "info" : "SimpleName[42673-42688]:SimpleName[43119-43134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42691-42737]:Block[43137-43183]"
  }, {
    "left" : "return mShowErrorPath;",
    "right" : "return mShowErrorPath;",
    "info" : "ReturnStatement[42705-42727]:ReturnStatement[43151-43173]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[42747-42756]:MarkerAnnotation[43193-43202]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42765-42771]:Modifier[43211-43217]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42772-42776]:PrimitiveType[43218-43222]"
  }, {
    "left" : "writeToParcel",
    "right" : "writeToParcel",
    "info" : "SimpleName[42777-42790]:SimpleName[43223-43236]"
  }, {
    "left" : "Parcel dest",
    "right" : "Parcel dest",
    "info" : "SingleVariableDeclaration[42791-42802]:SingleVariableDeclaration[43237-43248]"
  }, {
    "left" : "int flags",
    "right" : "int flags",
    "info" : "SingleVariableDeclaration[42804-42813]:SingleVariableDeclaration[43250-43259]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42815-43236]:Block[43261-43682]"
  }, {
    "left" : "super.writeToParcel(dest, flags);",
    "right" : "super.writeToParcel(dest, flags);",
    "info" : "ExpressionStatement[42829-42862]:ExpressionStatement[43275-43308]"
  }, {
    "left" : "dest.writeString(mSerializedPattern);",
    "right" : "dest.writeString(mSerializedPattern);",
    "info" : "ExpressionStatement[42875-42912]:ExpressionStatement[43321-43358]"
  }, {
    "left" : "dest.writeInt(mDisplayMode);",
    "right" : "dest.writeInt(mDisplayMode);",
    "info" : "ExpressionStatement[42925-42953]:ExpressionStatement[43371-43399]"
  }, {
    "left" : "dest.writeByte(mPatternSize);",
    "right" : "dest.writeByte(mPatternSize);",
    "info" : "ExpressionStatement[42966-42995]:ExpressionStatement[43412-43441]"
  }, {
    "left" : "dest.writeValue(mInputEnabled);",
    "right" : "dest.writeValue(mInputEnabled);",
    "info" : "ExpressionStatement[43008-43039]:ExpressionStatement[43454-43485]"
  }, {
    "left" : "dest.writeValue(mInStealthMode);",
    "right" : "dest.writeValue(mInStealthMode);",
    "info" : "ExpressionStatement[43052-43084]:ExpressionStatement[43498-43530]"
  }, {
    "left" : "dest.writeValue(mTactileFeedbackEnabled);",
    "right" : "dest.writeValue(mTactileFeedbackEnabled);",
    "info" : "ExpressionStatement[43097-43138]:ExpressionStatement[43543-43584]"
  }, {
    "left" : "dest.writeValue(mVisibleDots);",
    "right" : "dest.writeValue(mVisibleDots);",
    "info" : "ExpressionStatement[43151-43181]:ExpressionStatement[43597-43627]"
  }, {
    "left" : "dest.writeValue(mShowErrorPath);",
    "right" : "dest.writeValue(mShowErrorPath);",
    "info" : "ExpressionStatement[43194-43226]:ExpressionStatement[43640-43672]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43371-43377]:Modifier[43817-43823]"
  }, {
    "left" : "SavedState",
    "right" : "SavedState",
    "info" : "SimpleType[43378-43388]:SimpleType[43824-43834]"
  }, {
    "left" : "createFromParcel",
    "right" : "createFromParcel",
    "info" : "SimpleName[43389-43405]:SimpleName[43835-43851]"
  }, {
    "left" : "Parcel in",
    "right" : "Parcel in",
    "info" : "SingleVariableDeclaration[43406-43415]:SingleVariableDeclaration[43852-43861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43417-43491]:Block[43863-43937]"
  }, {
    "left" : "return new SavedState(in);",
    "right" : "return new SavedState(in);",
    "info" : "ReturnStatement[43443-43469]:ReturnStatement[43889-43915]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43513-43519]:Modifier[43959-43965]"
  }, {
    "left" : "SavedState[]",
    "right" : "SavedState[]",
    "info" : "ArrayType[43520-43532]:ArrayType[43966-43978]"
  }, {
    "left" : "newArray",
    "right" : "newArray",
    "info" : "SimpleName[43533-43541]:SimpleName[43979-43987]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[43542-43550]:SingleVariableDeclaration[43988-43996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43552-43628]:Block[43998-44074]"
  }, {
    "left" : "return new SavedState[size];",
    "right" : "return new SavedState[size];",
    "info" : "ReturnStatement[43578-43606]:ReturnStatement[44024-44052]"
  } ]
}