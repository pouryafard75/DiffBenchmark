{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CallbacksTest",
      "right" : "CallbacksTest",
      "info" : "TypeDeclaration[958-10924]:TypeDeclaration[823-7226]"
    }, {
      "left" : "public void testCallbackMethod() throws Exception",
      "right" : "public void testCallbackMethod() throws Exception",
      "info" : "MethodDeclaration[1099-1749]:MethodDeclaration[964-1614]"
    }, {
      "left" : "public void testEntityListener() throws Exception",
      "right" : "public void testEntityListener() throws Exception",
      "info" : "MethodDeclaration[1752-2577]:MethodDeclaration[1617-2442]"
    }, {
      "left" : "public void testPostPersist() throws Exception",
      "right" : "public void testPostPersist() throws Exception",
      "info" : "MethodDeclaration[2580-3007]:MethodDeclaration[2445-2872]"
    }, {
      "left" : "public void listenerAnnotation() throws Exception",
      "right" : "public void listenerAnnotation() throws Exception",
      "info" : "MethodDeclaration[3083-3585]:MethodDeclaration[2948-3450]"
    }, {
      "left" : "public void testPrePersistOnCascade() throws Exception",
      "right" : "public void testPrePersistOnCascade() throws Exception",
      "info" : "MethodDeclaration[3588-3985]:MethodDeclaration[3453-3850]"
    }, {
      "left" : "public void testCallBackListenersHierarchy() throws Exception",
      "right" : "public void testCallBackListenersHierarchy() throws Exception",
      "info" : "MethodDeclaration[3988-4396]:MethodDeclaration[3853-4261]"
    }, {
      "left" : "public void testException() throws Exception",
      "right" : "public void testException() throws Exception",
      "info" : "MethodDeclaration[4399-4863]:MethodDeclaration[4264-4728]"
    }, {
      "left" : "public void testIdNullSetByPrePersist() throws Exception",
      "right" : "public void testIdNullSetByPrePersist() throws Exception",
      "info" : "MethodDeclaration[4866-5176]:MethodDeclaration[4731-5041]"
    }, {
      "left" : "public void testPostUpdateCollection() throws Exception",
      "right" : "public void testPostUpdateCollection() throws Exception",
      "info" : "MethodDeclaration[5180-7141]:MethodDeclaration[5045-7006]"
    }, {
      "left" : "public Class[] getAnnotatedClasses()",
      "right" : "public Class[] getAnnotatedClasses()",
      "info" : "MethodDeclaration[7144-7393]:MethodDeclaration[7009-7224]"
    } ],
    "mappings" : [
 {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[994-1024]:SingleMemberAnnotation[859-889]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1025-1031]:Modifier[890-896]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1032-1037]:TYPE_DECLARATION_KIND[897-902]"
    }, {
      "left" : "CallbacksTest",
      "right" : "CallbacksTest",
      "info" : "SimpleName[1038-1051]:SimpleName[903-916]"
    }, {
      "left" : "BaseEntityManagerFunctionalTestCase",
      "right" : "BaseEntityManagerFunctionalTestCase",
      "info" : "SimpleType[1060-1095]:SimpleType[925-960]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[1099-1104]:MarkerAnnotation[964-969]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1106-1112]:Modifier[971-977]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1113-1117]:PrimitiveType[978-982]"
    }, {
      "left" : "testCallbackMethod",
      "right" : "testCallbackMethod",
      "info" : "SimpleName[1118-1136]:SimpleName[983-1001]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1146-1155]:SimpleType[1011-1020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1156-1749]:Block[1021-1614]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[1160-1206]:VariableDeclarationStatement[1025-1071]"
    }, {
      "left" : "Cat c = new Cat();",
      "right" : "Cat c = new Cat();",
      "info" : "VariableDeclarationStatement[1209-1227]:VariableDeclarationStatement[1074-1092]"
    }, {
      "left" : "c.setName( \"Kitty\" );",
      "right" : "c.setName( \"Kitty\" );",
      "info" : "ExpressionStatement[1230-1251]:ExpressionStatement[1095-1116]"
    }, {
      "left" : "c.setDateOfBirth( new Date( 90, 11, 15 ) );",
      "right" : "c.setDateOfBirth( new Date( 90, 11, 15 ) );",
      "info" : "ExpressionStatement[1254-1297]:ExpressionStatement[1119-1162]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[1300-1328]:ExpressionStatement[1165-1193]"
    }, {
      "left" : "em.persist( c );",
      "right" : "em.persist( c );",
      "info" : "ExpressionStatement[1331-1347]:ExpressionStatement[1196-1212]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[1350-1379]:ExpressionStatement[1215-1244]"
    }, {
      "left" : "em.clear();",
      "right" : "em.clear();",
      "info" : "ExpressionStatement[1382-1393]:ExpressionStatement[1247-1258]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[1396-1424]:ExpressionStatement[1261-1289]"
    }, {
      "left" : "c = em.find( Cat.class, c.getId() );",
      "right" : "c = em.find( Cat.class, c.getId() );",
      "info" : "ExpressionStatement[1427-1463]:ExpressionStatement[1292-1328]"
    }, {
      "left" : "assertFalse( c.getAge() == 0 );",
      "right" : "assertFalse( c.getAge() == 0 );",
      "info" : "ExpressionStatement[1466-1497]:ExpressionStatement[1331-1362]"
    }, {
      "left" : "c.setName( \"Tomcat\" );",
      "right" : "c.setName( \"Tomcat\" );",
      "info" : "ExpressionStatement[1500-1522]:ExpressionStatement[1365-1387]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[1546-1575]:ExpressionStatement[1411-1440]"
    }, {
      "left" : "em.clear();",
      "right" : "em.clear();",
      "info" : "ExpressionStatement[1578-1589]:ExpressionStatement[1443-1454]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[1592-1620]:ExpressionStatement[1457-1485]"
    }, {
      "left" : "c = em.find( Cat.class, c.getId() );",
      "right" : "c = em.find( Cat.class, c.getId() );",
      "info" : "ExpressionStatement[1623-1659]:ExpressionStatement[1488-1524]"
    }, {
      "left" : "assertEquals( \"Tomcat\", c.getName() );",
      "right" : "assertEquals( \"Tomcat\", c.getName() );",
      "info" : "ExpressionStatement[1662-1700]:ExpressionStatement[1527-1565]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[1703-1732]:ExpressionStatement[1568-1597]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[1735-1746]:ExpressionStatement[1600-1611]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[1752-1757]:MarkerAnnotation[1617-1622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1759-1765]:Modifier[1624-1630]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1766-1770]:PrimitiveType[1631-1635]"
    }, {
      "left" : "testEntityListener",
      "right" : "testEntityListener",
      "info" : "SimpleName[1771-1789]:SimpleName[1636-1654]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1799-1808]:SimpleType[1664-1673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1809-2577]:Block[1674-2442]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[1813-1859]:VariableDeclarationStatement[1678-1724]"
    }, {
      "left" : "Cat c = new Cat();",
      "right" : "Cat c = new Cat();",
      "info" : "VariableDeclarationStatement[1862-1880]:VariableDeclarationStatement[1727-1745]"
    }, {
      "left" : "c.setName( \"Kitty\" );",
      "right" : "c.setName( \"Kitty\" );",
      "info" : "ExpressionStatement[1883-1904]:ExpressionStatement[1748-1769]"
    }, {
      "left" : "c.setLength( 12 );",
      "right" : "c.setLength( 12 );",
      "info" : "ExpressionStatement[1907-1925]:ExpressionStatement[1772-1790]"
    }, {
      "left" : "c.setDateOfBirth( new Date( 90, 11, 15 ) );",
      "right" : "c.setDateOfBirth( new Date( 90, 11, 15 ) );",
      "info" : "ExpressionStatement[1928-1971]:ExpressionStatement[1793-1836]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[1974-2002]:ExpressionStatement[1839-1867]"
    }, {
      "left" : "int previousVersion = c.getManualVersion();",
      "right" : "int previousVersion = c.getManualVersion();",
      "info" : "VariableDeclarationStatement[2005-2048]:VariableDeclarationStatement[1870-1913]"
    }, {
      "left" : "em.persist( c );",
      "right" : "em.persist( c );",
      "info" : "ExpressionStatement[2051-2067]:ExpressionStatement[1916-1932]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[2070-2099]:ExpressionStatement[1935-1964]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[2102-2130]:ExpressionStatement[1967-1995]"
    }, {
      "left" : "c = em.find( Cat.class, c.getId() );",
      "right" : "c = em.find( Cat.class, c.getId() );",
      "info" : "ExpressionStatement[2133-2169]:ExpressionStatement[1998-2034]"
    }, {
      "left" : "assertNotNull( c.getLastUpdate() );",
      "right" : "assertNotNull( c.getLastUpdate() );",
      "info" : "ExpressionStatement[2172-2207]:ExpressionStatement[2037-2072]"
    }, {
      "left" : "assertTrue( previousVersion < c.getManualVersion() );",
      "right" : "assertTrue( previousVersion < c.getManualVersion() );",
      "info" : "ExpressionStatement[2210-2263]:ExpressionStatement[2075-2128]"
    }, {
      "left" : "assertEquals( 12, c.getLength() );",
      "right" : "assertEquals( 12, c.getLength() );",
      "info" : "ExpressionStatement[2266-2300]:ExpressionStatement[2131-2165]"
    }, {
      "left" : "previousVersion = c.getManualVersion();",
      "right" : "previousVersion = c.getManualVersion();",
      "info" : "ExpressionStatement[2303-2342]:ExpressionStatement[2168-2207]"
    }, {
      "left" : "c.setName( \"new name\" );",
      "right" : "c.setName( \"new name\" );",
      "info" : "ExpressionStatement[2345-2369]:ExpressionStatement[2210-2234]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[2372-2401]:ExpressionStatement[2237-2266]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[2404-2432]:ExpressionStatement[2269-2297]"
    }, {
      "left" : "c = em.find( Cat.class, c.getId() );",
      "right" : "c = em.find( Cat.class, c.getId() );",
      "info" : "ExpressionStatement[2435-2471]:ExpressionStatement[2300-2336]"
    }, {
      "left" : "assertTrue( previousVersion < c.getManualVersion() );",
      "right" : "assertTrue( previousVersion < c.getManualVersion() );",
      "info" : "ExpressionStatement[2474-2527]:ExpressionStatement[2339-2392]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[2530-2559]:ExpressionStatement[2395-2424]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[2563-2574]:ExpressionStatement[2428-2439]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[2580-2585]:MarkerAnnotation[2445-2450]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2587-2593]:Modifier[2452-2458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2594-2598]:PrimitiveType[2459-2463]"
    }, {
      "left" : "testPostPersist",
      "right" : "testPostPersist",
      "info" : "SimpleName[2599-2614]:SimpleName[2464-2479]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2624-2633]:SimpleType[2489-2498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2634-3007]:Block[2499-2872]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[2638-2684]:VariableDeclarationStatement[2503-2549]"
    }, {
      "left" : "Cat c = new Cat();",
      "right" : "Cat c = new Cat();",
      "info" : "VariableDeclarationStatement[2687-2705]:VariableDeclarationStatement[2552-2570]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[2708-2736]:ExpressionStatement[2573-2601]"
    }, {
      "left" : "c.setLength( 23 );",
      "right" : "c.setLength( 23 );",
      "info" : "ExpressionStatement[2739-2757]:ExpressionStatement[2604-2622]"
    }, {
      "left" : "c.setAge( 2 );",
      "right" : "c.setAge( 2 );",
      "info" : "ExpressionStatement[2760-2774]:ExpressionStatement[2625-2639]"
    }, {
      "left" : "c.setName( \"Beetle\" );",
      "right" : "c.setName( \"Beetle\" );",
      "info" : "ExpressionStatement[2777-2799]:ExpressionStatement[2642-2664]"
    }, {
      "left" : "c.setDateOfBirth( new Date() );",
      "right" : "c.setDateOfBirth( new Date() );",
      "info" : "ExpressionStatement[2802-2833]:ExpressionStatement[2667-2698]"
    }, {
      "left" : "em.persist( c );",
      "right" : "em.persist( c );",
      "info" : "ExpressionStatement[2836-2852]:ExpressionStatement[2701-2717]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[2855-2884]:ExpressionStatement[2720-2749]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[2887-2898]:ExpressionStatement[2752-2763]"
    }, {
      "left" : "List ids = Cat.getIdList();",
      "right" : "List ids = Cat.getIdList();",
      "info" : "VariableDeclarationStatement[2901-2928]:VariableDeclarationStatement[2766-2793]"
    }, {
      "left" : "Object id = Cat.getIdList().get( ids.size() - 1 );",
      "right" : "Object id = Cat.getIdList().get( ids.size() - 1 );",
      "info" : "VariableDeclarationStatement[2931-2981]:VariableDeclarationStatement[2796-2846]"
    }, {
      "left" : "assertNotNull( id );",
      "right" : "assertNotNull( id );",
      "info" : "ExpressionStatement[2984-3004]:ExpressionStatement[2849-2869]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3083-3089]:Modifier[2948-2954]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3090-3094]:PrimitiveType[2955-2959]"
    }, {
      "left" : "listenerAnnotation",
      "right" : "listenerAnnotation",
      "info" : "SimpleName[3095-3113]:SimpleName[2960-2978]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[3123-3132]:SimpleType[2988-2997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3133-3585]:Block[2998-3450]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[3137-3183]:VariableDeclarationStatement[3002-3048]"
    }, {
      "left" : "Translation tl = new Translation();",
      "right" : "Translation tl = new Translation();",
      "info" : "VariableDeclarationStatement[3186-3221]:VariableDeclarationStatement[3051-3086]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[3224-3252]:ExpressionStatement[3089-3117]"
    }, {
      "left" : "tl.setInto( \"France\" );",
      "right" : "tl.setInto( \"France\" );",
      "info" : "ExpressionStatement[3255-3278]:ExpressionStatement[3120-3143]"
    }, {
      "left" : "em.persist( tl );",
      "right" : "em.persist( tl );",
      "info" : "ExpressionStatement[3281-3298]:ExpressionStatement[3146-3163]"
    }, {
      "left" : "tl = new Translation();",
      "right" : "tl = new Translation();",
      "info" : "ExpressionStatement[3301-3324]:ExpressionStatement[3166-3189]"
    }, {
      "left" : "tl.setInto( \"Bimboland\" );",
      "right" : "tl.setInto( \"Bimboland\" );",
      "info" : "ExpressionStatement[3327-3353]:ExpressionStatement[3192-3218]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3356-3582]:TryStatement[3221-3447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3360-3460]:Block[3225-3325]"
    }, {
      "left" : "em.persist( tl );",
      "right" : "em.persist( tl );",
      "info" : "ExpressionStatement[3365-3382]:ExpressionStatement[3230-3247]"
    }, {
      "left" : "em.flush();",
      "right" : "em.flush();",
      "info" : "ExpressionStatement[3386-3397]:ExpressionStatement[3251-3262]"
    }, {
      "left" : "fail( \"Annotations annotated by a listener not used\" );",
      "right" : "fail( \"Annotations annotated by a listener not used\" );",
      "info" : "ExpressionStatement[3401-3456]:ExpressionStatement[3266-3321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3498-3516]:Block[3363-3381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3527-3582]:Block[3392-3447]"
    }, {
      "left" : "em.getTransaction().rollback();",
      "right" : "em.getTransaction().rollback();",
      "info" : "ExpressionStatement[3532-3563]:ExpressionStatement[3397-3428]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[3567-3578]:ExpressionStatement[3432-3443]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[3588-3593]:MarkerAnnotation[3453-3458]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3595-3601]:Modifier[3460-3466]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3602-3606]:PrimitiveType[3467-3471]"
    }, {
      "left" : "testPrePersistOnCascade",
      "right" : "testPrePersistOnCascade",
      "info" : "SimpleName[3607-3630]:SimpleName[3472-3495]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[3640-3649]:SimpleType[3505-3514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3650-3985]:Block[3515-3850]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[3654-3700]:VariableDeclarationStatement[3519-3565]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[3703-3731]:ExpressionStatement[3568-3596]"
    }, {
      "left" : "Television tv = new Television();",
      "right" : "Television tv = new Television();",
      "info" : "VariableDeclarationStatement[3734-3767]:VariableDeclarationStatement[3599-3632]"
    }, {
      "left" : "RemoteControl rc = new RemoteControl();",
      "right" : "RemoteControl rc = new RemoteControl();",
      "info" : "VariableDeclarationStatement[3770-3809]:VariableDeclarationStatement[3635-3674]"
    }, {
      "left" : "em.persist( tv );",
      "right" : "em.persist( tv );",
      "info" : "ExpressionStatement[3812-3829]:ExpressionStatement[3677-3694]"
    }, {
      "left" : "em.flush();",
      "right" : "em.flush();",
      "info" : "ExpressionStatement[3832-3843]:ExpressionStatement[3697-3708]"
    }, {
      "left" : "tv.setControl( rc );",
      "right" : "tv.setControl( rc );",
      "info" : "ExpressionStatement[3846-3866]:ExpressionStatement[3711-3731]"
    }, {
      "left" : "tv.init();",
      "right" : "tv.init();",
      "info" : "ExpressionStatement[3869-3879]:ExpressionStatement[3734-3744]"
    }, {
      "left" : "em.flush();",
      "right" : "em.flush();",
      "info" : "ExpressionStatement[3882-3893]:ExpressionStatement[3747-3758]"
    }, {
      "left" : "assertNotNull( rc.getCreationDate() );",
      "right" : "assertNotNull( rc.getCreationDate() );",
      "info" : "ExpressionStatement[3896-3934]:ExpressionStatement[3761-3799]"
    }, {
      "left" : "em.getTransaction().rollback();",
      "right" : "em.getTransaction().rollback();",
      "info" : "ExpressionStatement[3937-3968]:ExpressionStatement[3802-3833]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[3971-3982]:ExpressionStatement[3836-3847]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[3988-3993]:MarkerAnnotation[3853-3858]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3995-4001]:Modifier[3860-3866]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4002-4006]:PrimitiveType[3867-3871]"
    }, {
      "left" : "testCallBackListenersHierarchy",
      "right" : "testCallBackListenersHierarchy",
      "info" : "SimpleName[4007-4037]:SimpleName[3872-3902]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4047-4056]:SimpleType[3912-3921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4396]:Block[3922-4261]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[4061-4107]:VariableDeclarationStatement[3926-3972]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[4110-4138]:ExpressionStatement[3975-4003]"
    }, {
      "left" : "Television tv = new Television();",
      "right" : "Television tv = new Television();",
      "info" : "VariableDeclarationStatement[4141-4174]:VariableDeclarationStatement[4006-4039]"
    }, {
      "left" : "em.persist( tv );",
      "right" : "em.persist( tv );",
      "info" : "ExpressionStatement[4177-4194]:ExpressionStatement[4042-4059]"
    }, {
      "left" : "tv.setName( \"Myaio\" );",
      "right" : "tv.setName( \"Myaio\" );",
      "info" : "ExpressionStatement[4197-4219]:ExpressionStatement[4062-4084]"
    }, {
      "left" : "tv.init();",
      "right" : "tv.init();",
      "info" : "ExpressionStatement[4222-4232]:ExpressionStatement[4087-4097]"
    }, {
      "left" : "em.flush();",
      "right" : "em.flush();",
      "info" : "ExpressionStatement[4235-4246]:ExpressionStatement[4100-4111]"
    }, {
      "left" : "assertEquals( 1, tv.counter );",
      "right" : "assertEquals( 1, tv.counter );",
      "info" : "ExpressionStatement[4249-4279]:ExpressionStatement[4114-4144]"
    }, {
      "left" : "em.getTransaction().rollback();",
      "right" : "em.getTransaction().rollback();",
      "info" : "ExpressionStatement[4282-4313]:ExpressionStatement[4147-4178]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[4316-4327]:ExpressionStatement[4181-4192]"
    }, {
      "left" : "assertEquals( 5, tv.communication );",
      "right" : "assertEquals( 5, tv.communication );",
      "info" : "ExpressionStatement[4330-4366]:ExpressionStatement[4195-4231]"
    }, {
      "left" : "assertTrue( tv.isLast );",
      "right" : "assertTrue( tv.isLast );",
      "info" : "ExpressionStatement[4369-4393]:ExpressionStatement[4234-4258]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[4399-4404]:MarkerAnnotation[4264-4269]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4406-4412]:Modifier[4271-4277]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4413-4417]:PrimitiveType[4278-4282]"
    }, {
      "left" : "testException",
      "right" : "testException",
      "info" : "SimpleName[4418-4431]:SimpleName[4283-4296]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4441-4450]:SimpleType[4306-4315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4451-4863]:Block[4316-4728]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[4455-4501]:VariableDeclarationStatement[4320-4366]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[4504-4532]:ExpressionStatement[4369-4397]"
    }, {
      "left" : "Rythm r = new Rythm();",
      "right" : "Rythm r = new Rythm();",
      "info" : "VariableDeclarationStatement[4535-4557]:VariableDeclarationStatement[4400-4422]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4560-4810]:TryStatement[4425-4675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4564-4659]:Block[4429-4524]"
    }, {
      "left" : "em.persist( r );",
      "right" : "em.persist( r );",
      "info" : "ExpressionStatement[4569-4585]:ExpressionStatement[4434-4450]"
    }, {
      "left" : "em.flush();",
      "right" : "em.flush();",
      "info" : "ExpressionStatement[4589-4600]:ExpressionStatement[4454-4465]"
    }, {
      "left" : "fail(\"should have raised an ArythmeticException:\");",
      "right" : "fail(\"should have raised an ArythmeticException:\");",
      "info" : "ExpressionStatement[4604-4655]:ExpressionStatement[4469-4520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4692-4710]:Block[4557-4575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4734-4810]:Block[4599-4675]"
    }, {
      "left" : "fail(\"should have raised an ArythmeticException:\" + e.getClass() );",
      "right" : "fail(\"should have raised an ArythmeticException:\" + e.getClass() );",
      "info" : "ExpressionStatement[4739-4806]:ExpressionStatement[4604-4671]"
    }, {
      "left" : "em.getTransaction().rollback();",
      "right" : "em.getTransaction().rollback();",
      "info" : "ExpressionStatement[4814-4845]:ExpressionStatement[4679-4710]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[4848-4859]:ExpressionStatement[4713-4724]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[4866-4871]:MarkerAnnotation[4731-4736]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4873-4879]:Modifier[4738-4744]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4880-4884]:PrimitiveType[4745-4749]"
    }, {
      "left" : "testIdNullSetByPrePersist",
      "right" : "testIdNullSetByPrePersist",
      "info" : "SimpleName[4885-4910]:SimpleName[4750-4775]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4920-4929]:SimpleType[4785-4794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4930-5176]:Block[4795-5041]"
    }, {
      "left" : "Plant plant = new Plant();",
      "right" : "Plant plant = new Plant();",
      "info" : "VariableDeclarationStatement[4934-4960]:VariableDeclarationStatement[4799-4825]"
    }, {
      "left" : "plant.setName( \"Origuna plantula gigantic\" );",
      "right" : "plant.setName( \"Origuna plantula gigantic\" );",
      "info" : "ExpressionStatement[4963-5008]:ExpressionStatement[4828-4873]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[5011-5057]:VariableDeclarationStatement[4876-4922]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[5060-5088]:ExpressionStatement[4925-4953]"
    }, {
      "left" : "em.persist( plant );",
      "right" : "em.persist( plant );",
      "info" : "ExpressionStatement[5091-5111]:ExpressionStatement[4956-4976]"
    }, {
      "left" : "em.flush();",
      "right" : "em.flush();",
      "info" : "ExpressionStatement[5114-5125]:ExpressionStatement[4979-4990]"
    }, {
      "left" : "em.getTransaction().rollback();",
      "right" : "em.getTransaction().rollback();",
      "info" : "ExpressionStatement[5128-5159]:ExpressionStatement[4993-5024]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[5162-5173]:ExpressionStatement[5027-5038]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[5180-5185]:MarkerAnnotation[5045-5050]"
    }, {
      "left" : "@FailureExpected(message = \"collection change does not trigger an event\", jiraKey = \"EJB-288\")",
      "right" : "@FailureExpected(message = \"collection change does not trigger an event\", jiraKey = \"EJB-288\")",
      "info" : "NormalAnnotation[5187-5281]:NormalAnnotation[5052-5146]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5283-5289]:Modifier[5148-5154]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5290-5294]:PrimitiveType[5155-5159]"
    }, {
      "left" : "testPostUpdateCollection",
      "right" : "testPostUpdateCollection",
      "info" : "SimpleName[5295-5319]:SimpleName[5160-5184]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[5329-5338]:SimpleType[5194-5203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5339-7141]:Block[5204-7006]"
    }, {
      "left" : "EntityManager em = getOrCreateEntityManager();",
      "right" : "EntityManager em = getOrCreateEntityManager();",
      "info" : "VariableDeclarationStatement[5361-5407]:VariableDeclarationStatement[5226-5272]"
    }, {
      "left" : "Cat cat = new Cat();",
      "right" : "Cat cat = new Cat();",
      "info" : "VariableDeclarationStatement[5410-5430]:VariableDeclarationStatement[5275-5295]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[5433-5461]:ExpressionStatement[5298-5326]"
    }, {
      "left" : "cat.setLength( 23 );",
      "right" : "cat.setLength( 23 );",
      "info" : "ExpressionStatement[5464-5484]:ExpressionStatement[5329-5349]"
    }, {
      "left" : "cat.setAge( 2 );",
      "right" : "cat.setAge( 2 );",
      "info" : "ExpressionStatement[5487-5503]:ExpressionStatement[5352-5368]"
    }, {
      "left" : "cat.setName( \"Beetle\" );",
      "right" : "cat.setName( \"Beetle\" );",
      "info" : "ExpressionStatement[5506-5530]:ExpressionStatement[5371-5395]"
    }, {
      "left" : "cat.setDateOfBirth( new Date() );",
      "right" : "cat.setDateOfBirth( new Date() );",
      "info" : "ExpressionStatement[5533-5566]:ExpressionStatement[5398-5431]"
    }, {
      "left" : "em.persist( cat );",
      "right" : "em.persist( cat );",
      "info" : "ExpressionStatement[5569-5587]:ExpressionStatement[5434-5452]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[5590-5619]:ExpressionStatement[5455-5484]"
    }, {
      "left" : "List ids = Cat.getIdList();",
      "right" : "List ids = Cat.getIdList();",
      "info" : "VariableDeclarationStatement[5651-5678]:VariableDeclarationStatement[5516-5543]"
    }, {
      "left" : "Object id = Cat.getIdList().get( ids.size() - 1 );",
      "right" : "Object id = Cat.getIdList().get( ids.size() - 1 );",
      "info" : "VariableDeclarationStatement[5681-5731]:VariableDeclarationStatement[5546-5596]"
    }, {
      "left" : "assertNotNull( id );",
      "right" : "assertNotNull( id );",
      "info" : "ExpressionStatement[5734-5754]:ExpressionStatement[5599-5619]"
    }, {
      "left" : "int postVersion = Cat.postVersion;",
      "right" : "int postVersion = Cat.postVersion;",
      "info" : "VariableDeclarationStatement[5826-5860]:VariableDeclarationStatement[5691-5725]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[5863-5891]:ExpressionStatement[5728-5756]"
    }, {
      "left" : "Kitten kitty = new Kitten();",
      "right" : "Kitten kitty = new Kitten();",
      "info" : "VariableDeclarationStatement[5894-5922]:VariableDeclarationStatement[5759-5787]"
    }, {
      "left" : "kitty.setName(\"kitty\");",
      "right" : "kitty.setName(\"kitty\");",
      "info" : "ExpressionStatement[5925-5948]:ExpressionStatement[5790-5813]"
    }, {
      "left" : "List kittens = new ArrayList<Kitten>();",
      "right" : "List kittens = new ArrayList<Kitten>();",
      "info" : "VariableDeclarationStatement[5951-5990]:VariableDeclarationStatement[5816-5855]"
    }, {
      "left" : "kittens.add(kitty);",
      "right" : "kittens.add(kitty);",
      "info" : "ExpressionStatement[5993-6012]:ExpressionStatement[5858-5877]"
    }, {
      "left" : "cat.setKittens(kittens);",
      "right" : "cat.setKittens(kittens);",
      "info" : "ExpressionStatement[6015-6039]:ExpressionStatement[5880-5904]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[6042-6071]:ExpressionStatement[5907-5936]"
    }, {
      "left" : "assertEquals(\"Post version should have been incremented.\", postVersion + 1, Cat.postVersion);",
      "right" : "assertEquals(\"Post version should have been incremented.\", postVersion + 1, Cat.postVersion);",
      "info" : "ExpressionStatement[6074-6167]:ExpressionStatement[5939-6032]"
    }, {
      "left" : "postVersion = Cat.postVersion;",
      "right" : "postVersion = Cat.postVersion;",
      "info" : "ExpressionStatement[6233-6263]:ExpressionStatement[6098-6128]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[6266-6294]:ExpressionStatement[6131-6159]"
    }, {
      "left" : "Kitten tom = new Kitten();",
      "right" : "Kitten tom = new Kitten();",
      "info" : "VariableDeclarationStatement[6297-6323]:VariableDeclarationStatement[6162-6188]"
    }, {
      "left" : "tom.setName(\"Tom\");",
      "right" : "tom.setName(\"Tom\");",
      "info" : "ExpressionStatement[6326-6345]:ExpressionStatement[6191-6210]"
    }, {
      "left" : "cat.getKittens().add(tom);",
      "right" : "cat.getKittens().add(tom);",
      "info" : "ExpressionStatement[6348-6374]:ExpressionStatement[6213-6239]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[6377-6406]:ExpressionStatement[6242-6271]"
    }, {
      "left" : "assertEquals(\"Post version should have been incremented.\", postVersion + 1, Cat.postVersion);",
      "right" : "assertEquals(\"Post version should have been incremented.\", postVersion + 1, Cat.postVersion);",
      "info" : "ExpressionStatement[6409-6502]:ExpressionStatement[6274-6367]"
    }, {
      "left" : "postVersion = Cat.postVersion;",
      "right" : "postVersion = Cat.postVersion;",
      "info" : "ExpressionStatement[6563-6593]:ExpressionStatement[6428-6458]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[6596-6624]:ExpressionStatement[6461-6489]"
    }, {
      "left" : "cat.getKittens().remove(tom);",
      "right" : "cat.getKittens().remove(tom);",
      "info" : "ExpressionStatement[6627-6656]:ExpressionStatement[6492-6521]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[6659-6688]:ExpressionStatement[6524-6553]"
    }, {
      "left" : "assertEquals(\"Post version should have been incremented.\", postVersion + 1, Cat.postVersion);",
      "right" : "assertEquals(\"Post version should have been incremented.\", postVersion + 1, Cat.postVersion);",
      "info" : "ExpressionStatement[6691-6784]:ExpressionStatement[6556-6649]"
    }, {
      "left" : "postVersion = Cat.postVersion;",
      "right" : "postVersion = Cat.postVersion;",
      "info" : "ExpressionStatement[6891-6921]:ExpressionStatement[6756-6786]"
    }, {
      "left" : "em.getTransaction().begin();",
      "right" : "em.getTransaction().begin();",
      "info" : "ExpressionStatement[6924-6952]:ExpressionStatement[6789-6817]"
    }, {
      "left" : "cat.setKittens(new ArrayList<Kitten>());",
      "right" : "cat.setKittens(new ArrayList<Kitten>());",
      "info" : "ExpressionStatement[6955-6995]:ExpressionStatement[6820-6860]"
    }, {
      "left" : "em.getTransaction().commit();",
      "right" : "em.getTransaction().commit();",
      "info" : "ExpressionStatement[6998-7027]:ExpressionStatement[6863-6892]"
    }, {
      "left" : "assertEquals(\"Post version should have been incremented.\", postVersion + 2, Cat.postVersion);",
      "right" : "assertEquals(\"Post version should have been incremented.\", postVersion + 2, Cat.postVersion);",
      "info" : "ExpressionStatement[7030-7123]:ExpressionStatement[6895-6988]"
    }, {
      "left" : "em.close();",
      "right" : "em.close();",
      "info" : "ExpressionStatement[7127-7138]:ExpressionStatement[6992-7003]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7144-7153]:MarkerAnnotation[7009-7018]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7155-7161]:Modifier[7020-7026]"
    }, {
      "left" : "Class[]",
      "right" : "Class[]",
      "info" : "ArrayType[7162-7169]:ArrayType[7027-7034]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[7167-7169]:Dimension[7077-7079]"
    }, {
      "left" : "getAnnotatedClasses",
      "right" : "getAnnotatedClasses",
      "info" : "SimpleName[7170-7189]:SimpleName[7035-7054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7192-7393]:Block[7057-7224]"
    }, {
      "left" : "return new Class[]{\n\t\t\t\tCat.class,\n\t\t\t\tTranslation.class,\n\t\t\t\tTelevision.class,\n\t\t\t\tRemoteControl.class,\n\t\t\t\tRythm.class,\n\t\t\t\tPlant.class,\n\t\t\t\tKitten.class,\n\t\t\t\tEntityWithLazyProperty.class\n\t\t};",
      "right" : "return new Class[]{\n\t\t\t\tCat.class,\n\t\t\t\tTranslation.class,\n\t\t\t\tTelevision.class,\n\t\t\t\tRemoteControl.class,\n\t\t\t\tRythm.class,\n\t\t\t\tPlant.class,\n\t\t\t\tKitten.class\n\t\t};",
      "info" : "ReturnStatement[7196-7390]:ReturnStatement[7061-7221]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[7212-7214]:Dimension[7032-7034]"
    } ]
  },
  "interFileMappings" : { }
}