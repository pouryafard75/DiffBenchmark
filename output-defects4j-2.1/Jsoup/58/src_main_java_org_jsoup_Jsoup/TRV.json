{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private Jsoup()",
      "right" : "private Jsoup()",
      "info" : "MethodDeclaration[443-461]:MethodDeclaration[443-461]"
    }, {
      "left" : "public static Document parse(String html, String baseUri)",
      "right" : "public static Document parse(String html, String baseUri)",
      "info" : "MethodDeclaration[467-935]:MethodDeclaration[467-935]"
    }, {
      "left" : "public static Document parse(String html, String baseUri, Parser parser)",
      "right" : "public static Document parse(String html, String baseUri, Parser parser)",
      "info" : "MethodDeclaration[941-1536]:MethodDeclaration[941-1536]"
    }, {
      "left" : "public static Document parse(String html)",
      "right" : "public static Document parse(String html)",
      "info" : "MethodDeclaration[1542-1881]:MethodDeclaration[1542-1881]"
    }, {
      "left" : "public static Connection connect(String url)",
      "right" : "public static Connection connect(String url)",
      "info" : "MethodDeclaration[1887-2602]:MethodDeclaration[1887-2602]"
    }, {
      "left" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
      "right" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
      "info" : "MethodDeclaration[2608-3307]:MethodDeclaration[2608-3307]"
    }, {
      "left" : "public static Document parse(File in, String charsetName) throws IOException",
      "right" : "public static Document parse(File in, String charsetName) throws IOException",
      "info" : "MethodDeclaration[3313-4021]:MethodDeclaration[3313-4021]"
    }, {
      "left" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
      "right" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
      "info" : "MethodDeclaration[4028-4782]:MethodDeclaration[4028-4782]"
    }, {
      "left" : "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
      "right" : "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
      "info" : "MethodDeclaration[4788-5718]:MethodDeclaration[4788-5718]"
    }, {
      "left" : "public static Document parseBodyFragment(String bodyHtml, String baseUri)",
      "right" : "public static Document parseBodyFragment(String bodyHtml, String baseUri)",
      "info" : "MethodDeclaration[5724-6135]:MethodDeclaration[5724-6135]"
    }, {
      "left" : "public static Document parseBodyFragment(String bodyHtml)",
      "right" : "public static Document parseBodyFragment(String bodyHtml)",
      "info" : "MethodDeclaration[6141-6472]:MethodDeclaration[6141-6472]"
    }, {
      "left" : "public static Document parse(URL url, int timeoutMillis) throws IOException",
      "right" : "public static Document parse(URL url, int timeoutMillis) throws IOException",
      "info" : "MethodDeclaration[6478-7694]:MethodDeclaration[6478-7694]"
    }, {
      "left" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist)",
      "right" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist)",
      "info" : "MethodDeclaration[7700-8398]:MethodDeclaration[7700-8398]"
    }, {
      "left" : "public static String clean(String bodyHtml, Whitelist whitelist)",
      "right" : "public static String clean(String bodyHtml, Whitelist whitelist)",
      "info" : "MethodDeclaration[8404-8878]:MethodDeclaration[8404-8878]"
    }, {
      "left" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist, Document.OutputSettings outputSettings)",
      "right" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist, Document.OutputSettings outputSettings)",
      "info" : "MethodDeclaration[8884-10103]:MethodDeclaration[8884-10103]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[459-461]:Block[459-461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[884-935]:Block[884-935]"
    }, {
      "left" : "return Parser.parse(html, baseUri);",
      "right" : "return Parser.parse(html, baseUri);",
      "info" : "ReturnStatement[894-929]:ReturnStatement[894-929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1480-1536]:Block[1480-1536]"
    }, {
      "left" : "return parser.parseInput(html, baseUri);",
      "right" : "return parser.parseInput(html, baseUri);",
      "info" : "ReturnStatement[1490-1530]:ReturnStatement[1490-1530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1835-1881]:Block[1835-1881]"
    }, {
      "left" : "return Parser.parse(html, \"\");",
      "right" : "return Parser.parse(html, \"\");",
      "info" : "ReturnStatement[1845-1875]:ReturnStatement[1845-1875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2551-2602]:Block[2551-2602]"
    }, {
      "left" : "return HttpConnection.connect(url);",
      "right" : "return HttpConnection.connect(url);",
      "info" : "ReturnStatement[2561-2596]:ReturnStatement[2561-2596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3244-3307]:Block[3244-3307]"
    }, {
      "left" : "return DataUtil.load(in, charsetName, baseUri);",
      "right" : "return DataUtil.load(in, charsetName, baseUri);",
      "info" : "ReturnStatement[3254-3301]:ReturnStatement[3254-3301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3945-4021]:Block[3945-4021]"
    }, {
      "left" : "return DataUtil.load(in, charsetName, in.getAbsolutePath());",
      "right" : "return DataUtil.load(in, charsetName, in.getAbsolutePath());",
      "info" : "ReturnStatement[3955-4015]:ReturnStatement[3955-4015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4719-4782]:Block[4719-4782]"
    }, {
      "left" : "return DataUtil.load(in, charsetName, baseUri);",
      "right" : "return DataUtil.load(in, charsetName, baseUri);",
      "info" : "ReturnStatement[4729-4776]:ReturnStatement[4729-4776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5647-5718]:Block[5647-5718]"
    }, {
      "left" : "return DataUtil.load(in, charsetName, baseUri, parser);",
      "right" : "return DataUtil.load(in, charsetName, baseUri, parser);",
      "info" : "ReturnStatement[5657-5712]:ReturnStatement[5657-5712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6068-6135]:Block[6068-6135]"
    }, {
      "left" : "return Parser.parseBodyFragment(bodyHtml, baseUri);",
      "right" : "return Parser.parseBodyFragment(bodyHtml, baseUri);",
      "info" : "ReturnStatement[6078-6129]:ReturnStatement[6078-6129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6410-6472]:Block[6410-6472]"
    }, {
      "left" : "return Parser.parseBodyFragment(bodyHtml, \"\");",
      "right" : "return Parser.parseBodyFragment(bodyHtml, \"\");",
      "info" : "ReturnStatement[6420-6466]:ReturnStatement[6420-6466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7571-7694]:Block[7571-7694]"
    }, {
      "left" : "Connection con = HttpConnection.connect(url);",
      "right" : "Connection con = HttpConnection.connect(url);",
      "info" : "VariableDeclarationStatement[7581-7626]:VariableDeclarationStatement[7581-7626]"
    }, {
      "left" : "con.timeout(timeoutMillis);",
      "right" : "con.timeout(timeoutMillis);",
      "info" : "ExpressionStatement[7635-7662]:ExpressionStatement[7635-7662]"
    }, {
      "left" : "return con.get();",
      "right" : "return con.get();",
      "info" : "ReturnStatement[7671-7688]:ReturnStatement[7671-7688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8195-8398]:Block[8195-8398]"
    }, {
      "left" : "Document dirty = parseBodyFragment(bodyHtml, baseUri);",
      "right" : "Document dirty = parseBodyFragment(bodyHtml, baseUri);",
      "info" : "VariableDeclarationStatement[8205-8259]:VariableDeclarationStatement[8205-8259]"
    }, {
      "left" : "Cleaner cleaner = new Cleaner(whitelist);",
      "right" : "Cleaner cleaner = new Cleaner(whitelist);",
      "info" : "VariableDeclarationStatement[8268-8309]:VariableDeclarationStatement[8268-8309]"
    }, {
      "left" : "Document clean = cleaner.clean(dirty);",
      "right" : "Document clean = cleaner.clean(dirty);",
      "info" : "VariableDeclarationStatement[8318-8356]:VariableDeclarationStatement[8318-8356]"
    }, {
      "left" : "return clean.body().html();",
      "right" : "return clean.body().html();",
      "info" : "ReturnStatement[8365-8392]:ReturnStatement[8365-8392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8824-8878]:Block[8824-8878]"
    }, {
      "left" : "return clean(bodyHtml, \"\", whitelist);",
      "right" : "return clean(bodyHtml, \"\", whitelist);",
      "info" : "ReturnStatement[8834-8872]:ReturnStatement[8834-8872]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9854-10103]:Block[9854-10103]"
    }, {
      "left" : "Document dirty = parseBodyFragment(bodyHtml, baseUri);",
      "right" : "Document dirty = parseBodyFragment(bodyHtml, baseUri);",
      "info" : "VariableDeclarationStatement[9864-9918]:VariableDeclarationStatement[9864-9918]"
    }, {
      "left" : "Cleaner cleaner = new Cleaner(whitelist);",
      "right" : "Cleaner cleaner = new Cleaner(whitelist);",
      "info" : "VariableDeclarationStatement[9927-9968]:VariableDeclarationStatement[9927-9968]"
    }, {
      "left" : "Document clean = cleaner.clean(dirty);",
      "right" : "Document clean = cleaner.clean(dirty);",
      "info" : "VariableDeclarationStatement[9977-10015]:VariableDeclarationStatement[9977-10015]"
    }, {
      "left" : "clean.outputSettings(outputSettings);",
      "right" : "clean.outputSettings(outputSettings);",
      "info" : "ExpressionStatement[10024-10061]:ExpressionStatement[10024-10061]"
    }, {
      "left" : "return clean.body().html();",
      "right" : "return clean.body().html();",
      "info" : "ReturnStatement[10070-10097]:ReturnStatement[10070-10097]"
    } ]
  },
  "interFileMappings" : { }
}