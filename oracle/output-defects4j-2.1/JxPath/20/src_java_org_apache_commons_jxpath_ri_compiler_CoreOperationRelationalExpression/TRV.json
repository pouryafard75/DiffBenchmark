{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "right" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "info" : "MethodDeclaration[1403-1594]:MethodDeclaration[1403-1594]"
    }, {
      "left" : "public final Object computeValue(EvalContext context)",
      "right" : "public final Object computeValue(EvalContext context)",
      "info" : "MethodDeclaration[1600-1784]:MethodDeclaration[1600-1784]"
    }, {
      "left" : "protected final int getPrecedence()",
      "right" : "protected final int getPrecedence()",
      "info" : "MethodDeclaration[1790-1876]:MethodDeclaration[1790-1876]"
    }, {
      "left" : "protected final boolean isSymmetric()",
      "right" : "protected final boolean isSymmetric()",
      "info" : "MethodDeclaration[1882-1949]:MethodDeclaration[1882-1949]"
    }, {
      "left" : "protected abstract boolean evaluateCompare(int compare);",
      "right" : "protected abstract boolean evaluateCompare(int compare);",
      "info" : "MethodDeclaration[1955-2210]:MethodDeclaration[1955-2210]"
    }, {
      "left" : "private Object reduce(Object o)",
      "right" : "private Object reduce(Object o)",
      "info" : "MethodDeclaration[3363-3743]:MethodDeclaration[3363-3743]"
    }, {
      "left" : "private boolean containsMatch(Iterator it, Object value)",
      "right" : "private boolean containsMatch(Iterator it, Object value)",
      "info" : "MethodDeclaration[3749-4199]:MethodDeclaration[3749-4199]"
    }, {
      "left" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "right" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "info" : "MethodDeclaration[4403-4938]:MethodDeclaration[4661-5196]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1566-1594]:Block[1566-1594]"
    }, {
      "left" : "super(args);",
      "right" : "super(args);",
      "info" : "SuperConstructorInvocation[1576-1588]:SuperConstructorInvocation[1576-1588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1654-1784]:Block[1654-1784]"
    }, {
      "left" : "return compute(args[0].compute(context), args[1].compute(context))\n                ? Boolean.TRUE : Boolean.FALSE;",
      "right" : "return compute(args[0].compute(context), args[1].compute(context))\n                ? Boolean.TRUE : Boolean.FALSE;",
      "info" : "ReturnStatement[1664-1778]:ReturnStatement[1664-1778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1826-1876]:Block[1826-1876]"
    }, {
      "left" : "return RELATIONAL_EXPR_PRECEDENCE;",
      "right" : "return RELATIONAL_EXPR_PRECEDENCE;",
      "info" : "ReturnStatement[1836-1870]:ReturnStatement[1836-1870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1920-1949]:Block[1920-1949]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1930-1943]:ReturnStatement[1930-1943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3516-3743]:Block[3516-3743]"
    }, {
      "left" : "if (o instanceof SelfContext)",
      "right" : "if (o instanceof SelfContext)",
      "info" : "IfStatement[3526-3625]:IfStatement[3526-3625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3556-3625]:Block[3556-3625]"
    }, {
      "left" : "o = ((EvalContext) o).getSingleNodePointer();",
      "right" : "o = ((EvalContext) o).getSingleNodePointer();",
      "info" : "ExpressionStatement[3570-3615]:ExpressionStatement[3570-3615]"
    }, {
      "left" : "if (o instanceof Collection)",
      "right" : "if (o instanceof Collection)",
      "info" : "IfStatement[3634-3719]:IfStatement[3634-3719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3663-3719]:Block[3663-3719]"
    }, {
      "left" : "o = ((Collection) o).iterator();",
      "right" : "o = ((Collection) o).iterator();",
      "info" : "ExpressionStatement[3677-3709]:ExpressionStatement[3677-3709]"
    }, {
      "left" : "return o;",
      "right" : "return o;",
      "info" : "ReturnStatement[3728-3737]:ReturnStatement[3728-3737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4003-4199]:Block[4003-4199]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[4013-4171]:WhileStatement[4013-4171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4034-4171]:Block[4034-4171]"
    }, {
      "left" : "Object element = it.next();",
      "right" : "Object element = it.next();",
      "info" : "VariableDeclarationStatement[4048-4075]:VariableDeclarationStatement[4048-4075]"
    }, {
      "left" : "if (compute(element, value))",
      "right" : "if (compute(element, value))",
      "info" : "IfStatement[4088-4161]:IfStatement[4088-4161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4117-4161]:Block[4117-4161]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[4135-4147]:ReturnStatement[4135-4147]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4180-4193]:ReturnStatement[4180-4193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4648-4938]:Block[4906-5196]"
    }, {
      "left" : "HashSet left = new HashSet();",
      "right" : "HashSet left = new HashSet();",
      "info" : "VariableDeclarationStatement[4658-4687]:VariableDeclarationStatement[4916-4945]"
    }, {
      "left" : "while (lit.hasNext())",
      "right" : "while (lit.hasNext())",
      "info" : "WhileStatement[4696-4763]:WhileStatement[4954-5021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4718-4763]:Block[4976-5021]"
    }, {
      "left" : "left.add(lit.next());",
      "right" : "left.add(lit.next());",
      "info" : "ExpressionStatement[4732-4753]:ExpressionStatement[4990-5011]"
    }, {
      "left" : "while (rit.hasNext())",
      "right" : "while (rit.hasNext())",
      "info" : "WhileStatement[4772-4910]:WhileStatement[5030-5168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4794-4910]:Block[5052-5168]"
    }, {
      "left" : "if (containsMatch(left.iterator(), rit.next()))",
      "right" : "if (containsMatch(left.iterator(), rit.next()))",
      "info" : "IfStatement[4808-4900]:IfStatement[5066-5158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4856-4900]:Block[5114-5158]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[4874-4886]:ReturnStatement[5132-5144]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4919-4932]:ReturnStatement[5177-5190]"
    } ]
  },
  "interFileMappings" : { }
}