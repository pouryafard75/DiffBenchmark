{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final static byte BYTE_u = (byte) 'u';",
      "right" : "private final static byte BYTE_u = (byte) 'u';",
      "info" : "FieldDeclaration[264-310]:FieldDeclaration[264-310]"
    }, {
      "left" : "private final static byte BYTE_0 = (byte) '0';",
      "right" : "private final static byte BYTE_0 = (byte) '0';",
      "info" : "FieldDeclaration[316-362]:FieldDeclaration[316-362]"
    }, {
      "left" : "private final static byte BYTE_LBRACKET = (byte) '[';",
      "right" : "private final static byte BYTE_LBRACKET = (byte) '[';",
      "info" : "FieldDeclaration[368-421]:FieldDeclaration[368-421]"
    }, {
      "left" : "private final static byte BYTE_RBRACKET = (byte) ']';",
      "right" : "private final static byte BYTE_RBRACKET = (byte) ']';",
      "info" : "FieldDeclaration[426-479]:FieldDeclaration[426-479]"
    }, {
      "left" : "private final static byte BYTE_LCURLY = (byte) '{';",
      "right" : "private final static byte BYTE_LCURLY = (byte) '{';",
      "info" : "FieldDeclaration[484-535]:FieldDeclaration[484-535]"
    }, {
      "left" : "private final static byte BYTE_RCURLY = (byte) '}';",
      "right" : "private final static byte BYTE_RCURLY = (byte) '}';",
      "info" : "FieldDeclaration[540-591]:FieldDeclaration[540-591]"
    }, {
      "left" : "private final static byte BYTE_BACKSLASH = (byte) '\\\\';",
      "right" : "private final static byte BYTE_BACKSLASH = (byte) '\\\\';",
      "info" : "FieldDeclaration[597-652]:FieldDeclaration[597-652]"
    }, {
      "left" : "private final static byte BYTE_COMMA = (byte) ',';",
      "right" : "private final static byte BYTE_COMMA = (byte) ',';",
      "info" : "FieldDeclaration[657-707]:FieldDeclaration[657-707]"
    }, {
      "left" : "private final static byte BYTE_COLON = (byte) ':';",
      "right" : "private final static byte BYTE_COLON = (byte) ':';",
      "info" : "FieldDeclaration[712-762]:FieldDeclaration[712-762]"
    }, {
      "left" : "private final static byte BYTE_QUOTE = (byte) '\"';",
      "right" : "private final static byte BYTE_QUOTE = (byte) '\"';",
      "info" : "FieldDeclaration[767-817]:FieldDeclaration[767-817]"
    }, {
      "left" : "private final static int MAX_BYTES_TO_BUFFER = 512;",
      "right" : "private final static int MAX_BYTES_TO_BUFFER = 512;",
      "info" : "FieldDeclaration[884-935]:FieldDeclaration[884-935]"
    }, {
      "left" : "private final static byte[] HEX_CHARS = CharTypes.copyHexBytes();",
      "right" : "private final static byte[] HEX_CHARS = CharTypes.copyHexBytes();",
      "info" : "FieldDeclaration[941-1006]:FieldDeclaration[941-1006]"
    }, {
      "left" : "private final static byte[] NULL_BYTES = { 'n', 'u', 'l', 'l' };",
      "right" : "private final static byte[] NULL_BYTES = { 'n', 'u', 'l', 'l' };",
      "info" : "FieldDeclaration[1012-1076]:FieldDeclaration[1012-1076]"
    }, {
      "left" : "private final static byte[] TRUE_BYTES = { 't', 'r', 'u', 'e' };",
      "right" : "private final static byte[] TRUE_BYTES = { 't', 'r', 'u', 'e' };",
      "info" : "FieldDeclaration[1081-1145]:FieldDeclaration[1081-1145]"
    }, {
      "left" : "private final static byte[] FALSE_BYTES = { 'f', 'a', 'l', 's', 'e' };",
      "right" : "private final static byte[] FALSE_BYTES = { 'f', 'a', 'l', 's', 'e' };",
      "info" : "FieldDeclaration[1150-1220]:FieldDeclaration[1150-1220]"
    }, {
      "left" : "final protected OutputStream _outputStream;",
      "right" : "final protected OutputStream _outputStream;",
      "info" : "FieldDeclaration[1394-1516]:FieldDeclaration[1394-1516]"
    }, {
      "left" : "protected byte[] _outputBuffer;",
      "right" : "protected byte[] _outputBuffer;",
      "info" : "FieldDeclaration[1522-1685]:FieldDeclaration[1522-1685]"
    }, {
      "left" : "protected int _outputTail;",
      "right" : "protected int _outputTail;",
      "info" : "FieldDeclaration[1691-1850]:FieldDeclaration[1691-1850]"
    }, {
      "left" : "protected final int _outputEnd;",
      "right" : "protected final int _outputEnd;",
      "info" : "FieldDeclaration[1856-2002]:FieldDeclaration[1856-2002]"
    }, {
      "left" : "protected final int _outputMaxContiguous;",
      "right" : "protected final int _outputMaxContiguous;",
      "info" : "FieldDeclaration[2008-2181]:FieldDeclaration[2008-2181]"
    }, {
      "left" : "protected char[] _charBuffer;",
      "right" : "protected char[] _charBuffer;",
      "info" : "FieldDeclaration[2187-2331]:FieldDeclaration[2187-2331]"
    }, {
      "left" : "protected final int _charBufferLength;",
      "right" : "protected final int _charBufferLength;",
      "info" : "FieldDeclaration[2337-2433]:FieldDeclaration[2337-2433]"
    }, {
      "left" : "protected byte[] _entityBuffer;",
      "right" : "protected byte[] _entityBuffer;",
      "info" : "FieldDeclaration[2439-2584]:FieldDeclaration[2439-2584]"
    }, {
      "left" : "protected boolean _bufferRecyclable;",
      "right" : "protected boolean _bufferRecyclable;",
      "info" : "FieldDeclaration[2590-2779]:FieldDeclaration[2590-2779]"
    }, {
      "left" : "public UTF8JsonGenerator(IOContext ctxt, int features, ObjectCodec codec,\n            OutputStream out)",
      "right" : "public UTF8JsonGenerator(IOContext ctxt, int features, ObjectCodec codec,\n            OutputStream out)",
      "info" : "MethodDeclaration[2947-3837]:MethodDeclaration[2947-3837]"
    }, {
      "left" : "public UTF8JsonGenerator(IOContext ctxt, int features, ObjectCodec codec,\n            OutputStream out,\n            byte[] outputBuffer, int outputOffset, boolean bufferRecyclable)",
      "right" : "public UTF8JsonGenerator(IOContext ctxt, int features, ObjectCodec codec,\n            OutputStream out,\n            byte[] outputBuffer, int outputOffset, boolean bufferRecyclable)",
      "info" : "MethodDeclaration[3847-4489]:MethodDeclaration[3847-4489]"
    }, {
      "left" : "public Object getOutputTarget()",
      "right" : "public Object getOutputTarget()",
      "info" : "MethodDeclaration[4683-4766]:MethodDeclaration[4683-4766]"
    }, {
      "left" : "public int getOutputBuffered()",
      "right" : "public int getOutputBuffered()",
      "info" : "MethodDeclaration[4772-4912]:MethodDeclaration[4772-4912]"
    }, {
      "left" : "public void writeFieldName(String name)  throws IOException",
      "right" : "public void writeFieldName(String name)  throws IOException",
      "info" : "MethodDeclaration[5088-6830]:MethodDeclaration[5088-6830]"
    }, {
      "left" : "public void writeFieldName(SerializableString name) throws IOException",
      "right" : "public void writeFieldName(SerializableString name) throws IOException",
      "info" : "MethodDeclaration[6840-8071]:MethodDeclaration[6840-8071]"
    }, {
      "left" : "private final void _writeUnq(SerializableString name) throws IOException",
      "right" : "private final void _writeUnq(SerializableString name) throws IOException",
      "info" : "MethodDeclaration[8081-8358]:MethodDeclaration[8081-8358]"
    }, {
      "left" : "public final void writeStartArray() throws IOException",
      "right" : "public final void writeStartArray() throws IOException",
      "info" : "MethodDeclaration[8561-9021]:MethodDeclaration[8561-9021]"
    }, {
      "left" : "public final void writeEndArray() throws IOException",
      "right" : "public final void writeEndArray() throws IOException",
      "info" : "MethodDeclaration[9027-9604]:MethodDeclaration[9027-9604]"
    }, {
      "left" : "public final void writeStartObject() throws IOException",
      "right" : "public final void writeStartObject() throws IOException",
      "info" : "MethodDeclaration[9610-10072]:MethodDeclaration[9610-10072]"
    }, {
      "left" : "public final void writeEndObject() throws IOException",
      "right" : "public final void writeEndObject() throws IOException",
      "info" : "MethodDeclaration[10078-10657]:MethodDeclaration[10078-10657]"
    }, {
      "left" : "protected final void _writePPFieldName(String name) throws IOException",
      "right" : "protected final void _writePPFieldName(String name) throws IOException",
      "info" : "MethodDeclaration[10663-12245]:MethodDeclaration[10663-12245]"
    }, {
      "left" : "protected final void _writePPFieldName(SerializableString name) throws IOException",
      "right" : "protected final void _writePPFieldName(SerializableString name) throws IOException",
      "info" : "MethodDeclaration[12251-13243]:MethodDeclaration[12251-13243]"
    }, {
      "left" : "public void writeString(String text) throws IOException",
      "right" : "public void writeString(String text) throws IOException",
      "info" : "MethodDeclaration[13443-14262]:MethodDeclaration[13443-14262]"
    }, {
      "left" : "public void writeString(char[] text, int offset, int len) throws IOException",
      "right" : "public void writeString(char[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[14268-15055]:MethodDeclaration[14268-15055]"
    }, {
      "left" : "public final void writeString(SerializableString text) throws IOException",
      "right" : "public final void writeString(SerializableString text) throws IOException",
      "info" : "MethodDeclaration[15061-15658]:MethodDeclaration[15061-15658]"
    }, {
      "left" : "public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException",
      "right" : "public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException",
      "info" : "MethodDeclaration[15668-16124]:MethodDeclaration[15668-16124]"
    }, {
      "left" : "public void writeUTF8String(byte[] text, int offset, int len) throws IOException",
      "right" : "public void writeUTF8String(byte[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[16130-16745]:MethodDeclaration[16130-16745]"
    }, {
      "left" : "public void writeRaw(String text) throws IOException",
      "right" : "public void writeRaw(String text) throws IOException",
      "info" : "MethodDeclaration[16953-17069]:MethodDeclaration[16953-17069]"
    }, {
      "left" : "public void writeRaw(SerializableString text) throws IOException",
      "right" : "public void writeRaw(SerializableString text) throws IOException",
      "info" : "MethodDeclaration[17879-18083]:MethodDeclaration[18478-18682]"
    }, {
      "left" : "public void writeRawValue(SerializableString text) throws IOException",
      "right" : "public void writeRawValue(SerializableString text) throws IOException",
      "info" : "MethodDeclaration[18106-18349]:MethodDeclaration[18705-18948]"
    }, {
      "left" : "public final void writeRaw(char[] cbuf, int offset, int len) throws IOException",
      "right" : "public final void writeRaw(char[] cbuf, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[18390-19871]:MethodDeclaration[18989-20470]"
    }, {
      "left" : "public void writeRaw(char ch) throws IOException",
      "right" : "public void writeRaw(char ch) throws IOException",
      "info" : "MethodDeclaration[19877-20412]:MethodDeclaration[20476-21011]"
    }, {
      "left" : "private final void _writeSegmentedRaw(char[] cbuf, int offset, int len) throws IOException",
      "right" : "private final void _writeSegmentedRaw(char[] cbuf, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[20418-21795]:MethodDeclaration[21017-22394]"
    }, {
      "left" : "public int writeBinary(Base64Variant b64variant,\n            InputStream data, int dataLength)\n        throws IOException, JsonGenerationException",
      "right" : "public int writeBinary(Base64Variant b64variant,\n            InputStream data, int dataLength)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22947-24136]:MethodDeclaration[24393-25582]"
    }, {
      "left" : "public void writeNumber(short s) throws IOException",
      "right" : "public void writeNumber(short s) throws IOException",
      "info" : "MethodDeclaration[24338-24768]:MethodDeclaration[25784-26214]"
    }, {
      "left" : "private final void _writeQuotedShort(short s) throws IOException",
      "right" : "private final void _writeQuotedShort(short s) throws IOException",
      "info" : "MethodDeclaration[24778-25114]:MethodDeclaration[26224-26560]"
    }, {
      "left" : "public void writeNumber(int i) throws IOException",
      "right" : "public void writeNumber(int i) throws IOException",
      "info" : "MethodDeclaration[25125-25553]:MethodDeclaration[26571-26999]"
    }, {
      "left" : "private final void _writeQuotedInt(int i) throws IOException",
      "right" : "private final void _writeQuotedInt(int i) throws IOException",
      "info" : "MethodDeclaration[25559-25896]:MethodDeclaration[27005-27342]"
    }, {
      "left" : "public void writeNumber(long l) throws IOException",
      "right" : "public void writeNumber(long l) throws IOException",
      "info" : "MethodDeclaration[25906-26329]:MethodDeclaration[27352-27775]"
    }, {
      "left" : "private final void _writeQuotedLong(long l) throws IOException",
      "right" : "private final void _writeQuotedLong(long l) throws IOException",
      "info" : "MethodDeclaration[26335-26675]:MethodDeclaration[27781-28121]"
    }, {
      "left" : "public void writeNumber(BigInteger value) throws IOException",
      "right" : "public void writeNumber(BigInteger value) throws IOException",
      "info" : "MethodDeclaration[26681-27020]:MethodDeclaration[28127-28466]"
    }, {
      "left" : "public void writeNumber(double d) throws IOException",
      "right" : "public void writeNumber(double d) throws IOException",
      "info" : "MethodDeclaration[27031-27489]:MethodDeclaration[28477-28935]"
    }, {
      "left" : "public void writeNumber(float f) throws IOException",
      "right" : "public void writeNumber(float f) throws IOException",
      "info" : "MethodDeclaration[27495-27968]:MethodDeclaration[28941-29414]"
    }, {
      "left" : "public void writeNumber(BigDecimal value) throws IOException",
      "right" : "public void writeNumber(BigDecimal value) throws IOException",
      "info" : "MethodDeclaration[27974-28641]:MethodDeclaration[29420-30087]"
    }, {
      "left" : "public void writeNumber(String encodedValue) throws IOException",
      "right" : "public void writeNumber(String encodedValue) throws IOException",
      "info" : "MethodDeclaration[28647-28931]:MethodDeclaration[30093-30377]"
    }, {
      "left" : "private final void _writeQuotedRaw(String value) throws IOException",
      "right" : "private final void _writeQuotedRaw(String value) throws IOException",
      "info" : "MethodDeclaration[28937-29301]:MethodDeclaration[30383-30747]"
    }, {
      "left" : "public void writeBoolean(boolean state) throws IOException",
      "right" : "public void writeBoolean(boolean state) throws IOException",
      "info" : "MethodDeclaration[29311-29714]:MethodDeclaration[30757-31160]"
    }, {
      "left" : "public void writeNull() throws IOException",
      "right" : "public void writeNull() throws IOException",
      "info" : "MethodDeclaration[29720-29849]:MethodDeclaration[31166-31295]"
    }, {
      "left" : "protected final void _verifyValueWrite(String typeMsg) throws IOException",
      "right" : "protected final void _verifyValueWrite(String typeMsg) throws IOException",
      "info" : "MethodDeclaration[30040-31405]:MethodDeclaration[31486-32851]"
    }, {
      "left" : "protected final void _verifyPrettyValueWrite(String typeMsg, int status) throws IOException",
      "right" : "protected final void _verifyPrettyValueWrite(String typeMsg, int status) throws IOException",
      "info" : "MethodDeclaration[31411-32437]:MethodDeclaration[32857-33883]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[32620-32869]:MethodDeclaration[34066-34315]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[32875-34474]:MethodDeclaration[34321-35920]"
    }, {
      "left" : "protected void _releaseBuffers()",
      "right" : "protected void _releaseBuffers()",
      "info" : "MethodDeclaration[34480-34877]:MethodDeclaration[35926-36323]"
    }, {
      "left" : "private final void _writeBytes(byte[] bytes) throws IOException",
      "right" : "private final void _writeBytes(byte[] bytes) throws IOException",
      "info" : "MethodDeclaration[35081-35545]:MethodDeclaration[36527-36991]"
    }, {
      "left" : "private final void _writeBytes(byte[] bytes, int offset, int len) throws IOException",
      "right" : "private final void _writeBytes(byte[] bytes, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[35551-36008]:MethodDeclaration[36997-37454]"
    }, {
      "left" : "private final void _writeStringSegments(String text, boolean addQuotes) throws IOException",
      "right" : "private final void _writeStringSegments(String text, boolean addQuotes) throws IOException",
      "info" : "MethodDeclaration[36222-37402]:MethodDeclaration[37668-38848]"
    }, {
      "left" : "private final void _writeStringSegments(char[] cbuf, int offset, int totalLen) throws IOException",
      "right" : "private final void _writeStringSegments(char[] cbuf, int offset, int totalLen) throws IOException",
      "info" : "MethodDeclaration[37408-38134]:MethodDeclaration[38854-39580]"
    }, {
      "left" : "private final void _writeStringSegments(String text, int offset, int totalLen) throws IOException",
      "right" : "private final void _writeStringSegments(String text, int offset, int totalLen) throws IOException",
      "info" : "MethodDeclaration[38140-38599]:MethodDeclaration[39586-40045]"
    }, {
      "left" : "private final void _writeStringSegment(char[] cbuf, int offset, int len)\n        throws IOException",
      "right" : "private final void _writeStringSegment(char[] cbuf, int offset, int len)\n        throws IOException",
      "info" : "MethodDeclaration[38807-40457]:MethodDeclaration[40253-41903]"
    }, {
      "left" : "private final void _writeStringSegment(String text, int offset, int len) throws IOException",
      "right" : "private final void _writeStringSegment(String text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[40463-41626]:MethodDeclaration[41909-43072]"
    }, {
      "left" : "private final void _writeStringSegment2(final char[] cbuf, int offset, final int end) throws IOException",
      "right" : "private final void _writeStringSegment2(final char[] cbuf, int offset, final int end) throws IOException",
      "info" : "MethodDeclaration[41632-43254]:MethodDeclaration[43078-44700]"
    }, {
      "left" : "private final void _writeStringSegment2(final String text, int offset, final int end) throws IOException",
      "right" : "private final void _writeStringSegment2(final String text, int offset, final int end) throws IOException",
      "info" : "MethodDeclaration[43260-44669]:MethodDeclaration[44706-46115]"
    }, {
      "left" : "private final void _writeStringSegmentASCII2(final char[] cbuf, int offset, final int end) throws IOException",
      "right" : "private final void _writeStringSegmentASCII2(final char[] cbuf, int offset, final int end) throws IOException",
      "info" : "MethodDeclaration[44928-46836]:MethodDeclaration[46374-48282]"
    }, {
      "left" : "private final void _writeStringSegmentASCII2(final String text, int offset, final int end) throws IOException",
      "right" : "private final void _writeStringSegmentASCII2(final String text, int offset, final int end) throws IOException",
      "info" : "MethodDeclaration[46842-48615]:MethodDeclaration[48288-50061]"
    }, {
      "left" : "private final void _writeCustomStringSegment2(final char[] cbuf, int offset, final int end) throws IOException",
      "right" : "private final void _writeCustomStringSegment2(final char[] cbuf, int offset, final int end) throws IOException",
      "info" : "MethodDeclaration[48896-51736]:MethodDeclaration[50342-53182]"
    }, {
      "left" : "private final void _writeCustomStringSegment2(final String text, int offset, final int end) throws IOException",
      "right" : "private final void _writeCustomStringSegment2(final String text, int offset, final int end) throws IOException",
      "info" : "MethodDeclaration[51742-54439]:MethodDeclaration[53188-55885]"
    }, {
      "left" : "private final int _writeCustomEscape(byte[] outputBuffer, int outputPtr, SerializableString esc, int remainingChars)\n        throws IOException, JsonGenerationException",
      "right" : "private final int _writeCustomEscape(byte[] outputBuffer, int outputPtr, SerializableString esc, int remainingChars)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[54445-55085]:MethodDeclaration[55891-56531]"
    }, {
      "left" : "private final int _handleLongCustomEscape(byte[] outputBuffer, int outputPtr, int outputEnd, byte[] raw,\n            int remainingChars)\n        throws IOException, JsonGenerationException",
      "right" : "private final int _handleLongCustomEscape(byte[] outputBuffer, int outputPtr, int outputEnd, byte[] raw,\n            int remainingChars)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[55095-55984]:MethodDeclaration[56541-57430]"
    }, {
      "left" : "private final void _writeUTF8Segments(byte[] utf8, int offset, int totalLen)\n        throws IOException, JsonGenerationException",
      "right" : "private final void _writeUTF8Segments(byte[] utf8, int offset, int totalLen)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[56203-56760]:MethodDeclaration[57649-58206]"
    }, {
      "left" : "private final void _writeUTF8Segment(byte[] utf8, final int offset, final int len)\n        throws IOException, JsonGenerationException",
      "right" : "private final void _writeUTF8Segment(byte[] utf8, final int offset, final int len)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[56770-57701]:MethodDeclaration[58216-59147]"
    }, {
      "left" : "private final void _writeUTF8Segment2(final byte[] utf8, int offset, int len)\n        throws IOException, JsonGenerationException",
      "right" : "private final void _writeUTF8Segment2(final byte[] utf8, int offset, int len)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[57707-58890]:MethodDeclaration[59153-60336]"
    }, {
      "left" : "protected final void _writeBinary(Base64Variant b64variant,\n            byte[] input, int inputPtr, final int inputEnd)\n        throws IOException, JsonGenerationException",
      "right" : "protected final void _writeBinary(Base64Variant b64variant,\n            byte[] input, int inputPtr, final int inputEnd)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[59107-61013]:MethodDeclaration[60553-62459]"
    }, {
      "left" : "protected final int _writeBinary(Base64Variant b64variant,\n            InputStream data, byte[] readBuffer, int bytesLeft)\n        throws IOException, JsonGenerationException",
      "right" : "protected final int _writeBinary(Base64Variant b64variant,\n            InputStream data, byte[] readBuffer, int bytesLeft)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[61078-63554]:MethodDeclaration[62524-65000]"
    }, {
      "left" : "protected final int _writeBinary(Base64Variant b64variant,\n            InputStream data, byte[] readBuffer)\n        throws IOException, JsonGenerationException",
      "right" : "protected final int _writeBinary(Base64Variant b64variant,\n            InputStream data, byte[] readBuffer)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[63603-65941]:MethodDeclaration[65049-67387]"
    }, {
      "left" : "private final int _readMore(InputStream in,\n            byte[] readBuffer, int inputPtr, int inputEnd,\n            int maxRead) throws IOException",
      "right" : "private final int _readMore(InputStream in,\n            byte[] readBuffer, int inputPtr, int inputEnd,\n            int maxRead) throws IOException",
      "info" : "MethodDeclaration[65951-66744]:MethodDeclaration[67397-68190]"
    }, {
      "left" : "protected final void _outputSurrogates(int surr1, int surr2) throws IOException",
      "right" : "protected final void _outputSurrogates(int surr1, int surr2) throws IOException",
      "info" : "MethodDeclaration[68067-68579]:MethodDeclaration[69556-70068]"
    }, {
      "left" : "private final int _outputMultiByteChar(int ch, int outputPtr) throws IOException",
      "right" : "private final int _outputMultiByteChar(int ch, int outputPtr) throws IOException",
      "info" : "MethodDeclaration[68589-69926]:MethodDeclaration[70078-71415]"
    }, {
      "left" : "private final void _writeNull() throws IOException",
      "right" : "private final void _writeNull() throws IOException",
      "info" : "MethodDeclaration[69932-70177]:MethodDeclaration[71421-71666]"
    }, {
      "left" : "private int _writeGenericEscape(int charToEscape, int outputPtr) throws IOException",
      "right" : "private int _writeGenericEscape(int charToEscape, int outputPtr) throws IOException",
      "info" : "MethodDeclaration[70191-71136]:MethodDeclaration[71680-72625]"
    }, {
      "left" : "protected final void _flushBuffer() throws IOException",
      "right" : "protected final void _flushBuffer() throws IOException",
      "info" : "MethodDeclaration[71142-71357]:MethodDeclaration[72631-72846]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2947-2953]:Modifier[2947-2953]"
    }, {
      "left" : "UTF8JsonGenerator",
      "right" : "UTF8JsonGenerator",
      "info" : "SimpleName[2954-2971]:SimpleName[2954-2971]"
    }, {
      "left" : "IOContext ctxt",
      "right" : "IOContext ctxt",
      "info" : "SingleVariableDeclaration[2972-2986]:SingleVariableDeclaration[2972-2986]"
    }, {
      "left" : "int features",
      "right" : "int features",
      "info" : "SingleVariableDeclaration[2988-3000]:SingleVariableDeclaration[2988-3000]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[3002-3019]:SingleVariableDeclaration[3002-3019]"
    }, {
      "left" : "OutputStream out",
      "right" : "OutputStream out",
      "info" : "SingleVariableDeclaration[3033-3049]:SingleVariableDeclaration[3033-3049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3055-3837]:Block[3055-3837]"
    }, {
      "left" : "super(ctxt, features, codec);",
      "right" : "super(ctxt, features, codec);",
      "info" : "SuperConstructorInvocation[3065-3094]:SuperConstructorInvocation[3065-3094]"
    }, {
      "left" : "_outputStream = out;",
      "right" : "_outputStream = out;",
      "info" : "ExpressionStatement[3103-3123]:ExpressionStatement[3103-3123]"
    }, {
      "left" : "_bufferRecyclable = true;",
      "right" : "_bufferRecyclable = true;",
      "info" : "ExpressionStatement[3132-3157]:ExpressionStatement[3132-3157]"
    }, {
      "left" : "_outputBuffer = ctxt.allocWriteEncodingBuffer();",
      "right" : "_outputBuffer = ctxt.allocWriteEncodingBuffer();",
      "info" : "ExpressionStatement[3166-3214]:ExpressionStatement[3166-3214]"
    }, {
      "left" : "_outputEnd = _outputBuffer.length;",
      "right" : "_outputEnd = _outputBuffer.length;",
      "info" : "ExpressionStatement[3223-3257]:ExpressionStatement[3223-3257]"
    }, {
      "left" : "_outputMaxContiguous = _outputEnd >> 3;",
      "right" : "_outputMaxContiguous = _outputEnd >> 3;",
      "info" : "ExpressionStatement[3517-3556]:ExpressionStatement[3517-3556]"
    }, {
      "left" : "_charBuffer = ctxt.allocConcatBuffer();",
      "right" : "_charBuffer = ctxt.allocConcatBuffer();",
      "info" : "ExpressionStatement[3565-3604]:ExpressionStatement[3565-3604]"
    }, {
      "left" : "_charBufferLength = _charBuffer.length;",
      "right" : "_charBufferLength = _charBuffer.length;",
      "info" : "ExpressionStatement[3613-3652]:ExpressionStatement[3613-3652]"
    }, {
      "left" : "if (isEnabled(Feature.ESCAPE_NON_ASCII))",
      "right" : "if (isEnabled(Feature.ESCAPE_NON_ASCII))",
      "info" : "IfStatement[3736-3831]:IfStatement[3736-3831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3777-3831]:Block[3777-3831]"
    }, {
      "left" : "setHighestNonEscapedChar(127);",
      "right" : "setHighestNonEscapedChar(127);",
      "info" : "ExpressionStatement[3791-3821]:ExpressionStatement[3791-3821]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3847-3853]:Modifier[3847-3853]"
    }, {
      "left" : "UTF8JsonGenerator",
      "right" : "UTF8JsonGenerator",
      "info" : "SimpleName[3854-3871]:SimpleName[3854-3871]"
    }, {
      "left" : "IOContext ctxt",
      "right" : "IOContext ctxt",
      "info" : "SingleVariableDeclaration[3872-3886]:SingleVariableDeclaration[3872-3886]"
    }, {
      "left" : "int features",
      "right" : "int features",
      "info" : "SingleVariableDeclaration[3888-3900]:SingleVariableDeclaration[3888-3900]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[3902-3919]:SingleVariableDeclaration[3902-3919]"
    }, {
      "left" : "OutputStream out",
      "right" : "OutputStream out",
      "info" : "SingleVariableDeclaration[3933-3949]:SingleVariableDeclaration[3933-3949]"
    }, {
      "left" : "byte[] outputBuffer",
      "right" : "byte[] outputBuffer",
      "info" : "SingleVariableDeclaration[3963-3982]:SingleVariableDeclaration[3963-3982]"
    }, {
      "left" : "int outputOffset",
      "right" : "int outputOffset",
      "info" : "SingleVariableDeclaration[3984-4000]:SingleVariableDeclaration[3984-4000]"
    }, {
      "left" : "boolean bufferRecyclable",
      "right" : "boolean bufferRecyclable",
      "info" : "SingleVariableDeclaration[4002-4026]:SingleVariableDeclaration[4002-4026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4032-4489]:Block[4032-4489]"
    }, {
      "left" : "super(ctxt, features, codec);",
      "right" : "super(ctxt, features, codec);",
      "info" : "SuperConstructorInvocation[4051-4080]:SuperConstructorInvocation[4051-4080]"
    }, {
      "left" : "_outputStream = out;",
      "right" : "_outputStream = out;",
      "info" : "ExpressionStatement[4089-4109]:ExpressionStatement[4089-4109]"
    }, {
      "left" : "_bufferRecyclable = bufferRecyclable;",
      "right" : "_bufferRecyclable = bufferRecyclable;",
      "info" : "ExpressionStatement[4118-4155]:ExpressionStatement[4118-4155]"
    }, {
      "left" : "_outputTail = outputOffset;",
      "right" : "_outputTail = outputOffset;",
      "info" : "ExpressionStatement[4164-4191]:ExpressionStatement[4164-4191]"
    }, {
      "left" : "_outputBuffer = outputBuffer;",
      "right" : "_outputBuffer = outputBuffer;",
      "info" : "ExpressionStatement[4200-4229]:ExpressionStatement[4200-4229]"
    }, {
      "left" : "_outputEnd = _outputBuffer.length;",
      "right" : "_outputEnd = _outputBuffer.length;",
      "info" : "ExpressionStatement[4238-4272]:ExpressionStatement[4238-4272]"
    }, {
      "left" : "_outputMaxContiguous = (_outputEnd >> 3);",
      "right" : "_outputMaxContiguous = (_outputEnd >> 3);",
      "info" : "ExpressionStatement[4346-4387]:ExpressionStatement[4346-4387]"
    }, {
      "left" : "_charBuffer = ctxt.allocConcatBuffer();",
      "right" : "_charBuffer = ctxt.allocConcatBuffer();",
      "info" : "ExpressionStatement[4396-4435]:ExpressionStatement[4396-4435]"
    }, {
      "left" : "_charBufferLength = _charBuffer.length;",
      "right" : "_charBufferLength = _charBuffer.length;",
      "info" : "ExpressionStatement[4444-4483]:ExpressionStatement[4444-4483]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4683-4692]:MarkerAnnotation[4683-4692]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4697-4703]:Modifier[4697-4703]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[4704-4710]:SimpleType[4704-4710]"
    }, {
      "left" : "getOutputTarget",
      "right" : "getOutputTarget",
      "info" : "SimpleName[4711-4726]:SimpleName[4711-4726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4729-4766]:Block[4729-4766]"
    }, {
      "left" : "return _outputStream;",
      "right" : "return _outputStream;",
      "info" : "ReturnStatement[4739-4760]:ReturnStatement[4739-4760]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4772-4781]:MarkerAnnotation[4772-4781]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4786-4792]:Modifier[4786-4792]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4793-4796]:PrimitiveType[4793-4796]"
    }, {
      "left" : "getOutputBuffered",
      "right" : "getOutputBuffered",
      "info" : "SimpleName[4797-4814]:SimpleName[4797-4814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4817-4912]:Block[4817-4912]"
    }, {
      "left" : "return _outputTail;",
      "right" : "return _outputTail;",
      "info" : "ReturnStatement[4887-4906]:ReturnStatement[4887-4906]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5088-5097]:MarkerAnnotation[5088-5097]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5102-5108]:Modifier[5102-5108]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5109-5113]:PrimitiveType[5109-5113]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[5114-5128]:SimpleName[5114-5128]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[5129-5140]:SingleVariableDeclaration[5129-5140]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5150-5161]:SimpleType[5150-5161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5166-6830]:Block[5166-6830]"
    }, {
      "left" : "if (_cfgPrettyPrinter != null)",
      "right" : "if (_cfgPrettyPrinter != null)",
      "info" : "IfStatement[5176-5275]:IfStatement[5176-5275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5207-5275]:Block[5207-5275]"
    }, {
      "left" : "_writePPFieldName(name);",
      "right" : "_writePPFieldName(name);",
      "info" : "ExpressionStatement[5221-5245]:ExpressionStatement[5221-5245]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5258-5265]:ReturnStatement[5258-5265]"
    }, {
      "left" : "final int status = _writeContext.writeFieldName(name);",
      "right" : "final int status = _writeContext.writeFieldName(name);",
      "info" : "VariableDeclarationStatement[5284-5338]:VariableDeclarationStatement[5284-5338]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "info" : "IfStatement[5347-5485]:IfStatement[5347-5485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5399-5485]:Block[5399-5485]"
    }, {
      "left" : "_reportError(\"Can not write a field name, expecting a value\");",
      "right" : "_reportError(\"Can not write a field name, expecting a value\");",
      "info" : "ExpressionStatement[5413-5475]:ExpressionStatement[5413-5475]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
      "right" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
      "info" : "IfStatement[5494-5719]:IfStatement[5494-5719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5548-5719]:Block[5548-5719]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[5576-5654]:IfStatement[5576-5654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5607-5654]:Block[5607-5654]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[5625-5640]:ExpressionStatement[5625-5640]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
      "info" : "ExpressionStatement[5667-5709]:ExpressionStatement[5667-5709]"
    }, {
      "left" : "if (_cfgUnqNames)",
      "right" : "if (_cfgUnqNames)",
      "info" : "IfStatement[5863-5959]:IfStatement[5863-5959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5881-5959]:Block[5881-5959]"
    }, {
      "left" : "_writeStringSegments(name, false);",
      "right" : "_writeStringSegments(name, false);",
      "info" : "ExpressionStatement[5895-5929]:ExpressionStatement[5895-5929]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5942-5949]:ReturnStatement[5942-5949]"
    }, {
      "left" : "final int len = name.length();",
      "right" : "final int len = name.length();",
      "info" : "VariableDeclarationStatement[5968-5998]:VariableDeclarationStatement[5968-5998]"
    }, {
      "left" : "if (len > _charBufferLength)",
      "right" : "if (len > _charBufferLength)",
      "info" : "IfStatement[6041-6162]:IfStatement[6041-6162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6070-6162]:Block[6070-6162]"
    }, {
      "left" : "_writeStringSegments(name, true);",
      "right" : "_writeStringSegments(name, true);",
      "info" : "ExpressionStatement[6099-6132]:ExpressionStatement[6099-6132]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[6145-6152]:ReturnStatement[6145-6152]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[6171-6241]:IfStatement[6171-6241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6202-6241]:Block[6202-6241]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[6216-6231]:ExpressionStatement[6216-6231]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[6250-6292]:ExpressionStatement[6250-6292]"
    }, {
      "left" : "if (len <= _outputMaxContiguous)",
      "right" : "if (len <= _outputMaxContiguous)",
      "info" : "IfStatement[6345-6634]:IfStatement[6345-6634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6378-6569]:Block[6378-6569]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[6392-6512]:IfStatement[6392-6512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6430-6512]:Block[6430-6512]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[6483-6498]:ExpressionStatement[6483-6498]"
    }, {
      "left" : "_writeStringSegment(name, 0, len);",
      "right" : "_writeStringSegment(name, 0, len);",
      "info" : "ExpressionStatement[6525-6559]:ExpressionStatement[6525-6559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6575-6634]:Block[6575-6634]"
    }, {
      "left" : "_writeStringSegments(name, 0, len);",
      "right" : "_writeStringSegments(name, 0, len);",
      "info" : "ExpressionStatement[6589-6624]:ExpressionStatement[6589-6624]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[6703-6773]:IfStatement[6703-6773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6734-6773]:Block[6734-6773]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[6748-6763]:ExpressionStatement[6748-6763]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[6782-6824]:ExpressionStatement[6782-6824]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6840-6849]:MarkerAnnotation[6840-6849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6854-6860]:Modifier[6854-6860]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6861-6865]:PrimitiveType[6861-6865]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[6866-6880]:SimpleName[6866-6880]"
    }, {
      "left" : "SerializableString name",
      "right" : "SerializableString name",
      "info" : "SingleVariableDeclaration[6881-6904]:SingleVariableDeclaration[6881-6904]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[6913-6924]:SimpleType[6913-6924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6929-8071]:Block[6929-8071]"
    }, {
      "left" : "if (_cfgPrettyPrinter != null)",
      "right" : "if (_cfgPrettyPrinter != null)",
      "info" : "IfStatement[6939-7038]:IfStatement[6939-7038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6970-7038]:Block[6970-7038]"
    }, {
      "left" : "_writePPFieldName(name);",
      "right" : "_writePPFieldName(name);",
      "info" : "ExpressionStatement[6984-7008]:ExpressionStatement[6984-7008]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7021-7028]:ReturnStatement[7021-7028]"
    }, {
      "left" : "final int status = _writeContext.writeFieldName(name.getValue());",
      "right" : "final int status = _writeContext.writeFieldName(name.getValue());",
      "info" : "VariableDeclarationStatement[7047-7112]:VariableDeclarationStatement[7047-7112]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "info" : "IfStatement[7121-7259]:IfStatement[7121-7259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7173-7259]:Block[7173-7259]"
    }, {
      "left" : "_reportError(\"Can not write a field name, expecting a value\");",
      "right" : "_reportError(\"Can not write a field name, expecting a value\");",
      "info" : "ExpressionStatement[7187-7249]:ExpressionStatement[7187-7249]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
      "right" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
      "info" : "IfStatement[7268-7479]:IfStatement[7268-7479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7322-7479]:Block[7322-7479]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[7336-7414]:IfStatement[7336-7414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7367-7414]:Block[7367-7414]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[7385-7400]:ExpressionStatement[7385-7400]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
      "info" : "ExpressionStatement[7427-7469]:ExpressionStatement[7427-7469]"
    }, {
      "left" : "if (_cfgUnqNames)",
      "right" : "if (_cfgUnqNames)",
      "info" : "IfStatement[7488-7566]:IfStatement[7488-7566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7506-7566]:Block[7506-7566]"
    }, {
      "left" : "_writeUnq(name);",
      "right" : "_writeUnq(name);",
      "info" : "ExpressionStatement[7520-7536]:ExpressionStatement[7520-7536]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7549-7556]:ReturnStatement[7549-7556]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[7575-7645]:IfStatement[7575-7645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7606-7645]:Block[7606-7645]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[7620-7635]:ExpressionStatement[7620-7635]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[7654-7696]:ExpressionStatement[7654-7696]"
    }, {
      "left" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
      "right" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
      "info" : "VariableDeclarationStatement[7705-7765]:VariableDeclarationStatement[7705-7765]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[7774-7935]:IfStatement[7774-7935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7787-7886]:Block[7787-7886]"
    }, {
      "left" : "_writeBytes(name.asQuotedUTF8());",
      "right" : "_writeBytes(name.asQuotedUTF8());",
      "info" : "ExpressionStatement[7843-7876]:ExpressionStatement[7843-7876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7892-7935]:Block[7892-7935]"
    }, {
      "left" : "_outputTail += len;",
      "right" : "_outputTail += len;",
      "info" : "ExpressionStatement[7906-7925]:ExpressionStatement[7906-7925]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[7944-8014]:IfStatement[7944-8014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7975-8014]:Block[7975-8014]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[7989-8004]:ExpressionStatement[7989-8004]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[8023-8065]:ExpressionStatement[8023-8065]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8081-8088]:Modifier[8081-8088]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8089-8094]:Modifier[8089-8094]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8095-8099]:PrimitiveType[8095-8099]"
    }, {
      "left" : "_writeUnq",
      "right" : "_writeUnq",
      "info" : "SimpleName[8100-8109]:SimpleName[8100-8109]"
    }, {
      "left" : "SerializableString name",
      "right" : "SerializableString name",
      "info" : "SingleVariableDeclaration[8110-8133]:SingleVariableDeclaration[8110-8133]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8142-8153]:SimpleType[8142-8153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8154-8358]:Block[8154-8358]"
    }, {
      "left" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
      "right" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
      "info" : "VariableDeclarationStatement[8164-8224]:VariableDeclarationStatement[8164-8224]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[8233-8352]:IfStatement[8233-8352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8246-8303]:Block[8246-8303]"
    }, {
      "left" : "_writeBytes(name.asQuotedUTF8());",
      "right" : "_writeBytes(name.asQuotedUTF8());",
      "info" : "ExpressionStatement[8260-8293]:ExpressionStatement[8260-8293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8309-8352]:Block[8309-8352]"
    }, {
      "left" : "_outputTail += len;",
      "right" : "_outputTail += len;",
      "info" : "ExpressionStatement[8323-8342]:ExpressionStatement[8323-8342]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8561-8570]:MarkerAnnotation[8561-8570]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8575-8581]:Modifier[8575-8581]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8582-8587]:Modifier[8582-8587]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8588-8592]:PrimitiveType[8588-8592]"
    }, {
      "left" : "writeStartArray",
      "right" : "writeStartArray",
      "info" : "SimpleName[8593-8608]:SimpleName[8593-8608]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8618-8629]:SimpleType[8618-8629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8634-9021]:Block[8634-9021]"
    }, {
      "left" : "_verifyValueWrite(\"start an array\");",
      "right" : "_verifyValueWrite(\"start an array\");",
      "info" : "ExpressionStatement[8644-8680]:ExpressionStatement[8644-8680]"
    }, {
      "left" : "_writeContext = _writeContext.createChildArrayContext();",
      "right" : "_writeContext = _writeContext.createChildArrayContext();",
      "info" : "ExpressionStatement[8689-8745]:ExpressionStatement[8689-8745]"
    }, {
      "left" : "if (_cfgPrettyPrinter != null)",
      "right" : "if (_cfgPrettyPrinter != null)",
      "info" : "IfStatement[8754-9015]:IfStatement[8754-9015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8785-8849]:Block[8785-8849]"
    }, {
      "left" : "_cfgPrettyPrinter.writeStartArray(this);",
      "right" : "_cfgPrettyPrinter.writeStartArray(this);",
      "info" : "ExpressionStatement[8799-8839]:ExpressionStatement[8799-8839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8855-9015]:Block[8855-9015]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[8869-8947]:IfStatement[8869-8947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8900-8947]:Block[8900-8947]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[8918-8933]:ExpressionStatement[8918-8933]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_LBRACKET;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_LBRACKET;",
      "info" : "ExpressionStatement[8960-9005]:ExpressionStatement[8960-9005]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9027-9036]:MarkerAnnotation[9027-9036]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9041-9047]:Modifier[9041-9047]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9048-9053]:Modifier[9048-9053]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9054-9058]:PrimitiveType[9054-9058]"
    }, {
      "left" : "writeEndArray",
      "right" : "writeEndArray",
      "info" : "SimpleName[9059-9072]:SimpleName[9059-9072]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9082-9093]:SimpleType[9082-9093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9098-9604]:Block[9098-9604]"
    }, {
      "left" : "if (!_writeContext.inArray())",
      "right" : "if (!_writeContext.inArray())",
      "info" : "IfStatement[9108-9240]:IfStatement[9108-9240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9138-9240]:Block[9138-9240]"
    }, {
      "left" : "_reportError(\"Current context not an ARRAY but \"+_writeContext.getTypeDesc());",
      "right" : "_reportError(\"Current context not an ARRAY but \"+_writeContext.getTypeDesc());",
      "info" : "ExpressionStatement[9152-9230]:ExpressionStatement[9152-9230]"
    }, {
      "left" : "if (_cfgPrettyPrinter != null)",
      "right" : "if (_cfgPrettyPrinter != null)",
      "info" : "IfStatement[9249-9539]:IfStatement[9249-9539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9280-9373]:Block[9280-9373]"
    }, {
      "left" : "_cfgPrettyPrinter.writeEndArray(this, _writeContext.getEntryCount());",
      "right" : "_cfgPrettyPrinter.writeEndArray(this, _writeContext.getEntryCount());",
      "info" : "ExpressionStatement[9294-9363]:ExpressionStatement[9294-9363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9379-9539]:Block[9379-9539]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[9393-9471]:IfStatement[9393-9471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9424-9471]:Block[9424-9471]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[9442-9457]:ExpressionStatement[9442-9457]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_RBRACKET;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_RBRACKET;",
      "info" : "ExpressionStatement[9484-9529]:ExpressionStatement[9484-9529]"
    }, {
      "left" : "_writeContext = _writeContext.clearAndGetParent();",
      "right" : "_writeContext = _writeContext.clearAndGetParent();",
      "info" : "ExpressionStatement[9548-9598]:ExpressionStatement[9548-9598]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9610-9619]:MarkerAnnotation[9610-9619]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9624-9630]:Modifier[9624-9630]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9631-9636]:Modifier[9631-9636]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9637-9641]:PrimitiveType[9637-9641]"
    }, {
      "left" : "writeStartObject",
      "right" : "writeStartObject",
      "info" : "SimpleName[9642-9658]:SimpleName[9642-9658]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9668-9679]:SimpleType[9668-9679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9684-10072]:Block[9684-10072]"
    }, {
      "left" : "_verifyValueWrite(\"start an object\");",
      "right" : "_verifyValueWrite(\"start an object\");",
      "info" : "ExpressionStatement[9694-9731]:ExpressionStatement[9694-9731]"
    }, {
      "left" : "_writeContext = _writeContext.createChildObjectContext();",
      "right" : "_writeContext = _writeContext.createChildObjectContext();",
      "info" : "ExpressionStatement[9740-9797]:ExpressionStatement[9740-9797]"
    }, {
      "left" : "if (_cfgPrettyPrinter != null)",
      "right" : "if (_cfgPrettyPrinter != null)",
      "info" : "IfStatement[9806-10066]:IfStatement[9806-10066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9837-9902]:Block[9837-9902]"
    }, {
      "left" : "_cfgPrettyPrinter.writeStartObject(this);",
      "right" : "_cfgPrettyPrinter.writeStartObject(this);",
      "info" : "ExpressionStatement[9851-9892]:ExpressionStatement[9851-9892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9908-10066]:Block[9908-10066]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[9922-10000]:IfStatement[9922-10000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9953-10000]:Block[9953-10000]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[9971-9986]:ExpressionStatement[9971-9986]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_LCURLY;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_LCURLY;",
      "info" : "ExpressionStatement[10013-10056]:ExpressionStatement[10013-10056]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10078-10087]:MarkerAnnotation[10078-10087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10092-10098]:Modifier[10092-10098]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10099-10104]:Modifier[10099-10104]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10105-10109]:PrimitiveType[10105-10109]"
    }, {
      "left" : "writeEndObject",
      "right" : "writeEndObject",
      "info" : "SimpleName[10110-10124]:SimpleName[10110-10124]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10134-10145]:SimpleType[10134-10145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10150-10657]:Block[10150-10657]"
    }, {
      "left" : "if (!_writeContext.inObject())",
      "right" : "if (!_writeContext.inObject())",
      "info" : "IfStatement[10160-10294]:IfStatement[10160-10294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10191-10294]:Block[10191-10294]"
    }, {
      "left" : "_reportError(\"Current context not an object but \"+_writeContext.getTypeDesc());",
      "right" : "_reportError(\"Current context not an object but \"+_writeContext.getTypeDesc());",
      "info" : "ExpressionStatement[10205-10284]:ExpressionStatement[10205-10284]"
    }, {
      "left" : "if (_cfgPrettyPrinter != null)",
      "right" : "if (_cfgPrettyPrinter != null)",
      "info" : "IfStatement[10303-10592]:IfStatement[10303-10592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10334-10428]:Block[10334-10428]"
    }, {
      "left" : "_cfgPrettyPrinter.writeEndObject(this, _writeContext.getEntryCount());",
      "right" : "_cfgPrettyPrinter.writeEndObject(this, _writeContext.getEntryCount());",
      "info" : "ExpressionStatement[10348-10418]:ExpressionStatement[10348-10418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10434-10592]:Block[10434-10592]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[10448-10526]:IfStatement[10448-10526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10479-10526]:Block[10479-10526]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[10497-10512]:ExpressionStatement[10497-10512]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_RCURLY;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_RCURLY;",
      "info" : "ExpressionStatement[10539-10582]:ExpressionStatement[10539-10582]"
    }, {
      "left" : "_writeContext = _writeContext.clearAndGetParent();",
      "right" : "_writeContext = _writeContext.clearAndGetParent();",
      "info" : "ExpressionStatement[10601-10651]:ExpressionStatement[10601-10651]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10824-10833]:Modifier[10824-10833]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10834-10839]:Modifier[10834-10839]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10840-10844]:PrimitiveType[10840-10844]"
    }, {
      "left" : "_writePPFieldName",
      "right" : "_writePPFieldName",
      "info" : "SimpleName[10845-10862]:SimpleName[10845-10862]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[10863-10874]:SingleVariableDeclaration[10863-10874]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10883-10894]:SimpleType[10883-10894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10899-12245]:Block[10899-12245]"
    }, {
      "left" : "int status = _writeContext.writeFieldName(name);",
      "right" : "int status = _writeContext.writeFieldName(name);",
      "info" : "VariableDeclarationStatement[10909-10957]:VariableDeclarationStatement[10909-10957]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "info" : "IfStatement[10966-11104]:IfStatement[10966-11104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11018-11104]:Block[11018-11104]"
    }, {
      "left" : "_reportError(\"Can not write a field name, expecting a value\");",
      "right" : "_reportError(\"Can not write a field name, expecting a value\");",
      "info" : "ExpressionStatement[11032-11094]:ExpressionStatement[11032-11094]"
    }, {
      "left" : "if ((status == JsonWriteContext.STATUS_OK_AFTER_COMMA))",
      "right" : "if ((status == JsonWriteContext.STATUS_OK_AFTER_COMMA))",
      "info" : "IfStatement[11113-11317]:IfStatement[11113-11317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11169-11243]:Block[11169-11243]"
    }, {
      "left" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
      "right" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
      "info" : "ExpressionStatement[11183-11233]:ExpressionStatement[11183-11233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11249-11317]:Block[11249-11317]"
    }, {
      "left" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
      "right" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
      "info" : "ExpressionStatement[11263-11307]:ExpressionStatement[11263-11307]"
    }, {
      "left" : "if (_cfgUnqNames)",
      "right" : "if (_cfgUnqNames)",
      "info" : "IfStatement[11326-11422]:IfStatement[11326-11422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11344-11422]:Block[11344-11422]"
    }, {
      "left" : "_writeStringSegments(name, false);",
      "right" : "_writeStringSegments(name, false);",
      "info" : "ExpressionStatement[11358-11392]:ExpressionStatement[11358-11392]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11405-11412]:ReturnStatement[11405-11412]"
    }, {
      "left" : "final int len = name.length();",
      "right" : "final int len = name.length();",
      "info" : "VariableDeclarationStatement[11431-11461]:VariableDeclarationStatement[11431-11461]"
    }, {
      "left" : "if (len > _charBufferLength)",
      "right" : "if (len > _charBufferLength)",
      "info" : "IfStatement[11470-11576]:IfStatement[11470-11576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11499-11576]:Block[11499-11576]"
    }, {
      "left" : "_writeStringSegments(name, true);",
      "right" : "_writeStringSegments(name, true);",
      "info" : "ExpressionStatement[11513-11546]:ExpressionStatement[11513-11546]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11559-11566]:ReturnStatement[11559-11566]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[11585-11655]:IfStatement[11585-11655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11616-11655]:Block[11616-11655]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[11630-11645]:ExpressionStatement[11630-11645]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[11664-11706]:ExpressionStatement[11664-11706]"
    }, {
      "left" : "name.getChars(0, len, _charBuffer, 0);",
      "right" : "name.getChars(0, len, _charBuffer, 0);",
      "info" : "ExpressionStatement[11715-11753]:ExpressionStatement[11715-11753]"
    }, {
      "left" : "if (len <= _outputMaxContiguous)",
      "right" : "if (len <= _outputMaxContiguous)",
      "info" : "IfStatement[11806-12109]:IfStatement[11806-12109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11839-12037]:Block[11839-12037]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[11853-11973]:IfStatement[11853-11973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11891-11973]:Block[11891-11973]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[11944-11959]:ExpressionStatement[11944-11959]"
    }, {
      "left" : "_writeStringSegment(_charBuffer, 0, len);",
      "right" : "_writeStringSegment(_charBuffer, 0, len);",
      "info" : "ExpressionStatement[11986-12027]:ExpressionStatement[11986-12027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12043-12109]:Block[12043-12109]"
    }, {
      "left" : "_writeStringSegments(_charBuffer, 0, len);",
      "right" : "_writeStringSegments(_charBuffer, 0, len);",
      "info" : "ExpressionStatement[12057-12099]:ExpressionStatement[12057-12099]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[12118-12188]:IfStatement[12118-12188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12149-12188]:Block[12149-12188]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[12163-12178]:ExpressionStatement[12163-12178]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[12197-12239]:ExpressionStatement[12197-12239]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12251-12260]:Modifier[12251-12260]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[12261-12266]:Modifier[12261-12266]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12267-12271]:PrimitiveType[12267-12271]"
    }, {
      "left" : "_writePPFieldName",
      "right" : "_writePPFieldName",
      "info" : "SimpleName[12272-12289]:SimpleName[12272-12289]"
    }, {
      "left" : "SerializableString name",
      "right" : "SerializableString name",
      "info" : "SingleVariableDeclaration[12290-12313]:SingleVariableDeclaration[12290-12313]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12322-12333]:SimpleType[12322-12333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12338-13243]:Block[12338-13243]"
    }, {
      "left" : "final int status = _writeContext.writeFieldName(name.getValue());",
      "right" : "final int status = _writeContext.writeFieldName(name.getValue());",
      "info" : "VariableDeclarationStatement[12348-12413]:VariableDeclarationStatement[12348-12413]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
      "info" : "IfStatement[12422-12560]:IfStatement[12422-12560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12474-12560]:Block[12474-12560]"
    }, {
      "left" : "_reportError(\"Can not write a field name, expecting a value\");",
      "right" : "_reportError(\"Can not write a field name, expecting a value\");",
      "info" : "ExpressionStatement[12488-12550]:ExpressionStatement[12488-12550]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
      "right" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
      "info" : "IfStatement[12569-12771]:IfStatement[12569-12771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12623-12697]:Block[12623-12697]"
    }, {
      "left" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
      "right" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
      "info" : "ExpressionStatement[12637-12687]:ExpressionStatement[12637-12687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12703-12771]:Block[12703-12771]"
    }, {
      "left" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
      "right" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
      "info" : "ExpressionStatement[12717-12761]:ExpressionStatement[12717-12761]"
    }, {
      "left" : "final boolean addQuotes = !_cfgUnqNames;",
      "right" : "final boolean addQuotes = !_cfgUnqNames;",
      "info" : "VariableDeclarationStatement[12781-12821]:VariableDeclarationStatement[12781-12821]"
    }, {
      "left" : "if (addQuotes)",
      "right" : "if (addQuotes)",
      "info" : "IfStatement[12842-13014]:IfStatement[12842-13014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12857-13014]:Block[12857-13014]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[12871-12949]:IfStatement[12871-12949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12902-12949]:Block[12902-12949]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[12920-12935]:ExpressionStatement[12920-12935]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[12962-13004]:ExpressionStatement[12962-13004]"
    }, {
      "left" : "_writeBytes(name.asQuotedUTF8());",
      "right" : "_writeBytes(name.asQuotedUTF8());",
      "info" : "ExpressionStatement[13023-13056]:ExpressionStatement[13023-13056]"
    }, {
      "left" : "if (addQuotes)",
      "right" : "if (addQuotes)",
      "info" : "IfStatement[13065-13237]:IfStatement[13065-13237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13080-13237]:Block[13080-13237]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[13094-13172]:IfStatement[13094-13172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13125-13172]:Block[13125-13172]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[13143-13158]:ExpressionStatement[13143-13158]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[13185-13227]:ExpressionStatement[13185-13227]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13443-13452]:MarkerAnnotation[13443-13452]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13457-13463]:Modifier[13457-13463]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13464-13468]:PrimitiveType[13464-13468]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[13469-13480]:SimpleName[13469-13480]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[13481-13492]:SingleVariableDeclaration[13481-13492]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13501-13512]:SimpleType[13501-13512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13517-14262]:Block[13517-14262]"
    }, {
      "left" : "_verifyValueWrite(WRITE_STRING);",
      "right" : "_verifyValueWrite(WRITE_STRING);",
      "info" : "ExpressionStatement[13527-13559]:ExpressionStatement[13527-13559]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[13568-13643]:IfStatement[13568-13643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13586-13643]:Block[13586-13643]"
    }, {
      "left" : "_writeNull();",
      "right" : "_writeNull();",
      "info" : "ExpressionStatement[13600-13613]:ExpressionStatement[13600-13613]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[13626-13633]:ReturnStatement[13626-13633]"
    }, {
      "left" : "final int len = text.length();",
      "right" : "final int len = text.length();",
      "info" : "VariableDeclarationStatement[13736-13766]:VariableDeclarationStatement[13736-13766]"
    }, {
      "left" : "if (len > _outputMaxContiguous)",
      "right" : "if (len > _outputMaxContiguous)",
      "info" : "IfStatement[13775-13911]:IfStatement[13775-13911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13807-13911]:Block[13807-13911]"
    }, {
      "left" : "_writeStringSegments(text, true);",
      "right" : "_writeStringSegments(text, true);",
      "info" : "ExpressionStatement[13848-13881]:ExpressionStatement[13848-13881]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[13894-13901]:ReturnStatement[13894-13901]"
    }, {
      "left" : "if ((_outputTail + len) >= _outputEnd)",
      "right" : "if ((_outputTail + len) >= _outputEnd)",
      "info" : "IfStatement[13920-13998]:IfStatement[13920-13998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13959-13998]:Block[13959-13998]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[13973-13988]:ExpressionStatement[13973-13988]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[14007-14049]:ExpressionStatement[14007-14049]"
    }, {
      "left" : "_writeStringSegment(text, 0, len);",
      "right" : "_writeStringSegment(text, 0, len);",
      "info" : "ExpressionStatement[14058-14092]:ExpressionStatement[14058-14092]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[14135-14205]:IfStatement[14135-14205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14166-14205]:Block[14166-14205]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[14180-14195]:ExpressionStatement[14180-14195]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[14214-14256]:ExpressionStatement[14214-14256]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14268-14277]:MarkerAnnotation[14268-14277]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14282-14288]:Modifier[14282-14288]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14289-14293]:PrimitiveType[14289-14293]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[14294-14305]:SimpleName[14294-14305]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[14306-14317]:SingleVariableDeclaration[14306-14317]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[14319-14329]:SingleVariableDeclaration[14319-14329]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[14331-14338]:SingleVariableDeclaration[14331-14338]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[14347-14358]:SimpleType[14347-14358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14363-15055]:Block[14363-15055]"
    }, {
      "left" : "_verifyValueWrite(WRITE_STRING);",
      "right" : "_verifyValueWrite(WRITE_STRING);",
      "info" : "ExpressionStatement[14373-14405]:ExpressionStatement[14373-14405]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[14414-14484]:IfStatement[14414-14484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14445-14484]:Block[14445-14484]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[14459-14474]:ExpressionStatement[14459-14474]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[14493-14535]:ExpressionStatement[14493-14535]"
    }, {
      "left" : "if (len <= _outputMaxContiguous)",
      "right" : "if (len <= _outputMaxContiguous)",
      "info" : "IfStatement[14581-14880]:IfStatement[14581-14880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14614-14810]:Block[14614-14810]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[14628-14748]:IfStatement[14628-14748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14666-14748]:Block[14666-14748]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[14719-14734]:ExpressionStatement[14719-14734]"
    }, {
      "left" : "_writeStringSegment(text, offset, len);",
      "right" : "_writeStringSegment(text, offset, len);",
      "info" : "ExpressionStatement[14761-14800]:ExpressionStatement[14761-14800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14816-14880]:Block[14816-14880]"
    }, {
      "left" : "_writeStringSegments(text, offset, len);",
      "right" : "_writeStringSegments(text, offset, len);",
      "info" : "ExpressionStatement[14830-14870]:ExpressionStatement[14830-14870]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[14928-14998]:IfStatement[14928-14998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14959-14998]:Block[14959-14998]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[14973-14988]:ExpressionStatement[14973-14988]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[15007-15049]:ExpressionStatement[15007-15049]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15061-15070]:MarkerAnnotation[15061-15070]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15075-15081]:Modifier[15075-15081]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[15082-15087]:Modifier[15082-15087]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15088-15092]:PrimitiveType[15088-15092]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[15093-15104]:SimpleName[15093-15104]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[15105-15128]:SingleVariableDeclaration[15105-15128]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[15137-15148]:SimpleType[15137-15148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15153-15658]:Block[15153-15658]"
    }, {
      "left" : "_verifyValueWrite(WRITE_STRING);",
      "right" : "_verifyValueWrite(WRITE_STRING);",
      "info" : "ExpressionStatement[15163-15195]:ExpressionStatement[15163-15195]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[15204-15274]:IfStatement[15204-15274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15235-15274]:Block[15235-15274]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[15249-15264]:ExpressionStatement[15249-15264]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[15283-15325]:ExpressionStatement[15283-15325]"
    }, {
      "left" : "int len = text.appendQuotedUTF8(_outputBuffer, _outputTail);",
      "right" : "int len = text.appendQuotedUTF8(_outputBuffer, _outputTail);",
      "info" : "VariableDeclarationStatement[15334-15394]:VariableDeclarationStatement[15334-15394]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[15403-15522]:IfStatement[15403-15522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15416-15473]:Block[15416-15473]"
    }, {
      "left" : "_writeBytes(text.asQuotedUTF8());",
      "right" : "_writeBytes(text.asQuotedUTF8());",
      "info" : "ExpressionStatement[15430-15463]:ExpressionStatement[15430-15463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15479-15522]:Block[15479-15522]"
    }, {
      "left" : "_outputTail += len;",
      "right" : "_outputTail += len;",
      "info" : "ExpressionStatement[15493-15512]:ExpressionStatement[15493-15512]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[15531-15601]:IfStatement[15531-15601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15562-15601]:Block[15562-15601]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[15576-15591]:ExpressionStatement[15576-15591]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[15610-15652]:ExpressionStatement[15610-15652]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15668-15677]:MarkerAnnotation[15668-15677]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15682-15688]:Modifier[15682-15688]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15689-15693]:PrimitiveType[15689-15693]"
    }, {
      "left" : "writeRawUTF8String",
      "right" : "writeRawUTF8String",
      "info" : "SimpleName[15694-15712]:SimpleName[15694-15712]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[15713-15724]:SingleVariableDeclaration[15713-15724]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[15726-15736]:SingleVariableDeclaration[15726-15736]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[15738-15748]:SingleVariableDeclaration[15738-15748]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[15757-15768]:SimpleType[15757-15768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15773-16124]:Block[15773-16124]"
    }, {
      "left" : "_verifyValueWrite(WRITE_STRING);",
      "right" : "_verifyValueWrite(WRITE_STRING);",
      "info" : "ExpressionStatement[15783-15815]:ExpressionStatement[15783-15815]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[15824-15894]:IfStatement[15824-15894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15855-15894]:Block[15855-15894]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[15869-15884]:ExpressionStatement[15869-15884]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[15903-15945]:ExpressionStatement[15903-15945]"
    }, {
      "left" : "_writeBytes(text, offset, length);",
      "right" : "_writeBytes(text, offset, length);",
      "info" : "ExpressionStatement[15954-15988]:ExpressionStatement[15954-15988]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[15997-16067]:IfStatement[15997-16067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16028-16067]:Block[16028-16067]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[16042-16057]:ExpressionStatement[16042-16057]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[16076-16118]:ExpressionStatement[16076-16118]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16130-16139]:MarkerAnnotation[16130-16139]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16144-16150]:Modifier[16144-16150]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16151-16155]:PrimitiveType[16151-16155]"
    }, {
      "left" : "writeUTF8String",
      "right" : "writeUTF8String",
      "info" : "SimpleName[16156-16171]:SimpleName[16156-16171]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[16172-16183]:SingleVariableDeclaration[16172-16183]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[16185-16195]:SingleVariableDeclaration[16185-16195]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[16197-16204]:SingleVariableDeclaration[16197-16204]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[16213-16224]:SimpleType[16213-16224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16229-16745]:Block[16229-16745]"
    }, {
      "left" : "_verifyValueWrite(WRITE_STRING);",
      "right" : "_verifyValueWrite(WRITE_STRING);",
      "info" : "ExpressionStatement[16239-16271]:ExpressionStatement[16239-16271]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[16280-16350]:IfStatement[16280-16350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16311-16350]:Block[16311-16350]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[16325-16340]:ExpressionStatement[16325-16340]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[16359-16401]:ExpressionStatement[16359-16401]"
    }, {
      "left" : "if (len <= _outputMaxContiguous)",
      "right" : "if (len <= _outputMaxContiguous)",
      "info" : "IfStatement[16447-16609]:IfStatement[16447-16609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16480-16541]:Block[16480-16541]"
    }, {
      "left" : "_writeUTF8Segment(text, offset, len);",
      "right" : "_writeUTF8Segment(text, offset, len);",
      "info" : "ExpressionStatement[16494-16531]:ExpressionStatement[16494-16531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16547-16609]:Block[16547-16609]"
    }, {
      "left" : "_writeUTF8Segments(text, offset, len);",
      "right" : "_writeUTF8Segments(text, offset, len);",
      "info" : "ExpressionStatement[16561-16599]:ExpressionStatement[16561-16599]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[16618-16688]:IfStatement[16618-16688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16649-16688]:Block[16649-16688]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[16663-16678]:ExpressionStatement[16663-16678]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[16697-16739]:ExpressionStatement[16697-16739]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16953-16962]:MarkerAnnotation[16953-16962]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16967-16973]:Modifier[16967-16973]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16974-16978]:PrimitiveType[16974-16978]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[16979-16987]:SimpleName[16979-16987]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[16988-16999]:SingleVariableDeclaration[16988-16999]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17008-17019]:SimpleType[17008-17019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17020-17069]:Block[17020-17069]"
    }, {
      "left" : "writeRaw(text, 0, text.length());",
      "right" : "writeRaw(text, 0, text.length());",
      "info" : "ExpressionStatement[17030-17063]:ExpressionStatement[17030-17063]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17879-17888]:MarkerAnnotation[18478-18487]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17893-17899]:Modifier[18492-18498]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17900-17904]:PrimitiveType[18499-18503]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[17905-17913]:SimpleName[18504-18512]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[17914-17937]:SingleVariableDeclaration[18513-18536]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17946-17957]:SimpleType[18545-18556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17962-18083]:Block[18561-18682]"
    }, {
      "left" : "byte[] raw = text.asUnquotedUTF8();",
      "right" : "byte[] raw = text.asUnquotedUTF8();",
      "info" : "VariableDeclarationStatement[17972-18007]:VariableDeclarationStatement[18571-18606]"
    }, {
      "left" : "if (raw.length > 0)",
      "right" : "if (raw.length > 0)",
      "info" : "IfStatement[18016-18077]:IfStatement[18615-18676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18036-18077]:Block[18635-18676]"
    }, {
      "left" : "_writeBytes(raw);",
      "right" : "_writeBytes(raw);",
      "info" : "ExpressionStatement[18050-18067]:ExpressionStatement[18649-18666]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18106-18115]:MarkerAnnotation[18705-18714]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18120-18126]:Modifier[18719-18725]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18127-18131]:PrimitiveType[18726-18730]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[18132-18145]:SimpleName[18731-18744]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[18146-18169]:SingleVariableDeclaration[18745-18768]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18178-18189]:SimpleType[18777-18788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18190-18349]:Block[18789-18948]"
    }, {
      "left" : "_verifyValueWrite(WRITE_RAW);",
      "right" : "_verifyValueWrite(WRITE_RAW);",
      "info" : "ExpressionStatement[18200-18229]:ExpressionStatement[18799-18828]"
    }, {
      "left" : "byte[] raw = text.asUnquotedUTF8();",
      "right" : "byte[] raw = text.asUnquotedUTF8();",
      "info" : "VariableDeclarationStatement[18238-18273]:VariableDeclarationStatement[18837-18872]"
    }, {
      "left" : "if (raw.length > 0)",
      "right" : "if (raw.length > 0)",
      "info" : "IfStatement[18282-18343]:IfStatement[18881-18942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18302-18343]:Block[18901-18942]"
    }, {
      "left" : "_writeBytes(raw);",
      "right" : "_writeBytes(raw);",
      "info" : "ExpressionStatement[18316-18333]:ExpressionStatement[18915-18932]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18390-18399]:MarkerAnnotation[18989-18998]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18404-18410]:Modifier[19003-19009]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18411-18416]:Modifier[19010-19015]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18417-18421]:PrimitiveType[19016-19020]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[18422-18430]:SimpleName[19021-19029]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[18431-18442]:SingleVariableDeclaration[19030-19041]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[18444-18454]:SingleVariableDeclaration[19043-19053]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[18456-18463]:SingleVariableDeclaration[19055-19062]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18472-18483]:SimpleType[19071-19082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18488-19871]:Block[19087-20470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18577-18988]:Block[19176-19587]"
    }, {
      "left" : "int len3 = len+len+len;",
      "right" : "int len3 = len+len+len;",
      "info" : "VariableDeclarationStatement[18591-18614]:VariableDeclarationStatement[19190-19213]"
    }, {
      "left" : "if ((_outputTail + len3) > _outputEnd)",
      "right" : "if ((_outputTail + len3) > _outputEnd)",
      "info" : "IfStatement[18627-18978]:IfStatement[19226-19577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18666-18978]:Block[19265-19577]"
    }, {
      "left" : "if (_outputEnd < len3)",
      "right" : "if (_outputEnd < len3)",
      "info" : "IfStatement[18725-18879]:IfStatement[19324-19478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18748-18879]:Block[19347-19478]"
    }, {
      "left" : "_writeSegmentedRaw(cbuf, offset, len);",
      "right" : "_writeSegmentedRaw(cbuf, offset, len);",
      "info" : "ExpressionStatement[18795-18833]:ExpressionStatement[19394-19432]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[18854-18861]:ReturnStatement[19453-19460]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[18949-18964]:ExpressionStatement[19548-19563]"
    }, {
      "left" : "len += offset;",
      "right" : "len += offset;",
      "info" : "ExpressionStatement[18997-19011]:ExpressionStatement[19596-19610]"
    }, {
      "left" : "main_loop:\n        while (offset < len) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, len);\n            }\n        }",
      "right" : "main_loop:\n        while (offset < len) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, len);\n            }\n        }",
      "info" : "LabeledStatement[19126-19865]:LabeledStatement[19725-20464]"
    }, {
      "left" : "while (offset < len)",
      "right" : "while (offset < len)",
      "info" : "WhileStatement[19145-19865]:WhileStatement[19744-20464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19166-19865]:Block[19765-20464]"
    }, {
      "left" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }",
      "right" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }",
      "info" : "LabeledStatement[19180-19518]:LabeledStatement[19779-20117]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[19204-19518]:WhileStatement[19803-20117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19217-19518]:Block[19816-20117]"
    }, {
      "left" : "int ch = (int) cbuf[offset];",
      "right" : "int ch = (int) cbuf[offset];",
      "info" : "VariableDeclarationStatement[19235-19263]:VariableDeclarationStatement[19834-19862]"
    }, {
      "left" : "if (ch > 0x7F)",
      "right" : "if (ch > 0x7F)",
      "info" : "IfStatement[19280-19352]:IfStatement[19879-19951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19295-19352]:Block[19894-19951]"
    }, {
      "left" : "break inner_loop;",
      "right" : "break inner_loop;",
      "info" : "BreakStatement[19317-19334]:BreakStatement[19916-19933]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = (byte) ch;",
      "right" : "_outputBuffer[_outputTail++] = (byte) ch;",
      "info" : "ExpressionStatement[19369-19410]:ExpressionStatement[19968-20009]"
    }, {
      "left" : "if (++offset >= len)",
      "right" : "if (++offset >= len)",
      "info" : "IfStatement[19427-19504]:IfStatement[20026-20103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19448-19504]:Block[20047-20103]"
    }, {
      "left" : "break main_loop;",
      "right" : "break main_loop;",
      "info" : "BreakStatement[19470-19486]:BreakStatement[20069-20085]"
    }, {
      "left" : "char ch = cbuf[offset++];",
      "right" : "char ch = cbuf[offset++];",
      "info" : "VariableDeclarationStatement[19531-19556]:VariableDeclarationStatement[20130-20155]"
    }, {
      "left" : "if (ch < 0x800)",
      "right" : "if (ch < 0x800)",
      "info" : "IfStatement[19569-19855]:IfStatement[20168-20454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19585-19761]:Block[20184-20360]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "_outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[19614-19671]:ExpressionStatement[20213-20270]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "_outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[19688-19747]:ExpressionStatement[20287-20346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19767-19855]:Block[20366-20454]"
    }, {
      "left" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, len);",
      "right" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, len);",
      "info" : "ExpressionStatement[19785-19841]:ExpressionStatement[20384-20440]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19877-19886]:MarkerAnnotation[20476-20485]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19891-19897]:Modifier[20490-20496]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19898-19902]:PrimitiveType[20497-20501]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[19903-19911]:SimpleName[20502-20510]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[19912-19919]:SingleVariableDeclaration[20511-20518]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19928-19939]:SimpleType[20527-20538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19944-20412]:Block[20543-21011]"
    }, {
      "left" : "if ((_outputTail + 3) >= _outputEnd)",
      "right" : "if ((_outputTail + 3) >= _outputEnd)",
      "info" : "IfStatement[19954-20030]:IfStatement[20553-20629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19991-20030]:Block[20590-20629]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[20005-20020]:ExpressionStatement[20604-20619]"
    }, {
      "left" : "final byte[] bbuf = _outputBuffer;",
      "right" : "final byte[] bbuf = _outputBuffer;",
      "info" : "VariableDeclarationStatement[20039-20073]:VariableDeclarationStatement[20638-20672]"
    }, {
      "left" : "if (ch <= 0x7F)",
      "right" : "if (ch <= 0x7F)",
      "info" : "IfStatement[20082-20406]:IfStatement[20681-21005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20098-20154]:Block[20697-20753]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) ch;",
      "right" : "bbuf[_outputTail++] = (byte) ch;",
      "info" : "ExpressionStatement[20112-20144]:ExpressionStatement[20711-20743]"
    }, {
      "left" : "if (ch < 0x800)",
      "right" : "if (ch < 0x800)",
      "info" : "IfStatement[20161-20406]:IfStatement[20760-21005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20177-20323]:Block[20776-20922]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[20202-20250]:ExpressionStatement[20801-20849]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[20263-20313]:ExpressionStatement[20862-20912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20329-20406]:Block[20928-21005]"
    }, {
      "left" : "_outputRawMultiByteChar(ch, null, 0, 0);",
      "right" : "_outputRawMultiByteChar(ch, null, 0, 0);",
      "info" : "ExpressionStatement[20356-20396]:ExpressionStatement[20955-20995]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20552-20559]:Modifier[21151-21158]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[20560-20565]:Modifier[21159-21164]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20566-20570]:PrimitiveType[21165-21169]"
    }, {
      "left" : "_writeSegmentedRaw",
      "right" : "_writeSegmentedRaw",
      "info" : "SimpleName[20571-20589]:SimpleName[21170-21188]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[20590-20601]:SingleVariableDeclaration[21189-21200]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[20603-20613]:SingleVariableDeclaration[21202-21212]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[20615-20622]:SingleVariableDeclaration[21214-21221]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20631-20642]:SimpleType[21230-21241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20647-21795]:Block[21246-22394]"
    }, {
      "left" : "final int end = _outputEnd;",
      "right" : "final int end = _outputEnd;",
      "info" : "VariableDeclarationStatement[20657-20684]:VariableDeclarationStatement[21256-21283]"
    }, {
      "left" : "final byte[] bbuf = _outputBuffer;",
      "right" : "final byte[] bbuf = _outputBuffer;",
      "info" : "VariableDeclarationStatement[20693-20727]:VariableDeclarationStatement[21292-21326]"
    }, {
      "left" : "final int inputEnd = offset + len;",
      "right" : "final int inputEnd = offset + len;",
      "info" : "VariableDeclarationStatement[20736-20770]:VariableDeclarationStatement[21335-21369]"
    }, {
      "left" : "main_loop:\n        while (offset < inputEnd) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }\n            if ((_outputTail + 3) >= _outputEnd) {\n                _flushBuffer();\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);\n            }\n        }",
      "right" : "main_loop:\n        while (offset < inputEnd) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }\n            if ((_outputTail + 3) >= _outputEnd) {\n                _flushBuffer();\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);\n            }\n        }",
      "info" : "LabeledStatement[20788-21789]:LabeledStatement[21387-22388]"
    }, {
      "left" : "while (offset < inputEnd)",
      "right" : "while (offset < inputEnd)",
      "info" : "WhileStatement[20807-21789]:WhileStatement[21406-22388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20833-21789]:Block[21432-22388]"
    }, {
      "left" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }",
      "right" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }",
      "info" : "LabeledStatement[20847-21358]:LabeledStatement[21446-21957]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[20871-21358]:WhileStatement[21470-21957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20884-21358]:Block[21483-21957]"
    }, {
      "left" : "int ch = (int) cbuf[offset];",
      "right" : "int ch = (int) cbuf[offset];",
      "info" : "VariableDeclarationStatement[20902-20930]:VariableDeclarationStatement[21501-21529]"
    }, {
      "left" : "if (ch >= 0x80)",
      "right" : "if (ch >= 0x80)",
      "info" : "IfStatement[20947-21020]:IfStatement[21546-21619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20963-21020]:Block[21562-21619]"
    }, {
      "left" : "break inner_loop;",
      "right" : "break inner_loop;",
      "info" : "BreakStatement[20985-21002]:BreakStatement[21584-21601]"
    }, {
      "left" : "if (_outputTail >= end)",
      "right" : "if (_outputTail >= end)",
      "info" : "IfStatement[21117-21196]:IfStatement[21716-21795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21141-21196]:Block[21740-21795]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[21163-21178]:ExpressionStatement[21762-21777]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) ch;",
      "right" : "bbuf[_outputTail++] = (byte) ch;",
      "info" : "ExpressionStatement[21213-21245]:ExpressionStatement[21812-21844]"
    }, {
      "left" : "if (++offset >= inputEnd)",
      "right" : "if (++offset >= inputEnd)",
      "info" : "IfStatement[21262-21344]:IfStatement[21861-21943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21288-21344]:Block[21887-21943]"
    }, {
      "left" : "break main_loop;",
      "right" : "break main_loop;",
      "info" : "BreakStatement[21310-21326]:BreakStatement[21909-21925]"
    }, {
      "left" : "if ((_outputTail + 3) >= _outputEnd)",
      "right" : "if ((_outputTail + 3) >= _outputEnd)",
      "info" : "IfStatement[21371-21455]:IfStatement[21970-22054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21408-21455]:Block[22007-22054]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[21426-21441]:ExpressionStatement[22025-22040]"
    }, {
      "left" : "char ch = cbuf[offset++];",
      "right" : "char ch = cbuf[offset++];",
      "info" : "VariableDeclarationStatement[21468-21493]:VariableDeclarationStatement[22067-22092]"
    }, {
      "left" : "if (ch < 0x800)",
      "right" : "if (ch < 0x800)",
      "info" : "IfStatement[21506-21779]:IfStatement[22105-22378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21522-21680]:Block[22121-22279]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[21551-21599]:ExpressionStatement[22150-22198]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[21616-21666]:ExpressionStatement[22215-22265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21686-21779]:Block[22285-22378]"
    }, {
      "left" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);",
      "right" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);",
      "info" : "ExpressionStatement[21704-21765]:ExpressionStatement[22303-22364]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22947-22956]:MarkerAnnotation[24393-24402]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22961-22967]:Modifier[24407-24413]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[22968-22971]:PrimitiveType[24414-24417]"
    }, {
      "left" : "writeBinary",
      "right" : "writeBinary",
      "info" : "SimpleName[22972-22983]:SimpleName[24418-24429]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[22984-23008]:SingleVariableDeclaration[24430-24454]"
    }, {
      "left" : "InputStream data",
      "right" : "InputStream data",
      "info" : "SingleVariableDeclaration[23022-23038]:SingleVariableDeclaration[24468-24484]"
    }, {
      "left" : "int dataLength",
      "right" : "int dataLength",
      "info" : "SingleVariableDeclaration[23040-23054]:SingleVariableDeclaration[24486-24500]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23071-23082]:SimpleType[24517-24528]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23084-23107]:SimpleType[24530-24553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23112-24136]:Block[24558-25582]"
    }, {
      "left" : "_verifyValueWrite(WRITE_BINARY);",
      "right" : "_verifyValueWrite(WRITE_BINARY);",
      "info" : "ExpressionStatement[23122-23154]:ExpressionStatement[24568-24600]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[23190-23260]:IfStatement[24636-24706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23221-23260]:Block[24667-24706]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[23235-23250]:ExpressionStatement[24681-24696]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[23269-23311]:ExpressionStatement[24715-24757]"
    }, {
      "left" : "byte[] encodingBuffer = _ioContext.allocBase64Buffer();",
      "right" : "byte[] encodingBuffer = _ioContext.allocBase64Buffer();",
      "info" : "VariableDeclarationStatement[23320-23375]:VariableDeclarationStatement[24766-24821]"
    }, {
      "left" : "int bytes;",
      "right" : "int bytes;",
      "info" : "VariableDeclarationStatement[23384-23394]:VariableDeclarationStatement[24830-24840]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[23403-23948]:TryStatement[24849-25394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23407-23868]:Block[24853-25314]"
    }, {
      "left" : "if (dataLength < 0)",
      "right" : "if (dataLength < 0)",
      "info" : "IfStatement[23421-23858]:IfStatement[24867-25304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23441-23546]:Block[24887-24992]"
    }, {
      "left" : "bytes = _writeBinary(b64variant, data, encodingBuffer);",
      "right" : "bytes = _writeBinary(b64variant, data, encodingBuffer);",
      "info" : "ExpressionStatement[23477-23532]:ExpressionStatement[24923-24978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23552-23858]:Block[24998-25304]"
    }, {
      "left" : "int missing = _writeBinary(b64variant, data, encodingBuffer, dataLength);",
      "right" : "int missing = _writeBinary(b64variant, data, encodingBuffer, dataLength);",
      "info" : "VariableDeclarationStatement[23570-23643]:VariableDeclarationStatement[25016-25089]"
    }, {
      "left" : "if (missing > 0)",
      "right" : "if (missing > 0)",
      "info" : "IfStatement[23660-23808]:IfStatement[25106-25254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23677-23808]:Block[25123-25254]"
    }, {
      "left" : "_reportError(\"Too few bytes available: missing \"+missing+\" bytes (out of \"+dataLength+\")\");",
      "right" : "_reportError(\"Too few bytes available: missing \"+missing+\" bytes (out of \"+dataLength+\")\");",
      "info" : "ExpressionStatement[23699-23790]:ExpressionStatement[25145-25236]"
    }, {
      "left" : "bytes = dataLength;",
      "right" : "bytes = dataLength;",
      "info" : "ExpressionStatement[23825-23844]:ExpressionStatement[25271-25290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23877-23948]:Block[25323-25394]"
    }, {
      "left" : "_ioContext.releaseBase64Buffer(encodingBuffer);",
      "right" : "_ioContext.releaseBase64Buffer(encodingBuffer);",
      "info" : "ExpressionStatement[23891-23938]:ExpressionStatement[25337-25384]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[23987-24057]:IfStatement[25433-25503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24018-24057]:Block[25464-25503]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[24032-24047]:ExpressionStatement[25478-25493]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[24066-24108]:ExpressionStatement[25512-25554]"
    }, {
      "left" : "return bytes;",
      "right" : "return bytes;",
      "info" : "ReturnStatement[24117-24130]:ReturnStatement[25563-25576]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24338-24347]:MarkerAnnotation[25784-25793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24352-24358]:Modifier[25798-25804]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24359-24363]:PrimitiveType[25805-25809]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[24364-24375]:SimpleName[25810-25821]"
    }, {
      "left" : "short s",
      "right" : "short s",
      "info" : "SingleVariableDeclaration[24376-24383]:SingleVariableDeclaration[25822-25829]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24392-24403]:SimpleType[25838-25849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24408-24768]:Block[25854-26214]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[24418-24450]:ExpressionStatement[25864-25896]"
    }, {
      "left" : "if ((_outputTail + 6) >= _outputEnd)",
      "right" : "if ((_outputTail + 6) >= _outputEnd)",
      "info" : "IfStatement[24509-24585]:IfStatement[25955-26031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24546-24585]:Block[25992-26031]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[24560-24575]:ExpressionStatement[26006-26021]"
    }, {
      "left" : "if (_cfgNumbersAsStrings)",
      "right" : "if (_cfgNumbersAsStrings)",
      "info" : "IfStatement[24594-24685]:IfStatement[26040-26131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24620-24685]:Block[26066-26131]"
    }, {
      "left" : "_writeQuotedShort(s);",
      "right" : "_writeQuotedShort(s);",
      "info" : "ExpressionStatement[24634-24655]:ExpressionStatement[26080-26101]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[24668-24675]:ReturnStatement[26114-26121]"
    }, {
      "left" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
      "right" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[24694-24762]:ExpressionStatement[26140-26208]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24778-24785]:Modifier[26224-26231]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[24786-24791]:Modifier[26232-26237]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24792-24796]:PrimitiveType[26238-26242]"
    }, {
      "left" : "_writeQuotedShort",
      "right" : "_writeQuotedShort",
      "info" : "SimpleName[24797-24814]:SimpleName[26243-26260]"
    }, {
      "left" : "short s",
      "right" : "short s",
      "info" : "SingleVariableDeclaration[24815-24822]:SingleVariableDeclaration[26261-26268]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24831-24842]:SimpleType[26277-26288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24843-25114]:Block[26289-26560]"
    }, {
      "left" : "if ((_outputTail + 8) >= _outputEnd)",
      "right" : "if ((_outputTail + 8) >= _outputEnd)",
      "info" : "IfStatement[24853-24929]:IfStatement[26299-26375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24890-24929]:Block[26336-26375]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[24904-24919]:ExpressionStatement[26350-26365]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[24938-24980]:ExpressionStatement[26384-26426]"
    }, {
      "left" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
      "right" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[24989-25057]:ExpressionStatement[26435-26503]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[25066-25108]:ExpressionStatement[26512-26554]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25125-25134]:MarkerAnnotation[26571-26580]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25139-25145]:Modifier[26585-26591]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25146-25150]:PrimitiveType[26592-26596]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[25151-25162]:SimpleName[26597-26608]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[25163-25168]:SingleVariableDeclaration[26609-26614]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[25177-25188]:SimpleType[26623-26634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25193-25553]:Block[26639-26999]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[25203-25235]:ExpressionStatement[26649-26681]"
    }, {
      "left" : "if ((_outputTail + 11) >= _outputEnd)",
      "right" : "if ((_outputTail + 11) >= _outputEnd)",
      "info" : "IfStatement[25295-25372]:IfStatement[26741-26818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25333-25372]:Block[26779-26818]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[25347-25362]:ExpressionStatement[26793-26808]"
    }, {
      "left" : "if (_cfgNumbersAsStrings)",
      "right" : "if (_cfgNumbersAsStrings)",
      "info" : "IfStatement[25381-25470]:IfStatement[26827-26916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25407-25470]:Block[26853-26916]"
    }, {
      "left" : "_writeQuotedInt(i);",
      "right" : "_writeQuotedInt(i);",
      "info" : "ExpressionStatement[25421-25440]:ExpressionStatement[26867-26886]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25453-25460]:ReturnStatement[26899-26906]"
    }, {
      "left" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
      "right" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[25479-25547]:ExpressionStatement[26925-26993]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25559-25566]:Modifier[27005-27012]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[25567-25572]:Modifier[27013-27018]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25573-25577]:PrimitiveType[27019-27023]"
    }, {
      "left" : "_writeQuotedInt",
      "right" : "_writeQuotedInt",
      "info" : "SimpleName[25578-25593]:SimpleName[27024-27039]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[25594-25599]:SingleVariableDeclaration[27040-27045]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[25608-25619]:SimpleType[27054-27065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25624-25896]:Block[27070-27342]"
    }, {
      "left" : "if ((_outputTail + 13) >= _outputEnd)",
      "right" : "if ((_outputTail + 13) >= _outputEnd)",
      "info" : "IfStatement[25634-25711]:IfStatement[27080-27157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25672-25711]:Block[27118-27157]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[25686-25701]:ExpressionStatement[27132-27147]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[25720-25762]:ExpressionStatement[27166-27208]"
    }, {
      "left" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
      "right" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[25771-25839]:ExpressionStatement[27217-27285]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[25848-25890]:ExpressionStatement[27294-27336]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25906-25915]:MarkerAnnotation[27352-27361]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25920-25926]:Modifier[27366-27372]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25927-25931]:PrimitiveType[27373-27377]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[25932-25943]:SimpleName[27378-27389]"
    }, {
      "left" : "long l",
      "right" : "long l",
      "info" : "SingleVariableDeclaration[25944-25950]:SingleVariableDeclaration[27390-27396]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[25959-25970]:SimpleType[27405-27416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25975-26329]:Block[27421-27775]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[25985-26017]:ExpressionStatement[27431-27463]"
    }, {
      "left" : "if (_cfgNumbersAsStrings)",
      "right" : "if (_cfgNumbersAsStrings)",
      "info" : "IfStatement[26026-26116]:IfStatement[27472-27562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26052-26116]:Block[27498-27562]"
    }, {
      "left" : "_writeQuotedLong(l);",
      "right" : "_writeQuotedLong(l);",
      "info" : "ExpressionStatement[26066-26086]:ExpressionStatement[27512-27532]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[26099-26106]:ReturnStatement[27545-27552]"
    }, {
      "left" : "if ((_outputTail + 21) >= _outputEnd)",
      "right" : "if ((_outputTail + 21) >= _outputEnd)",
      "info" : "IfStatement[26125-26245]:IfStatement[27571-27691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26163-26245]:Block[27609-27691]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[26220-26235]:ExpressionStatement[27666-27681]"
    }, {
      "left" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
      "right" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[26254-26323]:ExpressionStatement[27700-27769]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26335-26342]:Modifier[27781-27788]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[26343-26348]:Modifier[27789-27794]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26349-26353]:PrimitiveType[27795-27799]"
    }, {
      "left" : "_writeQuotedLong",
      "right" : "_writeQuotedLong",
      "info" : "SimpleName[26354-26370]:SimpleName[27800-27816]"
    }, {
      "left" : "long l",
      "right" : "long l",
      "info" : "SingleVariableDeclaration[26371-26377]:SingleVariableDeclaration[27817-27823]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[26386-26397]:SimpleType[27832-27843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26402-26675]:Block[27848-28121]"
    }, {
      "left" : "if ((_outputTail + 23) >= _outputEnd)",
      "right" : "if ((_outputTail + 23) >= _outputEnd)",
      "info" : "IfStatement[26412-26489]:IfStatement[27858-27935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26450-26489]:Block[27896-27935]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[26464-26479]:ExpressionStatement[27910-27925]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[26498-26540]:ExpressionStatement[27944-27986]"
    }, {
      "left" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
      "right" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[26549-26618]:ExpressionStatement[27995-28064]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[26627-26669]:ExpressionStatement[28073-28115]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26681-26690]:MarkerAnnotation[28127-28136]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26695-26701]:Modifier[28141-28147]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26702-26706]:PrimitiveType[28148-28152]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[26707-26718]:SimpleName[28153-28164]"
    }, {
      "left" : "BigInteger value",
      "right" : "BigInteger value",
      "info" : "SingleVariableDeclaration[26719-26735]:SingleVariableDeclaration[28165-28181]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[26744-26755]:SimpleType[28190-28201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26760-27020]:Block[28206-28466]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[26770-26802]:ExpressionStatement[28216-28248]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[26811-27014]:IfStatement[28257-28460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26830-26867]:Block[28276-28313]"
    }, {
      "left" : "_writeNull();",
      "right" : "_writeNull();",
      "info" : "ExpressionStatement[26844-26857]:ExpressionStatement[28290-28303]"
    }, {
      "left" : "if (_cfgNumbersAsStrings)",
      "right" : "if (_cfgNumbersAsStrings)",
      "info" : "IfStatement[26873-27014]:IfStatement[28319-28460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26899-26957]:Block[28345-28403]"
    }, {
      "left" : "_writeQuotedRaw(value.toString());",
      "right" : "_writeQuotedRaw(value.toString());",
      "info" : "ExpressionStatement[26913-26947]:ExpressionStatement[28359-28393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26963-27014]:Block[28409-28460]"
    }, {
      "left" : "writeRaw(value.toString());",
      "right" : "writeRaw(value.toString());",
      "info" : "ExpressionStatement[26977-27004]:ExpressionStatement[28423-28450]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27031-27040]:MarkerAnnotation[28477-28486]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27045-27051]:Modifier[28491-28497]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27052-27056]:PrimitiveType[28498-28502]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[27057-27068]:SimpleName[28503-28514]"
    }, {
      "left" : "double d",
      "right" : "double d",
      "info" : "SingleVariableDeclaration[27069-27077]:SingleVariableDeclaration[28515-28523]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[27086-27097]:SimpleType[28532-28543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27102-27489]:Block[28548-28935]"
    }, {
      "left" : "if (_cfgNumbersAsStrings ||\n            (((Double.isNaN(d) || Double.isInfinite(d))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
      "right" : "if (_cfgNumbersAsStrings ||\n            (((Double.isNaN(d) || Double.isInfinite(d))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
      "info" : "IfStatement[27112-27348]:IfStatement[28558-28794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27273-27348]:Block[28719-28794]"
    }, {
      "left" : "writeString(String.valueOf(d));",
      "right" : "writeString(String.valueOf(d));",
      "info" : "ExpressionStatement[27287-27318]:ExpressionStatement[28733-28764]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[27331-27338]:ReturnStatement[28777-28784]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[27414-27446]:ExpressionStatement[28860-28892]"
    }, {
      "left" : "writeRaw(String.valueOf(d));",
      "right" : "writeRaw(String.valueOf(d));",
      "info" : "ExpressionStatement[27455-27483]:ExpressionStatement[28901-28929]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27495-27504]:MarkerAnnotation[28941-28950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27509-27515]:Modifier[28955-28961]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27516-27520]:PrimitiveType[28962-28966]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[27521-27532]:SimpleName[28967-28978]"
    }, {
      "left" : "float f",
      "right" : "float f",
      "info" : "SingleVariableDeclaration[27533-27540]:SingleVariableDeclaration[28979-28986]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[27549-27560]:SimpleType[28995-29006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27565-27968]:Block[29011-29414]"
    }, {
      "left" : "if (_cfgNumbersAsStrings ||\n            // [JACKSON-139]\n            (((Float.isNaN(f) || Float.isInfinite(f))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
      "right" : "if (_cfgNumbersAsStrings ||\n            // [JACKSON-139]\n            (((Float.isNaN(f) || Float.isInfinite(f))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
      "info" : "IfStatement[27575-27838]:IfStatement[29021-29284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27763-27838]:Block[29209-29284]"
    }, {
      "left" : "writeString(String.valueOf(f));",
      "right" : "writeString(String.valueOf(f));",
      "info" : "ExpressionStatement[27777-27808]:ExpressionStatement[29223-29254]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[27821-27828]:ReturnStatement[29267-29274]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[27893-27925]:ExpressionStatement[29339-29371]"
    }, {
      "left" : "writeRaw(String.valueOf(f));",
      "right" : "writeRaw(String.valueOf(f));",
      "info" : "ExpressionStatement[27934-27962]:ExpressionStatement[29380-29408]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27974-27983]:MarkerAnnotation[29420-29429]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27988-27994]:Modifier[29434-29440]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27995-27999]:PrimitiveType[29441-29445]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[28000-28011]:SimpleName[29446-29457]"
    }, {
      "left" : "BigDecimal value",
      "right" : "BigDecimal value",
      "info" : "SingleVariableDeclaration[28012-28028]:SingleVariableDeclaration[29458-29474]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[28037-28048]:SimpleType[29483-29494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28053-28641]:Block[29499-30087]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[28138-28170]:ExpressionStatement[29584-29616]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[28179-28635]:IfStatement[29625-30081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28198-28235]:Block[29644-29681]"
    }, {
      "left" : "_writeNull();",
      "right" : "_writeNull();",
      "info" : "ExpressionStatement[28212-28225]:ExpressionStatement[29658-29671]"
    }, {
      "left" : "if (_cfgNumbersAsStrings)",
      "right" : "if (_cfgNumbersAsStrings)",
      "info" : "IfStatement[28241-28635]:IfStatement[29687-30081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28267-28456]:Block[29713-29902]"
    }, {
      "left" : "String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)\n                    ? value.toPlainString() : value.toString();",
      "right" : "String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)\n                    ? value.toPlainString() : value.toString();",
      "info" : "VariableDeclarationStatement[28281-28412]:VariableDeclarationStatement[29727-29858]"
    }, {
      "left" : "_writeQuotedRaw(raw);",
      "right" : "_writeQuotedRaw(raw);",
      "info" : "ExpressionStatement[28425-28446]:ExpressionStatement[29871-29892]"
    }, {
      "left" : "if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features))",
      "right" : "if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features))",
      "info" : "IfStatement[28462-28635]:IfStatement[29908-30081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28522-28578]:Block[29968-30024]"
    }, {
      "left" : "writeRaw(value.toPlainString());",
      "right" : "writeRaw(value.toPlainString());",
      "info" : "ExpressionStatement[28536-28568]:ExpressionStatement[29982-30014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28584-28635]:Block[30030-30081]"
    }, {
      "left" : "writeRaw(value.toString());",
      "right" : "writeRaw(value.toString());",
      "info" : "ExpressionStatement[28598-28625]:ExpressionStatement[30044-30071]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28647-28656]:MarkerAnnotation[30093-30102]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28661-28667]:Modifier[30107-30113]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28668-28672]:PrimitiveType[30114-30118]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[28673-28684]:SimpleName[30119-30130]"
    }, {
      "left" : "String encodedValue",
      "right" : "String encodedValue",
      "info" : "SingleVariableDeclaration[28685-28704]:SingleVariableDeclaration[30131-30150]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[28713-28724]:SimpleType[30159-30170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28729-28931]:Block[30175-30377]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NUMBER);",
      "right" : "_verifyValueWrite(WRITE_NUMBER);",
      "info" : "ExpressionStatement[28739-28771]:ExpressionStatement[30185-30217]"
    }, {
      "left" : "if (_cfgNumbersAsStrings)",
      "right" : "if (_cfgNumbersAsStrings)",
      "info" : "IfStatement[28780-28925]:IfStatement[30226-30371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28806-28872]:Block[30252-30318]"
    }, {
      "left" : "_writeQuotedRaw(encodedValue);",
      "right" : "_writeQuotedRaw(encodedValue);",
      "info" : "ExpressionStatement[28820-28850]:ExpressionStatement[30266-30296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28878-28925]:Block[30324-30371]"
    }, {
      "left" : "writeRaw(encodedValue);",
      "right" : "writeRaw(encodedValue);",
      "info" : "ExpressionStatement[28892-28915]:ExpressionStatement[30338-30361]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[28937-28944]:Modifier[30383-30390]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[28945-28950]:Modifier[30391-30396]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28951-28955]:PrimitiveType[30397-30401]"
    }, {
      "left" : "_writeQuotedRaw",
      "right" : "_writeQuotedRaw",
      "info" : "SimpleName[28956-28971]:SimpleName[30402-30417]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[28972-28984]:SingleVariableDeclaration[30418-30430]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[28993-29004]:SimpleType[30439-30450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29009-29301]:Block[30455-30747]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[29019-29089]:IfStatement[30465-30535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29050-29089]:Block[30496-30535]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[29064-29079]:ExpressionStatement[30510-30525]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[29098-29140]:ExpressionStatement[30544-30586]"
    }, {
      "left" : "writeRaw(value);",
      "right" : "writeRaw(value);",
      "info" : "ExpressionStatement[29149-29165]:ExpressionStatement[30595-30611]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[29174-29244]:IfStatement[30620-30690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29205-29244]:Block[30651-30690]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[29219-29234]:ExpressionStatement[30665-30680]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[29253-29295]:ExpressionStatement[30699-30741]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29311-29320]:MarkerAnnotation[30757-30766]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29325-29331]:Modifier[30771-30777]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29332-29336]:PrimitiveType[30778-30782]"
    }, {
      "left" : "writeBoolean",
      "right" : "writeBoolean",
      "info" : "SimpleName[29337-29349]:SimpleName[30783-30795]"
    }, {
      "left" : "boolean state",
      "right" : "boolean state",
      "info" : "SingleVariableDeclaration[29350-29363]:SingleVariableDeclaration[30796-30809]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[29372-29383]:SimpleType[30818-30829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29388-29714]:Block[30834-31160]"
    }, {
      "left" : "_verifyValueWrite(WRITE_BOOLEAN);",
      "right" : "_verifyValueWrite(WRITE_BOOLEAN);",
      "info" : "ExpressionStatement[29398-29431]:ExpressionStatement[30844-30877]"
    }, {
      "left" : "if ((_outputTail + 5) >= _outputEnd)",
      "right" : "if ((_outputTail + 5) >= _outputEnd)",
      "info" : "IfStatement[29440-29516]:IfStatement[30886-30962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29477-29516]:Block[30923-30962]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[29491-29506]:ExpressionStatement[30937-30952]"
    }, {
      "left" : "byte[] keyword = state ? TRUE_BYTES : FALSE_BYTES;",
      "right" : "byte[] keyword = state ? TRUE_BYTES : FALSE_BYTES;",
      "info" : "VariableDeclarationStatement[29525-29575]:VariableDeclarationStatement[30971-31021]"
    }, {
      "left" : "int len = keyword.length;",
      "right" : "int len = keyword.length;",
      "info" : "VariableDeclarationStatement[29584-29609]:VariableDeclarationStatement[31030-31055]"
    }, {
      "left" : "System.arraycopy(keyword, 0, _outputBuffer, _outputTail, len);",
      "right" : "System.arraycopy(keyword, 0, _outputBuffer, _outputTail, len);",
      "info" : "ExpressionStatement[29618-29680]:ExpressionStatement[31064-31126]"
    }, {
      "left" : "_outputTail += len;",
      "right" : "_outputTail += len;",
      "info" : "ExpressionStatement[29689-29708]:ExpressionStatement[31135-31154]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29720-29729]:MarkerAnnotation[31166-31175]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29734-29740]:Modifier[31180-31186]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29741-29745]:PrimitiveType[31187-31191]"
    }, {
      "left" : "writeNull",
      "right" : "writeNull",
      "info" : "SimpleName[29746-29755]:SimpleName[31192-31201]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[29765-29776]:SimpleType[31211-31222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29781-29849]:Block[31227-31295]"
    }, {
      "left" : "_verifyValueWrite(WRITE_NULL);",
      "right" : "_verifyValueWrite(WRITE_NULL);",
      "info" : "ExpressionStatement[29791-29821]:ExpressionStatement[31237-31267]"
    }, {
      "left" : "_writeNull();",
      "right" : "_writeNull();",
      "info" : "ExpressionStatement[29830-29843]:ExpressionStatement[31276-31289]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[30040-30049]:MarkerAnnotation[31486-31495]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30054-30063]:Modifier[31500-31509]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30064-30069]:Modifier[31510-31515]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30070-30074]:PrimitiveType[31516-31520]"
    }, {
      "left" : "_verifyValueWrite",
      "right" : "_verifyValueWrite",
      "info" : "SimpleName[30075-30092]:SimpleName[31521-31538]"
    }, {
      "left" : "String typeMsg",
      "right" : "String typeMsg",
      "info" : "SingleVariableDeclaration[30093-30107]:SingleVariableDeclaration[31539-31553]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[30116-30127]:SimpleType[31562-31573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30132-31405]:Block[31578-32851]"
    }, {
      "left" : "int status = _writeContext.writeValue();",
      "right" : "int status = _writeContext.writeValue();",
      "info" : "VariableDeclarationStatement[30142-30182]:VariableDeclarationStatement[31588-31628]"
    }, {
      "left" : "if (status == JsonWriteContext.STATUS_EXPECT_NAME)",
      "right" : "if (status == JsonWriteContext.STATUS_EXPECT_NAME)",
      "info" : "IfStatement[30191-30324]:IfStatement[31637-31770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30242-30324]:Block[31688-31770]"
    }, {
      "left" : "_reportError(\"Can not \"+typeMsg+\", expecting field name\");",
      "right" : "_reportError(\"Can not \"+typeMsg+\", expecting field name\");",
      "info" : "ExpressionStatement[30256-30314]:ExpressionStatement[31702-31760]"
    }, {
      "left" : "if (_cfgPrettyPrinter == null)",
      "right" : "if (_cfgPrettyPrinter == null)",
      "info" : "IfStatement[30333-31292]:IfStatement[31779-32738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30364-31292]:Block[31810-32738]"
    }, {
      "left" : "byte b;",
      "right" : "byte b;",
      "info" : "VariableDeclarationStatement[30378-30385]:VariableDeclarationStatement[31824-31831]"
    }, {
      "left" : "switch (status) {\n            case JsonWriteContext.STATUS_OK_AFTER_COMMA:\n                b = BYTE_COMMA;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_COLON:\n                b = BYTE_COLON;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_SPACE: // root-value separator\n                if (_rootValueSeparator != null) {\n                    byte[] raw = _rootValueSeparator.asUnquotedUTF8();\n                    if (raw.length > 0) {\n                        _writeBytes(raw);\n                    }\n                }\n                return;\n            case JsonWriteContext.STATUS_OK_AS_IS:\n            default:\n                return;\n            }",
      "right" : "switch (status) {\n            case JsonWriteContext.STATUS_OK_AFTER_COMMA:\n                b = BYTE_COMMA;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_COLON:\n                b = BYTE_COLON;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_SPACE: // root-value separator\n                if (_rootValueSeparator != null) {\n                    byte[] raw = _rootValueSeparator.asUnquotedUTF8();\n                    if (raw.length > 0) {\n                        _writeBytes(raw);\n                    }\n                }\n                return;\n            case JsonWriteContext.STATUS_OK_AS_IS:\n            default:\n                return;\n            }",
      "info" : "SwitchStatement[30398-31100]:SwitchStatement[31844-32546]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
      "right" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
      "info" : "SwitchCase[30428-30472]:SwitchCase[31874-31918]"
    }, {
      "left" : "b = BYTE_COMMA;",
      "right" : "b = BYTE_COMMA;",
      "info" : "ExpressionStatement[30489-30504]:ExpressionStatement[31935-31950]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30521-30527]:BreakStatement[31967-31973]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
      "right" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
      "info" : "SwitchCase[30540-30584]:SwitchCase[31986-32030]"
    }, {
      "left" : "b = BYTE_COLON;",
      "right" : "b = BYTE_COLON;",
      "info" : "ExpressionStatement[30601-30616]:ExpressionStatement[32047-32062]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30633-30639]:BreakStatement[32079-32085]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
      "right" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
      "info" : "SwitchCase[30652-30696]:SwitchCase[32098-32142]"
    }, {
      "left" : "if (_rootValueSeparator != null)",
      "right" : "if (_rootValueSeparator != null)",
      "info" : "IfStatement[30737-30966]:IfStatement[32183-32412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30770-30966]:Block[32216-32412]"
    }, {
      "left" : "byte[] raw = _rootValueSeparator.asUnquotedUTF8();",
      "right" : "byte[] raw = _rootValueSeparator.asUnquotedUTF8();",
      "info" : "VariableDeclarationStatement[30792-30842]:VariableDeclarationStatement[32238-32288]"
    }, {
      "left" : "if (raw.length > 0)",
      "right" : "if (raw.length > 0)",
      "info" : "IfStatement[30863-30948]:IfStatement[32309-32394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30883-30948]:Block[32329-32394]"
    }, {
      "left" : "_writeBytes(raw);",
      "right" : "_writeBytes(raw);",
      "info" : "ExpressionStatement[30909-30926]:ExpressionStatement[32355-32372]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[30983-30990]:ReturnStatement[32429-32436]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AS_IS:",
      "right" : "case JsonWriteContext.STATUS_OK_AS_IS:",
      "info" : "SwitchCase[31003-31041]:SwitchCase[32449-32487]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[31054-31062]:SwitchCase[32500-32508]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[31079-31086]:ReturnStatement[32525-32532]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[31113-31191]:IfStatement[32559-32637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31144-31191]:Block[32590-32637]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[31162-31177]:ExpressionStatement[32608-32623]"
    }, {
      "left" : "_outputBuffer[_outputTail] = b;",
      "right" : "_outputBuffer[_outputTail] = b;",
      "info" : "ExpressionStatement[31204-31235]:ExpressionStatement[32650-32681]"
    }, {
      "left" : "++_outputTail;",
      "right" : "++_outputTail;",
      "info" : "ExpressionStatement[31248-31262]:ExpressionStatement[32694-32708]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[31275-31282]:ReturnStatement[32721-32728]"
    }, {
      "left" : "_verifyPrettyValueWrite(typeMsg, status);",
      "right" : "_verifyPrettyValueWrite(typeMsg, status);",
      "info" : "ExpressionStatement[31358-31399]:ExpressionStatement[32804-32845]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31411-31420]:Modifier[32857-32866]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31421-31426]:Modifier[32867-32872]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31427-31431]:PrimitiveType[32873-32877]"
    }, {
      "left" : "_verifyPrettyValueWrite",
      "right" : "_verifyPrettyValueWrite",
      "info" : "SimpleName[31432-31455]:SimpleName[32878-32901]"
    }, {
      "left" : "String typeMsg",
      "right" : "String typeMsg",
      "info" : "SingleVariableDeclaration[31456-31470]:SingleVariableDeclaration[32902-32916]"
    }, {
      "left" : "int status",
      "right" : "int status",
      "info" : "SingleVariableDeclaration[31472-31482]:SingleVariableDeclaration[32918-32928]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[31491-31502]:SimpleType[32937-32948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31507-32437]:Block[32953-33883]"
    }, {
      "left" : "switch (status) {\n        case JsonWriteContext.STATUS_OK_AFTER_COMMA: // array\n            _cfgPrettyPrinter.writeArrayValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_COLON:\n            _cfgPrettyPrinter.writeObjectFieldValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_SPACE:\n            _cfgPrettyPrinter.writeRootValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AS_IS:\n            // First entry, but of which context?\n            if (_writeContext.inArray()) {\n                _cfgPrettyPrinter.beforeArrayValues(this);\n            } else if (_writeContext.inObject()) {\n                _cfgPrettyPrinter.beforeObjectEntries(this);\n            }\n            break;\n        default:\n            _throwInternal();\n            break;\n        }",
      "right" : "switch (status) {\n        case JsonWriteContext.STATUS_OK_AFTER_COMMA: // array\n            _cfgPrettyPrinter.writeArrayValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_COLON:\n            _cfgPrettyPrinter.writeObjectFieldValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_SPACE:\n            _cfgPrettyPrinter.writeRootValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AS_IS:\n            // First entry, but of which context?\n            if (_writeContext.inArray()) {\n                _cfgPrettyPrinter.beforeArrayValues(this);\n            } else if (_writeContext.inObject()) {\n                _cfgPrettyPrinter.beforeObjectEntries(this);\n            }\n            break;\n        default:\n            _throwInternal();\n            break;\n        }",
      "info" : "SwitchStatement[31578-32431]:SwitchStatement[33024-33877]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
      "right" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
      "info" : "SwitchCase[31604-31648]:SwitchCase[33050-33094]"
    }, {
      "left" : "_cfgPrettyPrinter.writeArrayValueSeparator(this);",
      "right" : "_cfgPrettyPrinter.writeArrayValueSeparator(this);",
      "info" : "ExpressionStatement[31670-31719]:ExpressionStatement[33116-33165]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31732-31738]:BreakStatement[33178-33184]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
      "right" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
      "info" : "SwitchCase[31747-31791]:SwitchCase[33193-33237]"
    }, {
      "left" : "_cfgPrettyPrinter.writeObjectFieldValueSeparator(this);",
      "right" : "_cfgPrettyPrinter.writeObjectFieldValueSeparator(this);",
      "info" : "ExpressionStatement[31804-31859]:ExpressionStatement[33250-33305]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31872-31878]:BreakStatement[33318-33324]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
      "right" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
      "info" : "SwitchCase[31887-31931]:SwitchCase[33333-33377]"
    }, {
      "left" : "_cfgPrettyPrinter.writeRootValueSeparator(this);",
      "right" : "_cfgPrettyPrinter.writeRootValueSeparator(this);",
      "info" : "ExpressionStatement[31944-31992]:ExpressionStatement[33390-33438]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32005-32011]:BreakStatement[33451-33457]"
    }, {
      "left" : "case JsonWriteContext.STATUS_OK_AS_IS:",
      "right" : "case JsonWriteContext.STATUS_OK_AS_IS:",
      "info" : "SwitchCase[32020-32058]:SwitchCase[33466-33504]"
    }, {
      "left" : "if (_writeContext.inArray())",
      "right" : "if (_writeContext.inArray())",
      "info" : "IfStatement[32121-32336]:IfStatement[33567-33782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32150-32224]:Block[33596-33670]"
    }, {
      "left" : "_cfgPrettyPrinter.beforeArrayValues(this);",
      "right" : "_cfgPrettyPrinter.beforeArrayValues(this);",
      "info" : "ExpressionStatement[32168-32210]:ExpressionStatement[33614-33656]"
    }, {
      "left" : "if (_writeContext.inObject())",
      "right" : "if (_writeContext.inObject())",
      "info" : "IfStatement[32230-32336]:IfStatement[33676-33782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32260-32336]:Block[33706-33782]"
    }, {
      "left" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
      "right" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
      "info" : "ExpressionStatement[32278-32322]:ExpressionStatement[33724-33768]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32349-32355]:BreakStatement[33795-33801]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[32364-32372]:SwitchCase[33810-33818]"
    }, {
      "left" : "_throwInternal();",
      "right" : "_throwInternal();",
      "info" : "ExpressionStatement[32385-32402]:ExpressionStatement[33831-33848]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32415-32421]:BreakStatement[33861-33867]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32620-32629]:MarkerAnnotation[34066-34075]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32634-32640]:Modifier[34080-34086]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32641-32645]:PrimitiveType[34087-34091]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[32646-32651]:SimpleName[34092-34097]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[32661-32672]:SimpleType[34107-34118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32677-32869]:Block[34123-34315]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[32687-32702]:ExpressionStatement[34133-34148]"
    }, {
      "left" : "if (_outputStream != null)",
      "right" : "if (_outputStream != null)",
      "info" : "IfStatement[32711-32863]:IfStatement[34157-34309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32738-32863]:Block[34184-34309]"
    }, {
      "left" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
      "right" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
      "info" : "IfStatement[32752-32853]:IfStatement[34198-34299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32799-32853]:Block[34245-34299]"
    }, {
      "left" : "_outputStream.flush();",
      "right" : "_outputStream.flush();",
      "info" : "ExpressionStatement[32817-32839]:ExpressionStatement[34263-34285]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32875-32884]:MarkerAnnotation[34321-34330]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32889-32895]:Modifier[34335-34341]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32896-32900]:PrimitiveType[34342-34346]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[32901-32906]:SimpleName[34347-34352]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[32916-32927]:SimpleType[34362-34373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32932-34474]:Block[34378-35920]"
    }, {
      "left" : "super.close();",
      "right" : "super.close();",
      "info" : "ExpressionStatement[32942-32956]:ExpressionStatement[34388-34402]"
    }, {
      "left" : "if ((_outputBuffer != null)\n            && isEnabled(Feature.AUTO_CLOSE_JSON_CONTENT))",
      "right" : "if ((_outputBuffer != null)\n            && isEnabled(Feature.AUTO_CLOSE_JSON_CONTENT))",
      "info" : "IfStatement[33127-33556]:IfStatement[34573-35002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33214-33556]:Block[34660-35002]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[33228-33546]:WhileStatement[34674-34992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33241-33546]:Block[34687-34992]"
    }, {
      "left" : "JsonStreamContext ctxt = getOutputContext();",
      "right" : "JsonStreamContext ctxt = getOutputContext();",
      "info" : "VariableDeclarationStatement[33259-33303]:VariableDeclarationStatement[34705-34749]"
    }, {
      "left" : "if (ctxt.inArray())",
      "right" : "if (ctxt.inArray())",
      "info" : "IfStatement[33320-33532]:IfStatement[34766-34978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33340-33396]:Block[34786-34842]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[33362-33378]:ExpressionStatement[34808-34824]"
    }, {
      "left" : "if (ctxt.inObject())",
      "right" : "if (ctxt.inObject())",
      "info" : "IfStatement[33402-33532]:IfStatement[34848-34978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33423-33480]:Block[34869-34926]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[33445-33462]:ExpressionStatement[34891-34908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33486-33532]:Block[34932-34978]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[33508-33514]:BreakStatement[34954-34960]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[33565-33580]:ExpressionStatement[35011-35026]"
    }, {
      "left" : "_outputTail = 0;",
      "right" : "_outputTail = 0;",
      "info" : "ExpressionStatement[33589-33605]:ExpressionStatement[35035-35051]"
    }, {
      "left" : "if (_outputStream != null)",
      "right" : "if (_outputStream != null)",
      "info" : "IfStatement[34015-34369]:IfStatement[35461-35815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34042-34369]:Block[35488-35815]"
    }, {
      "left" : "if (_ioContext.isResourceManaged() || isEnabled(Feature.AUTO_CLOSE_TARGET))",
      "right" : "if (_ioContext.isResourceManaged() || isEnabled(Feature.AUTO_CLOSE_TARGET))",
      "info" : "IfStatement[34056-34359]:IfStatement[35502-35805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34132-34186]:Block[35578-35632]"
    }, {
      "left" : "_outputStream.close();",
      "right" : "_outputStream.close();",
      "info" : "ExpressionStatement[34150-34172]:ExpressionStatement[35596-35618]"
    }, {
      "left" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
      "right" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
      "info" : "IfStatement[34192-34359]:IfStatement[35638-35805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34239-34359]:Block[35685-35805]"
    }, {
      "left" : "_outputStream.flush();",
      "right" : "_outputStream.flush();",
      "info" : "ExpressionStatement[34323-34345]:ExpressionStatement[35769-35791]"
    }, {
      "left" : "_releaseBuffers();",
      "right" : "_releaseBuffers();",
      "info" : "ExpressionStatement[34450-34468]:ExpressionStatement[35896-35914]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34480-34489]:MarkerAnnotation[35926-35935]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34494-34503]:Modifier[35940-35949]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34504-34508]:PrimitiveType[35950-35954]"
    }, {
      "left" : "_releaseBuffers",
      "right" : "_releaseBuffers",
      "info" : "SimpleName[34509-34524]:SimpleName[35955-35970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34531-34877]:Block[35977-36323]"
    }, {
      "left" : "byte[] buf = _outputBuffer;",
      "right" : "byte[] buf = _outputBuffer;",
      "info" : "VariableDeclarationStatement[34541-34568]:VariableDeclarationStatement[35987-36014]"
    }, {
      "left" : "if (buf != null && _bufferRecyclable)",
      "right" : "if (buf != null && _bufferRecyclable)",
      "info" : "IfStatement[34577-34716]:IfStatement[36023-36162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34615-34716]:Block[36061-36162]"
    }, {
      "left" : "_outputBuffer = null;",
      "right" : "_outputBuffer = null;",
      "info" : "ExpressionStatement[34629-34650]:ExpressionStatement[36075-36096]"
    }, {
      "left" : "_ioContext.releaseWriteEncodingBuffer(buf);",
      "right" : "_ioContext.releaseWriteEncodingBuffer(buf);",
      "info" : "ExpressionStatement[34663-34706]:ExpressionStatement[36109-36152]"
    }, {
      "left" : "char[] cbuf = _charBuffer;",
      "right" : "char[] cbuf = _charBuffer;",
      "info" : "VariableDeclarationStatement[34725-34751]:VariableDeclarationStatement[36171-36197]"
    }, {
      "left" : "if (cbuf != null)",
      "right" : "if (cbuf != null)",
      "info" : "IfStatement[34760-34871]:IfStatement[36206-36317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34778-34871]:Block[36224-36317]"
    }, {
      "left" : "_charBuffer = null;",
      "right" : "_charBuffer = null;",
      "info" : "ExpressionStatement[34792-34811]:ExpressionStatement[36238-36257]"
    }, {
      "left" : "_ioContext.releaseConcatBuffer(cbuf);",
      "right" : "_ioContext.releaseConcatBuffer(cbuf);",
      "info" : "ExpressionStatement[34824-34861]:ExpressionStatement[36270-36307]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35081-35088]:Modifier[36527-36534]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[35089-35094]:Modifier[36535-36540]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35095-35099]:PrimitiveType[36541-36545]"
    }, {
      "left" : "_writeBytes",
      "right" : "_writeBytes",
      "info" : "SimpleName[35100-35111]:SimpleName[36546-36557]"
    }, {
      "left" : "byte[] bytes",
      "right" : "byte[] bytes",
      "info" : "SingleVariableDeclaration[35112-35124]:SingleVariableDeclaration[36558-36570]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[35133-35144]:SimpleType[36579-36590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35149-35545]:Block[36595-36991]"
    }, {
      "left" : "final int len = bytes.length;",
      "right" : "final int len = bytes.length;",
      "info" : "VariableDeclarationStatement[35159-35188]:VariableDeclarationStatement[36605-36634]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[35197-35442]:IfStatement[36643-36888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35235-35442]:Block[36681-36888]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[35249-35264]:ExpressionStatement[36695-36710]"
    }, {
      "left" : "if (len > MAX_BYTES_TO_BUFFER)",
      "right" : "if (len > MAX_BYTES_TO_BUFFER)",
      "info" : "IfStatement[35310-35432]:IfStatement[36756-36878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35341-35432]:Block[36787-36878]"
    }, {
      "left" : "_outputStream.write(bytes, 0, len);",
      "right" : "_outputStream.write(bytes, 0, len);",
      "info" : "ExpressionStatement[35359-35394]:ExpressionStatement[36805-36840]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[35411-35418]:ReturnStatement[36857-36864]"
    }, {
      "left" : "System.arraycopy(bytes, 0, _outputBuffer, _outputTail, len);",
      "right" : "System.arraycopy(bytes, 0, _outputBuffer, _outputTail, len);",
      "info" : "ExpressionStatement[35451-35511]:ExpressionStatement[36897-36957]"
    }, {
      "left" : "_outputTail += len;",
      "right" : "_outputTail += len;",
      "info" : "ExpressionStatement[35520-35539]:ExpressionStatement[36966-36985]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35551-35558]:Modifier[36997-37004]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[35559-35564]:Modifier[37005-37010]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35565-35569]:PrimitiveType[37011-37015]"
    }, {
      "left" : "_writeBytes",
      "right" : "_writeBytes",
      "info" : "SimpleName[35570-35581]:SimpleName[37016-37027]"
    }, {
      "left" : "byte[] bytes",
      "right" : "byte[] bytes",
      "info" : "SingleVariableDeclaration[35582-35594]:SingleVariableDeclaration[37028-37040]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[35596-35606]:SingleVariableDeclaration[37042-37052]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[35608-35615]:SingleVariableDeclaration[37054-37061]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[35624-35635]:SimpleType[37070-37081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35640-36008]:Block[37086-37454]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[35650-35900]:IfStatement[37096-37346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35688-35900]:Block[37134-37346]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[35702-35717]:ExpressionStatement[37148-37163]"
    }, {
      "left" : "if (len > MAX_BYTES_TO_BUFFER)",
      "right" : "if (len > MAX_BYTES_TO_BUFFER)",
      "info" : "IfStatement[35763-35890]:IfStatement[37209-37336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35794-35890]:Block[37240-37336]"
    }, {
      "left" : "_outputStream.write(bytes, offset, len);",
      "right" : "_outputStream.write(bytes, offset, len);",
      "info" : "ExpressionStatement[35812-35852]:ExpressionStatement[37258-37298]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[35869-35876]:ReturnStatement[37315-37322]"
    }, {
      "left" : "System.arraycopy(bytes, offset, _outputBuffer, _outputTail, len);",
      "right" : "System.arraycopy(bytes, offset, _outputBuffer, _outputTail, len);",
      "info" : "ExpressionStatement[35909-35974]:ExpressionStatement[37355-37420]"
    }, {
      "left" : "_outputTail += len;",
      "right" : "_outputTail += len;",
      "info" : "ExpressionStatement[35983-36002]:ExpressionStatement[37429-37448]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[36535-36542]:Modifier[37981-37988]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[36543-36548]:Modifier[37989-37994]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36549-36553]:PrimitiveType[37995-37999]"
    }, {
      "left" : "_writeStringSegments",
      "right" : "_writeStringSegments",
      "info" : "SimpleName[36554-36574]:SimpleName[38000-38020]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[36575-36586]:SingleVariableDeclaration[38021-38032]"
    }, {
      "left" : "boolean addQuotes",
      "right" : "boolean addQuotes",
      "info" : "SingleVariableDeclaration[36588-36605]:SingleVariableDeclaration[38034-38051]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[36614-36625]:SimpleType[38060-38071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36630-37402]:Block[38076-38848]"
    }, {
      "left" : "if (addQuotes)",
      "right" : "if (addQuotes)",
      "info" : "IfStatement[36640-36820]:IfStatement[38086-38266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36655-36820]:Block[38101-38266]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[36669-36747]:IfStatement[38115-38193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36700-36747]:Block[38146-38193]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[36718-36733]:ExpressionStatement[38164-38179]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[36760-36802]:ExpressionStatement[38206-38248]"
    }, {
      "left" : "int left = text.length();",
      "right" : "int left = text.length();",
      "info" : "VariableDeclarationStatement[36830-36855]:VariableDeclarationStatement[38276-38301]"
    }, {
      "left" : "int offset = 0;",
      "right" : "int offset = 0;",
      "info" : "VariableDeclarationStatement[36864-36879]:VariableDeclarationStatement[38310-38325]"
    }, {
      "left" : "while (left > 0)",
      "right" : "while (left > 0)",
      "info" : "WhileStatement[36889-37214]:WhileStatement[38335-38660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36906-37214]:Block[38352-38660]"
    }, {
      "left" : "int len = Math.min(_outputMaxContiguous, left);",
      "right" : "int len = Math.min(_outputMaxContiguous, left);",
      "info" : "VariableDeclarationStatement[36920-36967]:VariableDeclarationStatement[38366-38413]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[36980-37100]:IfStatement[38426-38546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37018-37100]:Block[38464-38546]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[37071-37086]:ExpressionStatement[38517-38532]"
    }, {
      "left" : "_writeStringSegment(text, offset, len);",
      "right" : "_writeStringSegment(text, offset, len);",
      "info" : "ExpressionStatement[37113-37152]:ExpressionStatement[38559-38598]"
    }, {
      "left" : "offset += len;",
      "right" : "offset += len;",
      "info" : "ExpressionStatement[37165-37179]:ExpressionStatement[38611-38625]"
    }, {
      "left" : "left -= len;",
      "right" : "left -= len;",
      "info" : "ExpressionStatement[37192-37204]:ExpressionStatement[38638-38650]"
    }, {
      "left" : "if (addQuotes)",
      "right" : "if (addQuotes)",
      "info" : "IfStatement[37224-37396]:IfStatement[38670-38842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37239-37396]:Block[38685-38842]"
    }, {
      "left" : "if (_outputTail >= _outputEnd)",
      "right" : "if (_outputTail >= _outputEnd)",
      "info" : "IfStatement[37253-37331]:IfStatement[38699-38777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37284-37331]:Block[38730-38777]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[37302-37317]:ExpressionStatement[38748-38763]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
      "info" : "ExpressionStatement[37344-37386]:ExpressionStatement[38790-38832]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37675-37682]:Modifier[39121-39128]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[37683-37688]:Modifier[39129-39134]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37689-37693]:PrimitiveType[39135-39139]"
    }, {
      "left" : "_writeStringSegments",
      "right" : "_writeStringSegments",
      "info" : "SimpleName[37694-37714]:SimpleName[39140-39160]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[37715-37726]:SingleVariableDeclaration[39161-39172]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[37728-37738]:SingleVariableDeclaration[39174-39184]"
    }, {
      "left" : "int totalLen",
      "right" : "int totalLen",
      "info" : "SingleVariableDeclaration[37740-37752]:SingleVariableDeclaration[39186-39198]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[37761-37772]:SimpleType[39207-39218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37777-38134]:Block[39223-39580]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[37787-38128]:DoStatement[39233-39574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37790-38106]:Block[39236-39552]"
    }, {
      "left" : "int len = Math.min(_outputMaxContiguous, totalLen);",
      "right" : "int len = Math.min(_outputMaxContiguous, totalLen);",
      "info" : "VariableDeclarationStatement[37804-37855]:VariableDeclarationStatement[39250-39301]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[37868-37988]:IfStatement[39314-39434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37906-37988]:Block[39352-39434]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[37959-37974]:ExpressionStatement[39405-39420]"
    }, {
      "left" : "_writeStringSegment(cbuf, offset, len);",
      "right" : "_writeStringSegment(cbuf, offset, len);",
      "info" : "ExpressionStatement[38001-38040]:ExpressionStatement[39447-39486]"
    }, {
      "left" : "offset += len;",
      "right" : "offset += len;",
      "info" : "ExpressionStatement[38053-38067]:ExpressionStatement[39499-39513]"
    }, {
      "left" : "totalLen -= len;",
      "right" : "totalLen -= len;",
      "info" : "ExpressionStatement[38080-38096]:ExpressionStatement[39526-39542]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38140-38147]:Modifier[39586-39593]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[38148-38153]:Modifier[39594-39599]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38154-38158]:PrimitiveType[39600-39604]"
    }, {
      "left" : "_writeStringSegments",
      "right" : "_writeStringSegments",
      "info" : "SimpleName[38159-38179]:SimpleName[39605-39625]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[38180-38191]:SingleVariableDeclaration[39626-39637]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[38193-38203]:SingleVariableDeclaration[39639-39649]"
    }, {
      "left" : "int totalLen",
      "right" : "int totalLen",
      "info" : "SingleVariableDeclaration[38205-38217]:SingleVariableDeclaration[39651-39663]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[38226-38237]:SimpleType[39672-39683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38242-38599]:Block[39688-40045]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[38252-38593]:DoStatement[39698-40039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38255-38571]:Block[39701-40017]"
    }, {
      "left" : "int len = Math.min(_outputMaxContiguous, totalLen);",
      "right" : "int len = Math.min(_outputMaxContiguous, totalLen);",
      "info" : "VariableDeclarationStatement[38269-38320]:VariableDeclarationStatement[39715-39766]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[38333-38453]:IfStatement[39779-39899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38371-38453]:Block[39817-39899]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[38424-38439]:ExpressionStatement[39870-39885]"
    }, {
      "left" : "_writeStringSegment(text, offset, len);",
      "right" : "_writeStringSegment(text, offset, len);",
      "info" : "ExpressionStatement[38466-38505]:ExpressionStatement[39912-39951]"
    }, {
      "left" : "offset += len;",
      "right" : "offset += len;",
      "info" : "ExpressionStatement[38518-38532]:ExpressionStatement[39964-39978]"
    }, {
      "left" : "totalLen -= len;",
      "right" : "totalLen -= len;",
      "info" : "ExpressionStatement[38545-38561]:ExpressionStatement[39991-40007]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39225-39232]:Modifier[40671-40678]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[39233-39238]:Modifier[40679-40684]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39239-39243]:PrimitiveType[40685-40689]"
    }, {
      "left" : "_writeStringSegment",
      "right" : "_writeStringSegment",
      "info" : "SimpleName[39244-39263]:SimpleName[40690-40709]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[39264-39275]:SingleVariableDeclaration[40710-40721]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[39277-39287]:SingleVariableDeclaration[40723-40733]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[39289-39296]:SingleVariableDeclaration[40735-40742]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[39313-39324]:SimpleType[40759-40770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39329-40457]:Block[40775-41903]"
    }, {
      "left" : "len += offset;",
      "right" : "len += offset;",
      "info" : "ExpressionStatement[39496-39510]:ExpressionStatement[40942-40956]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[39548-39576]:VariableDeclarationStatement[40994-41022]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[39585-39627]:VariableDeclarationStatement[41031-41073]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[39636-39674]:VariableDeclarationStatement[41082-41120]"
    }, {
      "left" : "while (offset < len)",
      "right" : "while (offset < len)",
      "info" : "WhileStatement[39684-40005]:WhileStatement[41130-41451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39705-40005]:Block[41151-41451]"
    }, {
      "left" : "int ch = cbuf[offset];",
      "right" : "int ch = cbuf[offset];",
      "info" : "VariableDeclarationStatement[39719-39741]:VariableDeclarationStatement[41165-41187]"
    }, {
      "left" : "if (ch > 0x7F || escCodes[ch] != 0)",
      "right" : "if (ch > 0x7F || escCodes[ch] != 0)",
      "info" : "IfStatement[39848-39922]:IfStatement[41294-41368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39884-39922]:Block[41330-41368]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39902-39908]:BreakStatement[41348-41354]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[39935-39973]:ExpressionStatement[41381-41419]"
    }, {
      "left" : "++offset;",
      "right" : "++offset;",
      "info" : "ExpressionStatement[39986-39995]:ExpressionStatement[41432-41441]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[40014-40038]:ExpressionStatement[41460-41484]"
    }, {
      "left" : "if (offset < len)",
      "right" : "if (offset < len)",
      "info" : "IfStatement[40047-40451]:IfStatement[41493-41897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40065-40451]:Block[41511-41897]"
    }, {
      "left" : "if (_characterEscapes != null)",
      "right" : "if (_characterEscapes != null)",
      "info" : "IfStatement[40108-40440]:IfStatement[41554-41886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40139-40246]:Block[41585-41692]"
    }, {
      "left" : "_writeCustomStringSegment2(cbuf, offset, len);",
      "right" : "_writeCustomStringSegment2(cbuf, offset, len);",
      "info" : "ExpressionStatement[40157-40203]:ExpressionStatement[41603-41649]"
    }, {
      "left" : "if (_maximumNonEscapedChar == 0)",
      "right" : "if (_maximumNonEscapedChar == 0)",
      "info" : "IfStatement[40252-40440]:IfStatement[41698-41886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40285-40357]:Block[41731-41803]"
    }, {
      "left" : "_writeStringSegment2(cbuf, offset, len);",
      "right" : "_writeStringSegment2(cbuf, offset, len);",
      "info" : "ExpressionStatement[40303-40343]:ExpressionStatement[41749-41789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40363-40440]:Block[41809-41886]"
    }, {
      "left" : "_writeStringSegmentASCII2(cbuf, offset, len);",
      "right" : "_writeStringSegmentASCII2(cbuf, offset, len);",
      "info" : "ExpressionStatement[40381-40426]:ExpressionStatement[41827-41872]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[40463-40470]:Modifier[41909-41916]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[40471-40476]:Modifier[41917-41922]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40477-40481]:PrimitiveType[41923-41927]"
    }, {
      "left" : "_writeStringSegment",
      "right" : "_writeStringSegment",
      "info" : "SimpleName[40482-40501]:SimpleName[41928-41947]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[40502-40513]:SingleVariableDeclaration[41948-41959]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[40515-40525]:SingleVariableDeclaration[41961-41971]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[40527-40534]:SingleVariableDeclaration[41973-41980]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[40543-40554]:SimpleType[41989-42000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40559-41626]:Block[42005-43072]"
    }, {
      "left" : "len += offset;",
      "right" : "len += offset;",
      "info" : "ExpressionStatement[40717-40731]:ExpressionStatement[42163-42177]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[40769-40797]:VariableDeclarationStatement[42215-42243]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[40806-40848]:VariableDeclarationStatement[42252-42294]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[40857-40895]:VariableDeclarationStatement[42303-42341]"
    }, {
      "left" : "while (offset < len)",
      "right" : "while (offset < len)",
      "info" : "WhileStatement[40905-41233]:WhileStatement[42351-42679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40926-41233]:Block[42372-42679]"
    }, {
      "left" : "int ch = text.charAt(offset);",
      "right" : "int ch = text.charAt(offset);",
      "info" : "VariableDeclarationStatement[40940-40969]:VariableDeclarationStatement[42386-42415]"
    }, {
      "left" : "if (ch > 0x7F || escCodes[ch] != 0)",
      "right" : "if (ch > 0x7F || escCodes[ch] != 0)",
      "info" : "IfStatement[41076-41150]:IfStatement[42522-42596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41112-41150]:Block[42558-42596]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[41130-41136]:BreakStatement[42576-42582]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[41163-41201]:ExpressionStatement[42609-42647]"
    }, {
      "left" : "++offset;",
      "right" : "++offset;",
      "info" : "ExpressionStatement[41214-41223]:ExpressionStatement[42660-42669]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[41242-41266]:ExpressionStatement[42688-42712]"
    }, {
      "left" : "if (offset < len)",
      "right" : "if (offset < len)",
      "info" : "IfStatement[41275-41620]:IfStatement[42721-43066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41293-41620]:Block[42739-43066]"
    }, {
      "left" : "if (_characterEscapes != null)",
      "right" : "if (_characterEscapes != null)",
      "info" : "IfStatement[41307-41610]:IfStatement[42753-43056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41338-41416]:Block[42784-42862]"
    }, {
      "left" : "_writeCustomStringSegment2(text, offset, len);",
      "right" : "_writeCustomStringSegment2(text, offset, len);",
      "info" : "ExpressionStatement[41356-41402]:ExpressionStatement[42802-42848]"
    }, {
      "left" : "if (_maximumNonEscapedChar == 0)",
      "right" : "if (_maximumNonEscapedChar == 0)",
      "info" : "IfStatement[41422-41610]:IfStatement[42868-43056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41455-41527]:Block[42901-42973]"
    }, {
      "left" : "_writeStringSegment2(text, offset, len);",
      "right" : "_writeStringSegment2(text, offset, len);",
      "info" : "ExpressionStatement[41473-41513]:ExpressionStatement[42919-42959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41533-41610]:Block[42979-43056]"
    }, {
      "left" : "_writeStringSegmentASCII2(text, offset, len);",
      "right" : "_writeStringSegmentASCII2(text, offset, len);",
      "info" : "ExpressionStatement[41551-41596]:ExpressionStatement[42997-43042]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[41766-41773]:Modifier[43212-43219]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[41774-41779]:Modifier[43220-43225]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41780-41784]:PrimitiveType[43226-43230]"
    }, {
      "left" : "_writeStringSegment2",
      "right" : "_writeStringSegment2",
      "info" : "SimpleName[41785-41805]:SimpleName[43231-43251]"
    }, {
      "left" : "final char[] cbuf",
      "right" : "final char[] cbuf",
      "info" : "SingleVariableDeclaration[41806-41823]:SingleVariableDeclaration[43252-43269]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[41825-41835]:SingleVariableDeclaration[43271-43281]"
    }, {
      "left" : "final int end",
      "right" : "final int end",
      "info" : "SingleVariableDeclaration[41837-41850]:SingleVariableDeclaration[43283-43296]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[41859-41870]:SimpleType[43305-43316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41875-43254]:Block[43321-44700]"
    }, {
      "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "info" : "IfStatement[41971-42064]:IfStatement[43417-43510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42025-42064]:Block[43471-43510]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[42039-42054]:ExpressionStatement[43485-43500]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[42074-42102]:VariableDeclarationStatement[43520-43548]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[42112-42154]:VariableDeclarationStatement[43558-43600]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[42163-42201]:VariableDeclarationStatement[43609-43647]"
    }, {
      "left" : "while (offset < end)",
      "right" : "while (offset < end)",
      "info" : "WhileStatement[42219-43215]:WhileStatement[43665-44661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42240-43215]:Block[43686-44661]"
    }, {
      "left" : "int ch = cbuf[offset++];",
      "right" : "int ch = cbuf[offset++];",
      "info" : "VariableDeclarationStatement[42254-42278]:VariableDeclarationStatement[43700-43724]"
    }, {
      "left" : "if (ch <= 0x7F)",
      "right" : "if (ch <= 0x7F)",
      "info" : "IfStatement[42291-42896]:IfStatement[43737-44342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42307-42896]:Block[43753-44342]"
    }, {
      "left" : "if (escCodes[ch] == 0)",
      "right" : "if (escCodes[ch] == 0)",
      "info" : "IfStatement[42326-42460]:IfStatement[43772-43906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42349-42460]:Block[43795-43906]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[42372-42410]:ExpressionStatement[43818-43856]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[42432-42441]:ContinueStatement[43878-43887]"
    }, {
      "left" : "int escape = escCodes[ch];",
      "right" : "int escape = escCodes[ch];",
      "info" : "VariableDeclarationStatement[42478-42504]:VariableDeclarationStatement[43924-43950]"
    }, {
      "left" : "if (escape > 0)",
      "right" : "if (escape > 0)",
      "info" : "IfStatement[42522-42856]:IfStatement[43968-44302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42538-42710]:Block[43984-44156]"
    }, {
      "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[42584-42627]:ExpressionStatement[44030-44073]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) escape;",
      "right" : "outputBuffer[outputPtr++] = (byte) escape;",
      "info" : "ExpressionStatement[42649-42691]:ExpressionStatement[44095-44137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42716-42856]:Block[44162-44302]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[42791-42838]:ExpressionStatement[44237-44284]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[42873-42882]:ContinueStatement[44319-44328]"
    }, {
      "left" : "if (ch <= 0x7FF)",
      "right" : "if (ch <= 0x7FF)",
      "info" : "IfStatement[42909-43205]:IfStatement[44355-44651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42926-43119]:Block[44372-44565]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[42978-43032]:ExpressionStatement[44424-44478]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[43049-43105]:ExpressionStatement[44495-44551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43125-43205]:Block[44571-44651]"
    }, {
      "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "info" : "ExpressionStatement[43143-43191]:ExpressionStatement[44589-44637]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[43224-43248]:ExpressionStatement[44670-44694]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[43260-43267]:Modifier[44706-44713]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[43268-43273]:Modifier[44714-44719]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[43274-43278]:PrimitiveType[44720-44724]"
    }, {
      "left" : "_writeStringSegment2",
      "right" : "_writeStringSegment2",
      "info" : "SimpleName[43279-43299]:SimpleName[44725-44745]"
    }, {
      "left" : "final String text",
      "right" : "final String text",
      "info" : "SingleVariableDeclaration[43300-43317]:SingleVariableDeclaration[44746-44763]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[43319-43329]:SingleVariableDeclaration[44765-44775]"
    }, {
      "left" : "final int end",
      "right" : "final int end",
      "info" : "SingleVariableDeclaration[43331-43344]:SingleVariableDeclaration[44777-44790]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[43353-43364]:SimpleType[44799-44810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43369-44669]:Block[44815-46115]"
    }, {
      "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "info" : "IfStatement[43379-43472]:IfStatement[44825-44918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43433-43472]:Block[44879-44918]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[43447-43462]:ExpressionStatement[44893-44908]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[43482-43510]:VariableDeclarationStatement[44928-44956]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[43520-43562]:VariableDeclarationStatement[44966-45008]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[43571-43609]:VariableDeclarationStatement[45017-45055]"
    }, {
      "left" : "while (offset < end)",
      "right" : "while (offset < end)",
      "info" : "WhileStatement[43627-44630]:WhileStatement[45073-46076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43648-44630]:Block[45094-46076]"
    }, {
      "left" : "int ch = text.charAt(offset++);",
      "right" : "int ch = text.charAt(offset++);",
      "info" : "VariableDeclarationStatement[43662-43693]:VariableDeclarationStatement[45108-45139]"
    }, {
      "left" : "if (ch <= 0x7F)",
      "right" : "if (ch <= 0x7F)",
      "info" : "IfStatement[43706-44311]:IfStatement[45152-45757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43722-44311]:Block[45168-45757]"
    }, {
      "left" : "if (escCodes[ch] == 0)",
      "right" : "if (escCodes[ch] == 0)",
      "info" : "IfStatement[43741-43875]:IfStatement[45187-45321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43764-43875]:Block[45210-45321]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[43787-43825]:ExpressionStatement[45233-45271]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[43847-43856]:ContinueStatement[45293-45302]"
    }, {
      "left" : "int escape = escCodes[ch];",
      "right" : "int escape = escCodes[ch];",
      "info" : "VariableDeclarationStatement[43893-43919]:VariableDeclarationStatement[45339-45365]"
    }, {
      "left" : "if (escape > 0)",
      "right" : "if (escape > 0)",
      "info" : "IfStatement[43937-44271]:IfStatement[45383-45717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43953-44125]:Block[45399-45571]"
    }, {
      "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[43999-44042]:ExpressionStatement[45445-45488]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) escape;",
      "right" : "outputBuffer[outputPtr++] = (byte) escape;",
      "info" : "ExpressionStatement[44064-44106]:ExpressionStatement[45510-45552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44131-44271]:Block[45577-45717]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[44206-44253]:ExpressionStatement[45652-45699]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[44288-44297]:ContinueStatement[45734-45743]"
    }, {
      "left" : "if (ch <= 0x7FF)",
      "right" : "if (ch <= 0x7FF)",
      "info" : "IfStatement[44324-44620]:IfStatement[45770-46066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44341-44534]:Block[45787-45980]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[44393-44447]:ExpressionStatement[45839-45893]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[44464-44520]:ExpressionStatement[45910-45966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44540-44620]:Block[45986-46066]"
    }, {
      "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "info" : "ExpressionStatement[44558-44606]:ExpressionStatement[46004-46052]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[44639-44663]:ExpressionStatement[46085-46109]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[45070-45077]:Modifier[46516-46523]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[45078-45083]:Modifier[46524-46529]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[45084-45088]:PrimitiveType[46530-46534]"
    }, {
      "left" : "_writeStringSegmentASCII2",
      "right" : "_writeStringSegmentASCII2",
      "info" : "SimpleName[45089-45114]:SimpleName[46535-46560]"
    }, {
      "left" : "final char[] cbuf",
      "right" : "final char[] cbuf",
      "info" : "SingleVariableDeclaration[45115-45132]:SingleVariableDeclaration[46561-46578]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[45134-45144]:SingleVariableDeclaration[46580-46590]"
    }, {
      "left" : "final int end",
      "right" : "final int end",
      "info" : "SingleVariableDeclaration[45146-45159]:SingleVariableDeclaration[46592-46605]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45168-45179]:SimpleType[46614-46625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45184-46836]:Block[46630-48282]"
    }, {
      "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "info" : "IfStatement[45280-45373]:IfStatement[46726-46819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45334-45373]:Block[46780-46819]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[45348-45363]:ExpressionStatement[46794-46809]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[45387-45415]:VariableDeclarationStatement[46833-46861]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[45429-45471]:VariableDeclarationStatement[46875-46917]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[45480-45518]:VariableDeclarationStatement[46926-46964]"
    }, {
      "left" : "final int maxUnescaped = _maximumNonEscapedChar;",
      "right" : "final int maxUnescaped = _maximumNonEscapedChar;",
      "info" : "VariableDeclarationStatement[45527-45575]:VariableDeclarationStatement[46973-47021]"
    }, {
      "left" : "while (offset < end)",
      "right" : "while (offset < end)",
      "info" : "WhileStatement[45593-46797]:WhileStatement[47039-48243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45614-46797]:Block[47060-48243]"
    }, {
      "left" : "int ch = cbuf[offset++];",
      "right" : "int ch = cbuf[offset++];",
      "info" : "VariableDeclarationStatement[45628-45652]:VariableDeclarationStatement[47074-47098]"
    }, {
      "left" : "if (ch <= 0x7F)",
      "right" : "if (ch <= 0x7F)",
      "info" : "IfStatement[45665-46272]:IfStatement[47111-47718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45681-46272]:Block[47127-47718]"
    }, {
      "left" : "if (escCodes[ch] == 0)",
      "right" : "if (escCodes[ch] == 0)",
      "info" : "IfStatement[45700-45834]:IfStatement[47146-47280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45723-45834]:Block[47169-47280]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[45746-45784]:ExpressionStatement[47192-47230]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[45806-45815]:ContinueStatement[47252-47261]"
    }, {
      "left" : "int escape = escCodes[ch];",
      "right" : "int escape = escCodes[ch];",
      "info" : "VariableDeclarationStatement[45852-45878]:VariableDeclarationStatement[47298-47324]"
    }, {
      "left" : "if (escape > 0)",
      "right" : "if (escape > 0)",
      "info" : "IfStatement[45896-46231]:IfStatement[47342-47677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45912-46084]:Block[47358-47530]"
    }, {
      "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[45958-46001]:ExpressionStatement[47404-47447]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) escape;",
      "right" : "outputBuffer[outputPtr++] = (byte) escape;",
      "info" : "ExpressionStatement[46023-46065]:ExpressionStatement[47469-47511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46090-46231]:Block[47536-47677]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[46165-46212]:ExpressionStatement[47611-47658]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[46249-46258]:ContinueStatement[47695-47704]"
    }, {
      "left" : "if (ch > maxUnescaped)",
      "right" : "if (ch > maxUnescaped)",
      "info" : "IfStatement[46285-46478]:IfStatement[47731-47924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46308-46478]:Block[47754-47924]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[46391-46438]:ExpressionStatement[47837-47884]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[46455-46464]:ContinueStatement[47901-47910]"
    }, {
      "left" : "if (ch <= 0x7FF)",
      "right" : "if (ch <= 0x7FF)",
      "info" : "IfStatement[46491-46787]:IfStatement[47937-48233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46508-46701]:Block[47954-48147]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[46560-46614]:ExpressionStatement[48006-48060]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[46631-46687]:ExpressionStatement[48077-48133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46707-46787]:Block[48153-48233]"
    }, {
      "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "info" : "ExpressionStatement[46725-46773]:ExpressionStatement[48171-48219]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[46806-46830]:ExpressionStatement[48252-48276]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[46842-46849]:Modifier[48288-48295]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[46850-46855]:Modifier[48296-48301]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46856-46860]:PrimitiveType[48302-48306]"
    }, {
      "left" : "_writeStringSegmentASCII2",
      "right" : "_writeStringSegmentASCII2",
      "info" : "SimpleName[46861-46886]:SimpleName[48307-48332]"
    }, {
      "left" : "final String text",
      "right" : "final String text",
      "info" : "SingleVariableDeclaration[46887-46904]:SingleVariableDeclaration[48333-48350]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[46906-46916]:SingleVariableDeclaration[48352-48362]"
    }, {
      "left" : "final int end",
      "right" : "final int end",
      "info" : "SingleVariableDeclaration[46918-46931]:SingleVariableDeclaration[48364-48377]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[46940-46951]:SimpleType[48386-48397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46956-48615]:Block[48402-50061]"
    }, {
      "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "info" : "IfStatement[47052-47145]:IfStatement[48498-48591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47106-47145]:Block[48552-48591]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[47120-47135]:ExpressionStatement[48566-48581]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[47159-47187]:VariableDeclarationStatement[48605-48633]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[47201-47243]:VariableDeclarationStatement[48647-48689]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[47252-47290]:VariableDeclarationStatement[48698-48736]"
    }, {
      "left" : "final int maxUnescaped = _maximumNonEscapedChar;",
      "right" : "final int maxUnescaped = _maximumNonEscapedChar;",
      "info" : "VariableDeclarationStatement[47299-47347]:VariableDeclarationStatement[48745-48793]"
    }, {
      "left" : "while (offset < end)",
      "right" : "while (offset < end)",
      "info" : "WhileStatement[47365-48576]:WhileStatement[48811-50022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47386-48576]:Block[48832-50022]"
    }, {
      "left" : "int ch = text.charAt(offset++);",
      "right" : "int ch = text.charAt(offset++);",
      "info" : "VariableDeclarationStatement[47400-47431]:VariableDeclarationStatement[48846-48877]"
    }, {
      "left" : "if (ch <= 0x7F)",
      "right" : "if (ch <= 0x7F)",
      "info" : "IfStatement[47444-48051]:IfStatement[48890-49497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47460-48051]:Block[48906-49497]"
    }, {
      "left" : "if (escCodes[ch] == 0)",
      "right" : "if (escCodes[ch] == 0)",
      "info" : "IfStatement[47479-47613]:IfStatement[48925-49059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47502-47613]:Block[48948-49059]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[47525-47563]:ExpressionStatement[48971-49009]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[47585-47594]:ContinueStatement[49031-49040]"
    }, {
      "left" : "int escape = escCodes[ch];",
      "right" : "int escape = escCodes[ch];",
      "info" : "VariableDeclarationStatement[47631-47657]:VariableDeclarationStatement[49077-49103]"
    }, {
      "left" : "if (escape > 0)",
      "right" : "if (escape > 0)",
      "info" : "IfStatement[47675-48010]:IfStatement[49121-49456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47691-47863]:Block[49137-49309]"
    }, {
      "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[47737-47780]:ExpressionStatement[49183-49226]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) escape;",
      "right" : "outputBuffer[outputPtr++] = (byte) escape;",
      "info" : "ExpressionStatement[47802-47844]:ExpressionStatement[49248-49290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47869-48010]:Block[49315-49456]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[47944-47991]:ExpressionStatement[49390-49437]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[48028-48037]:ContinueStatement[49474-49483]"
    }, {
      "left" : "if (ch > maxUnescaped)",
      "right" : "if (ch > maxUnescaped)",
      "info" : "IfStatement[48064-48257]:IfStatement[49510-49703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48087-48257]:Block[49533-49703]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[48170-48217]:ExpressionStatement[49616-49663]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[48234-48243]:ContinueStatement[49680-49689]"
    }, {
      "left" : "if (ch <= 0x7FF)",
      "right" : "if (ch <= 0x7FF)",
      "info" : "IfStatement[48270-48566]:IfStatement[49716-50012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48287-48480]:Block[49733-49926]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[48339-48393]:ExpressionStatement[49785-49839]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[48410-48466]:ExpressionStatement[49856-49912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48486-48566]:Block[49932-50012]"
    }, {
      "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "info" : "ExpressionStatement[48504-48552]:ExpressionStatement[49950-49998]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[48585-48609]:ExpressionStatement[50031-50055]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[49046-49053]:Modifier[50492-50499]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[49054-49059]:Modifier[50500-50505]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[49060-49064]:PrimitiveType[50506-50510]"
    }, {
      "left" : "_writeCustomStringSegment2",
      "right" : "_writeCustomStringSegment2",
      "info" : "SimpleName[49065-49091]:SimpleName[50511-50537]"
    }, {
      "left" : "final char[] cbuf",
      "right" : "final char[] cbuf",
      "info" : "SingleVariableDeclaration[49092-49109]:SingleVariableDeclaration[50538-50555]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[49111-49121]:SingleVariableDeclaration[50557-50567]"
    }, {
      "left" : "final int end",
      "right" : "final int end",
      "info" : "SingleVariableDeclaration[49123-49136]:SingleVariableDeclaration[50569-50582]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[49145-49156]:SimpleType[50591-50602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49161-51736]:Block[50607-53182]"
    }, {
      "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "info" : "IfStatement[49257-49350]:IfStatement[50703-50796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49311-49350]:Block[50757-50796]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[49325-49340]:ExpressionStatement[50771-50786]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[49359-49387]:VariableDeclarationStatement[50805-50833]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[49401-49443]:VariableDeclarationStatement[50847-50889]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[49452-49490]:VariableDeclarationStatement[50898-50936]"
    }, {
      "left" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
      "right" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
      "info" : "VariableDeclarationStatement[49541-49630]:VariableDeclarationStatement[50987-51076]"
    }, {
      "left" : "final CharacterEscapes customEscapes = _characterEscapes;",
      "right" : "final CharacterEscapes customEscapes = _characterEscapes;",
      "info" : "VariableDeclarationStatement[49639-49696]:VariableDeclarationStatement[51085-51142]"
    }, {
      "left" : "while (offset < end)",
      "right" : "while (offset < end)",
      "info" : "WhileStatement[49726-51697]:WhileStatement[51172-53143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49747-51697]:Block[51193-53143]"
    }, {
      "left" : "int ch = cbuf[offset++];",
      "right" : "int ch = cbuf[offset++];",
      "info" : "VariableDeclarationStatement[49761-49785]:VariableDeclarationStatement[51207-51231]"
    }, {
      "left" : "if (ch <= 0x7F)",
      "right" : "if (ch <= 0x7F)",
      "info" : "IfStatement[49798-50937]:IfStatement[51244-52383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49814-50937]:Block[51260-52383]"
    }, {
      "left" : "if (escCodes[ch] == 0)",
      "right" : "if (escCodes[ch] == 0)",
      "info" : "IfStatement[49833-49967]:IfStatement[51279-51413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49856-49967]:Block[51302-51413]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[49879-49917]:ExpressionStatement[51325-51363]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[49939-49948]:ContinueStatement[51385-51394]"
    }, {
      "left" : "int escape = escCodes[ch];",
      "right" : "int escape = escCodes[ch];",
      "info" : "VariableDeclarationStatement[49985-50011]:VariableDeclarationStatement[51431-51457]"
    }, {
      "left" : "if (escape > 0)",
      "right" : "if (escape > 0)",
      "info" : "IfStatement[50029-50896]:IfStatement[51475-52342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50045-50217]:Block[51491-51663]"
    }, {
      "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[50091-50134]:ExpressionStatement[51537-51580]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) escape;",
      "right" : "outputBuffer[outputPtr++] = (byte) escape;",
      "info" : "ExpressionStatement[50156-50198]:ExpressionStatement[51602-51644]"
    }, {
      "left" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
      "right" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
      "info" : "IfStatement[50223-50896]:IfStatement[51669-52342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50269-50749]:Block[51715-52195]"
    }, {
      "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "info" : "VariableDeclarationStatement[50292-50353]:VariableDeclarationStatement[51738-51799]"
    }, {
      "left" : "if (esc == null)",
      "right" : "if (esc == null)",
      "info" : "IfStatement[50375-50635]:IfStatement[51821-52081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50392-50635]:Block[51838-52081]"
    }, {
      "left" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
      "right" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
      "info" : "ExpressionStatement[50419-50612]:ExpressionStatement[51865-52058]"
    }, {
      "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "info" : "ExpressionStatement[50657-50730]:ExpressionStatement[52103-52176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50755-50896]:Block[52201-52342]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[50830-50877]:ExpressionStatement[52276-52323]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[50914-50923]:ContinueStatement[52360-52369]"
    }, {
      "left" : "if (ch > maxUnescaped)",
      "right" : "if (ch > maxUnescaped)",
      "info" : "IfStatement[50950-51143]:IfStatement[52396-52589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50973-51143]:Block[52419-52589]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[51056-51103]:ExpressionStatement[52502-52549]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[51120-51129]:ContinueStatement[52566-52575]"
    }, {
      "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "info" : "VariableDeclarationStatement[51156-51217]:VariableDeclarationStatement[52602-52663]"
    }, {
      "left" : "if (esc != null)",
      "right" : "if (esc != null)",
      "info" : "IfStatement[51230-51378]:IfStatement[52676-52824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51247-51378]:Block[52693-52824]"
    }, {
      "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "info" : "ExpressionStatement[51265-51338]:ExpressionStatement[52711-52784]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[51355-51364]:ContinueStatement[52801-52810]"
    }, {
      "left" : "if (ch <= 0x7FF)",
      "right" : "if (ch <= 0x7FF)",
      "info" : "IfStatement[51391-51687]:IfStatement[52837-53133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51408-51601]:Block[52854-53047]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[51460-51514]:ExpressionStatement[52906-52960]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[51531-51587]:ExpressionStatement[52977-53033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51607-51687]:Block[53053-53133]"
    }, {
      "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "info" : "ExpressionStatement[51625-51673]:ExpressionStatement[53071-53119]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[51706-51730]:ExpressionStatement[53152-53176]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[51742-51749]:Modifier[53188-53195]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51750-51755]:Modifier[53196-53201]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51756-51760]:PrimitiveType[53202-53206]"
    }, {
      "left" : "_writeCustomStringSegment2",
      "right" : "_writeCustomStringSegment2",
      "info" : "SimpleName[51761-51787]:SimpleName[53207-53233]"
    }, {
      "left" : "final String text",
      "right" : "final String text",
      "info" : "SingleVariableDeclaration[51788-51805]:SingleVariableDeclaration[53234-53251]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[51807-51817]:SingleVariableDeclaration[53253-53263]"
    }, {
      "left" : "final int end",
      "right" : "final int end",
      "info" : "SingleVariableDeclaration[51819-51832]:SingleVariableDeclaration[53265-53278]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[51841-51852]:SimpleType[53287-53298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51857-54439]:Block[53303-55885]"
    }, {
      "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
      "info" : "IfStatement[51953-52046]:IfStatement[53399-53492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52007-52046]:Block[53453-53492]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[52021-52036]:ExpressionStatement[53467-53482]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[52055-52083]:VariableDeclarationStatement[53501-53529]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[52097-52139]:VariableDeclarationStatement[53543-53585]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[52148-52186]:VariableDeclarationStatement[53594-53632]"
    }, {
      "left" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
      "right" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
      "info" : "VariableDeclarationStatement[52237-52326]:VariableDeclarationStatement[53683-53772]"
    }, {
      "left" : "final CharacterEscapes customEscapes = _characterEscapes;",
      "right" : "final CharacterEscapes customEscapes = _characterEscapes;",
      "info" : "VariableDeclarationStatement[52335-52392]:VariableDeclarationStatement[53781-53838]"
    }, {
      "left" : "while (offset < end)",
      "right" : "while (offset < end)",
      "info" : "WhileStatement[52422-54400]:WhileStatement[53868-55846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52443-54400]:Block[53889-55846]"
    }, {
      "left" : "int ch = text.charAt(offset++);",
      "right" : "int ch = text.charAt(offset++);",
      "info" : "VariableDeclarationStatement[52457-52488]:VariableDeclarationStatement[53903-53934]"
    }, {
      "left" : "if (ch <= 0x7F)",
      "right" : "if (ch <= 0x7F)",
      "info" : "IfStatement[52501-53640]:IfStatement[53947-55086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52517-53640]:Block[53963-55086]"
    }, {
      "left" : "if (escCodes[ch] == 0)",
      "right" : "if (escCodes[ch] == 0)",
      "info" : "IfStatement[52536-52670]:IfStatement[53982-54116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52559-52670]:Block[54005-54116]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) ch;",
      "right" : "outputBuffer[outputPtr++] = (byte) ch;",
      "info" : "ExpressionStatement[52582-52620]:ExpressionStatement[54028-54066]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[52642-52651]:ContinueStatement[54088-54097]"
    }, {
      "left" : "int escape = escCodes[ch];",
      "right" : "int escape = escCodes[ch];",
      "info" : "VariableDeclarationStatement[52688-52714]:VariableDeclarationStatement[54134-54160]"
    }, {
      "left" : "if (escape > 0)",
      "right" : "if (escape > 0)",
      "info" : "IfStatement[52732-53599]:IfStatement[54178-55045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52748-52920]:Block[54194-54366]"
    }, {
      "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[52794-52837]:ExpressionStatement[54240-54283]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) escape;",
      "right" : "outputBuffer[outputPtr++] = (byte) escape;",
      "info" : "ExpressionStatement[52859-52901]:ExpressionStatement[54305-54347]"
    }, {
      "left" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
      "right" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
      "info" : "IfStatement[52926-53599]:IfStatement[54372-55045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52972-53452]:Block[54418-54898]"
    }, {
      "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "info" : "VariableDeclarationStatement[52995-53056]:VariableDeclarationStatement[54441-54502]"
    }, {
      "left" : "if (esc == null)",
      "right" : "if (esc == null)",
      "info" : "IfStatement[53078-53338]:IfStatement[54524-54784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53095-53338]:Block[54541-54784]"
    }, {
      "left" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
      "right" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
      "info" : "ExpressionStatement[53122-53315]:ExpressionStatement[54568-54761]"
    }, {
      "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "info" : "ExpressionStatement[53360-53433]:ExpressionStatement[54806-54879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53458-53599]:Block[54904-55045]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[53533-53580]:ExpressionStatement[54979-55026]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[53617-53626]:ContinueStatement[55063-55072]"
    }, {
      "left" : "if (ch > maxUnescaped)",
      "right" : "if (ch > maxUnescaped)",
      "info" : "IfStatement[53653-53846]:IfStatement[55099-55292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53676-53846]:Block[55122-55292]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[53759-53806]:ExpressionStatement[55205-55252]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[53823-53832]:ContinueStatement[55269-55278]"
    }, {
      "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
      "info" : "VariableDeclarationStatement[53859-53920]:VariableDeclarationStatement[55305-55366]"
    }, {
      "left" : "if (esc != null)",
      "right" : "if (esc != null)",
      "info" : "IfStatement[53933-54081]:IfStatement[55379-55527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53950-54081]:Block[55396-55527]"
    }, {
      "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
      "info" : "ExpressionStatement[53968-54041]:ExpressionStatement[55414-55487]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[54058-54067]:ContinueStatement[55504-55513]"
    }, {
      "left" : "if (ch <= 0x7FF)",
      "right" : "if (ch <= 0x7FF)",
      "info" : "IfStatement[54094-54390]:IfStatement[55540-55836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54111-54304]:Block[55557-55750]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
      "info" : "ExpressionStatement[54163-54217]:ExpressionStatement[55609-55663]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[54234-54290]:ExpressionStatement[55680-55736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54310-54390]:Block[55756-55836]"
    }, {
      "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
      "info" : "ExpressionStatement[54328-54376]:ExpressionStatement[55774-55822]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[54409-54433]:ExpressionStatement[55855-55879]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54445-54452]:Modifier[55891-55898]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54453-54458]:Modifier[55899-55904]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[54459-54462]:PrimitiveType[55905-55908]"
    }, {
      "left" : "_writeCustomEscape",
      "right" : "_writeCustomEscape",
      "info" : "SimpleName[54463-54481]:SimpleName[55909-55927]"
    }, {
      "left" : "byte[] outputBuffer",
      "right" : "byte[] outputBuffer",
      "info" : "SingleVariableDeclaration[54482-54501]:SingleVariableDeclaration[55928-55947]"
    }, {
      "left" : "int outputPtr",
      "right" : "int outputPtr",
      "info" : "SingleVariableDeclaration[54503-54516]:SingleVariableDeclaration[55949-55962]"
    }, {
      "left" : "SerializableString esc",
      "right" : "SerializableString esc",
      "info" : "SingleVariableDeclaration[54518-54540]:SingleVariableDeclaration[55964-55986]"
    }, {
      "left" : "int remainingChars",
      "right" : "int remainingChars",
      "info" : "SingleVariableDeclaration[54542-54560]:SingleVariableDeclaration[55988-56006]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[54577-54588]:SimpleType[56023-56034]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[54590-54613]:SimpleType[56036-56059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54618-55085]:Block[56064-56531]"
    }, {
      "left" : "byte[] raw = esc.asUnquotedUTF8();",
      "right" : "byte[] raw = esc.asUnquotedUTF8();",
      "info" : "VariableDeclarationStatement[54628-54662]:VariableDeclarationStatement[56074-56108]"
    }, {
      "left" : "int len = raw.length;",
      "right" : "int len = raw.length;",
      "info" : "VariableDeclarationStatement[54728-54749]:VariableDeclarationStatement[56174-56195]"
    }, {
      "left" : "if (len > 6)",
      "right" : "if (len > 6)",
      "info" : "IfStatement[54758-54931]:IfStatement[56204-56377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54771-54931]:Block[56217-56377]"
    }, {
      "left" : "return _handleLongCustomEscape(outputBuffer, outputPtr, _outputEnd, raw, remainingChars);",
      "right" : "return _handleLongCustomEscape(outputBuffer, outputPtr, _outputEnd, raw, remainingChars);",
      "info" : "ReturnStatement[54832-54921]:ReturnStatement[56278-56367]"
    }, {
      "left" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
      "right" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
      "info" : "ExpressionStatement[54990-55045]:ExpressionStatement[56436-56491]"
    }, {
      "left" : "return (outputPtr + len);",
      "right" : "return (outputPtr + len);",
      "info" : "ReturnStatement[55054-55079]:ReturnStatement[56500-56525]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[55095-55102]:Modifier[56541-56548]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55103-55108]:Modifier[56549-56554]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55109-55112]:PrimitiveType[56555-56558]"
    }, {
      "left" : "_handleLongCustomEscape",
      "right" : "_handleLongCustomEscape",
      "info" : "SimpleName[55113-55136]:SimpleName[56559-56582]"
    }, {
      "left" : "byte[] outputBuffer",
      "right" : "byte[] outputBuffer",
      "info" : "SingleVariableDeclaration[55137-55156]:SingleVariableDeclaration[56583-56602]"
    }, {
      "left" : "int outputPtr",
      "right" : "int outputPtr",
      "info" : "SingleVariableDeclaration[55158-55171]:SingleVariableDeclaration[56604-56617]"
    }, {
      "left" : "int outputEnd",
      "right" : "int outputEnd",
      "info" : "SingleVariableDeclaration[55173-55186]:SingleVariableDeclaration[56619-56632]"
    }, {
      "left" : "byte[] raw",
      "right" : "byte[] raw",
      "info" : "SingleVariableDeclaration[55188-55198]:SingleVariableDeclaration[56634-56644]"
    }, {
      "left" : "int remainingChars",
      "right" : "int remainingChars",
      "info" : "SingleVariableDeclaration[55212-55230]:SingleVariableDeclaration[56658-56676]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[55247-55258]:SimpleType[56693-56704]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[55260-55283]:SimpleType[56706-56729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55288-55984]:Block[56734-57430]"
    }, {
      "left" : "int len = raw.length;",
      "right" : "int len = raw.length;",
      "info" : "VariableDeclarationStatement[55298-55319]:VariableDeclarationStatement[56744-56765]"
    }, {
      "left" : "if ((outputPtr + len) > outputEnd)",
      "right" : "if ((outputPtr + len) > outputEnd)",
      "info" : "IfStatement[55328-55751]:IfStatement[56774-57197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55363-55751]:Block[56809-57197]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[55377-55401]:ExpressionStatement[56823-56847]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[55414-55429]:ExpressionStatement[56860-56875]"
    }, {
      "left" : "outputPtr = _outputTail;",
      "right" : "outputPtr = _outputTail;",
      "info" : "ExpressionStatement[55442-55466]:ExpressionStatement[56888-56912]"
    }, {
      "left" : "if (len > outputBuffer.length)",
      "right" : "if (len > outputBuffer.length)",
      "info" : "IfStatement[55479-55643]:IfStatement[56925-57089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55510-55643]:Block[56956-57089]"
    }, {
      "left" : "_outputStream.write(raw, 0, len);",
      "right" : "_outputStream.write(raw, 0, len);",
      "info" : "ExpressionStatement[55562-55595]:ExpressionStatement[57008-57041]"
    }, {
      "left" : "return outputPtr;",
      "right" : "return outputPtr;",
      "info" : "ReturnStatement[55612-55629]:ReturnStatement[57058-57075]"
    }, {
      "left" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
      "right" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
      "info" : "ExpressionStatement[55656-55711]:ExpressionStatement[57102-57157]"
    }, {
      "left" : "outputPtr += len;",
      "right" : "outputPtr += len;",
      "info" : "ExpressionStatement[55724-55741]:ExpressionStatement[57170-57187]"
    }, {
      "left" : "if ((outputPtr +  6 * remainingChars) > outputEnd)",
      "right" : "if ((outputPtr +  6 * remainingChars) > outputEnd)",
      "info" : "IfStatement[55830-55952]:IfStatement[57276-57398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55881-55952]:Block[57327-57398]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[55895-55910]:ExpressionStatement[57341-57356]"
    }, {
      "left" : "return _outputTail;",
      "right" : "return _outputTail;",
      "info" : "ReturnStatement[55923-55942]:ReturnStatement[57369-57388]"
    }, {
      "left" : "return outputPtr;",
      "right" : "return outputPtr;",
      "info" : "ReturnStatement[55961-55978]:ReturnStatement[57407-57424]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[56405-56412]:Modifier[57851-57858]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[56413-56418]:Modifier[57859-57864]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56419-56423]:PrimitiveType[57865-57869]"
    }, {
      "left" : "_writeUTF8Segments",
      "right" : "_writeUTF8Segments",
      "info" : "SimpleName[56424-56442]:SimpleName[57870-57888]"
    }, {
      "left" : "byte[] utf8",
      "right" : "byte[] utf8",
      "info" : "SingleVariableDeclaration[56443-56454]:SingleVariableDeclaration[57889-57900]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[56456-56466]:SingleVariableDeclaration[57902-57912]"
    }, {
      "left" : "int totalLen",
      "right" : "int totalLen",
      "info" : "SingleVariableDeclaration[56468-56480]:SingleVariableDeclaration[57914-57926]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[56497-56508]:SimpleType[57943-57954]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[56510-56533]:SimpleType[57956-57979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56538-56760]:Block[57984-58206]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[56548-56754]:DoStatement[57994-58200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56551-56732]:Block[57997-58178]"
    }, {
      "left" : "int len = Math.min(_outputMaxContiguous, totalLen);",
      "right" : "int len = Math.min(_outputMaxContiguous, totalLen);",
      "info" : "VariableDeclarationStatement[56565-56616]:VariableDeclarationStatement[58011-58062]"
    }, {
      "left" : "_writeUTF8Segment(utf8, offset, len);",
      "right" : "_writeUTF8Segment(utf8, offset, len);",
      "info" : "ExpressionStatement[56629-56666]:ExpressionStatement[58075-58112]"
    }, {
      "left" : "offset += len;",
      "right" : "offset += len;",
      "info" : "ExpressionStatement[56679-56693]:ExpressionStatement[58125-58139]"
    }, {
      "left" : "totalLen -= len;",
      "right" : "totalLen -= len;",
      "info" : "ExpressionStatement[56706-56722]:ExpressionStatement[58152-58168]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[56770-56777]:Modifier[58216-58223]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[56778-56783]:Modifier[58224-58229]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56784-56788]:PrimitiveType[58230-58234]"
    }, {
      "left" : "_writeUTF8Segment",
      "right" : "_writeUTF8Segment",
      "info" : "SimpleName[56789-56806]:SimpleName[58235-58252]"
    }, {
      "left" : "byte[] utf8",
      "right" : "byte[] utf8",
      "info" : "SingleVariableDeclaration[56807-56818]:SingleVariableDeclaration[58253-58264]"
    }, {
      "left" : "final int offset",
      "right" : "final int offset",
      "info" : "SingleVariableDeclaration[56820-56836]:SingleVariableDeclaration[58266-58282]"
    }, {
      "left" : "final int len",
      "right" : "final int len",
      "info" : "SingleVariableDeclaration[56838-56851]:SingleVariableDeclaration[58284-58297]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[56868-56879]:SimpleType[58314-58325]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[56881-56904]:SimpleType[58327-58350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56909-57701]:Block[58355-59147]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[56992-57030]:VariableDeclarationStatement[58438-58476]"
    }, {
      "left" : "for (int ptr = offset, end = offset + len; ptr < end)",
      "right" : "for (int ptr = offset, end = offset + len; ptr < end)",
      "info" : "ForStatement[57040-57359]:ForStatement[58486-58805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57096-57359]:Block[58542-58805]"
    }, {
      "left" : "int ch = utf8[ptr++];",
      "right" : "int ch = utf8[ptr++];",
      "info" : "VariableDeclarationStatement[57185-57206]:VariableDeclarationStatement[58631-58652]"
    }, {
      "left" : "if ((ch >= 0) && escCodes[ch] != 0)",
      "right" : "if ((ch >= 0) && escCodes[ch] != 0)",
      "info" : "IfStatement[57219-57349]:IfStatement[58665-58795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57255-57349]:Block[58701-58795]"
    }, {
      "left" : "_writeUTF8Segment2(utf8, offset, len);",
      "right" : "_writeUTF8Segment2(utf8, offset, len);",
      "info" : "ExpressionStatement[57273-57311]:ExpressionStatement[58719-58757]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[57328-57335]:ReturnStatement[58774-58781]"
    }, {
      "left" : "if ((_outputTail + len) > _outputEnd)",
      "right" : "if ((_outputTail + len) > _outputEnd)",
      "info" : "IfStatement[57420-57594]:IfStatement[58866-59040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57458-57594]:Block[58904-59040]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[57505-57520]:ExpressionStatement[58951-58966]"
    }, {
      "left" : "System.arraycopy(utf8, offset, _outputBuffer, _outputTail, len);",
      "right" : "System.arraycopy(utf8, offset, _outputBuffer, _outputTail, len);",
      "info" : "ExpressionStatement[57603-57667]:ExpressionStatement[59049-59113]"
    }, {
      "left" : "_outputTail += len;",
      "right" : "_outputTail += len;",
      "info" : "ExpressionStatement[57676-57695]:ExpressionStatement[59122-59141]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57707-57714]:Modifier[59153-59160]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[57715-57720]:Modifier[59161-59166]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57721-57725]:PrimitiveType[59167-59171]"
    }, {
      "left" : "_writeUTF8Segment2",
      "right" : "_writeUTF8Segment2",
      "info" : "SimpleName[57726-57744]:SimpleName[59172-59190]"
    }, {
      "left" : "final byte[] utf8",
      "right" : "final byte[] utf8",
      "info" : "SingleVariableDeclaration[57745-57762]:SingleVariableDeclaration[59191-59208]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[57764-57774]:SingleVariableDeclaration[59210-59220]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[57776-57783]:SingleVariableDeclaration[59222-59229]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[57800-57811]:SimpleType[59246-59257]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[57813-57836]:SimpleType[59259-59282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57841-58890]:Block[59287-60336]"
    }, {
      "left" : "int outputPtr = _outputTail;",
      "right" : "int outputPtr = _outputTail;",
      "info" : "VariableDeclarationStatement[57851-57879]:VariableDeclarationStatement[59297-59325]"
    }, {
      "left" : "if ((outputPtr + (len * 6)) > _outputEnd)",
      "right" : "if ((outputPtr + (len * 6)) > _outputEnd)",
      "info" : "IfStatement[57975-58093]:IfStatement[59421-59539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58017-58093]:Block[59463-59539]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[58031-58046]:ExpressionStatement[59477-59492]"
    }, {
      "left" : "outputPtr = _outputTail;",
      "right" : "outputPtr = _outputTail;",
      "info" : "ExpressionStatement[58059-58083]:ExpressionStatement[59505-59529]"
    }, {
      "left" : "final byte[] outputBuffer = _outputBuffer;",
      "right" : "final byte[] outputBuffer = _outputBuffer;",
      "info" : "VariableDeclarationStatement[58111-58153]:VariableDeclarationStatement[59557-59599]"
    }, {
      "left" : "final int[] escCodes = _outputEscapes;",
      "right" : "final int[] escCodes = _outputEscapes;",
      "info" : "VariableDeclarationStatement[58162-58200]:VariableDeclarationStatement[59608-59646]"
    }, {
      "left" : "len += offset;",
      "right" : "len += offset;",
      "info" : "ExpressionStatement[58209-58223]:ExpressionStatement[59655-59669]"
    }, {
      "left" : "while (offset < len)",
      "right" : "while (offset < len)",
      "info" : "WhileStatement[58267-58851]:WhileStatement[59713-60297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58288-58851]:Block[59734-60297]"
    }, {
      "left" : "byte b = utf8[offset++];",
      "right" : "byte b = utf8[offset++];",
      "info" : "VariableDeclarationStatement[58302-58326]:VariableDeclarationStatement[59748-59772]"
    }, {
      "left" : "int ch = b;",
      "right" : "int ch = b;",
      "info" : "VariableDeclarationStatement[58339-58350]:VariableDeclarationStatement[59785-59796]"
    }, {
      "left" : "if (ch < 0 || escCodes[ch] == 0)",
      "right" : "if (ch < 0 || escCodes[ch] == 0)",
      "info" : "IfStatement[58363-58484]:IfStatement[59809-59930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58396-58484]:Block[59842-59930]"
    }, {
      "left" : "outputBuffer[outputPtr++] = b;",
      "right" : "outputBuffer[outputPtr++] = b;",
      "info" : "ExpressionStatement[58414-58444]:ExpressionStatement[59860-59890]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[58461-58470]:ContinueStatement[59907-59916]"
    }, {
      "left" : "int escape = escCodes[ch];",
      "right" : "int escape = escCodes[ch];",
      "info" : "VariableDeclarationStatement[58497-58523]:VariableDeclarationStatement[59943-59969]"
    }, {
      "left" : "if (escape > 0)",
      "right" : "if (escape > 0)",
      "info" : "IfStatement[58536-58841]:IfStatement[59982-60287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58552-58709]:Block[59998-60155]"
    }, {
      "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[58593-58636]:ExpressionStatement[60039-60082]"
    }, {
      "left" : "outputBuffer[outputPtr++] = (byte) escape;",
      "right" : "outputBuffer[outputPtr++] = (byte) escape;",
      "info" : "ExpressionStatement[58653-58695]:ExpressionStatement[60099-60141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58715-58841]:Block[60161-60287]"
    }, {
      "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
      "info" : "ExpressionStatement[58780-58827]:ExpressionStatement[60226-60273]"
    }, {
      "left" : "_outputTail = outputPtr;",
      "right" : "_outputTail = outputPtr;",
      "info" : "ExpressionStatement[58860-58884]:ExpressionStatement[60306-60330]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[59107-59116]:Modifier[60553-60562]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[59117-59122]:Modifier[60563-60568]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[59123-59127]:PrimitiveType[60569-60573]"
    }, {
      "left" : "_writeBinary",
      "right" : "_writeBinary",
      "info" : "SimpleName[59128-59140]:SimpleName[60574-60586]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[59141-59165]:SingleVariableDeclaration[60587-60611]"
    }, {
      "left" : "byte[] input",
      "right" : "byte[] input",
      "info" : "SingleVariableDeclaration[59179-59191]:SingleVariableDeclaration[60625-60637]"
    }, {
      "left" : "int inputPtr",
      "right" : "int inputPtr",
      "info" : "SingleVariableDeclaration[59193-59205]:SingleVariableDeclaration[60639-60651]"
    }, {
      "left" : "final int inputEnd",
      "right" : "final int inputEnd",
      "info" : "SingleVariableDeclaration[59207-59225]:SingleVariableDeclaration[60653-60671]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[59242-59253]:SimpleType[60688-60699]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[59255-59278]:SimpleType[60701-60724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59283-61013]:Block[60729-62459]"
    }, {
      "left" : "int safeInputEnd = inputEnd - 3;",
      "right" : "int safeInputEnd = inputEnd - 3;",
      "info" : "VariableDeclarationStatement[59358-59390]:VariableDeclarationStatement[60804-60836]"
    }, {
      "left" : "int safeOutputEnd = _outputEnd - 6;",
      "right" : "int safeOutputEnd = _outputEnd - 6;",
      "info" : "VariableDeclarationStatement[59479-59514]:VariableDeclarationStatement[60925-60960]"
    }, {
      "left" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "right" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "info" : "VariableDeclarationStatement[59523-59579]:VariableDeclarationStatement[60969-61025]"
    }, {
      "left" : "while (inputPtr <= safeInputEnd)",
      "right" : "while (inputPtr <= safeInputEnd)",
      "info" : "WhileStatement[59653-60407]:WhileStatement[61099-61853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59686-60407]:Block[61132-61853]"
    }, {
      "left" : "if (_outputTail > safeOutputEnd)",
      "right" : "if (_outputTail > safeOutputEnd)",
      "info" : "IfStatement[59700-59797]:IfStatement[61146-61243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59733-59797]:Block[61179-61243]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[59768-59783]:ExpressionStatement[61214-61229]"
    }, {
      "left" : "int b24 = ((int) input[inputPtr++]) << 8;",
      "right" : "int b24 = ((int) input[inputPtr++]) << 8;",
      "info" : "VariableDeclarationStatement[59868-59909]:VariableDeclarationStatement[61314-61355]"
    }, {
      "left" : "b24 |= ((int) input[inputPtr++]) & 0xFF;",
      "right" : "b24 |= ((int) input[inputPtr++]) & 0xFF;",
      "info" : "ExpressionStatement[59922-59962]:ExpressionStatement[61368-61408]"
    }, {
      "left" : "b24 = (b24 << 8) | (((int) input[inputPtr++]) & 0xFF);",
      "right" : "b24 = (b24 << 8) | (((int) input[inputPtr++]) & 0xFF);",
      "info" : "ExpressionStatement[59975-60029]:ExpressionStatement[61421-61475]"
    }, {
      "left" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
      "right" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[60042-60118]:ExpressionStatement[61488-61564]"
    }, {
      "left" : "if (--chunksBeforeLF <= 0)",
      "right" : "if (--chunksBeforeLF <= 0)",
      "info" : "IfStatement[60131-60397]:IfStatement[61577-61843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60158-60397]:Block[61604-61843]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = '\\\\';",
      "right" : "_outputBuffer[_outputTail++] = '\\\\';",
      "info" : "ExpressionStatement[60226-60262]:ExpressionStatement[61672-61708]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = 'n';",
      "right" : "_outputBuffer[_outputTail++] = 'n';",
      "info" : "ExpressionStatement[60279-60314]:ExpressionStatement[61725-61760]"
    }, {
      "left" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "right" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "info" : "ExpressionStatement[60331-60383]:ExpressionStatement[61777-61829]"
    }, {
      "left" : "int inputLeft = inputEnd - inputPtr;",
      "right" : "int inputLeft = inputEnd - inputPtr;",
      "info" : "VariableDeclarationStatement[60481-60517]:VariableDeclarationStatement[61927-61963]"
    }, {
      "left" : "if (inputLeft > 0)",
      "right" : "if (inputLeft > 0)",
      "info" : "IfStatement[60539-61007]:IfStatement[61985-62453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60558-61007]:Block[62004-62453]"
    }, {
      "left" : "if (_outputTail > safeOutputEnd)",
      "right" : "if (_outputTail > safeOutputEnd)",
      "info" : "IfStatement[60612-60728]:IfStatement[62058-62174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60645-60728]:Block[62091-62174]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[60699-60714]:ExpressionStatement[62145-62160]"
    }, {
      "left" : "int b24 = ((int) input[inputPtr++]) << 16;",
      "right" : "int b24 = ((int) input[inputPtr++]) << 16;",
      "info" : "VariableDeclarationStatement[60741-60783]:VariableDeclarationStatement[62187-62229]"
    }, {
      "left" : "if (inputLeft == 2)",
      "right" : "if (inputLeft == 2)",
      "info" : "IfStatement[60796-60895]:IfStatement[62242-62341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60816-60895]:Block[62262-62341]"
    }, {
      "left" : "b24 |= (((int) input[inputPtr++]) & 0xFF) << 8;",
      "right" : "b24 |= (((int) input[inputPtr++]) & 0xFF) << 8;",
      "info" : "ExpressionStatement[60834-60881]:ExpressionStatement[62280-62327]"
    }, {
      "left" : "_outputTail = b64variant.encodeBase64Partial(b24, inputLeft, _outputBuffer, _outputTail);",
      "right" : "_outputTail = b64variant.encodeBase64Partial(b24, inputLeft, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[60908-60997]:ExpressionStatement[62354-62443]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[61078-61087]:Modifier[62524-62533]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[61088-61093]:Modifier[62534-62539]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[61094-61097]:PrimitiveType[62540-62543]"
    }, {
      "left" : "_writeBinary",
      "right" : "_writeBinary",
      "info" : "SimpleName[61098-61110]:SimpleName[62544-62556]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[61111-61135]:SingleVariableDeclaration[62557-62581]"
    }, {
      "left" : "InputStream data",
      "right" : "InputStream data",
      "info" : "SingleVariableDeclaration[61149-61165]:SingleVariableDeclaration[62595-62611]"
    }, {
      "left" : "byte[] readBuffer",
      "right" : "byte[] readBuffer",
      "info" : "SingleVariableDeclaration[61167-61184]:SingleVariableDeclaration[62613-62630]"
    }, {
      "left" : "int bytesLeft",
      "right" : "int bytesLeft",
      "info" : "SingleVariableDeclaration[61186-61199]:SingleVariableDeclaration[62632-62645]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[61216-61227]:SimpleType[62662-62673]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[61229-61252]:SimpleType[62675-62698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61257-63554]:Block[62703-65000]"
    }, {
      "left" : "int inputPtr = 0;",
      "right" : "int inputPtr = 0;",
      "info" : "VariableDeclarationStatement[61267-61284]:VariableDeclarationStatement[62713-62730]"
    }, {
      "left" : "int inputEnd = 0;",
      "right" : "int inputEnd = 0;",
      "info" : "VariableDeclarationStatement[61293-61310]:VariableDeclarationStatement[62739-62756]"
    }, {
      "left" : "int lastFullOffset = -3;",
      "right" : "int lastFullOffset = -3;",
      "info" : "VariableDeclarationStatement[61319-61343]:VariableDeclarationStatement[62765-62789]"
    }, {
      "left" : "int safeOutputEnd = _outputEnd - 6;",
      "right" : "int safeOutputEnd = _outputEnd - 6;",
      "info" : "VariableDeclarationStatement[61448-61483]:VariableDeclarationStatement[62894-62929]"
    }, {
      "left" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "right" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "info" : "VariableDeclarationStatement[61492-61548]:VariableDeclarationStatement[62938-62994]"
    }, {
      "left" : "while (bytesLeft > 2)",
      "right" : "while (bytesLeft > 2)",
      "info" : "WhileStatement[61558-62621]:WhileStatement[63004-64067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61580-62621]:Block[63026-64067]"
    }, {
      "left" : "if (inputPtr > lastFullOffset)",
      "right" : "if (inputPtr > lastFullOffset)",
      "info" : "IfStatement[61625-61966]:IfStatement[63071-63412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61656-61966]:Block[63102-63412]"
    }, {
      "left" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
      "right" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
      "info" : "ExpressionStatement[61674-61744]:ExpressionStatement[63120-63190]"
    }, {
      "left" : "inputPtr = 0;",
      "right" : "inputPtr = 0;",
      "info" : "ExpressionStatement[61761-61774]:ExpressionStatement[63207-63220]"
    }, {
      "left" : "if (inputEnd < 3)",
      "right" : "if (inputEnd < 3)",
      "info" : "IfStatement[61791-61907]:IfStatement[63237-63353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61809-61907]:Block[63255-63353]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[61883-61889]:BreakStatement[63329-63335]"
    }, {
      "left" : "lastFullOffset = inputEnd-3;",
      "right" : "lastFullOffset = inputEnd-3;",
      "info" : "ExpressionStatement[61924-61952]:ExpressionStatement[63370-63398]"
    }, {
      "left" : "if (_outputTail > safeOutputEnd)",
      "right" : "if (_outputTail > safeOutputEnd)",
      "info" : "IfStatement[61979-62076]:IfStatement[63425-63522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62012-62076]:Block[63458-63522]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[62047-62062]:ExpressionStatement[63493-63508]"
    }, {
      "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
      "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
      "info" : "VariableDeclarationStatement[62089-62135]:VariableDeclarationStatement[63535-63581]"
    }, {
      "left" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
      "right" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
      "info" : "ExpressionStatement[62148-62193]:ExpressionStatement[63594-63639]"
    }, {
      "left" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
      "right" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
      "info" : "ExpressionStatement[62206-62265]:ExpressionStatement[63652-63711]"
    }, {
      "left" : "bytesLeft -= 3;",
      "right" : "bytesLeft -= 3;",
      "info" : "ExpressionStatement[62278-62293]:ExpressionStatement[63724-63739]"
    }, {
      "left" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
      "right" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[62306-62382]:ExpressionStatement[63752-63828]"
    }, {
      "left" : "if (--chunksBeforeLF <= 0)",
      "right" : "if (--chunksBeforeLF <= 0)",
      "info" : "IfStatement[62395-62611]:IfStatement[63841-64057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62422-62611]:Block[63868-64057]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = '\\\\';",
      "right" : "_outputBuffer[_outputTail++] = '\\\\';",
      "info" : "ExpressionStatement[62440-62476]:ExpressionStatement[63886-63922]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = 'n';",
      "right" : "_outputBuffer[_outputTail++] = 'n';",
      "info" : "ExpressionStatement[62493-62528]:ExpressionStatement[63939-63974]"
    }, {
      "left" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "right" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "info" : "ExpressionStatement[62545-62597]:ExpressionStatement[63991-64043]"
    }, {
      "left" : "if (bytesLeft > 0)",
      "right" : "if (bytesLeft > 0)",
      "info" : "IfStatement[62703-63522]:IfStatement[64149-64968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62722-63522]:Block[64168-64968]"
    }, {
      "left" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
      "right" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
      "info" : "ExpressionStatement[62736-62806]:ExpressionStatement[64182-64252]"
    }, {
      "left" : "inputPtr = 0;",
      "right" : "inputPtr = 0;",
      "info" : "ExpressionStatement[62819-62832]:ExpressionStatement[64265-64278]"
    }, {
      "left" : "if (inputEnd > 0)",
      "right" : "if (inputEnd > 0)",
      "info" : "IfStatement[62845-63512]:IfStatement[64291-64958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62863-63512]:Block[64309-64958]"
    }, {
      "left" : "if (_outputTail > safeOutputEnd)",
      "right" : "if (_outputTail > safeOutputEnd)",
      "info" : "IfStatement[62921-63045]:IfStatement[64367-64491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62954-63045]:Block[64400-64491]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[63012-63027]:ExpressionStatement[64458-64473]"
    }, {
      "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
      "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
      "info" : "VariableDeclarationStatement[63062-63109]:VariableDeclarationStatement[64508-64555]"
    }, {
      "left" : "int amount;",
      "right" : "int amount;",
      "info" : "VariableDeclarationStatement[63126-63137]:VariableDeclarationStatement[64572-64583]"
    }, {
      "left" : "if (inputPtr < inputEnd)",
      "right" : "if (inputPtr < inputEnd)",
      "info" : "IfStatement[63154-63358]:IfStatement[64600-64804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63179-63301]:Block[64625-64747]"
    }, {
      "left" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
      "right" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
      "info" : "ExpressionStatement[63201-63251]:ExpressionStatement[64647-64697]"
    }, {
      "left" : "amount = 2;",
      "right" : "amount = 2;",
      "info" : "ExpressionStatement[63272-63283]:ExpressionStatement[64718-64729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63307-63358]:Block[64753-64804]"
    }, {
      "left" : "amount = 1;",
      "right" : "amount = 1;",
      "info" : "ExpressionStatement[63329-63340]:ExpressionStatement[64775-64786]"
    }, {
      "left" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
      "right" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[63375-63461]:ExpressionStatement[64821-64907]"
    }, {
      "left" : "bytesLeft -= amount;",
      "right" : "bytesLeft -= amount;",
      "info" : "ExpressionStatement[63478-63498]:ExpressionStatement[64924-64944]"
    }, {
      "left" : "return bytesLeft;",
      "right" : "return bytesLeft;",
      "info" : "ReturnStatement[63531-63548]:ReturnStatement[64977-64994]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[63603-63612]:Modifier[65049-65058]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[63613-63618]:Modifier[65059-65064]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[63619-63622]:PrimitiveType[65065-65068]"
    }, {
      "left" : "_writeBinary",
      "right" : "_writeBinary",
      "info" : "SimpleName[63623-63635]:SimpleName[65069-65081]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[63636-63660]:SingleVariableDeclaration[65082-65106]"
    }, {
      "left" : "InputStream data",
      "right" : "InputStream data",
      "info" : "SingleVariableDeclaration[63674-63690]:SingleVariableDeclaration[65120-65136]"
    }, {
      "left" : "byte[] readBuffer",
      "right" : "byte[] readBuffer",
      "info" : "SingleVariableDeclaration[63692-63709]:SingleVariableDeclaration[65138-65155]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[63726-63737]:SimpleType[65172-65183]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[63739-63762]:SimpleType[65185-65208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63767-65941]:Block[65213-67387]"
    }, {
      "left" : "int inputPtr = 0;",
      "right" : "int inputPtr = 0;",
      "info" : "VariableDeclarationStatement[63777-63794]:VariableDeclarationStatement[65223-65240]"
    }, {
      "left" : "int inputEnd = 0;",
      "right" : "int inputEnd = 0;",
      "info" : "VariableDeclarationStatement[63803-63820]:VariableDeclarationStatement[65249-65266]"
    }, {
      "left" : "int lastFullOffset = -3;",
      "right" : "int lastFullOffset = -3;",
      "info" : "VariableDeclarationStatement[63829-63853]:VariableDeclarationStatement[65275-65299]"
    }, {
      "left" : "int bytesDone = 0;",
      "right" : "int bytesDone = 0;",
      "info" : "VariableDeclarationStatement[63862-63880]:VariableDeclarationStatement[65308-65326]"
    }, {
      "left" : "int safeOutputEnd = _outputEnd - 6;",
      "right" : "int safeOutputEnd = _outputEnd - 6;",
      "info" : "VariableDeclarationStatement[63978-64013]:VariableDeclarationStatement[65424-65459]"
    }, {
      "left" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "right" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "info" : "VariableDeclarationStatement[64022-64078]:VariableDeclarationStatement[65468-65524]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[64152-65262]:WhileStatement[65598-66708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64165-65262]:Block[65611-66708]"
    }, {
      "left" : "if (inputPtr > lastFullOffset)",
      "right" : "if (inputPtr > lastFullOffset)",
      "info" : "IfStatement[64179-64549]:IfStatement[65625-65995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64210-64549]:Block[65656-65995]"
    }, {
      "left" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, readBuffer.length);",
      "right" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, readBuffer.length);",
      "info" : "ExpressionStatement[64249-64327]:ExpressionStatement[65695-65773]"
    }, {
      "left" : "inputPtr = 0;",
      "right" : "inputPtr = 0;",
      "info" : "ExpressionStatement[64344-64357]:ExpressionStatement[65790-65803]"
    }, {
      "left" : "if (inputEnd < 3)",
      "right" : "if (inputEnd < 3)",
      "info" : "IfStatement[64374-64490]:IfStatement[65820-65936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64392-64490]:Block[65838-65936]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[64466-64472]:BreakStatement[65912-65918]"
    }, {
      "left" : "lastFullOffset = inputEnd-3;",
      "right" : "lastFullOffset = inputEnd-3;",
      "info" : "ExpressionStatement[64507-64535]:ExpressionStatement[65953-65981]"
    }, {
      "left" : "if (_outputTail > safeOutputEnd)",
      "right" : "if (_outputTail > safeOutputEnd)",
      "info" : "IfStatement[64562-64659]:IfStatement[66008-66105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64595-64659]:Block[66041-66105]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[64630-64645]:ExpressionStatement[66076-66091]"
    }, {
      "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
      "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
      "info" : "VariableDeclarationStatement[64730-64776]:VariableDeclarationStatement[66176-66222]"
    }, {
      "left" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
      "right" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
      "info" : "ExpressionStatement[64789-64834]:ExpressionStatement[66235-66280]"
    }, {
      "left" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
      "right" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
      "info" : "ExpressionStatement[64847-64906]:ExpressionStatement[66293-66352]"
    }, {
      "left" : "bytesDone += 3;",
      "right" : "bytesDone += 3;",
      "info" : "ExpressionStatement[64919-64934]:ExpressionStatement[66365-66380]"
    }, {
      "left" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
      "right" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[64947-65023]:ExpressionStatement[66393-66469]"
    }, {
      "left" : "if (--chunksBeforeLF <= 0)",
      "right" : "if (--chunksBeforeLF <= 0)",
      "info" : "IfStatement[65036-65252]:IfStatement[66482-66698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65063-65252]:Block[66509-66698]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = '\\\\';",
      "right" : "_outputBuffer[_outputTail++] = '\\\\';",
      "info" : "ExpressionStatement[65081-65117]:ExpressionStatement[66527-66563]"
    }, {
      "left" : "_outputBuffer[_outputTail++] = 'n';",
      "right" : "_outputBuffer[_outputTail++] = 'n';",
      "info" : "ExpressionStatement[65134-65169]:ExpressionStatement[66580-66615]"
    }, {
      "left" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "right" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
      "info" : "ExpressionStatement[65186-65238]:ExpressionStatement[66632-66684]"
    }, {
      "left" : "if (inputPtr < inputEnd)",
      "right" : "if (inputPtr < inputEnd)",
      "info" : "IfStatement[65336-65909]:IfStatement[66782-67355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65361-65909]:Block[66807-67355]"
    }, {
      "left" : "if (_outputTail > safeOutputEnd)",
      "right" : "if (_outputTail > safeOutputEnd)",
      "info" : "IfStatement[65415-65531]:IfStatement[66861-66977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65448-65531]:Block[66894-66977]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[65502-65517]:ExpressionStatement[66948-66963]"
    }, {
      "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
      "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
      "info" : "VariableDeclarationStatement[65544-65591]:VariableDeclarationStatement[66990-67037]"
    }, {
      "left" : "int amount = 1;",
      "right" : "int amount = 1;",
      "info" : "VariableDeclarationStatement[65604-65619]:VariableDeclarationStatement[67050-67065]"
    }, {
      "left" : "if (inputPtr < inputEnd)",
      "right" : "if (inputPtr < inputEnd)",
      "info" : "IfStatement[65632-65767]:IfStatement[67078-67213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65657-65767]:Block[67103-67213]"
    }, {
      "left" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
      "right" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
      "info" : "ExpressionStatement[65675-65725]:ExpressionStatement[67121-67171]"
    }, {
      "left" : "amount = 2;",
      "right" : "amount = 2;",
      "info" : "ExpressionStatement[65742-65753]:ExpressionStatement[67188-67199]"
    }, {
      "left" : "bytesDone += amount;",
      "right" : "bytesDone += amount;",
      "info" : "ExpressionStatement[65780-65800]:ExpressionStatement[67226-67246]"
    }, {
      "left" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
      "right" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
      "info" : "ExpressionStatement[65813-65899]:ExpressionStatement[67259-67345]"
    }, {
      "left" : "return bytesDone;",
      "right" : "return bytesDone;",
      "info" : "ReturnStatement[65918-65935]:ReturnStatement[67364-67381]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[65951-65958]:Modifier[67397-67404]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[65959-65964]:Modifier[67405-67410]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[65965-65968]:PrimitiveType[67411-67414]"
    }, {
      "left" : "_readMore",
      "right" : "_readMore",
      "info" : "SimpleName[65969-65978]:SimpleName[67415-67424]"
    }, {
      "left" : "InputStream in",
      "right" : "InputStream in",
      "info" : "SingleVariableDeclaration[65979-65993]:SingleVariableDeclaration[67425-67439]"
    }, {
      "left" : "byte[] readBuffer",
      "right" : "byte[] readBuffer",
      "info" : "SingleVariableDeclaration[66007-66024]:SingleVariableDeclaration[67453-67470]"
    }, {
      "left" : "int inputPtr",
      "right" : "int inputPtr",
      "info" : "SingleVariableDeclaration[66026-66038]:SingleVariableDeclaration[67472-67484]"
    }, {
      "left" : "int inputEnd",
      "right" : "int inputEnd",
      "info" : "SingleVariableDeclaration[66040-66052]:SingleVariableDeclaration[67486-67498]"
    }, {
      "left" : "int maxRead",
      "right" : "int maxRead",
      "info" : "SingleVariableDeclaration[66066-66077]:SingleVariableDeclaration[67512-67523]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[66086-66097]:SimpleType[67532-67543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66102-66744]:Block[67548-68190]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[66151-66161]:VariableDeclarationStatement[67597-67607]"
    }, {
      "left" : "while (inputPtr < inputEnd)",
      "right" : "while (inputPtr < inputEnd)",
      "info" : "WhileStatement[66170-66264]:WhileStatement[67616-67710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66198-66264]:Block[67644-67710]"
    }, {
      "left" : "readBuffer[i++]  = readBuffer[inputPtr++];",
      "right" : "readBuffer[i++]  = readBuffer[inputPtr++];",
      "info" : "ExpressionStatement[66212-66254]:ExpressionStatement[67658-67700]"
    }, {
      "left" : "inputPtr = 0;",
      "right" : "inputPtr = 0;",
      "info" : "ExpressionStatement[66273-66286]:ExpressionStatement[67719-67732]"
    }, {
      "left" : "inputEnd = i;",
      "right" : "inputEnd = i;",
      "info" : "ExpressionStatement[66295-66308]:ExpressionStatement[67741-67754]"
    }, {
      "left" : "maxRead = Math.min(maxRead, readBuffer.length);",
      "right" : "maxRead = Math.min(maxRead, readBuffer.length);",
      "info" : "ExpressionStatement[66317-66364]:ExpressionStatement[67763-67810]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[66382-66713]:DoStatement[67828-68159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66385-66691]:Block[67831-68137]"
    }, {
      "left" : "int length = maxRead - inputEnd;",
      "right" : "int length = maxRead - inputEnd;",
      "info" : "VariableDeclarationStatement[66399-66431]:VariableDeclarationStatement[67845-67877]"
    }, {
      "left" : "if (length == 0)",
      "right" : "if (length == 0)",
      "info" : "IfStatement[66444-66499]:IfStatement[67890-67945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66461-66499]:Block[67907-67945]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[66479-66485]:BreakStatement[67925-67931]"
    }, {
      "left" : "int count = in.read(readBuffer, inputEnd, length);",
      "right" : "int count = in.read(readBuffer, inputEnd, length);",
      "info" : "VariableDeclarationStatement[66512-66562]:VariableDeclarationStatement[67958-68008]"
    }, {
      "left" : "if (count < 0)",
      "right" : "if (count < 0)",
      "info" : "IfStatement[66587-66650]:IfStatement[68033-68096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66602-66650]:Block[68048-68096]"
    }, {
      "left" : "return inputEnd;",
      "right" : "return inputEnd;",
      "info" : "ReturnStatement[66620-66636]:ReturnStatement[68066-68082]"
    }, {
      "left" : "inputEnd += count;",
      "right" : "inputEnd += count;",
      "info" : "ExpressionStatement[66663-66681]:ExpressionStatement[68109-68127]"
    }, {
      "left" : "return inputEnd;",
      "right" : "return inputEnd;",
      "info" : "ReturnStatement[66722-66738]:ReturnStatement[68168-68184]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[68067-68076]:Modifier[69556-69565]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68077-68082]:Modifier[69566-69571]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68083-68087]:PrimitiveType[69572-69576]"
    }, {
      "left" : "_outputSurrogates",
      "right" : "_outputSurrogates",
      "info" : "SimpleName[68088-68105]:SimpleName[69577-69594]"
    }, {
      "left" : "int surr1",
      "right" : "int surr1",
      "info" : "SingleVariableDeclaration[68106-68115]:SingleVariableDeclaration[69595-69604]"
    }, {
      "left" : "int surr2",
      "right" : "int surr2",
      "info" : "SingleVariableDeclaration[68117-68126]:SingleVariableDeclaration[69606-69615]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[68135-68146]:SimpleType[69624-69635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68151-68579]:Block[69640-70068]"
    }, {
      "left" : "int c = _decodeSurrogate(surr1, surr2);",
      "right" : "int c = _decodeSurrogate(surr1, surr2);",
      "info" : "VariableDeclarationStatement[68161-68200]:VariableDeclarationStatement[69650-69689]"
    }, {
      "left" : "if ((_outputTail + 4) > _outputEnd)",
      "right" : "if ((_outputTail + 4) > _outputEnd)",
      "info" : "IfStatement[68209-68284]:IfStatement[69698-69773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68245-68284]:Block[69734-69773]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[68259-68274]:ExpressionStatement[69748-69763]"
    }, {
      "left" : "final byte[] bbuf = _outputBuffer;",
      "right" : "final byte[] bbuf = _outputBuffer;",
      "info" : "VariableDeclarationStatement[68293-68327]:VariableDeclarationStatement[69782-69816]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0xf0 | (c >> 18));",
      "right" : "bbuf[_outputTail++] = (byte) (0xf0 | (c >> 18));",
      "info" : "ExpressionStatement[68336-68384]:ExpressionStatement[69825-69873]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 12) & 0x3f));",
      "right" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 12) & 0x3f));",
      "info" : "ExpressionStatement[68393-68450]:ExpressionStatement[69882-69939]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 6) & 0x3f));",
      "right" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 6) & 0x3f));",
      "info" : "ExpressionStatement[68459-68515]:ExpressionStatement[69948-70004]"
    }, {
      "left" : "bbuf[_outputTail++] = (byte) (0x80 | (c & 0x3f));",
      "right" : "bbuf[_outputTail++] = (byte) (0x80 | (c & 0x3f));",
      "info" : "ExpressionStatement[68524-68573]:ExpressionStatement[70013-70062]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[68802-68809]:Modifier[70291-70298]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68810-68815]:Modifier[70299-70304]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[68816-68819]:PrimitiveType[70305-70308]"
    }, {
      "left" : "_outputMultiByteChar",
      "right" : "_outputMultiByteChar",
      "info" : "SimpleName[68820-68840]:SimpleName[70309-70329]"
    }, {
      "left" : "int ch",
      "right" : "int ch",
      "info" : "SingleVariableDeclaration[68841-68847]:SingleVariableDeclaration[70330-70336]"
    }, {
      "left" : "int outputPtr",
      "right" : "int outputPtr",
      "info" : "SingleVariableDeclaration[68849-68862]:SingleVariableDeclaration[70338-70351]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[68871-68882]:SimpleType[70360-70371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68887-69926]:Block[70376-71415]"
    }, {
      "left" : "byte[] bbuf = _outputBuffer;",
      "right" : "byte[] bbuf = _outputBuffer;",
      "info" : "VariableDeclarationStatement[68897-68925]:VariableDeclarationStatement[70386-70414]"
    }, {
      "left" : "if (ch >= SURR1_FIRST && ch <= SURR2_LAST)",
      "right" : "if (ch >= SURR1_FIRST && ch <= SURR2_LAST)",
      "info" : "IfStatement[68934-69894]:IfStatement[70423-71383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68977-69688]:Block[70466-71177]"
    }, {
      "left" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[69303-69338]:ExpressionStatement[70792-70827]"
    }, {
      "left" : "bbuf[outputPtr++] = BYTE_u;",
      "right" : "bbuf[outputPtr++] = BYTE_u;",
      "info" : "ExpressionStatement[69355-69382]:ExpressionStatement[70844-70871]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 12) & 0xF];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 12) & 0xF];",
      "info" : "ExpressionStatement[69416-69464]:ExpressionStatement[70905-70953]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 8) & 0xF];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 8) & 0xF];",
      "info" : "ExpressionStatement[69481-69528]:ExpressionStatement[70970-71017]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 4) & 0xF];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 4) & 0xF];",
      "info" : "ExpressionStatement[69545-69592]:ExpressionStatement[71034-71081]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[ch & 0xF];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[ch & 0xF];",
      "info" : "ExpressionStatement[69609-69649]:ExpressionStatement[71098-71138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69694-69894]:Block[71183-71383]"
    }, {
      "left" : "bbuf[outputPtr++] = (byte) (0xe0 | (ch >> 12));",
      "right" : "bbuf[outputPtr++] = (byte) (0xe0 | (ch >> 12));",
      "info" : "ExpressionStatement[69708-69755]:ExpressionStatement[71197-71244]"
    }, {
      "left" : "bbuf[outputPtr++] = (byte) (0x80 | ((ch >> 6) & 0x3f));",
      "right" : "bbuf[outputPtr++] = (byte) (0x80 | ((ch >> 6) & 0x3f));",
      "info" : "ExpressionStatement[69768-69823]:ExpressionStatement[71257-71312]"
    }, {
      "left" : "bbuf[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "right" : "bbuf[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
      "info" : "ExpressionStatement[69836-69884]:ExpressionStatement[71325-71373]"
    }, {
      "left" : "return outputPtr;",
      "right" : "return outputPtr;",
      "info" : "ReturnStatement[69903-69920]:ReturnStatement[71392-71409]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[69932-69939]:Modifier[71421-71428]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[69940-69945]:Modifier[71429-71434]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[69946-69950]:PrimitiveType[71435-71439]"
    }, {
      "left" : "_writeNull",
      "right" : "_writeNull",
      "info" : "SimpleName[69951-69961]:SimpleName[71440-71450]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[69971-69982]:SimpleType[71460-71471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69987-70177]:Block[71476-71666]"
    }, {
      "left" : "if ((_outputTail + 4) >= _outputEnd)",
      "right" : "if ((_outputTail + 4) >= _outputEnd)",
      "info" : "IfStatement[69997-70073]:IfStatement[71486-71562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70034-70073]:Block[71523-71562]"
    }, {
      "left" : "_flushBuffer();",
      "right" : "_flushBuffer();",
      "info" : "ExpressionStatement[70048-70063]:ExpressionStatement[71537-71552]"
    }, {
      "left" : "System.arraycopy(NULL_BYTES, 0, _outputBuffer, _outputTail, 4);",
      "right" : "System.arraycopy(NULL_BYTES, 0, _outputBuffer, _outputTail, 4);",
      "info" : "ExpressionStatement[70082-70145]:ExpressionStatement[71571-71634]"
    }, {
      "left" : "_outputTail += 4;",
      "right" : "_outputTail += 4;",
      "info" : "ExpressionStatement[70154-70171]:ExpressionStatement[71643-71660]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[70370-70377]:Modifier[71859-71866]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[70378-70381]:PrimitiveType[71867-71870]"
    }, {
      "left" : "_writeGenericEscape",
      "right" : "_writeGenericEscape",
      "info" : "SimpleName[70382-70401]:SimpleName[71871-71890]"
    }, {
      "left" : "int charToEscape",
      "right" : "int charToEscape",
      "info" : "SingleVariableDeclaration[70402-70418]:SingleVariableDeclaration[71891-71907]"
    }, {
      "left" : "int outputPtr",
      "right" : "int outputPtr",
      "info" : "SingleVariableDeclaration[70420-70433]:SingleVariableDeclaration[71909-71922]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[70442-70453]:SimpleType[71931-71942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70458-71136]:Block[71947-72625]"
    }, {
      "left" : "final byte[] bbuf = _outputBuffer;",
      "right" : "final byte[] bbuf = _outputBuffer;",
      "info" : "VariableDeclarationStatement[70468-70502]:VariableDeclarationStatement[71957-71991]"
    }, {
      "left" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
      "right" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
      "info" : "ExpressionStatement[70511-70546]:ExpressionStatement[72000-72035]"
    }, {
      "left" : "bbuf[outputPtr++] = BYTE_u;",
      "right" : "bbuf[outputPtr++] = BYTE_u;",
      "info" : "ExpressionStatement[70555-70582]:ExpressionStatement[72044-72071]"
    }, {
      "left" : "if (charToEscape > 0xFF)",
      "right" : "if (charToEscape > 0xFF)",
      "info" : "IfStatement[70591-70912]:IfStatement[72080-72401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70616-70815]:Block[72105-72304]"
    }, {
      "left" : "int hi = (charToEscape >> 8) & 0xFF;",
      "right" : "int hi = (charToEscape >> 8) & 0xFF;",
      "info" : "VariableDeclarationStatement[70630-70666]:VariableDeclarationStatement[72119-72155]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[hi >> 4];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[hi >> 4];",
      "info" : "ExpressionStatement[70679-70718]:ExpressionStatement[72168-72207]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[hi & 0xF];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[hi & 0xF];",
      "info" : "ExpressionStatement[70731-70771]:ExpressionStatement[72220-72260]"
    }, {
      "left" : "charToEscape &= 0xFF;",
      "right" : "charToEscape &= 0xFF;",
      "info" : "ExpressionStatement[70784-70805]:ExpressionStatement[72273-72294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70821-70912]:Block[72310-72401]"
    }, {
      "left" : "bbuf[outputPtr++] = BYTE_0;",
      "right" : "bbuf[outputPtr++] = BYTE_0;",
      "info" : "ExpressionStatement[70835-70862]:ExpressionStatement[72324-72351]"
    }, {
      "left" : "bbuf[outputPtr++] = BYTE_0;",
      "right" : "bbuf[outputPtr++] = BYTE_0;",
      "info" : "ExpressionStatement[70875-70902]:ExpressionStatement[72364-72391]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape >> 4];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape >> 4];",
      "info" : "ExpressionStatement[70996-71045]:ExpressionStatement[72485-72534]"
    }, {
      "left" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape & 0xF];",
      "right" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape & 0xF];",
      "info" : "ExpressionStatement[71054-71104]:ExpressionStatement[72543-72593]"
    }, {
      "left" : "return outputPtr;",
      "right" : "return outputPtr;",
      "info" : "ReturnStatement[71113-71130]:ReturnStatement[72602-72619]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[71142-71151]:Modifier[72631-72640]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[71152-71157]:Modifier[72641-72646]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[71158-71162]:PrimitiveType[72647-72651]"
    }, {
      "left" : "_flushBuffer",
      "right" : "_flushBuffer",
      "info" : "SimpleName[71163-71175]:SimpleName[72652-72664]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[71185-71196]:SimpleType[72674-72685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71201-71357]:Block[72690-72846]"
    }, {
      "left" : "int len = _outputTail;",
      "right" : "int len = _outputTail;",
      "info" : "VariableDeclarationStatement[71211-71233]:VariableDeclarationStatement[72700-72722]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[71242-71351]:IfStatement[72731-72840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71255-71351]:Block[72744-72840]"
    }, {
      "left" : "_outputTail = 0;",
      "right" : "_outputTail = 0;",
      "info" : "ExpressionStatement[71269-71285]:ExpressionStatement[72758-72774]"
    }, {
      "left" : "_outputStream.write(_outputBuffer, 0, len);",
      "right" : "_outputStream.write(_outputBuffer, 0, len);",
      "info" : "ExpressionStatement[71298-71341]:ExpressionStatement[72787-72830]"
    } ]
  },
  "interFileMappings" : { }
}