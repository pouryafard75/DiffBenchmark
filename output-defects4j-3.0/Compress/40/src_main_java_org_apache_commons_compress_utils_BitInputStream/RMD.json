{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BitInputStream",
      "right" : "BitInputStream",
      "info" : "TypeDeclaration[960-3844]:TypeDeclaration[960-4958]"
    }, {
      "left" : "private static final int MAXIMUM_CACHE_SIZE = 63;",
      "right" : "private static final int MAXIMUM_CACHE_SIZE = 63;",
      "info" : "FieldDeclaration[1091-1140]:FieldDeclaration[1091-1140]"
    }, {
      "left" : "private static final long[] MASKS = new long[MAXIMUM_CACHE_SIZE + 1];",
      "right" : "private static final long[] MASKS = new long[MAXIMUM_CACHE_SIZE + 1];",
      "info" : "FieldDeclaration[1176-1245]:FieldDeclaration[1176-1245]"
    }, {
      "left" : "private final InputStream in;",
      "right" : "private final InputStream in;",
      "info" : "FieldDeclaration[1385-1414]:FieldDeclaration[1385-1414]"
    }, {
      "left" : "private final ByteOrder byteOrder;",
      "right" : "private final ByteOrder byteOrder;",
      "info" : "FieldDeclaration[1419-1453]:FieldDeclaration[1419-1453]"
    }, {
      "left" : "private long bitsCached = 0;",
      "right" : "private long bitsCached = 0;",
      "info" : "FieldDeclaration[1458-1486]:FieldDeclaration[1458-1486]"
    }, {
      "left" : "private int bitsCachedSize = 0;",
      "right" : "private int bitsCachedSize = 0;",
      "info" : "FieldDeclaration[1491-1522]:FieldDeclaration[1491-1522]"
    }, {
      "left" : "public BitInputStream(final InputStream in, final ByteOrder byteOrder)",
      "right" : "public BitInputStream(final InputStream in, final ByteOrder byteOrder)",
      "info" : "MethodDeclaration[1528-1935]:MethodDeclaration[1528-1935]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[1945-2025]:MethodDeclaration[1945-2025]"
    }, {
      "left" : "public void clearBitCache()",
      "right" : "public void clearBitCache()",
      "info" : "MethodDeclaration[2035-2268]:MethodDeclaration[2035-2268]"
    }, {
      "left" : "public long readBits(final int count) throws IOException",
      "right" : "public long readBits(final int count) throws IOException",
      "info" : "MethodDeclaration[2278-3842]:MethodDeclaration[2278-4956]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1036-1042]:Modifier[1036-1042]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1043-1048]:TYPE_DECLARATION_KIND[1043-1048]"
    }, {
      "left" : "BitInputStream",
      "right" : "BitInputStream",
      "info" : "SimpleName[1049-1063]:SimpleName[1049-1063]"
    }, {
      "left" : "Closeable",
      "right" : "Closeable",
      "info" : "SimpleType[1075-1084]:SimpleType[1075-1084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1258-1379]:Block[1258-1379]"
    }, {
      "left" : "for (int i = 1; i <= MAXIMUM_CACHE_SIZE; i++)",
      "right" : "for (int i = 1; i <= MAXIMUM_CACHE_SIZE; i++)",
      "info" : "ForStatement[1268-1373]:ForStatement[1268-1373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1314-1373]:Block[1314-1373]"
    }, {
      "left" : "MASKS[i] = (MASKS[i - 1] << 1) + 1;",
      "right" : "MASKS[i] = (MASKS[i - 1] << 1) + 1;",
      "info" : "ExpressionStatement[1328-1363]:ExpressionStatement[1328-1363]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1799-1805]:Modifier[1799-1805]"
    }, {
      "left" : "BitInputStream",
      "right" : "BitInputStream",
      "info" : "SimpleName[1806-1820]:SimpleName[1806-1820]"
    }, {
      "left" : "final InputStream in",
      "right" : "final InputStream in",
      "info" : "SingleVariableDeclaration[1821-1841]:SingleVariableDeclaration[1821-1841]"
    }, {
      "left" : "final ByteOrder byteOrder",
      "right" : "final ByteOrder byteOrder",
      "info" : "SingleVariableDeclaration[1843-1868]:SingleVariableDeclaration[1843-1868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1870-1935]:Block[1870-1935]"
    }, {
      "left" : "this.in = in;",
      "right" : "this.in = in;",
      "info" : "ExpressionStatement[1880-1893]:ExpressionStatement[1880-1893]"
    }, {
      "left" : "this.byteOrder = byteOrder;",
      "right" : "this.byteOrder = byteOrder;",
      "info" : "ExpressionStatement[1902-1929]:ExpressionStatement[1902-1929]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1945-1954]:MarkerAnnotation[1945-1954]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1959-1965]:Modifier[1959-1965]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1966-1970]:PrimitiveType[1966-1970]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[1971-1976]:SimpleName[1971-1976]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[1986-1997]:SimpleType[1986-1997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1998-2025]:Block[1998-2025]"
    }, {
      "left" : "in.close();",
      "right" : "in.close();",
      "info" : "ExpressionStatement[2008-2019]:ExpressionStatement[2008-2019]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2181-2187]:Modifier[2181-2187]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2188-2192]:PrimitiveType[2188-2192]"
    }, {
      "left" : "clearBitCache",
      "right" : "clearBitCache",
      "info" : "SimpleName[2193-2206]:SimpleName[2193-2206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2209-2268]:Block[2209-2268]"
    }, {
      "left" : "bitsCached = 0;",
      "right" : "bitsCached = 0;",
      "info" : "ExpressionStatement[2219-2234]:ExpressionStatement[2219-2234]"
    }, {
      "left" : "bitsCachedSize = 0;",
      "right" : "bitsCachedSize = 0;",
      "info" : "ExpressionStatement[2243-2262]:ExpressionStatement[2243-2262]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2710-2716]:Modifier[2710-2716]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[2717-2721]:PrimitiveType[2717-2721]"
    }, {
      "left" : "readBits",
      "right" : "readBits",
      "info" : "SimpleName[2722-2730]:SimpleName[2722-2730]"
    }, {
      "left" : "final int count",
      "right" : "final int count",
      "info" : "SingleVariableDeclaration[2731-2746]:SingleVariableDeclaration[2731-2746]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2755-2766]:SimpleType[2755-2766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2767-3842]:Block[2767-4956]"
    }, {
      "left" : "if (count < 0 || count > MAXIMUM_CACHE_SIZE)",
      "right" : "if (count < 0 || count > MAXIMUM_CACHE_SIZE)",
      "info" : "IfStatement[2777-2949]:IfStatement[2777-2949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2822-2949]:Block[2822-2949]"
    }, {
      "left" : "throw new IllegalArgumentException(\"count must not be negative or greater than \" + MAXIMUM_CACHE_SIZE);",
      "right" : "throw new IllegalArgumentException(\"count must not be negative or greater than \" + MAXIMUM_CACHE_SIZE);",
      "info" : "ThrowStatement[2836-2939]:ThrowStatement[2836-2939]"
    }, {
      "left" : "while (bitsCachedSize < count)",
      "right" : "while (bitsCachedSize < count && bitsCachedSize < 57)",
      "info" : "WhileStatement[2958-3382]:WhileStatement[2958-3405]"
    }, {
      "left" : "bitsCachedSize < count",
      "right" : "bitsCachedSize < count",
      "info" : "InfixExpression[2965-2987]:InfixExpression[2965-2987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2989-3382]:Block[3012-3405]"
    }, {
      "left" : "final long nextByte = in.read();",
      "right" : "final long nextByte = in.read();",
      "info" : "VariableDeclarationStatement[3003-3035]:VariableDeclarationStatement[3706-3738]"
    }, {
      "left" : "if (nextByte < 0)",
      "right" : "if (nextByte < 0)",
      "info" : "IfStatement[3048-3114]:IfStatement[3071-3137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3066-3114]:Block[3089-3137]"
    }, {
      "left" : "return nextByte;",
      "right" : "return nextByte;",
      "info" : "ReturnStatement[3084-3100]:ReturnStatement[3107-3123]"
    }, {
      "left" : "if (byteOrder == ByteOrder.LITTLE_ENDIAN)",
      "right" : "if (byteOrder == ByteOrder.LITTLE_ENDIAN)",
      "info" : "IfStatement[3127-3339]:IfStatement[3150-3362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3169-3244]:Block[3192-3267]"
    }, {
      "left" : "bitsCached |= (nextByte << bitsCachedSize);",
      "right" : "bitsCached |= (nextByte << bitsCachedSize);",
      "info" : "ExpressionStatement[3187-3230]:ExpressionStatement[3210-3253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3250-3339]:Block[3273-3362]"
    }, {
      "left" : "bitsCached <<= 8;",
      "right" : "bitsCached <<= 8;",
      "info" : "ExpressionStatement[3268-3285]:ExpressionStatement[3291-3308]"
    }, {
      "left" : "bitsCached |= nextByte;",
      "right" : "bitsCached |= nextByte;",
      "info" : "ExpressionStatement[3302-3325]:ExpressionStatement[3325-3348]"
    }, {
      "left" : "bitsCachedSize += 8;",
      "right" : "bitsCachedSize += 8;",
      "info" : "ExpressionStatement[3352-3372]:ExpressionStatement[3375-3395]"
    }, {
      "left" : "final long bitsOut;",
      "right" : "final long bitsOut;",
      "info" : "VariableDeclarationStatement[3488-3507]:VariableDeclarationStatement[4415-4434]"
    }, {
      "left" : "if (byteOrder == ByteOrder.LITTLE_ENDIAN)",
      "right" : "if (byteOrder == ByteOrder.LITTLE_ENDIAN)",
      "info" : "IfStatement[3520-3775]:IfStatement[4480-4735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3562-3671]:Block[4522-4631]"
    }, {
      "left" : "bitsOut = (bitsCached & MASKS[count]);",
      "right" : "bitsOut = (bitsCached & MASKS[count]);",
      "info" : "ExpressionStatement[3580-3618]:ExpressionStatement[4540-4578]"
    }, {
      "left" : "bitsCached >>>= count;",
      "right" : "bitsCached >>>= count;",
      "info" : "ExpressionStatement[3635-3657]:ExpressionStatement[4595-4617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3677-3775]:Block[4637-4735]"
    }, {
      "left" : "bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];",
      "right" : "bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];",
      "info" : "ExpressionStatement[3695-3761]:ExpressionStatement[4655-4721]"
    }, {
      "left" : "bitsCachedSize -= count;",
      "right" : "bitsCachedSize -= count;",
      "info" : "ExpressionStatement[3788-3812]:ExpressionStatement[4748-4772]"
    }, {
      "left" : "return bitsOut;",
      "right" : "return bitsOut;",
      "info" : "ReturnStatement[3821-3836]:ReturnStatement[4935-4950]"
    } ]
  },
  "interFileMappings" : { }
}