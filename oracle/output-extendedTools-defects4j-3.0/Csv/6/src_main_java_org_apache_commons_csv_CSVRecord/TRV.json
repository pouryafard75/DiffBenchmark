{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "right" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "info" : "FieldDeclaration[1164-1229]:FieldDeclaration[1164-1229]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1235-1283]:FieldDeclaration[1235-1283]"
    }, {
      "left" : "private final String comment;",
      "right" : "private final String comment;",
      "info" : "FieldDeclaration[1289-1363]:FieldDeclaration[1289-1363]"
    }, {
      "left" : "private final Map<String, Integer> mapping;",
      "right" : "private final Map<String, Integer> mapping;",
      "info" : "FieldDeclaration[1369-1457]:FieldDeclaration[1369-1457]"
    }, {
      "left" : "private final long recordNumber;",
      "right" : "private final long recordNumber;",
      "info" : "FieldDeclaration[1463-1525]:FieldDeclaration[1463-1525]"
    }, {
      "left" : "private final String[] values;",
      "right" : "private final String[] values;",
      "info" : "FieldDeclaration[1531-1597]:FieldDeclaration[1531-1597]"
    }, {
      "left" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "right" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "info" : "MethodDeclaration[1603-1912]:MethodDeclaration[1603-1912]"
    }, {
      "left" : "public String get(final Enum<?> e)",
      "right" : "public String get(final Enum<?> e)",
      "info" : "MethodDeclaration[1918-2150]:MethodDeclaration[1918-2150]"
    }, {
      "left" : "public String get(final int i)",
      "right" : "public String get(final int i)",
      "info" : "MethodDeclaration[2156-2380]:MethodDeclaration[2156-2380]"
    }, {
      "left" : "public String get(final String name)",
      "right" : "public String get(final String name)",
      "info" : "MethodDeclaration[2386-3711]:MethodDeclaration[2386-3711]"
    }, {
      "left" : "public String getComment()",
      "right" : "public String getComment()",
      "info" : "MethodDeclaration[3717-3961]:MethodDeclaration[3717-3961]"
    }, {
      "left" : "public long getRecordNumber()",
      "right" : "public long getRecordNumber()",
      "info" : "MethodDeclaration[3967-4163]:MethodDeclaration[3967-4163]"
    }, {
      "left" : "public boolean isConsistent()",
      "right" : "public boolean isConsistent()",
      "info" : "MethodDeclaration[4169-4591]:MethodDeclaration[4169-4591]"
    }, {
      "left" : "public boolean isMapped(final String name)",
      "right" : "public boolean isMapped(final String name)",
      "info" : "MethodDeclaration[4597-4958]:MethodDeclaration[4597-4958]"
    }, {
      "left" : "public boolean isSet(final String name)",
      "right" : "public boolean isSet(final String name)",
      "info" : "MethodDeclaration[4964-5320]:MethodDeclaration[4964-5320]"
    }, {
      "left" : "public Iterator<String> iterator()",
      "right" : "public Iterator<String> iterator()",
      "info" : "MethodDeclaration[5326-5545]:MethodDeclaration[5326-5545]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[5980-6147]:MethodDeclaration[6033-6200]"
    }, {
      "left" : "private List<String> toList()",
      "right" : "private List<String> toList()",
      "info" : "MethodDeclaration[6153-6352]:MethodDeclaration[6206-6405]"
    }, {
      "left" : "public Map<String, String> toMap()",
      "right" : "public Map<String, String> toMap()",
      "info" : "MethodDeclaration[6358-6631]:MethodDeclaration[6411-6684]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[6637-6723]:MethodDeclaration[6690-6776]"
    }, {
      "left" : "String[] values()",
      "right" : "String[] values()",
      "info" : "MethodDeclaration[6729-6777]:MethodDeclaration[6782-6830]"
    } ],
    "mappings" : [
 {
      "left" : "CSVRecord",
      "right" : "CSVRecord",
      "info" : "SimpleName[1603-1612]:SimpleName[1603-1612]"
    }, {
      "left" : "final String[] values",
      "right" : "final String[] values",
      "info" : "SingleVariableDeclaration[1613-1634]:SingleVariableDeclaration[1613-1634]"
    }, {
      "left" : "final Map<String, Integer> mapping",
      "right" : "final Map<String, Integer> mapping",
      "info" : "SingleVariableDeclaration[1636-1670]:SingleVariableDeclaration[1636-1670]"
    }, {
      "left" : "final String comment",
      "right" : "final String comment",
      "info" : "SingleVariableDeclaration[1684-1704]:SingleVariableDeclaration[1684-1704]"
    }, {
      "left" : "final long recordNumber",
      "right" : "final long recordNumber",
      "info" : "SingleVariableDeclaration[1706-1729]:SingleVariableDeclaration[1706-1729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1731-1912]:Block[1731-1912]"
    }, {
      "left" : "this.recordNumber = recordNumber;",
      "right" : "this.recordNumber = recordNumber;",
      "info" : "ExpressionStatement[1741-1774]:ExpressionStatement[1741-1774]"
    }, {
      "left" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "right" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "info" : "ExpressionStatement[1783-1842]:ExpressionStatement[1783-1842]"
    }, {
      "left" : "this.mapping = mapping;",
      "right" : "this.mapping = mapping;",
      "info" : "ExpressionStatement[1851-1874]:ExpressionStatement[1851-1874]"
    }, {
      "left" : "this.comment = comment;",
      "right" : "this.comment = comment;",
      "info" : "ExpressionStatement[1883-1906]:ExpressionStatement[1883-1906]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2074-2080]:Modifier[2074-2080]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2081-2087]:SimpleType[2081-2087]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[2088-2091]:SimpleName[2088-2091]"
    }, {
      "left" : "final Enum<?> e",
      "right" : "final Enum<?> e",
      "info" : "SingleVariableDeclaration[2092-2107]:SingleVariableDeclaration[2092-2107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2109-2150]:Block[2109-2150]"
    }, {
      "left" : "return get(e.toString());",
      "right" : "return get(e.toString());",
      "info" : "ReturnStatement[2119-2144]:ReturnStatement[2119-2144]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2316-2322]:Modifier[2316-2322]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2323-2329]:SimpleType[2323-2329]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[2330-2333]:SimpleName[2330-2333]"
    }, {
      "left" : "final int i",
      "right" : "final int i",
      "info" : "SingleVariableDeclaration[2334-2345]:SingleVariableDeclaration[2334-2345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2347-2380]:Block[2347-2380]"
    }, {
      "left" : "return values[i];",
      "right" : "return values[i];",
      "info" : "ReturnStatement[2357-2374]:ReturnStatement[2357-2374]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2895-2901]:Modifier[2895-2901]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2902-2908]:SimpleType[2902-2908]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[2909-2912]:SimpleName[2909-2912]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[2913-2930]:SingleVariableDeclaration[2913-2930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2932-3711]:Block[2932-3711]"
    }, {
      "left" : "if (mapping == null)",
      "right" : "if (mapping == null)",
      "info" : "IfStatement[2942-3120]:IfStatement[2942-3120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2963-3120]:Block[2963-3120]"
    }, {
      "left" : "throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");",
      "right" : "throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");",
      "info" : "ThrowStatement[2977-3110]:ThrowStatement[2977-3110]"
    }, {
      "left" : "final Integer index = mapping.get(name);",
      "right" : "final Integer index = mapping.get(name);",
      "info" : "VariableDeclarationStatement[3129-3169]:VariableDeclarationStatement[3129-3169]"
    }, {
      "left" : "if (index == null)",
      "right" : "if (index == null)",
      "info" : "IfStatement[3178-3363]:IfStatement[3178-3363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3197-3363]:Block[3197-3363]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\"Mapping for %s not found, expected one of %s\", name,\n                    mapping.keySet()));",
      "right" : "throw new IllegalArgumentException(String.format(\"Mapping for %s not found, expected one of %s\", name,\n                    mapping.keySet()));",
      "info" : "ThrowStatement[3211-3353]:ThrowStatement[3211-3353]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3372-3705]:TryStatement[3372-3705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3376-3432]:Block[3376-3432]"
    }, {
      "left" : "return values[index.intValue()];",
      "right" : "return values[index.intValue()];",
      "info" : "ReturnStatement[3390-3422]:ReturnStatement[3390-3422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3480-3705]:Block[3480-3705]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\n                    \"Index for header '%s' is %d but CSVRecord only has %d values!\", name, index,\n                    Integer.valueOf(values.length)));",
      "right" : "throw new IllegalArgumentException(String.format(\n                    \"Index for header '%s' is %d but CSVRecord only has %d values!\", name, index,\n                    Integer.valueOf(values.length)));",
      "info" : "ThrowStatement[3494-3695]:ThrowStatement[3494-3695]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3903-3909]:Modifier[3903-3909]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3910-3916]:SimpleType[3910-3916]"
    }, {
      "left" : "getComment",
      "right" : "getComment",
      "info" : "SimpleName[3917-3927]:SimpleName[3917-3927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3930-3961]:Block[3930-3961]"
    }, {
      "left" : "return comment;",
      "right" : "return comment;",
      "info" : "ReturnStatement[3940-3955]:ReturnStatement[3940-3955]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4097-4103]:Modifier[4097-4103]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[4104-4108]:PrimitiveType[4104-4108]"
    }, {
      "left" : "getRecordNumber",
      "right" : "getRecordNumber",
      "info" : "SimpleName[4109-4124]:SimpleName[4109-4124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4127-4163]:Block[4127-4163]"
    }, {
      "left" : "return recordNumber;",
      "right" : "return recordNumber;",
      "info" : "ReturnStatement[4137-4157]:ReturnStatement[4137-4157]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4481-4487]:Modifier[4481-4487]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4488-4495]:PrimitiveType[4488-4495]"
    }, {
      "left" : "isConsistent",
      "right" : "isConsistent",
      "info" : "SimpleName[4496-4508]:SimpleName[4496-4508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4511-4591]:Block[4511-4591]"
    }, {
      "left" : "return mapping == null ? true : mapping.size() == values.length;",
      "right" : "return mapping == null ? true : mapping.size() == values.length;",
      "info" : "ReturnStatement[4521-4585]:ReturnStatement[4521-4585]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4840-4846]:Modifier[4840-4846]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4847-4854]:PrimitiveType[4847-4854]"
    }, {
      "left" : "isMapped",
      "right" : "isMapped",
      "info" : "SimpleName[4855-4863]:SimpleName[4855-4863]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[4864-4881]:SingleVariableDeclaration[4864-4881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4883-4958]:Block[4883-4958]"
    }, {
      "left" : "return mapping != null ? mapping.containsKey(name) : false;",
      "right" : "return mapping != null ? mapping.containsKey(name) : false;",
      "info" : "ReturnStatement[4893-4952]:ReturnStatement[4893-4952]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5194-5200]:Modifier[5194-5200]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5201-5208]:PrimitiveType[5201-5208]"
    }, {
      "left" : "isSet",
      "right" : "isSet",
      "info" : "SimpleName[5209-5214]:SimpleName[5209-5214]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[5215-5232]:SingleVariableDeclaration[5215-5232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5234-5320]:Block[5234-5320]"
    }, {
      "left" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "right" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "info" : "ReturnStatement[5244-5314]:ReturnStatement[5244-5314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5467-5473]:Modifier[5467-5473]"
    }, {
      "left" : "Iterator<String>",
      "right" : "Iterator<String>",
      "info" : "ParameterizedType[5474-5490]:ParameterizedType[5474-5490]"
    }, {
      "left" : "iterator",
      "right" : "iterator",
      "info" : "SimpleName[5491-5499]:SimpleName[5491-5499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5502-5545]:Block[5502-5545]"
    }, {
      "left" : "return toList().iterator();",
      "right" : "return toList().iterator();",
      "info" : "ReturnStatement[5512-5539]:ReturnStatement[5512-5539]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6092-6098]:Modifier[6145-6151]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6099-6102]:PrimitiveType[6152-6155]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[6103-6107]:SimpleName[6156-6160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6110-6147]:Block[6163-6200]"
    }, {
      "left" : "return values.length;",
      "right" : "return values.length;",
      "info" : "ReturnStatement[6120-6141]:ReturnStatement[6173-6194]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6277-6284]:Modifier[6330-6337]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[6285-6297]:ParameterizedType[6338-6350]"
    }, {
      "left" : "toList",
      "right" : "toList",
      "info" : "SimpleName[6298-6304]:SimpleName[6351-6357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6307-6352]:Block[6360-6405]"
    }, {
      "left" : "return Arrays.asList(values);",
      "right" : "return Arrays.asList(values);",
      "info" : "ReturnStatement[6317-6346]:ReturnStatement[6370-6399]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6523-6529]:Modifier[6576-6582]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[6530-6549]:ParameterizedType[6583-6602]"
    }, {
      "left" : "toMap",
      "right" : "toMap",
      "info" : "SimpleName[6550-6555]:SimpleName[6603-6608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6558-6631]:Block[6611-6684]"
    }, {
      "left" : "return putIn(new HashMap<String, String>(values.length));",
      "right" : "return putIn(new HashMap<String, String>(values.length));",
      "info" : "ReturnStatement[6568-6625]:ReturnStatement[6621-6678]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6637-6646]:MarkerAnnotation[6690-6699]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6651-6657]:Modifier[6704-6710]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6658-6664]:SimpleType[6711-6717]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[6665-6673]:SimpleName[6718-6726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6676-6723]:Block[6729-6776]"
    }, {
      "left" : "return Arrays.toString(values);",
      "right" : "return Arrays.toString(values);",
      "info" : "ReturnStatement[6686-6717]:ReturnStatement[6739-6770]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[6729-6737]:ArrayType[6782-6790]"
    }, {
      "left" : "values",
      "right" : "values",
      "info" : "SimpleName[6738-6744]:SimpleName[6791-6797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6747-6777]:Block[6800-6830]"
    }, {
      "left" : "return values;",
      "right" : "return values;",
      "info" : "ReturnStatement[6757-6771]:ReturnStatement[6810-6824]"
    } ]
  },
  "interFileMappings" : { }
}