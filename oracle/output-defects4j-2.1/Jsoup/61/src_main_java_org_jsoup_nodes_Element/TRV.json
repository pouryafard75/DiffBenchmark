{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private Tag tag;",
      "right" : "private Tag tag;",
      "info" : "FieldDeclaration[1079-1095]:FieldDeclaration[1079-1095]"
    }, {
      "left" : "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
      "right" : "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
      "info" : "FieldDeclaration[1101-1167]:FieldDeclaration[1101-1167]"
    }, {
      "left" : "public Element(String tag)",
      "right" : "public Element(String tag)",
      "info" : "MethodDeclaration[1173-1345]:MethodDeclaration[1173-1345]"
    }, {
      "left" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "right" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[1351-1812]:MethodDeclaration[1351-1812]"
    }, {
      "left" : "public Element(Tag tag, String baseUri)",
      "right" : "public Element(Tag tag, String baseUri)",
      "info" : "MethodDeclaration[1822-2212]:MethodDeclaration[1822-2212]"
    }, {
      "left" : "public String nodeName()",
      "right" : "public String nodeName()",
      "info" : "MethodDeclaration[2218-2294]:MethodDeclaration[2218-2294]"
    }, {
      "left" : "public String tagName()",
      "right" : "public String tagName()",
      "info" : "MethodDeclaration[2300-2479]:MethodDeclaration[2300-2479]"
    }, {
      "left" : "public Element tagName(String tagName)",
      "right" : "public Element tagName(String tagName)",
      "info" : "MethodDeclaration[2485-2971]:MethodDeclaration[2485-2971]"
    }, {
      "left" : "public Tag tag()",
      "right" : "public Tag tag()",
      "info" : "MethodDeclaration[2977-3112]:MethodDeclaration[2977-3112]"
    }, {
      "left" : "public boolean isBlock()",
      "right" : "public boolean isBlock()",
      "info" : "MethodDeclaration[3122-3402]:MethodDeclaration[3122-3402]"
    }, {
      "left" : "public String id()",
      "right" : "public String id()",
      "info" : "MethodDeclaration[3408-3630]:MethodDeclaration[3408-3630]"
    }, {
      "left" : "public Element attr(String attributeKey, String attributeValue)",
      "right" : "public Element attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[3636-3998]:MethodDeclaration[3636-3998]"
    }, {
      "left" : "public Element attr(String attributeKey, boolean attributeValue)",
      "right" : "public Element attr(String attributeKey, boolean attributeValue)",
      "info" : "MethodDeclaration[4008-4584]:MethodDeclaration[4008-4584]"
    }, {
      "left" : "public Map<String, String> dataset()",
      "right" : "public Map<String, String> dataset()",
      "info" : "MethodDeclaration[4590-5360]:MethodDeclaration[4590-5360]"
    }, {
      "left" : "public final Element parent()",
      "right" : "public final Element parent()",
      "info" : "MethodDeclaration[5366-5454]:MethodDeclaration[5366-5454]"
    }, {
      "left" : "public Elements parents()",
      "right" : "public Elements parents()",
      "info" : "MethodDeclaration[5460-5754]:MethodDeclaration[5460-5754]"
    }, {
      "left" : "private static void accumulateParents(Element el, Elements parents)",
      "right" : "private static void accumulateParents(Element el, Elements parents)",
      "info" : "MethodDeclaration[5760-6031]:MethodDeclaration[5760-6031]"
    }, {
      "left" : "public Element child(int index)",
      "right" : "public Element child(int index)",
      "info" : "MethodDeclaration[6037-6629]:MethodDeclaration[6037-6629]"
    }, {
      "left" : "public Elements children()",
      "right" : "public Elements children()",
      "info" : "MethodDeclaration[6635-7316]:MethodDeclaration[6635-7316]"
    }, {
      "left" : "public List<TextNode> textNodes()",
      "right" : "public List<TextNode> textNodes()",
      "info" : "MethodDeclaration[7322-8510]:MethodDeclaration[7322-8510]"
    }, {
      "left" : "public List<DataNode> dataNodes()",
      "right" : "public List<DataNode> dataNodes()",
      "info" : "MethodDeclaration[8516-9159]:MethodDeclaration[8516-9159]"
    }, {
      "left" : "public Elements select(String cssQuery)",
      "right" : "public Elements select(String cssQuery)",
      "info" : "MethodDeclaration[9165-10220]:MethodDeclaration[9165-10220]"
    }, {
      "left" : "public boolean is(String cssQuery)",
      "right" : "public boolean is(String cssQuery)",
      "info" : "MethodDeclaration[10226-10508]:MethodDeclaration[10226-10508]"
    }, {
      "left" : "public boolean is(Evaluator evaluator)",
      "right" : "public boolean is(Evaluator evaluator)",
      "info" : "MethodDeclaration[10514-10780]:MethodDeclaration[10514-10780]"
    }, {
      "left" : "public Element appendChild(Node child)",
      "right" : "public Element appendChild(Node child)",
      "info" : "MethodDeclaration[10790-11301]:MethodDeclaration[10790-11301]"
    }, {
      "left" : "public Element prependChild(Node child)",
      "right" : "public Element prependChild(Node child)",
      "info" : "MethodDeclaration[11307-11643]:MethodDeclaration[11307-11643]"
    }, {
      "left" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "right" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "info" : "MethodDeclaration[11650-12688]:MethodDeclaration[11650-12688]"
    }, {
      "left" : "public Element appendElement(String tagName)",
      "right" : "public Element appendElement(String tagName)",
      "info" : "MethodDeclaration[12698-13181]:MethodDeclaration[12698-13181]"
    }, {
      "left" : "public Element prependElement(String tagName)",
      "right" : "public Element prependElement(String tagName)",
      "info" : "MethodDeclaration[13191-13678]:MethodDeclaration[13191-13678]"
    }, {
      "left" : "public Element appendText(String text)",
      "right" : "public Element appendText(String text)",
      "info" : "MethodDeclaration[13688-14023]:MethodDeclaration[13688-14023]"
    }, {
      "left" : "public Element prependText(String text)",
      "right" : "public Element prependText(String text)",
      "info" : "MethodDeclaration[14033-14371]:MethodDeclaration[14033-14371]"
    }, {
      "left" : "public Element append(String html)",
      "right" : "public Element append(String html)",
      "info" : "MethodDeclaration[14381-14879]:MethodDeclaration[14381-14879]"
    }, {
      "left" : "public Element prepend(String html)",
      "right" : "public Element prepend(String html)",
      "info" : "MethodDeclaration[14889-15415]:MethodDeclaration[14889-15415]"
    }, {
      "left" : "public Element before(String html)",
      "right" : "public Element before(String html)",
      "info" : "MethodDeclaration[15421-15757]:MethodDeclaration[15421-15757]"
    }, {
      "left" : "public Element before(Node node)",
      "right" : "public Element before(Node node)",
      "info" : "MethodDeclaration[15763-16080]:MethodDeclaration[15763-16080]"
    }, {
      "left" : "public Element after(String html)",
      "right" : "public Element after(String html)",
      "info" : "MethodDeclaration[16086-16419]:MethodDeclaration[16086-16419]"
    }, {
      "left" : "public Element after(Node node)",
      "right" : "public Element after(Node node)",
      "info" : "MethodDeclaration[16425-16739]:MethodDeclaration[16425-16739]"
    }, {
      "left" : "public Element empty()",
      "right" : "public Element empty()",
      "info" : "MethodDeclaration[16745-16947]:MethodDeclaration[16745-16947]"
    }, {
      "left" : "public Element wrap(String html)",
      "right" : "public Element wrap(String html)",
      "info" : "MethodDeclaration[16953-17284]:MethodDeclaration[16953-17284]"
    }, {
      "left" : "public String cssSelector()",
      "right" : "public String cssSelector()",
      "info" : "MethodDeclaration[17290-18571]:MethodDeclaration[17290-18571]"
    }, {
      "left" : "public Elements siblingElements()",
      "right" : "public Elements siblingElements()",
      "info" : "MethodDeclaration[18577-19158]:MethodDeclaration[18577-19158]"
    }, {
      "left" : "public Element nextElementSibling()",
      "right" : "public Element nextElementSibling()",
      "info" : "MethodDeclaration[19164-19933]:MethodDeclaration[19164-19933]"
    }, {
      "left" : "public Element previousElementSibling()",
      "right" : "public Element previousElementSibling()",
      "info" : "MethodDeclaration[19939-20459]:MethodDeclaration[19939-20459]"
    }, {
      "left" : "public Element firstElementSibling()",
      "right" : "public Element firstElementSibling()",
      "info" : "MethodDeclaration[20465-20840]:MethodDeclaration[20465-20840]"
    }, {
      "left" : "public Integer elementSiblingIndex()",
      "right" : "public Integer elementSiblingIndex()",
      "info" : "MethodDeclaration[20850-21184]:MethodDeclaration[20850-21184]"
    }, {
      "left" : "public Element lastElementSibling()",
      "right" : "public Element lastElementSibling()",
      "info" : "MethodDeclaration[21190-21525]:MethodDeclaration[21190-21525]"
    }, {
      "left" : "private static <E extends Element> Integer indexInList(Element search, List<E> elements)",
      "right" : "private static <E extends Element> Integer indexInList(Element search, List<E> elements)",
      "info" : "MethodDeclaration[21535-21887]:MethodDeclaration[21535-21887]"
    }, {
      "left" : "public Elements getElementsByTag(String tagName)",
      "right" : "public Elements getElementsByTag(String tagName)",
      "info" : "MethodDeclaration[21918-22431]:MethodDeclaration[21918-22431]"
    }, {
      "left" : "public Element getElementById(String id)",
      "right" : "public Element getElementById(String id)",
      "info" : "MethodDeclaration[22437-23219]:MethodDeclaration[22437-23219]"
    }, {
      "left" : "public Elements getElementsByClass(String className)",
      "right" : "public Elements getElementsByClass(String className)",
      "info" : "MethodDeclaration[23225-23911]:MethodDeclaration[23225-23911]"
    }, {
      "left" : "public Elements getElementsByAttribute(String key)",
      "right" : "public Elements getElementsByAttribute(String key)",
      "info" : "MethodDeclaration[23917-24322]:MethodDeclaration[23917-24322]"
    }, {
      "left" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "right" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "info" : "MethodDeclaration[24328-24899]:MethodDeclaration[24328-24899]"
    }, {
      "left" : "public Elements getElementsByAttributeValue(String key, String value)",
      "right" : "public Elements getElementsByAttributeValue(String key, String value)",
      "info" : "MethodDeclaration[24905-25342]:MethodDeclaration[24905-25342]"
    }, {
      "left" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "right" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "info" : "MethodDeclaration[25348-25800]:MethodDeclaration[25348-25800]"
    }, {
      "left" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "right" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "info" : "MethodDeclaration[25806-26284]:MethodDeclaration[25806-26284]"
    }, {
      "left" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "right" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "info" : "MethodDeclaration[26290-26762]:MethodDeclaration[26290-26762]"
    }, {
      "left" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "right" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "info" : "MethodDeclaration[26768-27233]:MethodDeclaration[26768-27233]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "info" : "MethodDeclaration[27243-27748]:MethodDeclaration[27243-27748]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "info" : "MethodDeclaration[27758-28604]:MethodDeclaration[27758-28604]"
    }, {
      "left" : "public Elements getElementsByIndexLessThan(int index)",
      "right" : "public Elements getElementsByIndexLessThan(int index)",
      "info" : "MethodDeclaration[28614-28915]:MethodDeclaration[28614-28915]"
    }, {
      "left" : "public Elements getElementsByIndexGreaterThan(int index)",
      "right" : "public Elements getElementsByIndexGreaterThan(int index)",
      "info" : "MethodDeclaration[28925-29238]:MethodDeclaration[28925-29238]"
    }, {
      "left" : "public Elements getElementsByIndexEquals(int index)",
      "right" : "public Elements getElementsByIndexEquals(int index)",
      "info" : "MethodDeclaration[29248-29543]:MethodDeclaration[29248-29543]"
    }, {
      "left" : "public Elements getElementsContainingText(String searchText)",
      "right" : "public Elements getElementsContainingText(String searchText)",
      "info" : "MethodDeclaration[29553-30040]:MethodDeclaration[29553-30040]"
    }, {
      "left" : "public Elements getElementsContainingOwnText(String searchText)",
      "right" : "public Elements getElementsContainingOwnText(String searchText)",
      "info" : "MethodDeclaration[30050-30561]:MethodDeclaration[30050-30561]"
    }, {
      "left" : "public Elements getElementsMatchingText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingText(Pattern pattern)",
      "info" : "MethodDeclaration[30571-30952]:MethodDeclaration[30571-30952]"
    }, {
      "left" : "public Elements getElementsMatchingText(String regex)",
      "right" : "public Elements getElementsMatchingText(String regex)",
      "info" : "MethodDeclaration[30962-31709]:MethodDeclaration[30962-31709]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "info" : "MethodDeclaration[31719-32113]:MethodDeclaration[31719-32113]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(String regex)",
      "right" : "public Elements getElementsMatchingOwnText(String regex)",
      "info" : "MethodDeclaration[32123-32879]:MethodDeclaration[32123-32879]"
    }, {
      "left" : "public Elements getAllElements()",
      "right" : "public Elements getAllElements()",
      "info" : "MethodDeclaration[32889-33138]:MethodDeclaration[32889-33138]"
    }, {
      "left" : "public String text()",
      "right" : "public String text()",
      "info" : "MethodDeclaration[33144-34373]:MethodDeclaration[33144-34373]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[33651-34232]:MethodDeclaration[33651-34232]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[34246-34300]:MethodDeclaration[34246-34300]"
    }, {
      "left" : "public String ownText()",
      "right" : "public String ownText()",
      "info" : "MethodDeclaration[34379-35063]:MethodDeclaration[34379-35063]"
    }, {
      "left" : "private void ownText(StringBuilder accum)",
      "right" : "private void ownText(StringBuilder accum)",
      "info" : "MethodDeclaration[35069-35449]:MethodDeclaration[35069-35449]"
    }, {
      "left" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "right" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "info" : "MethodDeclaration[35455-35791]:MethodDeclaration[35455-35791]"
    }, {
      "left" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "right" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "info" : "MethodDeclaration[35797-36003]:MethodDeclaration[35797-36003]"
    }, {
      "left" : "static boolean preserveWhitespace(Node node)",
      "right" : "static boolean preserveWhitespace(Node node)",
      "info" : "MethodDeclaration[36009-36439]:MethodDeclaration[36009-36439]"
    }, {
      "left" : "public Element text(String text)",
      "right" : "public Element text(String text)",
      "info" : "MethodDeclaration[36445-36817]:MethodDeclaration[36445-36817]"
    }, {
      "left" : "public boolean hasText()",
      "right" : "public boolean hasText()",
      "info" : "MethodDeclaration[36823-37428]:MethodDeclaration[36823-37428]"
    }, {
      "left" : "public String data()",
      "right" : "public String data()",
      "info" : "MethodDeclaration[37434-38311]:MethodDeclaration[37434-38311]"
    }, {
      "left" : "public String className()",
      "right" : "public String className()",
      "info" : "MethodDeclaration[38320-38722]:MethodDeclaration[38320-38722]"
    }, {
      "left" : "public Set<String> classNames()",
      "right" : "public Set<String> classNames()",
      "info" : "MethodDeclaration[38728-39416]:MethodDeclaration[38728-39416]"
    }, {
      "left" : "public Element classNames(Set<String> classNames)",
      "right" : "public Element classNames(Set<String> classNames)",
      "info" : "MethodDeclaration[39422-39775]:MethodDeclaration[39422-39775]"
    }, {
      "left" : "public Element addClass(String className)",
      "right" : "public Element addClass(String className)",
      "info" : "MethodDeclaration[41510-41871]:MethodDeclaration[41520-41881]"
    }, {
      "left" : "public Element removeClass(String className)",
      "right" : "public Element removeClass(String className)",
      "info" : "MethodDeclaration[41877-42252]:MethodDeclaration[41887-42262]"
    }, {
      "left" : "public Element toggleClass(String className)",
      "right" : "public Element toggleClass(String className)",
      "info" : "MethodDeclaration[42258-42766]:MethodDeclaration[42268-42776]"
    }, {
      "left" : "public String val()",
      "right" : "public String val()",
      "info" : "MethodDeclaration[42776-43072]:MethodDeclaration[42786-43082]"
    }, {
      "left" : "public Element val(String value)",
      "right" : "public Element val(String value)",
      "info" : "MethodDeclaration[43082-43412]:MethodDeclaration[43092-43422]"
    }, {
      "left" : "void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException",
      "right" : "void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException",
      "info" : "MethodDeclaration[43418-44422]:MethodDeclaration[43428-44432]"
    }, {
      "left" : "void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException",
      "right" : "void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException",
      "info" : "MethodDeclaration[44425-44940]:MethodDeclaration[44435-44950]"
    }, {
      "left" : "public String html()",
      "right" : "public String html()",
      "info" : "MethodDeclaration[44946-45425]:MethodDeclaration[44956-45435]"
    }, {
      "left" : "private void html(StringBuilder accum)",
      "right" : "private void html(StringBuilder accum)",
      "info" : "MethodDeclaration[45431-45549]:MethodDeclaration[45441-45559]"
    }, {
      "left" : "public <T extends Appendable> T html(T appendable)",
      "right" : "public <T extends Appendable> T html(T appendable)",
      "info" : "MethodDeclaration[45555-45769]:MethodDeclaration[45565-45779]"
    }, {
      "left" : "public Element html(String html)",
      "right" : "public Element html(String html)",
      "info" : "MethodDeclaration[45779-46080]:MethodDeclaration[45789-46090]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[46083-46143]:MethodDeclaration[46093-46153]"
    }, {
      "left" : "public Element clone()",
      "right" : "public Element clone()",
      "info" : "MethodDeclaration[46149-46233]:MethodDeclaration[46159-46243]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1284-1345]:Block[1284-1345]"
    }, {
      "left" : "this(Tag.valueOf(tag), \"\", new Attributes());",
      "right" : "this(Tag.valueOf(tag), \"\", new Attributes());",
      "info" : "ConstructorInvocation[1294-1339]:ConstructorInvocation[1294-1339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1701-1812]:Block[1701-1812]"
    }, {
      "left" : "super(baseUri, attributes);",
      "right" : "super(baseUri, attributes);",
      "info" : "SuperConstructorInvocation[1711-1738]:SuperConstructorInvocation[1711-1738]"
    }, {
      "left" : "Validate.notNull(tag);",
      "right" : "Validate.notNull(tag);",
      "info" : "ExpressionStatement[1756-1778]:ExpressionStatement[1756-1778]"
    }, {
      "left" : "this.tag = tag;",
      "right" : "this.tag = tag;",
      "info" : "ExpressionStatement[1791-1806]:ExpressionStatement[1791-1806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2159-2212]:Block[2159-2212]"
    }, {
      "left" : "this(tag, baseUri, new Attributes());",
      "right" : "this(tag, baseUri, new Attributes());",
      "info" : "ConstructorInvocation[2169-2206]:ConstructorInvocation[2169-2206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2257-2294]:Block[2257-2294]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[2267-2288]:ReturnStatement[2267-2288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2442-2479]:Block[2442-2479]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[2452-2473]:ReturnStatement[2452-2473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2777-2971]:Block[2777-2971]"
    }, {
      "left" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "right" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "info" : "ExpressionStatement[2787-2845]:ExpressionStatement[2787-2845]"
    }, {
      "left" : "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
      "right" : "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
      "info" : "ExpressionStatement[2854-2909]:ExpressionStatement[2854-2909]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2953-2965]:ReturnStatement[2953-2965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3085-3112]:Block[3085-3112]"
    }, {
      "left" : "return tag;",
      "right" : "return tag;",
      "info" : "ReturnStatement[3095-3106]:ReturnStatement[3095-3106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3365-3402]:Block[3365-3402]"
    }, {
      "left" : "return tag.isBlock();",
      "right" : "return tag.isBlock();",
      "info" : "ReturnStatement[3375-3396]:ReturnStatement[3375-3396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3576-3630]:Block[3576-3630]"
    }, {
      "left" : "return attributes.getIgnoreCase(\"id\");",
      "right" : "return attributes.getIgnoreCase(\"id\");",
      "info" : "ReturnStatement[3586-3624]:ReturnStatement[3586-3624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3920-3998]:Block[3920-3998]"
    }, {
      "left" : "super.attr(attributeKey, attributeValue);",
      "right" : "super.attr(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[3930-3971]:ExpressionStatement[3930-3971]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3980-3992]:ReturnStatement[3980-3992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4502-4584]:Block[4502-4584]"
    }, {
      "left" : "attributes.put(attributeKey, attributeValue);",
      "right" : "attributes.put(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[4512-4557]:ExpressionStatement[4512-4557]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4566-4578]:ReturnStatement[4566-4578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5316-5360]:Block[5316-5360]"
    }, {
      "left" : "return attributes.dataset();",
      "right" : "return attributes.dataset();",
      "info" : "ReturnStatement[5326-5354]:ReturnStatement[5326-5354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5410-5454]:Block[5410-5454]"
    }, {
      "left" : "return (Element) parentNode;",
      "right" : "return (Element) parentNode;",
      "info" : "ReturnStatement[5420-5448]:ReturnStatement[5420-5448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5638-5754]:Block[5638-5754]"
    }, {
      "left" : "Elements parents = new Elements();",
      "right" : "Elements parents = new Elements();",
      "info" : "VariableDeclarationStatement[5648-5682]:VariableDeclarationStatement[5648-5682]"
    }, {
      "left" : "accumulateParents(this, parents);",
      "right" : "accumulateParents(this, parents);",
      "info" : "ExpressionStatement[5691-5724]:ExpressionStatement[5691-5724]"
    }, {
      "left" : "return parents;",
      "right" : "return parents;",
      "info" : "ReturnStatement[5733-5748]:ReturnStatement[5733-5748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5828-6031]:Block[5828-6031]"
    }, {
      "left" : "Element parent = el.parent();",
      "right" : "Element parent = el.parent();",
      "info" : "VariableDeclarationStatement[5838-5867]:VariableDeclarationStatement[5838-5867]"
    }, {
      "left" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "right" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "info" : "IfStatement[5876-6025]:IfStatement[5876-6025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5933-6025]:Block[5933-6025]"
    }, {
      "left" : "parents.add(parent);",
      "right" : "parents.add(parent);",
      "info" : "ExpressionStatement[5947-5967]:ExpressionStatement[5947-5967]"
    }, {
      "left" : "accumulateParents(parent, parents);",
      "right" : "accumulateParents(parent, parents);",
      "info" : "ExpressionStatement[5980-6015]:ExpressionStatement[5980-6015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6584-6629]:Block[6584-6629]"
    }, {
      "left" : "return children().get(index);",
      "right" : "return children().get(index);",
      "info" : "ReturnStatement[6594-6623]:ReturnStatement[6594-6623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6946-7316]:Block[6946-7316]"
    }, {
      "left" : "List<Element> elements = new ArrayList<Element>(childNodes.size());",
      "right" : "List<Element> elements = new ArrayList<Element>(childNodes.size());",
      "info" : "VariableDeclarationStatement[7068-7135]:VariableDeclarationStatement[7068-7135]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[7144-7271]:EnhancedForStatement[7144-7271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7173-7271]:Block[7173-7271]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[7187-7261]:IfStatement[7187-7261]"
    }, {
      "left" : "elements.add((Element) node);",
      "right" : "elements.add((Element) node);",
      "info" : "ExpressionStatement[7232-7261]:ExpressionStatement[7232-7261]"
    }, {
      "left" : "return new Elements(elements);",
      "right" : "return new Elements(elements);",
      "info" : "ReturnStatement[7280-7310]:ReturnStatement[7280-7310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8246-8510]:Block[8246-8510]"
    }, {
      "left" : "List<TextNode> textNodes = new ArrayList<TextNode>();",
      "right" : "List<TextNode> textNodes = new ArrayList<TextNode>();",
      "info" : "VariableDeclarationStatement[8256-8309]:VariableDeclarationStatement[8256-8309]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[8318-8448]:EnhancedForStatement[8318-8448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8347-8448]:Block[8347-8448]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[8361-8438]:IfStatement[8361-8438]"
    }, {
      "left" : "textNodes.add((TextNode) node);",
      "right" : "textNodes.add((TextNode) node);",
      "info" : "ExpressionStatement[8407-8438]:ExpressionStatement[8407-8438]"
    }, {
      "left" : "return Collections.unmodifiableList(textNodes);",
      "right" : "return Collections.unmodifiableList(textNodes);",
      "info" : "ReturnStatement[8457-8504]:ReturnStatement[8457-8504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8895-9159]:Block[8895-9159]"
    }, {
      "left" : "List<DataNode> dataNodes = new ArrayList<DataNode>();",
      "right" : "List<DataNode> dataNodes = new ArrayList<DataNode>();",
      "info" : "VariableDeclarationStatement[8905-8958]:VariableDeclarationStatement[8905-8958]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[8967-9097]:EnhancedForStatement[8967-9097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8996-9097]:Block[8996-9097]"
    }, {
      "left" : "if (node instanceof DataNode)",
      "right" : "if (node instanceof DataNode)",
      "info" : "IfStatement[9010-9087]:IfStatement[9010-9087]"
    }, {
      "left" : "dataNodes.add((DataNode) node);",
      "right" : "dataNodes.add((DataNode) node);",
      "info" : "ExpressionStatement[9056-9087]:ExpressionStatement[9056-9087]"
    }, {
      "left" : "return Collections.unmodifiableList(dataNodes);",
      "right" : "return Collections.unmodifiableList(dataNodes);",
      "info" : "ReturnStatement[9106-9153]:ReturnStatement[9106-9153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10165-10220]:Block[10165-10220]"
    }, {
      "left" : "return Selector.select(cssQuery, this);",
      "right" : "return Selector.select(cssQuery, this);",
      "info" : "ReturnStatement[10175-10214]:ReturnStatement[10175-10214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10453-10508]:Block[10453-10508]"
    }, {
      "left" : "return is(QueryParser.parse(cssQuery));",
      "right" : "return is(QueryParser.parse(cssQuery));",
      "info" : "ReturnStatement[10463-10502]:ReturnStatement[10463-10502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10711-10780]:Block[10711-10780]"
    }, {
      "left" : "return evaluator.matches((Element)this.root(), this);",
      "right" : "return evaluator.matches((Element)this.root(), this);",
      "info" : "ReturnStatement[10721-10774]:ReturnStatement[10721-10774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11011-11301]:Block[11011-11301]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[11021-11045]:ExpressionStatement[11021-11045]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[11140-11161]:ExpressionStatement[11140-11161]"
    }, {
      "left" : "ensureChildNodes();",
      "right" : "ensureChildNodes();",
      "info" : "ExpressionStatement[11170-11189]:ExpressionStatement[11170-11189]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[11198-11220]:ExpressionStatement[11198-11220]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size() - 1);",
      "right" : "child.setSiblingIndex(childNodes.size() - 1);",
      "info" : "ExpressionStatement[11229-11274]:ExpressionStatement[11229-11274]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[11283-11295]:ReturnStatement[11283-11295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11542-11643]:Block[11542-11643]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[11552-11576]:ExpressionStatement[11552-11576]"
    }, {
      "left" : "addChildren(0, child);",
      "right" : "addChildren(0, child);",
      "info" : "ExpressionStatement[11594-11616]:ExpressionStatement[11594-11616]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[11625-11637]:ReturnStatement[11625-11637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12198-12688]:Block[12198-12688]"
    }, {
      "left" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "right" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "info" : "ExpressionStatement[12208-12291]:ExpressionStatement[12208-12291]"
    }, {
      "left" : "int currentSize = childNodeSize();",
      "right" : "int currentSize = childNodeSize();",
      "info" : "VariableDeclarationStatement[12300-12334]:VariableDeclarationStatement[12300-12334]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[12343-12382]:IfStatement[12343-12382]"
    }, {
      "left" : "index += currentSize +1;",
      "right" : "index += currentSize +1;",
      "info" : "ExpressionStatement[12358-12382]:ExpressionStatement[12358-12382]"
    }, {
      "left" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "right" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "info" : "ExpressionStatement[12406-12492]:ExpressionStatement[12406-12492]"
    }, {
      "left" : "ArrayList<Node> nodes = new ArrayList<Node>(children);",
      "right" : "ArrayList<Node> nodes = new ArrayList<Node>(children);",
      "info" : "VariableDeclarationStatement[12502-12556]:VariableDeclarationStatement[12502-12556]"
    }, {
      "left" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "right" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "info" : "VariableDeclarationStatement[12565-12622]:VariableDeclarationStatement[12565-12622]"
    }, {
      "left" : "addChildren(index, nodeArray);",
      "right" : "addChildren(index, nodeArray);",
      "info" : "ExpressionStatement[12631-12661]:ExpressionStatement[12631-12661]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12670-12682]:ReturnStatement[12670-12682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13054-13181]:Block[13054-13181]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[13064-13125]:VariableDeclarationStatement[13064-13125]"
    }, {
      "left" : "appendChild(child);",
      "right" : "appendChild(child);",
      "info" : "ExpressionStatement[13134-13153]:ExpressionStatement[13134-13153]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[13162-13175]:ReturnStatement[13162-13175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13550-13678]:Block[13550-13678]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[13560-13621]:VariableDeclarationStatement[13560-13621]"
    }, {
      "left" : "prependChild(child);",
      "right" : "prependChild(child);",
      "info" : "ExpressionStatement[13630-13650]:ExpressionStatement[13630-13650]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[13659-13672]:ReturnStatement[13659-13672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13881-14023]:Block[13881-14023]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[13891-13914]:ExpressionStatement[13891-13914]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[13923-13969]:VariableDeclarationStatement[13923-13969]"
    }, {
      "left" : "appendChild(node);",
      "right" : "appendChild(node);",
      "info" : "ExpressionStatement[13978-13996]:ExpressionStatement[13978-13996]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14005-14017]:ReturnStatement[14005-14017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14228-14371]:Block[14228-14371]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[14238-14261]:ExpressionStatement[14238-14261]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[14270-14316]:VariableDeclarationStatement[14270-14316]"
    }, {
      "left" : "prependChild(node);",
      "right" : "prependChild(node);",
      "info" : "ExpressionStatement[14325-14344]:ExpressionStatement[14325-14344]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14353-14365]:ReturnStatement[14353-14365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14686-14879]:Block[14686-14879]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[14696-14719]:ExpressionStatement[14696-14719]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[14729-14792]:VariableDeclarationStatement[14729-14792]"
    }, {
      "left" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[14801-14852]:ExpressionStatement[14801-14852]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14861-14873]:ReturnStatement[14861-14873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15211-15415]:Block[15211-15415]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[15221-15244]:ExpressionStatement[15221-15244]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[15262-15325]:VariableDeclarationStatement[15262-15325]"
    }, {
      "left" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[15334-15388]:ExpressionStatement[15334-15388]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15397-15409]:ReturnStatement[15397-15409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15705-15757]:Block[15705-15757]"
    }, {
      "left" : "return (Element) super.before(html);",
      "right" : "return (Element) super.before(html);",
      "info" : "ReturnStatement[15715-15751]:ReturnStatement[15715-15751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16028-16080]:Block[16028-16080]"
    }, {
      "left" : "return (Element) super.before(node);",
      "right" : "return (Element) super.before(node);",
      "info" : "ReturnStatement[16038-16074]:ReturnStatement[16038-16074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16368-16419]:Block[16368-16419]"
    }, {
      "left" : "return (Element) super.after(html);",
      "right" : "return (Element) super.after(html);",
      "info" : "ReturnStatement[16378-16413]:ReturnStatement[16378-16413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16688-16739]:Block[16688-16739]"
    }, {
      "left" : "return (Element) super.after(node);",
      "right" : "return (Element) super.after(node);",
      "info" : "ReturnStatement[16698-16733]:ReturnStatement[16698-16733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16891-16947]:Block[16891-16947]"
    }, {
      "left" : "childNodes.clear();",
      "right" : "childNodes.clear();",
      "info" : "ExpressionStatement[16901-16920]:ExpressionStatement[16901-16920]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16929-16941]:ReturnStatement[16929-16941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17234-17284]:Block[17234-17284]"
    }, {
      "left" : "return (Element) super.wrap(html);",
      "right" : "return (Element) super.wrap(html);",
      "info" : "ReturnStatement[17244-17278]:ReturnStatement[17244-17278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17732-18571]:Block[17732-18571]"
    }, {
      "left" : "if (id().length() > 0)",
      "right" : "if (id().length() > 0)",
      "info" : "IfStatement[17742-17795]:IfStatement[17742-17795]"
    }, {
      "left" : "return \"#\" + id();",
      "right" : "return \"#\" + id();",
      "info" : "ReturnStatement[17777-17795]:ReturnStatement[17777-17795]"
    }, {
      "left" : "String tagName = tagName().replace(':', '|');",
      "right" : "String tagName = tagName().replace(':', '|');",
      "info" : "VariableDeclarationStatement[17879-17924]:VariableDeclarationStatement[17879-17924]"
    }, {
      "left" : "StringBuilder selector = new StringBuilder(tagName);",
      "right" : "StringBuilder selector = new StringBuilder(tagName);",
      "info" : "VariableDeclarationStatement[17933-17985]:VariableDeclarationStatement[17933-17985]"
    }, {
      "left" : "String classes = StringUtil.join(classNames(), \".\");",
      "right" : "String classes = StringUtil.join(classNames(), \".\");",
      "info" : "VariableDeclarationStatement[17994-18046]:VariableDeclarationStatement[17994-18046]"
    }, {
      "left" : "if (classes.length() > 0)",
      "right" : "if (classes.length() > 0)",
      "info" : "IfStatement[18055-18130]:IfStatement[18055-18130]"
    }, {
      "left" : "selector.append('.').append(classes);",
      "right" : "selector.append('.').append(classes);",
      "info" : "ExpressionStatement[18093-18130]:ExpressionStatement[18093-18130]"
    }, {
      "left" : "if (parent() == null || parent() instanceof Document)",
      "right" : "if (parent() == null || parent() instanceof Document)",
      "info" : "IfStatement[18140-18300]:IfStatement[18140-18300]"
    }, {
      "left" : "return selector.toString();",
      "right" : "return selector.toString();",
      "info" : "ReturnStatement[18273-18300]:ReturnStatement[18273-18300]"
    }, {
      "left" : "selector.insert(0, \" > \");",
      "right" : "selector.insert(0, \" > \");",
      "info" : "ExpressionStatement[18310-18336]:ExpressionStatement[18310-18336]"
    }, {
      "left" : "if (parent().select(selector.toString()).size() > 1)",
      "right" : "if (parent().select(selector.toString()).size() > 1)",
      "info" : "IfStatement[18345-18503]:IfStatement[18345-18503]"
    }, {
      "left" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "right" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "info" : "ExpressionStatement[18410-18503]:ExpressionStatement[18410-18503]"
    }, {
      "left" : "return parent().cssSelector() + selector.toString();",
      "right" : "return parent().cssSelector() + selector.toString();",
      "info" : "ReturnStatement[18513-18565]:ReturnStatement[18513-18565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18843-19158]:Block[18843-19158]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[18853-18912]:IfStatement[18853-18912]"
    }, {
      "left" : "return new Elements(0);",
      "right" : "return new Elements(0);",
      "info" : "ReturnStatement[18889-18912]:ReturnStatement[18889-18912]"
    }, {
      "left" : "List<Element> elements = parent().children();",
      "right" : "List<Element> elements = parent().children();",
      "info" : "VariableDeclarationStatement[18922-18967]:VariableDeclarationStatement[18922-18967]"
    }, {
      "left" : "Elements siblings = new Elements(elements.size() - 1);",
      "right" : "Elements siblings = new Elements(elements.size() - 1);",
      "info" : "VariableDeclarationStatement[18976-19030]:VariableDeclarationStatement[18976-19030]"
    }, {
      "left" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "right" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "info" : "EnhancedForStatement[19039-19127]:EnhancedForStatement[19039-19127]"
    }, {
      "left" : "if (el != this)",
      "right" : "if (el != this)",
      "info" : "IfStatement[19078-19127]:IfStatement[19078-19127]"
    }, {
      "left" : "siblings.add(el);",
      "right" : "siblings.add(el);",
      "info" : "ExpressionStatement[19110-19127]:ExpressionStatement[19110-19127]"
    }, {
      "left" : "return siblings;",
      "right" : "return siblings;",
      "info" : "ReturnStatement[19136-19152]:ReturnStatement[19136-19152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19622-19933]:Block[19622-19933]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[19632-19668]:IfStatement[19632-19668]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19656-19668]:ReturnStatement[19656-19668]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[19677-19722]:VariableDeclarationStatement[19677-19722]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[19731-19775]:VariableDeclarationStatement[19731-19775]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[19784-19808]:ExpressionStatement[19784-19808]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[19817-19927]:IfStatement[19817-19927]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[19860-19889]:ReturnStatement[19860-19889]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19915-19927]:ReturnStatement[19915-19927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20164-20459]:Block[20164-20459]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[20174-20210]:IfStatement[20174-20210]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20198-20210]:ReturnStatement[20198-20210]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[20219-20264]:VariableDeclarationStatement[20219-20264]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[20273-20317]:VariableDeclarationStatement[20273-20317]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[20326-20350]:ExpressionStatement[20326-20350]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[20359-20453]:IfStatement[20359-20453]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[20386-20415]:ReturnStatement[20386-20415]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20441-20453]:ReturnStatement[20441-20453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20665-20840]:Block[20665-20840]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[20728-20773]:VariableDeclarationStatement[20728-20773]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "info" : "ReturnStatement[20782-20834]:ReturnStatement[20782-20834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21083-21184]:Block[21083-21184]"
    }, {
      "left" : "if (parent() == null)",
      "right" : "if (parent() == null)",
      "info" : "IfStatement[21092-21123]:IfStatement[21092-21123]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[21114-21123]:ReturnStatement[21114-21123]"
    }, {
      "left" : "return indexInList(this, parent().children());",
      "right" : "return indexInList(this, parent().children());",
      "info" : "ReturnStatement[21131-21177]:ReturnStatement[21131-21177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21385-21525]:Block[21385-21525]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[21395-21440]:VariableDeclarationStatement[21395-21440]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "info" : "ReturnStatement[21449-21519]:ReturnStatement[21449-21519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21624-21887]:Block[21624-21887]"
    }, {
      "left" : "Validate.notNull(search);",
      "right" : "Validate.notNull(search);",
      "info" : "ExpressionStatement[21634-21659]:ExpressionStatement[21634-21659]"
    }, {
      "left" : "Validate.notNull(elements);",
      "right" : "Validate.notNull(elements);",
      "info" : "ExpressionStatement[21668-21695]:ExpressionStatement[21668-21695]"
    }, {
      "left" : "for (int i = 0; i < elements.size(); i++)",
      "right" : "for (int i = 0; i < elements.size(); i++)",
      "info" : "ForStatement[21705-21860]:ForStatement[21705-21860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21747-21860]:Block[21747-21860]"
    }, {
      "left" : "E element = elements.get(i);",
      "right" : "E element = elements.get(i);",
      "info" : "VariableDeclarationStatement[21761-21789]:VariableDeclarationStatement[21761-21789]"
    }, {
      "left" : "if (element == search)",
      "right" : "if (element == search)",
      "info" : "IfStatement[21802-21850]:IfStatement[21802-21850]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[21841-21850]:ReturnStatement[21841-21850]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21869-21881]:ReturnStatement[21869-21881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22271-22431]:Block[22271-22431]"
    }, {
      "left" : "Validate.notEmpty(tagName);",
      "right" : "Validate.notEmpty(tagName);",
      "info" : "ExpressionStatement[22281-22308]:ExpressionStatement[22281-22308]"
    }, {
      "left" : "tagName = tagName.toLowerCase().trim();",
      "right" : "tagName = tagName.toLowerCase().trim();",
      "info" : "ExpressionStatement[22317-22356]:ExpressionStatement[22317-22356]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "right" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "info" : "ReturnStatement[22366-22425]:ReturnStatement[22366-22425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22990-23219]:Block[22990-23219]"
    }, {
      "left" : "Validate.notEmpty(id);",
      "right" : "Validate.notEmpty(id);",
      "info" : "ExpressionStatement[23000-23022]:ExpressionStatement[23000-23022]"
    }, {
      "left" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "right" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "info" : "VariableDeclarationStatement[23040-23106]:VariableDeclarationStatement[23040-23106]"
    }, {
      "left" : "if (elements.size() > 0)",
      "right" : "if (elements.size() > 0)",
      "info" : "IfStatement[23115-23213]:IfStatement[23115-23213]"
    }, {
      "left" : "return elements.get(0);",
      "right" : "return elements.get(0);",
      "info" : "ReturnStatement[23152-23175]:ReturnStatement[23152-23175]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23201-23213]:ReturnStatement[23201-23213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23793-23911]:Block[23793-23911]"
    }, {
      "left" : "Validate.notEmpty(className);",
      "right" : "Validate.notEmpty(className);",
      "info" : "ExpressionStatement[23803-23832]:ExpressionStatement[23803-23832]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Class(className), this);",
      "right" : "return Collector.collect(new Evaluator.Class(className), this);",
      "info" : "ReturnStatement[23842-23905]:ReturnStatement[23842-23905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24186-24322]:Block[24186-24322]"
    }, {
      "left" : "Validate.notEmpty(key);",
      "right" : "Validate.notEmpty(key);",
      "info" : "ExpressionStatement[24196-24219]:ExpressionStatement[24196-24219]"
    }, {
      "left" : "key = key.trim();",
      "right" : "key = key.trim();",
      "info" : "ExpressionStatement[24228-24245]:ExpressionStatement[24228-24245]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "right" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "info" : "ReturnStatement[24255-24316]:ReturnStatement[24255-24316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24731-24899]:Block[24731-24899]"
    }, {
      "left" : "Validate.notEmpty(keyPrefix);",
      "right" : "Validate.notEmpty(keyPrefix);",
      "info" : "ExpressionStatement[24741-24770]:ExpressionStatement[24741-24770]"
    }, {
      "left" : "keyPrefix = keyPrefix.trim();",
      "right" : "keyPrefix = keyPrefix.trim();",
      "info" : "ExpressionStatement[24779-24808]:ExpressionStatement[24779-24808]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "info" : "ReturnStatement[24818-24893]:ReturnStatement[24818-24893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25249-25342]:Block[25249-25342]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "info" : "ReturnStatement[25259-25336]:ReturnStatement[25259-25336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25704-25800]:Block[25704-25800]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "info" : "ReturnStatement[25714-25794]:ReturnStatement[25714-25794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26177-26284]:Block[26177-26284]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "info" : "ReturnStatement[26187-26278]:ReturnStatement[26187-26278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26657-26762]:Block[26657-26762]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "info" : "ReturnStatement[26667-26756]:ReturnStatement[26667-26756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27130-27233]:Block[27130-27233]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "info" : "ReturnStatement[27140-27227]:ReturnStatement[27140-27227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27636-27748]:Block[27636-27748]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "info" : "ReturnStatement[27646-27733]:ReturnStatement[27646-27733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28306-28604]:Block[28306-28604]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[28316-28332]:VariableDeclarationStatement[28316-28332]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28341-28532]:TryStatement[28341-28532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28345-28402]:Block[28345-28402]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[28359-28392]:ExpressionStatement[28359-28392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28436-28532]:Block[28436-28532]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[28450-28522]:ThrowStatement[28450-28522]"
    }, {
      "left" : "return getElementsByAttributeValueMatching(key, pattern);",
      "right" : "return getElementsByAttributeValueMatching(key, pattern);",
      "info" : "ReturnStatement[28541-28598]:ReturnStatement[28541-28598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28832-28915]:Block[28832-28915]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "info" : "ReturnStatement[28842-28909]:ReturnStatement[28842-28909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29152-29238]:Block[29152-29238]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "info" : "ReturnStatement[29162-29232]:ReturnStatement[29162-29232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29462-29543]:Block[29462-29543]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "info" : "ReturnStatement[29472-29537]:ReturnStatement[29472-29537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29953-30040]:Block[29953-30040]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "info" : "ReturnStatement[29963-30034]:ReturnStatement[29963-30034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30471-30561]:Block[30471-30561]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "info" : "ReturnStatement[30481-30555]:ReturnStatement[30481-30555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30873-30952]:Block[30873-30952]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "info" : "ReturnStatement[30883-30946]:ReturnStatement[30883-30946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31428-31709]:Block[31428-31709]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[31438-31454]:VariableDeclarationStatement[31438-31454]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[31463-31654]:TryStatement[31463-31654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31467-31524]:Block[31467-31524]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[31481-31514]:ExpressionStatement[31481-31514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31558-31654]:Block[31558-31654]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[31572-31644]:ThrowStatement[31572-31644]"
    }, {
      "left" : "return getElementsMatchingText(pattern);",
      "right" : "return getElementsMatchingText(pattern);",
      "info" : "ReturnStatement[31663-31703]:ReturnStatement[31663-31703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32031-32113]:Block[32031-32113]"
    }, {
      "left" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "info" : "ReturnStatement[32041-32107]:ReturnStatement[32041-32107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32595-32879]:Block[32595-32879]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[32605-32621]:VariableDeclarationStatement[32605-32621]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32630-32821]:TryStatement[32630-32821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32634-32691]:Block[32634-32691]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[32648-32681]:ExpressionStatement[32648-32681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32725-32821]:Block[32725-32821]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[32739-32811]:ThrowStatement[32739-32811]"
    }, {
      "left" : "return getElementsMatchingOwnText(pattern);",
      "right" : "return getElementsMatchingOwnText(pattern);",
      "info" : "ReturnStatement[32830-32873]:ReturnStatement[32830-32873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33062-33138]:Block[33062-33138]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "right" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "info" : "ReturnStatement[33072-33132]:ReturnStatement[33072-33132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33534-34373]:Block[33534-34373]"
    }, {
      "left" : "final StringBuilder accum = new StringBuilder();",
      "right" : "final StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[33544-33592]:VariableDeclarationStatement[33544-33592]"
    }, {
      "left" : "new NodeTraversor(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(\" \");\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }).traverse(this);",
      "right" : "new NodeTraversor(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(\" \");\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }).traverse(this);",
      "info" : "ExpressionStatement[33601-34327]:ExpressionStatement[33601-34327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33690-34232]:Block[33690-34232]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[33708-34218]:IfStatement[33708-34218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33738-33873]:Block[33738-33873]"
    }, {
      "left" : "TextNode textNode = (TextNode) node;",
      "right" : "TextNode textNode = (TextNode) node;",
      "info" : "VariableDeclarationStatement[33760-33796]:VariableDeclarationStatement[33760-33796]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[33817-33855]:ExpressionStatement[33817-33855]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[33879-34218]:IfStatement[33879-34218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33908-34218]:Block[33908-34218]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[33930-33963]:VariableDeclarationStatement[33930-33963]"
    }, {
      "left" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[33984-34200]:IfStatement[33984-34200]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[34182-34200]:ExpressionStatement[34182-34200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34285-34300]:Block[34285-34300]"
    }, {
      "left" : "return accum.toString().trim();",
      "right" : "return accum.toString().trim();",
      "info" : "ReturnStatement[34336-34367]:ReturnStatement[34336-34367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34950-35063]:Block[34950-35063]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[34960-34999]:VariableDeclarationStatement[34960-34999]"
    }, {
      "left" : "ownText(sb);",
      "right" : "ownText(sb);",
      "info" : "ExpressionStatement[35008-35020]:ExpressionStatement[35008-35020]"
    }, {
      "left" : "return sb.toString().trim();",
      "right" : "return sb.toString().trim();",
      "info" : "ReturnStatement[35029-35057]:ReturnStatement[35029-35057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35111-35449]:Block[35111-35449]"
    }, {
      "left" : "for (Node child : childNodes)",
      "right" : "for (Node child : childNodes)",
      "info" : "EnhancedForStatement[35121-35443]:EnhancedForStatement[35121-35443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35151-35443]:Block[35151-35443]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[35165-35433]:IfStatement[35165-35433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35196-35320]:Block[35196-35320]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[35214-35251]:VariableDeclarationStatement[35214-35251]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[35268-35306]:ExpressionStatement[35268-35306]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[35326-35433]:IfStatement[35326-35433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35356-35433]:Block[35356-35433]"
    }, {
      "left" : "appendWhitespaceIfBr((Element) child, accum);",
      "right" : "appendWhitespaceIfBr((Element) child, accum);",
      "info" : "ExpressionStatement[35374-35419]:ExpressionStatement[35374-35419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35536-35791]:Block[35536-35791]"
    }, {
      "left" : "String text = textNode.getWholeText();",
      "right" : "String text = textNode.getWholeText();",
      "info" : "VariableDeclarationStatement[35546-35584]:VariableDeclarationStatement[35546-35584]"
    }, {
      "left" : "if (preserveWhitespace(textNode.parentNode))",
      "right" : "if (preserveWhitespace(textNode.parentNode))",
      "info" : "IfStatement[35594-35785]:IfStatement[35594-35785]"
    }, {
      "left" : "accum.append(text);",
      "right" : "accum.append(text);",
      "info" : "ExpressionStatement[35651-35670]:ExpressionStatement[35651-35670]"
    }, {
      "left" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "right" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "info" : "ExpressionStatement[35696-35785]:ExpressionStatement[35696-35785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35876-36003]:Block[35876-36003]"
    }, {
      "left" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[35886-35997]:IfStatement[35886-35997]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[35979-35997]:ExpressionStatement[35979-35997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36054-36439]:Block[36054-36439]"
    }, {
      "left" : "if (node != null && node instanceof Element)",
      "right" : "if (node != null && node instanceof Element)",
      "info" : "IfStatement[36167-36411]:IfStatement[36167-36411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36212-36411]:Block[36212-36411]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[36226-36259]:VariableDeclarationStatement[36226-36259]"
    }, {
      "left" : "return element.tag.preserveWhitespace() ||\n                element.parent() != null && element.parent().tag.preserveWhitespace();",
      "right" : "return element.tag.preserveWhitespace() ||\n                element.parent() != null && element.parent().tag.preserveWhitespace();",
      "info" : "ReturnStatement[36272-36401]:ReturnStatement[36272-36401]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[36420-36433]:ReturnStatement[36420-36433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36650-36817]:Block[36650-36817]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[36660-36683]:ExpressionStatement[36660-36683]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[36693-36701]:ExpressionStatement[36693-36701]"
    }, {
      "left" : "TextNode textNode = new TextNode(text, baseUri);",
      "right" : "TextNode textNode = new TextNode(text, baseUri);",
      "info" : "VariableDeclarationStatement[36710-36758]:VariableDeclarationStatement[36710-36758]"
    }, {
      "left" : "appendChild(textNode);",
      "right" : "appendChild(textNode);",
      "info" : "ExpressionStatement[36767-36789]:ExpressionStatement[36767-36789]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[36799-36811]:ReturnStatement[36799-36811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36999-37428]:Block[36999-37428]"
    }, {
      "left" : "for (Node child: childNodes)",
      "right" : "for (Node child: childNodes)",
      "info" : "EnhancedForStatement[37009-37400]:EnhancedForStatement[37009-37400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37038-37400]:Block[37038-37400]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[37052-37390]:IfStatement[37052-37390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37083-37226]:Block[37083-37226]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[37101-37138]:VariableDeclarationStatement[37101-37138]"
    }, {
      "left" : "if (!textNode.isBlank())",
      "right" : "if (!textNode.isBlank())",
      "info" : "IfStatement[37155-37212]:IfStatement[37155-37212]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[37200-37212]:ReturnStatement[37200-37212]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[37232-37390]:IfStatement[37232-37390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37262-37390]:Block[37262-37390]"
    }, {
      "left" : "Element el = (Element) child;",
      "right" : "Element el = (Element) child;",
      "info" : "VariableDeclarationStatement[37280-37309]:VariableDeclarationStatement[37280-37309]"
    }, {
      "left" : "if (el.hasText())",
      "right" : "if (el.hasText())",
      "info" : "IfStatement[37326-37376]:IfStatement[37326-37376]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[37364-37376]:ReturnStatement[37364-37376]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[37409-37422]:ReturnStatement[37409-37422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37647-38311]:Block[37647-38311]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[37657-37696]:VariableDeclarationStatement[37657-37696]"
    }, {
      "left" : "for (Node childNode : childNodes)",
      "right" : "for (Node childNode : childNodes)",
      "info" : "EnhancedForStatement[37706-38275]:EnhancedForStatement[37706-38275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37740-38275]:Block[37740-38275]"
    }, {
      "left" : "if (childNode instanceof DataNode)",
      "right" : "if (childNode instanceof DataNode)",
      "info" : "IfStatement[37754-38265]:IfStatement[37754-38265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37789-37906]:Block[37789-37906]"
    }, {
      "left" : "DataNode data = (DataNode) childNode;",
      "right" : "DataNode data = (DataNode) childNode;",
      "info" : "VariableDeclarationStatement[37807-37844]:VariableDeclarationStatement[37807-37844]"
    }, {
      "left" : "sb.append(data.getWholeData());",
      "right" : "sb.append(data.getWholeData());",
      "info" : "ExpressionStatement[37861-37892]:ExpressionStatement[37861-37892]"
    }, {
      "left" : "if (childNode instanceof Comment)",
      "right" : "if (childNode instanceof Comment)",
      "info" : "IfStatement[37912-38265]:IfStatement[37912-38265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37946-38062]:Block[37946-38062]"
    }, {
      "left" : "Comment comment = (Comment) childNode;",
      "right" : "Comment comment = (Comment) childNode;",
      "info" : "VariableDeclarationStatement[37964-38002]:VariableDeclarationStatement[37964-38002]"
    }, {
      "left" : "sb.append(comment.getData());",
      "right" : "sb.append(comment.getData());",
      "info" : "ExpressionStatement[38019-38048]:ExpressionStatement[38019-38048]"
    }, {
      "left" : "if (childNode instanceof Element)",
      "right" : "if (childNode instanceof Element)",
      "info" : "IfStatement[38068-38265]:IfStatement[38068-38265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38102-38265]:Block[38102-38265]"
    }, {
      "left" : "Element element = (Element) childNode;",
      "right" : "Element element = (Element) childNode;",
      "info" : "VariableDeclarationStatement[38120-38158]:VariableDeclarationStatement[38120-38158]"
    }, {
      "left" : "String elementData = element.data();",
      "right" : "String elementData = element.data();",
      "info" : "VariableDeclarationStatement[38175-38211]:VariableDeclarationStatement[38175-38211]"
    }, {
      "left" : "sb.append(elementData);",
      "right" : "sb.append(elementData);",
      "info" : "ExpressionStatement[38228-38251]:ExpressionStatement[38228-38251]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[38284-38305]:ReturnStatement[38284-38305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38678-38722]:Block[38678-38722]"
    }, {
      "left" : "return attr(\"class\").trim();",
      "right" : "return attr(\"class\").trim();",
      "info" : "ReturnStatement[38688-38716]:ReturnStatement[38688-38716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39162-39416]:Block[39162-39416]"
    }, {
      "left" : "String[] names = classSplit.split(className());",
      "right" : "String[] names = classSplit.split(className());",
      "info" : "VariableDeclarationStatement[39169-39216]:VariableDeclarationStatement[39169-39216]"
    }, {
      "left" : "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "right" : "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "info" : "VariableDeclarationStatement[39222-39295]:VariableDeclarationStatement[39222-39295]"
    }, {
      "left" : "classNames.remove(\"\");",
      "right" : "classNames.remove(\"\");",
      "info" : "ExpressionStatement[39301-39323]:ExpressionStatement[39301-39323]"
    }, {
      "left" : "return classNames;",
      "right" : "return classNames;",
      "info" : "ReturnStatement[39392-39410]:ReturnStatement[39392-39410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39642-39775]:Block[39642-39775]"
    }, {
      "left" : "Validate.notNull(classNames);",
      "right" : "Validate.notNull(classNames);",
      "info" : "ExpressionStatement[39652-39681]:ExpressionStatement[39652-39681]"
    }, {
      "left" : "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
      "right" : "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
      "info" : "ExpressionStatement[39690-39748]:ExpressionStatement[39690-39748]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39757-39769]:ReturnStatement[39757-39769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41699-41871]:Block[41709-41881]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[41709-41737]:ExpressionStatement[41719-41747]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[41747-41782]:VariableDeclarationStatement[41757-41792]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[41791-41814]:ExpressionStatement[41801-41824]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[41823-41843]:ExpressionStatement[41833-41853]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[41853-41865]:ReturnStatement[41863-41875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42077-42252]:Block[42087-42262]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[42087-42115]:ExpressionStatement[42097-42125]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[42125-42160]:VariableDeclarationStatement[42135-42170]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[42169-42195]:ExpressionStatement[42179-42205]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[42204-42224]:ExpressionStatement[42214-42234]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[42234-42246]:ReturnStatement[42244-42256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42497-42766]:Block[42507-42776]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[42507-42535]:ExpressionStatement[42517-42545]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[42545-42580]:VariableDeclarationStatement[42555-42590]"
    }, {
      "left" : "if (classes.contains(className))",
      "right" : "if (classes.contains(className))",
      "info" : "IfStatement[42589-42709]:IfStatement[42599-42719]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[42634-42660]:ExpressionStatement[42644-42670]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[42686-42709]:ExpressionStatement[42696-42719]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[42718-42738]:ExpressionStatement[42728-42748]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[42748-42760]:ReturnStatement[42758-42770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42949-43072]:Block[42959-43082]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[42959-43066]:IfStatement[42969-43076]"
    }, {
      "left" : "return text();",
      "right" : "return text();",
      "info" : "ReturnStatement[43005-43019]:ReturnStatement[43015-43029]"
    }, {
      "left" : "return attr(\"value\");",
      "right" : "return attr(\"value\");",
      "info" : "ReturnStatement[43045-43066]:ReturnStatement[43055-43076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43270-43412]:Block[43280-43422]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[43280-43385]:IfStatement[43290-43395]"
    }, {
      "left" : "text(value);",
      "right" : "text(value);",
      "info" : "ExpressionStatement[43326-43338]:ExpressionStatement[43336-43348]"
    }, {
      "left" : "attr(\"value\", value);",
      "right" : "attr(\"value\", value);",
      "info" : "ExpressionStatement[43364-43385]:ExpressionStatement[43374-43395]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43394-43406]:ReturnStatement[43404-43416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43514-44422]:Block[43524-44432]"
    }, {
      "left" : "if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "right" : "if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "info" : "IfStatement[43524-43889]:IfStatement[43534-43899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43645-43889]:Block[43655-43899]"
    }, {
      "left" : "if (accum instanceof StringBuilder)",
      "right" : "if (accum instanceof StringBuilder)",
      "info" : "IfStatement[43659-43879]:IfStatement[43669-43889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43695-43815]:Block[43705-43825]"
    }, {
      "left" : "if (((StringBuilder) accum).length() > 0)",
      "right" : "if (((StringBuilder) accum).length() > 0)",
      "info" : "IfStatement[43713-43801]:IfStatement[43723-43811]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[43775-43801]:ExpressionStatement[43785-43811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43821-43879]:Block[43831-43889]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[43839-43865]:ExpressionStatement[43849-43875]"
    }, {
      "left" : "accum\n                .append(\"<\")\n                .append(tagName());",
      "right" : "accum\n                .append(\"<\")\n                .append(tagName());",
      "info" : "ExpressionStatement[43898-43968]:ExpressionStatement[43908-43978]"
    }, {
      "left" : "attributes.html(accum, out);",
      "right" : "attributes.html(accum, out);",
      "info" : "ExpressionStatement[43977-44005]:ExpressionStatement[43987-44015]"
    }, {
      "left" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "right" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "info" : "IfStatement[44104-44416]:IfStatement[44114-44426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44153-44372]:Block[44163-44382]"
    }, {
      "left" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "right" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "info" : "IfStatement[44167-44329]:IfStatement[44177-44339]"
    }, {
      "left" : "accum.append('>');",
      "right" : "accum.append('>');",
      "info" : "ExpressionStatement[44257-44275]:ExpressionStatement[44267-44285]"
    }, {
      "left" : "accum.append(\" />\");",
      "right" : "accum.append(\" />\");",
      "info" : "ExpressionStatement[44309-44329]:ExpressionStatement[44319-44339]"
    }, {
      "left" : "accum.append(\">\");",
      "right" : "accum.append(\">\");",
      "info" : "ExpressionStatement[44398-44416]:ExpressionStatement[44408-44426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44521-44940]:Block[44531-44950]"
    }, {
      "left" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "right" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "info" : "IfStatement[44531-44934]:IfStatement[44541-44944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44583-44934]:Block[44593-44944]"
    }, {
      "left" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "right" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "info" : "IfStatement[44597-44862]:IfStatement[44607-44872]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[44836-44862]:ExpressionStatement[44846-44872]"
    }, {
      "left" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "right" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "info" : "ExpressionStatement[44875-44924]:ExpressionStatement[44885-44934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45251-45425]:Block[45261-45435]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder();",
      "right" : "StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[45261-45303]:VariableDeclarationStatement[45271-45313]"
    }, {
      "left" : "html(accum);",
      "right" : "html(accum);",
      "info" : "ExpressionStatement[45312-45324]:ExpressionStatement[45322-45334]"
    }, {
      "left" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "right" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "info" : "ReturnStatement[45333-45419]:ReturnStatement[45343-45429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45470-45549]:Block[45480-45559]"
    }, {
      "left" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "right" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "info" : "EnhancedForStatement[45480-45543]:EnhancedForStatement[45490-45553]"
    }, {
      "left" : "node.outerHtml(accum);",
      "right" : "node.outerHtml(accum);",
      "info" : "ExpressionStatement[45521-45543]:ExpressionStatement[45531-45553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45657-45769]:Block[45667-45779]"
    }, {
      "left" : "for (Node node : childNodes)\n            node.outerHtml(appendable);",
      "right" : "for (Node node : childNodes)\n            node.outerHtml(appendable);",
      "info" : "EnhancedForStatement[45667-45735]:EnhancedForStatement[45677-45745]"
    }, {
      "left" : "node.outerHtml(appendable);",
      "right" : "node.outerHtml(appendable);",
      "info" : "ExpressionStatement[45708-45735]:ExpressionStatement[45718-45745]"
    }, {
      "left" : "return appendable;",
      "right" : "return appendable;",
      "info" : "ReturnStatement[45745-45763]:ReturnStatement[45755-45773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46013-46080]:Block[46023-46090]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[46023-46031]:ExpressionStatement[46033-46041]"
    }, {
      "left" : "append(html);",
      "right" : "append(html);",
      "info" : "ExpressionStatement[46040-46053]:ExpressionStatement[46050-46063]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46062-46074]:ReturnStatement[46072-46084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46108-46143]:Block[46118-46153]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[46118-46137]:ReturnStatement[46128-46147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46186-46233]:Block[46196-46243]"
    }, {
      "left" : "return (Element) super.clone();",
      "right" : "return (Element) super.clone();",
      "info" : "ReturnStatement[46196-46227]:ReturnStatement[46206-46237]"
    } ]
  },
  "interFileMappings" : { }
}