{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "TypeDeclaration[1058-80831]:TypeDeclaration[1058-80825]"
    }, {
      "left" : "static final int CAPACITY = 32;",
      "right" : "static final int CAPACITY = 32;",
      "info" : "FieldDeclaration[2875-2966]:FieldDeclaration[2875-2966]"
    }, {
      "left" : "private static final long serialVersionUID = 7628716375283629643L;",
      "right" : "private static final long serialVersionUID = 7628716375283629643L;",
      "info" : "FieldDeclaration[2972-3138]:FieldDeclaration[2972-3138]"
    }, {
      "left" : "protected char[] buffer;",
      "right" : "protected char[] buffer;",
      "info" : "FieldDeclaration[3144-3202]:FieldDeclaration[3144-3202]"
    }, {
      "left" : "protected int size;",
      "right" : "protected int size;",
      "info" : "FieldDeclaration[3207-3265]:FieldDeclaration[3207-3265]"
    }, {
      "left" : "private String newLine;",
      "right" : "private String newLine;",
      "info" : "FieldDeclaration[3270-3318]:FieldDeclaration[3270-3318]"
    }, {
      "left" : "private String nullText;",
      "right" : "private String nullText;",
      "info" : "FieldDeclaration[3323-3373]:FieldDeclaration[3323-3373]"
    }, {
      "left" : "public StrBuilder()",
      "right" : "public StrBuilder()",
      "info" : "MethodDeclaration[3457-3605]:MethodDeclaration[3457-3605]"
    }, {
      "left" : "public StrBuilder(int initialCapacity)",
      "right" : "public StrBuilder(int initialCapacity)",
      "info" : "MethodDeclaration[3611-3998]:MethodDeclaration[3611-3998]"
    }, {
      "left" : "public StrBuilder(String str)",
      "right" : "public StrBuilder(String str)",
      "info" : "MethodDeclaration[4004-4434]:MethodDeclaration[4004-4434]"
    }, {
      "left" : "public String getNewLineText()",
      "right" : "public String getNewLineText()",
      "info" : "MethodDeclaration[4518-4729]:MethodDeclaration[4518-4729]"
    }, {
      "left" : "public StrBuilder setNewLineText(String newLine)",
      "right" : "public StrBuilder setNewLineText(String newLine)",
      "info" : "MethodDeclaration[4735-5041]:MethodDeclaration[4735-5041]"
    }, {
      "left" : "public String getNullText()",
      "right" : "public String getNullText()",
      "info" : "MethodDeclaration[5125-5315]:MethodDeclaration[5125-5315]"
    }, {
      "left" : "public StrBuilder setNullText(String nullText)",
      "right" : "public StrBuilder setNullText(String nullText)",
      "info" : "MethodDeclaration[5321-5706]:MethodDeclaration[5321-5706]"
    }, {
      "left" : "public int length()",
      "right" : "public int length()",
      "info" : "MethodDeclaration[5790-5933]:MethodDeclaration[5790-5933]"
    }, {
      "left" : "public StrBuilder setLength(int length)",
      "right" : "public StrBuilder setLength(int length)",
      "info" : "MethodDeclaration[5939-6755]:MethodDeclaration[5939-6755]"
    }, {
      "left" : "public int capacity()",
      "right" : "public int capacity()",
      "info" : "MethodDeclaration[6839-7018]:MethodDeclaration[6839-7018]"
    }, {
      "left" : "public StrBuilder ensureCapacity(int capacity)",
      "right" : "public StrBuilder ensureCapacity(int capacity)",
      "info" : "MethodDeclaration[7024-7467]:MethodDeclaration[7024-7467]"
    }, {
      "left" : "public StrBuilder minimizeCapacity()",
      "right" : "public StrBuilder minimizeCapacity()",
      "info" : "MethodDeclaration[7473-7846]:MethodDeclaration[7473-7846]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[7930-8190]:MethodDeclaration[7930-8190]"
    }, {
      "left" : "public boolean isEmpty()",
      "right" : "public boolean isEmpty()",
      "info" : "MethodDeclaration[8196-8558]:MethodDeclaration[8196-8558]"
    }, {
      "left" : "public StrBuilder clear()",
      "right" : "public StrBuilder clear()",
      "info" : "MethodDeclaration[8564-9093]:MethodDeclaration[8564-9093]"
    }, {
      "left" : "public char charAt(int index)",
      "right" : "public char charAt(int index)",
      "info" : "MethodDeclaration[9177-9665]:MethodDeclaration[9177-9665]"
    }, {
      "left" : "public StrBuilder setCharAt(int index, char ch)",
      "right" : "public StrBuilder setCharAt(int index, char ch)",
      "info" : "MethodDeclaration[9671-10201]:MethodDeclaration[9671-10201]"
    }, {
      "left" : "public StrBuilder deleteCharAt(int index)",
      "right" : "public StrBuilder deleteCharAt(int index)",
      "info" : "MethodDeclaration[10207-10713]:MethodDeclaration[10207-10713]"
    }, {
      "left" : "public char[] toCharArray()",
      "right" : "public char[] toCharArray()",
      "info" : "MethodDeclaration[10797-11196]:MethodDeclaration[10797-11196]"
    }, {
      "left" : "public char[] toCharArray(int startIndex, int endIndex)",
      "right" : "public char[] toCharArray(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[11202-12082]:MethodDeclaration[11202-12082]"
    }, {
      "left" : "public char[] getChars(char[] destination)",
      "right" : "public char[] getChars(char[] destination)",
      "info" : "MethodDeclaration[12088-12605]:MethodDeclaration[12088-12605]"
    }, {
      "left" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "right" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "info" : "MethodDeclaration[12611-13653]:MethodDeclaration[12611-13653]"
    }, {
      "left" : "public StrBuilder appendNewLine()",
      "right" : "public StrBuilder appendNewLine()",
      "info" : "MethodDeclaration[13737-14246]:MethodDeclaration[13737-14246]"
    }, {
      "left" : "public StrBuilder appendNull()",
      "right" : "public StrBuilder appendNull()",
      "info" : "MethodDeclaration[14252-14533]:MethodDeclaration[14252-14533]"
    }, {
      "left" : "public StrBuilder append(Object obj)",
      "right" : "public StrBuilder append(Object obj)",
      "info" : "MethodDeclaration[14539-14908]:MethodDeclaration[14539-14908]"
    }, {
      "left" : "public StrBuilder append(String str)",
      "right" : "public StrBuilder append(String str)",
      "info" : "MethodDeclaration[14914-15478]:MethodDeclaration[14914-15478]"
    }, {
      "left" : "public StrBuilder append(String str, int startIndex, int length)",
      "right" : "public StrBuilder append(String str, int startIndex, int length)",
      "info" : "MethodDeclaration[15484-16504]:MethodDeclaration[15484-16504]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str)",
      "right" : "public StrBuilder append(StringBuffer str)",
      "info" : "MethodDeclaration[16510-17094]:MethodDeclaration[16510-17094]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "right" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "info" : "MethodDeclaration[17100-18133]:MethodDeclaration[17100-18133]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str)",
      "right" : "public StrBuilder append(StrBuilder str)",
      "info" : "MethodDeclaration[18139-18745]:MethodDeclaration[18139-18745]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "right" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "info" : "MethodDeclaration[18751-19783]:MethodDeclaration[18751-19783]"
    }, {
      "left" : "public StrBuilder append(char[] chars)",
      "right" : "public StrBuilder append(char[] chars)",
      "info" : "MethodDeclaration[19789-20377]:MethodDeclaration[19789-20377]"
    }, {
      "left" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "right" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "info" : "MethodDeclaration[20383-21416]:MethodDeclaration[20383-21416]"
    }, {
      "left" : "public StrBuilder append(boolean value)",
      "right" : "public StrBuilder append(boolean value)",
      "info" : "MethodDeclaration[21422-22078]:MethodDeclaration[21422-22078]"
    }, {
      "left" : "public StrBuilder append(char ch)",
      "right" : "public StrBuilder append(char ch)",
      "info" : "MethodDeclaration[22084-22388]:MethodDeclaration[22084-22388]"
    }, {
      "left" : "public StrBuilder append(int value)",
      "right" : "public StrBuilder append(int value)",
      "info" : "MethodDeclaration[22394-22672]:MethodDeclaration[22394-22672]"
    }, {
      "left" : "public StrBuilder append(long value)",
      "right" : "public StrBuilder append(long value)",
      "info" : "MethodDeclaration[22678-22957]:MethodDeclaration[22678-22957]"
    }, {
      "left" : "public StrBuilder append(float value)",
      "right" : "public StrBuilder append(float value)",
      "info" : "MethodDeclaration[22963-23244]:MethodDeclaration[22963-23244]"
    }, {
      "left" : "public StrBuilder append(double value)",
      "right" : "public StrBuilder append(double value)",
      "info" : "MethodDeclaration[23250-23533]:MethodDeclaration[23250-23533]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "info" : "MethodDeclaration[23617-24407]:MethodDeclaration[23617-24407]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "info" : "MethodDeclaration[24413-25269]:MethodDeclaration[24413-25269]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "info" : "MethodDeclaration[25275-26056]:MethodDeclaration[25275-26056]"
    }, {
      "left" : "public StrBuilder appendPadding(int length, char padChar)",
      "right" : "public StrBuilder appendPadding(int length, char padChar)",
      "info" : "MethodDeclaration[26140-26668]:MethodDeclaration[26140-26668]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[26752-27956]:MethodDeclaration[26752-27956]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "info" : "MethodDeclaration[27962-28595]:MethodDeclaration[27962-28595]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[28601-29792]:MethodDeclaration[28601-29792]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "info" : "MethodDeclaration[29798-30427]:MethodDeclaration[29798-30427]"
    }, {
      "left" : "public StrBuilder insert(int index, Object obj)",
      "right" : "public StrBuilder insert(int index, Object obj)",
      "info" : "MethodDeclaration[30511-31049]:MethodDeclaration[30511-31049]"
    }, {
      "left" : "public StrBuilder insert(int index, String str)",
      "right" : "public StrBuilder insert(int index, String str)",
      "info" : "MethodDeclaration[31055-31886]:MethodDeclaration[31055-31886]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[])",
      "right" : "public StrBuilder insert(int index, char chars[])",
      "info" : "MethodDeclaration[31892-32696]:MethodDeclaration[31892-32696]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "right" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "info" : "MethodDeclaration[32702-33997]:MethodDeclaration[32702-33997]"
    }, {
      "left" : "public StrBuilder insert(int index, boolean value)",
      "right" : "public StrBuilder insert(int index, boolean value)",
      "info" : "MethodDeclaration[34003-35018]:MethodDeclaration[34003-35018]"
    }, {
      "left" : "public StrBuilder insert(int index, char value)",
      "right" : "public StrBuilder insert(int index, char value)",
      "info" : "MethodDeclaration[35024-35554]:MethodDeclaration[35024-35554]"
    }, {
      "left" : "public StrBuilder insert(int index, int value)",
      "right" : "public StrBuilder insert(int index, int value)",
      "info" : "MethodDeclaration[35560-35936]:MethodDeclaration[35560-35936]"
    }, {
      "left" : "public StrBuilder insert(int index, long value)",
      "right" : "public StrBuilder insert(int index, long value)",
      "info" : "MethodDeclaration[35942-36319]:MethodDeclaration[35942-36319]"
    }, {
      "left" : "public StrBuilder insert(int index, float value)",
      "right" : "public StrBuilder insert(int index, float value)",
      "info" : "MethodDeclaration[36325-36703]:MethodDeclaration[36325-36703]"
    }, {
      "left" : "public StrBuilder insert(int index, double value)",
      "right" : "public StrBuilder insert(int index, double value)",
      "info" : "MethodDeclaration[36709-37088]:MethodDeclaration[36709-37088]"
    }, {
      "left" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "right" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "info" : "MethodDeclaration[37172-37660]:MethodDeclaration[37172-37660]"
    }, {
      "left" : "public StrBuilder delete(int startIndex, int endIndex)",
      "right" : "public StrBuilder delete(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[37666-38319]:MethodDeclaration[37666-38319]"
    }, {
      "left" : "public StrBuilder deleteAll(char ch)",
      "right" : "public StrBuilder deleteAll(char ch)",
      "info" : "MethodDeclaration[38403-39025]:MethodDeclaration[38403-39025]"
    }, {
      "left" : "public StrBuilder deleteFirst(char ch)",
      "right" : "public StrBuilder deleteFirst(char ch)",
      "info" : "MethodDeclaration[39031-39431]:MethodDeclaration[39031-39431]"
    }, {
      "left" : "public StrBuilder deleteAll(String str)",
      "right" : "public StrBuilder deleteAll(String str)",
      "info" : "MethodDeclaration[39515-40041]:MethodDeclaration[39515-40041]"
    }, {
      "left" : "public StrBuilder deleteFirst(String str)",
      "right" : "public StrBuilder deleteFirst(String str)",
      "info" : "MethodDeclaration[40047-40527]:MethodDeclaration[40047-40527]"
    }, {
      "left" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "right" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "info" : "MethodDeclaration[40611-41138]:MethodDeclaration[40611-41138]"
    }, {
      "left" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "right" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "info" : "MethodDeclaration[41144-41670]:MethodDeclaration[41144-41670]"
    }, {
      "left" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "right" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "info" : "MethodDeclaration[41754-42736]:MethodDeclaration[41754-42736]"
    }, {
      "left" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "right" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "info" : "MethodDeclaration[42742-43617]:MethodDeclaration[42742-43617]"
    }, {
      "left" : "public StrBuilder replaceAll(char search, char replace)",
      "right" : "public StrBuilder replaceAll(char search, char replace)",
      "info" : "MethodDeclaration[43701-44235]:MethodDeclaration[43701-44235]"
    }, {
      "left" : "public StrBuilder replaceFirst(char search, char replace)",
      "right" : "public StrBuilder replaceFirst(char search, char replace)",
      "info" : "MethodDeclaration[44241-44818]:MethodDeclaration[44241-44818]"
    }, {
      "left" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[44902-45734]:MethodDeclaration[44902-45734]"
    }, {
      "left" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[45740-46510]:MethodDeclaration[45740-46510]"
    }, {
      "left" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[46594-47237]:MethodDeclaration[46594-47237]"
    }, {
      "left" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[47243-47876]:MethodDeclaration[47243-47876]"
    }, {
      "left" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "right" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "info" : "MethodDeclaration[47961-49087]:MethodDeclaration[47961-49087]"
    }, {
      "left" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "right" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "info" : "MethodDeclaration[49093-50614]:MethodDeclaration[49093-50614]"
    }, {
      "left" : "public StrBuilder reverse()",
      "right" : "public StrBuilder reverse()",
      "info" : "MethodDeclaration[50698-51241]:MethodDeclaration[50698-51241]"
    }, {
      "left" : "public StrBuilder trim()",
      "right" : "public StrBuilder trim()",
      "info" : "MethodDeclaration[51325-51972]:MethodDeclaration[51325-51972]"
    }, {
      "left" : "public boolean startsWith(String str)",
      "right" : "public boolean startsWith(String str)",
      "info" : "MethodDeclaration[52056-52776]:MethodDeclaration[52056-52776]"
    }, {
      "left" : "public boolean endsWith(String str)",
      "right" : "public boolean endsWith(String str)",
      "info" : "MethodDeclaration[52782-53534]:MethodDeclaration[52782-53534]"
    }, {
      "left" : "public String substring(int start)",
      "right" : "public String substring(int start)",
      "info" : "MethodDeclaration[53618-53943]:MethodDeclaration[53618-53943]"
    }, {
      "left" : "public String substring(int startIndex, int endIndex)",
      "right" : "public String substring(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[53949-54720]:MethodDeclaration[53949-54720]"
    }, {
      "left" : "public String leftString(int length)",
      "right" : "public String leftString(int length)",
      "info" : "MethodDeclaration[54726-55486]:MethodDeclaration[54726-55486]"
    }, {
      "left" : "public String rightString(int length)",
      "right" : "public String rightString(int length)",
      "info" : "MethodDeclaration[55492-56267]:MethodDeclaration[55492-56267]"
    }, {
      "left" : "public String midString(int index, int length)",
      "right" : "public String midString(int index, int length)",
      "info" : "MethodDeclaration[56273-57453]:MethodDeclaration[56273-57453]"
    }, {
      "left" : "public boolean contains(char ch)",
      "right" : "public boolean contains(char ch)",
      "info" : "MethodDeclaration[57537-57958]:MethodDeclaration[57537-57958]"
    }, {
      "left" : "public boolean contains(String str)",
      "right" : "public boolean contains(String str)",
      "info" : "MethodDeclaration[57964-58227]:MethodDeclaration[57964-58227]"
    }, {
      "left" : "public boolean contains(StrMatcher matcher)",
      "right" : "public boolean contains(StrMatcher matcher)",
      "info" : "MethodDeclaration[58233-58755]:MethodDeclaration[58233-58755]"
    }, {
      "left" : "public int indexOf(char ch)",
      "right" : "public int indexOf(char ch)",
      "info" : "MethodDeclaration[58839-59123]:MethodDeclaration[58839-59123]"
    }, {
      "left" : "public int indexOf(char ch, int startIndex)",
      "right" : "public int indexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[59129-59798]:MethodDeclaration[59129-59798]"
    }, {
      "left" : "public int indexOf(String str)",
      "right" : "public int indexOf(String str)",
      "info" : "MethodDeclaration[59804-60207]:MethodDeclaration[59804-60207]"
    }, {
      "left" : "public int indexOf(String str, int startIndex)",
      "right" : "public int indexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[60213-61482]:MethodDeclaration[60213-61476]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher)",
      "right" : "public int indexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[61488-61969]:MethodDeclaration[61482-61963]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[61975-62930]:MethodDeclaration[61969-62924]"
    }, {
      "left" : "public int lastIndexOf(char ch)",
      "right" : "public int lastIndexOf(char ch)",
      "info" : "MethodDeclaration[63014-63311]:MethodDeclaration[63008-63305]"
    }, {
      "left" : "public int lastIndexOf(char ch, int startIndex)",
      "right" : "public int lastIndexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[63317-63949]:MethodDeclaration[63311-63943]"
    }, {
      "left" : "public int lastIndexOf(String str)",
      "right" : "public int lastIndexOf(String str)",
      "info" : "MethodDeclaration[63955-64371]:MethodDeclaration[63949-64365]"
    }, {
      "left" : "public int lastIndexOf(String str, int startIndex)",
      "right" : "public int lastIndexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[64377-65645]:MethodDeclaration[64371-65639]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher)",
      "right" : "public int lastIndexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[65651-66141]:MethodDeclaration[65645-66135]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[66147-67121]:MethodDeclaration[66141-67115]"
    }, {
      "left" : "public StrTokenizer asTokenizer()",
      "right" : "public StrTokenizer asTokenizer()",
      "info" : "MethodDeclaration[67205-68929]:MethodDeclaration[67199-68923]"
    }, {
      "left" : "public Reader asReader()",
      "right" : "public Reader asReader()",
      "info" : "MethodDeclaration[69013-69929]:MethodDeclaration[69007-69923]"
    }, {
      "left" : "public Writer asWriter()",
      "right" : "public Writer asWriter()",
      "info" : "MethodDeclaration[70013-71020]:MethodDeclaration[70007-71014]"
    }, {
      "left" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "right" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "info" : "MethodDeclaration[72362-73209]:MethodDeclaration[72356-73203]"
    }, {
      "left" : "public boolean equals(StrBuilder other)",
      "right" : "public boolean equals(StrBuilder other)",
      "info" : "MethodDeclaration[73215-73928]:MethodDeclaration[73209-73922]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[73934-74374]:MethodDeclaration[73928-74368]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[74380-74677]:MethodDeclaration[74374-74671]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[74761-75136]:MethodDeclaration[74755-75130]"
    }, {
      "left" : "public StringBuffer toStringBuffer()",
      "right" : "public StringBuffer toStringBuffer()",
      "info" : "MethodDeclaration[75142-75438]:MethodDeclaration[75136-75432]"
    }, {
      "left" : "protected int validateRange(int startIndex, int endIndex)",
      "right" : "protected int validateRange(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[75522-76282]:MethodDeclaration[75516-76276]"
    }, {
      "left" : "protected void validateIndex(int index)",
      "right" : "protected void validateIndex(int index)",
      "info" : "MethodDeclaration[76288-76651]:MethodDeclaration[76282-76645]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "TypeDeclaration[76735-77561]:TypeDeclaration[76729-77555]"
    }, {
      "left" : "StrBuilderTokenizer()",
      "right" : "StrBuilderTokenizer()",
      "info" : "MethodDeclaration[76875-76958]:MethodDeclaration[76869-76952]"
    }, {
      "left" : "protected List tokenize(char[] chars, int offset, int count)",
      "right" : "protected List tokenize(char[] chars, int offset, int count)",
      "info" : "MethodDeclaration[76968-77288]:MethodDeclaration[76962-77282]"
    }, {
      "left" : "public String getContent()",
      "right" : "public String getContent()",
      "info" : "MethodDeclaration[77298-77555]:MethodDeclaration[77292-77549]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "TypeDeclaration[77645-79673]:TypeDeclaration[77639-79667]"
    }, {
      "left" : "private int pos;",
      "right" : "private int pos;",
      "info" : "FieldDeclaration[77772-77832]:FieldDeclaration[77766-77826]"
    }, {
      "left" : "private int mark;",
      "right" : "private int mark;",
      "info" : "FieldDeclaration[77841-77897]:FieldDeclaration[77835-77891]"
    }, {
      "left" : "StrBuilderReader()",
      "right" : "StrBuilderReader()",
      "info" : "MethodDeclaration[77907-77987]:MethodDeclaration[77901-77981]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[77997-78083]:MethodDeclaration[77991-78077]"
    }, {
      "left" : "public int read()",
      "right" : "public int read()",
      "info" : "MethodDeclaration[78093-78278]:MethodDeclaration[78087-78272]"
    }, {
      "left" : "public int read(char b[], int off, int len)",
      "right" : "public int read(char b[], int off, int len)",
      "info" : "MethodDeclaration[78288-78934]:MethodDeclaration[78282-78928]"
    }, {
      "left" : "public long skip(long n)",
      "right" : "public long skip(long n)",
      "info" : "MethodDeclaration[78944-79234]:MethodDeclaration[78938-79228]"
    }, {
      "left" : "public boolean ready()",
      "right" : "public boolean ready()",
      "info" : "MethodDeclaration[79244-79356]:MethodDeclaration[79238-79350]"
    }, {
      "left" : "public boolean markSupported()",
      "right" : "public boolean markSupported()",
      "info" : "MethodDeclaration[79366-79462]:MethodDeclaration[79360-79456]"
    }, {
      "left" : "public void mark(int readAheadLimit)",
      "right" : "public void mark(int readAheadLimit)",
      "info" : "MethodDeclaration[79472-79573]:MethodDeclaration[79466-79567]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[79583-79667]:MethodDeclaration[79577-79661]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "TypeDeclaration[79757-80828]:TypeDeclaration[79751-80822]"
    }, {
      "left" : "StrBuilderWriter()",
      "right" : "StrBuilderWriter()",
      "info" : "MethodDeclaration[79885-79965]:MethodDeclaration[79879-79959]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[79975-80061]:MethodDeclaration[79969-80055]"
    }, {
      "left" : "public void flush()",
      "right" : "public void flush()",
      "info" : "MethodDeclaration[80071-80157]:MethodDeclaration[80065-80151]"
    }, {
      "left" : "public void write(int c)",
      "right" : "public void write(int c)",
      "info" : "MethodDeclaration[80167-80278]:MethodDeclaration[80161-80272]"
    }, {
      "left" : "public void write(char[] cbuf)",
      "right" : "public void write(char[] cbuf)",
      "info" : "MethodDeclaration[80288-80401]:MethodDeclaration[80282-80395]"
    }, {
      "left" : "public void write(char[] cbuf, int off, int len)",
      "right" : "public void write(char[] cbuf, int off, int len)",
      "info" : "MethodDeclaration[80411-80552]:MethodDeclaration[80405-80546]"
    }, {
      "left" : "public void write(String str)",
      "right" : "public void write(String str)",
      "info" : "MethodDeclaration[80562-80673]:MethodDeclaration[80556-80667]"
    }, {
      "left" : "public void write(String str, int off, int len)",
      "right" : "public void write(String str, int off, int len)",
      "info" : "MethodDeclaration[80683-80822]:MethodDeclaration[80677-80816]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3574-3605]:Block[3574-3605]"
    }, {
      "left" : "this(CAPACITY);",
      "right" : "this(CAPACITY);",
      "info" : "ConstructorInvocation[3584-3599]:ConstructorInvocation[3584-3599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3844-3998]:Block[3844-3998]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[3854-3862]:SuperConstructorInvocation[3854-3862]"
    }, {
      "left" : "if (initialCapacity <= 0)",
      "right" : "if (initialCapacity <= 0)",
      "info" : "IfStatement[3871-3948]:IfStatement[3871-3948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3897-3948]:Block[3897-3948]"
    }, {
      "left" : "initialCapacity = CAPACITY;",
      "right" : "initialCapacity = CAPACITY;",
      "info" : "ExpressionStatement[3911-3938]:ExpressionStatement[3911-3938]"
    }, {
      "left" : "buffer = new char[initialCapacity];",
      "right" : "buffer = new char[initialCapacity];",
      "info" : "ExpressionStatement[3957-3992]:ExpressionStatement[3957-3992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4234-4434]:Block[4234-4434]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4244-4252]:SuperConstructorInvocation[4244-4252]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[4261-4428]:IfStatement[4261-4428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4278-4330]:Block[4278-4330]"
    }, {
      "left" : "buffer = new char[CAPACITY];",
      "right" : "buffer = new char[CAPACITY];",
      "info" : "ExpressionStatement[4292-4320]:ExpressionStatement[4292-4320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4336-4428]:Block[4336-4428]"
    }, {
      "left" : "buffer = new char[str.length() + CAPACITY];",
      "right" : "buffer = new char[str.length() + CAPACITY];",
      "info" : "ExpressionStatement[4350-4393]:ExpressionStatement[4350-4393]"
    }, {
      "left" : "append(str);",
      "right" : "append(str);",
      "info" : "ExpressionStatement[4406-4418]:ExpressionStatement[4406-4418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4698-4729]:Block[4698-4729]"
    }, {
      "left" : "return newLine;",
      "right" : "return newLine;",
      "info" : "ReturnStatement[4708-4723]:ReturnStatement[4708-4723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4981-5041]:Block[4981-5041]"
    }, {
      "left" : "this.newLine = newLine;",
      "right" : "this.newLine = newLine;",
      "info" : "ExpressionStatement[4991-5014]:ExpressionStatement[4991-5014]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5023-5035]:ReturnStatement[5023-5035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5283-5315]:Block[5283-5315]"
    }, {
      "left" : "return nullText;",
      "right" : "return nullText;",
      "info" : "ReturnStatement[5293-5309]:ReturnStatement[5293-5309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5547-5706]:Block[5547-5706]"
    }, {
      "left" : "if (nullText != null && nullText.length() == 0)",
      "right" : "if (nullText != null && nullText.length() == 0)",
      "info" : "IfStatement[5557-5645]:IfStatement[5557-5645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5605-5645]:Block[5605-5645]"
    }, {
      "left" : "nullText = null;",
      "right" : "nullText = null;",
      "info" : "ExpressionStatement[5619-5635]:ExpressionStatement[5619-5635]"
    }, {
      "left" : "this.nullText = nullText;",
      "right" : "this.nullText = nullText;",
      "info" : "ExpressionStatement[5654-5679]:ExpressionStatement[5654-5679]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5688-5700]:ReturnStatement[5688-5700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5905-5933]:Block[5905-5933]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[5915-5927]:ReturnStatement[5915-5927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6299-6755]:Block[6299-6755]"
    }, {
      "left" : "if (length < 0)",
      "right" : "if (length < 0)",
      "info" : "IfStatement[6309-6399]:IfStatement[6309-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6325-6399]:Block[6325-6399]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(length);",
      "right" : "throw new StringIndexOutOfBoundsException(length);",
      "info" : "ThrowStatement[6339-6389]:ThrowStatement[6339-6389]"
    }, {
      "left" : "if (length < size)",
      "right" : "if (length < size)",
      "info" : "IfStatement[6408-6728]:IfStatement[6408-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6427-6465]:Block[6427-6465]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6441-6455]:ExpressionStatement[6441-6455]"
    }, {
      "left" : "if (length > size)",
      "right" : "if (length > size)",
      "info" : "IfStatement[6471-6728]:IfStatement[6471-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6490-6728]:Block[6490-6728]"
    }, {
      "left" : "ensureCapacity(length);",
      "right" : "ensureCapacity(length);",
      "info" : "ExpressionStatement[6504-6527]:ExpressionStatement[6504-6527]"
    }, {
      "left" : "int oldEnd = size;",
      "right" : "int oldEnd = size;",
      "info" : "VariableDeclarationStatement[6540-6558]:VariableDeclarationStatement[6540-6558]"
    }, {
      "left" : "int newEnd = length;",
      "right" : "int newEnd = length;",
      "info" : "VariableDeclarationStatement[6571-6591]:VariableDeclarationStatement[6571-6591]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6604-6618]:ExpressionStatement[6604-6618]"
    }, {
      "left" : "for (int i = oldEnd; i < newEnd; i++)",
      "right" : "for (int i = oldEnd; i < newEnd; i++)",
      "info" : "ForStatement[6631-6718]:ForStatement[6631-6718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6669-6718]:Block[6669-6718]"
    }, {
      "left" : "buffer[i] = '\\0';",
      "right" : "buffer[i] = '\\0';",
      "info" : "ExpressionStatement[6687-6704]:ExpressionStatement[6687-6704]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6737-6749]:ReturnStatement[6737-6749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6981-7018]:Block[6981-7018]"
    }, {
      "left" : "return buffer.length;",
      "right" : "return buffer.length;",
      "info" : "ReturnStatement[6991-7012]:ReturnStatement[6991-7012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7260-7467]:Block[7260-7467]"
    }, {
      "left" : "if (capacity > buffer.length)",
      "right" : "if (capacity > buffer.length)",
      "info" : "IfStatement[7270-7440]:IfStatement[7270-7440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7300-7440]:Block[7300-7440]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7314-7334]:VariableDeclarationStatement[7314-7334]"
    }, {
      "left" : "buffer = new char[capacity];",
      "right" : "buffer = new char[capacity];",
      "info" : "ExpressionStatement[7347-7375]:ExpressionStatement[7347-7375]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7388-7430]:ExpressionStatement[7388-7430]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7449-7461]:ReturnStatement[7449-7461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7639-7846]:Block[7639-7846]"
    }, {
      "left" : "if (buffer.length > length())",
      "right" : "if (buffer.length > length())",
      "info" : "IfStatement[7649-7819]:IfStatement[7649-7819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7679-7819]:Block[7679-7819]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7693-7713]:VariableDeclarationStatement[7693-7713]"
    }, {
      "left" : "buffer = new char[length()];",
      "right" : "buffer = new char[length()];",
      "info" : "ExpressionStatement[7726-7754]:ExpressionStatement[7726-7754]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7767-7809]:ExpressionStatement[7767-7809]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7828-7840]:ReturnStatement[7828-7840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8162-8190]:Block[8162-8190]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[8172-8184]:ReturnStatement[8172-8184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8525-8558]:Block[8525-8558]"
    }, {
      "left" : "return size == 0;",
      "right" : "return size == 0;",
      "info" : "ReturnStatement[8535-8552]:ReturnStatement[8535-8552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9047-9093]:Block[9047-9093]"
    }, {
      "left" : "size = 0;",
      "right" : "size = 0;",
      "info" : "ExpressionStatement[9057-9066]:ExpressionStatement[9057-9066]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9075-9087]:ReturnStatement[9075-9087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9510-9665]:Block[9510-9665]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[9520-9629]:IfStatement[9520-9629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9556-9629]:Block[9556-9629]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[9570-9619]:ThrowStatement[9570-9619]"
    }, {
      "left" : "return buffer[index];",
      "right" : "return buffer[index];",
      "info" : "ReturnStatement[9638-9659]:ReturnStatement[9638-9659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10027-10201]:Block[10027-10201]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[10037-10146]:IfStatement[10037-10146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10073-10146]:Block[10073-10146]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10087-10136]:ThrowStatement[10087-10136]"
    }, {
      "left" : "buffer[index] = ch;",
      "right" : "buffer[index] = ch;",
      "info" : "ExpressionStatement[10155-10174]:ExpressionStatement[10155-10174]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10183-10195]:ReturnStatement[10183-10195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10530-10713]:Block[10530-10713]"
    }, {
      "left" : "if (index < 0 || index >= size)",
      "right" : "if (index < 0 || index >= size)",
      "info" : "IfStatement[10540-10645]:IfStatement[10540-10645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10572-10645]:Block[10572-10645]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10586-10635]:ThrowStatement[10586-10635]"
    }, {
      "left" : "deleteImpl(index, index + 1, 1);",
      "right" : "deleteImpl(index, index + 1, 1);",
      "info" : "ExpressionStatement[10654-10686]:ExpressionStatement[10654-10686]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10695-10707]:ReturnStatement[10695-10707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10992-11196]:Block[10992-11196]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[11002-11076]:IfStatement[11002-11076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11017-11076]:Block[11017-11076]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11031-11066]:ReturnStatement[11031-11066]"
    }, {
      "left" : "char chars[] = new char[size];",
      "right" : "char chars[] = new char[size];",
      "info" : "VariableDeclarationStatement[11085-11115]:VariableDeclarationStatement[11085-11115]"
    }, {
      "left" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "right" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "info" : "ExpressionStatement[11124-11168]:ExpressionStatement[11124-11168]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[11177-11190]:ReturnStatement[11177-11190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11775-12082]:Block[11775-12082]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[11785-11832]:ExpressionStatement[11785-11832]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[11841-11873]:VariableDeclarationStatement[11841-11873]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[11882-11955]:IfStatement[11882-11955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11896-11955]:Block[11896-11955]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11910-11945]:ReturnStatement[11910-11945]"
    }, {
      "left" : "char chars[] = new char[len];",
      "right" : "char chars[] = new char[len];",
      "info" : "VariableDeclarationStatement[11964-11993]:VariableDeclarationStatement[11964-11993]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "right" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "info" : "ExpressionStatement[12002-12054]:ExpressionStatement[12002-12054]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[12063-12076]:ReturnStatement[12063-12076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12370-12605]:Block[12370-12605]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[12380-12399]:VariableDeclarationStatement[12380-12399]"
    }, {
      "left" : "if (destination == null || destination.length < len)",
      "right" : "if (destination == null || destination.length < len)",
      "info" : "IfStatement[12408-12513]:IfStatement[12408-12513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12461-12513]:Block[12461-12513]"
    }, {
      "left" : "destination = new char[len];",
      "right" : "destination = new char[len];",
      "info" : "ExpressionStatement[12475-12503]:ExpressionStatement[12475-12503]"
    }, {
      "left" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "right" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "info" : "ExpressionStatement[12522-12571]:ExpressionStatement[12522-12571]"
    }, {
      "left" : "return destination;",
      "right" : "return destination;",
      "info" : "ReturnStatement[12580-12599]:ReturnStatement[12580-12599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13196-13653]:Block[13196-13653]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[13206-13304]:IfStatement[13206-13304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13226-13304]:Block[13226-13304]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[13240-13294]:ThrowStatement[13240-13294]"
    }, {
      "left" : "if (endIndex < 0 || endIndex > length())",
      "right" : "if (endIndex < 0 || endIndex > length())",
      "info" : "IfStatement[13313-13430]:IfStatement[13313-13430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13354-13430]:Block[13354-13430]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "info" : "ThrowStatement[13368-13420]:ThrowStatement[13368-13420]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[13439-13547]:IfStatement[13439-13547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13466-13547]:Block[13466-13547]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[13480-13537]:ThrowStatement[13480-13537]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "right" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "info" : "ExpressionStatement[13556-13647]:ExpressionStatement[13556-13647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14092-14246]:Block[14092-14246]"
    }, {
      "left" : "if (newLine == null)",
      "right" : "if (newLine == null)",
      "info" : "IfStatement[14102-14208]:IfStatement[14102-14208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14124-14208]:Block[14124-14208]"
    }, {
      "left" : "append(SystemUtils.LINE_SEPARATOR);",
      "right" : "append(SystemUtils.LINE_SEPARATOR);",
      "info" : "ExpressionStatement[14138-14173]:ExpressionStatement[14138-14173]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14186-14198]:ReturnStatement[14186-14198]"
    }, {
      "left" : "return append(newLine);",
      "right" : "return append(newLine);",
      "info" : "ReturnStatement[14217-14240]:ReturnStatement[14217-14240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14425-14533]:Block[14425-14533]"
    }, {
      "left" : "if (nullText == null)",
      "right" : "if (nullText == null)",
      "info" : "IfStatement[14435-14494]:IfStatement[14435-14494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14458-14494]:Block[14458-14494]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14472-14484]:ReturnStatement[14472-14484]"
    }, {
      "left" : "return append(nullText);",
      "right" : "return append(nullText);",
      "info" : "ReturnStatement[14503-14527]:ReturnStatement[14503-14527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14783-14908]:Block[14783-14908]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[14793-14854]:IfStatement[14793-14854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14810-14854]:Block[14810-14854]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[14824-14844]:ReturnStatement[14824-14844]"
    }, {
      "left" : "return append(obj.toString());",
      "right" : "return append(obj.toString());",
      "info" : "ReturnStatement[14864-14894]:ReturnStatement[14864-14894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15157-15478]:Block[15157-15478]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15167-15228]:IfStatement[15167-15228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15184-15228]:Block[15184-15228]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15198-15218]:ReturnStatement[15198-15218]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[15237-15263]:VariableDeclarationStatement[15237-15263]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[15272-15451]:IfStatement[15272-15451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15288-15451]:Block[15288-15451]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[15302-15321]:VariableDeclarationStatement[15302-15321]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[15334-15363]:ExpressionStatement[15334-15363]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[15376-15413]:ExpressionStatement[15376-15413]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[15426-15441]:ExpressionStatement[15426-15441]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15460-15472]:ReturnStatement[15460-15472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15889-16504]:Block[15889-16504]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15899-15960]:IfStatement[15899-15960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15916-15960]:Block[15916-15960]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15930-15950]:ReturnStatement[15930-15950]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[15969-16112]:IfStatement[15969-16112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16018-16112]:Block[16018-16112]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[16032-16102]:ThrowStatement[16032-16102]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[16121-16267]:IfStatement[16121-16267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16177-16267]:Block[16177-16267]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[16191-16257]:ThrowStatement[16191-16257]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[16276-16477]:IfStatement[16276-16477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16292-16477]:Block[16292-16477]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16306-16325]:VariableDeclarationStatement[16306-16325]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[16338-16367]:ExpressionStatement[16338-16367]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[16380-16439]:ExpressionStatement[16380-16439]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[16452-16467]:ExpressionStatement[16452-16467]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16486-16498]:ReturnStatement[16486-16498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16773-17094]:Block[16773-17094]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[16783-16844]:IfStatement[16783-16844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16800-16844]:Block[16800-16844]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[16814-16834]:ReturnStatement[16814-16834]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[16853-16879]:VariableDeclarationStatement[16853-16879]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[16888-17067]:IfStatement[16888-17067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16904-17067]:Block[16904-17067]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16918-16937]:VariableDeclarationStatement[16918-16937]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[16950-16979]:ExpressionStatement[16950-16979]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[16992-17029]:ExpressionStatement[16992-17029]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[17042-17057]:ExpressionStatement[17042-17057]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17076-17088]:ReturnStatement[17076-17088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17518-18133]:Block[17518-18133]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[17528-17589]:IfStatement[17528-17589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17545-17589]:Block[17545-17589]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[17559-17579]:ReturnStatement[17559-17579]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[17598-17741]:IfStatement[17598-17741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17647-17741]:Block[17647-17741]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[17661-17731]:ThrowStatement[17661-17731]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[17750-17896]:IfStatement[17750-17896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17806-17896]:Block[17806-17896]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[17820-17886]:ThrowStatement[17820-17886]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[17905-18106]:IfStatement[17905-18106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17921-18106]:Block[17921-18106]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[17935-17954]:VariableDeclarationStatement[17935-17954]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[17967-17996]:ExpressionStatement[17967-17996]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[18009-18068]:ExpressionStatement[18009-18068]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[18081-18096]:ExpressionStatement[18081-18096]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18115-18127]:ReturnStatement[18115-18127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18408-18745]:Block[18408-18745]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[18418-18479]:IfStatement[18418-18479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18435-18479]:Block[18435-18479]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[18449-18469]:ReturnStatement[18449-18469]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[18488-18514]:VariableDeclarationStatement[18488-18514]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[18523-18718]:IfStatement[18523-18718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18539-18718]:Block[18539-18718]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[18553-18572]:VariableDeclarationStatement[18553-18572]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[18585-18614]:ExpressionStatement[18585-18614]"
    }, {
      "left" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[18627-18680]:ExpressionStatement[18627-18680]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[18693-18708]:ExpressionStatement[18693-18708]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18727-18739]:ReturnStatement[18727-18739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19168-19783]:Block[19168-19783]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[19178-19239]:IfStatement[19178-19239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19195-19239]:Block[19195-19239]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[19209-19229]:ReturnStatement[19209-19229]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[19248-19391]:IfStatement[19248-19391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19297-19391]:Block[19297-19391]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[19311-19381]:ThrowStatement[19311-19381]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[19400-19546]:IfStatement[19400-19546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19456-19546]:Block[19456-19546]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[19470-19536]:ThrowStatement[19470-19536]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[19555-19756]:IfStatement[19555-19756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19571-19756]:Block[19571-19756]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[19585-19604]:VariableDeclarationStatement[19585-19604]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[19617-19646]:ExpressionStatement[19617-19646]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[19659-19718]:ExpressionStatement[19659-19718]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[19731-19746]:ExpressionStatement[19731-19746]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[19765-19777]:ReturnStatement[19765-19777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20043-20377]:Block[20043-20377]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20053-20116]:IfStatement[20053-20116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20072-20116]:Block[20072-20116]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20086-20106]:ReturnStatement[20086-20106]"
    }, {
      "left" : "int strLen = chars.length;",
      "right" : "int strLen = chars.length;",
      "info" : "VariableDeclarationStatement[20125-20151]:VariableDeclarationStatement[20125-20151]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[20160-20350]:IfStatement[20160-20350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20176-20350]:Block[20176-20350]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[20190-20209]:VariableDeclarationStatement[20190-20209]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[20222-20251]:ExpressionStatement[20222-20251]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[20264-20312]:ExpressionStatement[20264-20312]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[20325-20340]:ExpressionStatement[20325-20340]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20359-20371]:ReturnStatement[20359-20371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20791-21416]:Block[20791-21416]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20801-20864]:IfStatement[20801-20864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20820-20864]:Block[20820-20864]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20834-20854]:ReturnStatement[20834-20854]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > chars.length)",
      "right" : "if (startIndex < 0 || startIndex > chars.length)",
      "info" : "IfStatement[20873-21021]:IfStatement[20873-21021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20922-21021]:Block[20922-21021]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "info" : "ThrowStatement[20936-21011]:ThrowStatement[20936-21011]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > chars.length)",
      "right" : "if (length < 0 || (startIndex + length) > chars.length)",
      "info" : "IfStatement[21030-21181]:IfStatement[21030-21181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21086-21181]:Block[21086-21181]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[21100-21171]:ThrowStatement[21100-21171]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[21190-21389]:IfStatement[21190-21389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21206-21389]:Block[21206-21389]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[21220-21239]:VariableDeclarationStatement[21220-21239]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[21252-21281]:ExpressionStatement[21252-21281]"
    }, {
      "left" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "right" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "info" : "ExpressionStatement[21294-21351]:ExpressionStatement[21294-21351]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[21364-21379]:ExpressionStatement[21364-21379]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[21398-21410]:ReturnStatement[21398-21410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21620-22078]:Block[21620-22078]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[21630-22051]:IfStatement[21630-22051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21641-21826]:Block[21641-21826]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[21655-21680]:ExpressionStatement[21655-21680]"
    }, {
      "left" : "buffer[size++] = 't';",
      "right" : "buffer[size++] = 't';",
      "info" : "ExpressionStatement[21693-21714]:ExpressionStatement[21693-21714]"
    }, {
      "left" : "buffer[size++] = 'r';",
      "right" : "buffer[size++] = 'r';",
      "info" : "ExpressionStatement[21727-21748]:ExpressionStatement[21727-21748]"
    }, {
      "left" : "buffer[size++] = 'u';",
      "right" : "buffer[size++] = 'u';",
      "info" : "ExpressionStatement[21761-21782]:ExpressionStatement[21761-21782]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[21795-21816]:ExpressionStatement[21795-21816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21832-22051]:Block[21832-22051]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[21846-21871]:ExpressionStatement[21846-21871]"
    }, {
      "left" : "buffer[size++] = 'f';",
      "right" : "buffer[size++] = 'f';",
      "info" : "ExpressionStatement[21884-21905]:ExpressionStatement[21884-21905]"
    }, {
      "left" : "buffer[size++] = 'a';",
      "right" : "buffer[size++] = 'a';",
      "info" : "ExpressionStatement[21918-21939]:ExpressionStatement[21918-21939]"
    }, {
      "left" : "buffer[size++] = 'l';",
      "right" : "buffer[size++] = 'l';",
      "info" : "ExpressionStatement[21952-21973]:ExpressionStatement[21952-21973]"
    }, {
      "left" : "buffer[size++] = 's';",
      "right" : "buffer[size++] = 's';",
      "info" : "ExpressionStatement[21986-22007]:ExpressionStatement[21986-22007]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[22020-22041]:ExpressionStatement[22020-22041]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22060-22072]:ReturnStatement[22060-22072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22270-22388]:Block[22270-22388]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[22280-22299]:VariableDeclarationStatement[22280-22299]"
    }, {
      "left" : "ensureCapacity(len + 1);",
      "right" : "ensureCapacity(len + 1);",
      "info" : "ExpressionStatement[22308-22332]:ExpressionStatement[22308-22332]"
    }, {
      "left" : "buffer[size++] = ch;",
      "right" : "buffer[size++] = ch;",
      "info" : "ExpressionStatement[22341-22361]:ExpressionStatement[22341-22361]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22370-22382]:ReturnStatement[22370-22382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22619-22672]:Block[22619-22672]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22629-22666]:ReturnStatement[22629-22666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22904-22957]:Block[22904-22957]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22914-22951]:ReturnStatement[22914-22951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23191-23244]:Block[23191-23244]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23201-23238]:ReturnStatement[23201-23238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23480-23533]:Block[23480-23533]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23490-23527]:ReturnStatement[23490-23527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24092-24407]:Block[24092-24407]"
    }, {
      "left" : "if (array != null && array.length > 0)",
      "right" : "if (array != null && array.length > 0)",
      "info" : "IfStatement[24102-24380]:IfStatement[24102-24380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24141-24380]:Block[24141-24380]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[24155-24204]:ExpressionStatement[24155-24204]"
    }, {
      "left" : "append(array[0]);",
      "right" : "append(array[0]);",
      "info" : "ExpressionStatement[24217-24234]:ExpressionStatement[24217-24234]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[24247-24370]:ForStatement[24247-24370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24286-24370]:Block[24286-24370]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[24304-24322]:ExpressionStatement[24304-24322]"
    }, {
      "left" : "append(array[i]);",
      "right" : "append(array[i]);",
      "info" : "ExpressionStatement[24339-24356]:ExpressionStatement[24339-24356]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[24389-24401]:ReturnStatement[24389-24401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24902-25269]:Block[24902-25269]"
    }, {
      "left" : "if (coll != null && coll.size() > 0)",
      "right" : "if (coll != null && coll.size() > 0)",
      "info" : "IfStatement[24912-25242]:IfStatement[24912-25242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24949-25242]:Block[24949-25242]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[24963-25012]:ExpressionStatement[24963-25012]"
    }, {
      "left" : "Iterator it = coll.iterator();",
      "right" : "Iterator it = coll.iterator();",
      "info" : "VariableDeclarationStatement[25025-25055]:VariableDeclarationStatement[25025-25055]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[25068-25232]:WhileStatement[25068-25232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25089-25232]:Block[25089-25232]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[25107-25125]:ExpressionStatement[25107-25125]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[25142-25218]:IfStatement[25142-25218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25160-25218]:Block[25160-25218]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[25182-25200]:ExpressionStatement[25182-25200]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[25251-25263]:ReturnStatement[25251-25263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25753-26056]:Block[25753-26056]"
    }, {
      "left" : "if (it != null)",
      "right" : "if (it != null)",
      "info" : "IfStatement[25763-26029]:IfStatement[25763-26029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25779-26029]:Block[25779-26029]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[25793-25842]:ExpressionStatement[25793-25842]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[25855-26019]:WhileStatement[25855-26019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25876-26019]:Block[25876-26019]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[25894-25912]:ExpressionStatement[25894-25912]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[25929-26005]:IfStatement[25929-26005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25947-26005]:Block[25947-26005]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[25969-25987]:ExpressionStatement[25969-25987]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[26038-26050]:ReturnStatement[26038-26050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26457-26668]:Block[26457-26668]"
    }, {
      "left" : "if (length >= 0)",
      "right" : "if (length >= 0)",
      "info" : "IfStatement[26467-26641]:IfStatement[26467-26641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26484-26641]:Block[26484-26641]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[26498-26528]:ExpressionStatement[26498-26528]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[26541-26631]:ForStatement[26541-26631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26574-26631]:Block[26574-26631]"
    }, {
      "left" : "buffer[size++] = padChar;",
      "right" : "buffer[size++] = padChar;",
      "info" : "ExpressionStatement[26592-26617]:ExpressionStatement[26592-26617]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[26650-26662]:ReturnStatement[26650-26662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27348-27956]:Block[27348-27956]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[27358-27929]:IfStatement[27358-27929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27373-27929]:Block[27373-27929]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[27387-27416]:ExpressionStatement[27387-27416]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[27429-27489]:VariableDeclarationStatement[27429-27489]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[27502-27528]:VariableDeclarationStatement[27502-27528]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[27541-27892]:IfStatement[27541-27892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27562-27645]:Block[27562-27645]"
    }, {
      "left" : "str.getChars(strLen - width, strLen, buffer, size);",
      "right" : "str.getChars(strLen - width, strLen, buffer, size);",
      "info" : "ExpressionStatement[27580-27631]:ExpressionStatement[27580-27631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27651-27892]:Block[27651-27892]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[27669-27697]:VariableDeclarationStatement[27669-27697]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[27714-27814]:ForStatement[27714-27814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27747-27814]:Block[27747-27814]"
    }, {
      "left" : "buffer[size + i] = padChar;",
      "right" : "buffer[size + i] = padChar;",
      "info" : "ExpressionStatement[27769-27796]:ExpressionStatement[27769-27796]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size + padLen);",
      "right" : "str.getChars(0, strLen, buffer, size + padLen);",
      "info" : "ExpressionStatement[27831-27878]:ExpressionStatement[27831-27878]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[27905-27919]:ExpressionStatement[27905-27919]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[27938-27950]:ReturnStatement[27938-27950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28509-28595]:Block[28509-28595]"
    }, {
      "left" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[28519-28589]:ReturnStatement[28519-28589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29197-29792]:Block[29197-29792]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[29207-29765]:IfStatement[29207-29765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29222-29765]:Block[29222-29765]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[29236-29265]:ExpressionStatement[29236-29265]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[29278-29338]:VariableDeclarationStatement[29278-29338]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[29351-29377]:VariableDeclarationStatement[29351-29377]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[29390-29728]:IfStatement[29390-29728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29411-29481]:Block[29411-29481]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size);",
      "right" : "str.getChars(0, strLen, buffer, size);",
      "info" : "ExpressionStatement[29429-29467]:ExpressionStatement[29429-29467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29487-29728]:Block[29487-29728]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[29505-29533]:VariableDeclarationStatement[29505-29533]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size);",
      "right" : "str.getChars(0, strLen, buffer, size);",
      "info" : "ExpressionStatement[29550-29588]:ExpressionStatement[29550-29588]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[29605-29714]:ForStatement[29605-29714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29638-29714]:Block[29638-29714]"
    }, {
      "left" : "buffer[size + strLen + i] = padChar;",
      "right" : "buffer[size + strLen + i] = padChar;",
      "info" : "ExpressionStatement[29660-29696]:ExpressionStatement[29660-29696]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[29741-29755]:ExpressionStatement[29741-29755]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[29774-29786]:ReturnStatement[29774-29786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30340-30427]:Block[30340-30427]"
    }, {
      "left" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[30350-30421]:ReturnStatement[30350-30421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30915-31049]:Block[30915-31049]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[30925-30997]:IfStatement[30925-30997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30942-30997]:Block[30942-30997]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[30956-30987]:ReturnStatement[30956-30987]"
    }, {
      "left" : "return insert(index, obj.toString());",
      "right" : "return insert(index, obj.toString());",
      "info" : "ReturnStatement[31006-31043]:ReturnStatement[31006-31043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31431-31886]:Block[31431-31886]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[31441-31462]:ExpressionStatement[31441-31462]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[31471-31527]:IfStatement[31471-31527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31488-31527]:Block[31488-31527]"
    }, {
      "left" : "str = nullText;",
      "right" : "str = nullText;",
      "info" : "ExpressionStatement[31502-31517]:ExpressionStatement[31502-31517]"
    }, {
      "left" : "int strLen = (str == null ? 0 : str.length());",
      "right" : "int strLen = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[31536-31582]:VariableDeclarationStatement[31536-31582]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[31591-31859]:IfStatement[31591-31859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31607-31859]:Block[31607-31859]"
    }, {
      "left" : "int newSize = size + strLen;",
      "right" : "int newSize = size + strLen;",
      "info" : "VariableDeclarationStatement[31621-31649]:VariableDeclarationStatement[31621-31649]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[31662-31686]:ExpressionStatement[31662-31686]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "info" : "ExpressionStatement[31699-31769]:ExpressionStatement[31699-31769]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[31782-31797]:ExpressionStatement[31782-31797]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, index);",
      "right" : "str.getChars(0, strLen, buffer, index);",
      "info" : "ExpressionStatement[31810-31849]:ExpressionStatement[31810-31849]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[31868-31880]:ReturnStatement[31868-31880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32285-32696]:Block[32285-32696]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[32295-32316]:ExpressionStatement[32295-32316]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[32325-32399]:IfStatement[32325-32399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32344-32399]:Block[32344-32399]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[32358-32389]:ReturnStatement[32358-32389]"
    }, {
      "left" : "int len = chars.length;",
      "right" : "int len = chars.length;",
      "info" : "VariableDeclarationStatement[32408-32431]:VariableDeclarationStatement[32408-32431]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[32440-32669]:IfStatement[32440-32669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32453-32669]:Block[32453-32669]"
    }, {
      "left" : "ensureCapacity(size + len);",
      "right" : "ensureCapacity(size + len);",
      "info" : "ExpressionStatement[32467-32494]:ExpressionStatement[32467-32494]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "info" : "ExpressionStatement[32507-32574]:ExpressionStatement[32507-32574]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, index, len);",
      "right" : "System.arraycopy(chars, 0, buffer, index, len);",
      "info" : "ExpressionStatement[32587-32634]:ExpressionStatement[32587-32634]"
    }, {
      "left" : "size += len;",
      "right" : "size += len;",
      "info" : "ExpressionStatement[32647-32659]:ExpressionStatement[32647-32659]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[32678-32690]:ReturnStatement[32678-32690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33299-33997]:Block[33299-33997]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[33309-33330]:ExpressionStatement[33309-33330]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[33339-33413]:IfStatement[33339-33413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33358-33413]:Block[33358-33413]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[33372-33403]:ReturnStatement[33372-33403]"
    }, {
      "left" : "if (offset < 0 || offset > chars.length)",
      "right" : "if (offset < 0 || offset > chars.length)",
      "info" : "IfStatement[33422-33558]:IfStatement[33422-33558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33463-33558]:Block[33463-33558]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "info" : "ThrowStatement[33477-33548]:ThrowStatement[33477-33548]"
    }, {
      "left" : "if (length < 0 || offset + length > chars.length)",
      "right" : "if (length < 0 || offset + length > chars.length)",
      "info" : "IfStatement[33567-33712]:IfStatement[33567-33712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33617-33712]:Block[33617-33712]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[33631-33702]:ThrowStatement[33631-33702]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[33721-33970]:IfStatement[33721-33970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33737-33970]:Block[33737-33970]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[33751-33781]:ExpressionStatement[33751-33781]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "info" : "ExpressionStatement[33794-33864]:ExpressionStatement[33794-33864]"
    }, {
      "left" : "System.arraycopy(chars, offset, buffer, index, length);",
      "right" : "System.arraycopy(chars, offset, buffer, index, length);",
      "info" : "ExpressionStatement[33877-33932]:ExpressionStatement[33877-33932]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[33945-33960]:ExpressionStatement[33945-33960]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[33979-33991]:ReturnStatement[33979-33991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34323-35018]:Block[34323-35018]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[34333-34354]:ExpressionStatement[34333-34354]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[34363-34991]:IfStatement[34363-34991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34374-34662]:Block[34374-34662]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[34388-34413]:ExpressionStatement[34388-34413]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "info" : "ExpressionStatement[34426-34491]:ExpressionStatement[34426-34491]"
    }, {
      "left" : "buffer[index++] = 't';",
      "right" : "buffer[index++] = 't';",
      "info" : "ExpressionStatement[34504-34526]:ExpressionStatement[34504-34526]"
    }, {
      "left" : "buffer[index++] = 'r';",
      "right" : "buffer[index++] = 'r';",
      "info" : "ExpressionStatement[34539-34561]:ExpressionStatement[34539-34561]"
    }, {
      "left" : "buffer[index++] = 'u';",
      "right" : "buffer[index++] = 'u';",
      "info" : "ExpressionStatement[34574-34596]:ExpressionStatement[34574-34596]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[34609-34629]:ExpressionStatement[34609-34629]"
    }, {
      "left" : "size += 4;",
      "right" : "size += 4;",
      "info" : "ExpressionStatement[34642-34652]:ExpressionStatement[34642-34652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34668-34991]:Block[34668-34991]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[34682-34707]:ExpressionStatement[34682-34707]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "info" : "ExpressionStatement[34720-34785]:ExpressionStatement[34720-34785]"
    }, {
      "left" : "buffer[index++] = 'f';",
      "right" : "buffer[index++] = 'f';",
      "info" : "ExpressionStatement[34798-34820]:ExpressionStatement[34798-34820]"
    }, {
      "left" : "buffer[index++] = 'a';",
      "right" : "buffer[index++] = 'a';",
      "info" : "ExpressionStatement[34833-34855]:ExpressionStatement[34833-34855]"
    }, {
      "left" : "buffer[index++] = 'l';",
      "right" : "buffer[index++] = 'l';",
      "info" : "ExpressionStatement[34868-34890]:ExpressionStatement[34868-34890]"
    }, {
      "left" : "buffer[index++] = 's';",
      "right" : "buffer[index++] = 's';",
      "info" : "ExpressionStatement[34903-34925]:ExpressionStatement[34903-34925]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[34938-34958]:ExpressionStatement[34938-34958]"
    }, {
      "left" : "size += 5;",
      "right" : "size += 5;",
      "info" : "ExpressionStatement[34971-34981]:ExpressionStatement[34971-34981]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[35000-35012]:ReturnStatement[35000-35012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35341-35554]:Block[35341-35554]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[35351-35372]:ExpressionStatement[35351-35372]"
    }, {
      "left" : "ensureCapacity(size + 1);",
      "right" : "ensureCapacity(size + 1);",
      "info" : "ExpressionStatement[35381-35406]:ExpressionStatement[35381-35406]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "info" : "ExpressionStatement[35415-35480]:ExpressionStatement[35415-35480]"
    }, {
      "left" : "buffer[index] = value;",
      "right" : "buffer[index] = value;",
      "info" : "ExpressionStatement[35489-35511]:ExpressionStatement[35489-35511]"
    }, {
      "left" : "size++;",
      "right" : "size++;",
      "info" : "ExpressionStatement[35520-35527]:ExpressionStatement[35520-35527]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[35536-35548]:ReturnStatement[35536-35548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35876-35936]:Block[35876-35936]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[35886-35930]:ReturnStatement[35886-35930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36259-36319]:Block[36259-36319]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[36269-36313]:ReturnStatement[36269-36313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36643-36703]:Block[36643-36703]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[36653-36697]:ReturnStatement[36653-36697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37028-37088]:Block[37028-37088]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[37038-37082]:ReturnStatement[37038-37082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37551-37660]:Block[37551-37660]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "info" : "ExpressionStatement[37561-37633]:ExpressionStatement[37561-37633]"
    }, {
      "left" : "size -= len;",
      "right" : "size -= len;",
      "info" : "ExpressionStatement[37642-37654]:ExpressionStatement[37642-37654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38110-38319]:Block[38110-38319]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[38120-38167]:ExpressionStatement[38120-38167]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[38176-38208]:VariableDeclarationStatement[38176-38208]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[38217-38292]:IfStatement[38217-38292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38230-38292]:Block[38230-38292]"
    }, {
      "left" : "deleteImpl(startIndex, endIndex, len);",
      "right" : "deleteImpl(startIndex, endIndex, len);",
      "info" : "ExpressionStatement[38244-38282]:ExpressionStatement[38244-38282]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[38301-38313]:ReturnStatement[38301-38313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38609-39025]:Block[38609-39025]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[38619-38998]:ForStatement[38619-38998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38650-38998]:Block[38650-38998]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[38664-38988]:IfStatement[38664-38988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38685-38988]:Block[38685-38988]"
    }, {
      "left" : "int start = i;",
      "right" : "int start = i;",
      "info" : "VariableDeclarationStatement[38703-38717]:VariableDeclarationStatement[38703-38717]"
    }, {
      "left" : "while (++i < size)",
      "right" : "while (++i < size)",
      "info" : "WhileStatement[38734-38868]:WhileStatement[38734-38868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38753-38868]:Block[38753-38868]"
    }, {
      "left" : "if (buffer[i] != ch)",
      "right" : "if (buffer[i] != ch)",
      "info" : "IfStatement[38775-38850]:IfStatement[38775-38850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38796-38850]:Block[38796-38850]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[38822-38828]:BreakStatement[38822-38828]"
    }, {
      "left" : "int len = i - start;",
      "right" : "int len = i - start;",
      "info" : "VariableDeclarationStatement[38885-38905]:VariableDeclarationStatement[38885-38905]"
    }, {
      "left" : "deleteImpl(start, i, len);",
      "right" : "deleteImpl(start, i, len);",
      "info" : "ExpressionStatement[38922-38948]:ExpressionStatement[38922-38948]"
    }, {
      "left" : "i -= len;",
      "right" : "i -= len;",
      "info" : "ExpressionStatement[38965-38974]:ExpressionStatement[38965-38974]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39007-39019]:ReturnStatement[39007-39019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39239-39431]:Block[39239-39431]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[39249-39404]:ForStatement[39249-39404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39280-39404]:Block[39280-39404]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[39294-39394]:IfStatement[39294-39394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39315-39394]:Block[39315-39394]"
    }, {
      "left" : "deleteImpl(i, i + 1, 1);",
      "right" : "deleteImpl(i, i + 1, 1);",
      "info" : "ExpressionStatement[39333-39357]:ExpressionStatement[39333-39357]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39374-39380]:BreakStatement[39374-39380]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39413-39425]:ReturnStatement[39413-39425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39742-40041]:Block[39742-40041]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[39752-39795]:VariableDeclarationStatement[39752-39795]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[39804-40014]:IfStatement[39804-40014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39817-40014]:Block[39817-40014]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[39831-39859]:VariableDeclarationStatement[39831-39859]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[39872-40004]:WhileStatement[39872-40004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39891-40004]:Block[39891-40004]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[39909-39945]:ExpressionStatement[39909-39945]"
    }, {
      "left" : "index = indexOf(str, index);",
      "right" : "index = indexOf(str, index);",
      "info" : "ExpressionStatement[39962-39990]:ExpressionStatement[39962-39990]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40023-40035]:ReturnStatement[40023-40035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40276-40527]:Block[40276-40527]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[40286-40329]:VariableDeclarationStatement[40286-40329]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[40338-40500]:IfStatement[40338-40500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40351-40500]:Block[40351-40500]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[40365-40393]:VariableDeclarationStatement[40365-40393]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[40406-40490]:IfStatement[40406-40490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40422-40490]:Block[40422-40490]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[40440-40476]:ExpressionStatement[40440-40476]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40509-40521]:ReturnStatement[40509-40521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41079-41138]:Block[41079-41138]"
    }, {
      "left" : "return replace(matcher, null, 0, size, -1);",
      "right" : "return replace(matcher, null, 0, size, -1);",
      "info" : "ReturnStatement[41089-41132]:ReturnStatement[41089-41132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41612-41670]:Block[41612-41670]"
    }, {
      "left" : "return replace(matcher, null, 0, size, 1);",
      "right" : "return replace(matcher, null, 0, size, 1);",
      "info" : "ReturnStatement[41622-41664]:ReturnStatement[41622-41664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42362-42736]:Block[42362-42736]"
    }, {
      "left" : "int newSize = size - removeLen + insertLen;",
      "right" : "int newSize = size - removeLen + insertLen;",
      "info" : "VariableDeclarationStatement[42372-42415]:VariableDeclarationStatement[42372-42415]"
    }, {
      "left" : "if (insertLen != removeLen)",
      "right" : "if (insertLen != removeLen)",
      "info" : "IfStatement[42424-42625]:IfStatement[42424-42625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42452-42625]:Block[42452-42625]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[42466-42490]:ExpressionStatement[42466-42490]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "info" : "ExpressionStatement[42503-42587]:ExpressionStatement[42503-42587]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[42600-42615]:ExpressionStatement[42600-42615]"
    }, {
      "left" : "if (insertLen > 0)",
      "right" : "if (insertLen > 0)",
      "info" : "IfStatement[42634-42730]:IfStatement[42634-42730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42653-42730]:Block[42653-42730]"
    }, {
      "left" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "right" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "info" : "ExpressionStatement[42667-42720]:ExpressionStatement[42667-42720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43372-43617]:Block[43372-43617]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[43382-43429]:ExpressionStatement[43382-43429]"
    }, {
      "left" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[43438-43501]:VariableDeclarationStatement[43438-43501]"
    }, {
      "left" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "right" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "info" : "ExpressionStatement[43510-43590]:ExpressionStatement[43510-43590]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43599-43611]:ReturnStatement[43599-43611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44003-44235]:Block[44003-44235]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[44013-44208]:IfStatement[44013-44208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44036-44208]:Block[44036-44208]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[44050-44198]:ForStatement[44050-44198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44081-44198]:Block[44081-44198]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[44099-44184]:IfStatement[44099-44184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44124-44184]:Block[44124-44184]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[44146-44166]:ExpressionStatement[44146-44166]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44217-44229]:ReturnStatement[44217-44229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44559-44818]:Block[44559-44818]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[44569-44791]:IfStatement[44569-44791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44592-44791]:Block[44592-44791]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[44606-44781]:ForStatement[44606-44781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44637-44781]:Block[44637-44781]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[44655-44767]:IfStatement[44655-44767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44680-44767]:Block[44680-44767]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[44702-44722]:ExpressionStatement[44702-44722]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[44743-44749]:BreakStatement[44743-44749]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44800-44812]:ReturnStatement[44800-44812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45272-45734]:Block[45272-45734]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[45282-45343]:VariableDeclarationStatement[45282-45343]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[45352-45707]:IfStatement[45352-45707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45371-45707]:Block[45371-45707]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[45385-45449]:VariableDeclarationStatement[45385-45449]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[45462-45496]:VariableDeclarationStatement[45462-45496]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[45509-45697]:WhileStatement[45509-45697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45528-45697]:Block[45528-45697]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[45546-45619]:ExpressionStatement[45546-45619]"
    }, {
      "left" : "index = indexOf(searchStr, index + replaceLen);",
      "right" : "index = indexOf(searchStr, index + replaceLen);",
      "info" : "ExpressionStatement[45636-45683]:ExpressionStatement[45636-45683]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[45716-45728]:ReturnStatement[45716-45728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46111-46510]:Block[46111-46510]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[46121-46182]:VariableDeclarationStatement[46121-46182]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[46191-46483]:IfStatement[46191-46483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46210-46483]:Block[46210-46483]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[46224-46258]:VariableDeclarationStatement[46224-46258]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[46271-46473]:IfStatement[46271-46473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46287-46473]:Block[46287-46473]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[46305-46369]:VariableDeclarationStatement[46305-46369]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[46386-46459]:ExpressionStatement[46386-46459]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46492-46504]:ReturnStatement[46492-46504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47172-47237]:Block[47172-47237]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, -1);",
      "right" : "return replace(matcher, replaceStr, 0, size, -1);",
      "info" : "ReturnStatement[47182-47231]:ReturnStatement[47182-47231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47812-47876]:Block[47812-47876]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, 1);",
      "right" : "return replace(matcher, replaceStr, 0, size, 1);",
      "info" : "ReturnStatement[47822-47870]:ReturnStatement[47822-47870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48939-49087]:Block[48939-49087]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[48949-48996]:ExpressionStatement[48949-48996]"
    }, {
      "left" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "right" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "info" : "ReturnStatement[49005-49081]:ReturnStatement[49005-49081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49956-50614]:Block[49956-50614]"
    }, {
      "left" : "if (matcher == null || size == 0)",
      "right" : "if (matcher == null || size == 0)",
      "info" : "IfStatement[49966-50036]:IfStatement[49966-50036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50000-50036]:Block[50000-50036]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50014-50026]:ReturnStatement[50014-50026]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[50045-50109]:VariableDeclarationStatement[50045-50109]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[50118-50138]:VariableDeclarationStatement[50118-50138]"
    }, {
      "left" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "right" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "info" : "ForStatement[50147-50587]:ForStatement[50147-50587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50200-50587]:Block[50200-50587]"
    }, {
      "left" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "right" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "info" : "VariableDeclarationStatement[50214-50264]:VariableDeclarationStatement[50214-50264]"
    }, {
      "left" : "if (removeLen > 0)",
      "right" : "if (removeLen > 0)",
      "info" : "IfStatement[50277-50577]:IfStatement[50277-50577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50296-50577]:Block[50296-50577]"
    }, {
      "left" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[50314-50379]:ExpressionStatement[50314-50379]"
    }, {
      "left" : "to = to - removeLen + replaceLen;",
      "right" : "to = to - removeLen + replaceLen;",
      "info" : "ExpressionStatement[50396-50429]:ExpressionStatement[50396-50429]"
    }, {
      "left" : "i = i + replaceLen - 1;",
      "right" : "i = i + replaceLen - 1;",
      "info" : "ExpressionStatement[50446-50469]:ExpressionStatement[50446-50469]"
    }, {
      "left" : "if (replaceCount > 0)",
      "right" : "if (replaceCount > 0)",
      "info" : "IfStatement[50486-50563]:IfStatement[50486-50563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50508-50563]:Block[50508-50563]"
    }, {
      "left" : "replaceCount--;",
      "right" : "replaceCount--;",
      "info" : "ExpressionStatement[50530-50545]:ExpressionStatement[50530-50545]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50596-50608]:ReturnStatement[50596-50608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50871-51241]:Block[50871-51241]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[50881-50932]:IfStatement[50881-50932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50896-50932]:Block[50896-50932]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50910-50922]:ReturnStatement[50910-50922]"
    }, {
      "left" : "int half = size / 2;",
      "right" : "int half = size / 2;",
      "info" : "VariableDeclarationStatement[50950-50970]:VariableDeclarationStatement[50950-50970]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[50979-50999]:VariableDeclarationStatement[50979-50999]"
    }, {
      "left" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "right" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "info" : "ForStatement[51008-51214]:ForStatement[51008-51214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51089-51214]:Block[51089-51214]"
    }, {
      "left" : "char swap = buf[leftIdx];",
      "right" : "char swap = buf[leftIdx];",
      "info" : "VariableDeclarationStatement[51103-51128]:VariableDeclarationStatement[51103-51128]"
    }, {
      "left" : "buf[leftIdx] = buf[rightIdx];",
      "right" : "buf[leftIdx] = buf[rightIdx];",
      "info" : "ExpressionStatement[51141-51170]:ExpressionStatement[51141-51170]"
    }, {
      "left" : "buf[rightIdx] = swap;",
      "right" : "buf[rightIdx] = swap;",
      "info" : "ExpressionStatement[51183-51204]:ExpressionStatement[51183-51204]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51223-51235]:ReturnStatement[51223-51235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51526-51972]:Block[51526-51972]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[51536-51587]:IfStatement[51536-51587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51551-51587]:Block[51551-51587]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51565-51577]:ReturnStatement[51565-51577]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[51596-51611]:VariableDeclarationStatement[51596-51611]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[51620-51640]:VariableDeclarationStatement[51620-51640]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[51649-51661]:VariableDeclarationStatement[51649-51661]"
    }, {
      "left" : "while (pos < len && buf[pos] <= ' ')",
      "right" : "while (pos < len && buf[pos] <= ' ')",
      "info" : "WhileStatement[51670-51737]:WhileStatement[51670-51737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51707-51737]:Block[51707-51737]"
    }, {
      "left" : "pos++;",
      "right" : "pos++;",
      "info" : "ExpressionStatement[51721-51727]:ExpressionStatement[51721-51727]"
    }, {
      "left" : "while (pos < len && buf[len - 1] <= ' ')",
      "right" : "while (pos < len && buf[len - 1] <= ' ')",
      "info" : "WhileStatement[51746-51817]:WhileStatement[51746-51817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51787-51817]:Block[51787-51817]"
    }, {
      "left" : "len--;",
      "right" : "len--;",
      "info" : "ExpressionStatement[51801-51807]:ExpressionStatement[51801-51807]"
    }, {
      "left" : "if (len < size)",
      "right" : "if (len < size)",
      "info" : "IfStatement[51826-51884]:IfStatement[51826-51884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51842-51884]:Block[51842-51884]"
    }, {
      "left" : "delete(len, size);",
      "right" : "delete(len, size);",
      "info" : "ExpressionStatement[51856-51874]:ExpressionStatement[51856-51874]"
    }, {
      "left" : "if (pos > 0)",
      "right" : "if (pos > 0)",
      "info" : "IfStatement[51893-51945]:IfStatement[51893-51945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51906-51945]:Block[51906-51945]"
    }, {
      "left" : "delete(0, pos);",
      "right" : "delete(0, pos);",
      "info" : "ExpressionStatement[51920-51935]:ExpressionStatement[51920-51935]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51954-51966]:ReturnStatement[51954-51966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52392-52776]:Block[52392-52776]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[52402-52456]:IfStatement[52402-52456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52419-52456]:Block[52419-52456]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52433-52446]:ReturnStatement[52433-52446]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[52465-52488]:VariableDeclarationStatement[52465-52488]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[52497-52547]:IfStatement[52497-52547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52511-52547]:Block[52511-52547]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52525-52537]:ReturnStatement[52525-52537]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[52556-52609]:IfStatement[52556-52609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52572-52609]:Block[52572-52609]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52586-52599]:ReturnStatement[52586-52599]"
    }, {
      "left" : "for (int i = 0; i < len; i++)",
      "right" : "for (int i = 0; i < len; i++)",
      "info" : "ForStatement[52618-52749]:ForStatement[52618-52749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52648-52749]:Block[52648-52749]"
    }, {
      "left" : "if (buffer[i] != str.charAt(i))",
      "right" : "if (buffer[i] != str.charAt(i))",
      "info" : "IfStatement[52662-52739]:IfStatement[52662-52739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52694-52739]:Block[52694-52739]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52712-52725]:ReturnStatement[52712-52725]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52758-52770]:ReturnStatement[52758-52770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53112-53534]:Block[53112-53534]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[53122-53176]:IfStatement[53122-53176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53139-53176]:Block[53139-53176]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53153-53166]:ReturnStatement[53153-53166]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[53185-53208]:VariableDeclarationStatement[53185-53208]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[53217-53267]:IfStatement[53217-53267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53231-53267]:Block[53231-53267]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53245-53257]:ReturnStatement[53245-53257]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[53276-53329]:IfStatement[53276-53329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53292-53329]:Block[53292-53329]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53306-53319]:ReturnStatement[53306-53319]"
    }, {
      "left" : "int pos = size - len;",
      "right" : "int pos = size - len;",
      "info" : "VariableDeclarationStatement[53338-53359]:VariableDeclarationStatement[53338-53359]"
    }, {
      "left" : "for (int i = 0; i < len; i++,pos++)",
      "right" : "for (int i = 0; i < len; i++,pos++)",
      "info" : "ForStatement[53368-53507]:ForStatement[53368-53507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53404-53507]:Block[53404-53507]"
    }, {
      "left" : "if (buffer[pos] != str.charAt(i))",
      "right" : "if (buffer[pos] != str.charAt(i))",
      "info" : "IfStatement[53418-53497]:IfStatement[53418-53497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53452-53497]:Block[53452-53497]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53470-53483]:ReturnStatement[53470-53483]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53516-53528]:ReturnStatement[53516-53528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53897-53943]:Block[53897-53943]"
    }, {
      "left" : "return substring(start, size);",
      "right" : "return substring(start, size);",
      "info" : "ReturnStatement[53907-53937]:ReturnStatement[53907-53937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54587-54720]:Block[54587-54720]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[54597-54644]:ExpressionStatement[54597-54644]"
    }, {
      "left" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "right" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "info" : "ReturnStatement[54653-54714]:ReturnStatement[54653-54714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55267-55486]:Block[55267-55486]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[55277-55480]:IfStatement[55277-55480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55294-55328]:Block[55294-55328]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[55308-55318]:ReturnStatement[55308-55318]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[55334-55480]:IfStatement[55334-55480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55354-55413]:Block[55354-55413]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[55368-55403]:ReturnStatement[55368-55403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55419-55480]:Block[55419-55480]"
    }, {
      "left" : "return new String(buffer, 0, length);",
      "right" : "return new String(buffer, 0, length);",
      "info" : "ReturnStatement[55433-55470]:ReturnStatement[55433-55470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56036-56267]:Block[56036-56267]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[56046-56261]:IfStatement[56046-56261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56063-56097]:Block[56063-56097]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[56077-56087]:ReturnStatement[56077-56087]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[56103-56261]:IfStatement[56103-56261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56123-56182]:Block[56123-56182]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[56137-56172]:ReturnStatement[56137-56172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56188-56261]:Block[56188-56261]"
    }, {
      "left" : "return new String(buffer, size - length, length);",
      "right" : "return new String(buffer, size - length, length);",
      "info" : "ReturnStatement[56202-56251]:ReturnStatement[56202-56251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57132-57453]:Block[57132-57453]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[57142-57191]:IfStatement[57142-57191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57157-57191]:Block[57157-57191]"
    }, {
      "left" : "index = 0;",
      "right" : "index = 0;",
      "info" : "ExpressionStatement[57171-57181]:ExpressionStatement[57171-57181]"
    }, {
      "left" : "if (length <= 0 || index >= size)",
      "right" : "if (length <= 0 || index >= size)",
      "info" : "IfStatement[57200-57268]:IfStatement[57200-57268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57234-57268]:Block[57234-57268]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[57248-57258]:ReturnStatement[57248-57258]"
    }, {
      "left" : "if (size <= index + length)",
      "right" : "if (size <= index + length)",
      "info" : "IfStatement[57277-57447]:IfStatement[57277-57447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57305-57376]:Block[57305-57376]"
    }, {
      "left" : "return new String(buffer, index, size - index);",
      "right" : "return new String(buffer, index, size - index);",
      "info" : "ReturnStatement[57319-57366]:ReturnStatement[57319-57366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57382-57447]:Block[57382-57447]"
    }, {
      "left" : "return new String(buffer, index, length);",
      "right" : "return new String(buffer, index, length);",
      "info" : "ReturnStatement[57396-57437]:ReturnStatement[57396-57437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57756-57958]:Block[57756-57958]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[57766-57790]:VariableDeclarationStatement[57766-57790]"
    }, {
      "left" : "for (int i = 0; i < thisBuf.length; i++)",
      "right" : "for (int i = 0; i < thisBuf.length; i++)",
      "info" : "ForStatement[57799-57930]:ForStatement[57799-57930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57840-57930]:Block[57840-57930]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[57854-57920]:IfStatement[57854-57920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57876-57920]:Block[57876-57920]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[57894-57906]:ReturnStatement[57894-57906]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[57939-57952]:ReturnStatement[57939-57952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58183-58227]:Block[58183-58227]"
    }, {
      "left" : "return indexOf(str, 0) >= 0;",
      "right" : "return indexOf(str, 0) >= 0;",
      "info" : "ReturnStatement[58193-58221]:ReturnStatement[58193-58221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58707-58755]:Block[58707-58755]"
    }, {
      "left" : "return indexOf(matcher, 0) >= 0;",
      "right" : "return indexOf(matcher, 0) >= 0;",
      "info" : "ReturnStatement[58717-58749]:ReturnStatement[58717-58749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59085-59123]:Block[59085-59123]"
    }, {
      "left" : "return indexOf(ch, 0);",
      "right" : "return indexOf(ch, 0);",
      "info" : "ReturnStatement[59095-59117]:ReturnStatement[59095-59117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59470-59798]:Block[59470-59798]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[59480-59527]:ExpressionStatement[59480-59527]"
    }, {
      "left" : "if (startIndex >= size)",
      "right" : "if (startIndex >= size)",
      "info" : "IfStatement[59536-59594]:IfStatement[59536-59594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59560-59594]:Block[59560-59594]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[59574-59584]:ReturnStatement[59574-59584]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[59603-59627]:VariableDeclarationStatement[59603-59627]"
    }, {
      "left" : "for (int i = startIndex; i < thisBuf.length; i++)",
      "right" : "for (int i = startIndex; i < thisBuf.length; i++)",
      "info" : "ForStatement[59636-59773]:ForStatement[59636-59773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59686-59773]:Block[59686-59773]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[59700-59763]:IfStatement[59700-59763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59722-59763]:Block[59722-59763]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[59740-59749]:ReturnStatement[59740-59749]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[59782-59792]:ReturnStatement[59782-59792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60168-60207]:Block[60168-60207]"
    }, {
      "left" : "return indexOf(str, 0);",
      "right" : "return indexOf(str, 0);",
      "info" : "ReturnStatement[60178-60201]:ReturnStatement[60178-60201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60719-61482]:Block[60719-61476]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[60729-60776]:ExpressionStatement[60729-60776]"
    }, {
      "left" : "if (str == null || startIndex >= size)",
      "right" : "if (str == null || startIndex >= size)",
      "info" : "IfStatement[60785-60858]:IfStatement[60785-60858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60824-60858]:Block[60824-60858]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[60838-60848]:ReturnStatement[60838-60848]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[60867-60893]:VariableDeclarationStatement[60867-60893]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[60902-60985]:IfStatement[60902-60985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60919-60985]:Block[60919-60985]"
    }, {
      "left" : "return indexOf(str.charAt(0), startIndex);",
      "right" : "return indexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[60933-60975]:ReturnStatement[60933-60975]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[60994-61053]:IfStatement[60994-61053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61011-61053]:Block[61011-61053]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[61025-61043]:ReturnStatement[61025-61043]"
    }, {
      "left" : "if (strLen > size)",
      "right" : "if (strLen > size)",
      "info" : "IfStatement[61062-61115]:IfStatement[61062-61115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61081-61115]:Block[61081-61115]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[61095-61105]:ReturnStatement[61095-61105]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[61124-61148]:VariableDeclarationStatement[61124-61148]"
    }, {
      "left" : "int len = thisBuf.length - strLen;",
      "right" : "int len = size - strLen + 1;",
      "info" : "VariableDeclarationStatement[61157-61191]:VariableDeclarationStatement[61157-61185]"
    }, {
      "left" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "right" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "info" : "LabeledStatement[61200-61457]:LabeledStatement[61194-61451]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[61215-61457]:ForStatement[61209-61451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61254-61457]:Block[61248-61451]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[61268-61425]:ForStatement[61262-61419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61301-61425]:Block[61295-61419]"
    }, {
      "left" : "if (str.charAt(j) != thisBuf[i + j])",
      "right" : "if (str.charAt(j) != thisBuf[i + j])",
      "info" : "IfStatement[61319-61411]:IfStatement[61313-61405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61356-61411]:Block[61350-61405]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[61378-61393]:ContinueStatement[61372-61387]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[61438-61447]:ReturnStatement[61432-61441]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[61466-61476]:ReturnStatement[61460-61470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61926-61969]:Block[61920-61963]"
    }, {
      "left" : "return indexOf(matcher, 0);",
      "right" : "return indexOf(matcher, 0);",
      "info" : "ReturnStatement[61936-61963]:ReturnStatement[61930-61957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62546-62930]:Block[62540-62924]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[62556-62603]:ExpressionStatement[62550-62597]"
    }, {
      "left" : "if (matcher == null || startIndex >= size)",
      "right" : "if (matcher == null || startIndex >= size)",
      "info" : "IfStatement[62612-62689]:IfStatement[62606-62683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62655-62689]:Block[62649-62683]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[62669-62679]:ReturnStatement[62663-62673]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[62698-62713]:VariableDeclarationStatement[62692-62707]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[62722-62742]:VariableDeclarationStatement[62716-62736]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[62751-62905]:ForStatement[62745-62899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62790-62905]:Block[62784-62899]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "right" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "info" : "IfStatement[62804-62895]:IfStatement[62798-62889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62854-62895]:Block[62848-62889]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[62872-62881]:ReturnStatement[62866-62875]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[62914-62924]:ReturnStatement[62908-62918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63262-63311]:Block[63256-63305]"
    }, {
      "left" : "return lastIndexOf(ch, size - 1);",
      "right" : "return lastIndexOf(ch, size - 1);",
      "info" : "ReturnStatement[63272-63305]:ReturnStatement[63266-63299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63660-63949]:Block[63654-63943]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[63670-63728]:ExpressionStatement[63664-63722]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[63737-63791]:IfStatement[63731-63785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63757-63791]:Block[63751-63785]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[63771-63781]:ReturnStatement[63765-63775]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[63800-63924]:ForStatement[63794-63918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63838-63924]:Block[63832-63918]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[63852-63914]:IfStatement[63846-63908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63873-63914]:Block[63867-63908]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[63891-63900]:ReturnStatement[63885-63894]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[63933-63943]:ReturnStatement[63927-63937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64321-64371]:Block[64315-64365]"
    }, {
      "left" : "return lastIndexOf(str, size - 1);",
      "right" : "return lastIndexOf(str, size - 1);",
      "info" : "ReturnStatement[64331-64365]:ReturnStatement[64325-64359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64885-65645]:Block[64879-65639]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[64895-64953]:ExpressionStatement[64889-64947]"
    }, {
      "left" : "if (str == null || startIndex < 0)",
      "right" : "if (str == null || startIndex < 0)",
      "info" : "IfStatement[64962-65031]:IfStatement[64956-65025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64997-65031]:Block[64991-65025]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[65011-65021]:ReturnStatement[65005-65015]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[65040-65066]:VariableDeclarationStatement[65034-65060]"
    }, {
      "left" : "if (strLen > 0 && strLen <= size)",
      "right" : "if (strLen > 0 && strLen <= size)",
      "info" : "IfStatement[65075-65620]:IfStatement[65069-65614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65109-65555]:Block[65103-65549]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[65123-65218]:IfStatement[65117-65212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65140-65218]:Block[65134-65212]"
    }, {
      "left" : "return lastIndexOf(str.charAt(0), startIndex);",
      "right" : "return lastIndexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[65158-65204]:ReturnStatement[65152-65198]"
    }, {
      "left" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "right" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "info" : "LabeledStatement[65232-65532]:LabeledStatement[65226-65526]"
    }, {
      "left" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "right" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "info" : "ForStatement[65251-65532]:ForStatement[65245-65526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65302-65532]:Block[65296-65526]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[65320-65492]:ForStatement[65314-65486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65353-65492]:Block[65347-65486]"
    }, {
      "left" : "if (str.charAt(j) != buffer[i + j])",
      "right" : "if (str.charAt(j) != buffer[i + j])",
      "info" : "IfStatement[65375-65474]:IfStatement[65369-65468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65411-65474]:Block[65405-65468]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[65437-65452]:ContinueStatement[65431-65446]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[65509-65518]:ReturnStatement[65503-65512]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[65561-65620]:IfStatement[65555-65614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65578-65620]:Block[65572-65614]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[65592-65610]:ReturnStatement[65586-65604]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[65629-65639]:ReturnStatement[65623-65633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66091-66141]:Block[66085-66135]"
    }, {
      "left" : "return lastIndexOf(matcher, size);",
      "right" : "return lastIndexOf(matcher, size);",
      "info" : "ReturnStatement[66101-66135]:ReturnStatement[66095-66129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66720-67121]:Block[66714-67115]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[66730-66788]:ExpressionStatement[66724-66782]"
    }, {
      "left" : "if (matcher == null || startIndex < 0)",
      "right" : "if (matcher == null || startIndex < 0)",
      "info" : "IfStatement[66797-66870]:IfStatement[66791-66864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66836-66870]:Block[66830-66864]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[66850-66860]:ReturnStatement[66844-66854]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[66879-66899]:VariableDeclarationStatement[66873-66893]"
    }, {
      "left" : "int endIndex = startIndex + 1;",
      "right" : "int endIndex = startIndex + 1;",
      "info" : "VariableDeclarationStatement[66908-66938]:VariableDeclarationStatement[66902-66932]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[66947-67096]:ForStatement[66941-67090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66985-67096]:Block[66979-67090]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "right" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "info" : "IfStatement[66999-67086]:IfStatement[66993-67080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67045-67086]:Block[67039-67080]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[67063-67072]:ReturnStatement[67057-67066]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[67105-67115]:ReturnStatement[67099-67109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68880-68929]:Block[68874-68923]"
    }, {
      "left" : "return new StrBuilderTokenizer();",
      "right" : "return new StrBuilderTokenizer();",
      "info" : "ReturnStatement[68890-68923]:ReturnStatement[68884-68917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69883-69929]:Block[69877-69923]"
    }, {
      "left" : "return new StrBuilderReader();",
      "right" : "return new StrBuilderReader();",
      "info" : "ReturnStatement[69893-69923]:ReturnStatement[69887-69917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70974-71020]:Block[70968-71014]"
    }, {
      "left" : "return new StrBuilderWriter();",
      "right" : "return new StrBuilderWriter();",
      "info" : "ReturnStatement[70984-71014]:ReturnStatement[70978-71008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72709-73209]:Block[72703-73203]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[72719-72774]:IfStatement[72713-72768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72738-72774]:Block[72732-72768]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[72752-72764]:ReturnStatement[72746-72758]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[72783-72849]:IfStatement[72777-72843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72812-72849]:Block[72806-72843]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[72826-72839]:ReturnStatement[72820-72833]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[72858-72887]:VariableDeclarationStatement[72852-72881]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[72896-72927]:VariableDeclarationStatement[72890-72921]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[72936-73182]:ForStatement[72930-73176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72972-73182]:Block[72966-73176]"
    }, {
      "left" : "char c1 = thisBuf[i];",
      "right" : "char c1 = thisBuf[i];",
      "info" : "VariableDeclarationStatement[72986-73007]:VariableDeclarationStatement[72980-73001]"
    }, {
      "left" : "char c2 = otherBuf[i];",
      "right" : "char c2 = otherBuf[i];",
      "info" : "VariableDeclarationStatement[73020-73042]:VariableDeclarationStatement[73014-73036]"
    }, {
      "left" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "right" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "info" : "IfStatement[73055-73172]:IfStatement[73049-73166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73127-73172]:Block[73121-73166]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73145-73158]:ReturnStatement[73139-73152]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73191-73203]:ReturnStatement[73185-73197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73538-73928]:Block[73532-73922]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[73548-73603]:IfStatement[73542-73597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73567-73603]:Block[73561-73597]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73581-73593]:ReturnStatement[73575-73587]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[73612-73678]:IfStatement[73606-73672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73641-73678]:Block[73635-73672]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73655-73668]:ReturnStatement[73649-73662]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[73687-73716]:VariableDeclarationStatement[73681-73710]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[73725-73756]:VariableDeclarationStatement[73719-73750]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[73765-73901]:ForStatement[73759-73895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73801-73901]:Block[73795-73895]"
    }, {
      "left" : "if (thisBuf[i] != otherBuf[i])",
      "right" : "if (thisBuf[i] != otherBuf[i])",
      "info" : "IfStatement[73815-73891]:IfStatement[73809-73885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73846-73891]:Block[73840-73885]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73864-73877]:ReturnStatement[73858-73871]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73910-73922]:ReturnStatement[73904-73916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74249-74374]:Block[74243-74368]"
    }, {
      "left" : "if (obj instanceof StrBuilder)",
      "right" : "if (obj instanceof StrBuilder)",
      "info" : "IfStatement[74259-74346]:IfStatement[74253-74340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74290-74346]:Block[74284-74340]"
    }, {
      "left" : "return equals((StrBuilder) obj);",
      "right" : "return equals((StrBuilder) obj);",
      "info" : "ReturnStatement[74304-74336]:ReturnStatement[74298-74330]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[74355-74368]:ReturnStatement[74349-74362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74503-74677]:Block[74497-74671]"
    }, {
      "left" : "char buf[] = buffer;",
      "right" : "char buf[] = buffer;",
      "info" : "VariableDeclarationStatement[74513-74533]:VariableDeclarationStatement[74507-74527]"
    }, {
      "left" : "int hash = 0;",
      "right" : "int hash = 0;",
      "info" : "VariableDeclarationStatement[74542-74555]:VariableDeclarationStatement[74536-74549]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[74564-74650]:ForStatement[74558-74644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74600-74650]:Block[74594-74644]"
    }, {
      "left" : "hash = 31 * hash + buf[i];",
      "right" : "hash = 31 * hash + buf[i];",
      "info" : "ExpressionStatement[74614-74640]:ExpressionStatement[74608-74634]"
    }, {
      "left" : "return hash;",
      "right" : "return hash;",
      "info" : "ReturnStatement[74659-74671]:ReturnStatement[74653-74665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75085-75136]:Block[75079-75130]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[75095-75130]:ReturnStatement[75089-75124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75368-75438]:Block[75362-75432]"
    }, {
      "left" : "return new StringBuffer(size).append(buffer, 0, size);",
      "right" : "return new StringBuffer(size).append(buffer, 0, size);",
      "info" : "ReturnStatement[75378-75432]:ReturnStatement[75372-75426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75956-76282]:Block[75950-76276]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[75966-76064]:IfStatement[75960-76058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75986-76064]:Block[75980-76058]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[76000-76054]:ThrowStatement[75994-76048]"
    }, {
      "left" : "if (endIndex > size)",
      "right" : "if (endIndex > size)",
      "info" : "IfStatement[76073-76134]:IfStatement[76067-76128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76094-76134]:Block[76088-76128]"
    }, {
      "left" : "endIndex = size;",
      "right" : "endIndex = size;",
      "info" : "ExpressionStatement[76108-76124]:ExpressionStatement[76102-76118]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[76143-76251]:IfStatement[76137-76245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76170-76251]:Block[76164-76245]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[76184-76241]:ThrowStatement[76178-76235]"
    }, {
      "left" : "return endIndex;",
      "right" : "return endIndex;",
      "info" : "ReturnStatement[76260-76276]:ReturnStatement[76254-76270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76531-76651]:Block[76525-76645]"
    }, {
      "left" : "if (index < 0 || index > size)",
      "right" : "if (index < 0 || index > size)",
      "info" : "IfStatement[76541-76645]:IfStatement[76535-76639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76572-76645]:Block[76566-76639]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[76586-76635]:ThrowStatement[76580-76629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76926-76958]:Block[76920-76952]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[76940-76948]:SuperConstructorInvocation[76934-76942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77058-77288]:Block[77052-77282]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[77072-77278]:IfStatement[77066-77272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77091-77196]:Block[77085-77190]"
    }, {
      "left" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "right" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "info" : "ReturnStatement[77109-77182]:ReturnStatement[77103-77176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77202-77278]:Block[77196-77272]"
    }, {
      "left" : "return super.tokenize(chars, offset, count);",
      "right" : "return super.tokenize(chars, offset, count);",
      "info" : "ReturnStatement[77220-77264]:ReturnStatement[77214-77258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77354-77555]:Block[77348-77549]"
    }, {
      "left" : "String str = super.getContent();",
      "right" : "String str = super.getContent();",
      "info" : "VariableDeclarationStatement[77368-77400]:VariableDeclarationStatement[77362-77394]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[77413-77545]:IfStatement[77407-77539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77430-77496]:Block[77424-77490]"
    }, {
      "left" : "return StrBuilder.this.toString();",
      "right" : "return StrBuilder.this.toString();",
      "info" : "ReturnStatement[77448-77482]:ReturnStatement[77442-77476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77502-77545]:Block[77496-77539]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[77520-77531]:ReturnStatement[77514-77525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77955-77987]:Block[77949-77981]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[77969-77977]:SuperConstructorInvocation[77963-77971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78046-78083]:Block[78040-78077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78140-78278]:Block[78134-78272]"
    }, {
      "left" : "if (ready() == false)",
      "right" : "if (ready() == false)",
      "info" : "IfStatement[78154-78218]:IfStatement[78148-78212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78176-78218]:Block[78170-78212]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78194-78204]:ReturnStatement[78188-78198]"
    }, {
      "left" : "return StrBuilder.this.charAt(pos++);",
      "right" : "return StrBuilder.this.charAt(pos++);",
      "info" : "ReturnStatement[78231-78268]:ReturnStatement[78225-78262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78361-78934]:Block[78355-78928]"
    }, {
      "left" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "right" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "info" : "IfStatement[78375-78552]:IfStatement[78369-78546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78482-78552]:Block[78476-78546]"
    }, {
      "left" : "throw new IndexOutOfBoundsException();",
      "right" : "throw new IndexOutOfBoundsException();",
      "info" : "ThrowStatement[78500-78538]:ThrowStatement[78494-78532]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[78565-78620]:IfStatement[78559-78614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78579-78620]:Block[78573-78614]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[78597-78606]:ReturnStatement[78591-78600]"
    }, {
      "left" : "if (pos >= StrBuilder.this.size())",
      "right" : "if (pos >= StrBuilder.this.size())",
      "info" : "IfStatement[78633-78710]:IfStatement[78627-78704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78668-78710]:Block[78662-78704]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78686-78696]:ReturnStatement[78680-78690]"
    }, {
      "left" : "if (pos + len > size())",
      "right" : "if (pos + len > size())",
      "info" : "IfStatement[78723-78814]:IfStatement[78717-78808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78747-78814]:Block[78741-78808]"
    }, {
      "left" : "len = StrBuilder.this.size() - pos;",
      "right" : "len = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[78765-78800]:ExpressionStatement[78759-78794]"
    }, {
      "left" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "right" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "info" : "ExpressionStatement[78827-78876]:ExpressionStatement[78821-78870]"
    }, {
      "left" : "pos += len;",
      "right" : "pos += len;",
      "info" : "ExpressionStatement[78889-78900]:ExpressionStatement[78883-78894]"
    }, {
      "left" : "return len;",
      "right" : "return len;",
      "info" : "ReturnStatement[78913-78924]:ReturnStatement[78907-78918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78998-79234]:Block[78992-79228]"
    }, {
      "left" : "if (pos + n > StrBuilder.this.size())",
      "right" : "if (pos + n > StrBuilder.this.size())",
      "info" : "IfStatement[79012-79115]:IfStatement[79006-79109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79050-79115]:Block[79044-79109]"
    }, {
      "left" : "n = StrBuilder.this.size() - pos;",
      "right" : "n = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[79068-79101]:ExpressionStatement[79062-79095]"
    }, {
      "left" : "if (n < 0)",
      "right" : "if (n < 0)",
      "info" : "IfStatement[79128-79180]:IfStatement[79122-79174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79139-79180]:Block[79133-79174]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[79157-79166]:ReturnStatement[79151-79160]"
    }, {
      "left" : "pos += n;",
      "right" : "pos += n;",
      "info" : "ExpressionStatement[79193-79202]:ExpressionStatement[79187-79196]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[79215-79224]:ReturnStatement[79209-79218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79296-79356]:Block[79290-79350]"
    }, {
      "left" : "return pos < StrBuilder.this.size();",
      "right" : "return pos < StrBuilder.this.size();",
      "info" : "ReturnStatement[79310-79346]:ReturnStatement[79304-79340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79426-79462]:Block[79420-79456]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[79440-79452]:ReturnStatement[79434-79446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79538-79573]:Block[79532-79567]"
    }, {
      "left" : "mark = pos;",
      "right" : "mark = pos;",
      "info" : "ExpressionStatement[79552-79563]:ExpressionStatement[79546-79557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79632-79667]:Block[79626-79661]"
    }, {
      "left" : "pos = mark;",
      "right" : "pos = mark;",
      "info" : "ExpressionStatement[79646-79657]:ExpressionStatement[79640-79651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79933-79965]:Block[79927-79959]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[79947-79955]:SuperConstructorInvocation[79941-79949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80024-80061]:Block[80018-80055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80120-80157]:Block[80114-80151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80221-80278]:Block[80215-80272]"
    }, {
      "left" : "StrBuilder.this.append((char) c);",
      "right" : "StrBuilder.this.append((char) c);",
      "info" : "ExpressionStatement[80235-80268]:ExpressionStatement[80229-80262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80348-80401]:Block[80342-80395]"
    }, {
      "left" : "StrBuilder.this.append(cbuf);",
      "right" : "StrBuilder.this.append(cbuf);",
      "info" : "ExpressionStatement[80362-80391]:ExpressionStatement[80356-80385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80489-80552]:Block[80483-80546]"
    }, {
      "left" : "StrBuilder.this.append(cbuf, off, len);",
      "right" : "StrBuilder.this.append(cbuf, off, len);",
      "info" : "ExpressionStatement[80503-80542]:ExpressionStatement[80497-80536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80621-80673]:Block[80615-80667]"
    }, {
      "left" : "StrBuilder.this.append(str);",
      "right" : "StrBuilder.this.append(str);",
      "info" : "ExpressionStatement[80635-80663]:ExpressionStatement[80629-80657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80760-80822]:Block[80754-80816]"
    }, {
      "left" : "StrBuilder.this.append(str, off, len);",
      "right" : "StrBuilder.this.append(str, off, len);",
      "info" : "ExpressionStatement[80774-80812]:ExpressionStatement[80768-80806]"
    } ]
  },
  "interFileMappings" : { }
}