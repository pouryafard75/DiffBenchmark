{
  "matchedElements" : [
 {
    "left" : "class : Scope",
    "right" : "class : Scope",
    "info" : "TypeDeclaration[1305-13037]:TypeDeclaration[1305-13909]"
  }, {
    "left" : "vars",
    "right" : "vars",
    "info" : "FieldDeclaration[1990-2061]:FieldDeclaration[1990-2061]"
  }, {
    "left" : "parent",
    "right" : "parent",
    "info" : "FieldDeclaration[2064-2091]:FieldDeclaration[2064-2091]"
  }, {
    "left" : "depth",
    "right" : "depth",
    "info" : "FieldDeclaration[2094-2118]:FieldDeclaration[2094-2118]"
  }, {
    "left" : "rootNode",
    "right" : "rootNode",
    "info" : "FieldDeclaration[2121-2149]:FieldDeclaration[2121-2149]"
  }, {
    "left" : "thisType",
    "right" : "thisType",
    "info" : "FieldDeclaration[2153-2243]:FieldDeclaration[2153-2243]"
  }, {
    "left" : "isBottom",
    "right" : "isBottom",
    "info" : "FieldDeclaration[2247-2354]:FieldDeclaration[2247-2354]"
  }, {
    "left" : "class : Var",
    "right" : "class : Var",
    "info" : "TypeDeclaration[2359-7524]:TypeDeclaration[2384-7549]"
  }, {
    "left" : "name",
    "right" : "name",
    "info" : "FieldDeclaration[2457-2491]:FieldDeclaration[2482-2516]"
  }, {
    "left" : "nameNode",
    "right" : "nameNode",
    "info" : "FieldDeclaration[2497-2537]:FieldDeclaration[2522-2562]"
  }, {
    "left" : "type",
    "right" : "type",
    "info" : "FieldDeclaration[2543-2607]:FieldDeclaration[2568-2632]"
  }, {
    "left" : "info",
    "right" : "info",
    "info" : "FieldDeclaration[2613-2690]:FieldDeclaration[2638-2715]"
  }, {
    "left" : "typeInferred",
    "right" : "typeInferred",
    "info" : "FieldDeclaration[2696-2965]:FieldDeclaration[2721-2990]"
  }, {
    "left" : "input",
    "right" : "input",
    "info" : "FieldDeclaration[2971-3021]:FieldDeclaration[2996-3046]"
  }, {
    "left" : "isDefine",
    "right" : "isDefine",
    "info" : "FieldDeclaration[3027-3094]:FieldDeclaration[3052-3119]"
  }, {
    "left" : "index",
    "right" : "index",
    "info" : "FieldDeclaration[3100-3249]:FieldDeclaration[3125-3274]"
  }, {
    "left" : "scope",
    "right" : "scope",
    "info" : "FieldDeclaration[3255-3304]:FieldDeclaration[3280-3329]"
  }, {
    "left" : "private Var(inferred boolean, name , nameNode , type , scope , index int, input , isDefine boolean, info )",
    "right" : "private Var(inferred boolean, name , nameNode , type , scope , index int, input , isDefine boolean, info )",
    "info" : "MethodDeclaration[3310-3876]:MethodDeclaration[3335-3901]"
  }, {
    "left" : "public getName() : ",
    "right" : "public getName() : ",
    "info" : "MethodDeclaration[3882-3986]:MethodDeclaration[3907-4011]"
  }, {
    "left" : "public getParentNode() : ",
    "right" : "public getParentNode() : ",
    "info" : "MethodDeclaration[3992-4145]:MethodDeclaration[4017-4170]"
  }, {
    "left" : "public isBleedingFunction() : boolean",
    "right" : "public isBleedingFunction() : boolean",
    "info" : "MethodDeclaration[4151-4384]:MethodDeclaration[4176-4409]"
  }, {
    "left" : "package getScope() : ",
    "right" : "package getScope() : ",
    "info" : "MethodDeclaration[4390-4505]:MethodDeclaration[4415-4530]"
  }, {
    "left" : "public isGlobal() : boolean",
    "right" : "public isGlobal() : boolean",
    "info" : "MethodDeclaration[4511-4641]:MethodDeclaration[4536-4666]"
  }, {
    "left" : "public isLocal() : boolean",
    "right" : "public isLocal() : boolean",
    "info" : "MethodDeclaration[4647-4774]:MethodDeclaration[4672-4799]"
  }, {
    "left" : "package isExtern() : boolean",
    "right" : "package isExtern() : boolean",
    "info" : "MethodDeclaration[4780-4928]:MethodDeclaration[4805-4953]"
  }, {
    "left" : "public isConst() : boolean",
    "right" : "public isConst() : boolean",
    "info" : "MethodDeclaration[4934-5177]:MethodDeclaration[4959-5202]"
  }, {
    "left" : "public isDefine() : boolean",
    "right" : "public isDefine() : boolean",
    "info" : "MethodDeclaration[5183-5392]:MethodDeclaration[5208-5417]"
  }, {
    "left" : "public getInitialValue() : ",
    "right" : "public getInitialValue() : ",
    "info" : "MethodDeclaration[5398-5772]:MethodDeclaration[5423-5797]"
  }, {
    "left" : "public getType() : ",
    "right" : "public getType() : ",
    "info" : "MethodDeclaration[5778-5957]:MethodDeclaration[5803-5982]"
  }, {
    "left" : "public getNameNode() : ",
    "right" : "public getNameNode() : ",
    "info" : "MethodDeclaration[5963-6093]:MethodDeclaration[5988-6118]"
  }, {
    "left" : "public getJSDocInfo() : ",
    "right" : "public getJSDocInfo() : ",
    "info" : "MethodDeclaration[6099-6217]:MethodDeclaration[6124-6242]"
  }, {
    "left" : "package setType(type ) : void",
    "right" : "package setType(type ) : void",
    "info" : "MethodDeclaration[6223-6456]:MethodDeclaration[6248-6481]"
  }, {
    "left" : "package resolveType(errorReporter ) : void",
    "right" : "package resolveType(errorReporter ) : void",
    "info" : "MethodDeclaration[6462-6653]:MethodDeclaration[6487-6678]"
  }, {
    "left" : "public isTypeInferred() : boolean",
    "right" : "public isTypeInferred() : boolean",
    "info" : "MethodDeclaration[6659-6857]:MethodDeclaration[6684-6882]"
  }, {
    "left" : "public getInputName() : ",
    "right" : "public getInputName() : ",
    "info" : "MethodDeclaration[6863-6996]:MethodDeclaration[6888-7021]"
  }, {
    "left" : "public isNoShadow() : boolean",
    "right" : "public isNoShadow() : boolean",
    "info" : "MethodDeclaration[7002-7150]:MethodDeclaration[7027-7175]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[7156-7355]:MethodDeclaration[7181-7380]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[7361-7434]:MethodDeclaration[7386-7459]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[7440-7520]:MethodDeclaration[7465-7545]"
  }, {
    "left" : "package Scope(parent , rootNode )",
    "right" : "package Scope(parent , rootNode )",
    "info" : "MethodDeclaration[7760-8435]:MethodDeclaration[8499-9174]"
  }, {
    "left" : "package Scope(rootNode , compiler )",
    "right" : "package Scope(rootNode , compiler )",
    "info" : "MethodDeclaration[8440-8766]:MethodDeclaration[9179-9505]"
  }, {
    "left" : "package Scope(rootNode , thisType )",
    "right" : "package Scope(rootNode , thisType )",
    "info" : "MethodDeclaration[8770-9144]:MethodDeclaration[9509-9883]"
  }, {
    "left" : "package getDepth() : int",
    "right" : "package getDepth() : int",
    "info" : "MethodDeclaration[9148-9249]:MethodDeclaration[9887-9988]"
  }, {
    "left" : "package isBottom() : boolean",
    "right" : "package isBottom() : boolean",
    "info" : "MethodDeclaration[9253-9350]:MethodDeclaration[9992-10089]"
  }, {
    "left" : "public getRootNode() : ",
    "right" : "public getRootNode() : ",
    "info" : "MethodDeclaration[9354-9535]:MethodDeclaration[10093-10274]"
  }, {
    "left" : "public getParent() : ",
    "right" : "public getParent() : ",
    "info" : "MethodDeclaration[9539-9588]:MethodDeclaration[10278-10327]"
  }, {
    "left" : "package getGlobalScope() : ",
    "right" : "package getGlobalScope() : ",
    "info" : "MethodDeclaration[9592-9746]:MethodDeclaration[10331-10485]"
  }, {
    "left" : "public getParentScope() : ",
    "right" : "public getParentScope() : ",
    "info" : "MethodDeclaration[9750-9830]:MethodDeclaration[10489-10569]"
  }, {
    "left" : "public getTypeOfThis() : ",
    "right" : "public getTypeOfThis() : ",
    "info" : "MethodDeclaration[9834-9963]:MethodDeclaration[10573-10702]"
  }, {
    "left" : "package declare(name , nameNode , type , input ) : ",
    "right" : "package declare(name , nameNode , type , input ) : ",
    "info" : "MethodDeclaration[9967-10363]:MethodDeclaration[10706-11102]"
  }, {
    "left" : "package declare(name , nameNode , type , input , inferred boolean) : ",
    "right" : "package declare(name , nameNode , type , input , inferred boolean) : ",
    "info" : "MethodDeclaration[10367-11321]:MethodDeclaration[11106-12060]"
  }, {
    "left" : "package undeclare(var ) : void",
    "right" : "package undeclare(var ) : void",
    "info" : "MethodDeclaration[11325-11617]:MethodDeclaration[12064-12356]"
  }, {
    "left" : "public getSlot(name ) : ",
    "right" : "public getSlot(name ) : ",
    "info" : "MethodDeclaration[11621-11698]:MethodDeclaration[12360-12437]"
  }, {
    "left" : "public getOwnSlot(name ) : ",
    "right" : "public getOwnSlot(name ) : ",
    "info" : "MethodDeclaration[11702-11784]:MethodDeclaration[12441-12523]"
  }, {
    "left" : "public getVar(name ) : ",
    "right" : "public getVar(name ) : ",
    "info" : "MethodDeclaration[11788-12082]:MethodDeclaration[12527-12821]"
  }, {
    "left" : "public isDeclared(name , recurse boolean) : boolean",
    "right" : "public isDeclared(name , recurse boolean) : boolean",
    "info" : "MethodDeclaration[12172-12492]:MethodDeclaration[13044-13364]"
  }, {
    "left" : "public getVars() : ",
    "right" : "public getVars() : ",
    "info" : "MethodDeclaration[12496-12655]:MethodDeclaration[13368-13527]"
  }, {
    "left" : "public getVarCount() : int",
    "right" : "public getVarCount() : int",
    "info" : "MethodDeclaration[12659-12772]:MethodDeclaration[13531-13644]"
  }, {
    "left" : "public isGlobal() : boolean",
    "right" : "public isGlobal() : boolean",
    "info" : "MethodDeclaration[12776-12893]:MethodDeclaration[13648-13765]"
  }, {
    "left" : "public isLocal() : boolean",
    "right" : "public isLocal() : boolean",
    "info" : "MethodDeclaration[12897-13035]:MethodDeclaration[13769-13907]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2397-2403]:Modifier[2422-2428]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2404-2410]:Modifier[2429-2435]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[2411-2416]:TYPE_DECLARATION_KIND[2436-2441]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3437-3444]:Modifier[3462-3469]"
  }, {
    "left" : "Var",
    "right" : "Var",
    "info" : "SimpleName[3445-3448]:SimpleName[3470-3473]"
  }, {
    "left" : "boolean inferred",
    "right" : "boolean inferred",
    "info" : "SingleVariableDeclaration[3449-3465]:SingleVariableDeclaration[3474-3490]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[3467-3478]:SingleVariableDeclaration[3492-3503]"
  }, {
    "left" : "Node nameNode",
    "right" : "Node nameNode",
    "info" : "SingleVariableDeclaration[3480-3493]:SingleVariableDeclaration[3505-3518]"
  }, {
    "left" : "JSType type",
    "right" : "JSType type",
    "info" : "SingleVariableDeclaration[3495-3506]:SingleVariableDeclaration[3520-3531]"
  }, {
    "left" : "Scope scope",
    "right" : "Scope scope",
    "info" : "SingleVariableDeclaration[3524-3535]:SingleVariableDeclaration[3549-3560]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[3537-3546]:SingleVariableDeclaration[3562-3571]"
  }, {
    "left" : "CompilerInput input",
    "right" : "CompilerInput input",
    "info" : "SingleVariableDeclaration[3548-3567]:SingleVariableDeclaration[3573-3592]"
  }, {
    "left" : "boolean isDefine",
    "right" : "boolean isDefine",
    "info" : "SingleVariableDeclaration[3569-3585]:SingleVariableDeclaration[3594-3610]"
  }, {
    "left" : "JSDocInfo info",
    "right" : "JSDocInfo info",
    "info" : "SingleVariableDeclaration[3603-3617]:SingleVariableDeclaration[3628-3642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3619-3876]:Block[3644-3901]"
  }, {
    "left" : "this.name = name;",
    "right" : "this.name = name;",
    "info" : "ExpressionStatement[3627-3644]:ExpressionStatement[3652-3669]"
  }, {
    "left" : "this.nameNode = nameNode;",
    "right" : "this.nameNode = nameNode;",
    "info" : "ExpressionStatement[3651-3676]:ExpressionStatement[3676-3701]"
  }, {
    "left" : "this.type = type;",
    "right" : "this.type = type;",
    "info" : "ExpressionStatement[3683-3700]:ExpressionStatement[3708-3725]"
  }, {
    "left" : "this.scope = scope;",
    "right" : "this.scope = scope;",
    "info" : "ExpressionStatement[3707-3726]:ExpressionStatement[3732-3751]"
  }, {
    "left" : "this.index = index;",
    "right" : "this.index = index;",
    "info" : "ExpressionStatement[3733-3752]:ExpressionStatement[3758-3777]"
  }, {
    "left" : "this.input = input;",
    "right" : "this.input = input;",
    "info" : "ExpressionStatement[3759-3778]:ExpressionStatement[3784-3803]"
  }, {
    "left" : "this.isDefine = isDefine;",
    "right" : "this.isDefine = isDefine;",
    "info" : "ExpressionStatement[3785-3810]:ExpressionStatement[3810-3835]"
  }, {
    "left" : "this.info = info;",
    "right" : "this.info = info;",
    "info" : "ExpressionStatement[3817-3834]:ExpressionStatement[3842-3859]"
  }, {
    "left" : "this.typeInferred = inferred;",
    "right" : "this.typeInferred = inferred;",
    "info" : "ExpressionStatement[3841-3870]:ExpressionStatement[3866-3895]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3936-3942]:Modifier[3961-3967]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3943-3949]:SimpleType[3968-3974]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[3950-3957]:SimpleName[3975-3982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3960-3986]:Block[3985-4011]"
  }, {
    "left" : "return name;",
    "right" : "return name;",
    "info" : "ReturnStatement[3968-3980]:ReturnStatement[3993-4005]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4049-4055]:Modifier[4074-4080]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[4056-4060]:SimpleType[4081-4085]"
  }, {
    "left" : "getParentNode",
    "right" : "getParentNode",
    "info" : "SimpleName[4061-4074]:SimpleName[4086-4099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4077-4145]:Block[4102-4170]"
  }, {
    "left" : "return nameNode == null ? null : nameNode.getParent();",
    "right" : "return nameNode == null ? null : nameNode.getParent();",
    "info" : "ReturnStatement[4085-4139]:ReturnStatement[4110-4164]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4280-4286]:Modifier[4305-4311]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[4287-4294]:PrimitiveType[4312-4319]"
  }, {
    "left" : "isBleedingFunction",
    "right" : "isBleedingFunction",
    "info" : "SimpleName[4295-4313]:SimpleName[4320-4338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4316-4384]:Block[4341-4409]"
  }, {
    "left" : "return NodeUtil.isFunctionExpression(getParentNode());",
    "right" : "return NodeUtil.isFunctionExpression(getParentNode());",
    "info" : "ReturnStatement[4324-4378]:ReturnStatement[4349-4403]"
  }, {
    "left" : "Scope",
    "right" : "Scope",
    "info" : "SimpleType[4461-4466]:SimpleType[4486-4491]"
  }, {
    "left" : "getScope",
    "right" : "getScope",
    "info" : "SimpleName[4467-4475]:SimpleName[4492-4500]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4478-4505]:Block[4503-4530]"
  }, {
    "left" : "return scope;",
    "right" : "return scope;",
    "info" : "ReturnStatement[4486-4499]:ReturnStatement[4511-4524]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4577-4583]:Modifier[4602-4608]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[4584-4591]:PrimitiveType[4609-4616]"
  }, {
    "left" : "isGlobal",
    "right" : "isGlobal",
    "info" : "SimpleName[4592-4600]:SimpleName[4617-4625]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4603-4641]:Block[4628-4666]"
  }, {
    "left" : "return scope.isGlobal();",
    "right" : "return scope.isGlobal();",
    "info" : "ReturnStatement[4611-4635]:ReturnStatement[4636-4660]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4712-4718]:Modifier[4737-4743]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[4719-4726]:PrimitiveType[4744-4751]"
  }, {
    "left" : "isLocal",
    "right" : "isLocal",
    "info" : "SimpleName[4727-4734]:SimpleName[4752-4759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4737-4774]:Block[4762-4799]"
  }, {
    "left" : "return scope.isLocal();",
    "right" : "return scope.isLocal();",
    "info" : "ReturnStatement[4745-4768]:ReturnStatement[4770-4793]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[4854-4861]:PrimitiveType[4879-4886]"
  }, {
    "left" : "isExtern",
    "right" : "isExtern",
    "info" : "SimpleName[4862-4870]:SimpleName[4887-4895]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4873-4928]:Block[4898-4953]"
  }, {
    "left" : "return input == null || input.isExtern();",
    "right" : "return input == null || input.isExtern();",
    "info" : "ReturnStatement[4881-4922]:ReturnStatement[4906-4947]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5077-5083]:Modifier[5102-5108]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5084-5091]:PrimitiveType[5109-5116]"
  }, {
    "left" : "isConst",
    "right" : "isConst",
    "info" : "SimpleName[5092-5099]:SimpleName[5117-5124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5102-5177]:Block[5127-5202]"
  }, {
    "left" : "return nameNode != null && NodeUtil.isConstantName(nameNode);",
    "right" : "return nameNode != null && NodeUtil.isConstantName(nameNode);",
    "info" : "ReturnStatement[5110-5171]:ReturnStatement[5135-5196]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5336-5342]:Modifier[5361-5367]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5343-5350]:PrimitiveType[5368-5375]"
  }, {
    "left" : "isDefine",
    "right" : "isDefine",
    "info" : "SimpleName[5351-5359]:SimpleName[5376-5384]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5362-5392]:Block[5387-5417]"
  }, {
    "left" : "return isDefine;",
    "right" : "return isDefine;",
    "info" : "ReturnStatement[5370-5386]:ReturnStatement[5395-5411]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5398-5404]:Modifier[5423-5429]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[5405-5409]:SimpleType[5430-5434]"
  }, {
    "left" : "getInitialValue",
    "right" : "getInitialValue",
    "info" : "SimpleName[5410-5425]:SimpleName[5435-5450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5428-5772]:Block[5453-5797]"
  }, {
    "left" : "Node parent = getParentNode();",
    "right" : "Node parent = getParentNode();",
    "info" : "VariableDeclarationStatement[5436-5466]:VariableDeclarationStatement[5461-5491]"
  }, {
    "left" : "int pType = parent.getType();",
    "right" : "int pType = parent.getType();",
    "info" : "VariableDeclarationStatement[5473-5502]:VariableDeclarationStatement[5498-5527]"
  }, {
    "left" : "if (pType == Token.FUNCTION)",
    "right" : "if (pType == Token.FUNCTION)",
    "info" : "IfStatement[5509-5766]:IfStatement[5534-5791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5538-5570]:Block[5563-5595]"
  }, {
    "left" : "return parent;",
    "right" : "return parent;",
    "info" : "ReturnStatement[5548-5562]:ReturnStatement[5573-5587]"
  }, {
    "left" : "if (pType == Token.ASSIGN)",
    "right" : "if (pType == Token.ASSIGN)",
    "info" : "IfStatement[5576-5766]:IfStatement[5601-5791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5603-5650]:Block[5628-5675]"
  }, {
    "left" : "return parent.getLastChild();",
    "right" : "return parent.getLastChild();",
    "info" : "ReturnStatement[5613-5642]:ReturnStatement[5638-5667]"
  }, {
    "left" : "if (pType == Token.VAR)",
    "right" : "if (pType == Token.VAR)",
    "info" : "IfStatement[5656-5766]:IfStatement[5681-5791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5680-5730]:Block[5705-5755]"
  }, {
    "left" : "return nameNode.getFirstChild();",
    "right" : "return nameNode.getFirstChild();",
    "info" : "ReturnStatement[5690-5722]:ReturnStatement[5715-5747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5736-5766]:Block[5761-5791]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[5746-5758]:ReturnStatement[5771-5783]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5907-5913]:Modifier[5932-5938]"
  }, {
    "left" : "JSType",
    "right" : "JSType",
    "info" : "SimpleType[5914-5920]:SimpleType[5939-5945]"
  }, {
    "left" : "getType",
    "right" : "getType",
    "info" : "SimpleName[5921-5928]:SimpleName[5946-5953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5931-5957]:Block[5956-5982]"
  }, {
    "left" : "return type;",
    "right" : "return type;",
    "info" : "ReturnStatement[5939-5951]:ReturnStatement[5964-5976]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6037-6043]:Modifier[6062-6068]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[6044-6048]:SimpleType[6069-6073]"
  }, {
    "left" : "getNameNode",
    "right" : "getNameNode",
    "info" : "SimpleName[6049-6060]:SimpleName[6074-6085]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6063-6093]:Block[6088-6118]"
  }, {
    "left" : "return nameNode;",
    "right" : "return nameNode;",
    "info" : "ReturnStatement[6071-6087]:ReturnStatement[6096-6112]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6159-6165]:Modifier[6184-6190]"
  }, {
    "left" : "JSDocInfo",
    "right" : "JSDocInfo",
    "info" : "SimpleType[6166-6175]:SimpleType[6191-6200]"
  }, {
    "left" : "getJSDocInfo",
    "right" : "getJSDocInfo",
    "info" : "SimpleName[6176-6188]:SimpleName[6201-6213]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6191-6217]:Block[6216-6242]"
  }, {
    "left" : "return info;",
    "right" : "return info;",
    "info" : "ReturnStatement[6199-6211]:ReturnStatement[6224-6236]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6349-6353]:PrimitiveType[6374-6378]"
  }, {
    "left" : "setType",
    "right" : "setType",
    "info" : "SimpleName[6354-6361]:SimpleName[6379-6386]"
  }, {
    "left" : "JSType type",
    "right" : "JSType type",
    "info" : "SingleVariableDeclaration[6362-6373]:SingleVariableDeclaration[6387-6398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6375-6456]:Block[6400-6481]"
  }, {
    "left" : "Preconditions.checkState(isTypeInferred());",
    "right" : "Preconditions.checkState(isTypeInferred());",
    "info" : "ExpressionStatement[6383-6426]:ExpressionStatement[6408-6451]"
  }, {
    "left" : "this.type = type;",
    "right" : "this.type = type;",
    "info" : "ExpressionStatement[6433-6450]:ExpressionStatement[6458-6475]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6515-6519]:PrimitiveType[6540-6544]"
  }, {
    "left" : "resolveType",
    "right" : "resolveType",
    "info" : "SimpleName[6520-6531]:SimpleName[6545-6556]"
  }, {
    "left" : "ErrorReporter errorReporter",
    "right" : "ErrorReporter errorReporter",
    "info" : "SingleVariableDeclaration[6532-6559]:SingleVariableDeclaration[6557-6584]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6561-6653]:Block[6586-6678]"
  }, {
    "left" : "if (type != null)",
    "right" : "if (type != null)",
    "info" : "IfStatement[6569-6647]:IfStatement[6594-6672]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6587-6647]:Block[6612-6672]"
  }, {
    "left" : "type = type.resolve(errorReporter, scope);",
    "right" : "type = type.resolve(errorReporter, scope);",
    "info" : "ExpressionStatement[6597-6639]:ExpressionStatement[6622-6664]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6791-6797]:Modifier[6816-6822]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6798-6805]:PrimitiveType[6823-6830]"
  }, {
    "left" : "isTypeInferred",
    "right" : "isTypeInferred",
    "info" : "SimpleName[6806-6820]:SimpleName[6831-6845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6823-6857]:Block[6848-6882]"
  }, {
    "left" : "return typeInferred;",
    "right" : "return typeInferred;",
    "info" : "ReturnStatement[6831-6851]:ReturnStatement[6856-6876]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6863-6869]:Modifier[6888-6894]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6870-6876]:SimpleType[6895-6901]"
  }, {
    "left" : "getInputName",
    "right" : "getInputName",
    "info" : "SimpleName[6877-6889]:SimpleName[6902-6914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6892-6996]:Block[6917-7021]"
  }, {
    "left" : "if (input == null)",
    "right" : "if (input == null)",
    "info" : "IfStatement[6900-6990]:IfStatement[6925-7015]"
  }, {
    "left" : "return \"<non-file>\";",
    "right" : "return \"<non-file>\";",
    "info" : "ReturnStatement[6927-6947]:ReturnStatement[6952-6972]"
  }, {
    "left" : "return input.getName();",
    "right" : "return input.getName();",
    "info" : "ReturnStatement[6967-6990]:ReturnStatement[6992-7015]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7002-7008]:Modifier[7027-7033]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7009-7016]:PrimitiveType[7034-7041]"
  }, {
    "left" : "isNoShadow",
    "right" : "isNoShadow",
    "info" : "SimpleName[7017-7027]:SimpleName[7042-7052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7030-7150]:Block[7055-7175]"
  }, {
    "left" : "if (info != null && info.isNoShadow())",
    "right" : "if (info != null && info.isNoShadow())",
    "info" : "IfStatement[7038-7144]:IfStatement[7063-7169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7077-7107]:Block[7102-7132]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[7087-7099]:ReturnStatement[7112-7124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7113-7144]:Block[7138-7169]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7123-7136]:ReturnStatement[7148-7161]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7156-7165]:MarkerAnnotation[7181-7190]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7166-7172]:Modifier[7191-7197]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7173-7180]:PrimitiveType[7198-7205]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[7181-7187]:SimpleName[7206-7212]"
  }, {
    "left" : "Object other",
    "right" : "Object other",
    "info" : "SingleVariableDeclaration[7188-7200]:SingleVariableDeclaration[7213-7225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7202-7355]:Block[7227-7380]"
  }, {
    "left" : "if (!(other instanceof Var))",
    "right" : "if (!(other instanceof Var))",
    "info" : "IfStatement[7210-7270]:IfStatement[7235-7295]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7239-7270]:Block[7264-7295]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7249-7262]:ReturnStatement[7274-7287]"
  }, {
    "left" : "Var otherVar = (Var) other;",
    "right" : "Var otherVar = (Var) other;",
    "info" : "VariableDeclarationStatement[7278-7305]:VariableDeclarationStatement[7303-7330]"
  }, {
    "left" : "return otherVar.nameNode == nameNode;",
    "right" : "return otherVar.nameNode == nameNode;",
    "info" : "ReturnStatement[7312-7349]:ReturnStatement[7337-7374]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7361-7370]:MarkerAnnotation[7386-7395]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7371-7377]:Modifier[7396-7402]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[7378-7381]:PrimitiveType[7403-7406]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[7382-7390]:SimpleName[7407-7415]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7393-7434]:Block[7418-7459]"
  }, {
    "left" : "return nameNode.hashCode();",
    "right" : "return nameNode.hashCode();",
    "info" : "ReturnStatement[7401-7428]:ReturnStatement[7426-7453]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7440-7449]:MarkerAnnotation[7465-7474]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7454-7460]:Modifier[7479-7485]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[7461-7467]:SimpleType[7486-7492]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[7468-7476]:SimpleName[7493-7501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7479-7520]:Block[7504-7545]"
  }, {
    "left" : "return \"Scope.Var \" + name;",
    "right" : "return \"Scope.Var \" + name;",
    "info" : "ReturnStatement[7487-7514]:ReturnStatement[7512-7539]"
  }, {
    "left" : "Scope",
    "right" : "Scope",
    "info" : "SimpleName[7953-7958]:SimpleName[8692-8697]"
  }, {
    "left" : "Scope parent",
    "right" : "Scope parent",
    "info" : "SingleVariableDeclaration[7959-7971]:SingleVariableDeclaration[8698-8710]"
  }, {
    "left" : "Node rootNode",
    "right" : "Node rootNode",
    "info" : "SingleVariableDeclaration[7973-7986]:SingleVariableDeclaration[8712-8725]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7988-8435]:Block[8727-9174]"
  }, {
    "left" : "Preconditions.checkNotNull(parent);",
    "right" : "Preconditions.checkNotNull(parent);",
    "info" : "ExpressionStatement[7994-8029]:ExpressionStatement[8733-8768]"
  }, {
    "left" : "Preconditions.checkArgument(rootNode != parent.rootNode);",
    "right" : "Preconditions.checkArgument(rootNode != parent.rootNode);",
    "info" : "ExpressionStatement[8034-8091]:ExpressionStatement[8773-8830]"
  }, {
    "left" : "this.parent = parent;",
    "right" : "this.parent = parent;",
    "info" : "ExpressionStatement[8097-8118]:ExpressionStatement[8836-8857]"
  }, {
    "left" : "this.rootNode = rootNode;",
    "right" : "this.rootNode = rootNode;",
    "info" : "ExpressionStatement[8123-8148]:ExpressionStatement[8862-8887]"
  }, {
    "left" : "JSType nodeType = rootNode.getJSType();",
    "right" : "JSType nodeType = rootNode.getJSType();",
    "info" : "VariableDeclarationStatement[8153-8192]:VariableDeclarationStatement[8892-8931]"
  }, {
    "left" : "if (nodeType != null && nodeType instanceof FunctionType)",
    "right" : "if (nodeType != null && nodeType instanceof FunctionType)",
    "info" : "IfStatement[8197-8369]:IfStatement[8936-9108]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8255-8322]:Block[8994-9061]"
  }, {
    "left" : "thisType = ((FunctionType) nodeType).getTypeOfThis();",
    "right" : "thisType = ((FunctionType) nodeType).getTypeOfThis();",
    "info" : "ExpressionStatement[8263-8316]:ExpressionStatement[9002-9055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8328-8369]:Block[9067-9108]"
  }, {
    "left" : "thisType = parent.thisType;",
    "right" : "thisType = parent.thisType;",
    "info" : "ExpressionStatement[8336-8363]:ExpressionStatement[9075-9102]"
  }, {
    "left" : "this.isBottom = false;",
    "right" : "this.isBottom = false;",
    "info" : "ExpressionStatement[8374-8396]:ExpressionStatement[9113-9135]"
  }, {
    "left" : "this.depth = parent.depth + 1;",
    "right" : "this.depth = parent.depth + 1;",
    "info" : "ExpressionStatement[8401-8431]:ExpressionStatement[9140-9170]"
  }, {
    "left" : "Scope",
    "right" : "Scope",
    "info" : "SimpleName[8536-8541]:SimpleName[9275-9280]"
  }, {
    "left" : "Node rootNode",
    "right" : "Node rootNode",
    "info" : "SingleVariableDeclaration[8542-8555]:SingleVariableDeclaration[9281-9294]"
  }, {
    "left" : "AbstractCompiler compiler",
    "right" : "AbstractCompiler compiler",
    "info" : "SingleVariableDeclaration[8557-8582]:SingleVariableDeclaration[9296-9321]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8584-8766]:Block[9323-9505]"
  }, {
    "left" : "this.parent = null;",
    "right" : "this.parent = null;",
    "info" : "ExpressionStatement[8590-8609]:ExpressionStatement[9329-9348]"
  }, {
    "left" : "this.rootNode = rootNode;",
    "right" : "this.rootNode = rootNode;",
    "info" : "ExpressionStatement[8614-8639]:ExpressionStatement[9353-9378]"
  }, {
    "left" : "thisType = compiler.getTypeRegistry().getNativeObjectType(GLOBAL_THIS);",
    "right" : "thisType = compiler.getTypeRegistry().getNativeObjectType(GLOBAL_THIS);",
    "info" : "ExpressionStatement[8644-8715]:ExpressionStatement[9383-9454]"
  }, {
    "left" : "this.isBottom = false;",
    "right" : "this.isBottom = false;",
    "info" : "ExpressionStatement[8720-8742]:ExpressionStatement[9459-9481]"
  }, {
    "left" : "this.depth = 0;",
    "right" : "this.depth = 0;",
    "info" : "ExpressionStatement[8747-8762]:ExpressionStatement[9486-9501]"
  }, {
    "left" : "Scope",
    "right" : "Scope",
    "info" : "SimpleName[8967-8972]:SimpleName[9706-9711]"
  }, {
    "left" : "Node rootNode",
    "right" : "Node rootNode",
    "info" : "SingleVariableDeclaration[8973-8986]:SingleVariableDeclaration[9712-9725]"
  }, {
    "left" : "ObjectType thisType",
    "right" : "ObjectType thisType",
    "info" : "SingleVariableDeclaration[8988-9007]:SingleVariableDeclaration[9727-9746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9009-9144]:Block[9748-9883]"
  }, {
    "left" : "this.parent = null;",
    "right" : "this.parent = null;",
    "info" : "ExpressionStatement[9015-9034]:ExpressionStatement[9754-9773]"
  }, {
    "left" : "this.rootNode = rootNode;",
    "right" : "this.rootNode = rootNode;",
    "info" : "ExpressionStatement[9039-9064]:ExpressionStatement[9778-9803]"
  }, {
    "left" : "this.thisType = thisType;",
    "right" : "this.thisType = thisType;",
    "info" : "ExpressionStatement[9069-9094]:ExpressionStatement[9808-9833]"
  }, {
    "left" : "this.isBottom = true;",
    "right" : "this.isBottom = true;",
    "info" : "ExpressionStatement[9099-9120]:ExpressionStatement[9838-9859]"
  }, {
    "left" : "this.depth = 0;",
    "right" : "this.depth = 0;",
    "info" : "ExpressionStatement[9125-9140]:ExpressionStatement[9864-9879]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9211-9214]:PrimitiveType[9950-9953]"
  }, {
    "left" : "getDepth",
    "right" : "getDepth",
    "info" : "SimpleName[9215-9223]:SimpleName[9954-9962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9226-9249]:Block[9965-9988]"
  }, {
    "left" : "return depth;",
    "right" : "return depth;",
    "info" : "ReturnStatement[9232-9245]:ReturnStatement[9971-9984]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[9305-9312]:PrimitiveType[10044-10051]"
  }, {
    "left" : "isBottom",
    "right" : "isBottom",
    "info" : "SimpleName[9313-9321]:SimpleName[10052-10060]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9324-9350]:Block[10063-10089]"
  }, {
    "left" : "return isBottom;",
    "right" : "return isBottom;",
    "info" : "ReturnStatement[9330-9346]:ReturnStatement[10069-10085]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9483-9489]:Modifier[10222-10228]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[9490-9494]:SimpleType[10229-10233]"
  }, {
    "left" : "getRootNode",
    "right" : "getRootNode",
    "info" : "SimpleName[9495-9506]:SimpleName[10234-10245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9509-9535]:Block[10248-10274]"
  }, {
    "left" : "return rootNode;",
    "right" : "return rootNode;",
    "info" : "ReturnStatement[9515-9531]:ReturnStatement[10254-10270]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9539-9545]:Modifier[10278-10284]"
  }, {
    "left" : "Scope",
    "right" : "Scope",
    "info" : "SimpleType[9546-9551]:SimpleType[10285-10290]"
  }, {
    "left" : "getParent",
    "right" : "getParent",
    "info" : "SimpleName[9552-9561]:SimpleName[10291-10300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9564-9588]:Block[10303-10327]"
  }, {
    "left" : "return parent;",
    "right" : "return parent;",
    "info" : "ReturnStatement[9570-9584]:ReturnStatement[10309-10323]"
  }, {
    "left" : "Scope",
    "right" : "Scope",
    "info" : "SimpleType[9592-9597]:SimpleType[10331-10336]"
  }, {
    "left" : "getGlobalScope",
    "right" : "getGlobalScope",
    "info" : "SimpleName[9598-9612]:SimpleName[10337-10351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9615-9746]:Block[10354-10485]"
  }, {
    "left" : "Scope result = this;",
    "right" : "Scope result = this;",
    "info" : "VariableDeclarationStatement[9621-9641]:VariableDeclarationStatement[10360-10380]"
  }, {
    "left" : "while (result.getParent() != null)",
    "right" : "while (result.getParent() != null)",
    "info" : "WhileStatement[9646-9723]:WhileStatement[10385-10462]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9681-9723]:Block[10420-10462]"
  }, {
    "left" : "result = result.getParent();",
    "right" : "result = result.getParent();",
    "info" : "ExpressionStatement[9689-9717]:ExpressionStatement[10428-10456]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[9728-9742]:ReturnStatement[10467-10481]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[9750-9759]:MarkerAnnotation[10489-10498]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9762-9768]:Modifier[10501-10507]"
  }, {
    "left" : "StaticScope<JSType>",
    "right" : "StaticScope<JSType>",
    "info" : "ParameterizedType[9769-9788]:ParameterizedType[10508-10527]"
  }, {
    "left" : "getParentScope",
    "right" : "getParentScope",
    "info" : "SimpleName[9789-9803]:SimpleName[10528-10542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9806-9830]:Block[10545-10569]"
  }, {
    "left" : "return parent;",
    "right" : "return parent;",
    "info" : "ReturnStatement[9812-9826]:ReturnStatement[10551-10565]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9903-9909]:Modifier[10642-10648]"
  }, {
    "left" : "ObjectType",
    "right" : "ObjectType",
    "info" : "SimpleType[9910-9920]:SimpleType[10649-10659]"
  }, {
    "left" : "getTypeOfThis",
    "right" : "getTypeOfThis",
    "info" : "SimpleName[9921-9934]:SimpleName[10660-10673]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9937-9963]:Block[10676-10702]"
  }, {
    "left" : "return thisType;",
    "right" : "return thisType;",
    "info" : "ReturnStatement[9943-9959]:ReturnStatement[10682-10698]"
  }, {
    "left" : "Var",
    "right" : "Var",
    "info" : "SimpleType[10229-10232]:SimpleType[10968-10971]"
  }, {
    "left" : "declare",
    "right" : "declare",
    "info" : "SimpleName[10233-10240]:SimpleName[10972-10979]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[10241-10252]:SingleVariableDeclaration[10980-10991]"
  }, {
    "left" : "Node nameNode",
    "right" : "Node nameNode",
    "info" : "SingleVariableDeclaration[10254-10267]:SingleVariableDeclaration[10993-11006]"
  }, {
    "left" : "JSType type",
    "right" : "JSType type",
    "info" : "SingleVariableDeclaration[10269-10280]:SingleVariableDeclaration[11008-11019]"
  }, {
    "left" : "CompilerInput input",
    "right" : "CompilerInput input",
    "info" : "SingleVariableDeclaration[10282-10301]:SingleVariableDeclaration[11021-11040]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10303-10363]:Block[11042-11102]"
  }, {
    "left" : "return declare(name, nameNode, type, input, true);",
    "right" : "return declare(name, nameNode, type, input, true);",
    "info" : "ReturnStatement[10309-10359]:ReturnStatement[11048-11098]"
  }, {
    "left" : "Var",
    "right" : "Var",
    "info" : "SimpleType[10703-10706]:SimpleType[11442-11445]"
  }, {
    "left" : "declare",
    "right" : "declare",
    "info" : "SimpleName[10707-10714]:SimpleName[11446-11453]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[10715-10726]:SingleVariableDeclaration[11454-11465]"
  }, {
    "left" : "Node nameNode",
    "right" : "Node nameNode",
    "info" : "SingleVariableDeclaration[10728-10741]:SingleVariableDeclaration[11467-11480]"
  }, {
    "left" : "JSType type",
    "right" : "JSType type",
    "info" : "SingleVariableDeclaration[10749-10760]:SingleVariableDeclaration[11488-11499]"
  }, {
    "left" : "CompilerInput input",
    "right" : "CompilerInput input",
    "info" : "SingleVariableDeclaration[10762-10781]:SingleVariableDeclaration[11501-11520]"
  }, {
    "left" : "boolean inferred",
    "right" : "boolean inferred",
    "info" : "SingleVariableDeclaration[10783-10799]:SingleVariableDeclaration[11522-11538]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10801-11321]:Block[11540-12060]"
  }, {
    "left" : "Preconditions.checkState(name != null && name.length() > 0);",
    "right" : "Preconditions.checkState(name != null && name.length() > 0);",
    "info" : "ExpressionStatement[10807-10867]:ExpressionStatement[11546-11606]"
  }, {
    "left" : "Preconditions.checkState(vars.get(name) == null);",
    "right" : "Preconditions.checkState(vars.get(name) == null);",
    "info" : "ExpressionStatement[10919-10968]:ExpressionStatement[11658-11707]"
  }, {
    "left" : "JSDocInfo info = NodeUtil.getInfoForNameNode(nameNode);",
    "right" : "JSDocInfo info = NodeUtil.getInfoForNameNode(nameNode);",
    "info" : "VariableDeclarationStatement[11091-11146]:VariableDeclarationStatement[11830-11885]"
  }, {
    "left" : "Var var = new Var(inferred, name, nameNode, type, this, vars.size(), input,\n        info != null && info.isDefine(), info);",
    "right" : "Var var = new Var(inferred, name, nameNode, type, this, vars.size(), input,\n        info != null && info.isDefine(), info);",
    "info" : "VariableDeclarationStatement[11152-11275]:VariableDeclarationStatement[11891-12014]"
  }, {
    "left" : "vars.put(name, var);",
    "right" : "vars.put(name, var);",
    "info" : "ExpressionStatement[11281-11301]:ExpressionStatement[12020-12040]"
  }, {
    "left" : "return var;",
    "right" : "return var;",
    "info" : "ReturnStatement[11306-11317]:ReturnStatement[12045-12056]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11455-11459]:PrimitiveType[12194-12198]"
  }, {
    "left" : "undeclare",
    "right" : "undeclare",
    "info" : "SimpleName[11460-11469]:SimpleName[12199-12208]"
  }, {
    "left" : "Var var",
    "right" : "Var var",
    "info" : "SingleVariableDeclaration[11470-11477]:SingleVariableDeclaration[12209-12216]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11479-11617]:Block[12218-12356]"
  }, {
    "left" : "Preconditions.checkState(var.scope == this);",
    "right" : "Preconditions.checkState(var.scope == this);",
    "info" : "ExpressionStatement[11485-11529]:ExpressionStatement[12224-12268]"
  }, {
    "left" : "Preconditions.checkState(vars.get(var.name) == var);",
    "right" : "Preconditions.checkState(vars.get(var.name) == var);",
    "info" : "ExpressionStatement[11534-11586]:ExpressionStatement[12273-12325]"
  }, {
    "left" : "vars.remove(var.name);",
    "right" : "vars.remove(var.name);",
    "info" : "ExpressionStatement[11591-11613]:ExpressionStatement[12330-12352]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11621-11627]:Modifier[12360-12366]"
  }, {
    "left" : "StaticSlot<JSType>",
    "right" : "StaticSlot<JSType>",
    "info" : "ParameterizedType[11628-11646]:ParameterizedType[12367-12385]"
  }, {
    "left" : "getSlot",
    "right" : "getSlot",
    "info" : "SimpleName[11647-11654]:SimpleName[12386-12393]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[11655-11666]:SingleVariableDeclaration[12394-12405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11668-11698]:Block[12407-12437]"
  }, {
    "left" : "return getVar(name);",
    "right" : "return getVar(name);",
    "info" : "ReturnStatement[11674-11694]:ReturnStatement[12413-12433]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11702-11708]:Modifier[12441-12447]"
  }, {
    "left" : "StaticSlot<JSType>",
    "right" : "StaticSlot<JSType>",
    "info" : "ParameterizedType[11709-11727]:ParameterizedType[12448-12466]"
  }, {
    "left" : "getOwnSlot",
    "right" : "getOwnSlot",
    "info" : "SimpleName[11728-11738]:SimpleName[12467-12477]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[11739-11750]:SingleVariableDeclaration[12478-12489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11752-11784]:Block[12491-12523]"
  }, {
    "left" : "return vars.get(name);",
    "right" : "return vars.get(name);",
    "info" : "ReturnStatement[11758-11780]:ReturnStatement[12497-12519]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11839-11845]:Modifier[12578-12584]"
  }, {
    "left" : "Var",
    "right" : "Var",
    "info" : "SimpleType[11846-11849]:SimpleType[12585-12588]"
  }, {
    "left" : "getVar",
    "right" : "getVar",
    "info" : "SimpleName[11850-11856]:SimpleName[12589-12595]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[11857-11868]:SingleVariableDeclaration[12596-12607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11870-12082]:Block[12609-12821]"
  }, {
    "left" : "Var var = vars.get(name);",
    "right" : "Var var = vars.get(name);",
    "info" : "VariableDeclarationStatement[11876-11901]:VariableDeclarationStatement[12615-12640]"
  }, {
    "left" : "if (var != null)",
    "right" : "if (var != null)",
    "info" : "IfStatement[11906-12078]:IfStatement[12645-12817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11923-11948]:Block[12662-12687]"
  }, {
    "left" : "return var;",
    "right" : "return var;",
    "info" : "ReturnStatement[11931-11942]:ReturnStatement[12670-12681]"
  }, {
    "left" : "if (parent != null)",
    "right" : "if (parent != null)",
    "info" : "IfStatement[11954-12078]:IfStatement[12693-12817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11974-12046]:Block[12713-12785]"
  }, {
    "left" : "return parent.getVar(name);",
    "right" : "return parent.getVar(name);",
    "info" : "ReturnStatement[12013-12040]:ReturnStatement[12752-12779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12052-12078]:Block[12791-12817]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12060-12072]:ReturnStatement[12799-12811]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12229-12235]:Modifier[13101-13107]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12236-12243]:PrimitiveType[13108-13115]"
  }, {
    "left" : "isDeclared",
    "right" : "isDeclared",
    "info" : "SimpleName[12244-12254]:SimpleName[13116-13126]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[12255-12266]:SingleVariableDeclaration[13127-13138]"
  }, {
    "left" : "boolean recurse",
    "right" : "boolean recurse",
    "info" : "SingleVariableDeclaration[12268-12283]:SingleVariableDeclaration[13140-13155]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12285-12492]:Block[13157-13364]"
  }, {
    "left" : "Scope scope = this;",
    "right" : "Scope scope = this;",
    "info" : "VariableDeclarationStatement[12291-12310]:VariableDeclarationStatement[13163-13182]"
  }, {
    "left" : "if (scope.vars.containsKey(name))",
    "right" : "if (scope.vars.containsKey(name))",
    "info" : "IfStatement[12315-12367]:IfStatement[13187-13239]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12355-12367]:ReturnStatement[13227-13239]"
  }, {
    "left" : "if (scope.parent != null && recurse)",
    "right" : "if (scope.parent != null && recurse)",
    "info" : "IfStatement[12373-12470]:IfStatement[13245-13342]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12410-12470]:Block[13282-13342]"
  }, {
    "left" : "return scope.parent.isDeclared(name, recurse);",
    "right" : "return scope.parent.isDeclared(name, recurse);",
    "info" : "ReturnStatement[12418-12464]:ReturnStatement[13290-13336]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[12475-12488]:ReturnStatement[13347-13360]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12582-12588]:Modifier[13454-13460]"
  }, {
    "left" : "Iterator<Var>",
    "right" : "Iterator<Var>",
    "info" : "ParameterizedType[12589-12602]:ParameterizedType[13461-13474]"
  }, {
    "left" : "getVars",
    "right" : "getVars",
    "info" : "SimpleName[12603-12610]:SimpleName[13475-13482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12613-12655]:Block[13485-13527]"
  }, {
    "left" : "return vars.values().iterator();",
    "right" : "return vars.values().iterator();",
    "info" : "ReturnStatement[12619-12651]:ReturnStatement[13491-13523]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12718-12724]:Modifier[13590-13596]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[12725-12728]:PrimitiveType[13597-13600]"
  }, {
    "left" : "getVarCount",
    "right" : "getVarCount",
    "info" : "SimpleName[12729-12740]:SimpleName[13601-13612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12743-12772]:Block[13615-13644]"
  }, {
    "left" : "return vars.size();",
    "right" : "return vars.size();",
    "info" : "ReturnStatement[12749-12768]:ReturnStatement[13621-13640]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12835-12841]:Modifier[13707-13713]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12842-12849]:PrimitiveType[13714-13721]"
  }, {
    "left" : "isGlobal",
    "right" : "isGlobal",
    "info" : "SimpleName[12850-12858]:SimpleName[13722-13730]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12861-12893]:Block[13733-13765]"
  }, {
    "left" : "return parent == null;",
    "right" : "return parent == null;",
    "info" : "ReturnStatement[12867-12889]:ReturnStatement[13739-13761]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12981-12987]:Modifier[13853-13859]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12988-12995]:PrimitiveType[13860-13867]"
  }, {
    "left" : "isLocal",
    "right" : "isLocal",
    "info" : "SimpleName[12996-13003]:SimpleName[13868-13875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13006-13035]:Block[13878-13907]"
  }, {
    "left" : "return !isGlobal();",
    "right" : "return !isGlobal();",
    "info" : "ReturnStatement[13012-13031]:ReturnStatement[13884-13903]"
  } ]
}