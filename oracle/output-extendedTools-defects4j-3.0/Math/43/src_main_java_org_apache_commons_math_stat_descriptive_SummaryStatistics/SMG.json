{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SummaryStatistics",
      "right" : "SummaryStatistics",
      "info" : "TypeDeclaration[1800-25433]:TypeDeclaration[1800-25394]"
    }, {
      "left" : "private static final long serialVersionUID = -2021321786743555871L;",
      "right" : "private static final long serialVersionUID = -2021321786743555871L;",
      "info" : "FieldDeclaration[2909-3005]:FieldDeclaration[2909-3005]"
    }, {
      "left" : "protected long n = 0;",
      "right" : "protected long n = 0;",
      "info" : "FieldDeclaration[3011-3080]:FieldDeclaration[3011-3080]"
    }, {
      "left" : "protected SecondMoment secondMoment = new SecondMoment();",
      "right" : "protected SecondMoment secondMoment = new SecondMoment();",
      "info" : "FieldDeclaration[3086-3208]:FieldDeclaration[3086-3208]"
    }, {
      "left" : "protected Sum sum = new Sum();",
      "right" : "protected Sum sum = new Sum();",
      "info" : "FieldDeclaration[3214-3290]:FieldDeclaration[3214-3290]"
    }, {
      "left" : "protected SumOfSquares sumsq = new SumOfSquares();",
      "right" : "protected SumOfSquares sumsq = new SumOfSquares();",
      "info" : "FieldDeclaration[3296-3409]:FieldDeclaration[3296-3409]"
    }, {
      "left" : "protected Min min = new Min();",
      "right" : "protected Min min = new Min();",
      "info" : "FieldDeclaration[3415-3491]:FieldDeclaration[3415-3491]"
    }, {
      "left" : "protected Max max = new Max();",
      "right" : "protected Max max = new Max();",
      "info" : "FieldDeclaration[3497-3573]:FieldDeclaration[3497-3573]"
    }, {
      "left" : "protected SumOfLogs sumLog = new SumOfLogs();",
      "right" : "protected SumOfLogs sumLog = new SumOfLogs();",
      "info" : "FieldDeclaration[3579-3673]:FieldDeclaration[3579-3673]"
    }, {
      "left" : "protected GeometricMean geoMean = new GeometricMean(sumLog);",
      "right" : "protected GeometricMean geoMean = new GeometricMean(sumLog);",
      "info" : "FieldDeclaration[3679-3789]:FieldDeclaration[3679-3789]"
    }, {
      "left" : "protected Mean mean = new Mean(secondMoment);",
      "right" : "protected Mean mean = new Mean(secondMoment);",
      "info" : "FieldDeclaration[3795-3887]:FieldDeclaration[3795-3887]"
    }, {
      "left" : "protected Variance variance = new Variance(secondMoment);",
      "right" : "protected Variance variance = new Variance(secondMoment);",
      "info" : "FieldDeclaration[3893-4001]:FieldDeclaration[3893-4001]"
    }, {
      "left" : "private StorelessUnivariateStatistic sumImpl = sum;",
      "right" : "private StorelessUnivariateStatistic sumImpl = sum;",
      "info" : "FieldDeclaration[4007-4124]:FieldDeclaration[4007-4124]"
    }, {
      "left" : "private StorelessUnivariateStatistic sumsqImpl = sumsq;",
      "right" : "private StorelessUnivariateStatistic sumsqImpl = sumsq;",
      "info" : "FieldDeclaration[4130-4262]:FieldDeclaration[4130-4262]"
    }, {
      "left" : "private StorelessUnivariateStatistic minImpl = min;",
      "right" : "private StorelessUnivariateStatistic minImpl = min;",
      "info" : "FieldDeclaration[4268-4389]:FieldDeclaration[4268-4389]"
    }, {
      "left" : "private StorelessUnivariateStatistic maxImpl = max;",
      "right" : "private StorelessUnivariateStatistic maxImpl = max;",
      "info" : "FieldDeclaration[4395-4516]:FieldDeclaration[4395-4516]"
    }, {
      "left" : "private StorelessUnivariateStatistic sumLogImpl = sumLog;",
      "right" : "private StorelessUnivariateStatistic sumLogImpl = sumLog;",
      "info" : "FieldDeclaration[4522-4652]:FieldDeclaration[4522-4652]"
    }, {
      "left" : "private StorelessUnivariateStatistic geoMeanImpl = geoMean;",
      "right" : "private StorelessUnivariateStatistic geoMeanImpl = geoMean;",
      "info" : "FieldDeclaration[4658-4794]:FieldDeclaration[4658-4794]"
    }, {
      "left" : "private StorelessUnivariateStatistic meanImpl = mean;",
      "right" : "private StorelessUnivariateStatistic meanImpl = mean;",
      "info" : "FieldDeclaration[4800-4920]:FieldDeclaration[4800-4920]"
    }, {
      "left" : "private StorelessUnivariateStatistic varianceImpl = variance;",
      "right" : "private StorelessUnivariateStatistic varianceImpl = variance;",
      "info" : "FieldDeclaration[4926-5058]:FieldDeclaration[4926-5058]"
    }, {
      "left" : "public SummaryStatistics()",
      "right" : "public SummaryStatistics()",
      "info" : "MethodDeclaration[5064-5160]:MethodDeclaration[5064-5160]"
    }, {
      "left" : "public SummaryStatistics(SummaryStatistics original)",
      "right" : "public SummaryStatistics(SummaryStatistics original)",
      "info" : "MethodDeclaration[5166-5421]:MethodDeclaration[5166-5421]"
    }, {
      "left" : "public StatisticalSummary getSummary()",
      "right" : "public StatisticalSummary getSummary()",
      "info" : "MethodDeclaration[5427-5753]:MethodDeclaration[5427-5753]"
    }, {
      "left" : "public void addValue(double value)",
      "right" : "public void addValue(double value)",
      "info" : "MethodDeclaration[5759-6512]:MethodDeclaration[5759-6473]"
    }, {
      "left" : "public long getN()",
      "right" : "public long getN()",
      "info" : "MethodDeclaration[6518-6670]:MethodDeclaration[6479-6631]"
    }, {
      "left" : "public double getSum()",
      "right" : "public double getSum()",
      "info" : "MethodDeclaration[6676-6895]:MethodDeclaration[6637-6856]"
    }, {
      "left" : "public double getSumsq()",
      "right" : "public double getSumsq()",
      "info" : "MethodDeclaration[6901-7178]:MethodDeclaration[6862-7139]"
    }, {
      "left" : "public double getMean()",
      "right" : "public double getMean()",
      "info" : "MethodDeclaration[7184-7435]:MethodDeclaration[7145-7396]"
    }, {
      "left" : "public double getStandardDeviation()",
      "right" : "public double getStandardDeviation()",
      "info" : "MethodDeclaration[7441-7941]:MethodDeclaration[7402-7902]"
    }, {
      "left" : "public double getVariance()",
      "right" : "public double getVariance()",
      "info" : "MethodDeclaration[7947-8428]:MethodDeclaration[7908-8389]"
    }, {
      "left" : "public double getPopulationVariance()",
      "right" : "public double getPopulationVariance()",
      "info" : "MethodDeclaration[8434-8934]:MethodDeclaration[8395-8895]"
    }, {
      "left" : "public double getMax()",
      "right" : "public double getMax()",
      "info" : "MethodDeclaration[8940-9195]:MethodDeclaration[8901-9156]"
    }, {
      "left" : "public double getMin()",
      "right" : "public double getMin()",
      "info" : "MethodDeclaration[9201-9456]:MethodDeclaration[9162-9417]"
    }, {
      "left" : "public double getGeometricMean()",
      "right" : "public double getGeometricMean()",
      "info" : "MethodDeclaration[9462-9745]:MethodDeclaration[9423-9706]"
    }, {
      "left" : "public double getSumOfLogs()",
      "right" : "public double getSumOfLogs()",
      "info" : "MethodDeclaration[9751-10045]:MethodDeclaration[9712-10006]"
    }, {
      "left" : "public double getSecondMoment()",
      "right" : "public double getSecondMoment()",
      "info" : "MethodDeclaration[10051-10593]:MethodDeclaration[10012-10554]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[10599-11718]:MethodDeclaration[10560-11679]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[11724-12173]:MethodDeclaration[11685-12134]"
    }, {
      "left" : "public boolean equals(Object object)",
      "right" : "public boolean equals(Object object)",
      "info" : "MethodDeclaration[12179-13455]:MethodDeclaration[12140-13416]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[13461-14157]:MethodDeclaration[13422-14118]"
    }, {
      "left" : "public StorelessUnivariateStatistic getSumImpl()",
      "right" : "public StorelessUnivariateStatistic getSumImpl()",
      "info" : "MethodDeclaration[14221-14463]:MethodDeclaration[14182-14424]"
    }, {
      "left" : "public void setSumImpl(StorelessUnivariateStatistic sumImpl)",
      "right" : "public void setSumImpl(StorelessUnivariateStatistic sumImpl)",
      "info" : "MethodDeclaration[14469-15130]:MethodDeclaration[14430-15091]"
    }, {
      "left" : "public StorelessUnivariateStatistic getSumsqImpl()",
      "right" : "public StorelessUnivariateStatistic getSumsqImpl()",
      "info" : "MethodDeclaration[15136-15404]:MethodDeclaration[15097-15365]"
    }, {
      "left" : "public void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl)",
      "right" : "public void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl)",
      "info" : "MethodDeclaration[15410-16103]:MethodDeclaration[15371-16064]"
    }, {
      "left" : "public StorelessUnivariateStatistic getMinImpl()",
      "right" : "public StorelessUnivariateStatistic getMinImpl()",
      "info" : "MethodDeclaration[16109-16359]:MethodDeclaration[16070-16320]"
    }, {
      "left" : "public void setMinImpl(StorelessUnivariateStatistic minImpl)",
      "right" : "public void setMinImpl(StorelessUnivariateStatistic minImpl)",
      "info" : "MethodDeclaration[16365-17034]:MethodDeclaration[16326-16995]"
    }, {
      "left" : "public StorelessUnivariateStatistic getMaxImpl()",
      "right" : "public StorelessUnivariateStatistic getMaxImpl()",
      "info" : "MethodDeclaration[17040-17290]:MethodDeclaration[17001-17251]"
    }, {
      "left" : "public void setMaxImpl(StorelessUnivariateStatistic maxImpl)",
      "right" : "public void setMaxImpl(StorelessUnivariateStatistic maxImpl)",
      "info" : "MethodDeclaration[17296-17965]:MethodDeclaration[17257-17926]"
    }, {
      "left" : "public StorelessUnivariateStatistic getSumLogImpl()",
      "right" : "public StorelessUnivariateStatistic getSumLogImpl()",
      "info" : "MethodDeclaration[17971-18231]:MethodDeclaration[17932-18192]"
    }, {
      "left" : "public void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl)",
      "right" : "public void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl)",
      "info" : "MethodDeclaration[18237-18968]:MethodDeclaration[18198-18929]"
    }, {
      "left" : "public StorelessUnivariateStatistic getGeoMeanImpl()",
      "right" : "public StorelessUnivariateStatistic getGeoMeanImpl()",
      "info" : "MethodDeclaration[18974-19246]:MethodDeclaration[18935-19207]"
    }, {
      "left" : "public void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl)",
      "right" : "public void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl)",
      "info" : "MethodDeclaration[19252-19955]:MethodDeclaration[19213-19916]"
    }, {
      "left" : "public StorelessUnivariateStatistic getMeanImpl()",
      "right" : "public StorelessUnivariateStatistic getMeanImpl()",
      "info" : "MethodDeclaration[19961-20207]:MethodDeclaration[19922-20168]"
    }, {
      "left" : "public void setMeanImpl(StorelessUnivariateStatistic meanImpl)",
      "right" : "public void setMeanImpl(StorelessUnivariateStatistic meanImpl)",
      "info" : "MethodDeclaration[20213-20881]:MethodDeclaration[20174-20842]"
    }, {
      "left" : "public StorelessUnivariateStatistic getVarianceImpl()",
      "right" : "public StorelessUnivariateStatistic getVarianceImpl()",
      "info" : "MethodDeclaration[20887-21149]:MethodDeclaration[20848-21110]"
    }, {
      "left" : "public void setVarianceImpl(StorelessUnivariateStatistic varianceImpl)",
      "right" : "public void setVarianceImpl(StorelessUnivariateStatistic varianceImpl)",
      "info" : "MethodDeclaration[21155-21851]:MethodDeclaration[21116-21812]"
    }, {
      "left" : "private void checkEmpty()",
      "right" : "private void checkEmpty()",
      "info" : "MethodDeclaration[21857-22112]:MethodDeclaration[21818-22073]"
    }, {
      "left" : "public SummaryStatistics copy()",
      "right" : "public SummaryStatistics copy()",
      "info" : "MethodDeclaration[22118-22408]:MethodDeclaration[22079-22369]"
    }, {
      "left" : "public static void copy(SummaryStatistics source, SummaryStatistics dest)\n        throws NullArgumentException",
      "right" : "public static void copy(SummaryStatistics source, SummaryStatistics dest)\n        throws NullArgumentException",
      "info" : "MethodDeclaration[22414-25431]:MethodDeclaration[22375-25392]"
    } ],
    "mappings" : [
 {
      "left" : "StatisticalSummary",
      "right" : "StatisticalSummary",
      "info" : "SimpleType[2869-2887]:SimpleType[2869-2887]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[2889-2901]:SimpleType[2889-2901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5126-5132]:Modifier[5126-5132]"
    }, {
      "left" : "SummaryStatistics",
      "right" : "SummaryStatistics",
      "info" : "SimpleName[5133-5150]:SimpleName[5133-5150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5153-5160]:Block[5153-5160]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5331-5337]:Modifier[5331-5337]"
    }, {
      "left" : "SummaryStatistics",
      "right" : "SummaryStatistics",
      "info" : "SimpleName[5338-5355]:SimpleName[5338-5355]"
    }, {
      "left" : "SummaryStatistics original",
      "right" : "SummaryStatistics original",
      "info" : "SingleVariableDeclaration[5356-5382]:SingleVariableDeclaration[5356-5382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5384-5421]:Block[5384-5421]"
    }, {
      "left" : "copy(original, this);",
      "right" : "copy(original, this);",
      "info" : "ExpressionStatement[5394-5415]:ExpressionStatement[5394-5415]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5582-5588]:Modifier[5582-5588]"
    }, {
      "left" : "StatisticalSummary",
      "right" : "StatisticalSummary",
      "info" : "SimpleType[5589-5607]:SimpleType[5589-5607]"
    }, {
      "left" : "getSummary",
      "right" : "getSummary",
      "info" : "SimpleName[5608-5618]:SimpleName[5608-5618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5621-5753]:Block[5621-5753]"
    }, {
      "left" : "return new StatisticalSummaryValues(getMean(), getVariance(), getN(),\n                getMax(), getMin(), getSum());",
      "right" : "return new StatisticalSummaryValues(getMean(), getVariance(), getN(),\n                getMax(), getMin(), getSum());",
      "info" : "ReturnStatement[5631-5747]:ReturnStatement[5631-5747]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5843-5849]:Modifier[5843-5849]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5850-5854]:PrimitiveType[5850-5854]"
    }, {
      "left" : "addValue",
      "right" : "addValue",
      "info" : "SimpleName[5855-5863]:SimpleName[5855-5863]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[5864-5876]:SingleVariableDeclaration[5864-5876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5878-6512]:Block[5878-6473]"
    }, {
      "left" : "sumImpl.increment(value);",
      "right" : "sumImpl.increment(value);",
      "info" : "ExpressionStatement[5888-5913]:ExpressionStatement[5888-5913]"
    }, {
      "left" : "sumsqImpl.increment(value);",
      "right" : "sumsqImpl.increment(value);",
      "info" : "ExpressionStatement[5922-5949]:ExpressionStatement[5922-5949]"
    }, {
      "left" : "minImpl.increment(value);",
      "right" : "minImpl.increment(value);",
      "info" : "ExpressionStatement[5958-5983]:ExpressionStatement[5958-5983]"
    }, {
      "left" : "maxImpl.increment(value);",
      "right" : "maxImpl.increment(value);",
      "info" : "ExpressionStatement[5992-6017]:ExpressionStatement[5992-6017]"
    }, {
      "left" : "sumLogImpl.increment(value);",
      "right" : "sumLogImpl.increment(value);",
      "info" : "ExpressionStatement[6026-6054]:ExpressionStatement[6026-6054]"
    }, {
      "left" : "secondMoment.increment(value);",
      "right" : "secondMoment.increment(value);",
      "info" : "ExpressionStatement[6063-6093]:ExpressionStatement[6063-6093]"
    }, {
      "left" : "if (!(meanImpl instanceof Mean))",
      "right" : "if (meanImpl != mean)",
      "info" : "IfStatement[6199-6282]:IfStatement[6199-6271]"
    }, {
      "left" : "meanImpl",
      "right" : "meanImpl",
      "info" : "SimpleName[6205-6213]:SimpleName[6203-6211]"
    }, {
      "left" : "Mean",
      "right" : "mean",
      "info" : "SimpleName[6225-6229]:SimpleName[6215-6219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6232-6282]:Block[6221-6271]"
    }, {
      "left" : "meanImpl.increment(value);",
      "right" : "meanImpl.increment(value);",
      "info" : "ExpressionStatement[6246-6272]:ExpressionStatement[6235-6261]"
    }, {
      "left" : "if (!(varianceImpl instanceof Variance))",
      "right" : "if (varianceImpl != variance)",
      "info" : "IfStatement[6291-6386]:IfStatement[6280-6364]"
    }, {
      "left" : "varianceImpl",
      "right" : "varianceImpl",
      "info" : "SimpleName[6297-6309]:SimpleName[6284-6296]"
    }, {
      "left" : "Variance",
      "right" : "variance",
      "info" : "SimpleName[6321-6329]:SimpleName[6300-6308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6332-6386]:Block[6310-6364]"
    }, {
      "left" : "varianceImpl.increment(value);",
      "right" : "varianceImpl.increment(value);",
      "info" : "ExpressionStatement[6346-6376]:ExpressionStatement[6324-6354]"
    }, {
      "left" : "if (!(geoMeanImpl instanceof GeometricMean))",
      "right" : "if (geoMeanImpl != geoMean)",
      "info" : "IfStatement[6395-6493]:IfStatement[6373-6454]"
    }, {
      "left" : "geoMeanImpl",
      "right" : "geoMeanImpl",
      "info" : "SimpleName[6401-6412]:SimpleName[6377-6388]"
    }, {
      "left" : "GeometricMean",
      "right" : "geoMean",
      "info" : "SimpleName[6424-6437]:SimpleName[6392-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6440-6493]:Block[6401-6454]"
    }, {
      "left" : "geoMeanImpl.increment(value);",
      "right" : "geoMeanImpl.increment(value);",
      "info" : "ExpressionStatement[6454-6483]:ExpressionStatement[6415-6444]"
    }, {
      "left" : "n++;",
      "right" : "n++;",
      "info" : "ExpressionStatement[6502-6506]:ExpressionStatement[6463-6467]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6626-6632]:Modifier[6587-6593]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[6633-6637]:PrimitiveType[6594-6598]"
    }, {
      "left" : "getN",
      "right" : "getN",
      "info" : "SimpleName[6638-6642]:SimpleName[6599-6603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6645-6670]:Block[6606-6631]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[6655-6664]:ReturnStatement[6616-6625]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6829-6835]:Modifier[6790-6796]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6836-6842]:PrimitiveType[6797-6803]"
    }, {
      "left" : "getSum",
      "right" : "getSum",
      "info" : "SimpleName[6843-6849]:SimpleName[6804-6810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6852-6895]:Block[6813-6856]"
    }, {
      "left" : "return sumImpl.getResult();",
      "right" : "return sumImpl.getResult();",
      "info" : "ReturnStatement[6862-6889]:ReturnStatement[6823-6850]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7108-7114]:Modifier[7069-7075]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[7115-7121]:PrimitiveType[7076-7082]"
    }, {
      "left" : "getSumsq",
      "right" : "getSumsq",
      "info" : "SimpleName[7122-7130]:SimpleName[7083-7091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7133-7178]:Block[7094-7139]"
    }, {
      "left" : "return sumsqImpl.getResult();",
      "right" : "return sumsqImpl.getResult();",
      "info" : "ReturnStatement[7143-7172]:ReturnStatement[7104-7133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7367-7373]:Modifier[7328-7334]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[7374-7380]:PrimitiveType[7335-7341]"
    }, {
      "left" : "getMean",
      "right" : "getMean",
      "info" : "SimpleName[7381-7388]:SimpleName[7342-7349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7391-7435]:Block[7352-7396]"
    }, {
      "left" : "return meanImpl.getResult();",
      "right" : "return meanImpl.getResult();",
      "info" : "ReturnStatement[7401-7429]:ReturnStatement[7362-7390]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7652-7658]:Modifier[7613-7619]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[7659-7665]:PrimitiveType[7620-7626]"
    }, {
      "left" : "getStandardDeviation",
      "right" : "getStandardDeviation",
      "info" : "SimpleName[7666-7686]:SimpleName[7627-7647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7689-7941]:Block[7650-7902]"
    }, {
      "left" : "double stdDev = Double.NaN;",
      "right" : "double stdDev = Double.NaN;",
      "info" : "VariableDeclarationStatement[7699-7726]:VariableDeclarationStatement[7660-7687]"
    }, {
      "left" : "if (getN() > 0)",
      "right" : "if (getN() > 0)",
      "info" : "IfStatement[7735-7912]:IfStatement[7696-7873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7751-7912]:Block[7712-7873]"
    }, {
      "left" : "if (getN() > 1)",
      "right" : "if (getN() > 1)",
      "info" : "IfStatement[7765-7902]:IfStatement[7726-7863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7781-7851]:Block[7742-7812]"
    }, {
      "left" : "stdDev = FastMath.sqrt(getVariance());",
      "right" : "stdDev = FastMath.sqrt(getVariance());",
      "info" : "ExpressionStatement[7799-7837]:ExpressionStatement[7760-7798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7857-7902]:Block[7818-7863]"
    }, {
      "left" : "stdDev = 0.0;",
      "right" : "stdDev = 0.0;",
      "info" : "ExpressionStatement[7875-7888]:ExpressionStatement[7836-7849]"
    }, {
      "left" : "return stdDev;",
      "right" : "return stdDev;",
      "info" : "ReturnStatement[7921-7935]:ReturnStatement[7882-7896]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8352-8358]:Modifier[8313-8319]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[8359-8365]:PrimitiveType[8320-8326]"
    }, {
      "left" : "getVariance",
      "right" : "getVariance",
      "info" : "SimpleName[8366-8377]:SimpleName[8327-8338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8380-8428]:Block[8341-8389]"
    }, {
      "left" : "return varianceImpl.getResult();",
      "right" : "return varianceImpl.getResult();",
      "info" : "ReturnStatement[8390-8422]:ReturnStatement[8351-8383]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8724-8730]:Modifier[8685-8691]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[8731-8737]:PrimitiveType[8692-8698]"
    }, {
      "left" : "getPopulationVariance",
      "right" : "getPopulationVariance",
      "info" : "SimpleName[8738-8759]:SimpleName[8699-8720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8762-8934]:Block[8723-8895]"
    }, {
      "left" : "Variance populationVariance = new Variance(secondMoment);",
      "right" : "Variance populationVariance = new Variance(secondMoment);",
      "info" : "VariableDeclarationStatement[8772-8829]:VariableDeclarationStatement[8733-8790]"
    }, {
      "left" : "populationVariance.setBiasCorrected(false);",
      "right" : "populationVariance.setBiasCorrected(false);",
      "info" : "ExpressionStatement[8838-8881]:ExpressionStatement[8799-8842]"
    }, {
      "left" : "return populationVariance.getResult();",
      "right" : "return populationVariance.getResult();",
      "info" : "ReturnStatement[8890-8928]:ReturnStatement[8851-8889]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9129-9135]:Modifier[9090-9096]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[9136-9142]:PrimitiveType[9097-9103]"
    }, {
      "left" : "getMax",
      "right" : "getMax",
      "info" : "SimpleName[9143-9149]:SimpleName[9104-9110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9152-9195]:Block[9113-9156]"
    }, {
      "left" : "return maxImpl.getResult();",
      "right" : "return maxImpl.getResult();",
      "info" : "ReturnStatement[9162-9189]:ReturnStatement[9123-9150]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9390-9396]:Modifier[9351-9357]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[9397-9403]:PrimitiveType[9358-9364]"
    }, {
      "left" : "getMin",
      "right" : "getMin",
      "info" : "SimpleName[9404-9410]:SimpleName[9365-9371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9413-9456]:Block[9374-9417]"
    }, {
      "left" : "return minImpl.getResult();",
      "right" : "return minImpl.getResult();",
      "info" : "ReturnStatement[9423-9450]:ReturnStatement[9384-9411]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9665-9671]:Modifier[9626-9632]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[9672-9678]:PrimitiveType[9633-9639]"
    }, {
      "left" : "getGeometricMean",
      "right" : "getGeometricMean",
      "info" : "SimpleName[9679-9695]:SimpleName[9640-9656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9698-9745]:Block[9659-9706]"
    }, {
      "left" : "return geoMeanImpl.getResult();",
      "right" : "return geoMeanImpl.getResult();",
      "info" : "ReturnStatement[9708-9739]:ReturnStatement[9669-9700]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9970-9976]:Modifier[9931-9937]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[9977-9983]:PrimitiveType[9938-9944]"
    }, {
      "left" : "getSumOfLogs",
      "right" : "getSumOfLogs",
      "info" : "SimpleName[9984-9996]:SimpleName[9945-9957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9999-10045]:Block[9960-10006]"
    }, {
      "left" : "return sumLogImpl.getResult();",
      "right" : "return sumLogImpl.getResult();",
      "info" : "ReturnStatement[10009-10039]:ReturnStatement[9970-10000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10513-10519]:Modifier[10474-10480]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[10520-10526]:PrimitiveType[10481-10487]"
    }, {
      "left" : "getSecondMoment",
      "right" : "getSecondMoment",
      "info" : "SimpleName[10527-10542]:SimpleName[10488-10503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10545-10593]:Block[10506-10554]"
    }, {
      "left" : "return secondMoment.getResult();",
      "right" : "return secondMoment.getResult();",
      "info" : "ReturnStatement[10555-10587]:ReturnStatement[10516-10548]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10795-10804]:MarkerAnnotation[10756-10765]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10809-10815]:Modifier[10770-10776]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10816-10822]:SimpleType[10777-10783]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[10823-10831]:SimpleName[10784-10792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10834-11718]:Block[10795-11679]"
    }, {
      "left" : "StringBuilder outBuffer = new StringBuilder();",
      "right" : "StringBuilder outBuffer = new StringBuilder();",
      "info" : "VariableDeclarationStatement[10844-10890]:VariableDeclarationStatement[10805-10851]"
    }, {
      "left" : "String endl = \"\\n\";",
      "right" : "String endl = \"\\n\";",
      "info" : "VariableDeclarationStatement[10899-10918]:VariableDeclarationStatement[10860-10879]"
    }, {
      "left" : "outBuffer.append(\"SummaryStatistics:\").append(endl);",
      "right" : "outBuffer.append(\"SummaryStatistics:\").append(endl);",
      "info" : "ExpressionStatement[10927-10979]:ExpressionStatement[10888-10940]"
    }, {
      "left" : "outBuffer.append(\"n: \").append(getN()).append(endl);",
      "right" : "outBuffer.append(\"n: \").append(getN()).append(endl);",
      "info" : "ExpressionStatement[10988-11040]:ExpressionStatement[10949-11001]"
    }, {
      "left" : "outBuffer.append(\"min: \").append(getMin()).append(endl);",
      "right" : "outBuffer.append(\"min: \").append(getMin()).append(endl);",
      "info" : "ExpressionStatement[11049-11105]:ExpressionStatement[11010-11066]"
    }, {
      "left" : "outBuffer.append(\"max: \").append(getMax()).append(endl);",
      "right" : "outBuffer.append(\"max: \").append(getMax()).append(endl);",
      "info" : "ExpressionStatement[11114-11170]:ExpressionStatement[11075-11131]"
    }, {
      "left" : "outBuffer.append(\"mean: \").append(getMean()).append(endl);",
      "right" : "outBuffer.append(\"mean: \").append(getMean()).append(endl);",
      "info" : "ExpressionStatement[11179-11237]:ExpressionStatement[11140-11198]"
    }, {
      "left" : "outBuffer.append(\"geometric mean: \").append(getGeometricMean())\n            .append(endl);",
      "right" : "outBuffer.append(\"geometric mean: \").append(getGeometricMean())\n            .append(endl);",
      "info" : "ExpressionStatement[11246-11336]:ExpressionStatement[11207-11297]"
    }, {
      "left" : "outBuffer.append(\"variance: \").append(getVariance()).append(endl);",
      "right" : "outBuffer.append(\"variance: \").append(getVariance()).append(endl);",
      "info" : "ExpressionStatement[11345-11411]:ExpressionStatement[11306-11372]"
    }, {
      "left" : "outBuffer.append(\"sum of squares: \").append(getSumsq()).append(endl);",
      "right" : "outBuffer.append(\"sum of squares: \").append(getSumsq()).append(endl);",
      "info" : "ExpressionStatement[11420-11489]:ExpressionStatement[11381-11450]"
    }, {
      "left" : "outBuffer.append(\"standard deviation: \").append(getStandardDeviation())\n            .append(endl);",
      "right" : "outBuffer.append(\"standard deviation: \").append(getStandardDeviation())\n            .append(endl);",
      "info" : "ExpressionStatement[11498-11596]:ExpressionStatement[11459-11557]"
    }, {
      "left" : "outBuffer.append(\"sum of logs: \").append(getSumOfLogs()).append(endl);",
      "right" : "outBuffer.append(\"sum of logs: \").append(getSumOfLogs()).append(endl);",
      "info" : "ExpressionStatement[11605-11675]:ExpressionStatement[11566-11636]"
    }, {
      "left" : "return outBuffer.toString();",
      "right" : "return outBuffer.toString();",
      "info" : "ReturnStatement[11684-11712]:ReturnStatement[11645-11673]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11781-11787]:Modifier[11742-11748]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11788-11792]:PrimitiveType[11749-11753]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[11793-11798]:SimpleName[11754-11759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11801-12173]:Block[11762-12134]"
    }, {
      "left" : "this.n = 0;",
      "right" : "this.n = 0;",
      "info" : "ExpressionStatement[11811-11822]:ExpressionStatement[11772-11783]"
    }, {
      "left" : "minImpl.clear();",
      "right" : "minImpl.clear();",
      "info" : "ExpressionStatement[11831-11847]:ExpressionStatement[11792-11808]"
    }, {
      "left" : "maxImpl.clear();",
      "right" : "maxImpl.clear();",
      "info" : "ExpressionStatement[11856-11872]:ExpressionStatement[11817-11833]"
    }, {
      "left" : "sumImpl.clear();",
      "right" : "sumImpl.clear();",
      "info" : "ExpressionStatement[11881-11897]:ExpressionStatement[11842-11858]"
    }, {
      "left" : "sumLogImpl.clear();",
      "right" : "sumLogImpl.clear();",
      "info" : "ExpressionStatement[11906-11925]:ExpressionStatement[11867-11886]"
    }, {
      "left" : "sumsqImpl.clear();",
      "right" : "sumsqImpl.clear();",
      "info" : "ExpressionStatement[11934-11952]:ExpressionStatement[11895-11913]"
    }, {
      "left" : "geoMeanImpl.clear();",
      "right" : "geoMeanImpl.clear();",
      "info" : "ExpressionStatement[11961-11981]:ExpressionStatement[11922-11942]"
    }, {
      "left" : "secondMoment.clear();",
      "right" : "secondMoment.clear();",
      "info" : "ExpressionStatement[11990-12011]:ExpressionStatement[11951-11972]"
    }, {
      "left" : "if (meanImpl != mean)",
      "right" : "if (meanImpl != mean)",
      "info" : "IfStatement[12020-12083]:IfStatement[11981-12044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12042-12083]:Block[12003-12044]"
    }, {
      "left" : "meanImpl.clear();",
      "right" : "meanImpl.clear();",
      "info" : "ExpressionStatement[12056-12073]:ExpressionStatement[12017-12034]"
    }, {
      "left" : "if (varianceImpl != variance)",
      "right" : "if (varianceImpl != variance)",
      "info" : "IfStatement[12092-12167]:IfStatement[12053-12128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12122-12167]:Block[12083-12128]"
    }, {
      "left" : "varianceImpl.clear();",
      "right" : "varianceImpl.clear();",
      "info" : "ExpressionStatement[12136-12157]:ExpressionStatement[12097-12118]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12447-12456]:MarkerAnnotation[12408-12417]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12461-12467]:Modifier[12422-12428]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[12468-12475]:PrimitiveType[12429-12436]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[12476-12482]:SimpleName[12437-12443]"
    }, {
      "left" : "Object object",
      "right" : "Object object",
      "info" : "SingleVariableDeclaration[12483-12496]:SingleVariableDeclaration[12444-12457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12498-13455]:Block[12459-13416]"
    }, {
      "left" : "if (object == this)",
      "right" : "if (object == this)",
      "info" : "IfStatement[12508-12564]:IfStatement[12469-12525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12528-12564]:Block[12489-12525]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12542-12554]:ReturnStatement[12503-12515]"
    }, {
      "left" : "if (object instanceof SummaryStatistics == false)",
      "right" : "if (object instanceof SummaryStatistics == false)",
      "info" : "IfStatement[12573-12660]:IfStatement[12534-12621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12623-12660]:Block[12584-12621]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12637-12650]:ReturnStatement[12598-12611]"
    }, {
      "left" : "SummaryStatistics stat = (SummaryStatistics)object;",
      "right" : "SummaryStatistics stat = (SummaryStatistics)object;",
      "info" : "VariableDeclarationStatement[12669-12720]:VariableDeclarationStatement[12630-12681]"
    }, {
      "left" : "return Precision.equalsIncludingNaN(stat.getGeometricMean(), getGeometricMean()) &&\n               Precision.equalsIncludingNaN(stat.getMax(),           getMax())           &&\n               Precision.equalsIncludingNaN(stat.getMean(),          getMean())          &&\n               Precision.equalsIncludingNaN(stat.getMin(),           getMin())           &&\n               Precision.equalsIncludingNaN(stat.getN(),             getN())             &&\n               Precision.equalsIncludingNaN(stat.getSum(),           getSum())           &&\n               Precision.equalsIncludingNaN(stat.getSumsq(),         getSumsq())         &&\n               Precision.equalsIncludingNaN(stat.getVariance(),      getVariance());",
      "right" : "return Precision.equalsIncludingNaN(stat.getGeometricMean(), getGeometricMean()) &&\n               Precision.equalsIncludingNaN(stat.getMax(),           getMax())           &&\n               Precision.equalsIncludingNaN(stat.getMean(),          getMean())          &&\n               Precision.equalsIncludingNaN(stat.getMin(),           getMin())           &&\n               Precision.equalsIncludingNaN(stat.getN(),             getN())             &&\n               Precision.equalsIncludingNaN(stat.getSum(),           getSum())           &&\n               Precision.equalsIncludingNaN(stat.getSumsq(),         getSumsq())         &&\n               Precision.equalsIncludingNaN(stat.getVariance(),      getVariance());",
      "info" : "ReturnStatement[12729-13449]:ReturnStatement[12690-13410]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13557-13566]:MarkerAnnotation[13518-13527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13571-13577]:Modifier[13532-13538]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[13578-13581]:PrimitiveType[13539-13542]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[13582-13590]:SimpleName[13543-13551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13593-14157]:Block[13554-14118]"
    }, {
      "left" : "int result = 31 + MathUtils.hash(getGeometricMean());",
      "right" : "int result = 31 + MathUtils.hash(getGeometricMean());",
      "info" : "VariableDeclarationStatement[13603-13656]:VariableDeclarationStatement[13564-13617]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getGeometricMean());",
      "right" : "result = result * 31 + MathUtils.hash(getGeometricMean());",
      "info" : "ExpressionStatement[13665-13723]:ExpressionStatement[13626-13684]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getMax());",
      "right" : "result = result * 31 + MathUtils.hash(getMax());",
      "info" : "ExpressionStatement[13732-13780]:ExpressionStatement[13693-13741]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getMean());",
      "right" : "result = result * 31 + MathUtils.hash(getMean());",
      "info" : "ExpressionStatement[13789-13838]:ExpressionStatement[13750-13799]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getMin());",
      "right" : "result = result * 31 + MathUtils.hash(getMin());",
      "info" : "ExpressionStatement[13847-13895]:ExpressionStatement[13808-13856]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getN());",
      "right" : "result = result * 31 + MathUtils.hash(getN());",
      "info" : "ExpressionStatement[13904-13950]:ExpressionStatement[13865-13911]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getSum());",
      "right" : "result = result * 31 + MathUtils.hash(getSum());",
      "info" : "ExpressionStatement[13959-14007]:ExpressionStatement[13920-13968]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getSumsq());",
      "right" : "result = result * 31 + MathUtils.hash(getSumsq());",
      "info" : "ExpressionStatement[14016-14066]:ExpressionStatement[13977-14027]"
    }, {
      "left" : "result = result * 31 + MathUtils.hash(getVariance());",
      "right" : "result = result * 31 + MathUtils.hash(getVariance());",
      "info" : "ExpressionStatement[14075-14128]:ExpressionStatement[14036-14089]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[14137-14151]:ReturnStatement[14098-14112]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14383-14389]:Modifier[14344-14350]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[14390-14418]:SimpleType[14351-14379]"
    }, {
      "left" : "getSumImpl",
      "right" : "getSumImpl",
      "info" : "SimpleName[14419-14429]:SimpleName[14380-14390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14432-14463]:Block[14393-14424]"
    }, {
      "left" : "return sumImpl;",
      "right" : "return sumImpl;",
      "info" : "ReturnStatement[14442-14457]:ReturnStatement[14403-14418]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15008-15014]:Modifier[14969-14975]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15015-15019]:PrimitiveType[14976-14980]"
    }, {
      "left" : "setSumImpl",
      "right" : "setSumImpl",
      "info" : "SimpleName[15020-15030]:SimpleName[14981-14991]"
    }, {
      "left" : "StorelessUnivariateStatistic sumImpl",
      "right" : "StorelessUnivariateStatistic sumImpl",
      "info" : "SingleVariableDeclaration[15031-15067]:SingleVariableDeclaration[14992-15028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15069-15130]:Block[15030-15091]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[15079-15092]:ExpressionStatement[15040-15053]"
    }, {
      "left" : "this.sumImpl = sumImpl;",
      "right" : "this.sumImpl = sumImpl;",
      "info" : "ExpressionStatement[15101-15124]:ExpressionStatement[15062-15085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15320-15326]:Modifier[15281-15287]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[15327-15355]:SimpleType[15288-15316]"
    }, {
      "left" : "getSumsqImpl",
      "right" : "getSumsqImpl",
      "info" : "SimpleName[15356-15368]:SimpleName[15317-15329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15371-15404]:Block[15332-15365]"
    }, {
      "left" : "return sumsqImpl;",
      "right" : "return sumsqImpl;",
      "info" : "ReturnStatement[15381-15398]:ReturnStatement[15342-15359]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15973-15979]:Modifier[15934-15940]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15980-15984]:PrimitiveType[15941-15945]"
    }, {
      "left" : "setSumsqImpl",
      "right" : "setSumsqImpl",
      "info" : "SimpleName[15985-15997]:SimpleName[15946-15958]"
    }, {
      "left" : "StorelessUnivariateStatistic sumsqImpl",
      "right" : "StorelessUnivariateStatistic sumsqImpl",
      "info" : "SingleVariableDeclaration[15998-16036]:SingleVariableDeclaration[15959-15997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16038-16103]:Block[15999-16064]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[16048-16061]:ExpressionStatement[16009-16022]"
    }, {
      "left" : "this.sumsqImpl = sumsqImpl;",
      "right" : "this.sumsqImpl = sumsqImpl;",
      "info" : "ExpressionStatement[16070-16097]:ExpressionStatement[16031-16058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16279-16285]:Modifier[16240-16246]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[16286-16314]:SimpleType[16247-16275]"
    }, {
      "left" : "getMinImpl",
      "right" : "getMinImpl",
      "info" : "SimpleName[16315-16325]:SimpleName[16276-16286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16328-16359]:Block[16289-16320]"
    }, {
      "left" : "return minImpl;",
      "right" : "return minImpl;",
      "info" : "ReturnStatement[16338-16353]:ReturnStatement[16299-16314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16912-16918]:Modifier[16873-16879]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16919-16923]:PrimitiveType[16880-16884]"
    }, {
      "left" : "setMinImpl",
      "right" : "setMinImpl",
      "info" : "SimpleName[16924-16934]:SimpleName[16885-16895]"
    }, {
      "left" : "StorelessUnivariateStatistic minImpl",
      "right" : "StorelessUnivariateStatistic minImpl",
      "info" : "SingleVariableDeclaration[16935-16971]:SingleVariableDeclaration[16896-16932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16973-17034]:Block[16934-16995]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[16983-16996]:ExpressionStatement[16944-16957]"
    }, {
      "left" : "this.minImpl = minImpl;",
      "right" : "this.minImpl = minImpl;",
      "info" : "ExpressionStatement[17005-17028]:ExpressionStatement[16966-16989]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17210-17216]:Modifier[17171-17177]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[17217-17245]:SimpleType[17178-17206]"
    }, {
      "left" : "getMaxImpl",
      "right" : "getMaxImpl",
      "info" : "SimpleName[17246-17256]:SimpleName[17207-17217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17259-17290]:Block[17220-17251]"
    }, {
      "left" : "return maxImpl;",
      "right" : "return maxImpl;",
      "info" : "ReturnStatement[17269-17284]:ReturnStatement[17230-17245]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17843-17849]:Modifier[17804-17810]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17850-17854]:PrimitiveType[17811-17815]"
    }, {
      "left" : "setMaxImpl",
      "right" : "setMaxImpl",
      "info" : "SimpleName[17855-17865]:SimpleName[17816-17826]"
    }, {
      "left" : "StorelessUnivariateStatistic maxImpl",
      "right" : "StorelessUnivariateStatistic maxImpl",
      "info" : "SingleVariableDeclaration[17866-17902]:SingleVariableDeclaration[17827-17863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17904-17965]:Block[17865-17926]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[17914-17927]:ExpressionStatement[17875-17888]"
    }, {
      "left" : "this.maxImpl = maxImpl;",
      "right" : "this.maxImpl = maxImpl;",
      "info" : "ExpressionStatement[17936-17959]:ExpressionStatement[17897-17920]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18145-18151]:Modifier[18106-18112]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[18152-18180]:SimpleType[18113-18141]"
    }, {
      "left" : "getSumLogImpl",
      "right" : "getSumLogImpl",
      "info" : "SimpleName[18181-18194]:SimpleName[18142-18155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18197-18231]:Block[18158-18192]"
    }, {
      "left" : "return sumLogImpl;",
      "right" : "return sumLogImpl;",
      "info" : "ReturnStatement[18207-18225]:ReturnStatement[18168-18186]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18791-18797]:Modifier[18752-18758]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18798-18802]:PrimitiveType[18759-18763]"
    }, {
      "left" : "setSumLogImpl",
      "right" : "setSumLogImpl",
      "info" : "SimpleName[18803-18816]:SimpleName[18764-18777]"
    }, {
      "left" : "StorelessUnivariateStatistic sumLogImpl",
      "right" : "StorelessUnivariateStatistic sumLogImpl",
      "info" : "SingleVariableDeclaration[18817-18856]:SingleVariableDeclaration[18778-18817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18858-18968]:Block[18819-18929]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[18868-18881]:ExpressionStatement[18829-18842]"
    }, {
      "left" : "this.sumLogImpl = sumLogImpl;",
      "right" : "this.sumLogImpl = sumLogImpl;",
      "info" : "ExpressionStatement[18890-18919]:ExpressionStatement[18851-18880]"
    }, {
      "left" : "geoMean.setSumLogImpl(sumLogImpl);",
      "right" : "geoMean.setSumLogImpl(sumLogImpl);",
      "info" : "ExpressionStatement[18928-18962]:ExpressionStatement[18889-18923]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19158-19164]:Modifier[19119-19125]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[19165-19193]:SimpleType[19126-19154]"
    }, {
      "left" : "getGeoMeanImpl",
      "right" : "getGeoMeanImpl",
      "info" : "SimpleName[19194-19208]:SimpleName[19155-19169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19211-19246]:Block[19172-19207]"
    }, {
      "left" : "return geoMeanImpl;",
      "right" : "return geoMeanImpl;",
      "info" : "ReturnStatement[19221-19240]:ReturnStatement[19182-19201]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19817-19823]:Modifier[19778-19784]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19824-19828]:PrimitiveType[19785-19789]"
    }, {
      "left" : "setGeoMeanImpl",
      "right" : "setGeoMeanImpl",
      "info" : "SimpleName[19829-19843]:SimpleName[19790-19804]"
    }, {
      "left" : "StorelessUnivariateStatistic geoMeanImpl",
      "right" : "StorelessUnivariateStatistic geoMeanImpl",
      "info" : "SingleVariableDeclaration[19844-19884]:SingleVariableDeclaration[19805-19845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19886-19955]:Block[19847-19916]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[19896-19909]:ExpressionStatement[19857-19870]"
    }, {
      "left" : "this.geoMeanImpl = geoMeanImpl;",
      "right" : "this.geoMeanImpl = geoMeanImpl;",
      "info" : "ExpressionStatement[19918-19949]:ExpressionStatement[19879-19910]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20125-20131]:Modifier[20086-20092]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[20132-20160]:SimpleType[20093-20121]"
    }, {
      "left" : "getMeanImpl",
      "right" : "getMeanImpl",
      "info" : "SimpleName[20161-20172]:SimpleName[20122-20133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20175-20207]:Block[20136-20168]"
    }, {
      "left" : "return meanImpl;",
      "right" : "return meanImpl;",
      "info" : "ReturnStatement[20185-20201]:ReturnStatement[20146-20162]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20755-20761]:Modifier[20716-20722]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20762-20766]:PrimitiveType[20723-20727]"
    }, {
      "left" : "setMeanImpl",
      "right" : "setMeanImpl",
      "info" : "SimpleName[20767-20778]:SimpleName[20728-20739]"
    }, {
      "left" : "StorelessUnivariateStatistic meanImpl",
      "right" : "StorelessUnivariateStatistic meanImpl",
      "info" : "SingleVariableDeclaration[20779-20816]:SingleVariableDeclaration[20740-20777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20818-20881]:Block[20779-20842]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[20828-20841]:ExpressionStatement[20789-20802]"
    }, {
      "left" : "this.meanImpl = meanImpl;",
      "right" : "this.meanImpl = meanImpl;",
      "info" : "ExpressionStatement[20850-20875]:ExpressionStatement[20811-20836]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21059-21065]:Modifier[21020-21026]"
    }, {
      "left" : "StorelessUnivariateStatistic",
      "right" : "StorelessUnivariateStatistic",
      "info" : "SimpleType[21066-21094]:SimpleType[21027-21055]"
    }, {
      "left" : "getVarianceImpl",
      "right" : "getVarianceImpl",
      "info" : "SimpleName[21095-21110]:SimpleName[21056-21071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21113-21149]:Block[21074-21110]"
    }, {
      "left" : "return varianceImpl;",
      "right" : "return varianceImpl;",
      "info" : "ReturnStatement[21123-21143]:ReturnStatement[21084-21104]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21709-21715]:Modifier[21670-21676]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21716-21720]:PrimitiveType[21677-21681]"
    }, {
      "left" : "setVarianceImpl",
      "right" : "setVarianceImpl",
      "info" : "SimpleName[21721-21736]:SimpleName[21682-21697]"
    }, {
      "left" : "StorelessUnivariateStatistic varianceImpl",
      "right" : "StorelessUnivariateStatistic varianceImpl",
      "info" : "SingleVariableDeclaration[21737-21778]:SingleVariableDeclaration[21698-21739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21780-21851]:Block[21741-21812]"
    }, {
      "left" : "checkEmpty();",
      "right" : "checkEmpty();",
      "info" : "ExpressionStatement[21790-21803]:ExpressionStatement[21751-21764]"
    }, {
      "left" : "this.varianceImpl = varianceImpl;",
      "right" : "this.varianceImpl = varianceImpl;",
      "info" : "ExpressionStatement[21812-21845]:ExpressionStatement[21773-21806]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21919-21926]:Modifier[21880-21887]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21927-21931]:PrimitiveType[21888-21892]"
    }, {
      "left" : "checkEmpty",
      "right" : "checkEmpty",
      "info" : "SimpleName[21932-21942]:SimpleName[21893-21903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21945-22112]:Block[21906-22073]"
    }, {
      "left" : "if (n > 0)",
      "right" : "if (n > 0)",
      "info" : "IfStatement[21955-22106]:IfStatement[21916-22067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21966-22106]:Block[21927-22067]"
    }, {
      "left" : "throw new MathIllegalStateException(\n                LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, n);",
      "right" : "throw new MathIllegalStateException(\n                LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, n);",
      "info" : "ThrowStatement[21980-22096]:ThrowStatement[21941-22057]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22258-22264]:Modifier[22219-22225]"
    }, {
      "left" : "SummaryStatistics",
      "right" : "SummaryStatistics",
      "info" : "SimpleType[22265-22282]:SimpleType[22226-22243]"
    }, {
      "left" : "copy",
      "right" : "copy",
      "info" : "SimpleName[22283-22287]:SimpleName[22244-22248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22290-22408]:Block[22251-22369]"
    }, {
      "left" : "SummaryStatistics result = new SummaryStatistics();",
      "right" : "SummaryStatistics result = new SummaryStatistics();",
      "info" : "VariableDeclarationStatement[22300-22351]:VariableDeclarationStatement[22261-22312]"
    }, {
      "left" : "copy(this, result);",
      "right" : "copy(this, result);",
      "info" : "ExpressionStatement[22360-22379]:ExpressionStatement[22321-22340]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[22388-22402]:ReturnStatement[22349-22363]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22683-22689]:Modifier[22644-22650]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22690-22696]:Modifier[22651-22657]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22697-22701]:PrimitiveType[22658-22662]"
    }, {
      "left" : "copy",
      "right" : "copy",
      "info" : "SimpleName[22702-22706]:SimpleName[22663-22667]"
    }, {
      "left" : "SummaryStatistics source",
      "right" : "SummaryStatistics source",
      "info" : "SingleVariableDeclaration[22707-22731]:SingleVariableDeclaration[22668-22692]"
    }, {
      "left" : "SummaryStatistics dest",
      "right" : "SummaryStatistics dest",
      "info" : "SingleVariableDeclaration[22733-22755]:SingleVariableDeclaration[22694-22716]"
    }, {
      "left" : "NullArgumentException",
      "right" : "NullArgumentException",
      "info" : "SimpleType[22772-22793]:SimpleType[22733-22754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22794-25431]:Block[22755-25392]"
    }, {
      "left" : "MathUtils.checkNotNull(source);",
      "right" : "MathUtils.checkNotNull(source);",
      "info" : "ExpressionStatement[22804-22835]:ExpressionStatement[22765-22796]"
    }, {
      "left" : "MathUtils.checkNotNull(dest);",
      "right" : "MathUtils.checkNotNull(dest);",
      "info" : "ExpressionStatement[22844-22873]:ExpressionStatement[22805-22834]"
    }, {
      "left" : "dest.maxImpl = source.maxImpl.copy();",
      "right" : "dest.maxImpl = source.maxImpl.copy();",
      "info" : "ExpressionStatement[22882-22919]:ExpressionStatement[22843-22880]"
    }, {
      "left" : "dest.minImpl = source.minImpl.copy();",
      "right" : "dest.minImpl = source.minImpl.copy();",
      "info" : "ExpressionStatement[22928-22965]:ExpressionStatement[22889-22926]"
    }, {
      "left" : "dest.sumImpl = source.sumImpl.copy();",
      "right" : "dest.sumImpl = source.sumImpl.copy();",
      "info" : "ExpressionStatement[22974-23011]:ExpressionStatement[22935-22972]"
    }, {
      "left" : "dest.sumLogImpl = source.sumLogImpl.copy();",
      "right" : "dest.sumLogImpl = source.sumLogImpl.copy();",
      "info" : "ExpressionStatement[23020-23063]:ExpressionStatement[22981-23024]"
    }, {
      "left" : "dest.sumsqImpl = source.sumsqImpl.copy();",
      "right" : "dest.sumsqImpl = source.sumsqImpl.copy();",
      "info" : "ExpressionStatement[23072-23113]:ExpressionStatement[23033-23074]"
    }, {
      "left" : "dest.secondMoment = source.secondMoment.copy();",
      "right" : "dest.secondMoment = source.secondMoment.copy();",
      "info" : "ExpressionStatement[23122-23169]:ExpressionStatement[23083-23130]"
    }, {
      "left" : "dest.n = source.n;",
      "right" : "dest.n = source.n;",
      "info" : "ExpressionStatement[23178-23196]:ExpressionStatement[23139-23157]"
    }, {
      "left" : "if (source.getVarianceImpl() instanceof Variance)",
      "right" : "if (source.getVarianceImpl() instanceof Variance)",
      "info" : "IfStatement[23286-23489]:IfStatement[23247-23450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23336-23412]:Block[23297-23373]"
    }, {
      "left" : "dest.varianceImpl = new Variance(dest.secondMoment);",
      "right" : "dest.varianceImpl = new Variance(dest.secondMoment);",
      "info" : "ExpressionStatement[23350-23402]:ExpressionStatement[23311-23363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23418-23489]:Block[23379-23450]"
    }, {
      "left" : "dest.varianceImpl = source.varianceImpl.copy();",
      "right" : "dest.varianceImpl = source.varianceImpl.copy();",
      "info" : "ExpressionStatement[23432-23479]:ExpressionStatement[23393-23440]"
    }, {
      "left" : "if (source.meanImpl instanceof Mean)",
      "right" : "if (source.meanImpl instanceof Mean)",
      "info" : "IfStatement[23498-23672]:IfStatement[23459-23633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23535-23603]:Block[23496-23564]"
    }, {
      "left" : "dest.meanImpl = new Mean(dest.secondMoment);",
      "right" : "dest.meanImpl = new Mean(dest.secondMoment);",
      "info" : "ExpressionStatement[23549-23593]:ExpressionStatement[23510-23554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23609-23672]:Block[23570-23633]"
    }, {
      "left" : "dest.meanImpl = source.meanImpl.copy();",
      "right" : "dest.meanImpl = source.meanImpl.copy();",
      "info" : "ExpressionStatement[23623-23662]:ExpressionStatement[23584-23623]"
    }, {
      "left" : "if (source.getGeoMeanImpl() instanceof GeometricMean)",
      "right" : "if (source.getGeoMeanImpl() instanceof GeometricMean)",
      "info" : "IfStatement[23681-23900]:IfStatement[23642-23861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23735-23825]:Block[23696-23786]"
    }, {
      "left" : "dest.geoMeanImpl = new GeometricMean((SumOfLogs) dest.sumLogImpl);",
      "right" : "dest.geoMeanImpl = new GeometricMean((SumOfLogs) dest.sumLogImpl);",
      "info" : "ExpressionStatement[23749-23815]:ExpressionStatement[23710-23776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23831-23900]:Block[23792-23861]"
    }, {
      "left" : "dest.geoMeanImpl = source.geoMeanImpl.copy();",
      "right" : "dest.geoMeanImpl = source.geoMeanImpl.copy();",
      "info" : "ExpressionStatement[23845-23890]:ExpressionStatement[23806-23851]"
    }, {
      "left" : "if (source.geoMean == source.geoMeanImpl)",
      "right" : "if (source.geoMean == source.geoMeanImpl)",
      "info" : "IfStatement[24018-24211]:IfStatement[23979-24172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24060-24132]:Block[24021-24093]"
    }, {
      "left" : "dest.geoMean = (GeometricMean) dest.geoMeanImpl;",
      "right" : "dest.geoMean = (GeometricMean) dest.geoMeanImpl;",
      "info" : "ExpressionStatement[24074-24122]:ExpressionStatement[24035-24083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24138-24211]:Block[24099-24172]"
    }, {
      "left" : "GeometricMean.copy(source.geoMean, dest.geoMean);",
      "right" : "GeometricMean.copy(source.geoMean, dest.geoMean);",
      "info" : "ExpressionStatement[24152-24201]:ExpressionStatement[24113-24162]"
    }, {
      "left" : "if (source.max == source.maxImpl)",
      "right" : "if (source.max == source.maxImpl)",
      "info" : "IfStatement[24220-24369]:IfStatement[24181-24330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24254-24308]:Block[24215-24269]"
    }, {
      "left" : "dest.max = (Max) dest.maxImpl;",
      "right" : "dest.max = (Max) dest.maxImpl;",
      "info" : "ExpressionStatement[24268-24298]:ExpressionStatement[24229-24259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24314-24369]:Block[24275-24330]"
    }, {
      "left" : "Max.copy(source.max, dest.max);",
      "right" : "Max.copy(source.max, dest.max);",
      "info" : "ExpressionStatement[24328-24359]:ExpressionStatement[24289-24320]"
    }, {
      "left" : "if (source.mean == source.meanImpl)",
      "right" : "if (source.mean == source.meanImpl)",
      "info" : "IfStatement[24378-24535]:IfStatement[24339-24496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24414-24471]:Block[24375-24432]"
    }, {
      "left" : "dest.mean = (Mean) dest.meanImpl;",
      "right" : "dest.mean = (Mean) dest.meanImpl;",
      "info" : "ExpressionStatement[24428-24461]:ExpressionStatement[24389-24422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24477-24535]:Block[24438-24496]"
    }, {
      "left" : "Mean.copy(source.mean, dest.mean);",
      "right" : "Mean.copy(source.mean, dest.mean);",
      "info" : "ExpressionStatement[24491-24525]:ExpressionStatement[24452-24486]"
    }, {
      "left" : "if (source.min == source.minImpl)",
      "right" : "if (source.min == source.minImpl)",
      "info" : "IfStatement[24544-24693]:IfStatement[24505-24654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24578-24632]:Block[24539-24593]"
    }, {
      "left" : "dest.min = (Min) dest.minImpl;",
      "right" : "dest.min = (Min) dest.minImpl;",
      "info" : "ExpressionStatement[24592-24622]:ExpressionStatement[24553-24583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24638-24693]:Block[24599-24654]"
    }, {
      "left" : "Min.copy(source.min, dest.min);",
      "right" : "Min.copy(source.min, dest.min);",
      "info" : "ExpressionStatement[24652-24683]:ExpressionStatement[24613-24644]"
    }, {
      "left" : "if (source.sum == source.sumImpl)",
      "right" : "if (source.sum == source.sumImpl)",
      "info" : "IfStatement[24702-24851]:IfStatement[24663-24812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24736-24790]:Block[24697-24751]"
    }, {
      "left" : "dest.sum = (Sum) dest.sumImpl;",
      "right" : "dest.sum = (Sum) dest.sumImpl;",
      "info" : "ExpressionStatement[24750-24780]:ExpressionStatement[24711-24741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24796-24851]:Block[24757-24812]"
    }, {
      "left" : "Sum.copy(source.sum, dest.sum);",
      "right" : "Sum.copy(source.sum, dest.sum);",
      "info" : "ExpressionStatement[24810-24841]:ExpressionStatement[24771-24802]"
    }, {
      "left" : "if (source.variance == source.varianceImpl)",
      "right" : "if (source.variance == source.varianceImpl)",
      "info" : "IfStatement[24860-25049]:IfStatement[24821-25010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24904-24973]:Block[24865-24934]"
    }, {
      "left" : "dest.variance = (Variance) dest.varianceImpl;",
      "right" : "dest.variance = (Variance) dest.varianceImpl;",
      "info" : "ExpressionStatement[24918-24963]:ExpressionStatement[24879-24924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24979-25049]:Block[24940-25010]"
    }, {
      "left" : "Variance.copy(source.variance, dest.variance);",
      "right" : "Variance.copy(source.variance, dest.variance);",
      "info" : "ExpressionStatement[24993-25039]:ExpressionStatement[24954-25000]"
    }, {
      "left" : "if (source.sumLog == source.sumLogImpl)",
      "right" : "if (source.sumLog == source.sumLogImpl)",
      "info" : "IfStatement[25058-25237]:IfStatement[25019-25198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25098-25164]:Block[25059-25125]"
    }, {
      "left" : "dest.sumLog = (SumOfLogs) dest.sumLogImpl;",
      "right" : "dest.sumLog = (SumOfLogs) dest.sumLogImpl;",
      "info" : "ExpressionStatement[25112-25154]:ExpressionStatement[25073-25115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25170-25237]:Block[25131-25198]"
    }, {
      "left" : "SumOfLogs.copy(source.sumLog, dest.sumLog);",
      "right" : "SumOfLogs.copy(source.sumLog, dest.sumLog);",
      "info" : "ExpressionStatement[25184-25227]:ExpressionStatement[25145-25188]"
    }, {
      "left" : "if (source.sumsq == source.sumsqImpl)",
      "right" : "if (source.sumsq == source.sumsqImpl)",
      "info" : "IfStatement[25246-25425]:IfStatement[25207-25386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25284-25351]:Block[25245-25312]"
    }, {
      "left" : "dest.sumsq = (SumOfSquares) dest.sumsqImpl;",
      "right" : "dest.sumsq = (SumOfSquares) dest.sumsqImpl;",
      "info" : "ExpressionStatement[25298-25341]:ExpressionStatement[25259-25302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25357-25425]:Block[25318-25386]"
    }, {
      "left" : "SumOfSquares.copy(source.sumsq, dest.sumsq);",
      "right" : "SumOfSquares.copy(source.sumsq, dest.sumsq);",
      "info" : "ExpressionStatement[25371-25415]:ExpressionStatement[25332-25376]"
    } ]
  },
  "interFileMappings" : { }
}