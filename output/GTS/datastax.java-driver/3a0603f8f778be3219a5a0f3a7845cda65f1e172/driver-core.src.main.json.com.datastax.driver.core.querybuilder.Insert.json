{
  "matchedElements" : [ {
    "left" : "class : Insert",
    "right" : "class : Insert",
    "info" : "TypeDeclaration[829-6338]:TypeDeclaration[801-6892]"
  }, {
    "left" : "table",
    "right" : "table",
    "info" : "FieldDeclaration[916-943]:FieldDeclaration[888-915]"
  }, {
    "left" : "names",
    "right" : "names",
    "info" : "FieldDeclaration[948-1007]:FieldDeclaration[920-979]"
  }, {
    "left" : "values",
    "right" : "values",
    "info" : "FieldDeclaration[1012-1072]:FieldDeclaration[984-1044]"
  }, {
    "left" : "usings",
    "right" : "usings",
    "info" : "FieldDeclaration[1077-1106]:FieldDeclaration[1049-1078]"
  }, {
    "left" : "ifNotExists",
    "right" : "ifNotExists",
    "info" : "FieldDeclaration[1111-1139]:FieldDeclaration[1083-1111]"
  }, {
    "left" : "package Insert(keyspace , table )",
    "right" : "package Insert(keyspace , table )",
    "info" : "MethodDeclaration[1145-1284]:MethodDeclaration[1117-1256]"
  }, {
    "left" : "package Insert(table )",
    "right" : "package Insert(table )",
    "info" : "MethodDeclaration[1290-1436]:MethodDeclaration[1262-1408]"
  }, {
    "left" : "package buildQueryString(variables ...) : ",
    "right" : "package buildQueryString(variables ...) : ",
    "info" : "MethodDeclaration[1442-2227]:MethodDeclaration[1414-2199]"
  }, {
    "left" : "public value(name , value ) : ",
    "right" : "public value(name , value ) : ",
    "info" : "MethodDeclaration[2233-2704]:MethodDeclaration[2205-2676]"
  }, {
    "left" : "public values(names , values ...) : ",
    "right" : "public values(names , values ...) : ",
    "info" : "MethodDeclaration[2710-3686]:MethodDeclaration[2682-3276]"
  }, {
    "left" : "public using(using ) : ",
    "right" : "public using(using ) : ",
    "info" : "MethodDeclaration[3692-3935]:MethodDeclaration[4246-4489]"
  }, {
    "left" : "public ifNotExists() : ",
    "right" : "public ifNotExists() : ",
    "info" : "MethodDeclaration[3941-4638]:MethodDeclaration[4495-5192]"
  }, {
    "left" : "class : Options",
    "right" : "class : Options",
    "info" : "TypeDeclaration[4644-6336]:TypeDeclaration[5198-6890]"
  }, {
    "left" : "usings",
    "right" : "usings",
    "info" : "FieldDeclaration[4793-4851]:FieldDeclaration[5347-5405]"
  }, {
    "left" : "package Options(st )",
    "right" : "package Options(st )",
    "info" : "MethodDeclaration[4861-4914]:MethodDeclaration[5415-5468]"
  }, {
    "left" : "public and(using ) : ",
    "right" : "public and(using ) : ",
    "info" : "MethodDeclaration[4924-5225]:MethodDeclaration[5478-5779]"
  }, {
    "left" : "public value(name , value ) : ",
    "right" : "public value(name , value ) : ",
    "info" : "MethodDeclaration[5235-5662]:MethodDeclaration[5789-6216]"
  }, {
    "left" : "public values(names , values ...) : ",
    "right" : "public values(names , values ...) : ",
    "info" : "MethodDeclaration[5672-6330]:MethodDeclaration[6226-6884]"
  } ],
  "mappings" : [ {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1183-1284]:Block[1155-1256]"
  }, {
    "left" : "super(keyspace);",
    "right" : "super(keyspace);",
    "info" : "SuperConstructorInvocation[1193-1209]:SuperConstructorInvocation[1165-1181]"
  }, {
    "left" : "this.table = table;",
    "right" : "this.table = table;",
    "info" : "ExpressionStatement[1218-1237]:ExpressionStatement[1190-1209]"
  }, {
    "left" : "this.usings = new Options(this);",
    "right" : "this.usings = new Options(this);",
    "info" : "ExpressionStatement[1246-1278]:ExpressionStatement[1218-1250]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1318-1436]:Block[1290-1408]"
  }, {
    "left" : "super(table);",
    "right" : "super(table);",
    "info" : "SuperConstructorInvocation[1328-1341]:SuperConstructorInvocation[1300-1313]"
  }, {
    "left" : "this.table = escapeId(table.getName());",
    "right" : "this.table = escapeId(table.getName());",
    "info" : "ExpressionStatement[1350-1389]:ExpressionStatement[1322-1361]"
  }, {
    "left" : "this.usings = new Options(this);",
    "right" : "this.usings = new Options(this);",
    "info" : "ExpressionStatement[1398-1430]:ExpressionStatement[1370-1402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1511-2227]:Block[1483-2199]"
  }, {
    "left" : "StringBuilder builder = new StringBuilder();",
    "right" : "StringBuilder builder = new StringBuilder();",
    "info" : "VariableDeclarationStatement[1521-1565]:VariableDeclarationStatement[1493-1537]"
  }, {
    "left" : "builder.append(\"INSERT INTO \");",
    "right" : "builder.append(\"INSERT INTO \");",
    "info" : "ExpressionStatement[1575-1606]:ExpressionStatement[1547-1578]"
  }, {
    "left" : "if (keyspace != null)",
    "right" : "if (keyspace != null)",
    "info" : "IfStatement[1615-1697]:IfStatement[1587-1669]"
  }, {
    "left" : "Utils.appendName(keyspace, builder).append('.');",
    "right" : "Utils.appendName(keyspace, builder).append('.');",
    "info" : "ExpressionStatement[1649-1697]:ExpressionStatement[1621-1669]"
  }, {
    "left" : "Utils.appendName(table, builder);",
    "right" : "Utils.appendName(table, builder);",
    "info" : "ExpressionStatement[1706-1739]:ExpressionStatement[1678-1711]"
  }, {
    "left" : "builder.append('(');",
    "right" : "builder.append('(');",
    "info" : "ExpressionStatement[1748-1768]:ExpressionStatement[1720-1740]"
  }, {
    "left" : "Utils.joinAndAppendNames(builder, \",\", names);",
    "right" : "Utils.joinAndAppendNames(builder, \",\", names);",
    "info" : "ExpressionStatement[1777-1823]:ExpressionStatement[1749-1795]"
  }, {
    "left" : "builder.append(\") VALUES (\");",
    "right" : "builder.append(\") VALUES (\");",
    "info" : "ExpressionStatement[1832-1861]:ExpressionStatement[1804-1833]"
  }, {
    "left" : "Utils.joinAndAppendValues(builder, \",\", values, variables);",
    "right" : "Utils.joinAndAppendValues(builder, \",\", values, variables);",
    "info" : "ExpressionStatement[1870-1929]:ExpressionStatement[1842-1901]"
  }, {
    "left" : "builder.append(')');",
    "right" : "builder.append(')');",
    "info" : "ExpressionStatement[1938-1958]:ExpressionStatement[1910-1930]"
  }, {
    "left" : "if (ifNotExists)",
    "right" : "if (ifNotExists)",
    "info" : "IfStatement[1968-2030]:IfStatement[1940-2002]"
  }, {
    "left" : "builder.append(\" IF NOT EXISTS\");",
    "right" : "builder.append(\" IF NOT EXISTS\");",
    "info" : "ExpressionStatement[1997-2030]:ExpressionStatement[1969-2002]"
  }, {
    "left" : "if (!usings.usings.isEmpty())",
    "right" : "if (!usings.usings.isEmpty())",
    "info" : "IfStatement[2040-2197]:IfStatement[2012-2169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2070-2197]:Block[2042-2169]"
  }, {
    "left" : "builder.append(\" USING \");",
    "right" : "builder.append(\" USING \");",
    "info" : "ExpressionStatement[2084-2110]:ExpressionStatement[2056-2082]"
  }, {
    "left" : "Utils.joinAndAppend(builder, \" AND \", usings.usings, variables);",
    "right" : "Utils.joinAndAppend(builder, \" AND \", usings.usings, variables);",
    "info" : "ExpressionStatement[2123-2187]:ExpressionStatement[2095-2159]"
  }, {
    "left" : "return builder;",
    "right" : "return builder;",
    "info" : "ReturnStatement[2206-2221]:ReturnStatement[2178-2193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2547-2704]:Block[2519-2676]"
  }, {
    "left" : "names.add(name);",
    "right" : "names.add(name);",
    "info" : "ExpressionStatement[2557-2573]:ExpressionStatement[2529-2545]"
  }, {
    "left" : "values.add(value);",
    "right" : "values.add(value);",
    "info" : "ExpressionStatement[2582-2600]:ExpressionStatement[2554-2572]"
  }, {
    "left" : "checkForBindMarkers(value);",
    "right" : "checkForBindMarkers(value);",
    "info" : "ExpressionStatement[2609-2636]:ExpressionStatement[2581-2608]"
  }, {
    "left" : "maybeAddRoutingKey(name, value);",
    "right" : "maybeAddRoutingKey(name, value);",
    "info" : "ExpressionStatement[2645-2677]:ExpressionStatement[2617-2649]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2686-2698]:ReturnStatement[2658-2670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3236-3686]:Block[3809-4240]"
  }, {
    "left" : "if (names.length != values.length)",
    "right" : "if (names.size() != values.size())",
    "info" : "IfStatement[3246-3402]:IfStatement[3819-3975]"
  }, {
    "left" : "throw new IllegalArgumentException(String.format(\"Got %d names but %d values\", names.length, values.length));",
    "right" : "throw new IllegalArgumentException(String.format(\"Got %d names but %d values\", names.size(), values.size()));",
    "info" : "ThrowStatement[3293-3402]:ThrowStatement[3866-3975]"
  }, {
    "left" : "this.names.addAll(Arrays.asList(names))",
    "right" : "values(Arrays.asList(names), Arrays.asList(values))",
    "info" : "MethodInvocation[3411-3450]:MethodInvocation[3218-3269]"
  }, {
    "left" : "this.names",
    "right" : "this.names",
    "info" : "METHOD_INVOCATION_RECEIVER[3411-3421]:METHOD_INVOCATION_RECEIVER[3984-3994]"
  }, {
    "left" : "this.names.addAll(Arrays.asList(names));",
    "right" : "this.names.addAll(names);",
    "info" : "ExpressionStatement[3411-3451]:ExpressionStatement[3984-4009]"
  }, {
    "left" : "this.values.addAll(Arrays.asList(values));",
    "right" : "this.values.addAll(values);",
    "info" : "ExpressionStatement[3460-3502]:ExpressionStatement[4018-4045]"
  }, {
    "left" : "Arrays.asList(values)",
    "right" : "Arrays.asList(values)",
    "info" : "MethodInvocation[3479-3500]:MethodInvocation[3247-3268]"
  }, {
    "left" : "for (int i = 0; i < names.length; i++)",
    "right" : "for (int i = 0; i < names.size(); i++)",
    "info" : "ForStatement[3512-3659]:ForStatement[4054-4213]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3551-3659]:Block[4093-4213]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3668-3680]:ReturnStatement[4222-4234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3894-3935]:Block[4448-4489]"
  }, {
    "left" : "return usings.and(using);",
    "right" : "return usings.and(using);",
    "info" : "ReturnStatement[3904-3929]:ReturnStatement[4458-4483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4577-4638]:Block[5131-5192]"
  }, {
    "left" : "this.ifNotExists = true;",
    "right" : "this.ifNotExists = true;",
    "info" : "ExpressionStatement[4587-4611]:ExpressionStatement[5141-5165]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[4620-4632]:ReturnStatement[5174-5186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4880-4914]:Block[5434-5468]"
  }, {
    "left" : "super(st);",
    "right" : "super(st);",
    "info" : "SuperConstructorInvocation[4894-4904]:SuperConstructorInvocation[5448-5458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5118-5225]:Block[5672-5779]"
  }, {
    "left" : "usings.add(using);",
    "right" : "usings.add(using);",
    "info" : "ExpressionStatement[5132-5150]:ExpressionStatement[5686-5704]"
  }, {
    "left" : "checkForBindMarkers(using);",
    "right" : "checkForBindMarkers(using);",
    "info" : "ExpressionStatement[5163-5190]:ExpressionStatement[5717-5744]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5203-5215]:ReturnStatement[5757-5769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5602-5662]:Block[6156-6216]"
  }, {
    "left" : "return statement.value(name, value);",
    "right" : "return statement.value(name, value);",
    "info" : "ReturnStatement[5616-5652]:ReturnStatement[6170-6206]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6267-6330]:Block[6821-6884]"
  }, {
    "left" : "return statement.values(names, values);",
    "right" : "return statement.values(names, values);",
    "info" : "ReturnStatement[6281-6320]:ReturnStatement[6835-6874]"
  } ]
}