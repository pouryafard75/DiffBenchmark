{
  "matchedElements" : [ {
    "left" : "class : QuartzComponent",
    "right" : "class : QuartzComponent",
    "info" : "TypeDeclaration[1641-15699]:TypeDeclaration[1641-16152]"
  }, {
    "left" : "LOG",
    "right" : "LOG",
    "info" : "FieldDeclaration[2209-2290]:FieldDeclaration[2209-2290]"
  }, {
    "left" : "schedulerFactory",
    "right" : "schedulerFactory",
    "info" : "FieldDeclaration[2295-2337]:FieldDeclaration[2295-2337]"
  }, {
    "left" : "scheduler",
    "right" : "scheduler",
    "info" : "FieldDeclaration[2342-2370]:FieldDeclaration[2342-2370]"
  }, {
    "left" : "properties",
    "right" : "properties",
    "info" : "FieldDeclaration[2375-2405]:FieldDeclaration[2375-2405]"
  }, {
    "left" : "propertiesFile",
    "right" : "propertiesFile",
    "info" : "FieldDeclaration[2410-2440]:FieldDeclaration[2410-2440]"
  }, {
    "left" : "startDelayedSeconds",
    "right" : "startDelayedSeconds",
    "info" : "FieldDeclaration[2445-2477]:FieldDeclaration[2445-2477]"
  }, {
    "left" : "autoStartScheduler",
    "right" : "autoStartScheduler",
    "info" : "FieldDeclaration[2482-2524]:FieldDeclaration[2482-2524]"
  }, {
    "left" : "prefixJobNameWithEndpointId",
    "right" : "prefixJobNameWithEndpointId",
    "info" : "FieldDeclaration[2529-2573]:FieldDeclaration[2529-2573]"
  }, {
    "left" : "enableJmx",
    "right" : "enableJmx",
    "info" : "FieldDeclaration[2578-2611]:FieldDeclaration[2578-2611]"
  }, {
    "left" : "public QuartzComponent()",
    "right" : "public QuartzComponent()",
    "info" : "MethodDeclaration[2617-2686]:MethodDeclaration[2617-2686]"
  }, {
    "left" : "public QuartzComponent(camelContext )",
    "right" : "public QuartzComponent(camelContext )",
    "info" : "MethodDeclaration[2692-2800]:MethodDeclaration[2692-2800]"
  }, {
    "left" : "public getStartDelayedSeconds() : int",
    "right" : "public getStartDelayedSeconds() : int",
    "info" : "MethodDeclaration[2806-2885]:MethodDeclaration[2806-2885]"
  }, {
    "left" : "public isAutoStartScheduler() : boolean",
    "right" : "public isAutoStartScheduler() : boolean",
    "info" : "MethodDeclaration[2891-2971]:MethodDeclaration[2891-2971]"
  }, {
    "left" : "public setStartDelayedSeconds(startDelayedSeconds int) : void",
    "right" : "public setStartDelayedSeconds(startDelayedSeconds int) : void",
    "info" : "MethodDeclaration[2977-3100]:MethodDeclaration[2977-3100]"
  }, {
    "left" : "public setAutoStartScheduler(autoStartScheduler boolean) : void",
    "right" : "public setAutoStartScheduler(autoStartScheduler boolean) : void",
    "info" : "MethodDeclaration[3106-3229]:MethodDeclaration[3106-3229]"
  }, {
    "left" : "public isPrefixJobNameWithEndpointId() : boolean",
    "right" : "public isPrefixJobNameWithEndpointId() : boolean",
    "info" : "MethodDeclaration[3235-3333]:MethodDeclaration[3235-3333]"
  }, {
    "left" : "public setPrefixJobNameWithEndpointId(prefixJobNameWithEndpointId boolean) : void",
    "right" : "public setPrefixJobNameWithEndpointId(prefixJobNameWithEndpointId boolean) : void",
    "info" : "MethodDeclaration[3339-3498]:MethodDeclaration[3339-3498]"
  }, {
    "left" : "public isEnableJmx() : boolean",
    "right" : "public isEnableJmx() : boolean",
    "info" : "MethodDeclaration[3504-3566]:MethodDeclaration[3504-3566]"
  }, {
    "left" : "public setEnableJmx(enableJmx boolean) : void",
    "right" : "public setEnableJmx(enableJmx boolean) : void",
    "info" : "MethodDeclaration[3572-3659]:MethodDeclaration[3572-3659]"
  }, {
    "left" : "public getProperties() : ",
    "right" : "public getProperties() : ",
    "info" : "MethodDeclaration[3665-3733]:MethodDeclaration[3665-3733]"
  }, {
    "left" : "public getPropertiesFile() : ",
    "right" : "public getPropertiesFile() : ",
    "info" : "MethodDeclaration[3739-3811]:MethodDeclaration[3739-3811]"
  }, {
    "left" : "public setProperties(properties ...) : void",
    "right" : "public setProperties(properties ...) : void",
    "info" : "MethodDeclaration[3817-3911]:MethodDeclaration[3817-3911]"
  }, {
    "left" : "public setPropertiesFile(propertiesFile ) : void",
    "right" : "public setPropertiesFile(propertiesFile ) : void",
    "info" : "MethodDeclaration[3917-4023]:MethodDeclaration[3917-4023]"
  }, {
    "left" : "public getSchedulerFactory() : ",
    "right" : "public getSchedulerFactory() : ",
    "info" : "MethodDeclaration[4029-4248]:MethodDeclaration[4029-4248]"
  }, {
    "left" : "private createSchedulerFactory() : ",
    "right" : "private createSchedulerFactory() : ",
    "info" : "MethodDeclaration[4254-7387]:MethodDeclaration[4254-7387]"
  }, {
    "left" : "protected createInstanceName(prop ) : ",
    "right" : "protected createInstanceName(prop ) : ",
    "info" : "MethodDeclaration[7393-7948]:MethodDeclaration[7393-7948]"
  }, {
    "left" : "public isClustered() : boolean",
    "right" : "public isClustered() : boolean",
    "info" : "MethodDeclaration[7954-8141]:MethodDeclaration[7954-8141]"
  }, {
    "left" : "private loadProperties() : ",
    "right" : "private loadProperties() : ",
    "info" : "MethodDeclaration[8147-8929]:MethodDeclaration[8147-8929]"
  }, {
    "left" : "public setSchedulerFactory(schedulerFactory ) : void",
    "right" : "public setSchedulerFactory(schedulerFactory ) : void",
    "info" : "MethodDeclaration[8935-9059]:MethodDeclaration[8935-9059]"
  }, {
    "left" : "public getScheduler() : ",
    "right" : "public getScheduler() : ",
    "info" : "MethodDeclaration[9065-9130]:MethodDeclaration[9065-9130]"
  }, {
    "left" : "public setScheduler(scheduler ) : void",
    "right" : "public setScheduler(scheduler ) : void",
    "info" : "MethodDeclaration[9136-9225]:MethodDeclaration[9136-9225]"
  }, {
    "left" : "protected createEndpoint(uri , remaining , parameters ) : ",
    "right" : "protected createEndpoint(uri , remaining , parameters ) : ",
    "info" : "MethodDeclaration[9231-11174]:MethodDeclaration[9231-11174]"
  }, {
    "left" : "private createTriggerKey(uri , remaining , endpoint ) : ",
    "right" : "private createTriggerKey(uri , remaining , endpoint ) : ",
    "info" : "MethodDeclaration[11180-12362]:MethodDeclaration[11180-12362]"
  }, {
    "left" : "protected doStart() : void",
    "right" : "protected doStart() : void",
    "info" : "MethodDeclaration[12368-12538]:MethodDeclaration[12368-12538]"
  }, {
    "left" : "private createAndInitScheduler() : void",
    "right" : "private createAndInitScheduler() : void",
    "info" : "MethodDeclaration[12544-13618]:MethodDeclaration[12544-13283]"
  }, {
    "left" : "private createScheduler() : ",
    "right" : "private createScheduler() : ",
    "info" : "MethodDeclaration[13624-13746]:MethodDeclaration[13830-13952]"
  }, {
    "left" : "protected doStop() : void",
    "right" : "protected doStop() : void",
    "info" : "MethodDeclaration[13752-14415]:MethodDeclaration[13958-14621]"
  }, {
    "left" : "public onCamelContextStarted(context , alreadyStarted boolean) : void",
    "right" : "public onCamelContextStarted(context , alreadyStarted boolean) : void",
    "info" : "MethodDeclaration[14421-15697]:MethodDeclaration[14627-16150]"
  } ],
  "mappings" : [ {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2642-2686]:Block[2642-2686]"
  }, {
    "left" : "super(QuartzEndpoint.class);",
    "right" : "super(QuartzEndpoint.class);",
    "info" : "SuperConstructorInvocation[2652-2680]:SuperConstructorInvocation[2652-2680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2742-2800]:Block[2742-2800]"
  }, {
    "left" : "super(camelContext, QuartzEndpoint.class);",
    "right" : "super(camelContext, QuartzEndpoint.class);",
    "info" : "SuperConstructorInvocation[2752-2794]:SuperConstructorInvocation[2752-2794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2842-2885]:Block[2842-2885]"
  }, {
    "left" : "return startDelayedSeconds;",
    "right" : "return startDelayedSeconds;",
    "info" : "ReturnStatement[2852-2879]:ReturnStatement[2852-2879]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2929-2971]:Block[2929-2971]"
  }, {
    "left" : "return autoStartScheduler;",
    "right" : "return autoStartScheduler;",
    "info" : "ReturnStatement[2939-2965]:ReturnStatement[2939-2965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3037-3100]:Block[3037-3100]"
  }, {
    "left" : "this.startDelayedSeconds = startDelayedSeconds;",
    "right" : "this.startDelayedSeconds = startDelayedSeconds;",
    "info" : "ExpressionStatement[3047-3094]:ExpressionStatement[3047-3094]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3168-3229]:Block[3168-3229]"
  }, {
    "left" : "this.autoStartScheduler = autoStartScheduler;",
    "right" : "this.autoStartScheduler = autoStartScheduler;",
    "info" : "ExpressionStatement[3178-3223]:ExpressionStatement[3178-3223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3282-3333]:Block[3282-3333]"
  }, {
    "left" : "return prefixJobNameWithEndpointId;",
    "right" : "return prefixJobNameWithEndpointId;",
    "info" : "ReturnStatement[3292-3327]:ReturnStatement[3292-3327]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3419-3498]:Block[3419-3498]"
  }, {
    "left" : "this.prefixJobNameWithEndpointId = prefixJobNameWithEndpointId;",
    "right" : "this.prefixJobNameWithEndpointId = prefixJobNameWithEndpointId;",
    "info" : "ExpressionStatement[3429-3492]:ExpressionStatement[3429-3492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3533-3566]:Block[3533-3566]"
  }, {
    "left" : "return enableJmx;",
    "right" : "return enableJmx;",
    "info" : "ReturnStatement[3543-3560]:ReturnStatement[3543-3560]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3616-3659]:Block[3616-3659]"
  }, {
    "left" : "this.enableJmx = enableJmx;",
    "right" : "this.enableJmx = enableJmx;",
    "info" : "ExpressionStatement[3626-3653]:ExpressionStatement[3626-3653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3699-3733]:Block[3699-3733]"
  }, {
    "left" : "return properties;",
    "right" : "return properties;",
    "info" : "ReturnStatement[3709-3727]:ReturnStatement[3709-3727]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3773-3811]:Block[3773-3811]"
  }, {
    "left" : "return propertiesFile;",
    "right" : "return propertiesFile;",
    "info" : "ReturnStatement[3783-3805]:ReturnStatement[3783-3805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3866-3911]:Block[3866-3911]"
  }, {
    "left" : "this.properties = properties;",
    "right" : "this.properties = properties;",
    "info" : "ExpressionStatement[3876-3905]:ExpressionStatement[3876-3905]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3970-4023]:Block[3970-4023]"
  }, {
    "left" : "this.propertiesFile = propertiesFile;",
    "right" : "this.propertiesFile = propertiesFile;",
    "info" : "ExpressionStatement[3980-4017]:ExpressionStatement[3980-4017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4101-4248]:Block[4101-4248]"
  }, {
    "left" : "if (schedulerFactory == null)",
    "right" : "if (schedulerFactory == null)",
    "info" : "IfStatement[4111-4209]:IfStatement[4111-4209]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4141-4209]:Block[4141-4209]"
  }, {
    "left" : "schedulerFactory = createSchedulerFactory();",
    "right" : "schedulerFactory = createSchedulerFactory();",
    "info" : "ExpressionStatement[4155-4199]:ExpressionStatement[4155-4199]"
  }, {
    "left" : "return schedulerFactory;",
    "right" : "return schedulerFactory;",
    "info" : "ReturnStatement[4218-4242]:ReturnStatement[4218-4242]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4330-7387]:Block[4330-7387]"
  }, {
    "left" : "SchedulerFactory answer;",
    "right" : "SchedulerFactory answer;",
    "info" : "VariableDeclarationStatement[4340-4364]:VariableDeclarationStatement[4340-4364]"
  }, {
    "left" : "Properties prop = loadProperties();",
    "right" : "Properties prop = loadProperties();",
    "info" : "VariableDeclarationStatement[4374-4409]:VariableDeclarationStatement[4374-4409]"
  }, {
    "left" : "if (prop != null)",
    "right" : "if (prop != null)",
    "info" : "IfStatement[4418-7133]:IfStatement[4418-7133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4436-5310]:Block[4436-5310]"
  }, {
    "left" : "prop.put(\"org.quartz.scheduler.skipUpdateCheck\", \"true\");",
    "right" : "prop.put(\"org.quartz.scheduler.skipUpdateCheck\", \"true\");",
    "info" : "ExpressionStatement[4538-4595]:ExpressionStatement[4538-4595]"
  }, {
    "left" : "prop.put(\"org.terracotta.quartz.skipUpdateCheck\", \"true\");",
    "right" : "prop.put(\"org.terracotta.quartz.skipUpdateCheck\", \"true\");",
    "info" : "ExpressionStatement[4608-4666]:ExpressionStatement[4608-4666]"
  }, {
    "left" : "String instName = createInstanceName(prop);",
    "right" : "String instName = createInstanceName(prop);",
    "info" : "VariableDeclarationStatement[4764-4807]:VariableDeclarationStatement[4764-4807]"
  }, {
    "left" : "prop.setProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME, instName);",
    "right" : "prop.setProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME, instName);",
    "info" : "ExpressionStatement[4820-4893]:ExpressionStatement[4820-4893]"
  }, {
    "left" : "if (enableJmx && !prop.containsKey(\"org.quartz.scheduler.jmx.export\"))",
    "right" : "if (enableJmx && !prop.containsKey(\"org.quartz.scheduler.jmx.export\"))",
    "info" : "IfStatement[4964-5247]:IfStatement[4964-5247]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5035-5247]:Block[5035-5247]"
  }, {
    "left" : "prop.put(\"org.quartz.scheduler.jmx.export\", \"true\");",
    "right" : "prop.put(\"org.quartz.scheduler.jmx.export\", \"true\");",
    "info" : "ExpressionStatement[5053-5105]:ExpressionStatement[5053-5105]"
  }, {
    "left" : "LOG.info(\"Setting org.quartz.scheduler.jmx.export=true to ensure QuartzScheduler(s) will be enlisted in JMX.\");",
    "right" : "LOG.info(\"Setting org.quartz.scheduler.jmx.export=true to ensure QuartzScheduler(s) will be enlisted in JMX.\");",
    "info" : "ExpressionStatement[5122-5233]:ExpressionStatement[5122-5233]"
  }, {
    "left" : "answer = new StdSchedulerFactory(prop);",
    "right" : "answer = new StdSchedulerFactory(prop);",
    "info" : "ExpressionStatement[5261-5300]:ExpressionStatement[5261-5300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5316-7133]:Block[5316-7133]"
  }, {
    "left" : "InputStream is = StdSchedulerFactory.class.getClassLoader().getResourceAsStream(\"org/quartz/quartz.properties\");",
    "right" : "InputStream is = StdSchedulerFactory.class.getClassLoader().getResourceAsStream(\"org/quartz/quartz.properties\");",
    "info" : "VariableDeclarationStatement[5647-5759]:VariableDeclarationStatement[5647-5759]"
  }, {
    "left" : "if (is == null)",
    "right" : "if (is == null)",
    "info" : "IfStatement[5772-5928]:IfStatement[5772-5928]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5788-5928]:Block[5788-5928]"
  }, {
    "left" : "throw new SchedulerException(\"Quartz properties file not found in classpath: org/quartz/quartz.properties\");",
    "right" : "throw new SchedulerException(\"Quartz properties file not found in classpath: org/quartz/quartz.properties\");",
    "info" : "ThrowStatement[5806-5914]:ThrowStatement[5806-5914]"
  }, {
    "left" : "prop = new Properties();",
    "right" : "prop = new Properties();",
    "info" : "ExpressionStatement[5941-5965]:ExpressionStatement[5941-5965]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[5978-6260]:TryStatement[5978-6260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5982-6028]:Block[5982-6028]"
  }, {
    "left" : "prop.load(is);",
    "right" : "prop.load(is);",
    "info" : "ExpressionStatement[6000-6014]:ExpressionStatement[6000-6014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6051-6200]:Block[6051-6200]"
  }, {
    "left" : "throw new SchedulerException(\"Error loading Quartz properties file from classpath: org/quartz/quartz.properties\", e);",
    "right" : "throw new SchedulerException(\"Error loading Quartz properties file from classpath: org/quartz/quartz.properties\", e);",
    "info" : "ThrowStatement[6069-6186]:ThrowStatement[6069-6186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6209-6260]:Block[6209-6260]"
  }, {
    "left" : "IOHelper.close(is);",
    "right" : "IOHelper.close(is);",
    "info" : "ExpressionStatement[6227-6246]:ExpressionStatement[6227-6246]"
  }, {
    "left" : "String instName = createInstanceName(prop);",
    "right" : "String instName = createInstanceName(prop);",
    "info" : "VariableDeclarationStatement[6358-6401]:VariableDeclarationStatement[6358-6401]"
  }, {
    "left" : "prop.setProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME, instName);",
    "right" : "prop.setProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME, instName);",
    "info" : "ExpressionStatement[6414-6487]:ExpressionStatement[6414-6487]"
  }, {
    "left" : "prop.put(\"org.quartz.scheduler.skipUpdateCheck\", \"true\");",
    "right" : "prop.put(\"org.quartz.scheduler.skipUpdateCheck\", \"true\");",
    "info" : "ExpressionStatement[6588-6645]:ExpressionStatement[6588-6645]"
  }, {
    "left" : "prop.put(\"org.terracotta.quartz.skipUpdateCheck\", \"true\");",
    "right" : "prop.put(\"org.terracotta.quartz.skipUpdateCheck\", \"true\");",
    "info" : "ExpressionStatement[6658-6716]:ExpressionStatement[6658-6716]"
  }, {
    "left" : "if (enableJmx && !prop.containsKey(\"org.quartz.scheduler.jmx.export\"))",
    "right" : "if (enableJmx && !prop.containsKey(\"org.quartz.scheduler.jmx.export\"))",
    "info" : "IfStatement[6787-7070]:IfStatement[6787-7070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6858-7070]:Block[6858-7070]"
  }, {
    "left" : "prop.put(\"org.quartz.scheduler.jmx.export\", \"true\");",
    "right" : "prop.put(\"org.quartz.scheduler.jmx.export\", \"true\");",
    "info" : "ExpressionStatement[6876-6928]:ExpressionStatement[6876-6928]"
  }, {
    "left" : "LOG.info(\"Setting org.quartz.scheduler.jmx.export=true to ensure QuartzScheduler(s) will be enlisted in JMX.\");",
    "right" : "LOG.info(\"Setting org.quartz.scheduler.jmx.export=true to ensure QuartzScheduler(s) will be enlisted in JMX.\");",
    "info" : "ExpressionStatement[6945-7056]:ExpressionStatement[6945-7056]"
  }, {
    "left" : "answer = new StdSchedulerFactory(prop);",
    "right" : "answer = new StdSchedulerFactory(prop);",
    "info" : "ExpressionStatement[7084-7123]:ExpressionStatement[7084-7123]"
  }, {
    "left" : "if (LOG.isDebugEnabled())",
    "right" : "if (LOG.isDebugEnabled())",
    "info" : "IfStatement[7143-7358]:IfStatement[7143-7358]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7169-7358]:Block[7169-7358]"
  }, {
    "left" : "String name = prop.getProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME);",
    "right" : "String name = prop.getProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME);",
    "info" : "VariableDeclarationStatement[7183-7260]:VariableDeclarationStatement[7183-7260]"
  }, {
    "left" : "LOG.debug(\"Creating SchedulerFactory: {} with properties: {}\", name, prop);",
    "right" : "LOG.debug(\"Creating SchedulerFactory: {} with properties: {}\", name, prop);",
    "info" : "ExpressionStatement[7273-7348]:ExpressionStatement[7273-7348]"
  }, {
    "left" : "return answer;",
    "right" : "return answer;",
    "info" : "ReturnStatement[7367-7381]:ReturnStatement[7367-7381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7446-7948]:Block[7446-7948]"
  }, {
    "left" : "String instName = prop.getProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME);",
    "right" : "String instName = prop.getProperty(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME);",
    "info" : "VariableDeclarationStatement[7456-7537]:VariableDeclarationStatement[7456-7537]"
  }, {
    "left" : "String identity = QuartzHelper.getQuartzContextName(getCamelContext());",
    "right" : "String identity = QuartzHelper.getQuartzContextName(getCamelContext());",
    "info" : "VariableDeclarationStatement[7627-7698]:VariableDeclarationStatement[7627-7698]"
  }, {
    "left" : "if (identity != null)",
    "right" : "if (identity != null)",
    "info" : "IfStatement[7707-7917]:IfStatement[7707-7917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7729-7917]:Block[7729-7917]"
  }, {
    "left" : "if (instName == null)",
    "right" : "if (instName == null)",
    "info" : "IfStatement[7743-7907]:IfStatement[7743-7907]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7765-7832]:Block[7765-7832]"
  }, {
    "left" : "instName = \"scheduler-\" + identity;",
    "right" : "instName = \"scheduler-\" + identity;",
    "info" : "ExpressionStatement[7783-7818]:ExpressionStatement[7783-7818]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7838-7907]:Block[7838-7907]"
  }, {
    "left" : "instName = instName + \"-\" + identity;",
    "right" : "instName = instName + \"-\" + identity;",
    "info" : "ExpressionStatement[7856-7893]:ExpressionStatement[7856-7893]"
  }, {
    "left" : "return instName;",
    "right" : "return instName;",
    "info" : "ReturnStatement[7926-7942]:ReturnStatement[7926-7942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8067-8141]:Block[8067-8141]"
  }, {
    "left" : "return getScheduler().getMetaData().isJobStoreClustered();",
    "right" : "return getScheduler().getMetaData().isJobStoreClustered();",
    "info" : "ReturnStatement[8077-8135]:ReturnStatement[8077-8135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8209-8929]:Block[8209-8929]"
  }, {
    "left" : "Properties answer = getProperties();",
    "right" : "Properties answer = getProperties();",
    "info" : "VariableDeclarationStatement[8219-8255]:VariableDeclarationStatement[8219-8255]"
  }, {
    "left" : "if (answer == null && getPropertiesFile() != null)",
    "right" : "if (answer == null && getPropertiesFile() != null)",
    "info" : "IfStatement[8264-8900]:IfStatement[8264-8900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8315-8900]:Block[8315-8900]"
  }, {
    "left" : "LOG.info(\"Loading Quartz properties file from: {}\", getPropertiesFile());",
    "right" : "LOG.info(\"Loading Quartz properties file from: {}\", getPropertiesFile());",
    "info" : "ExpressionStatement[8329-8402]:ExpressionStatement[8329-8402]"
  }, {
    "left" : "InputStream is = null;",
    "right" : "InputStream is = null;",
    "info" : "VariableDeclarationStatement[8415-8437]:VariableDeclarationStatement[8415-8437]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[8450-8890]:TryStatement[8450-8890]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8454-8679]:Block[8454-8679]"
  }, {
    "left" : "is = ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(), getPropertiesFile());",
    "right" : "is = ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(), getPropertiesFile());",
    "info" : "ExpressionStatement[8472-8589]:ExpressionStatement[8472-8589]"
  }, {
    "left" : "answer = new Properties();",
    "right" : "answer = new Properties();",
    "info" : "ExpressionStatement[8606-8632]:ExpressionStatement[8606-8632]"
  }, {
    "left" : "answer.load(is);",
    "right" : "answer.load(is);",
    "info" : "ExpressionStatement[8649-8665]:ExpressionStatement[8649-8665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8702-8830]:Block[8702-8830]"
  }, {
    "left" : "throw new SchedulerException(\"Error loading Quartz properties file: \" + getPropertiesFile(), e);",
    "right" : "throw new SchedulerException(\"Error loading Quartz properties file: \" + getPropertiesFile(), e);",
    "info" : "ThrowStatement[8720-8816]:ThrowStatement[8720-8816]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8839-8890]:Block[8839-8890]"
  }, {
    "left" : "IOHelper.close(is);",
    "right" : "IOHelper.close(is);",
    "info" : "ExpressionStatement[8857-8876]:ExpressionStatement[8857-8876]"
  }, {
    "left" : "return answer;",
    "right" : "return answer;",
    "info" : "ReturnStatement[8909-8923]:ReturnStatement[8909-8923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9002-9059]:Block[9002-9059]"
  }, {
    "left" : "this.schedulerFactory = schedulerFactory;",
    "right" : "this.schedulerFactory = schedulerFactory;",
    "info" : "ExpressionStatement[9012-9053]:ExpressionStatement[9012-9053]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9097-9130]:Block[9097-9130]"
  }, {
    "left" : "return scheduler;",
    "right" : "return scheduler;",
    "info" : "ReturnStatement[9107-9124]:ReturnStatement[9107-9124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9182-9225]:Block[9182-9225]"
  }, {
    "left" : "this.scheduler = scheduler;",
    "right" : "this.scheduler = scheduler;",
    "info" : "ExpressionStatement[9192-9219]:ExpressionStatement[9192-9219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9358-11174]:Block[9358-11174]"
  }, {
    "left" : "Integer startDelayedSeconds = getAndRemoveParameter(parameters, \"startDelayedSeconds\", Integer.class);",
    "right" : "Integer startDelayedSeconds = getAndRemoveParameter(parameters, \"startDelayedSeconds\", Integer.class);",
    "info" : "VariableDeclarationStatement[9412-9514]:VariableDeclarationStatement[9412-9514]"
  }, {
    "left" : "if (startDelayedSeconds != null)",
    "right" : "if (startDelayedSeconds != null)",
    "info" : "IfStatement[9523-10043]:IfStatement[9523-10043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9556-10043]:Block[9556-10043]"
  }, {
    "left" : "if (this.startDelayedSeconds != 0 && !(this.startDelayedSeconds == startDelayedSeconds))",
    "right" : "if (this.startDelayedSeconds != 0 && !(this.startDelayedSeconds == startDelayedSeconds))",
    "info" : "IfStatement[9570-10033]:IfStatement[9570-10033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9659-9948]:Block[9659-9948]"
  }, {
    "left" : "LOG.warn(\"A Quartz job is already configured with a different 'startDelayedSeconds' configuration! \"\n                        + \"All Quartz jobs must share the same 'startDelayedSeconds' configuration! Cannot apply the 'startDelayedSeconds' configuration!\");",
    "right" : "LOG.warn(\"A Quartz job is already configured with a different 'startDelayedSeconds' configuration! \"\n                        + \"All Quartz jobs must share the same 'startDelayedSeconds' configuration! Cannot apply the 'startDelayedSeconds' configuration!\");",
    "info" : "ExpressionStatement[9677-9934]:ExpressionStatement[9677-9934]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9954-10033]:Block[9954-10033]"
  }, {
    "left" : "this.startDelayedSeconds = startDelayedSeconds;",
    "right" : "this.startDelayedSeconds = startDelayedSeconds;",
    "info" : "ExpressionStatement[9972-10019]:ExpressionStatement[9972-10019]"
  }, {
    "left" : "Boolean autoStartScheduler = getAndRemoveParameter(parameters, \"autoStartScheduler\", Boolean.class);",
    "right" : "Boolean autoStartScheduler = getAndRemoveParameter(parameters, \"autoStartScheduler\", Boolean.class);",
    "info" : "VariableDeclarationStatement[10053-10153]:VariableDeclarationStatement[10053-10153]"
  }, {
    "left" : "if (autoStartScheduler != null)",
    "right" : "if (autoStartScheduler != null)",
    "info" : "IfStatement[10162-10263]:IfStatement[10162-10263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10194-10263]:Block[10194-10263]"
  }, {
    "left" : "this.autoStartScheduler = autoStartScheduler;",
    "right" : "this.autoStartScheduler = autoStartScheduler;",
    "info" : "ExpressionStatement[10208-10253]:ExpressionStatement[10208-10253]"
  }, {
    "left" : "Boolean prefixJobNameWithEndpointId = getAndRemoveParameter(parameters, \"prefixJobNameWithEndpointId\", Boolean.class);",
    "right" : "Boolean prefixJobNameWithEndpointId = getAndRemoveParameter(parameters, \"prefixJobNameWithEndpointId\", Boolean.class);",
    "info" : "VariableDeclarationStatement[10273-10391]:VariableDeclarationStatement[10273-10391]"
  }, {
    "left" : "if (prefixJobNameWithEndpointId != null)",
    "right" : "if (prefixJobNameWithEndpointId != null)",
    "info" : "IfStatement[10400-10528]:IfStatement[10400-10528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10441-10528]:Block[10441-10528]"
  }, {
    "left" : "this.prefixJobNameWithEndpointId = prefixJobNameWithEndpointId;",
    "right" : "this.prefixJobNameWithEndpointId = prefixJobNameWithEndpointId;",
    "info" : "ExpressionStatement[10455-10518]:ExpressionStatement[10455-10518]"
  }, {
    "left" : "Map<String, Object> triggerParameters = IntrospectionSupport.extractProperties(parameters, \"trigger.\");",
    "right" : "Map<String, Object> triggerParameters = IntrospectionSupport.extractProperties(parameters, \"trigger.\");",
    "info" : "VariableDeclarationStatement[10620-10723]:VariableDeclarationStatement[10620-10723]"
  }, {
    "left" : "Map<String, Object> jobParameters = IntrospectionSupport.extractProperties(parameters, \"job.\");",
    "right" : "Map<String, Object> jobParameters = IntrospectionSupport.extractProperties(parameters, \"job.\");",
    "info" : "VariableDeclarationStatement[10732-10827]:VariableDeclarationStatement[10732-10827]"
  }, {
    "left" : "QuartzEndpoint result = new QuartzEndpoint(uri, this);",
    "right" : "QuartzEndpoint result = new QuartzEndpoint(uri, this);",
    "info" : "VariableDeclarationStatement[10871-10925]:VariableDeclarationStatement[10871-10925]"
  }, {
    "left" : "TriggerKey triggerKey = createTriggerKey(uri, remaining, result);",
    "right" : "TriggerKey triggerKey = createTriggerKey(uri, remaining, result);",
    "info" : "VariableDeclarationStatement[10934-10999]:VariableDeclarationStatement[10934-10999]"
  }, {
    "left" : "result.setTriggerKey(triggerKey);",
    "right" : "result.setTriggerKey(triggerKey);",
    "info" : "ExpressionStatement[11008-11041]:ExpressionStatement[11008-11041]"
  }, {
    "left" : "result.setTriggerParameters(triggerParameters);",
    "right" : "result.setTriggerParameters(triggerParameters);",
    "info" : "ExpressionStatement[11050-11097]:ExpressionStatement[11050-11097]"
  }, {
    "left" : "result.setJobParameters(jobParameters);",
    "right" : "result.setJobParameters(jobParameters);",
    "info" : "ExpressionStatement[11106-11145]:ExpressionStatement[11106-11145]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[11154-11168]:ReturnStatement[11154-11168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11288-12362]:Block[11288-12362]"
  }, {
    "left" : "URI u = new URI(uri);",
    "right" : "URI u = new URI(uri);",
    "info" : "VariableDeclarationStatement[11346-11367]:VariableDeclarationStatement[11346-11367]"
  }, {
    "left" : "String path = ObjectHelper.after(u.getPath(), \"/\");",
    "right" : "String path = ObjectHelper.after(u.getPath(), \"/\");",
    "info" : "VariableDeclarationStatement[11376-11427]:VariableDeclarationStatement[11376-11427]"
  }, {
    "left" : "String host = u.getHost();",
    "right" : "String host = u.getHost();",
    "info" : "VariableDeclarationStatement[11436-11462]:VariableDeclarationStatement[11436-11462]"
  }, {
    "left" : "if (host == null)",
    "right" : "if (host == null)",
    "info" : "IfStatement[11569-11734]:IfStatement[11569-11734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11587-11734]:Block[11587-11734]"
  }, {
    "left" : "host = ObjectHelper.before(remaining, \"/\");",
    "right" : "host = ObjectHelper.before(remaining, \"/\");",
    "info" : "ExpressionStatement[11601-11644]:ExpressionStatement[11601-11644]"
  }, {
    "left" : "if (host == null)",
    "right" : "if (host == null)",
    "info" : "IfStatement[11657-11724]:IfStatement[11657-11724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11675-11724]:Block[11675-11724]"
  }, {
    "left" : "host = remaining;",
    "right" : "host = remaining;",
    "info" : "ExpressionStatement[11693-11710]:ExpressionStatement[11693-11710]"
  }, {
    "left" : "String name;",
    "right" : "String name;",
    "info" : "VariableDeclarationStatement[11829-11841]:VariableDeclarationStatement[11829-11841]"
  }, {
    "left" : "String group;",
    "right" : "String group;",
    "info" : "VariableDeclarationStatement[11850-11863]:VariableDeclarationStatement[11850-11863]"
  }, {
    "left" : "if (ObjectHelper.isNotEmpty(path) && ObjectHelper.isNotEmpty(host))",
    "right" : "if (ObjectHelper.isNotEmpty(path) && ObjectHelper.isNotEmpty(host))",
    "info" : "IfStatement[11872-12207]:IfStatement[11872-12207]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11940-12002]:Block[11940-12002]"
  }, {
    "left" : "group = host;",
    "right" : "group = host;",
    "info" : "ExpressionStatement[11954-11967]:ExpressionStatement[11954-11967]"
  }, {
    "left" : "name = path;",
    "right" : "name = path;",
    "info" : "ExpressionStatement[11980-11992]:ExpressionStatement[11980-11992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12008-12207]:Block[12008-12207]"
  }, {
    "left" : "String camelContextName = getCamelContext().getManagementName();",
    "right" : "String camelContextName = getCamelContext().getManagementName();",
    "info" : "VariableDeclarationStatement[12022-12086]:VariableDeclarationStatement[12022-12086]"
  }, {
    "left" : "group = camelContextName == null ? \"Camel\" : \"Camel_\" + camelContextName;",
    "right" : "group = camelContextName == null ? \"Camel\" : \"Camel_\" + camelContextName;",
    "info" : "ExpressionStatement[12099-12172]:ExpressionStatement[12099-12172]"
  }, {
    "left" : "name = host;",
    "right" : "name = host;",
    "info" : "ExpressionStatement[12185-12197]:ExpressionStatement[12185-12197]"
  }, {
    "left" : "if (prefixJobNameWithEndpointId)",
    "right" : "if (prefixJobNameWithEndpointId)",
    "info" : "IfStatement[12217-12311]:IfStatement[12217-12311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12250-12311]:Block[12250-12311]"
  }, {
    "left" : "name = endpoint.getId() + \"_\" + name;",
    "right" : "name = endpoint.getId() + \"_\" + name;",
    "info" : "ExpressionStatement[12264-12301]:ExpressionStatement[12264-12301]"
  }, {
    "left" : "return new TriggerKey(name, group);",
    "right" : "return new TriggerKey(name, group);",
    "info" : "ReturnStatement[12321-12356]:ReturnStatement[12321-12356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12424-12538]:Block[12424-12538]"
  }, {
    "left" : "super.doStart();",
    "right" : "super.doStart();",
    "info" : "ExpressionStatement[12434-12450]:ExpressionStatement[12434-12450]"
  }, {
    "left" : "if (scheduler == null)",
    "right" : "if (scheduler == null)",
    "info" : "IfStatement[12460-12532]:IfStatement[12460-12532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12483-12532]:Block[12483-12532]"
  }, {
    "left" : "createAndInitScheduler();",
    "right" : "createAndInitScheduler();",
    "info" : "ExpressionStatement[12497-12522]:ExpressionStatement[12497-12522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12608-13618]:Block[12608-13283]"
  }, {
    "left" : "LOG.info(\"Create and initializing scheduler.\");",
    "right" : "LOG.info(\"Create and initializing scheduler.\");",
    "info" : "ExpressionStatement[12618-12665]:ExpressionStatement[12618-12665]"
  }, {
    "left" : "scheduler = createScheduler();",
    "right" : "scheduler = createScheduler();",
    "info" : "ExpressionStatement[12674-12704]:ExpressionStatement[12674-12704]"
  }, {
    "left" : "SchedulerContext quartzContext = scheduler.getContext();",
    "right" : "SchedulerContext quartzContext = scheduler.getContext();",
    "info" : "VariableDeclarationStatement[12769-12825]:VariableDeclarationStatement[13440-13496]"
  }, {
    "left" : "String camelContextName = QuartzHelper.getQuartzContextName(getCamelContext());",
    "right" : "String camelContextName = QuartzHelper.getQuartzContextName(getCamelContext());",
    "info" : "VariableDeclarationStatement[12834-12913]:VariableDeclarationStatement[13505-13584]"
  }, {
    "left" : "LOG.debug(\"Storing camelContextName={} into Quartz Context space.\", camelContextName);",
    "right" : "LOG.debug(\"Storing camelContextName={} into Quartz Context space.\", camelContextName);",
    "info" : "ExpressionStatement[12922-13008]:ExpressionStatement[13593-13679]"
  }, {
    "left" : "quartzContext.put(QuartzConstants.QUARTZ_CAMEL_CONTEXT + \"-\" + camelContextName, getCamelContext());",
    "right" : "quartzContext.put(QuartzConstants.QUARTZ_CAMEL_CONTEXT + \"-\" + camelContextName, getCamelContext());",
    "info" : "ExpressionStatement[13017-13117]:ExpressionStatement[13688-13788]"
  }, {
    "left" : "AtomicInteger number = (AtomicInteger) quartzContext.get(QuartzConstants.QUARTZ_CAMEL_JOBS_COUNT);",
    "right" : "AtomicInteger number = (AtomicInteger) quartzContext.get(QuartzConstants.QUARTZ_CAMEL_JOBS_COUNT);",
    "info" : "VariableDeclarationStatement[13351-13449]:VariableDeclarationStatement[13016-13114]"
  }, {
    "left" : "if (number == null)",
    "right" : "if (number == null)",
    "info" : "IfStatement[13458-13612]:IfStatement[13123-13277]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13478-13612]:Block[13143-13277]"
  }, {
    "left" : "number = new AtomicInteger(0);",
    "right" : "number = new AtomicInteger(0);",
    "info" : "ExpressionStatement[13492-13522]:ExpressionStatement[13157-13187]"
  }, {
    "left" : "quartzContext.put(QuartzConstants.QUARTZ_CAMEL_JOBS_COUNT, number);",
    "right" : "quartzContext.put(QuartzConstants.QUARTZ_CAMEL_JOBS_COUNT, number);",
    "info" : "ExpressionStatement[13535-13602]:ExpressionStatement[13200-13267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13686-13746]:Block[13892-13952]"
  }, {
    "left" : "return getSchedulerFactory().getScheduler();",
    "right" : "return getSchedulerFactory().getScheduler();",
    "info" : "ReturnStatement[13696-13740]:ReturnStatement[13902-13946]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13807-14415]:Block[14013-14621]"
  }, {
    "left" : "super.doStop();",
    "right" : "super.doStop();",
    "info" : "ExpressionStatement[13817-13832]:ExpressionStatement[14023-14038]"
  }, {
    "left" : "if (scheduler != null)",
    "right" : "if (scheduler != null)",
    "info" : "IfStatement[13842-14409]:IfStatement[14048-14615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13865-14409]:Block[14071-14615]"
  }, {
    "left" : "AtomicInteger number = (AtomicInteger) scheduler.getContext().get(QuartzConstants.QUARTZ_CAMEL_JOBS_COUNT);",
    "right" : "AtomicInteger number = (AtomicInteger) scheduler.getContext().get(QuartzConstants.QUARTZ_CAMEL_JOBS_COUNT);",
    "info" : "VariableDeclarationStatement[13879-13986]:VariableDeclarationStatement[14085-14192]"
  }, {
    "left" : "if (number != null && number.get() > 0)",
    "right" : "if (number != null && number.get() > 0)",
    "info" : "IfStatement[13999-14399]:IfStatement[14205-14605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14039-14204]:Block[14245-14410]"
  }, {
    "left" : "LOG.info(\"Cannot shutdown scheduler: \" + scheduler.getSchedulerName() + \" as there are still \" + number.get() + \" jobs registered.\");",
    "right" : "LOG.info(\"Cannot shutdown scheduler: \" + scheduler.getSchedulerName() + \" as there are still \" + number.get() + \" jobs registered.\");",
    "info" : "ExpressionStatement[14057-14190]:ExpressionStatement[14263-14396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14210-14399]:Block[14416-14605]"
  }, {
    "left" : "LOG.info(\"Shutting down scheduler. (will wait for all jobs to complete first.)\");",
    "right" : "LOG.info(\"Shutting down scheduler. (will wait for all jobs to complete first.)\");",
    "info" : "ExpressionStatement[14228-14309]:ExpressionStatement[14434-14515]"
  }, {
    "left" : "scheduler.shutdown(true);",
    "right" : "scheduler.shutdown(true);",
    "info" : "ExpressionStatement[14326-14351]:ExpressionStatement[14532-14557]"
  }, {
    "left" : "scheduler = null;",
    "right" : "scheduler = null;",
    "info" : "ExpressionStatement[14368-14385]:ExpressionStatement[14574-14591]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14532-15697]:Block[14738-16150]"
  }, {
    "left" : "if (scheduler == null)",
    "right" : "if (scheduler == null)",
    "info" : "IfStatement[14690-14762]:IfStatement[14896-15207]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14713-14762]:Block[14919-14968]"
  }, {
    "left" : "createAndInitScheduler();",
    "right" : "createAndInitScheduler();",
    "info" : "ExpressionStatement[14727-14752]:ExpressionStatement[14933-14958]"
  }, {
    "left" : "if (!autoStartScheduler)",
    "right" : "if (!autoStartScheduler)",
    "info" : "IfStatement[14839-15691]:IfStatement[15292-16144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14864-14967]:Block[15317-15420]"
  }, {
    "left" : "LOG.info(\"Not starting scheduler because autoStartScheduler is set to false.\");",
    "right" : "LOG.info(\"Not starting scheduler because autoStartScheduler is set to false.\");",
    "info" : "ExpressionStatement[14878-14957]:ExpressionStatement[15331-15410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14973-15691]:Block[15426-16144]"
  }, {
    "left" : "if (startDelayedSeconds > 0)",
    "right" : "if (startDelayedSeconds > 0)",
    "info" : "IfStatement[14987-15681]:IfStatement[15440-16134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15016-15407]:Block[15469-15860]"
  }, {
    "left" : "if (scheduler.isStarted())",
    "right" : "if (scheduler.isStarted())",
    "info" : "IfStatement[15034-15393]:IfStatement[15487-15846]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15061-15202]:Block[15514-15655]"
  }, {
    "left" : "LOG.warn(\"The scheduler has already started. Cannot apply the 'startDelayedSeconds' configuration!\");",
    "right" : "LOG.warn(\"The scheduler has already started. Cannot apply the 'startDelayedSeconds' configuration!\");",
    "info" : "ExpressionStatement[15083-15184]:ExpressionStatement[15536-15637]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15208-15393]:Block[15661-15846]"
  }, {
    "left" : "LOG.info(\"Starting scheduler with startDelayedSeconds={}\", startDelayedSeconds);",
    "right" : "LOG.info(\"Starting scheduler with startDelayedSeconds={}\", startDelayedSeconds);",
    "info" : "ExpressionStatement[15230-15310]:ExpressionStatement[15683-15763]"
  }, {
    "left" : "scheduler.startDelayed(startDelayedSeconds);",
    "right" : "scheduler.startDelayed(startDelayedSeconds);",
    "info" : "ExpressionStatement[15331-15375]:ExpressionStatement[15784-15828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15413-15681]:Block[15866-16134]"
  }, {
    "left" : "if (scheduler.isStarted())",
    "right" : "if (scheduler.isStarted())",
    "info" : "IfStatement[15431-15667]:IfStatement[15884-16120]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15458-15550]:Block[15911-16003]"
  }, {
    "left" : "LOG.info(\"The scheduler has already been started.\");",
    "right" : "LOG.info(\"The scheduler has already been started.\");",
    "info" : "ExpressionStatement[15480-15532]:ExpressionStatement[15933-15985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15556-15667]:Block[16009-16120]"
  }, {
    "left" : "LOG.info(\"Starting scheduler.\");",
    "right" : "LOG.info(\"Starting scheduler.\");",
    "info" : "ExpressionStatement[15578-15610]:ExpressionStatement[16031-16063]"
  }, {
    "left" : "scheduler.start();",
    "right" : "scheduler.start();",
    "info" : "ExpressionStatement[15631-15649]:ExpressionStatement[16084-16102]"
  } ]
}