{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JSTypeRegistry",
      "right" : "JSTypeRegistry",
      "info" : "TypeDeclaration[2809-60970]:TypeDeclaration[2809-61154]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[2969-3017]:FieldDeclaration[2969-3017]"
    }, {
      "left" : "private static final int PROPERTY_CHECKING_UNION_SIZE = 3000;",
      "right" : "private static final int PROPERTY_CHECKING_UNION_SIZE = 3000;",
      "info" : "FieldDeclaration[3021-3444]:FieldDeclaration[3021-3444]"
    }, {
      "left" : "private final transient ErrorReporter reporter;",
      "right" : "private final transient ErrorReporter reporter;",
      "info" : "FieldDeclaration[3719-3766]:FieldDeclaration[3719-3766]"
    }, {
      "left" : "private final JSType[] nativeTypes;",
      "right" : "private final JSType[] nativeTypes;",
      "info" : "FieldDeclaration[3969-4004]:FieldDeclaration[3969-4004]"
    }, {
      "left" : "private final Map<String, JSType> namesToTypes;",
      "right" : "private final Map<String, JSType> namesToTypes;",
      "info" : "FieldDeclaration[4008-4055]:FieldDeclaration[4008-4055]"
    }, {
      "left" : "private final Set<String> namespaces = new HashSet<String>();",
      "right" : "private final Set<String> namespaces = new HashSet<String>();",
      "info" : "FieldDeclaration[4126-4187]:FieldDeclaration[4126-4187]"
    }, {
      "left" : "private final Set<String> nonNullableTypeNames = new HashSet<String>();",
      "right" : "private final Set<String> nonNullableTypeNames = new HashSet<String>();",
      "info" : "FieldDeclaration[4926-4997]:FieldDeclaration[4926-4997]"
    }, {
      "left" : "private final Set<String> forwardDeclaredTypes = new HashSet<String>();",
      "right" : "private final Set<String> forwardDeclaredTypes = new HashSet<String>();",
      "info" : "FieldDeclaration[5157-5228]:FieldDeclaration[5157-5228]"
    }, {
      "left" : "private final Map<String, UnionTypeBuilder> typesIndexedByProperty =\n      Maps.newHashMap();",
      "right" : "private final Map<String, UnionTypeBuilder> typesIndexedByProperty =\n      Maps.newHashMap();",
      "info" : "FieldDeclaration[5321-5414]:FieldDeclaration[5321-5414]"
    }, {
      "left" : "private final Map<String, Map<String, ObjectType>>\n      eachRefTypeIndexedByProperty = Maps.newHashMap();",
      "right" : "private final Map<String, Map<String, ObjectType>>\n      eachRefTypeIndexedByProperty = Maps.newHashMap();",
      "info" : "FieldDeclaration[5570-5676]:FieldDeclaration[5570-5676]"
    }, {
      "left" : "private final Map<String, JSType> greatestSubtypeByProperty =\n      Maps.newHashMap();",
      "right" : "private final Map<String, JSType> greatestSubtypeByProperty =\n      Maps.newHashMap();",
      "info" : "FieldDeclaration[5858-5944]:FieldDeclaration[5858-5944]"
    }, {
      "left" : "private final Multimap<String, FunctionType> interfaceToImplementors =\n      LinkedHashMultimap.create();",
      "right" : "private final Multimap<String, FunctionType> interfaceToImplementors =\n      LinkedHashMultimap.create();",
      "info" : "FieldDeclaration[6007-6112]:FieldDeclaration[6007-6112]"
    }, {
      "left" : "private final Multimap<StaticScope<JSType>, NamedType> unresolvedNamedTypes =\n      ArrayListMultimap.create();",
      "right" : "private final Multimap<StaticScope<JSType>, NamedType> unresolvedNamedTypes =\n      ArrayListMultimap.create();",
      "info" : "FieldDeclaration[6153-6264]:FieldDeclaration[6153-6264]"
    }, {
      "left" : "private final Multimap<StaticScope<JSType>, NamedType> resolvedNamedTypes =\n      ArrayListMultimap.create();",
      "right" : "private final Multimap<StaticScope<JSType>, NamedType> resolvedNamedTypes =\n      ArrayListMultimap.create();",
      "info" : "FieldDeclaration[6303-6412]:FieldDeclaration[6303-6412]"
    }, {
      "left" : "private boolean lastGeneration = true;",
      "right" : "private boolean lastGeneration = true;",
      "info" : "FieldDeclaration[6484-6522]:FieldDeclaration[6484-6522]"
    }, {
      "left" : "private String templateTypeName;",
      "right" : "private String templateTypeName;",
      "info" : "FieldDeclaration[6555-6587]:FieldDeclaration[6555-6587]"
    }, {
      "left" : "private TemplateType templateType;",
      "right" : "private TemplateType templateType;",
      "info" : "FieldDeclaration[6615-6649]:FieldDeclaration[6615-6649]"
    }, {
      "left" : "private final boolean tolerateUndefinedValues;",
      "right" : "private final boolean tolerateUndefinedValues;",
      "info" : "FieldDeclaration[6653-6699]:FieldDeclaration[6653-6699]"
    }, {
      "left" : "enum : ResolveMode",
      "right" : "enum : ResolveMode",
      "info" : "EnumDeclaration[6703-7507]:EnumDeclaration[6703-7507]"
    }, {
      "left" : "private ResolveMode resolveMode = ResolveMode.LAZY_NAMES;",
      "right" : "private ResolveMode resolveMode = ResolveMode.LAZY_NAMES;",
      "info" : "FieldDeclaration[7511-7568]:FieldDeclaration[7511-7568]"
    }, {
      "left" : "public JSTypeRegistry(ErrorReporter reporter)",
      "right" : "public JSTypeRegistry(ErrorReporter reporter)",
      "info" : "MethodDeclaration[7572-7733]:MethodDeclaration[7572-7733]"
    }, {
      "left" : "public JSTypeRegistry(\n      ErrorReporter reporter, boolean tolerateUndefinedValues)",
      "right" : "public JSTypeRegistry(\n      ErrorReporter reporter, boolean tolerateUndefinedValues)",
      "info" : "MethodDeclaration[7737-8136]:MethodDeclaration[7737-8136]"
    }, {
      "left" : "public void setResolveMode(ResolveMode mode)",
      "right" : "public void setResolveMode(ResolveMode mode)",
      "info" : "MethodDeclaration[8140-8311]:MethodDeclaration[8140-8311]"
    }, {
      "left" : "ResolveMode getResolveMode()",
      "right" : "ResolveMode getResolveMode()",
      "info" : "MethodDeclaration[8315-8373]:MethodDeclaration[8315-8373]"
    }, {
      "left" : "public ErrorReporter getErrorReporter()",
      "right" : "public ErrorReporter getErrorReporter()",
      "info" : "MethodDeclaration[8377-8443]:MethodDeclaration[8377-8443]"
    }, {
      "left" : "public boolean shouldTolerateUndefinedValues()",
      "right" : "public boolean shouldTolerateUndefinedValues()",
      "info" : "MethodDeclaration[8447-8535]:MethodDeclaration[8447-8535]"
    }, {
      "left" : "public void resetForTypeCheck()",
      "right" : "public void resetForTypeCheck()",
      "info" : "MethodDeclaration[8539-8810]:MethodDeclaration[8539-8810]"
    }, {
      "left" : "private void initializeBuiltInTypes()",
      "right" : "private void initializeBuiltInTypes()",
      "info" : "MethodDeclaration[8814-22097]:MethodDeclaration[8814-22097]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[20419-20467]:FieldDeclaration[20419-20467]"
    }, {
      "left" : "public FunctionType getConstructor()",
      "right" : "public FunctionType getConstructor()",
      "info" : "MethodDeclaration[20479-20644]:MethodDeclaration[20479-20644]"
    }, {
      "left" : "private void initializeRegistry()",
      "right" : "private void initializeRegistry()",
      "info" : "MethodDeclaration[22101-23497]:MethodDeclaration[22101-23497]"
    }, {
      "left" : "private void register(JSType type)",
      "right" : "private void register(JSType type)",
      "info" : "MethodDeclaration[23501-23578]:MethodDeclaration[23501-23578]"
    }, {
      "left" : "private void register(JSType type, String name)",
      "right" : "private void register(JSType type, String name)",
      "info" : "MethodDeclaration[23582-23851]:MethodDeclaration[23582-23851]"
    }, {
      "left" : "private void registerNativeType(JSTypeNative typeId, JSType type)",
      "right" : "private void registerNativeType(JSTypeNative typeId, JSType type)",
      "info" : "MethodDeclaration[23855-23968]:MethodDeclaration[23855-23968]"
    }, {
      "left" : "public void registerPropertyOnType(String propertyName, JSType type)",
      "right" : "public void registerPropertyOnType(String propertyName, JSType type)",
      "info" : "MethodDeclaration[23972-25106]:MethodDeclaration[23972-25106]"
    }, {
      "left" : "private void addReferenceTypeIndexedByProperty(\n      String propertyName, JSType type)",
      "right" : "private void addReferenceTypeIndexedByProperty(\n      String propertyName, JSType type)",
      "info" : "MethodDeclaration[25110-25964]:MethodDeclaration[25110-25964]"
    }, {
      "left" : "public void unregisterPropertyOnType(String propertyName, JSType type)",
      "right" : "public void unregisterPropertyOnType(String propertyName, JSType type)",
      "info" : "MethodDeclaration[25968-26644]:MethodDeclaration[25968-26644]"
    }, {
      "left" : "public JSType getGreatestSubtypeWithProperty(\n      JSType type, String propertyName)",
      "right" : "public JSType getGreatestSubtypeWithProperty(\n      JSType type, String propertyName)",
      "info" : "MethodDeclaration[26648-27301]:MethodDeclaration[26648-27301]"
    }, {
      "left" : "public boolean canPropertyBeDefined(JSType type, String propertyName)",
      "right" : "public boolean canPropertyBeDefined(JSType type, String propertyName)",
      "info" : "MethodDeclaration[27305-27947]:MethodDeclaration[27305-28131]"
    }, {
      "left" : "public Iterable<JSType> getTypesWithProperty(String propertyName)",
      "right" : "public Iterable<JSType> getTypesWithProperty(String propertyName)",
      "info" : "MethodDeclaration[27951-28592]:MethodDeclaration[28135-28776]"
    }, {
      "left" : "public Iterable<ObjectType> getEachReferenceTypeWithProperty(\n      String propertyName)",
      "right" : "public Iterable<ObjectType> getEachReferenceTypeWithProperty(\n      String propertyName)",
      "info" : "MethodDeclaration[28596-29296]:MethodDeclaration[28780-29480]"
    }, {
      "left" : "ObjectType findCommonSuperObject(ObjectType a, ObjectType b)",
      "right" : "ObjectType findCommonSuperObject(ObjectType a, ObjectType b)",
      "info" : "MethodDeclaration[29300-29931]:MethodDeclaration[29484-30115]"
    }, {
      "left" : "private static List<ObjectType> getSuperStack(ObjectType a)",
      "right" : "private static List<ObjectType> getSuperStack(ObjectType a)",
      "info" : "MethodDeclaration[29935-30230]:MethodDeclaration[30119-30414]"
    }, {
      "left" : "public void incrementGeneration()",
      "right" : "public void incrementGeneration()",
      "info" : "MethodDeclaration[30234-30638]:MethodDeclaration[30418-30822]"
    }, {
      "left" : "boolean isLastGeneration()",
      "right" : "boolean isLastGeneration()",
      "info" : "MethodDeclaration[30642-30701]:MethodDeclaration[30826-30885]"
    }, {
      "left" : "public void setLastGeneration(boolean lastGeneration)",
      "right" : "public void setLastGeneration(boolean lastGeneration)",
      "info" : "MethodDeclaration[30705-30942]:MethodDeclaration[30889-31126]"
    }, {
      "left" : "void registerTypeImplementingInterface(\n      FunctionType type, ObjectType interfaceInstance)",
      "right" : "void registerTypeImplementingInterface(\n      FunctionType type, ObjectType interfaceInstance)",
      "info" : "MethodDeclaration[30946-31375]:MethodDeclaration[31130-31559]"
    }, {
      "left" : "public Collection<FunctionType> getDirectImplementors(\n      ObjectType interfaceInstance)",
      "right" : "public Collection<FunctionType> getDirectImplementors(\n      ObjectType interfaceInstance)",
      "info" : "MethodDeclaration[31379-31817]:MethodDeclaration[31563-32001]"
    }, {
      "left" : "public boolean declareType(String name, JSType t)",
      "right" : "public boolean declareType(String name, JSType t)",
      "info" : "MethodDeclaration[31821-32300]:MethodDeclaration[32005-32484]"
    }, {
      "left" : "public void overwriteDeclaredType(String name, JSType t)",
      "right" : "public void overwriteDeclaredType(String name, JSType t)",
      "info" : "MethodDeclaration[32304-32576]:MethodDeclaration[32488-32760]"
    }, {
      "left" : "public void forwardDeclareType(String name)",
      "right" : "public void forwardDeclareType(String name)",
      "info" : "MethodDeclaration[32580-32795]:MethodDeclaration[32764-32979]"
    }, {
      "left" : "public boolean isForwardDeclaredType(String name)",
      "right" : "public boolean isForwardDeclaredType(String name)",
      "info" : "MethodDeclaration[32799-32965]:MethodDeclaration[32983-33149]"
    }, {
      "left" : "public boolean hasNamespace(String name)",
      "right" : "public boolean hasNamespace(String name)",
      "info" : "MethodDeclaration[32969-33110]:MethodDeclaration[33153-33294]"
    }, {
      "left" : "public JSType getType(String jsTypeName)",
      "right" : "public JSType getType(String jsTypeName)",
      "info" : "MethodDeclaration[33114-33559]:MethodDeclaration[33298-33743]"
    }, {
      "left" : "public JSType getNativeType(JSTypeNative typeId)",
      "right" : "public JSType getNativeType(JSTypeNative typeId)",
      "info" : "MethodDeclaration[33563-33659]:MethodDeclaration[33747-33843]"
    }, {
      "left" : "public ObjectType getNativeObjectType(JSTypeNative typeId)",
      "right" : "public ObjectType getNativeObjectType(JSTypeNative typeId)",
      "info" : "MethodDeclaration[33663-33774]:MethodDeclaration[33847-33958]"
    }, {
      "left" : "public FunctionType getNativeFunctionType(JSTypeNative typeId)",
      "right" : "public FunctionType getNativeFunctionType(JSTypeNative typeId)",
      "info" : "MethodDeclaration[33778-33895]:MethodDeclaration[33962-34079]"
    }, {
      "left" : "public JSType getType(StaticScope<JSType> scope, String jsTypeName,\n      String sourceName, int lineno, int charno)",
      "right" : "public JSType getType(StaticScope<JSType> scope, String jsTypeName,\n      String sourceName, int lineno, int charno)",
      "info" : "MethodDeclaration[33899-34928]:MethodDeclaration[34083-35112]"
    }, {
      "left" : "public void clearNamedTypes()",
      "right" : "public void clearNamedTypes()",
      "info" : "MethodDeclaration[34932-35203]:MethodDeclaration[35116-35387]"
    }, {
      "left" : "public void resolveTypesInScope(StaticScope<JSType> scope)",
      "right" : "public void resolveTypesInScope(StaticScope<JSType> scope)",
      "info" : "MethodDeclaration[35207-36266]:MethodDeclaration[35391-36450]"
    }, {
      "left" : "public JSType createOptionalType(JSType type)",
      "right" : "public JSType createOptionalType(JSType type)",
      "info" : "MethodDeclaration[36270-36626]:MethodDeclaration[36454-36810]"
    }, {
      "left" : "public JSType createDefaultObjectUnion(JSType type)",
      "right" : "public JSType createDefaultObjectUnion(JSType type)",
      "info" : "MethodDeclaration[36630-36942]:MethodDeclaration[36814-37126]"
    }, {
      "left" : "public JSType createNullableType(JSType type)",
      "right" : "public JSType createNullableType(JSType type)",
      "info" : "MethodDeclaration[36946-37203]:MethodDeclaration[37130-37387]"
    }, {
      "left" : "public JSType createOptionalNullableType(JSType type)",
      "right" : "public JSType createOptionalNullableType(JSType type)",
      "info" : "MethodDeclaration[37207-37524]:MethodDeclaration[37391-37708]"
    }, {
      "left" : "public JSType createUnionType(JSType... variants)",
      "right" : "public JSType createUnionType(JSType... variants)",
      "info" : "MethodDeclaration[37528-37817]:MethodDeclaration[37712-38001]"
    }, {
      "left" : "public JSType createUnionType(JSTypeNative... variants)",
      "right" : "public JSType createUnionType(JSTypeNative... variants)",
      "info" : "MethodDeclaration[37821-38177]:MethodDeclaration[38005-38361]"
    }, {
      "left" : "public EnumType createEnumType(\n      String name, Node source, JSType elementsType)",
      "right" : "public EnumType createEnumType(\n      String name, Node source, JSType elementsType)",
      "info" : "MethodDeclaration[38181-38369]:MethodDeclaration[38365-38553]"
    }, {
      "left" : "ArrowType createArrowType(Node parametersNode, JSType returnType)",
      "right" : "ArrowType createArrowType(Node parametersNode, JSType returnType)",
      "info" : "MethodDeclaration[38373-38799]:MethodDeclaration[38557-38983]"
    }, {
      "left" : "ArrowType createArrowType(Node parametersNode)",
      "right" : "ArrowType createArrowType(Node parametersNode)",
      "info" : "MethodDeclaration[38803-39100]:MethodDeclaration[38987-39284]"
    }, {
      "left" : "public FunctionType createFunctionType(\n      JSType returnType, JSType... parameterTypes)",
      "right" : "public FunctionType createFunctionType(\n      JSType returnType, JSType... parameterTypes)",
      "info" : "MethodDeclaration[39104-39423]:MethodDeclaration[39288-39607]"
    }, {
      "left" : "public FunctionType createFunctionTypeWithVarArgs(\n      JSType returnType, List<JSType> parameterTypes)",
      "right" : "public FunctionType createFunctionTypeWithVarArgs(\n      JSType returnType, List<JSType> parameterTypes)",
      "info" : "MethodDeclaration[39427-39867]:MethodDeclaration[39611-40051]"
    }, {
      "left" : "public FunctionType createFunctionType(\n      JSType returnType, List<JSType> parameterTypes)",
      "right" : "public FunctionType createFunctionType(\n      JSType returnType, List<JSType> parameterTypes)",
      "info" : "MethodDeclaration[39871-40193]:MethodDeclaration[40055-40377]"
    }, {
      "left" : "public FunctionType createFunctionTypeWithVarArgs(\n      JSType returnType, JSType... parameterTypes)",
      "right" : "public FunctionType createFunctionTypeWithVarArgs(\n      JSType returnType, JSType... parameterTypes)",
      "info" : "MethodDeclaration[40197-40634]:MethodDeclaration[40381-40818]"
    }, {
      "left" : "public FunctionType createConstructorType(\n      JSType returnType, JSType... parameterTypes)",
      "right" : "public FunctionType createConstructorType(\n      JSType returnType, JSType... parameterTypes)",
      "info" : "MethodDeclaration[40638-41015]:MethodDeclaration[40822-41199]"
    }, {
      "left" : "public FunctionType createConstructorTypeWithVarArgs(\n      JSType returnType, JSType... parameterTypes)",
      "right" : "public FunctionType createConstructorTypeWithVarArgs(\n      JSType returnType, JSType... parameterTypes)",
      "info" : "MethodDeclaration[41019-41508]:MethodDeclaration[41203-41692]"
    }, {
      "left" : "public JSType createFunctionType(ObjectType instanceType,\n      JSType returnType, List<JSType> parameterTypes)",
      "right" : "public JSType createFunctionType(ObjectType instanceType,\n      JSType returnType, List<JSType> parameterTypes)",
      "info" : "MethodDeclaration[41512-42063]:MethodDeclaration[41696-42247]"
    }, {
      "left" : "public JSType createFunctionTypeWithVarArgs(ObjectType instanceType,\n      JSType returnType, List<JSType> parameterTypes)",
      "right" : "public JSType createFunctionTypeWithVarArgs(ObjectType instanceType,\n      JSType returnType, List<JSType> parameterTypes)",
      "info" : "MethodDeclaration[42067-42732]:MethodDeclaration[42251-42916]"
    }, {
      "left" : "public Node createParameters(List<JSType> parameterTypes)",
      "right" : "public Node createParameters(List<JSType> parameterTypes)",
      "info" : "MethodDeclaration[42736-43093]:MethodDeclaration[42920-43277]"
    }, {
      "left" : "public Node createParametersWithVarArgs(List<JSType> parameterTypes)",
      "right" : "public Node createParametersWithVarArgs(List<JSType> parameterTypes)",
      "info" : "MethodDeclaration[43097-43629]:MethodDeclaration[43281-43813]"
    }, {
      "left" : "public Node createParameters(JSType... parameterTypes)",
      "right" : "public Node createParameters(JSType... parameterTypes)",
      "info" : "MethodDeclaration[43633-43942]:MethodDeclaration[43817-44126]"
    }, {
      "left" : "public Node createParametersWithVarArgs(JSType... parameterTypes)",
      "right" : "public Node createParametersWithVarArgs(JSType... parameterTypes)",
      "info" : "MethodDeclaration[43946-44418]:MethodDeclaration[44130-44602]"
    }, {
      "left" : "public Node createOptionalParameters(JSType... parameterTypes)",
      "right" : "public Node createOptionalParameters(JSType... parameterTypes)",
      "info" : "MethodDeclaration[44422-44753]:MethodDeclaration[44606-44937]"
    }, {
      "left" : "private Node createParameters(boolean lastVarArgs, JSType... parameterTypes)",
      "right" : "private Node createParameters(boolean lastVarArgs, JSType... parameterTypes)",
      "info" : "MethodDeclaration[44757-45609]:MethodDeclaration[44941-45793]"
    }, {
      "left" : "public FunctionType createFunctionType(JSType returnType,\n      boolean lastVarArgs, JSType... parameterTypes)",
      "right" : "public FunctionType createFunctionType(JSType returnType,\n      boolean lastVarArgs, JSType... parameterTypes)",
      "info" : "MethodDeclaration[45613-46163]:MethodDeclaration[45797-46347]"
    }, {
      "left" : "public FunctionType createFunctionTypeWithNewReturnType(\n      FunctionType existingFunctionType, JSType returnType)",
      "right" : "public FunctionType createFunctionTypeWithNewReturnType(\n      FunctionType existingFunctionType, JSType returnType)",
      "info" : "MethodDeclaration[46167-46651]:MethodDeclaration[46351-46835]"
    }, {
      "left" : "public FunctionType createFunctionTypeWithNewThisType(\n      FunctionType existingFunctionType, ObjectType thisType)",
      "right" : "public FunctionType createFunctionTypeWithNewThisType(\n      FunctionType existingFunctionType, ObjectType thisType)",
      "info" : "MethodDeclaration[46655-47139]:MethodDeclaration[46839-47323]"
    }, {
      "left" : "public FunctionType createFunctionType(\n      JSType returnType, Node parameters)",
      "right" : "public FunctionType createFunctionType(\n      JSType returnType, Node parameters)",
      "info" : "MethodDeclaration[47143-47619]:MethodDeclaration[47327-47803]"
    }, {
      "left" : "public FunctionType createConstructorType(JSType returnType,\n      boolean lastVarArgs, JSType... parameterTypes)",
      "right" : "public FunctionType createConstructorType(JSType returnType,\n      boolean lastVarArgs, JSType... parameterTypes)",
      "info" : "MethodDeclaration[47623-48213]:MethodDeclaration[47807-48397]"
    }, {
      "left" : "public ObjectType createObjectType(ObjectType implicitPrototype)",
      "right" : "public ObjectType createObjectType(ObjectType implicitPrototype)",
      "info" : "MethodDeclaration[48217-48387]:MethodDeclaration[48401-48571]"
    }, {
      "left" : "public RecordType createRecordType(Map<String, RecordProperty> properties)",
      "right" : "public RecordType createRecordType(Map<String, RecordProperty> properties)",
      "info" : "MethodDeclaration[48391-48556]:MethodDeclaration[48575-48740]"
    }, {
      "left" : "public ObjectType createObjectType(String name, Node n,\n      ObjectType implicitPrototype)",
      "right" : "public ObjectType createObjectType(String name, Node n,\n      ObjectType implicitPrototype)",
      "info" : "MethodDeclaration[48560-48764]:MethodDeclaration[48744-48948]"
    }, {
      "left" : "public ObjectType createAnonymousObjectType()",
      "right" : "public ObjectType createAnonymousObjectType()",
      "info" : "MethodDeclaration[48768-48999]:MethodDeclaration[48952-49183]"
    }, {
      "left" : "public boolean resetImplicitPrototype(\n      JSType type, ObjectType newImplicitProto)",
      "right" : "public boolean resetImplicitPrototype(\n      JSType type, ObjectType newImplicitProto)",
      "info" : "MethodDeclaration[49003-49783]:MethodDeclaration[49187-49967]"
    }, {
      "left" : "ObjectType createNativeAnonymousObjectType()",
      "right" : "ObjectType createNativeAnonymousObjectType()",
      "info" : "MethodDeclaration[49787-50041]:MethodDeclaration[49971-50225]"
    }, {
      "left" : "public FunctionType createConstructorType(String name, Node source,\n      Node parameters, JSType returnType)",
      "right" : "public FunctionType createConstructorType(String name, Node source,\n      Node parameters, JSType returnType)",
      "info" : "MethodDeclaration[50045-50822]:MethodDeclaration[50229-51006]"
    }, {
      "left" : "public FunctionType createInterfaceType(String name, Node source)",
      "right" : "public FunctionType createInterfaceType(String name, Node source)",
      "info" : "MethodDeclaration[50826-51172]:MethodDeclaration[51010-51356]"
    }, {
      "left" : "public ParameterizedType createParameterizedType(\n      ObjectType objectType, JSType parameterType)",
      "right" : "public ParameterizedType createParameterizedType(\n      ObjectType objectType, JSType parameterType)",
      "info" : "MethodDeclaration[51176-51396]:MethodDeclaration[51360-51580]"
    }, {
      "left" : "public JSType createNamedType(String reference,\n      String sourceName, int lineno, int charno)",
      "right" : "public JSType createNamedType(String reference,\n      String sourceName, int lineno, int charno)",
      "info" : "MethodDeclaration[51400-51633]:MethodDeclaration[51584-51817]"
    }, {
      "left" : "public void identifyNonNullableName(String name)",
      "right" : "public void identifyNonNullableName(String name)",
      "info" : "MethodDeclaration[51637-51854]:MethodDeclaration[51821-52038]"
    }, {
      "left" : "public JSType createFromTypeNodes(Node n, String sourceName,\n      StaticScope<JSType> scope)",
      "right" : "public JSType createFromTypeNodes(Node n, String sourceName,\n      StaticScope<JSType> scope)",
      "info" : "MethodDeclaration[51858-52518]:MethodDeclaration[52042-52702]"
    }, {
      "left" : "private boolean hasTypeName(Node n)",
      "right" : "private boolean hasTypeName(Node n)",
      "info" : "MethodDeclaration[52522-52806]:MethodDeclaration[52706-52990]"
    }, {
      "left" : "private JSType createFromTypeNodesInternal(Node n, String sourceName,\n      StaticScope<JSType> scope)",
      "right" : "private JSType createFromTypeNodesInternal(Node n, String sourceName,\n      StaticScope<JSType> scope)",
      "info" : "MethodDeclaration[52810-58747]:MethodDeclaration[52994-58931]"
    }, {
      "left" : "private JSType createRecordTypeFromNodes(Node n, String sourceName,\n      StaticScope<JSType> scope)",
      "right" : "private JSType createRecordTypeFromNodes(Node n, String sourceName,\n      StaticScope<JSType> scope)",
      "info" : "MethodDeclaration[58751-60643]:MethodDeclaration[58935-60827]"
    }, {
      "left" : "public void setTemplateTypeName(String name)",
      "right" : "public void setTemplateTypeName(String name)",
      "info" : "MethodDeclaration[60647-60821]:MethodDeclaration[60831-61005]"
    }, {
      "left" : "public void clearTemplateTypeName()",
      "right" : "public void clearTemplateTypeName()",
      "info" : "MethodDeclaration[60825-60968]:MethodDeclaration[61009-61152]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2913-2919]:Modifier[2913-2919]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2920-2925]:TYPE_DECLARATION_KIND[2920-2925]"
    }, {
      "left" : "JSTypeRegistry",
      "right" : "JSTypeRegistry",
      "info" : "SimpleName[2926-2940]:SimpleName[2926-2940]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[2952-2964]:SimpleType[2952-2964]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7655-7661]:Modifier[7655-7661]"
    }, {
      "left" : "JSTypeRegistry",
      "right" : "JSTypeRegistry",
      "info" : "SimpleName[7662-7676]:SimpleName[7662-7676]"
    }, {
      "left" : "ErrorReporter reporter",
      "right" : "ErrorReporter reporter",
      "info" : "SingleVariableDeclaration[7677-7699]:SingleVariableDeclaration[7677-7699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7701-7733]:Block[7701-7733]"
    }, {
      "left" : "this(reporter, false);",
      "right" : "this(reporter, false);",
      "info" : "ConstructorInvocation[7707-7729]:ConstructorInvocation[7707-7729]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7820-7826]:Modifier[7820-7826]"
    }, {
      "left" : "JSTypeRegistry",
      "right" : "JSTypeRegistry",
      "info" : "SimpleName[7827-7841]:SimpleName[7827-7841]"
    }, {
      "left" : "ErrorReporter reporter",
      "right" : "ErrorReporter reporter",
      "info" : "SingleVariableDeclaration[7849-7871]:SingleVariableDeclaration[7849-7871]"
    }, {
      "left" : "boolean tolerateUndefinedValues",
      "right" : "boolean tolerateUndefinedValues",
      "info" : "SingleVariableDeclaration[7873-7904]:SingleVariableDeclaration[7873-7904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7906-8136]:Block[7906-8136]"
    }, {
      "left" : "this.reporter = reporter;",
      "right" : "this.reporter = reporter;",
      "info" : "ExpressionStatement[7912-7937]:ExpressionStatement[7912-7937]"
    }, {
      "left" : "nativeTypes = new JSType[JSTypeNative.values().length];",
      "right" : "nativeTypes = new JSType[JSTypeNative.values().length];",
      "info" : "ExpressionStatement[7942-7997]:ExpressionStatement[7942-7997]"
    }, {
      "left" : "namesToTypes = new HashMap<String, JSType>();",
      "right" : "namesToTypes = new HashMap<String, JSType>();",
      "info" : "ExpressionStatement[8002-8047]:ExpressionStatement[8002-8047]"
    }, {
      "left" : "resetForTypeCheck();",
      "right" : "resetForTypeCheck();",
      "info" : "ExpressionStatement[8052-8072]:ExpressionStatement[8052-8072]"
    }, {
      "left" : "this.tolerateUndefinedValues = tolerateUndefinedValues;",
      "right" : "this.tolerateUndefinedValues = tolerateUndefinedValues;",
      "info" : "ExpressionStatement[8077-8132]:ExpressionStatement[8077-8132]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8232-8238]:Modifier[8232-8238]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8239-8243]:PrimitiveType[8239-8243]"
    }, {
      "left" : "setResolveMode",
      "right" : "setResolveMode",
      "info" : "SimpleName[8244-8258]:SimpleName[8244-8258]"
    }, {
      "left" : "ResolveMode mode",
      "right" : "ResolveMode mode",
      "info" : "SingleVariableDeclaration[8259-8275]:SingleVariableDeclaration[8259-8275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8277-8311]:Block[8277-8311]"
    }, {
      "left" : "this.resolveMode = mode;",
      "right" : "this.resolveMode = mode;",
      "info" : "ExpressionStatement[8283-8307]:ExpressionStatement[8283-8307]"
    }, {
      "left" : "ResolveMode",
      "right" : "ResolveMode",
      "info" : "SimpleType[8315-8326]:SimpleType[8315-8326]"
    }, {
      "left" : "getResolveMode",
      "right" : "getResolveMode",
      "info" : "SimpleName[8327-8341]:SimpleName[8327-8341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8344-8373]:Block[8344-8373]"
    }, {
      "left" : "return resolveMode;",
      "right" : "return resolveMode;",
      "info" : "ReturnStatement[8350-8369]:ReturnStatement[8350-8369]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8377-8383]:Modifier[8377-8383]"
    }, {
      "left" : "ErrorReporter",
      "right" : "ErrorReporter",
      "info" : "SimpleType[8384-8397]:SimpleType[8384-8397]"
    }, {
      "left" : "getErrorReporter",
      "right" : "getErrorReporter",
      "info" : "SimpleName[8398-8414]:SimpleName[8398-8414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8417-8443]:Block[8417-8443]"
    }, {
      "left" : "return reporter;",
      "right" : "return reporter;",
      "info" : "ReturnStatement[8423-8439]:ReturnStatement[8423-8439]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8447-8453]:Modifier[8447-8453]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8454-8461]:PrimitiveType[8454-8461]"
    }, {
      "left" : "shouldTolerateUndefinedValues",
      "right" : "shouldTolerateUndefinedValues",
      "info" : "SimpleName[8462-8491]:SimpleName[8462-8491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8494-8535]:Block[8494-8535]"
    }, {
      "left" : "return tolerateUndefinedValues;",
      "right" : "return tolerateUndefinedValues;",
      "info" : "ReturnStatement[8500-8531]:ReturnStatement[8500-8531]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8589-8595]:Modifier[8589-8595]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8596-8600]:PrimitiveType[8596-8600]"
    }, {
      "left" : "resetForTypeCheck",
      "right" : "resetForTypeCheck",
      "info" : "SimpleName[8601-8618]:SimpleName[8601-8618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8621-8810]:Block[8621-8810]"
    }, {
      "left" : "typesIndexedByProperty.clear();",
      "right" : "typesIndexedByProperty.clear();",
      "info" : "ExpressionStatement[8627-8658]:ExpressionStatement[8627-8658]"
    }, {
      "left" : "eachRefTypeIndexedByProperty.clear();",
      "right" : "eachRefTypeIndexedByProperty.clear();",
      "info" : "ExpressionStatement[8663-8700]:ExpressionStatement[8663-8700]"
    }, {
      "left" : "initializeBuiltInTypes();",
      "right" : "initializeBuiltInTypes();",
      "info" : "ExpressionStatement[8705-8730]:ExpressionStatement[8705-8730]"
    }, {
      "left" : "namesToTypes.clear();",
      "right" : "namesToTypes.clear();",
      "info" : "ExpressionStatement[8735-8756]:ExpressionStatement[8735-8756]"
    }, {
      "left" : "namespaces.clear();",
      "right" : "namespaces.clear();",
      "info" : "ExpressionStatement[8761-8780]:ExpressionStatement[8761-8780]"
    }, {
      "left" : "initializeRegistry();",
      "right" : "initializeRegistry();",
      "info" : "ExpressionStatement[8785-8806]:ExpressionStatement[8785-8806]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8814-8821]:Modifier[8814-8821]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8822-8826]:PrimitiveType[8822-8826]"
    }, {
      "left" : "initializeBuiltInTypes",
      "right" : "initializeBuiltInTypes",
      "info" : "SimpleName[8827-8849]:SimpleName[8827-8849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8852-22097]:Block[8852-22097]"
    }, {
      "left" : "BooleanType BOOLEAN_TYPE = new BooleanType(this);",
      "right" : "BooleanType BOOLEAN_TYPE = new BooleanType(this);",
      "info" : "VariableDeclarationStatement[8901-8950]:VariableDeclarationStatement[8901-8950]"
    }, {
      "left" : "registerNativeType(JSTypeNative.BOOLEAN_TYPE, BOOLEAN_TYPE);",
      "right" : "registerNativeType(JSTypeNative.BOOLEAN_TYPE, BOOLEAN_TYPE);",
      "info" : "ExpressionStatement[8955-9015]:ExpressionStatement[8955-9015]"
    }, {
      "left" : "NullType NULL_TYPE = new NullType(this);",
      "right" : "NullType NULL_TYPE = new NullType(this);",
      "info" : "VariableDeclarationStatement[9021-9061]:VariableDeclarationStatement[9021-9061]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NULL_TYPE, NULL_TYPE);",
      "right" : "registerNativeType(JSTypeNative.NULL_TYPE, NULL_TYPE);",
      "info" : "ExpressionStatement[9066-9120]:ExpressionStatement[9066-9120]"
    }, {
      "left" : "NumberType NUMBER_TYPE = new NumberType(this);",
      "right" : "NumberType NUMBER_TYPE = new NumberType(this);",
      "info" : "VariableDeclarationStatement[9126-9172]:VariableDeclarationStatement[9126-9172]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NUMBER_TYPE, NUMBER_TYPE);",
      "right" : "registerNativeType(JSTypeNative.NUMBER_TYPE, NUMBER_TYPE);",
      "info" : "ExpressionStatement[9177-9235]:ExpressionStatement[9177-9235]"
    }, {
      "left" : "StringType STRING_TYPE = new StringType(this);",
      "right" : "StringType STRING_TYPE = new StringType(this);",
      "info" : "VariableDeclarationStatement[9241-9287]:VariableDeclarationStatement[9241-9287]"
    }, {
      "left" : "registerNativeType(JSTypeNative.STRING_TYPE, STRING_TYPE);",
      "right" : "registerNativeType(JSTypeNative.STRING_TYPE, STRING_TYPE);",
      "info" : "ExpressionStatement[9292-9350]:ExpressionStatement[9292-9350]"
    }, {
      "left" : "UnknownType UNKNOWN_TYPE = new UnknownType(this, false);",
      "right" : "UnknownType UNKNOWN_TYPE = new UnknownType(this, false);",
      "info" : "VariableDeclarationStatement[9356-9412]:VariableDeclarationStatement[9356-9412]"
    }, {
      "left" : "registerNativeType(JSTypeNative.UNKNOWN_TYPE, UNKNOWN_TYPE);",
      "right" : "registerNativeType(JSTypeNative.UNKNOWN_TYPE, UNKNOWN_TYPE);",
      "info" : "ExpressionStatement[9417-9477]:ExpressionStatement[9417-9477]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.CHECKED_UNKNOWN_TYPE, new UnknownType(this, true));",
      "right" : "registerNativeType(\n        JSTypeNative.CHECKED_UNKNOWN_TYPE, new UnknownType(this, true));",
      "info" : "ExpressionStatement[9482-9574]:ExpressionStatement[9482-9574]"
    }, {
      "left" : "VoidType VOID_TYPE = new VoidType(this);",
      "right" : "VoidType VOID_TYPE = new VoidType(this);",
      "info" : "VariableDeclarationStatement[9580-9620]:VariableDeclarationStatement[9580-9620]"
    }, {
      "left" : "registerNativeType(JSTypeNative.VOID_TYPE, VOID_TYPE);",
      "right" : "registerNativeType(JSTypeNative.VOID_TYPE, VOID_TYPE);",
      "info" : "ExpressionStatement[9625-9679]:ExpressionStatement[9625-9679]"
    }, {
      "left" : "AllType ALL_TYPE = new AllType(this);",
      "right" : "AllType ALL_TYPE = new AllType(this);",
      "info" : "VariableDeclarationStatement[9685-9722]:VariableDeclarationStatement[9685-9722]"
    }, {
      "left" : "registerNativeType(JSTypeNative.ALL_TYPE, ALL_TYPE);",
      "right" : "registerNativeType(JSTypeNative.ALL_TYPE, ALL_TYPE);",
      "info" : "ExpressionStatement[9727-9779]:ExpressionStatement[9727-9779]"
    }, {
      "left" : "PrototypeObjectType TOP_LEVEL_PROTOTYPE =\n        new PrototypeObjectType(this, null, null, true);",
      "right" : "PrototypeObjectType TOP_LEVEL_PROTOTYPE =\n        new PrototypeObjectType(this, null, null, true);",
      "info" : "VariableDeclarationStatement[10036-10134]:VariableDeclarationStatement[10036-10134]"
    }, {
      "left" : "registerNativeType(JSTypeNative.TOP_LEVEL_PROTOTYPE, TOP_LEVEL_PROTOTYPE);",
      "right" : "registerNativeType(JSTypeNative.TOP_LEVEL_PROTOTYPE, TOP_LEVEL_PROTOTYPE);",
      "info" : "ExpressionStatement[10139-10213]:ExpressionStatement[10139-10213]"
    }, {
      "left" : "FunctionType OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"Object\", null,\n            createArrowType(createOptionalParameters(ALL_TYPE), UNKNOWN_TYPE),\n            null, null, true, true);",
      "right" : "FunctionType OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"Object\", null,\n            createArrowType(createOptionalParameters(ALL_TYPE), UNKNOWN_TYPE),\n            null, null, true, true);",
      "info" : "VariableDeclarationStatement[10233-10431]:VariableDeclarationStatement[10233-10431]"
    }, {
      "left" : "OBJECT_FUNCTION_TYPE.setPrototype(TOP_LEVEL_PROTOTYPE, null);",
      "right" : "OBJECT_FUNCTION_TYPE.setPrototype(TOP_LEVEL_PROTOTYPE, null);",
      "info" : "ExpressionStatement[10437-10498]:ExpressionStatement[10437-10498]"
    }, {
      "left" : "registerNativeType(JSTypeNative.OBJECT_FUNCTION_TYPE, OBJECT_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.OBJECT_FUNCTION_TYPE, OBJECT_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[10503-10579]:ExpressionStatement[10503-10579]"
    }, {
      "left" : "ObjectType OBJECT_TYPE = OBJECT_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType OBJECT_TYPE = OBJECT_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[10585-10649]:VariableDeclarationStatement[10585-10649]"
    }, {
      "left" : "registerNativeType(JSTypeNative.OBJECT_TYPE, OBJECT_TYPE);",
      "right" : "registerNativeType(JSTypeNative.OBJECT_TYPE, OBJECT_TYPE);",
      "info" : "ExpressionStatement[10654-10712]:ExpressionStatement[10654-10712]"
    }, {
      "left" : "ObjectType OBJECT_PROTOTYPE = OBJECT_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType OBJECT_PROTOTYPE = OBJECT_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[10718-10784]:VariableDeclarationStatement[10718-10784]"
    }, {
      "left" : "registerNativeType(JSTypeNative.OBJECT_PROTOTYPE, OBJECT_PROTOTYPE);",
      "right" : "registerNativeType(JSTypeNative.OBJECT_PROTOTYPE, OBJECT_PROTOTYPE);",
      "info" : "ExpressionStatement[10789-10857]:ExpressionStatement[10789-10857]"
    }, {
      "left" : "FunctionType FUNCTION_FUNCTION_TYPE =\n        new FunctionType(this, \"Function\", null,\n            createArrowType(\n                createParametersWithVarArgs(ALL_TYPE), UNKNOWN_TYPE),\n            null, null, true, true);",
      "right" : "FunctionType FUNCTION_FUNCTION_TYPE =\n        new FunctionType(this, \"Function\", null,\n            createArrowType(\n                createParametersWithVarArgs(ALL_TYPE), UNKNOWN_TYPE),\n            null, null, true, true);",
      "info" : "VariableDeclarationStatement[10879-11101]:VariableDeclarationStatement[10879-11101]"
    }, {
      "left" : "FUNCTION_FUNCTION_TYPE.setPrototypeBasedOn(OBJECT_TYPE);",
      "right" : "FUNCTION_FUNCTION_TYPE.setPrototypeBasedOn(OBJECT_TYPE);",
      "info" : "ExpressionStatement[11106-11162]:ExpressionStatement[11106-11162]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.FUNCTION_FUNCTION_TYPE, FUNCTION_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.FUNCTION_FUNCTION_TYPE, FUNCTION_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[11167-11256]:ExpressionStatement[11167-11256]"
    }, {
      "left" : "ObjectType FUNCTION_PROTOTYPE = FUNCTION_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType FUNCTION_PROTOTYPE = FUNCTION_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[11262-11332]:VariableDeclarationStatement[11262-11332]"
    }, {
      "left" : "registerNativeType(JSTypeNative.FUNCTION_PROTOTYPE, FUNCTION_PROTOTYPE);",
      "right" : "registerNativeType(JSTypeNative.FUNCTION_PROTOTYPE, FUNCTION_PROTOTYPE);",
      "info" : "ExpressionStatement[11337-11409]:ExpressionStatement[11337-11409]"
    }, {
      "left" : "NoType NO_TYPE = new NoType(this);",
      "right" : "NoType NO_TYPE = new NoType(this);",
      "info" : "VariableDeclarationStatement[11415-11449]:VariableDeclarationStatement[11415-11449]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NO_TYPE, NO_TYPE);",
      "right" : "registerNativeType(JSTypeNative.NO_TYPE, NO_TYPE);",
      "info" : "ExpressionStatement[11454-11504]:ExpressionStatement[11454-11504]"
    }, {
      "left" : "NoObjectType NO_OBJECT_TYPE = new NoObjectType(this);",
      "right" : "NoObjectType NO_OBJECT_TYPE = new NoObjectType(this);",
      "info" : "VariableDeclarationStatement[11510-11563]:VariableDeclarationStatement[11510-11563]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NO_OBJECT_TYPE, NO_OBJECT_TYPE);",
      "right" : "registerNativeType(JSTypeNative.NO_OBJECT_TYPE, NO_OBJECT_TYPE);",
      "info" : "ExpressionStatement[11568-11632]:ExpressionStatement[11568-11632]"
    }, {
      "left" : "NoObjectType NO_RESOLVED_TYPE = new NoResolvedType(this);",
      "right" : "NoObjectType NO_RESOLVED_TYPE = new NoResolvedType(this);",
      "info" : "VariableDeclarationStatement[11638-11695]:VariableDeclarationStatement[11638-11695]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NO_RESOLVED_TYPE, NO_RESOLVED_TYPE);",
      "right" : "registerNativeType(JSTypeNative.NO_RESOLVED_TYPE, NO_RESOLVED_TYPE);",
      "info" : "ExpressionStatement[11700-11768]:ExpressionStatement[11700-11768]"
    }, {
      "left" : "FunctionType ARRAY_FUNCTION_TYPE =\n      new FunctionType(this, \"Array\", null,\n          createArrowType(createParametersWithVarArgs(ALL_TYPE), null),\n          null, null, true, true);",
      "right" : "FunctionType ARRAY_FUNCTION_TYPE =\n      new FunctionType(this, \"Array\", null,\n          createArrowType(createParametersWithVarArgs(ALL_TYPE), null),\n          null, null, true, true);",
      "info" : "VariableDeclarationStatement[11787-11972]:VariableDeclarationStatement[11787-11972]"
    }, {
      "left" : "ARRAY_FUNCTION_TYPE.getInternalArrowType().returnType =\n        ARRAY_FUNCTION_TYPE.getInstanceType();",
      "right" : "ARRAY_FUNCTION_TYPE.getInternalArrowType().returnType =\n        ARRAY_FUNCTION_TYPE.getInstanceType();",
      "info" : "ExpressionStatement[11977-12079]:ExpressionStatement[11977-12079]"
    }, {
      "left" : "ObjectType arrayPrototype = ARRAY_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType arrayPrototype = ARRAY_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[12085-12148]:VariableDeclarationStatement[12085-12148]"
    }, {
      "left" : "registerNativeType(JSTypeNative.ARRAY_FUNCTION_TYPE, ARRAY_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.ARRAY_FUNCTION_TYPE, ARRAY_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[12153-12227]:ExpressionStatement[12153-12227]"
    }, {
      "left" : "ObjectType ARRAY_TYPE = ARRAY_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType ARRAY_TYPE = ARRAY_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[12233-12295]:VariableDeclarationStatement[12233-12295]"
    }, {
      "left" : "registerNativeType(JSTypeNative.ARRAY_TYPE, ARRAY_TYPE);",
      "right" : "registerNativeType(JSTypeNative.ARRAY_TYPE, ARRAY_TYPE);",
      "info" : "ExpressionStatement[12300-12356]:ExpressionStatement[12300-12356]"
    }, {
      "left" : "FunctionType BOOLEAN_OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"Boolean\", null,\n            createArrowType(createParameters(false, ALL_TYPE), BOOLEAN_TYPE),\n            null, null, true, true);",
      "right" : "FunctionType BOOLEAN_OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"Boolean\", null,\n            createArrowType(createParameters(false, ALL_TYPE), BOOLEAN_TYPE),\n            null, null, true, true);",
      "info" : "VariableDeclarationStatement[12377-12583]:VariableDeclarationStatement[12377-12583]"
    }, {
      "left" : "ObjectType booleanPrototype = BOOLEAN_OBJECT_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType booleanPrototype = BOOLEAN_OBJECT_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[12588-12662]:VariableDeclarationStatement[12588-12662]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE,\n        BOOLEAN_OBJECT_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE,\n        BOOLEAN_OBJECT_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[12667-12776]:ExpressionStatement[12667-12776]"
    }, {
      "left" : "ObjectType BOOLEAN_OBJECT_TYPE =\n        BOOLEAN_OBJECT_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType BOOLEAN_OBJECT_TYPE =\n        BOOLEAN_OBJECT_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[12782-12870]:VariableDeclarationStatement[12782-12870]"
    }, {
      "left" : "registerNativeType(JSTypeNative.BOOLEAN_OBJECT_TYPE, BOOLEAN_OBJECT_TYPE);",
      "right" : "registerNativeType(JSTypeNative.BOOLEAN_OBJECT_TYPE, BOOLEAN_OBJECT_TYPE);",
      "info" : "ExpressionStatement[12875-12949]:ExpressionStatement[12875-12949]"
    }, {
      "left" : "FunctionType DATE_FUNCTION_TYPE =\n      new FunctionType(this, \"Date\", null,\n          createArrowType(\n              createOptionalParameters(UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE,\n                  UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE),\n              STRING_TYPE),\n          null, null, true, true);",
      "right" : "FunctionType DATE_FUNCTION_TYPE =\n      new FunctionType(this, \"Date\", null,\n          createArrowType(\n              createOptionalParameters(UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE,\n                  UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE),\n              STRING_TYPE),\n          null, null, true, true);",
      "info" : "VariableDeclarationStatement[12967-13289]:VariableDeclarationStatement[12967-13289]"
    }, {
      "left" : "ObjectType datePrototype = DATE_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType datePrototype = DATE_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[13294-13355]:VariableDeclarationStatement[13294-13355]"
    }, {
      "left" : "registerNativeType(JSTypeNative.DATE_FUNCTION_TYPE, DATE_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.DATE_FUNCTION_TYPE, DATE_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[13360-13432]:ExpressionStatement[13360-13432]"
    }, {
      "left" : "ObjectType DATE_TYPE = DATE_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType DATE_TYPE = DATE_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[13438-13498]:VariableDeclarationStatement[13438-13498]"
    }, {
      "left" : "registerNativeType(JSTypeNative.DATE_TYPE, DATE_TYPE);",
      "right" : "registerNativeType(JSTypeNative.DATE_TYPE, DATE_TYPE);",
      "info" : "ExpressionStatement[13503-13557]:ExpressionStatement[13503-13557]"
    }, {
      "left" : "FunctionType ERROR_FUNCTION_TYPE = new ErrorFunctionType(this, \"Error\");",
      "right" : "FunctionType ERROR_FUNCTION_TYPE = new ErrorFunctionType(this, \"Error\");",
      "info" : "VariableDeclarationStatement[13576-13648]:VariableDeclarationStatement[13576-13648]"
    }, {
      "left" : "registerNativeType(JSTypeNative.ERROR_FUNCTION_TYPE, ERROR_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.ERROR_FUNCTION_TYPE, ERROR_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[13653-13727]:ExpressionStatement[13653-13727]"
    }, {
      "left" : "ObjectType ERROR_TYPE = ERROR_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType ERROR_TYPE = ERROR_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[13733-13795]:VariableDeclarationStatement[13733-13795]"
    }, {
      "left" : "registerNativeType(JSTypeNative.ERROR_TYPE, ERROR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.ERROR_TYPE, ERROR_TYPE);",
      "info" : "ExpressionStatement[13800-13856]:ExpressionStatement[13800-13856]"
    }, {
      "left" : "FunctionType EVAL_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"EvalError\");",
      "right" : "FunctionType EVAL_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"EvalError\");",
      "info" : "VariableDeclarationStatement[13879-13968]:VariableDeclarationStatement[13879-13968]"
    }, {
      "left" : "EVAL_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "right" : "EVAL_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "info" : "ExpressionStatement[13973-14030]:ExpressionStatement[13973-14030]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.EVAL_ERROR_FUNCTION_TYPE, EVAL_ERROR_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.EVAL_ERROR_FUNCTION_TYPE, EVAL_ERROR_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[14035-14128]:ExpressionStatement[14035-14128]"
    }, {
      "left" : "ObjectType EVAL_ERROR_TYPE = EVAL_ERROR_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType EVAL_ERROR_TYPE = EVAL_ERROR_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[14134-14206]:VariableDeclarationStatement[14134-14206]"
    }, {
      "left" : "registerNativeType(JSTypeNative.EVAL_ERROR_TYPE, EVAL_ERROR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.EVAL_ERROR_TYPE, EVAL_ERROR_TYPE);",
      "info" : "ExpressionStatement[14211-14277]:ExpressionStatement[14211-14277]"
    }, {
      "left" : "FunctionType RANGE_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"RangeError\");",
      "right" : "FunctionType RANGE_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"RangeError\");",
      "info" : "VariableDeclarationStatement[14301-14392]:VariableDeclarationStatement[14301-14392]"
    }, {
      "left" : "RANGE_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "right" : "RANGE_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "info" : "ExpressionStatement[14397-14455]:ExpressionStatement[14397-14455]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.RANGE_ERROR_FUNCTION_TYPE, RANGE_ERROR_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.RANGE_ERROR_FUNCTION_TYPE, RANGE_ERROR_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[14460-14555]:ExpressionStatement[14460-14555]"
    }, {
      "left" : "ObjectType RANGE_ERROR_TYPE = RANGE_ERROR_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType RANGE_ERROR_TYPE = RANGE_ERROR_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[14561-14635]:VariableDeclarationStatement[14561-14635]"
    }, {
      "left" : "registerNativeType(JSTypeNative.RANGE_ERROR_TYPE, RANGE_ERROR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.RANGE_ERROR_TYPE, RANGE_ERROR_TYPE);",
      "info" : "ExpressionStatement[14640-14708]:ExpressionStatement[14640-14708]"
    }, {
      "left" : "FunctionType REFERENCE_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"ReferenceError\");",
      "right" : "FunctionType REFERENCE_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"ReferenceError\");",
      "info" : "VariableDeclarationStatement[14736-14835]:VariableDeclarationStatement[14736-14835]"
    }, {
      "left" : "REFERENCE_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "right" : "REFERENCE_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "info" : "ExpressionStatement[14840-14902]:ExpressionStatement[14840-14902]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.REFERENCE_ERROR_FUNCTION_TYPE,\n        REFERENCE_ERROR_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.REFERENCE_ERROR_FUNCTION_TYPE,\n        REFERENCE_ERROR_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[14907-15018]:ExpressionStatement[14907-15018]"
    }, {
      "left" : "ObjectType REFERENCE_ERROR_TYPE =\n        REFERENCE_ERROR_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType REFERENCE_ERROR_TYPE =\n        REFERENCE_ERROR_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[15024-15114]:VariableDeclarationStatement[15024-15114]"
    }, {
      "left" : "registerNativeType(JSTypeNative.REFERENCE_ERROR_TYPE, REFERENCE_ERROR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.REFERENCE_ERROR_TYPE, REFERENCE_ERROR_TYPE);",
      "info" : "ExpressionStatement[15119-15195]:ExpressionStatement[15119-15195]"
    }, {
      "left" : "FunctionType SYNTAX_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"SyntaxError\");",
      "right" : "FunctionType SYNTAX_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"SyntaxError\");",
      "info" : "VariableDeclarationStatement[15220-15313]:VariableDeclarationStatement[15220-15313]"
    }, {
      "left" : "SYNTAX_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "right" : "SYNTAX_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "info" : "ExpressionStatement[15318-15377]:ExpressionStatement[15318-15377]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE, SYNTAX_ERROR_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE, SYNTAX_ERROR_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[15382-15479]:ExpressionStatement[15382-15479]"
    }, {
      "left" : "ObjectType SYNTAX_ERROR_TYPE = SYNTAX_ERROR_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType SYNTAX_ERROR_TYPE = SYNTAX_ERROR_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[15485-15561]:VariableDeclarationStatement[15485-15561]"
    }, {
      "left" : "registerNativeType(JSTypeNative.SYNTAX_ERROR_TYPE, SYNTAX_ERROR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.SYNTAX_ERROR_TYPE, SYNTAX_ERROR_TYPE);",
      "info" : "ExpressionStatement[15566-15636]:ExpressionStatement[15566-15636]"
    }, {
      "left" : "FunctionType TYPE_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"TypeError\");",
      "right" : "FunctionType TYPE_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"TypeError\");",
      "info" : "VariableDeclarationStatement[15659-15748]:VariableDeclarationStatement[15659-15748]"
    }, {
      "left" : "TYPE_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "right" : "TYPE_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "info" : "ExpressionStatement[15753-15810]:ExpressionStatement[15753-15810]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.TYPE_ERROR_FUNCTION_TYPE, TYPE_ERROR_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.TYPE_ERROR_FUNCTION_TYPE, TYPE_ERROR_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[15815-15908]:ExpressionStatement[15815-15908]"
    }, {
      "left" : "ObjectType TYPE_ERROR_TYPE = TYPE_ERROR_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType TYPE_ERROR_TYPE = TYPE_ERROR_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[15914-15986]:VariableDeclarationStatement[15914-15986]"
    }, {
      "left" : "registerNativeType(JSTypeNative.TYPE_ERROR_TYPE, TYPE_ERROR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.TYPE_ERROR_TYPE, TYPE_ERROR_TYPE);",
      "info" : "ExpressionStatement[15991-16057]:ExpressionStatement[15991-16057]"
    }, {
      "left" : "FunctionType URI_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"URIError\");",
      "right" : "FunctionType URI_ERROR_FUNCTION_TYPE =\n        new ErrorFunctionType(this, \"URIError\");",
      "info" : "VariableDeclarationStatement[16079-16166]:VariableDeclarationStatement[16079-16166]"
    }, {
      "left" : "URI_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "right" : "URI_ERROR_FUNCTION_TYPE.setPrototypeBasedOn(ERROR_TYPE);",
      "info" : "ExpressionStatement[16171-16227]:ExpressionStatement[16171-16227]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.URI_ERROR_FUNCTION_TYPE, URI_ERROR_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.URI_ERROR_FUNCTION_TYPE, URI_ERROR_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[16232-16323]:ExpressionStatement[16232-16323]"
    }, {
      "left" : "ObjectType URI_ERROR_TYPE = URI_ERROR_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType URI_ERROR_TYPE = URI_ERROR_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[16329-16399]:VariableDeclarationStatement[16329-16399]"
    }, {
      "left" : "registerNativeType(JSTypeNative.URI_ERROR_TYPE, URI_ERROR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.URI_ERROR_TYPE, URI_ERROR_TYPE);",
      "info" : "ExpressionStatement[16404-16468]:ExpressionStatement[16404-16468]"
    }, {
      "left" : "FunctionType NUMBER_OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"Number\", null,\n            createArrowType(createParameters(false, ALL_TYPE), NUMBER_TYPE),\n            null, null, true, true);",
      "right" : "FunctionType NUMBER_OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"Number\", null,\n            createArrowType(createParameters(false, ALL_TYPE), NUMBER_TYPE),\n            null, null, true, true);",
      "info" : "VariableDeclarationStatement[16488-16691]:VariableDeclarationStatement[16488-16691]"
    }, {
      "left" : "ObjectType numberPrototype = NUMBER_OBJECT_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType numberPrototype = NUMBER_OBJECT_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[16696-16768]:VariableDeclarationStatement[16696-16768]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE, NUMBER_OBJECT_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE, NUMBER_OBJECT_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[16773-16872]:ExpressionStatement[16773-16872]"
    }, {
      "left" : "ObjectType NUMBER_OBJECT_TYPE =\n        NUMBER_OBJECT_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType NUMBER_OBJECT_TYPE =\n        NUMBER_OBJECT_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[16878-16964]:VariableDeclarationStatement[16878-16964]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NUMBER_OBJECT_TYPE, NUMBER_OBJECT_TYPE);",
      "right" : "registerNativeType(JSTypeNative.NUMBER_OBJECT_TYPE, NUMBER_OBJECT_TYPE);",
      "info" : "ExpressionStatement[16969-17041]:ExpressionStatement[16969-17041]"
    }, {
      "left" : "FunctionType REGEXP_FUNCTION_TYPE =\n      new FunctionType(this, \"RegExp\", null,\n          createArrowType(createOptionalParameters(ALL_TYPE, ALL_TYPE)),\n          null, null, true, true);",
      "right" : "FunctionType REGEXP_FUNCTION_TYPE =\n      new FunctionType(this, \"RegExp\", null,\n          createArrowType(createOptionalParameters(ALL_TYPE, ALL_TYPE)),\n          null, null, true, true);",
      "info" : "VariableDeclarationStatement[17061-17249]:VariableDeclarationStatement[17061-17249]"
    }, {
      "left" : "REGEXP_FUNCTION_TYPE.getInternalArrowType().returnType =\n        REGEXP_FUNCTION_TYPE.getInstanceType();",
      "right" : "REGEXP_FUNCTION_TYPE.getInternalArrowType().returnType =\n        REGEXP_FUNCTION_TYPE.getInstanceType();",
      "info" : "ExpressionStatement[17254-17358]:ExpressionStatement[17254-17358]"
    }, {
      "left" : "ObjectType regexpPrototype = REGEXP_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType regexpPrototype = REGEXP_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[17364-17429]:VariableDeclarationStatement[17364-17429]"
    }, {
      "left" : "registerNativeType(JSTypeNative.REGEXP_FUNCTION_TYPE, REGEXP_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.REGEXP_FUNCTION_TYPE, REGEXP_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[17434-17510]:ExpressionStatement[17434-17510]"
    }, {
      "left" : "ObjectType REGEXP_TYPE = REGEXP_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType REGEXP_TYPE = REGEXP_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[17516-17580]:VariableDeclarationStatement[17516-17580]"
    }, {
      "left" : "registerNativeType(JSTypeNative.REGEXP_TYPE, REGEXP_TYPE);",
      "right" : "registerNativeType(JSTypeNative.REGEXP_TYPE, REGEXP_TYPE);",
      "info" : "ExpressionStatement[17585-17643]:ExpressionStatement[17585-17643]"
    }, {
      "left" : "FunctionType STRING_OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"String\", null,\n            createArrowType(createParameters(false, ALL_TYPE), STRING_TYPE),\n            null, null, true, true);",
      "right" : "FunctionType STRING_OBJECT_FUNCTION_TYPE =\n        new FunctionType(this, \"String\", null,\n            createArrowType(createParameters(false, ALL_TYPE), STRING_TYPE),\n            null, null, true, true);",
      "info" : "VariableDeclarationStatement[17663-17866]:VariableDeclarationStatement[17663-17866]"
    }, {
      "left" : "ObjectType stringPrototype = STRING_OBJECT_FUNCTION_TYPE.getPrototype();",
      "right" : "ObjectType stringPrototype = STRING_OBJECT_FUNCTION_TYPE.getPrototype();",
      "info" : "VariableDeclarationStatement[17871-17943]:VariableDeclarationStatement[17871-17943]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.STRING_OBJECT_FUNCTION_TYPE, STRING_OBJECT_FUNCTION_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.STRING_OBJECT_FUNCTION_TYPE, STRING_OBJECT_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[17948-18047]:ExpressionStatement[17948-18047]"
    }, {
      "left" : "ObjectType STRING_OBJECT_TYPE =\n        STRING_OBJECT_FUNCTION_TYPE.getInstanceType();",
      "right" : "ObjectType STRING_OBJECT_TYPE =\n        STRING_OBJECT_FUNCTION_TYPE.getInstanceType();",
      "info" : "VariableDeclarationStatement[18053-18139]:VariableDeclarationStatement[18053-18139]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.STRING_OBJECT_TYPE, STRING_OBJECT_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.STRING_OBJECT_TYPE, STRING_OBJECT_TYPE);",
      "info" : "ExpressionStatement[18144-18225]:ExpressionStatement[18144-18225]"
    }, {
      "left" : "JSType OBJECT_NUMBER_STRING =\n        createUnionType(OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE);",
      "right" : "JSType OBJECT_NUMBER_STRING =\n        createUnionType(OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE);",
      "info" : "VariableDeclarationStatement[18261-18354]:VariableDeclarationStatement[18261-18354]"
    }, {
      "left" : "registerNativeType(JSTypeNative.OBJECT_NUMBER_STRING, OBJECT_NUMBER_STRING);",
      "right" : "registerNativeType(JSTypeNative.OBJECT_NUMBER_STRING, OBJECT_NUMBER_STRING);",
      "info" : "ExpressionStatement[18359-18435]:ExpressionStatement[18359-18435]"
    }, {
      "left" : "JSType OBJECT_NUMBER_STRING_BOOLEAN =\n        createUnionType(OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE);",
      "right" : "JSType OBJECT_NUMBER_STRING_BOOLEAN =\n        createUnionType(OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE);",
      "info" : "VariableDeclarationStatement[18479-18594]:VariableDeclarationStatement[18479-18594]"
    }, {
      "left" : "registerNativeType(JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN,\n        OBJECT_NUMBER_STRING_BOOLEAN);",
      "right" : "registerNativeType(JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN,\n        OBJECT_NUMBER_STRING_BOOLEAN);",
      "info" : "ExpressionStatement[18599-18699]:ExpressionStatement[18599-18699]"
    }, {
      "left" : "JSType NUMBER_STRING_BOOLEAN =\n        createUnionType(NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE);",
      "right" : "JSType NUMBER_STRING_BOOLEAN =\n        createUnionType(NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE);",
      "info" : "VariableDeclarationStatement[18736-18831]:VariableDeclarationStatement[18736-18831]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NUMBER_STRING_BOOLEAN,\n        NUMBER_STRING_BOOLEAN);",
      "right" : "registerNativeType(JSTypeNative.NUMBER_STRING_BOOLEAN,\n        NUMBER_STRING_BOOLEAN);",
      "info" : "ExpressionStatement[18836-18922]:ExpressionStatement[18836-18922]"
    }, {
      "left" : "JSType NUMBER_STRING = createUnionType(NUMBER_TYPE, STRING_TYPE);",
      "right" : "JSType NUMBER_STRING = createUnionType(NUMBER_TYPE, STRING_TYPE);",
      "info" : "VariableDeclarationStatement[18951-19016]:VariableDeclarationStatement[18951-19016]"
    }, {
      "left" : "registerNativeType(JSTypeNative.NUMBER_STRING, NUMBER_STRING);",
      "right" : "registerNativeType(JSTypeNative.NUMBER_STRING, NUMBER_STRING);",
      "info" : "ExpressionStatement[19021-19083]:ExpressionStatement[19021-19083]"
    }, {
      "left" : "JSType STRING_VALUE_OR_OBJECT_TYPE =\n        createUnionType(STRING_OBJECT_TYPE, STRING_TYPE);",
      "right" : "JSType STRING_VALUE_OR_OBJECT_TYPE =\n        createUnionType(STRING_OBJECT_TYPE, STRING_TYPE);",
      "info" : "VariableDeclarationStatement[19174-19268]:VariableDeclarationStatement[19174-19268]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE, STRING_VALUE_OR_OBJECT_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE, STRING_VALUE_OR_OBJECT_TYPE);",
      "info" : "ExpressionStatement[19273-19372]:ExpressionStatement[19273-19372]"
    }, {
      "left" : "JSType NUMBER_VALUE_OR_OBJECT_TYPE =\n        createUnionType(NUMBER_OBJECT_TYPE, NUMBER_TYPE);",
      "right" : "JSType NUMBER_VALUE_OR_OBJECT_TYPE =\n        createUnionType(NUMBER_OBJECT_TYPE, NUMBER_TYPE);",
      "info" : "VariableDeclarationStatement[19402-19496]:VariableDeclarationStatement[19402-19496]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE, NUMBER_VALUE_OR_OBJECT_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE, NUMBER_VALUE_OR_OBJECT_TYPE);",
      "info" : "ExpressionStatement[19501-19600]:ExpressionStatement[19501-19600]"
    }, {
      "left" : "FunctionType U2U_FUNCTION_TYPE =\n        createFunctionType(UNKNOWN_TYPE, true, UNKNOWN_TYPE);",
      "right" : "FunctionType U2U_FUNCTION_TYPE =\n        createFunctionType(UNKNOWN_TYPE, true, UNKNOWN_TYPE);",
      "info" : "VariableDeclarationStatement[19653-19747]:VariableDeclarationStatement[19653-19747]"
    }, {
      "left" : "registerNativeType(JSTypeNative.U2U_FUNCTION_TYPE, U2U_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.U2U_FUNCTION_TYPE, U2U_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[19752-19822]:ExpressionStatement[19752-19822]"
    }, {
      "left" : "FunctionType U2U_CONSTRUCTOR_TYPE =\n        // This is equivalent to\n        // createConstructorType(UNKNOWN_TYPE, true, UNKNOWN_TYPE), but,\n        // in addition, overrides getInstanceType() to return the NoObject type\n        // instead of a new anonymous object.\n        new FunctionType(this, \"Function\", null,\n            createArrowType(\n                createParametersWithVarArgs(UNKNOWN_TYPE),\n                UNKNOWN_TYPE),\n            NO_OBJECT_TYPE, null, true, true) {\n          private static final long serialVersionUID = 1L;\n\n          @Override public FunctionType getConstructor() {\n            return registry.getNativeFunctionType(\n                JSTypeNative.FUNCTION_FUNCTION_TYPE);\n          }\n        };",
      "right" : "FunctionType U2U_CONSTRUCTOR_TYPE =\n        // This is equivalent to\n        // createConstructorType(UNKNOWN_TYPE, true, UNKNOWN_TYPE), but,\n        // in addition, overrides getInstanceType() to return the NoObject type\n        // instead of a new anonymous object.\n        new FunctionType(this, \"Function\", null,\n            createArrowType(\n                createParametersWithVarArgs(UNKNOWN_TYPE),\n                UNKNOWN_TYPE),\n            NO_OBJECT_TYPE, null, true, true) {\n          private static final long serialVersionUID = 1L;\n\n          @Override public FunctionType getConstructor() {\n            return registry.getNativeFunctionType(\n                JSTypeNative.FUNCTION_FUNCTION_TYPE);\n          }\n        };",
      "info" : "VariableDeclarationStatement[19925-20655]:VariableDeclarationStatement[19925-20655]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20479-20488]:MarkerAnnotation[20479-20488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20489-20495]:Modifier[20489-20495]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[20496-20508]:SimpleType[20496-20508]"
    }, {
      "left" : "getConstructor",
      "right" : "getConstructor",
      "info" : "SimpleName[20509-20523]:SimpleName[20509-20523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20526-20644]:Block[20526-20644]"
    }, {
      "left" : "return registry.getNativeFunctionType(\n                JSTypeNative.FUNCTION_FUNCTION_TYPE);",
      "right" : "return registry.getNativeFunctionType(\n                JSTypeNative.FUNCTION_FUNCTION_TYPE);",
      "info" : "ReturnStatement[20540-20632]:ReturnStatement[20540-20632]"
    }, {
      "left" : "registerNativeType(JSTypeNative.U2U_CONSTRUCTOR_TYPE, U2U_CONSTRUCTOR_TYPE);",
      "right" : "registerNativeType(JSTypeNative.U2U_CONSTRUCTOR_TYPE, U2U_CONSTRUCTOR_TYPE);",
      "info" : "ExpressionStatement[20756-20832]:ExpressionStatement[20756-20832]"
    }, {
      "left" : "registerNativeType(\n        JSTypeNative.FUNCTION_INSTANCE_TYPE, U2U_CONSTRUCTOR_TYPE);",
      "right" : "registerNativeType(\n        JSTypeNative.FUNCTION_INSTANCE_TYPE, U2U_CONSTRUCTOR_TYPE);",
      "info" : "ExpressionStatement[20837-20924]:ExpressionStatement[20837-20924]"
    }, {
      "left" : "FUNCTION_FUNCTION_TYPE.setInstanceType(U2U_CONSTRUCTOR_TYPE);",
      "right" : "FUNCTION_FUNCTION_TYPE.setInstanceType(U2U_CONSTRUCTOR_TYPE);",
      "info" : "ExpressionStatement[20930-20991]:ExpressionStatement[20930-20991]"
    }, {
      "left" : "U2U_CONSTRUCTOR_TYPE.setImplicitPrototype(FUNCTION_PROTOTYPE);",
      "right" : "U2U_CONSTRUCTOR_TYPE.setImplicitPrototype(FUNCTION_PROTOTYPE);",
      "info" : "ExpressionStatement[20996-21058]:ExpressionStatement[20996-21058]"
    }, {
      "left" : "FunctionType LEAST_FUNCTION_TYPE =\n        createFunctionType(NO_TYPE, true, ALL_TYPE);",
      "right" : "FunctionType LEAST_FUNCTION_TYPE =\n        createFunctionType(NO_TYPE, true, ALL_TYPE);",
      "info" : "VariableDeclarationStatement[21116-21203]:VariableDeclarationStatement[21116-21203]"
    }, {
      "left" : "registerNativeType(JSTypeNative.LEAST_FUNCTION_TYPE, LEAST_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.LEAST_FUNCTION_TYPE, LEAST_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[21208-21282]:ExpressionStatement[21208-21282]"
    }, {
      "left" : "FunctionType GLOBAL_THIS_CTOR =\n        new FunctionType(this, \"global this\", null,\n            createArrowType(createParameters(false, ALL_TYPE), NUMBER_TYPE),\n            null, null, true, true);",
      "right" : "FunctionType GLOBAL_THIS_CTOR =\n        new FunctionType(this, \"global this\", null,\n            createArrowType(createParameters(false, ALL_TYPE), NUMBER_TYPE),\n            null, null, true, true);",
      "info" : "VariableDeclarationStatement[21333-21530]:VariableDeclarationStatement[21333-21530]"
    }, {
      "left" : "ObjectType GLOBAL_THIS = GLOBAL_THIS_CTOR.getInstanceType();",
      "right" : "ObjectType GLOBAL_THIS = GLOBAL_THIS_CTOR.getInstanceType();",
      "info" : "VariableDeclarationStatement[21535-21595]:VariableDeclarationStatement[21535-21595]"
    }, {
      "left" : "registerNativeType(JSTypeNative.GLOBAL_THIS, GLOBAL_THIS);",
      "right" : "registerNativeType(JSTypeNative.GLOBAL_THIS, GLOBAL_THIS);",
      "info" : "ExpressionStatement[21600-21658]:ExpressionStatement[21600-21658]"
    }, {
      "left" : "FunctionType GREATEST_FUNCTION_TYPE =\n      createFunctionType(ALL_TYPE, true, NO_TYPE);",
      "right" : "FunctionType GREATEST_FUNCTION_TYPE =\n      createFunctionType(ALL_TYPE, true, NO_TYPE);",
      "info" : "VariableDeclarationStatement[21719-21807]:VariableDeclarationStatement[21719-21807]"
    }, {
      "left" : "registerNativeType(JSTypeNative.GREATEST_FUNCTION_TYPE,\n        GREATEST_FUNCTION_TYPE);",
      "right" : "registerNativeType(JSTypeNative.GREATEST_FUNCTION_TYPE,\n        GREATEST_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[21812-21900]:ExpressionStatement[21812-21900]"
    }, {
      "left" : "registerPropertyOnType(\"prototype\", OBJECT_FUNCTION_TYPE);",
      "right" : "registerPropertyOnType(\"prototype\", OBJECT_FUNCTION_TYPE);",
      "info" : "ExpressionStatement[22035-22093]:ExpressionStatement[22035-22093]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[22101-22108]:Modifier[22101-22108]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22109-22113]:PrimitiveType[22109-22113]"
    }, {
      "left" : "initializeRegistry",
      "right" : "initializeRegistry",
      "info" : "SimpleName[22114-22132]:SimpleName[22114-22132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22135-23497]:Block[22135-23497]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.ARRAY_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.ARRAY_TYPE));",
      "info" : "ExpressionStatement[22141-22190]:ExpressionStatement[22141-22190]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.BOOLEAN_OBJECT_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.BOOLEAN_OBJECT_TYPE));",
      "info" : "ExpressionStatement[22195-22253]:ExpressionStatement[22195-22253]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.BOOLEAN_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.BOOLEAN_TYPE));",
      "info" : "ExpressionStatement[22258-22309]:ExpressionStatement[22258-22309]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.DATE_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.DATE_TYPE));",
      "info" : "ExpressionStatement[22314-22362]:ExpressionStatement[22314-22362]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.NULL_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.NULL_TYPE));",
      "info" : "ExpressionStatement[22367-22415]:ExpressionStatement[22367-22415]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.NULL_TYPE), \"Null\");",
      "right" : "register(getNativeType(JSTypeNative.NULL_TYPE), \"Null\");",
      "info" : "ExpressionStatement[22420-22476]:ExpressionStatement[22420-22476]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.NUMBER_OBJECT_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.NUMBER_OBJECT_TYPE));",
      "info" : "ExpressionStatement[22481-22538]:ExpressionStatement[22481-22538]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.NUMBER_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.NUMBER_TYPE));",
      "info" : "ExpressionStatement[22543-22593]:ExpressionStatement[22543-22593]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.OBJECT_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.OBJECT_TYPE));",
      "info" : "ExpressionStatement[22598-22648]:ExpressionStatement[22598-22648]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.ERROR_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.ERROR_TYPE));",
      "info" : "ExpressionStatement[22653-22702]:ExpressionStatement[22653-22702]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.URI_ERROR_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.URI_ERROR_TYPE));",
      "info" : "ExpressionStatement[22707-22760]:ExpressionStatement[22707-22760]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.EVAL_ERROR_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.EVAL_ERROR_TYPE));",
      "info" : "ExpressionStatement[22765-22819]:ExpressionStatement[22765-22819]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.TYPE_ERROR_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.TYPE_ERROR_TYPE));",
      "info" : "ExpressionStatement[22824-22878]:ExpressionStatement[22824-22878]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.RANGE_ERROR_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.RANGE_ERROR_TYPE));",
      "info" : "ExpressionStatement[22883-22938]:ExpressionStatement[22883-22938]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.REFERENCE_ERROR_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.REFERENCE_ERROR_TYPE));",
      "info" : "ExpressionStatement[22943-23002]:ExpressionStatement[22943-23002]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.SYNTAX_ERROR_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.SYNTAX_ERROR_TYPE));",
      "info" : "ExpressionStatement[23007-23063]:ExpressionStatement[23007-23063]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.REGEXP_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.REGEXP_TYPE));",
      "info" : "ExpressionStatement[23068-23118]:ExpressionStatement[23068-23118]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.STRING_OBJECT_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.STRING_OBJECT_TYPE));",
      "info" : "ExpressionStatement[23123-23180]:ExpressionStatement[23123-23180]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.STRING_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.STRING_TYPE));",
      "info" : "ExpressionStatement[23185-23235]:ExpressionStatement[23185-23235]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.VOID_TYPE));",
      "right" : "register(getNativeType(JSTypeNative.VOID_TYPE));",
      "info" : "ExpressionStatement[23240-23288]:ExpressionStatement[23240-23288]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.VOID_TYPE), \"Undefined\");",
      "right" : "register(getNativeType(JSTypeNative.VOID_TYPE), \"Undefined\");",
      "info" : "ExpressionStatement[23293-23354]:ExpressionStatement[23293-23354]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.VOID_TYPE), \"void\");",
      "right" : "register(getNativeType(JSTypeNative.VOID_TYPE), \"void\");",
      "info" : "ExpressionStatement[23359-23415]:ExpressionStatement[23359-23415]"
    }, {
      "left" : "register(getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE), \"Function\");",
      "right" : "register(getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE), \"Function\");",
      "info" : "ExpressionStatement[23420-23493]:ExpressionStatement[23420-23493]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23501-23508]:Modifier[23501-23508]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23509-23513]:PrimitiveType[23509-23513]"
    }, {
      "left" : "register",
      "right" : "register",
      "info" : "SimpleName[23514-23522]:SimpleName[23514-23522]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[23523-23534]:SingleVariableDeclaration[23523-23534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23536-23578]:Block[23536-23578]"
    }, {
      "left" : "register(type, type.toString());",
      "right" : "register(type, type.toString());",
      "info" : "ExpressionStatement[23542-23574]:ExpressionStatement[23542-23574]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23582-23589]:Modifier[23582-23589]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23590-23594]:PrimitiveType[23590-23594]"
    }, {
      "left" : "register",
      "right" : "register",
      "info" : "SimpleName[23595-23603]:SimpleName[23595-23603]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[23604-23615]:SingleVariableDeclaration[23604-23615]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[23617-23628]:SingleVariableDeclaration[23617-23628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23630-23851]:Block[23630-23851]"
    }, {
      "left" : "namesToTypes.put(name, type);",
      "right" : "namesToTypes.put(name, type);",
      "info" : "ExpressionStatement[23636-23665]:ExpressionStatement[23636-23665]"
    }, {
      "left" : "while (name.indexOf('.') > 0)",
      "right" : "while (name.indexOf('.') > 0)",
      "info" : "WhileStatement[23727-23847]:WhileStatement[23727-23847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23757-23847]:Block[23757-23847]"
    }, {
      "left" : "name = name.substring(0, name.lastIndexOf('.'));",
      "right" : "name = name.substring(0, name.lastIndexOf('.'));",
      "info" : "ExpressionStatement[23765-23813]:ExpressionStatement[23765-23813]"
    }, {
      "left" : "namespaces.add(name);",
      "right" : "namespaces.add(name);",
      "info" : "ExpressionStatement[23820-23841]:ExpressionStatement[23820-23841]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23855-23862]:Modifier[23855-23862]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23863-23867]:PrimitiveType[23863-23867]"
    }, {
      "left" : "registerNativeType",
      "right" : "registerNativeType",
      "info" : "SimpleName[23868-23886]:SimpleName[23868-23886]"
    }, {
      "left" : "JSTypeNative typeId",
      "right" : "JSTypeNative typeId",
      "info" : "SingleVariableDeclaration[23887-23906]:SingleVariableDeclaration[23887-23906]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[23908-23919]:SingleVariableDeclaration[23908-23919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23921-23968]:Block[23921-23968]"
    }, {
      "left" : "nativeTypes[typeId.ordinal()] = type;",
      "right" : "nativeTypes[typeId.ordinal()] = type;",
      "info" : "ExpressionStatement[23927-23964]:ExpressionStatement[23927-23964]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24584-24590]:Modifier[24584-24590]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24591-24595]:PrimitiveType[24591-24595]"
    }, {
      "left" : "registerPropertyOnType",
      "right" : "registerPropertyOnType",
      "info" : "SimpleName[24596-24618]:SimpleName[24596-24618]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[24619-24638]:SingleVariableDeclaration[24619-24638]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[24640-24651]:SingleVariableDeclaration[24640-24651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24653-25106]:Block[24653-25106]"
    }, {
      "left" : "UnionTypeBuilder typeSet = typesIndexedByProperty.get(propertyName);",
      "right" : "UnionTypeBuilder typeSet = typesIndexedByProperty.get(propertyName);",
      "info" : "VariableDeclarationStatement[24659-24727]:VariableDeclarationStatement[24659-24727]"
    }, {
      "left" : "if (typeSet == null)",
      "right" : "if (typeSet == null)",
      "info" : "IfStatement[24732-24891]:IfStatement[24732-24891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24753-24891]:Block[24753-24891]"
    }, {
      "left" : "typeSet = new UnionTypeBuilder(this, PROPERTY_CHECKING_UNION_SIZE);",
      "right" : "typeSet = new UnionTypeBuilder(this, PROPERTY_CHECKING_UNION_SIZE);",
      "info" : "ExpressionStatement[24761-24828]:ExpressionStatement[24761-24828]"
    }, {
      "left" : "typesIndexedByProperty.put(propertyName, typeSet);",
      "right" : "typesIndexedByProperty.put(propertyName, typeSet);",
      "info" : "ExpressionStatement[24835-24885]:ExpressionStatement[24835-24885]"
    }, {
      "left" : "typeSet.addAlternate(type);",
      "right" : "typeSet.addAlternate(type);",
      "info" : "ExpressionStatement[24897-24924]:ExpressionStatement[24897-24924]"
    }, {
      "left" : "addReferenceTypeIndexedByProperty(propertyName, type);",
      "right" : "addReferenceTypeIndexedByProperty(propertyName, type);",
      "info" : "ExpressionStatement[24929-24983]:ExpressionStatement[24929-24983]"
    }, {
      "left" : "greatestSubtypeByProperty.remove(propertyName);",
      "right" : "greatestSubtypeByProperty.remove(propertyName);",
      "info" : "ExpressionStatement[25055-25102]:ExpressionStatement[25055-25102]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25110-25117]:Modifier[25110-25117]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25118-25122]:PrimitiveType[25118-25122]"
    }, {
      "left" : "addReferenceTypeIndexedByProperty",
      "right" : "addReferenceTypeIndexedByProperty",
      "info" : "SimpleName[25123-25156]:SimpleName[25123-25156]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[25164-25183]:SingleVariableDeclaration[25164-25183]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[25185-25196]:SingleVariableDeclaration[25185-25196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25198-25964]:Block[25198-25964]"
    }, {
      "left" : "if (type instanceof ObjectType && ((ObjectType) type).hasReferenceName())",
      "right" : "if (type instanceof ObjectType && ((ObjectType) type).hasReferenceName())",
      "info" : "IfStatement[25204-25960]:IfStatement[25204-25960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25278-25624]:Block[25278-25624]"
    }, {
      "left" : "Map<String, ObjectType> typeSet =\n          eachRefTypeIndexedByProperty.get(propertyName);",
      "right" : "Map<String, ObjectType> typeSet =\n          eachRefTypeIndexedByProperty.get(propertyName);",
      "info" : "VariableDeclarationStatement[25286-25377]:VariableDeclarationStatement[25286-25377]"
    }, {
      "left" : "if (typeSet == null)",
      "right" : "if (typeSet == null)",
      "info" : "IfStatement[25384-25516]:IfStatement[25384-25516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25405-25516]:Block[25405-25516]"
    }, {
      "left" : "typeSet = Maps.newHashMap();",
      "right" : "typeSet = Maps.newHashMap();",
      "info" : "ExpressionStatement[25415-25443]:ExpressionStatement[25415-25443]"
    }, {
      "left" : "eachRefTypeIndexedByProperty.put(propertyName, typeSet);",
      "right" : "eachRefTypeIndexedByProperty.put(propertyName, typeSet);",
      "info" : "ExpressionStatement[25452-25508]:ExpressionStatement[25452-25508]"
    }, {
      "left" : "ObjectType objType = (ObjectType) type;",
      "right" : "ObjectType objType = (ObjectType) type;",
      "info" : "VariableDeclarationStatement[25523-25562]:VariableDeclarationStatement[25523-25562]"
    }, {
      "left" : "typeSet.put(objType.getReferenceName(), objType);",
      "right" : "typeSet.put(objType.getReferenceName(), objType);",
      "info" : "ExpressionStatement[25569-25618]:ExpressionStatement[25569-25618]"
    }, {
      "left" : "if (type instanceof NamedType)",
      "right" : "if (type instanceof NamedType)",
      "info" : "IfStatement[25630-25960]:IfStatement[25630-25960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25661-25774]:Block[25661-25774]"
    }, {
      "left" : "addReferenceTypeIndexedByProperty(\n          propertyName, ((NamedType) type).getReferencedType());",
      "right" : "addReferenceTypeIndexedByProperty(\n          propertyName, ((NamedType) type).getReferencedType());",
      "info" : "ExpressionStatement[25669-25768]:ExpressionStatement[25669-25768]"
    }, {
      "left" : "if (type.isUnionType())",
      "right" : "if (type.isUnionType())",
      "info" : "IfStatement[25780-25960]:IfStatement[25780-25960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25804-25960]:Block[25804-25960]"
    }, {
      "left" : "for (JSType alternate : type.toMaybeUnionType().getAlternates())",
      "right" : "for (JSType alternate : type.toMaybeUnionType().getAlternates())",
      "info" : "EnhancedForStatement[25812-25954]:EnhancedForStatement[25812-25954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25877-25954]:Block[25877-25954]"
    }, {
      "left" : "addReferenceTypeIndexedByProperty(propertyName, alternate);",
      "right" : "addReferenceTypeIndexedByProperty(propertyName, alternate);",
      "info" : "ExpressionStatement[25887-25946]:ExpressionStatement[25887-25946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26311-26317]:Modifier[26311-26317]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26318-26322]:PrimitiveType[26318-26322]"
    }, {
      "left" : "unregisterPropertyOnType",
      "right" : "unregisterPropertyOnType",
      "info" : "SimpleName[26323-26347]:SimpleName[26323-26347]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[26348-26367]:SingleVariableDeclaration[26348-26367]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[26369-26380]:SingleVariableDeclaration[26369-26380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26382-26644]:Block[26382-26644]"
    }, {
      "left" : "Map<String, ObjectType> typeSet =\n        eachRefTypeIndexedByProperty.get(propertyName);",
      "right" : "Map<String, ObjectType> typeSet =\n        eachRefTypeIndexedByProperty.get(propertyName);",
      "info" : "VariableDeclarationStatement[26456-26545]:VariableDeclarationStatement[26456-26545]"
    }, {
      "left" : "if (typeSet != null)",
      "right" : "if (typeSet != null)",
      "info" : "IfStatement[26550-26640]:IfStatement[26550-26640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26571-26640]:Block[26571-26640]"
    }, {
      "left" : "typeSet.remove(type.toObjectType().getReferenceName());",
      "right" : "typeSet.remove(type.toObjectType().getReferenceName());",
      "info" : "ExpressionStatement[26579-26634]:ExpressionStatement[26579-26634]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26772-26778]:Modifier[26772-26778]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[26779-26785]:SimpleType[26779-26785]"
    }, {
      "left" : "getGreatestSubtypeWithProperty",
      "right" : "getGreatestSubtypeWithProperty",
      "info" : "SimpleName[26786-26816]:SimpleName[26786-26816]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[26824-26835]:SingleVariableDeclaration[26824-26835]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[26837-26856]:SingleVariableDeclaration[26837-26856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26858-27301]:Block[26858-27301]"
    }, {
      "left" : "if (greatestSubtypeByProperty.containsKey(propertyName))",
      "right" : "if (greatestSubtypeByProperty.containsKey(propertyName))",
      "info" : "IfStatement[26864-27022]:IfStatement[26864-27022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26921-27022]:Block[26921-27022]"
    }, {
      "left" : "return greatestSubtypeByProperty.get(propertyName)\n          .getGreatestSubtype(type);",
      "right" : "return greatestSubtypeByProperty.get(propertyName)\n          .getGreatestSubtype(type);",
      "info" : "ReturnStatement[26929-27016]:ReturnStatement[26929-27016]"
    }, {
      "left" : "if (typesIndexedByProperty.containsKey(propertyName))",
      "right" : "if (typesIndexedByProperty.containsKey(propertyName))",
      "info" : "IfStatement[27027-27262]:IfStatement[27027-27262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27081-27262]:Block[27081-27262]"
    }, {
      "left" : "JSType built = typesIndexedByProperty.get(propertyName).build();",
      "right" : "JSType built = typesIndexedByProperty.get(propertyName).build();",
      "info" : "VariableDeclarationStatement[27089-27153]:VariableDeclarationStatement[27089-27153]"
    }, {
      "left" : "greatestSubtypeByProperty.put(propertyName, built);",
      "right" : "greatestSubtypeByProperty.put(propertyName, built);",
      "info" : "ExpressionStatement[27160-27211]:ExpressionStatement[27160-27211]"
    }, {
      "left" : "return built.getGreatestSubtype(type);",
      "right" : "return built.getGreatestSubtype(type);",
      "info" : "ReturnStatement[27218-27256]:ReturnStatement[27218-27256]"
    }, {
      "left" : "return getNativeType(NO_TYPE);",
      "right" : "return getNativeType(NO_TYPE);",
      "info" : "ReturnStatement[27267-27297]:ReturnStatement[27267-27297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27396-27402]:Modifier[27396-27402]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27403-27410]:PrimitiveType[27403-27410]"
    }, {
      "left" : "canPropertyBeDefined",
      "right" : "canPropertyBeDefined",
      "info" : "SimpleName[27411-27431]:SimpleName[27411-27431]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[27432-27443]:SingleVariableDeclaration[27432-27443]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[27445-27464]:SingleVariableDeclaration[27445-27464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27466-27947]:Block[27466-28131]"
    }, {
      "left" : "if (typesIndexedByProperty.containsKey(propertyName))",
      "right" : "if (typesIndexedByProperty.containsKey(propertyName))",
      "info" : "IfStatement[27472-27925]:IfStatement[27472-28109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27526-27925]:Block[27526-28109]"
    }, {
      "left" : "for (JSType alt :\n               typesIndexedByProperty.get(propertyName).getAlternates())",
      "right" : "for (JSType alt :\n               typesIndexedByProperty.get(propertyName).getAlternates())",
      "info" : "EnhancedForStatement[27534-27919]:EnhancedForStatement[27534-28103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27625-27919]:Block[27625-28103]"
    }, {
      "left" : "JSType greatestSubtype = alt.getGreatestSubtype(type);",
      "right" : "JSType greatestSubtype = alt.getGreatestSubtype(type);",
      "info" : "VariableDeclarationStatement[27635-27689]:VariableDeclarationStatement[27635-27689]"
    }, {
      "left" : "if (!greatestSubtype.isEmptyType())",
      "right" : "if (!greatestSubtype.isEmptyType())",
      "info" : "IfStatement[27698-27911]:IfStatement[27698-28095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27734-27911]:Block[27734-28095]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[27889-27901]:ReturnStatement[28073-28085]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[27930-27943]:ReturnStatement[28114-28127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28338-28344]:Modifier[28522-28528]"
    }, {
      "left" : "Iterable<JSType>",
      "right" : "Iterable<JSType>",
      "info" : "ParameterizedType[28345-28361]:ParameterizedType[28529-28545]"
    }, {
      "left" : "getTypesWithProperty",
      "right" : "getTypesWithProperty",
      "info" : "SimpleName[28362-28382]:SimpleName[28546-28566]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[28383-28402]:SingleVariableDeclaration[28567-28586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28404-28592]:Block[28588-28776]"
    }, {
      "left" : "if (typesIndexedByProperty.containsKey(propertyName))",
      "right" : "if (typesIndexedByProperty.containsKey(propertyName))",
      "info" : "IfStatement[28410-28588]:IfStatement[28594-28772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28464-28542]:Block[28648-28726]"
    }, {
      "left" : "return typesIndexedByProperty.get(propertyName).getAlternates();",
      "right" : "return typesIndexedByProperty.get(propertyName).getAlternates();",
      "info" : "ReturnStatement[28472-28536]:ReturnStatement[28656-28720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28548-28588]:Block[28732-28772]"
    }, {
      "left" : "return ImmutableList.of();",
      "right" : "return ImmutableList.of();",
      "info" : "ReturnStatement[28556-28582]:ReturnStatement[28740-28766]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29014-29020]:Modifier[29198-29204]"
    }, {
      "left" : "Iterable<ObjectType>",
      "right" : "Iterable<ObjectType>",
      "info" : "ParameterizedType[29021-29041]:ParameterizedType[29205-29225]"
    }, {
      "left" : "getEachReferenceTypeWithProperty",
      "right" : "getEachReferenceTypeWithProperty",
      "info" : "SimpleName[29042-29074]:SimpleName[29226-29258]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[29082-29101]:SingleVariableDeclaration[29266-29285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29103-29296]:Block[29287-29480]"
    }, {
      "left" : "if (eachRefTypeIndexedByProperty.containsKey(propertyName))",
      "right" : "if (eachRefTypeIndexedByProperty.containsKey(propertyName))",
      "info" : "IfStatement[29109-29292]:IfStatement[29293-29476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29169-29246]:Block[29353-29430]"
    }, {
      "left" : "return eachRefTypeIndexedByProperty.get(propertyName).values();",
      "right" : "return eachRefTypeIndexedByProperty.get(propertyName).values();",
      "info" : "ReturnStatement[29177-29240]:ReturnStatement[29361-29424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29252-29292]:Block[29436-29476]"
    }, {
      "left" : "return ImmutableList.of();",
      "right" : "return ImmutableList.of();",
      "info" : "ReturnStatement[29260-29286]:ReturnStatement[29444-29470]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[29375-29385]:SimpleType[29559-29569]"
    }, {
      "left" : "findCommonSuperObject",
      "right" : "findCommonSuperObject",
      "info" : "SimpleName[29386-29407]:SimpleName[29570-29591]"
    }, {
      "left" : "ObjectType a",
      "right" : "ObjectType a",
      "info" : "SingleVariableDeclaration[29408-29420]:SingleVariableDeclaration[29592-29604]"
    }, {
      "left" : "ObjectType b",
      "right" : "ObjectType b",
      "info" : "SingleVariableDeclaration[29422-29434]:SingleVariableDeclaration[29606-29618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29436-29931]:Block[29620-30115]"
    }, {
      "left" : "List<ObjectType> stackA = getSuperStack(a);",
      "right" : "List<ObjectType> stackA = getSuperStack(a);",
      "info" : "VariableDeclarationStatement[29442-29485]:VariableDeclarationStatement[29626-29669]"
    }, {
      "left" : "List<ObjectType> stackB = getSuperStack(b);",
      "right" : "List<ObjectType> stackB = getSuperStack(b);",
      "info" : "VariableDeclarationStatement[29490-29533]:VariableDeclarationStatement[29674-29717]"
    }, {
      "left" : "ObjectType result = getNativeObjectType(JSTypeNative.OBJECT_TYPE);",
      "right" : "ObjectType result = getNativeObjectType(JSTypeNative.OBJECT_TYPE);",
      "info" : "VariableDeclarationStatement[29539-29605]:VariableDeclarationStatement[29723-29789]"
    }, {
      "left" : "while (!stackA.isEmpty() && !stackB.isEmpty())",
      "right" : "while (!stackA.isEmpty() && !stackB.isEmpty())",
      "info" : "WhileStatement[29610-29908]:WhileStatement[29794-30092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29657-29908]:Block[29841-30092]"
    }, {
      "left" : "ObjectType currentA = stackA.remove(stackA.size() - 1);",
      "right" : "ObjectType currentA = stackA.remove(stackA.size() - 1);",
      "info" : "VariableDeclarationStatement[29665-29720]:VariableDeclarationStatement[29849-29904]"
    }, {
      "left" : "ObjectType currentB = stackB.remove(stackB.size() - 1);",
      "right" : "ObjectType currentB = stackB.remove(stackB.size() - 1);",
      "info" : "VariableDeclarationStatement[29727-29782]:VariableDeclarationStatement[29911-29966]"
    }, {
      "left" : "if (currentA.isEquivalentTo(currentB))",
      "right" : "if (currentA.isEquivalentTo(currentB))",
      "info" : "IfStatement[29789-29902]:IfStatement[29973-30086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29828-29864]:Block[30012-30048]"
    }, {
      "left" : "result = currentA;",
      "right" : "result = currentA;",
      "info" : "ExpressionStatement[29838-29856]:ExpressionStatement[30022-30040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29870-29902]:Block[30054-30086]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[29880-29894]:ReturnStatement[30064-30078]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[29913-29927]:ReturnStatement[30097-30111]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[29935-29942]:Modifier[30119-30126]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[29943-29949]:Modifier[30127-30133]"
    }, {
      "left" : "List<ObjectType>",
      "right" : "List<ObjectType>",
      "info" : "ParameterizedType[29950-29966]:ParameterizedType[30134-30150]"
    }, {
      "left" : "getSuperStack",
      "right" : "getSuperStack",
      "info" : "SimpleName[29967-29980]:SimpleName[30151-30164]"
    }, {
      "left" : "ObjectType a",
      "right" : "ObjectType a",
      "info" : "SingleVariableDeclaration[29981-29993]:SingleVariableDeclaration[30165-30177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29995-30230]:Block[30179-30414]"
    }, {
      "left" : "List<ObjectType> stack = Lists.newArrayListWithExpectedSize(5);",
      "right" : "List<ObjectType> stack = Lists.newArrayListWithExpectedSize(5);",
      "info" : "VariableDeclarationStatement[30001-30064]:VariableDeclarationStatement[30185-30248]"
    }, {
      "left" : "for (ObjectType current = a;\n         current != null;\n         current = current.getImplicitPrototype())",
      "right" : "for (ObjectType current = a;\n         current != null;\n         current = current.getImplicitPrototype())",
      "info" : "ForStatement[30069-30208]:ForStatement[30253-30392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30175-30208]:Block[30359-30392]"
    }, {
      "left" : "stack.add(current);",
      "right" : "stack.add(current);",
      "info" : "ExpressionStatement[30183-30202]:ExpressionStatement[30367-30386]"
    }, {
      "left" : "return stack;",
      "right" : "return stack;",
      "info" : "ReturnStatement[30213-30226]:ReturnStatement[30397-30410]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30423-30429]:Modifier[30607-30613]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30430-30434]:PrimitiveType[30614-30618]"
    }, {
      "left" : "incrementGeneration",
      "right" : "incrementGeneration",
      "info" : "SimpleName[30435-30454]:SimpleName[30619-30638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30457-30638]:Block[30641-30822]"
    }, {
      "left" : "for (NamedType type : resolvedNamedTypes.values())",
      "right" : "for (NamedType type : resolvedNamedTypes.values())",
      "info" : "EnhancedForStatement[30463-30549]:EnhancedForStatement[30647-30733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30514-30549]:Block[30698-30733]"
    }, {
      "left" : "type.clearResolved();",
      "right" : "type.clearResolved();",
      "info" : "ExpressionStatement[30522-30543]:ExpressionStatement[30706-30727]"
    }, {
      "left" : "unresolvedNamedTypes.putAll(resolvedNamedTypes);",
      "right" : "unresolvedNamedTypes.putAll(resolvedNamedTypes);",
      "info" : "ExpressionStatement[30554-30602]:ExpressionStatement[30738-30786]"
    }, {
      "left" : "resolvedNamedTypes.clear();",
      "right" : "resolvedNamedTypes.clear();",
      "info" : "ExpressionStatement[30607-30634]:ExpressionStatement[30791-30818]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[30642-30649]:PrimitiveType[30826-30833]"
    }, {
      "left" : "isLastGeneration",
      "right" : "isLastGeneration",
      "info" : "SimpleName[30650-30666]:SimpleName[30834-30850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30669-30701]:Block[30853-30885]"
    }, {
      "left" : "return lastGeneration;",
      "right" : "return lastGeneration;",
      "info" : "ReturnStatement[30675-30697]:ReturnStatement[30859-30881]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30841-30847]:Modifier[31025-31031]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30848-30852]:PrimitiveType[31032-31036]"
    }, {
      "left" : "setLastGeneration",
      "right" : "setLastGeneration",
      "info" : "SimpleName[30853-30870]:SimpleName[31037-31054]"
    }, {
      "left" : "boolean lastGeneration",
      "right" : "boolean lastGeneration",
      "info" : "SingleVariableDeclaration[30871-30893]:SingleVariableDeclaration[31055-31077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30895-30942]:Block[31079-31126]"
    }, {
      "left" : "this.lastGeneration = lastGeneration;",
      "right" : "this.lastGeneration = lastGeneration;",
      "info" : "ExpressionStatement[30901-30938]:ExpressionStatement[31085-31122]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31198-31202]:PrimitiveType[31382-31386]"
    }, {
      "left" : "registerTypeImplementingInterface",
      "right" : "registerTypeImplementingInterface",
      "info" : "SimpleName[31203-31236]:SimpleName[31387-31420]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[31244-31261]:SingleVariableDeclaration[31428-31445]"
    }, {
      "left" : "ObjectType interfaceInstance",
      "right" : "ObjectType interfaceInstance",
      "info" : "SingleVariableDeclaration[31263-31291]:SingleVariableDeclaration[31447-31475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31293-31375]:Block[31477-31559]"
    }, {
      "left" : "interfaceToImplementors.put(interfaceInstance.getReferenceName(), type);",
      "right" : "interfaceToImplementors.put(interfaceInstance.getReferenceName(), type);",
      "info" : "ExpressionStatement[31299-31371]:ExpressionStatement[31483-31555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31643-31649]:Modifier[31827-31833]"
    }, {
      "left" : "Collection<FunctionType>",
      "right" : "Collection<FunctionType>",
      "info" : "ParameterizedType[31650-31674]:ParameterizedType[31834-31858]"
    }, {
      "left" : "getDirectImplementors",
      "right" : "getDirectImplementors",
      "info" : "SimpleName[31675-31696]:SimpleName[31859-31880]"
    }, {
      "left" : "ObjectType interfaceInstance",
      "right" : "ObjectType interfaceInstance",
      "info" : "SingleVariableDeclaration[31704-31732]:SingleVariableDeclaration[31888-31916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31734-31817]:Block[31918-32001]"
    }, {
      "left" : "return interfaceToImplementors.get(interfaceInstance.getReferenceName());",
      "right" : "return interfaceToImplementors.get(interfaceInstance.getReferenceName());",
      "info" : "ReturnStatement[31740-31813]:ReturnStatement[31924-31997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32137-32143]:Modifier[32321-32327]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32144-32151]:PrimitiveType[32328-32335]"
    }, {
      "left" : "declareType",
      "right" : "declareType",
      "info" : "SimpleName[32152-32163]:SimpleName[32336-32347]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[32164-32175]:SingleVariableDeclaration[32348-32359]"
    }, {
      "left" : "JSType t",
      "right" : "JSType t",
      "info" : "SingleVariableDeclaration[32177-32185]:SingleVariableDeclaration[32361-32369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32187-32300]:Block[32371-32484]"
    }, {
      "left" : "if (namesToTypes.containsKey(name))",
      "right" : "if (namesToTypes.containsKey(name))",
      "info" : "IfStatement[32193-32256]:IfStatement[32377-32440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32229-32256]:Block[32413-32440]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[32237-32250]:ReturnStatement[32421-32434]"
    }, {
      "left" : "register(t, name);",
      "right" : "register(t, name);",
      "info" : "ExpressionStatement[32261-32279]:ExpressionStatement[32445-32463]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[32284-32296]:ReturnStatement[32468-32480]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32429-32435]:Modifier[32613-32619]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32436-32440]:PrimitiveType[32620-32624]"
    }, {
      "left" : "overwriteDeclaredType",
      "right" : "overwriteDeclaredType",
      "info" : "SimpleName[32441-32462]:SimpleName[32625-32646]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[32463-32474]:SingleVariableDeclaration[32647-32658]"
    }, {
      "left" : "JSType t",
      "right" : "JSType t",
      "info" : "SingleVariableDeclaration[32476-32484]:SingleVariableDeclaration[32660-32668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32486-32576]:Block[32670-32760]"
    }, {
      "left" : "Preconditions.checkState(namesToTypes.containsKey(name));",
      "right" : "Preconditions.checkState(namesToTypes.containsKey(name));",
      "info" : "ExpressionStatement[32492-32549]:ExpressionStatement[32676-32733]"
    }, {
      "left" : "register(t, name);",
      "right" : "register(t, name);",
      "info" : "ExpressionStatement[32554-32572]:ExpressionStatement[32738-32756]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32710-32716]:Modifier[32894-32900]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32717-32721]:PrimitiveType[32901-32905]"
    }, {
      "left" : "forwardDeclareType",
      "right" : "forwardDeclareType",
      "info" : "SimpleName[32722-32740]:SimpleName[32906-32924]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[32741-32752]:SingleVariableDeclaration[32925-32936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32754-32795]:Block[32938-32979]"
    }, {
      "left" : "forwardDeclaredTypes.add(name);",
      "right" : "forwardDeclaredTypes.add(name);",
      "info" : "ExpressionStatement[32760-32791]:ExpressionStatement[32944-32975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32862-32868]:Modifier[33046-33052]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32869-32876]:PrimitiveType[33053-33060]"
    }, {
      "left" : "isForwardDeclaredType",
      "right" : "isForwardDeclaredType",
      "info" : "SimpleName[32877-32898]:SimpleName[33061-33082]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[32899-32910]:SingleVariableDeclaration[33083-33094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32912-32965]:Block[33096-33149]"
    }, {
      "left" : "return forwardDeclaredTypes.contains(name);",
      "right" : "return forwardDeclaredTypes.contains(name);",
      "info" : "ReturnStatement[32918-32961]:ReturnStatement[33102-33145]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33026-33032]:Modifier[33210-33216]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33033-33040]:PrimitiveType[33217-33224]"
    }, {
      "left" : "hasNamespace",
      "right" : "hasNamespace",
      "info" : "SimpleName[33041-33053]:SimpleName[33225-33237]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[33054-33065]:SingleVariableDeclaration[33238-33249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33067-33110]:Block[33251-33294]"
    }, {
      "left" : "return namespaces.contains(name);",
      "right" : "return namespaces.contains(name);",
      "info" : "ReturnStatement[33073-33106]:ReturnStatement[33257-33290]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33281-33287]:Modifier[33465-33471]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[33288-33294]:SimpleType[33472-33478]"
    }, {
      "left" : "getType",
      "right" : "getType",
      "info" : "SimpleName[33295-33302]:SimpleName[33479-33486]"
    }, {
      "left" : "String jsTypeName",
      "right" : "String jsTypeName",
      "info" : "SingleVariableDeclaration[33303-33320]:SingleVariableDeclaration[33487-33504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33322-33559]:Block[33506-33743]"
    }, {
      "left" : "if (jsTypeName.equals(templateTypeName))",
      "right" : "if (jsTypeName.equals(templateTypeName))",
      "info" : "IfStatement[33439-33514]:IfStatement[33623-33698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33480-33514]:Block[33664-33698]"
    }, {
      "left" : "return templateType;",
      "right" : "return templateType;",
      "info" : "ReturnStatement[33488-33508]:ReturnStatement[33672-33692]"
    }, {
      "left" : "return namesToTypes.get(jsTypeName);",
      "right" : "return namesToTypes.get(jsTypeName);",
      "info" : "ReturnStatement[33519-33555]:ReturnStatement[33703-33739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33563-33569]:Modifier[33747-33753]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[33570-33576]:SimpleType[33754-33760]"
    }, {
      "left" : "getNativeType",
      "right" : "getNativeType",
      "info" : "SimpleName[33577-33590]:SimpleName[33761-33774]"
    }, {
      "left" : "JSTypeNative typeId",
      "right" : "JSTypeNative typeId",
      "info" : "SingleVariableDeclaration[33591-33610]:SingleVariableDeclaration[33775-33794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33612-33659]:Block[33796-33843]"
    }, {
      "left" : "return nativeTypes[typeId.ordinal()];",
      "right" : "return nativeTypes[typeId.ordinal()];",
      "info" : "ReturnStatement[33618-33655]:ReturnStatement[33802-33839]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33663-33669]:Modifier[33847-33853]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[33670-33680]:SimpleType[33854-33864]"
    }, {
      "left" : "getNativeObjectType",
      "right" : "getNativeObjectType",
      "info" : "SimpleName[33681-33700]:SimpleName[33865-33884]"
    }, {
      "left" : "JSTypeNative typeId",
      "right" : "JSTypeNative typeId",
      "info" : "SingleVariableDeclaration[33701-33720]:SingleVariableDeclaration[33885-33904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33722-33774]:Block[33906-33958]"
    }, {
      "left" : "return (ObjectType) getNativeType(typeId);",
      "right" : "return (ObjectType) getNativeType(typeId);",
      "info" : "ReturnStatement[33728-33770]:ReturnStatement[33912-33954]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33778-33784]:Modifier[33962-33968]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[33785-33797]:SimpleType[33969-33981]"
    }, {
      "left" : "getNativeFunctionType",
      "right" : "getNativeFunctionType",
      "info" : "SimpleName[33798-33819]:SimpleName[33982-34003]"
    }, {
      "left" : "JSTypeNative typeId",
      "right" : "JSTypeNative typeId",
      "info" : "SingleVariableDeclaration[33820-33839]:SingleVariableDeclaration[34004-34023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33841-33895]:Block[34025-34079]"
    }, {
      "left" : "return (FunctionType) getNativeType(typeId);",
      "right" : "return (FunctionType) getNativeType(typeId);",
      "info" : "ReturnStatement[33847-33891]:ReturnStatement[34031-34075]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34451-34457]:Modifier[34635-34641]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[34458-34464]:SimpleType[34642-34648]"
    }, {
      "left" : "getType",
      "right" : "getType",
      "info" : "SimpleName[34465-34472]:SimpleName[34649-34656]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[34473-34498]:SingleVariableDeclaration[34657-34682]"
    }, {
      "left" : "String jsTypeName",
      "right" : "String jsTypeName",
      "info" : "SingleVariableDeclaration[34500-34517]:SingleVariableDeclaration[34684-34701]"
    }, {
      "left" : "String sourceName",
      "right" : "String sourceName",
      "info" : "SingleVariableDeclaration[34525-34542]:SingleVariableDeclaration[34709-34726]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[34544-34554]:SingleVariableDeclaration[34728-34738]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[34556-34566]:SingleVariableDeclaration[34740-34750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34568-34928]:Block[34752-35112]"
    }, {
      "left" : "JSType type = getType(jsTypeName);",
      "right" : "JSType type = getType(jsTypeName);",
      "info" : "VariableDeclarationStatement[34574-34608]:VariableDeclarationStatement[34758-34792]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[34613-34907]:IfStatement[34797-35091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34631-34907]:Block[34815-35091]"
    }, {
      "left" : "NamedType namedType =\n          new NamedType(this, jsTypeName, sourceName, lineno, charno);",
      "right" : "NamedType namedType =\n          new NamedType(this, jsTypeName, sourceName, lineno, charno);",
      "info" : "VariableDeclarationStatement[34735-34827]:VariableDeclarationStatement[34919-35011]"
    }, {
      "left" : "unresolvedNamedTypes.put(scope, namedType);",
      "right" : "unresolvedNamedTypes.put(scope, namedType);",
      "info" : "ExpressionStatement[34834-34877]:ExpressionStatement[35018-35061]"
    }, {
      "left" : "type = namedType;",
      "right" : "type = namedType;",
      "info" : "ExpressionStatement[34884-34901]:ExpressionStatement[35068-35085]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[34912-34924]:ReturnStatement[35096-35108]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35102-35108]:Modifier[35286-35292]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35109-35113]:PrimitiveType[35293-35297]"
    }, {
      "left" : "clearNamedTypes",
      "right" : "clearNamedTypes",
      "info" : "SimpleName[35114-35129]:SimpleName[35298-35313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35132-35203]:Block[35316-35387]"
    }, {
      "left" : "resolvedNamedTypes.clear();",
      "right" : "resolvedNamedTypes.clear();",
      "info" : "ExpressionStatement[35138-35165]:ExpressionStatement[35322-35349]"
    }, {
      "left" : "unresolvedNamedTypes.clear();",
      "right" : "unresolvedNamedTypes.clear();",
      "info" : "ExpressionStatement[35170-35199]:ExpressionStatement[35354-35383]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35277-35283]:Modifier[35461-35467]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35284-35288]:PrimitiveType[35468-35472]"
    }, {
      "left" : "resolveTypesInScope",
      "right" : "resolveTypesInScope",
      "info" : "SimpleName[35289-35308]:SimpleName[35473-35492]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[35309-35334]:SingleVariableDeclaration[35493-35518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35336-36266]:Block[35520-36450]"
    }, {
      "left" : "for (NamedType type : unresolvedNamedTypes.get(scope))",
      "right" : "for (NamedType type : unresolvedNamedTypes.get(scope))",
      "info" : "EnhancedForStatement[35342-35441]:EnhancedForStatement[35526-35625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35397-35441]:Block[35581-35625]"
    }, {
      "left" : "type.resolve(reporter, scope);",
      "right" : "type.resolve(reporter, scope);",
      "info" : "ExpressionStatement[35405-35435]:ExpressionStatement[35589-35619]"
    }, {
      "left" : "resolvedNamedTypes.putAll(scope, unresolvedNamedTypes.removeAll(scope));",
      "right" : "resolvedNamedTypes.putAll(scope, unresolvedNamedTypes.removeAll(scope));",
      "info" : "ExpressionStatement[35447-35519]:ExpressionStatement[35631-35703]"
    }, {
      "left" : "if (scope != null && scope.getParentScope() == null)",
      "right" : "if (scope != null && scope.getParentScope() == null)",
      "info" : "IfStatement[35525-36262]:IfStatement[35709-36446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35578-36262]:Block[35762-36446]"
    }, {
      "left" : "PrototypeObjectType globalThis = (PrototypeObjectType) getNativeType(\n          JSTypeNative.GLOBAL_THIS);",
      "right" : "PrototypeObjectType globalThis = (PrototypeObjectType) getNativeType(\n          JSTypeNative.GLOBAL_THIS);",
      "info" : "VariableDeclarationStatement[35766-35872]:VariableDeclarationStatement[35950-36056]"
    }, {
      "left" : "JSType windowType = getType(\"Window\");",
      "right" : "JSType windowType = getType(\"Window\");",
      "info" : "VariableDeclarationStatement[35879-35917]:VariableDeclarationStatement[36063-36101]"
    }, {
      "left" : "if (globalThis.isUnknownType())",
      "right" : "if (globalThis.isUnknownType())",
      "info" : "IfStatement[35924-36256]:IfStatement[36108-36440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35956-36256]:Block[36140-36440]"
    }, {
      "left" : "ObjectType windowObjType = ObjectType.cast(windowType);",
      "right" : "ObjectType windowObjType = ObjectType.cast(windowType);",
      "info" : "VariableDeclarationStatement[35966-36021]:VariableDeclarationStatement[36150-36205]"
    }, {
      "left" : "if (windowObjType != null)",
      "right" : "if (windowObjType != null)",
      "info" : "IfStatement[36030-36248]:IfStatement[36214-36432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36057-36126]:Block[36241-36310]"
    }, {
      "left" : "globalThis.setImplicitPrototype(windowObjType);",
      "right" : "globalThis.setImplicitPrototype(windowObjType);",
      "info" : "ExpressionStatement[36069-36116]:ExpressionStatement[36253-36300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36132-36248]:Block[36316-36432]"
    }, {
      "left" : "globalThis.setImplicitPrototype(\n              getNativeObjectType(JSTypeNative.OBJECT_TYPE));",
      "right" : "globalThis.setImplicitPrototype(\n              getNativeObjectType(JSTypeNative.OBJECT_TYPE));",
      "info" : "ExpressionStatement[36144-36238]:ExpressionStatement[36328-36422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36403-36409]:Modifier[36587-36593]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[36410-36416]:SimpleType[36594-36600]"
    }, {
      "left" : "createOptionalType",
      "right" : "createOptionalType",
      "info" : "SimpleName[36417-36435]:SimpleName[36601-36619]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[36436-36447]:SingleVariableDeclaration[36620-36631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36449-36626]:Block[36633-36810]"
    }, {
      "left" : "if (type instanceof UnknownType || type.isAllType())",
      "right" : "if (type instanceof UnknownType || type.isAllType())",
      "info" : "IfStatement[36455-36622]:IfStatement[36639-36806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36508-36534]:Block[36692-36718]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[36516-36528]:ReturnStatement[36700-36712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36540-36622]:Block[36724-36806]"
    }, {
      "left" : "return createUnionType(type, getNativeType(JSTypeNative.VOID_TYPE));",
      "right" : "return createUnionType(type, getNativeType(JSTypeNative.VOID_TYPE));",
      "info" : "ReturnStatement[36548-36616]:ReturnStatement[36732-36800]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36763-36769]:Modifier[36947-36953]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[36770-36776]:SimpleType[36954-36960]"
    }, {
      "left" : "createDefaultObjectUnion",
      "right" : "createDefaultObjectUnion",
      "info" : "SimpleName[36777-36801]:SimpleName[36961-36985]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[36802-36813]:SingleVariableDeclaration[36986-36997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36815-36942]:Block[36999-37126]"
    }, {
      "left" : "return shouldTolerateUndefinedValues()\n        ? createOptionalNullableType(type)\n        : createNullableType(type);",
      "right" : "return shouldTolerateUndefinedValues()\n        ? createOptionalNullableType(type)\n        : createNullableType(type);",
      "info" : "ReturnStatement[36821-36938]:ReturnStatement[37005-37122]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37079-37085]:Modifier[37263-37269]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[37086-37092]:SimpleType[37270-37276]"
    }, {
      "left" : "createNullableType",
      "right" : "createNullableType",
      "info" : "SimpleName[37093-37111]:SimpleName[37277-37295]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[37112-37123]:SingleVariableDeclaration[37296-37307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37125-37203]:Block[37309-37387]"
    }, {
      "left" : "return createUnionType(type, getNativeType(JSTypeNative.NULL_TYPE));",
      "right" : "return createUnionType(type, getNativeType(JSTypeNative.NULL_TYPE));",
      "info" : "ReturnStatement[37131-37199]:ReturnStatement[37315-37383]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37345-37351]:Modifier[37529-37535]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[37352-37358]:SimpleType[37536-37542]"
    }, {
      "left" : "createOptionalNullableType",
      "right" : "createOptionalNullableType",
      "info" : "SimpleName[37359-37385]:SimpleName[37543-37569]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[37386-37397]:SingleVariableDeclaration[37570-37581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37399-37524]:Block[37583-37708]"
    }, {
      "left" : "return createUnionType(type, getNativeType(JSTypeNative.VOID_TYPE),\n        getNativeType(JSTypeNative.NULL_TYPE));",
      "right" : "return createUnionType(type, getNativeType(JSTypeNative.VOID_TYPE),\n        getNativeType(JSTypeNative.NULL_TYPE));",
      "info" : "ReturnStatement[37405-37520]:ReturnStatement[37589-37704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37600-37606]:Modifier[37784-37790]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[37607-37613]:SimpleType[37791-37797]"
    }, {
      "left" : "createUnionType",
      "right" : "createUnionType",
      "info" : "SimpleName[37614-37629]:SimpleName[37798-37813]"
    }, {
      "left" : "JSType... variants",
      "right" : "JSType... variants",
      "info" : "SingleVariableDeclaration[37630-37648]:SingleVariableDeclaration[37814-37832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37650-37817]:Block[37834-38001]"
    }, {
      "left" : "UnionTypeBuilder builder = new UnionTypeBuilder(this);",
      "right" : "UnionTypeBuilder builder = new UnionTypeBuilder(this);",
      "info" : "VariableDeclarationStatement[37656-37710]:VariableDeclarationStatement[37840-37894]"
    }, {
      "left" : "for (JSType type : variants)",
      "right" : "for (JSType type : variants)",
      "info" : "EnhancedForStatement[37715-37785]:EnhancedForStatement[37899-37969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37744-37785]:Block[37928-37969]"
    }, {
      "left" : "builder.addAlternate(type);",
      "right" : "builder.addAlternate(type);",
      "info" : "ExpressionStatement[37752-37779]:ExpressionStatement[37936-37963]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[37790-37813]:ReturnStatement[37974-37997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37929-37935]:Modifier[38113-38119]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[37936-37942]:SimpleType[38120-38126]"
    }, {
      "left" : "createUnionType",
      "right" : "createUnionType",
      "info" : "SimpleName[37943-37958]:SimpleName[38127-38142]"
    }, {
      "left" : "JSTypeNative... variants",
      "right" : "JSTypeNative... variants",
      "info" : "SingleVariableDeclaration[37959-37983]:SingleVariableDeclaration[38143-38167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37985-38177]:Block[38169-38361]"
    }, {
      "left" : "UnionTypeBuilder builder = new UnionTypeBuilder(this);",
      "right" : "UnionTypeBuilder builder = new UnionTypeBuilder(this);",
      "info" : "VariableDeclarationStatement[37991-38045]:VariableDeclarationStatement[38175-38229]"
    }, {
      "left" : "for (JSTypeNative typeId : variants)",
      "right" : "for (JSTypeNative typeId : variants)",
      "info" : "EnhancedForStatement[38050-38145]:EnhancedForStatement[38234-38329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38087-38145]:Block[38271-38329]"
    }, {
      "left" : "builder.addAlternate(getNativeType(typeId));",
      "right" : "builder.addAlternate(getNativeType(typeId));",
      "info" : "ExpressionStatement[38095-38139]:ExpressionStatement[38279-38323]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[38150-38173]:ReturnStatement[38334-38357]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38220-38226]:Modifier[38404-38410]"
    }, {
      "left" : "EnumType",
      "right" : "EnumType",
      "info" : "SimpleType[38227-38235]:SimpleType[38411-38419]"
    }, {
      "left" : "createEnumType",
      "right" : "createEnumType",
      "info" : "SimpleName[38236-38250]:SimpleName[38420-38434]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[38258-38269]:SingleVariableDeclaration[38442-38453]"
    }, {
      "left" : "Node source",
      "right" : "Node source",
      "info" : "SingleVariableDeclaration[38271-38282]:SingleVariableDeclaration[38455-38466]"
    }, {
      "left" : "JSType elementsType",
      "right" : "JSType elementsType",
      "info" : "SingleVariableDeclaration[38284-38303]:SingleVariableDeclaration[38468-38487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38305-38369]:Block[38489-38553]"
    }, {
      "left" : "return new EnumType(this, name, source, elementsType);",
      "right" : "return new EnumType(this, name, source, elementsType);",
      "info" : "ReturnStatement[38311-38365]:ReturnStatement[38495-38549]"
    }, {
      "left" : "ArrowType",
      "right" : "ArrowType",
      "info" : "SimpleType[38668-38677]:SimpleType[38852-38861]"
    }, {
      "left" : "createArrowType",
      "right" : "createArrowType",
      "info" : "SimpleName[38678-38693]:SimpleName[38862-38877]"
    }, {
      "left" : "Node parametersNode",
      "right" : "Node parametersNode",
      "info" : "SingleVariableDeclaration[38694-38713]:SingleVariableDeclaration[38878-38897]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[38715-38732]:SingleVariableDeclaration[38899-38916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38734-38799]:Block[38918-38983]"
    }, {
      "left" : "return new ArrowType(this, parametersNode, returnType);",
      "right" : "return new ArrowType(this, parametersNode, returnType);",
      "info" : "ReturnStatement[38740-38795]:ReturnStatement[38924-38979]"
    }, {
      "left" : "ArrowType",
      "right" : "ArrowType",
      "info" : "SimpleType[38994-39003]:SimpleType[39178-39187]"
    }, {
      "left" : "createArrowType",
      "right" : "createArrowType",
      "info" : "SimpleName[39004-39019]:SimpleName[39188-39203]"
    }, {
      "left" : "Node parametersNode",
      "right" : "Node parametersNode",
      "info" : "SingleVariableDeclaration[39020-39039]:SingleVariableDeclaration[39204-39223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39041-39100]:Block[39225-39284]"
    }, {
      "left" : "return new ArrowType(this, parametersNode, null);",
      "right" : "return new ArrowType(this, parametersNode, null);",
      "info" : "ReturnStatement[39047-39096]:ReturnStatement[39231-39280]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39250-39256]:Modifier[39434-39440]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[39257-39269]:SimpleType[39441-39453]"
    }, {
      "left" : "createFunctionType",
      "right" : "createFunctionType",
      "info" : "SimpleName[39270-39288]:SimpleName[39454-39472]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[39296-39313]:SingleVariableDeclaration[39480-39497]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[39315-39339]:SingleVariableDeclaration[39499-39523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39341-39423]:Block[39525-39607]"
    }, {
      "left" : "return createFunctionType(returnType, createParameters(parameterTypes));",
      "right" : "return createFunctionType(returnType, createParameters(parameterTypes));",
      "info" : "ReturnStatement[39347-39419]:ReturnStatement[39531-39603]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39660-39666]:Modifier[39844-39850]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[39667-39679]:SimpleType[39851-39863]"
    }, {
      "left" : "createFunctionTypeWithVarArgs",
      "right" : "createFunctionTypeWithVarArgs",
      "info" : "SimpleName[39680-39709]:SimpleName[39864-39893]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[39717-39734]:SingleVariableDeclaration[39901-39918]"
    }, {
      "left" : "List<JSType> parameterTypes",
      "right" : "List<JSType> parameterTypes",
      "info" : "SingleVariableDeclaration[39736-39763]:SingleVariableDeclaration[39920-39947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39765-39867]:Block[39949-40051]"
    }, {
      "left" : "return createFunctionType(\n        returnType, createParametersWithVarArgs(parameterTypes));",
      "right" : "return createFunctionType(\n        returnType, createParametersWithVarArgs(parameterTypes));",
      "info" : "ReturnStatement[39771-39863]:ReturnStatement[39955-40047]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40017-40023]:Modifier[40201-40207]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[40024-40036]:SimpleType[40208-40220]"
    }, {
      "left" : "createFunctionType",
      "right" : "createFunctionType",
      "info" : "SimpleName[40037-40055]:SimpleName[40221-40239]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[40063-40080]:SingleVariableDeclaration[40247-40264]"
    }, {
      "left" : "List<JSType> parameterTypes",
      "right" : "List<JSType> parameterTypes",
      "info" : "SingleVariableDeclaration[40082-40109]:SingleVariableDeclaration[40266-40293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40111-40193]:Block[40295-40377]"
    }, {
      "left" : "return createFunctionType(returnType, createParameters(parameterTypes));",
      "right" : "return createFunctionType(returnType, createParameters(parameterTypes));",
      "info" : "ReturnStatement[40117-40189]:ReturnStatement[40301-40373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40430-40436]:Modifier[40614-40620]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[40437-40449]:SimpleType[40621-40633]"
    }, {
      "left" : "createFunctionTypeWithVarArgs",
      "right" : "createFunctionTypeWithVarArgs",
      "info" : "SimpleName[40450-40479]:SimpleName[40634-40663]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[40487-40504]:SingleVariableDeclaration[40671-40688]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[40506-40530]:SingleVariableDeclaration[40690-40714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40532-40634]:Block[40716-40818]"
    }, {
      "left" : "return createFunctionType(\n        returnType, createParametersWithVarArgs(parameterTypes));",
      "right" : "return createFunctionType(\n        returnType, createParametersWithVarArgs(parameterTypes));",
      "info" : "ReturnStatement[40538-40630]:ReturnStatement[40722-40814]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40815-40821]:Modifier[40999-41005]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[40822-40834]:SimpleType[41006-41018]"
    }, {
      "left" : "createConstructorType",
      "right" : "createConstructorType",
      "info" : "SimpleName[40835-40856]:SimpleName[41019-41040]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[40864-40881]:SingleVariableDeclaration[41048-41065]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[40883-40907]:SingleVariableDeclaration[41067-41091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40909-41015]:Block[41093-41199]"
    }, {
      "left" : "return createConstructorType(\n        null, null, createParameters(parameterTypes), returnType);",
      "right" : "return createConstructorType(\n        null, null, createParameters(parameterTypes), returnType);",
      "info" : "ReturnStatement[40915-41011]:ReturnStatement[41099-41195]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41286-41292]:Modifier[41470-41476]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[41293-41305]:SimpleType[41477-41489]"
    }, {
      "left" : "createConstructorTypeWithVarArgs",
      "right" : "createConstructorTypeWithVarArgs",
      "info" : "SimpleName[41306-41338]:SimpleName[41490-41522]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[41346-41363]:SingleVariableDeclaration[41530-41547]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[41365-41389]:SingleVariableDeclaration[41549-41573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41391-41508]:Block[41575-41692]"
    }, {
      "left" : "return createConstructorType(\n        null, null, createParametersWithVarArgs(parameterTypes), returnType);",
      "right" : "return createConstructorType(\n        null, null, createParametersWithVarArgs(parameterTypes), returnType);",
      "info" : "ReturnStatement[41397-41504]:ReturnStatement[41581-41688]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41759-41765]:Modifier[41943-41949]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[41766-41772]:SimpleType[41950-41956]"
    }, {
      "left" : "createFunctionType",
      "right" : "createFunctionType",
      "info" : "SimpleName[41773-41791]:SimpleName[41957-41975]"
    }, {
      "left" : "ObjectType instanceType",
      "right" : "ObjectType instanceType",
      "info" : "SingleVariableDeclaration[41792-41815]:SingleVariableDeclaration[41976-41999]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[41823-41840]:SingleVariableDeclaration[42007-42024]"
    }, {
      "left" : "List<JSType> parameterTypes",
      "right" : "List<JSType> parameterTypes",
      "info" : "SingleVariableDeclaration[41842-41869]:SingleVariableDeclaration[42026-42053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41871-42063]:Block[42055-42247]"
    }, {
      "left" : "return new FunctionBuilder(this)\n        .withParamsNode(createParameters(parameterTypes))\n        .withReturnType(returnType)\n        .withTypeOfThis(instanceType)\n        .build();",
      "right" : "return new FunctionBuilder(this)\n        .withParamsNode(createParameters(parameterTypes))\n        .withReturnType(returnType)\n        .withTypeOfThis(instanceType)\n        .build();",
      "info" : "ReturnStatement[41877-42059]:ReturnStatement[42061-42243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42406-42412]:Modifier[42590-42596]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[42413-42419]:SimpleType[42597-42603]"
    }, {
      "left" : "createFunctionTypeWithVarArgs",
      "right" : "createFunctionTypeWithVarArgs",
      "info" : "SimpleName[42420-42449]:SimpleName[42604-42633]"
    }, {
      "left" : "ObjectType instanceType",
      "right" : "ObjectType instanceType",
      "info" : "SingleVariableDeclaration[42450-42473]:SingleVariableDeclaration[42634-42657]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[42481-42498]:SingleVariableDeclaration[42665-42682]"
    }, {
      "left" : "List<JSType> parameterTypes",
      "right" : "List<JSType> parameterTypes",
      "info" : "SingleVariableDeclaration[42500-42527]:SingleVariableDeclaration[42684-42711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42529-42732]:Block[42713-42916]"
    }, {
      "left" : "return new FunctionBuilder(this)\n        .withParamsNode(createParametersWithVarArgs(parameterTypes))\n        .withReturnType(returnType)\n        .withTypeOfThis(instanceType)\n        .build();",
      "right" : "return new FunctionBuilder(this)\n        .withParamsNode(createParametersWithVarArgs(parameterTypes))\n        .withReturnType(returnType)\n        .withTypeOfThis(instanceType)\n        .build();",
      "info" : "ReturnStatement[42535-42728]:ReturnStatement[42719-42912]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42933-42939]:Modifier[43117-43123]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[42940-42944]:SimpleType[43124-43128]"
    }, {
      "left" : "createParameters",
      "right" : "createParameters",
      "info" : "SimpleName[42945-42961]:SimpleName[43129-43145]"
    }, {
      "left" : "List<JSType> parameterTypes",
      "right" : "List<JSType> parameterTypes",
      "info" : "SingleVariableDeclaration[42962-42989]:SingleVariableDeclaration[43146-43173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42991-43093]:Block[43175-43277]"
    }, {
      "left" : "return createParameters(\n        parameterTypes.toArray(new JSType[parameterTypes.size()]));",
      "right" : "return createParameters(\n        parameterTypes.toArray(new JSType[parameterTypes.size()]));",
      "info" : "ReturnStatement[42997-43089]:ReturnStatement[43181-43273]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43447-43453]:Modifier[43631-43637]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[43454-43458]:SimpleType[43638-43642]"
    }, {
      "left" : "createParametersWithVarArgs",
      "right" : "createParametersWithVarArgs",
      "info" : "SimpleName[43459-43486]:SimpleName[43643-43670]"
    }, {
      "left" : "List<JSType> parameterTypes",
      "right" : "List<JSType> parameterTypes",
      "info" : "SingleVariableDeclaration[43487-43514]:SingleVariableDeclaration[43671-43698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43516-43629]:Block[43700-43813]"
    }, {
      "left" : "return createParametersWithVarArgs(\n        parameterTypes.toArray(new JSType[parameterTypes.size()]));",
      "right" : "return createParametersWithVarArgs(\n        parameterTypes.toArray(new JSType[parameterTypes.size()]));",
      "info" : "ReturnStatement[43522-43625]:ReturnStatement[43706-43809]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43830-43836]:Modifier[44014-44020]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[43837-43841]:SimpleType[44021-44025]"
    }, {
      "left" : "createParameters",
      "right" : "createParameters",
      "info" : "SimpleName[43842-43858]:SimpleName[44026-44042]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[43859-43883]:SingleVariableDeclaration[44043-44067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43885-43942]:Block[44069-44126]"
    }, {
      "left" : "return createParameters(false, parameterTypes);",
      "right" : "return createParameters(false, parameterTypes);",
      "info" : "ReturnStatement[43891-43938]:ReturnStatement[44075-44122]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44296-44302]:Modifier[44480-44486]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[44303-44307]:SimpleType[44487-44491]"
    }, {
      "left" : "createParametersWithVarArgs",
      "right" : "createParametersWithVarArgs",
      "info" : "SimpleName[44308-44335]:SimpleName[44492-44519]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[44336-44360]:SingleVariableDeclaration[44520-44544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44362-44418]:Block[44546-44602]"
    }, {
      "left" : "return createParameters(true, parameterTypes);",
      "right" : "return createParameters(true, parameterTypes);",
      "info" : "ReturnStatement[44368-44414]:ReturnStatement[44552-44598]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44543-44549]:Modifier[44727-44733]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[44550-44554]:SimpleType[44734-44738]"
    }, {
      "left" : "createOptionalParameters",
      "right" : "createOptionalParameters",
      "info" : "SimpleName[44555-44579]:SimpleName[44739-44763]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[44580-44604]:SingleVariableDeclaration[44764-44788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44606-44753]:Block[44790-44937]"
    }, {
      "left" : "FunctionParamBuilder builder = new FunctionParamBuilder(this);",
      "right" : "FunctionParamBuilder builder = new FunctionParamBuilder(this);",
      "info" : "VariableDeclarationStatement[44612-44674]:VariableDeclarationStatement[44796-44858]"
    }, {
      "left" : "builder.addOptionalParams(parameterTypes);",
      "right" : "builder.addOptionalParams(parameterTypes);",
      "info" : "ExpressionStatement[44679-44721]:ExpressionStatement[44863-44905]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[44726-44749]:ReturnStatement[44910-44933]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[45187-45194]:Modifier[45371-45378]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[45195-45199]:SimpleType[45379-45383]"
    }, {
      "left" : "createParameters",
      "right" : "createParameters",
      "info" : "SimpleName[45200-45216]:SimpleName[45384-45400]"
    }, {
      "left" : "boolean lastVarArgs",
      "right" : "boolean lastVarArgs",
      "info" : "SingleVariableDeclaration[45217-45236]:SingleVariableDeclaration[45401-45420]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[45238-45262]:SingleVariableDeclaration[45422-45446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45264-45609]:Block[45448-45793]"
    }, {
      "left" : "FunctionParamBuilder builder = new FunctionParamBuilder(this);",
      "right" : "FunctionParamBuilder builder = new FunctionParamBuilder(this);",
      "info" : "VariableDeclarationStatement[45270-45332]:VariableDeclarationStatement[45454-45516]"
    }, {
      "left" : "int max = parameterTypes.length - 1;",
      "right" : "int max = parameterTypes.length - 1;",
      "info" : "VariableDeclarationStatement[45337-45373]:VariableDeclarationStatement[45521-45557]"
    }, {
      "left" : "for (int i = 0; i <= max; i++)",
      "right" : "for (int i = 0; i <= max; i++)",
      "info" : "ForStatement[45378-45577]:ForStatement[45562-45761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45409-45577]:Block[45593-45761]"
    }, {
      "left" : "if (lastVarArgs && i == max)",
      "right" : "if (lastVarArgs && i == max)",
      "info" : "IfStatement[45417-45571]:IfStatement[45601-45755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45446-45502]:Block[45630-45686]"
    }, {
      "left" : "builder.addVarArgs(parameterTypes[i]);",
      "right" : "builder.addVarArgs(parameterTypes[i]);",
      "info" : "ExpressionStatement[45456-45494]:ExpressionStatement[45640-45678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45508-45571]:Block[45692-45755]"
    }, {
      "left" : "builder.addRequiredParams(parameterTypes[i]);",
      "right" : "builder.addRequiredParams(parameterTypes[i]);",
      "info" : "ExpressionStatement[45518-45563]:ExpressionStatement[45702-45747]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[45582-45605]:ReturnStatement[45766-45789]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45872-45878]:Modifier[46056-46062]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[45879-45891]:SimpleType[46063-46075]"
    }, {
      "left" : "createFunctionType",
      "right" : "createFunctionType",
      "info" : "SimpleName[45892-45910]:SimpleName[46076-46094]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[45911-45928]:SingleVariableDeclaration[46095-46112]"
    }, {
      "left" : "boolean lastVarArgs",
      "right" : "boolean lastVarArgs",
      "info" : "SingleVariableDeclaration[45936-45955]:SingleVariableDeclaration[46120-46139]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[45957-45981]:SingleVariableDeclaration[46141-46165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45983-46163]:Block[46167-46347]"
    }, {
      "left" : "if (lastVarArgs)",
      "right" : "if (lastVarArgs)",
      "info" : "IfStatement[45989-46159]:IfStatement[46173-46343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46006-46085]:Block[46190-46269]"
    }, {
      "left" : "return createFunctionTypeWithVarArgs(returnType, parameterTypes);",
      "right" : "return createFunctionTypeWithVarArgs(returnType, parameterTypes);",
      "info" : "ReturnStatement[46014-46079]:ReturnStatement[46198-46263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46091-46159]:Block[46275-46343]"
    }, {
      "left" : "return createFunctionType(returnType, parameterTypes);",
      "right" : "return createFunctionType(returnType, parameterTypes);",
      "info" : "ReturnStatement[46099-46153]:ReturnStatement[46283-46337]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46385-46391]:Modifier[46569-46575]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[46392-46404]:SimpleType[46576-46588]"
    }, {
      "left" : "createFunctionTypeWithNewReturnType",
      "right" : "createFunctionTypeWithNewReturnType",
      "info" : "SimpleName[46405-46440]:SimpleName[46589-46624]"
    }, {
      "left" : "FunctionType existingFunctionType",
      "right" : "FunctionType existingFunctionType",
      "info" : "SingleVariableDeclaration[46448-46481]:SingleVariableDeclaration[46632-46665]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[46483-46500]:SingleVariableDeclaration[46667-46684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46502-46651]:Block[46686-46835]"
    }, {
      "left" : "return new FunctionBuilder(this)\n        .copyFromOtherFunction(existingFunctionType)\n        .withReturnType(returnType)\n        .build();",
      "right" : "return new FunctionBuilder(this)\n        .copyFromOtherFunction(existingFunctionType)\n        .withReturnType(returnType)\n        .build();",
      "info" : "ReturnStatement[46508-46647]:ReturnStatement[46692-46831]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46875-46881]:Modifier[47059-47065]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[46882-46894]:SimpleType[47066-47078]"
    }, {
      "left" : "createFunctionTypeWithNewThisType",
      "right" : "createFunctionTypeWithNewThisType",
      "info" : "SimpleName[46895-46928]:SimpleName[47079-47112]"
    }, {
      "left" : "FunctionType existingFunctionType",
      "right" : "FunctionType existingFunctionType",
      "info" : "SingleVariableDeclaration[46936-46969]:SingleVariableDeclaration[47120-47153]"
    }, {
      "left" : "ObjectType thisType",
      "right" : "ObjectType thisType",
      "info" : "SingleVariableDeclaration[46971-46990]:SingleVariableDeclaration[47155-47174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46992-47139]:Block[47176-47323]"
    }, {
      "left" : "return new FunctionBuilder(this)\n        .copyFromOtherFunction(existingFunctionType)\n        .withTypeOfThis(thisType)\n        .build();",
      "right" : "return new FunctionBuilder(this)\n        .copyFromOtherFunction(existingFunctionType)\n        .withTypeOfThis(thisType)\n        .build();",
      "info" : "ReturnStatement[46998-47135]:ReturnStatement[47182-47319]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47405-47411]:Modifier[47589-47595]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[47412-47424]:SimpleType[47596-47608]"
    }, {
      "left" : "createFunctionType",
      "right" : "createFunctionType",
      "info" : "SimpleName[47425-47443]:SimpleName[47609-47627]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[47451-47468]:SingleVariableDeclaration[47635-47652]"
    }, {
      "left" : "Node parameters",
      "right" : "Node parameters",
      "info" : "SingleVariableDeclaration[47470-47485]:SingleVariableDeclaration[47654-47669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47487-47619]:Block[47671-47803]"
    }, {
      "left" : "return new FunctionBuilder(this)\n        .withParamsNode(parameters)\n        .withReturnType(returnType)\n        .build();",
      "right" : "return new FunctionBuilder(this)\n        .withParamsNode(parameters)\n        .withReturnType(returnType)\n        .build();",
      "info" : "ReturnStatement[47493-47615]:ReturnStatement[47677-47799]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47913-47919]:Modifier[48097-48103]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[47920-47932]:SimpleType[48104-48116]"
    }, {
      "left" : "createConstructorType",
      "right" : "createConstructorType",
      "info" : "SimpleName[47933-47954]:SimpleName[48117-48138]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[47955-47972]:SingleVariableDeclaration[48139-48156]"
    }, {
      "left" : "boolean lastVarArgs",
      "right" : "boolean lastVarArgs",
      "info" : "SingleVariableDeclaration[47980-47999]:SingleVariableDeclaration[48164-48183]"
    }, {
      "left" : "JSType... parameterTypes",
      "right" : "JSType... parameterTypes",
      "info" : "SingleVariableDeclaration[48001-48025]:SingleVariableDeclaration[48185-48209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48027-48213]:Block[48211-48397]"
    }, {
      "left" : "if (lastVarArgs)",
      "right" : "if (lastVarArgs)",
      "info" : "IfStatement[48033-48209]:IfStatement[48217-48393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48050-48132]:Block[48234-48316]"
    }, {
      "left" : "return createConstructorTypeWithVarArgs(returnType, parameterTypes);",
      "right" : "return createConstructorTypeWithVarArgs(returnType, parameterTypes);",
      "info" : "ReturnStatement[48058-48126]:ReturnStatement[48242-48310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48138-48209]:Block[48322-48393]"
    }, {
      "left" : "return createConstructorType(returnType, parameterTypes);",
      "right" : "return createConstructorType(returnType, parameterTypes);",
      "info" : "ReturnStatement[48146-48203]:ReturnStatement[48330-48387]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48257-48263]:Modifier[48441-48447]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[48264-48274]:SimpleType[48448-48458]"
    }, {
      "left" : "createObjectType",
      "right" : "createObjectType",
      "info" : "SimpleName[48275-48291]:SimpleName[48459-48475]"
    }, {
      "left" : "ObjectType implicitPrototype",
      "right" : "ObjectType implicitPrototype",
      "info" : "SingleVariableDeclaration[48292-48320]:SingleVariableDeclaration[48476-48504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48322-48387]:Block[48506-48571]"
    }, {
      "left" : "return createObjectType(null, null, implicitPrototype);",
      "right" : "return createObjectType(null, null, implicitPrototype);",
      "info" : "ReturnStatement[48328-48383]:ReturnStatement[48512-48567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48431-48437]:Modifier[48615-48621]"
    }, {
      "left" : "RecordType",
      "right" : "RecordType",
      "info" : "SimpleType[48438-48448]:SimpleType[48622-48632]"
    }, {
      "left" : "createRecordType",
      "right" : "createRecordType",
      "info" : "SimpleName[48449-48465]:SimpleName[48633-48649]"
    }, {
      "left" : "Map<String, RecordProperty> properties",
      "right" : "Map<String, RecordProperty> properties",
      "info" : "SingleVariableDeclaration[48466-48504]:SingleVariableDeclaration[48650-48688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48506-48556]:Block[48690-48740]"
    }, {
      "left" : "return new RecordType(this, properties);",
      "right" : "return new RecordType(this, properties);",
      "info" : "ReturnStatement[48512-48552]:ReturnStatement[48696-48736]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48600-48606]:Modifier[48784-48790]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[48607-48617]:SimpleType[48791-48801]"
    }, {
      "left" : "createObjectType",
      "right" : "createObjectType",
      "info" : "SimpleName[48618-48634]:SimpleName[48802-48818]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[48635-48646]:SingleVariableDeclaration[48819-48830]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[48648-48654]:SingleVariableDeclaration[48832-48838]"
    }, {
      "left" : "ObjectType implicitPrototype",
      "right" : "ObjectType implicitPrototype",
      "info" : "SingleVariableDeclaration[48662-48690]:SingleVariableDeclaration[48846-48874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48692-48764]:Block[48876-48948]"
    }, {
      "left" : "return new PrototypeObjectType(this, name, implicitPrototype);",
      "right" : "return new PrototypeObjectType(this, name, implicitPrototype);",
      "info" : "ReturnStatement[48698-48760]:ReturnStatement[48882-48944]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48818-48824]:Modifier[49002-49008]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[48825-48835]:SimpleType[49009-49019]"
    }, {
      "left" : "createAnonymousObjectType",
      "right" : "createAnonymousObjectType",
      "info" : "SimpleName[48836-48861]:SimpleName[49020-49045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48864-48999]:Block[49048-49183]"
    }, {
      "left" : "PrototypeObjectType type =\n        new PrototypeObjectType(this, null, null);",
      "right" : "PrototypeObjectType type =\n        new PrototypeObjectType(this, null, null);",
      "info" : "VariableDeclarationStatement[48870-48947]:VariableDeclarationStatement[49054-49131]"
    }, {
      "left" : "type.setPrettyPrint(true);",
      "right" : "type.setPrettyPrint(true);",
      "info" : "ExpressionStatement[48952-48978]:ExpressionStatement[49136-49162]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[48983-48995]:ReturnStatement[49167-49179]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49451-49457]:Modifier[49635-49641]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49458-49465]:PrimitiveType[49642-49649]"
    }, {
      "left" : "resetImplicitPrototype",
      "right" : "resetImplicitPrototype",
      "info" : "SimpleName[49466-49488]:SimpleName[49650-49672]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[49496-49507]:SingleVariableDeclaration[49680-49691]"
    }, {
      "left" : "ObjectType newImplicitProto",
      "right" : "ObjectType newImplicitProto",
      "info" : "SingleVariableDeclaration[49509-49536]:SingleVariableDeclaration[49693-49720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49538-49783]:Block[49722-49967]"
    }, {
      "left" : "if (type instanceof PrototypeObjectType)",
      "right" : "if (type instanceof PrototypeObjectType)",
      "info" : "IfStatement[49544-49761]:IfStatement[49728-49945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49585-49761]:Block[49769-49945]"
    }, {
      "left" : "PrototypeObjectType poType = (PrototypeObjectType) type;",
      "right" : "PrototypeObjectType poType = (PrototypeObjectType) type;",
      "info" : "VariableDeclarationStatement[49593-49649]:VariableDeclarationStatement[49777-49833]"
    }, {
      "left" : "poType.clearCachedValues();",
      "right" : "poType.clearCachedValues();",
      "info" : "ExpressionStatement[49656-49683]:ExpressionStatement[49840-49867]"
    }, {
      "left" : "poType.setImplicitPrototype(newImplicitProto);",
      "right" : "poType.setImplicitPrototype(newImplicitProto);",
      "info" : "ExpressionStatement[49690-49736]:ExpressionStatement[49874-49920]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[49743-49755]:ReturnStatement[49927-49939]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[49766-49779]:ReturnStatement[49950-49963]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[49855-49865]:SimpleType[50039-50049]"
    }, {
      "left" : "createNativeAnonymousObjectType",
      "right" : "createNativeAnonymousObjectType",
      "info" : "SimpleName[49866-49897]:SimpleName[50050-50081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49900-50041]:Block[50084-50225]"
    }, {
      "left" : "PrototypeObjectType type =\n        new PrototypeObjectType(this, null, null, true);",
      "right" : "PrototypeObjectType type =\n        new PrototypeObjectType(this, null, null, true);",
      "info" : "VariableDeclarationStatement[49906-49989]:VariableDeclarationStatement[50090-50173]"
    }, {
      "left" : "type.setPrettyPrint(true);",
      "right" : "type.setPrettyPrint(true);",
      "info" : "ExpressionStatement[49994-50020]:ExpressionStatement[50178-50204]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[50025-50037]:ReturnStatement[50209-50221]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50576-50582]:Modifier[50760-50766]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[50583-50595]:SimpleType[50767-50779]"
    }, {
      "left" : "createConstructorType",
      "right" : "createConstructorType",
      "info" : "SimpleName[50596-50617]:SimpleName[50780-50801]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[50618-50629]:SingleVariableDeclaration[50802-50813]"
    }, {
      "left" : "Node source",
      "right" : "Node source",
      "info" : "SingleVariableDeclaration[50631-50642]:SingleVariableDeclaration[50815-50826]"
    }, {
      "left" : "Node parameters",
      "right" : "Node parameters",
      "info" : "SingleVariableDeclaration[50650-50665]:SingleVariableDeclaration[50834-50849]"
    }, {
      "left" : "JSType returnType",
      "right" : "JSType returnType",
      "info" : "SingleVariableDeclaration[50667-50684]:SingleVariableDeclaration[50851-50868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50686-50822]:Block[50870-51006]"
    }, {
      "left" : "return new FunctionType(this, name, source,\n        createArrowType(parameters, returnType), null,\n        null, true, false);",
      "right" : "return new FunctionType(this, name, source,\n        createArrowType(parameters, returnType), null,\n        null, true, false);",
      "info" : "ReturnStatement[50692-50818]:ReturnStatement[50876-51002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51043-51049]:Modifier[51227-51233]"
    }, {
      "left" : "FunctionType",
      "right" : "FunctionType",
      "info" : "SimpleType[51050-51062]:SimpleType[51234-51246]"
    }, {
      "left" : "createInterfaceType",
      "right" : "createInterfaceType",
      "info" : "SimpleName[51063-51082]:SimpleName[51247-51266]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[51083-51094]:SingleVariableDeclaration[51267-51278]"
    }, {
      "left" : "Node source",
      "right" : "Node source",
      "info" : "SingleVariableDeclaration[51096-51107]:SingleVariableDeclaration[51280-51291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51109-51172]:Block[51293-51356]"
    }, {
      "left" : "return FunctionType.forInterface(this, name, source);",
      "right" : "return FunctionType.forInterface(this, name, source);",
      "info" : "ReturnStatement[51115-51168]:ReturnStatement[51299-51352]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51223-51229]:Modifier[51407-51413]"
    }, {
      "left" : "ParameterizedType",
      "right" : "ParameterizedType",
      "info" : "SimpleType[51230-51247]:SimpleType[51414-51431]"
    }, {
      "left" : "createParameterizedType",
      "right" : "createParameterizedType",
      "info" : "SimpleName[51248-51271]:SimpleName[51432-51455]"
    }, {
      "left" : "ObjectType objectType",
      "right" : "ObjectType objectType",
      "info" : "SingleVariableDeclaration[51279-51300]:SingleVariableDeclaration[51463-51484]"
    }, {
      "left" : "JSType parameterType",
      "right" : "JSType parameterType",
      "info" : "SingleVariableDeclaration[51302-51322]:SingleVariableDeclaration[51486-51506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51324-51396]:Block[51508-51580]"
    }, {
      "left" : "return new ParameterizedType(this, objectType, parameterType);",
      "right" : "return new ParameterizedType(this, objectType, parameterType);",
      "info" : "ReturnStatement[51330-51392]:ReturnStatement[51514-51576]"
    }, {
      "left" : "@VisibleForTesting",
      "right" : "@VisibleForTesting",
      "info" : "MarkerAnnotation[51439-51457]:MarkerAnnotation[51623-51641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51460-51466]:Modifier[51644-51650]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[51467-51473]:SimpleType[51651-51657]"
    }, {
      "left" : "createNamedType",
      "right" : "createNamedType",
      "info" : "SimpleName[51474-51489]:SimpleName[51658-51673]"
    }, {
      "left" : "String reference",
      "right" : "String reference",
      "info" : "SingleVariableDeclaration[51490-51506]:SingleVariableDeclaration[51674-51690]"
    }, {
      "left" : "String sourceName",
      "right" : "String sourceName",
      "info" : "SingleVariableDeclaration[51514-51531]:SingleVariableDeclaration[51698-51715]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[51533-51543]:SingleVariableDeclaration[51717-51727]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[51545-51555]:SingleVariableDeclaration[51729-51739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51557-51633]:Block[51741-51817]"
    }, {
      "left" : "return new NamedType(this, reference, sourceName, lineno, charno);",
      "right" : "return new NamedType(this, reference, sourceName, lineno, charno);",
      "info" : "ReturnStatement[51563-51629]:ReturnStatement[51747-51813]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51726-51732]:Modifier[51910-51916]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51733-51737]:PrimitiveType[51917-51921]"
    }, {
      "left" : "identifyNonNullableName",
      "right" : "identifyNonNullableName",
      "info" : "SimpleName[51738-51761]:SimpleName[51922-51945]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[51762-51773]:SingleVariableDeclaration[51946-51957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51775-51854]:Block[51959-52038]"
    }, {
      "left" : "Preconditions.checkNotNull(name);",
      "right" : "Preconditions.checkNotNull(name);",
      "info" : "ExpressionStatement[51781-51814]:ExpressionStatement[51965-51998]"
    }, {
      "left" : "nonNullableTypeNames.add(name);",
      "right" : "nonNullableTypeNames.add(name);",
      "info" : "ExpressionStatement[51819-51850]:ExpressionStatement[52003-52034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52067-52073]:Modifier[52251-52257]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[52074-52080]:SimpleType[52258-52264]"
    }, {
      "left" : "createFromTypeNodes",
      "right" : "createFromTypeNodes",
      "info" : "SimpleName[52081-52100]:SimpleName[52265-52284]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[52101-52107]:SingleVariableDeclaration[52285-52291]"
    }, {
      "left" : "String sourceName",
      "right" : "String sourceName",
      "info" : "SingleVariableDeclaration[52109-52126]:SingleVariableDeclaration[52293-52310]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[52134-52159]:SingleVariableDeclaration[52318-52343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52161-52518]:Block[52345-52702]"
    }, {
      "left" : "if (resolveMode == ResolveMode.LAZY_EXPRESSIONS)",
      "right" : "if (resolveMode == ResolveMode.LAZY_EXPRESSIONS)",
      "info" : "IfStatement[52167-52452]:IfStatement[52351-52636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52216-52452]:Block[52400-52636]"
    }, {
      "left" : "boolean hasNames = hasTypeName(n);",
      "right" : "boolean hasNames = hasTypeName(n);",
      "info" : "VariableDeclarationStatement[52316-52350]:VariableDeclarationStatement[52500-52534]"
    }, {
      "left" : "if (hasNames)",
      "right" : "if (hasNames)",
      "info" : "IfStatement[52357-52446]:IfStatement[52541-52630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52371-52446]:Block[52555-52630]"
    }, {
      "left" : "return new UnresolvedTypeExpression(this, n, sourceName);",
      "right" : "return new UnresolvedTypeExpression(this, n, sourceName);",
      "info" : "ReturnStatement[52381-52438]:ReturnStatement[52565-52622]"
    }, {
      "left" : "return createFromTypeNodesInternal(n, sourceName, scope);",
      "right" : "return createFromTypeNodesInternal(n, sourceName, scope);",
      "info" : "ReturnStatement[52457-52514]:ReturnStatement[52641-52698]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[52522-52529]:Modifier[52706-52713]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52530-52537]:PrimitiveType[52714-52721]"
    }, {
      "left" : "hasTypeName",
      "right" : "hasTypeName",
      "info" : "SimpleName[52538-52549]:SimpleName[52722-52733]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[52550-52556]:SingleVariableDeclaration[52734-52740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52558-52806]:Block[52742-52990]"
    }, {
      "left" : "if (n.getType() == Token.STRING)",
      "right" : "if (n.getType() == Token.STRING)",
      "info" : "IfStatement[52564-52623]:IfStatement[52748-52807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52597-52623]:Block[52781-52807]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52605-52617]:ReturnStatement[52789-52801]"
    }, {
      "left" : "for (Node child = n.getFirstChild();\n         child != null; child = child.getNext())",
      "right" : "for (Node child = n.getFirstChild();\n         child != null; child = child.getNext())",
      "info" : "ForStatement[52629-52783]:ForStatement[52813-52967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52715-52783]:Block[52899-52967]"
    }, {
      "left" : "if (hasTypeName(child))",
      "right" : "if (hasTypeName(child))",
      "info" : "IfStatement[52723-52777]:IfStatement[52907-52961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52747-52777]:Block[52931-52961]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52757-52769]:ReturnStatement[52941-52953]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52789-52802]:ReturnStatement[52973-52986]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[52872-52879]:Modifier[53056-53063]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[52880-52886]:SimpleType[53064-53070]"
    }, {
      "left" : "createFromTypeNodesInternal",
      "right" : "createFromTypeNodesInternal",
      "info" : "SimpleName[52887-52914]:SimpleName[53071-53098]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[52915-52921]:SingleVariableDeclaration[53099-53105]"
    }, {
      "left" : "String sourceName",
      "right" : "String sourceName",
      "info" : "SingleVariableDeclaration[52923-52940]:SingleVariableDeclaration[53107-53124]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[52948-52973]:SingleVariableDeclaration[53132-53157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52975-58747]:Block[53159-58931]"
    }, {
      "left" : "switch (n.getType()) {\n      case Token.LC: // Record type.\n        return createRecordTypeFromNodes(\n            n.getFirstChild(), sourceName, scope);\n\n      case Token.BANG: // Not nullable\n        return createFromTypeNodesInternal(\n            n.getFirstChild(), sourceName, scope)\n            .restrictByNotNullOrUndefined();\n\n      case Token.QMARK: // Nullable or unknown\n        Node firstChild = n.getFirstChild();\n        if (firstChild == null) {\n          return getNativeType(UNKNOWN_TYPE);\n        }\n        return createDefaultObjectUnion(\n            createFromTypeNodesInternal(\n                firstChild, sourceName, scope));\n\n      case Token.EQUALS: // Optional\n        return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));\n\n      case Token.ELLIPSIS: // Var args\n        return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));\n\n      case Token.STAR: // The AllType\n        return getNativeType(ALL_TYPE);\n\n      case Token.LB: // Array type\n        // TODO(nicksantos): Enforce membership restrictions on the Array.\n        return getNativeType(ARRAY_TYPE);\n\n      case Token.PIPE: // Union type\n        UnionTypeBuilder builder = new UnionTypeBuilder(this);\n        for (Node child = n.getFirstChild(); child != null;\n             child = child.getNext()) {\n          builder.addAlternate(\n              createFromTypeNodesInternal(child, sourceName, scope));\n        }\n        return builder.build();\n\n      case Token.EMPTY: // When the return value of a function is not specified\n        return getNativeType(UNKNOWN_TYPE);\n\n      case Token.VOID: // Only allowed in the return value of a function.\n        return getNativeType(VOID_TYPE);\n\n      case Token.STRING:\n        JSType namedType = getType(scope, n.getString(), sourceName,\n            n.getLineno(), n.getCharno());\n        if (resolveMode != ResolveMode.LAZY_NAMES) {\n          namedType = namedType.resolveInternal(reporter, scope);\n        }\n        if ((namedType instanceof ObjectType) &&\n            !(nonNullableTypeNames.contains(n.getString()))) {\n          Node typeList = n.getFirstChild();\n          if (typeList != null &&\n              (\"Array\".equals(n.getString()) ||\n               \"Object\".equals(n.getString()))) {\n            JSType parameterType =\n                createFromTypeNodesInternal(\n                    typeList.getLastChild(), sourceName, scope);\n            namedType = new ParameterizedType(\n                this, (ObjectType) namedType, parameterType);\n            if (typeList.hasMoreThanOneChild()) {\n              JSType indexType =\n                  createFromTypeNodesInternal(\n                      typeList.getFirstChild(), sourceName, scope);\n              namedType = new IndexedType(\n                  this, (ObjectType) namedType, indexType);\n            }\n          }\n          return createDefaultObjectUnion(namedType);\n        } else {\n          return namedType;\n        }\n\n      case Token.FUNCTION:\n        ObjectType thisType = null;\n        boolean isConstructor = false;\n        Node current = n.getFirstChild();\n        if (current.getType() == Token.THIS ||\n            current.getType() == Token.NEW) {\n          Node contextNode = current.getFirstChild();\n          thisType =\n              ObjectType.cast(\n                  createFromTypeNodesInternal(\n                      contextNode, sourceName, scope)\n                  .restrictByNotNullOrUndefined());\n          if (thisType == null) {\n            reporter.warning(\n                ScriptRuntime.getMessage0(\n                    current.getType() == Token.THIS ?\n                    \"msg.jsdoc.function.thisnotobject\" :\n                    \"msg.jsdoc.function.newnotobject\"),\n                sourceName,\n                contextNode.getLineno(), contextNode.getCharno());\n          }\n\n          isConstructor = current.getType() == Token.NEW;\n          current = current.getNext();\n        }\n\n        FunctionParamBuilder paramBuilder = new FunctionParamBuilder(this);\n\n        if (current.getType() == Token.PARAM_LIST) {\n          Node args = current.getFirstChild();\n          for (Node arg = current.getFirstChild(); arg != null;\n               arg = arg.getNext()) {\n            if (arg.getType() == Token.ELLIPSIS) {\n              if (arg.getChildCount() == 0) {\n                paramBuilder.addVarArgs(getNativeType(UNKNOWN_TYPE));\n              } else {\n                paramBuilder.addVarArgs(\n                    createFromTypeNodesInternal(\n                        arg.getFirstChild(), sourceName, scope));\n              }\n            } else {\n              JSType type = createFromTypeNodesInternal(\n                  arg, sourceName, scope);\n              if (arg.getType() == Token.EQUALS) {\n                boolean addSuccess = paramBuilder.addOptionalParams(type);\n                if (!addSuccess) {\n                  reporter.warning(\n                      ScriptRuntime.getMessage0(\"msg.jsdoc.function.varargs\"),\n                      sourceName, arg.getLineno(), arg.getCharno());\n                }\n              } else {\n                paramBuilder.addRequiredParams(type);\n              }\n            }\n          }\n          current = current.getNext();\n        }\n\n        JSType returnType =\n            createFromTypeNodesInternal(current, sourceName, scope);\n\n        return new FunctionBuilder(this)\n            .withParams(paramBuilder)\n            .withReturnType(returnType)\n            .withTypeOfThis(thisType)\n            .setIsConstructor(isConstructor)\n            .build();\n    }",
      "right" : "switch (n.getType()) {\n      case Token.LC: // Record type.\n        return createRecordTypeFromNodes(\n            n.getFirstChild(), sourceName, scope);\n\n      case Token.BANG: // Not nullable\n        return createFromTypeNodesInternal(\n            n.getFirstChild(), sourceName, scope)\n            .restrictByNotNullOrUndefined();\n\n      case Token.QMARK: // Nullable or unknown\n        Node firstChild = n.getFirstChild();\n        if (firstChild == null) {\n          return getNativeType(UNKNOWN_TYPE);\n        }\n        return createDefaultObjectUnion(\n            createFromTypeNodesInternal(\n                firstChild, sourceName, scope));\n\n      case Token.EQUALS: // Optional\n        return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));\n\n      case Token.ELLIPSIS: // Var args\n        return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));\n\n      case Token.STAR: // The AllType\n        return getNativeType(ALL_TYPE);\n\n      case Token.LB: // Array type\n        // TODO(nicksantos): Enforce membership restrictions on the Array.\n        return getNativeType(ARRAY_TYPE);\n\n      case Token.PIPE: // Union type\n        UnionTypeBuilder builder = new UnionTypeBuilder(this);\n        for (Node child = n.getFirstChild(); child != null;\n             child = child.getNext()) {\n          builder.addAlternate(\n              createFromTypeNodesInternal(child, sourceName, scope));\n        }\n        return builder.build();\n\n      case Token.EMPTY: // When the return value of a function is not specified\n        return getNativeType(UNKNOWN_TYPE);\n\n      case Token.VOID: // Only allowed in the return value of a function.\n        return getNativeType(VOID_TYPE);\n\n      case Token.STRING:\n        JSType namedType = getType(scope, n.getString(), sourceName,\n            n.getLineno(), n.getCharno());\n        if (resolveMode != ResolveMode.LAZY_NAMES) {\n          namedType = namedType.resolveInternal(reporter, scope);\n        }\n        if ((namedType instanceof ObjectType) &&\n            !(nonNullableTypeNames.contains(n.getString()))) {\n          Node typeList = n.getFirstChild();\n          if (typeList != null &&\n              (\"Array\".equals(n.getString()) ||\n               \"Object\".equals(n.getString()))) {\n            JSType parameterType =\n                createFromTypeNodesInternal(\n                    typeList.getLastChild(), sourceName, scope);\n            namedType = new ParameterizedType(\n                this, (ObjectType) namedType, parameterType);\n            if (typeList.hasMoreThanOneChild()) {\n              JSType indexType =\n                  createFromTypeNodesInternal(\n                      typeList.getFirstChild(), sourceName, scope);\n              namedType = new IndexedType(\n                  this, (ObjectType) namedType, indexType);\n            }\n          }\n          return createDefaultObjectUnion(namedType);\n        } else {\n          return namedType;\n        }\n\n      case Token.FUNCTION:\n        ObjectType thisType = null;\n        boolean isConstructor = false;\n        Node current = n.getFirstChild();\n        if (current.getType() == Token.THIS ||\n            current.getType() == Token.NEW) {\n          Node contextNode = current.getFirstChild();\n          thisType =\n              ObjectType.cast(\n                  createFromTypeNodesInternal(\n                      contextNode, sourceName, scope)\n                  .restrictByNotNullOrUndefined());\n          if (thisType == null) {\n            reporter.warning(\n                ScriptRuntime.getMessage0(\n                    current.getType() == Token.THIS ?\n                    \"msg.jsdoc.function.thisnotobject\" :\n                    \"msg.jsdoc.function.newnotobject\"),\n                sourceName,\n                contextNode.getLineno(), contextNode.getCharno());\n          }\n\n          isConstructor = current.getType() == Token.NEW;\n          current = current.getNext();\n        }\n\n        FunctionParamBuilder paramBuilder = new FunctionParamBuilder(this);\n\n        if (current.getType() == Token.PARAM_LIST) {\n          Node args = current.getFirstChild();\n          for (Node arg = current.getFirstChild(); arg != null;\n               arg = arg.getNext()) {\n            if (arg.getType() == Token.ELLIPSIS) {\n              if (arg.getChildCount() == 0) {\n                paramBuilder.addVarArgs(getNativeType(UNKNOWN_TYPE));\n              } else {\n                paramBuilder.addVarArgs(\n                    createFromTypeNodesInternal(\n                        arg.getFirstChild(), sourceName, scope));\n              }\n            } else {\n              JSType type = createFromTypeNodesInternal(\n                  arg, sourceName, scope);\n              if (arg.getType() == Token.EQUALS) {\n                boolean addSuccess = paramBuilder.addOptionalParams(type);\n                if (!addSuccess) {\n                  reporter.warning(\n                      ScriptRuntime.getMessage0(\"msg.jsdoc.function.varargs\"),\n                      sourceName, arg.getLineno(), arg.getCharno());\n                }\n              } else {\n                paramBuilder.addRequiredParams(type);\n              }\n            }\n          }\n          current = current.getNext();\n        }\n\n        JSType returnType =\n            createFromTypeNodesInternal(current, sourceName, scope);\n\n        return new FunctionBuilder(this)\n            .withParams(paramBuilder)\n            .withReturnType(returnType)\n            .withTypeOfThis(thisType)\n            .setIsConstructor(isConstructor)\n            .build();\n    }",
      "info" : "SwitchStatement[52981-58641]:SwitchStatement[53165-58825]"
    }, {
      "left" : "case Token.LC:",
      "right" : "case Token.LC:",
      "info" : "SwitchCase[53010-53024]:SwitchCase[53194-53208]"
    }, {
      "left" : "return createRecordTypeFromNodes(\n            n.getFirstChild(), sourceName, scope);",
      "right" : "return createRecordTypeFromNodes(\n            n.getFirstChild(), sourceName, scope);",
      "info" : "ReturnStatement[53049-53133]:ReturnStatement[53233-53317]"
    }, {
      "left" : "case Token.BANG:",
      "right" : "case Token.BANG:",
      "info" : "SwitchCase[53141-53157]:SwitchCase[53325-53341]"
    }, {
      "left" : "return createFromTypeNodesInternal(\n            n.getFirstChild(), sourceName, scope)\n            .restrictByNotNullOrUndefined();",
      "right" : "return createFromTypeNodesInternal(\n            n.getFirstChild(), sourceName, scope)\n            .restrictByNotNullOrUndefined();",
      "info" : "ReturnStatement[53182-53312]:ReturnStatement[53366-53496]"
    }, {
      "left" : "case Token.QMARK:",
      "right" : "case Token.QMARK:",
      "info" : "SwitchCase[53320-53337]:SwitchCase[53504-53521]"
    }, {
      "left" : "Node firstChild = n.getFirstChild();",
      "right" : "Node firstChild = n.getFirstChild();",
      "info" : "VariableDeclarationStatement[53369-53405]:VariableDeclarationStatement[53553-53589]"
    }, {
      "left" : "if (firstChild == null)",
      "right" : "if (firstChild == null)",
      "info" : "IfStatement[53414-53495]:IfStatement[53598-53679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53438-53495]:Block[53622-53679]"
    }, {
      "left" : "return getNativeType(UNKNOWN_TYPE);",
      "right" : "return getNativeType(UNKNOWN_TYPE);",
      "info" : "ReturnStatement[53450-53485]:ReturnStatement[53634-53669]"
    }, {
      "left" : "return createDefaultObjectUnion(\n            createFromTypeNodesInternal(\n                firstChild, sourceName, scope));",
      "right" : "return createDefaultObjectUnion(\n            createFromTypeNodesInternal(\n                firstChild, sourceName, scope));",
      "info" : "ReturnStatement[53504-53626]:ReturnStatement[53688-53810]"
    }, {
      "left" : "case Token.EQUALS:",
      "right" : "case Token.EQUALS:",
      "info" : "SwitchCase[53634-53652]:SwitchCase[53818-53836]"
    }, {
      "left" : "return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));",
      "right" : "return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));",
      "info" : "ReturnStatement[53673-53796]:ReturnStatement[53857-53980]"
    }, {
      "left" : "case Token.ELLIPSIS:",
      "right" : "case Token.ELLIPSIS:",
      "info" : "SwitchCase[53804-53824]:SwitchCase[53988-54008]"
    }, {
      "left" : "return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));",
      "right" : "return createOptionalType(\n            createFromTypeNodesInternal(\n                n.getFirstChild(), sourceName, scope));",
      "info" : "ReturnStatement[53845-53968]:ReturnStatement[54029-54152]"
    }, {
      "left" : "case Token.STAR:",
      "right" : "case Token.STAR:",
      "info" : "SwitchCase[53976-53992]:SwitchCase[54160-54176]"
    }, {
      "left" : "return getNativeType(ALL_TYPE);",
      "right" : "return getNativeType(ALL_TYPE);",
      "info" : "ReturnStatement[54016-54047]:ReturnStatement[54200-54231]"
    }, {
      "left" : "case Token.LB:",
      "right" : "case Token.LB:",
      "info" : "SwitchCase[54055-54069]:SwitchCase[54239-54253]"
    }, {
      "left" : "return getNativeType(ARRAY_TYPE);",
      "right" : "return getNativeType(ARRAY_TYPE);",
      "info" : "ReturnStatement[54167-54200]:ReturnStatement[54351-54384]"
    }, {
      "left" : "case Token.PIPE:",
      "right" : "case Token.PIPE:",
      "info" : "SwitchCase[54208-54224]:SwitchCase[54392-54408]"
    }, {
      "left" : "UnionTypeBuilder builder = new UnionTypeBuilder(this);",
      "right" : "UnionTypeBuilder builder = new UnionTypeBuilder(this);",
      "info" : "VariableDeclarationStatement[54247-54301]:VariableDeclarationStatement[54431-54485]"
    }, {
      "left" : "for (Node child = n.getFirstChild(); child != null;\n             child = child.getNext())",
      "right" : "for (Node child = n.getFirstChild(); child != null;\n             child = child.getNext())",
      "info" : "ForStatement[54310-54513]:ForStatement[54494-54697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54400-54513]:Block[54584-54697]"
    }, {
      "left" : "builder.addAlternate(\n              createFromTypeNodesInternal(child, sourceName, scope));",
      "right" : "builder.addAlternate(\n              createFromTypeNodesInternal(child, sourceName, scope));",
      "info" : "ExpressionStatement[54412-54503]:ExpressionStatement[54596-54687]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[54522-54545]:ReturnStatement[54706-54729]"
    }, {
      "left" : "case Token.EMPTY:",
      "right" : "case Token.EMPTY:",
      "info" : "SwitchCase[54553-54570]:SwitchCase[54737-54754]"
    }, {
      "left" : "return getNativeType(UNKNOWN_TYPE);",
      "right" : "return getNativeType(UNKNOWN_TYPE);",
      "info" : "ReturnStatement[54635-54670]:ReturnStatement[54819-54854]"
    }, {
      "left" : "case Token.VOID:",
      "right" : "case Token.VOID:",
      "info" : "SwitchCase[54678-54694]:SwitchCase[54862-54878]"
    }, {
      "left" : "return getNativeType(VOID_TYPE);",
      "right" : "return getNativeType(VOID_TYPE);",
      "info" : "ReturnStatement[54754-54786]:ReturnStatement[54938-54970]"
    }, {
      "left" : "case Token.STRING:",
      "right" : "case Token.STRING:",
      "info" : "SwitchCase[54794-54812]:SwitchCase[54978-54996]"
    }, {
      "left" : "JSType namedType = getType(scope, n.getString(), sourceName,\n            n.getLineno(), n.getCharno());",
      "right" : "JSType namedType = getType(scope, n.getString(), sourceName,\n            n.getLineno(), n.getCharno());",
      "info" : "VariableDeclarationStatement[54821-54924]:VariableDeclarationStatement[55005-55108]"
    }, {
      "left" : "if (resolveMode != ResolveMode.LAZY_NAMES)",
      "right" : "if (resolveMode != ResolveMode.LAZY_NAMES)",
      "info" : "IfStatement[54933-55053]:IfStatement[55117-55237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54976-55053]:Block[55160-55237]"
    }, {
      "left" : "namedType = namedType.resolveInternal(reporter, scope);",
      "right" : "namedType = namedType.resolveInternal(reporter, scope);",
      "info" : "ExpressionStatement[54988-55043]:ExpressionStatement[55172-55227]"
    }, {
      "left" : "if ((namedType instanceof ObjectType) &&\n            !(nonNullableTypeNames.contains(n.getString())))",
      "right" : "if ((namedType instanceof ObjectType) &&\n            !(nonNullableTypeNames.contains(n.getString())))",
      "info" : "IfStatement[55062-56032]:IfStatement[55246-56216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55164-55987]:Block[55348-56171]"
    }, {
      "left" : "Node typeList = n.getFirstChild();",
      "right" : "Node typeList = n.getFirstChild();",
      "info" : "VariableDeclarationStatement[55176-55210]:VariableDeclarationStatement[55360-55394]"
    }, {
      "left" : "if (typeList != null &&\n              (\"Array\".equals(n.getString()) ||\n               \"Object\".equals(n.getString())))",
      "right" : "if (typeList != null &&\n              (\"Array\".equals(n.getString()) ||\n               \"Object\".equals(n.getString())))",
      "info" : "IfStatement[55221-55923]:IfStatement[55405-56107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55341-55923]:Block[55525-56107]"
    }, {
      "left" : "JSType parameterType =\n                createFromTypeNodesInternal(\n                    typeList.getLastChild(), sourceName, scope);",
      "right" : "JSType parameterType =\n                createFromTypeNodesInternal(\n                    typeList.getLastChild(), sourceName, scope);",
      "info" : "VariableDeclarationStatement[55355-55487]:VariableDeclarationStatement[55539-55671]"
    }, {
      "left" : "namedType = new ParameterizedType(\n                this, (ObjectType) namedType, parameterType);",
      "right" : "namedType = new ParameterizedType(\n                this, (ObjectType) namedType, parameterType);",
      "info" : "ExpressionStatement[55500-55596]:ExpressionStatement[55684-55780]"
    }, {
      "left" : "if (typeList.hasMoreThanOneChild())",
      "right" : "if (typeList.hasMoreThanOneChild())",
      "info" : "IfStatement[55609-55911]:IfStatement[55793-56095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55645-55911]:Block[55829-56095]"
    }, {
      "left" : "JSType indexType =\n                  createFromTypeNodesInternal(\n                      typeList.getFirstChild(), sourceName, scope);",
      "right" : "JSType indexType =\n                  createFromTypeNodesInternal(\n                      typeList.getFirstChild(), sourceName, scope);",
      "info" : "VariableDeclarationStatement[55661-55794]:VariableDeclarationStatement[55845-55978]"
    }, {
      "left" : "namedType = new IndexedType(\n                  this, (ObjectType) namedType, indexType);",
      "right" : "namedType = new IndexedType(\n                  this, (ObjectType) namedType, indexType);",
      "info" : "ExpressionStatement[55809-55897]:ExpressionStatement[55993-56081]"
    }, {
      "left" : "return createDefaultObjectUnion(namedType);",
      "right" : "return createDefaultObjectUnion(namedType);",
      "info" : "ReturnStatement[55934-55977]:ReturnStatement[56118-56161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55993-56032]:Block[56177-56216]"
    }, {
      "left" : "return namedType;",
      "right" : "return namedType;",
      "info" : "ReturnStatement[56005-56022]:ReturnStatement[56189-56206]"
    }, {
      "left" : "case Token.FUNCTION:",
      "right" : "case Token.FUNCTION:",
      "info" : "SwitchCase[56040-56060]:SwitchCase[56224-56244]"
    }, {
      "left" : "ObjectType thisType = null;",
      "right" : "ObjectType thisType = null;",
      "info" : "VariableDeclarationStatement[56069-56096]:VariableDeclarationStatement[56253-56280]"
    }, {
      "left" : "boolean isConstructor = false;",
      "right" : "boolean isConstructor = false;",
      "info" : "VariableDeclarationStatement[56105-56135]:VariableDeclarationStatement[56289-56319]"
    }, {
      "left" : "Node current = n.getFirstChild();",
      "right" : "Node current = n.getFirstChild();",
      "info" : "VariableDeclarationStatement[56144-56177]:VariableDeclarationStatement[56328-56361]"
    }, {
      "left" : "if (current.getType() == Token.THIS ||\n            current.getType() == Token.NEW)",
      "right" : "if (current.getType() == Token.THIS ||\n            current.getType() == Token.NEW)",
      "info" : "IfStatement[56186-57018]:IfStatement[56370-57202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56269-57018]:Block[56453-57202]"
    }, {
      "left" : "Node contextNode = current.getFirstChild();",
      "right" : "Node contextNode = current.getFirstChild();",
      "info" : "VariableDeclarationStatement[56281-56324]:VariableDeclarationStatement[56465-56508]"
    }, {
      "left" : "thisType =\n              ObjectType.cast(\n                  createFromTypeNodesInternal(\n                      contextNode, sourceName, scope)\n                  .restrictByNotNullOrUndefined());",
      "right" : "thisType =\n              ObjectType.cast(\n                  createFromTypeNodesInternal(\n                      contextNode, sourceName, scope)\n                  .restrictByNotNullOrUndefined());",
      "info" : "ExpressionStatement[56335-56529]:ExpressionStatement[56519-56713]"
    }, {
      "left" : "if (thisType == null)",
      "right" : "if (thisType == null)",
      "info" : "IfStatement[56540-56910]:IfStatement[56724-57094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56562-56910]:Block[56746-57094]"
    }, {
      "left" : "reporter.warning(\n                ScriptRuntime.getMessage0(\n                    current.getType() == Token.THIS ?\n                    \"msg.jsdoc.function.thisnotobject\" :\n                    \"msg.jsdoc.function.newnotobject\"),\n                sourceName,\n                contextNode.getLineno(), contextNode.getCharno());",
      "right" : "reporter.warning(\n                ScriptRuntime.getMessage0(\n                    current.getType() == Token.THIS ?\n                    \"msg.jsdoc.function.thisnotobject\" :\n                    \"msg.jsdoc.function.newnotobject\"),\n                sourceName,\n                contextNode.getLineno(), contextNode.getCharno());",
      "info" : "ExpressionStatement[56576-56898]:ExpressionStatement[56760-57082]"
    }, {
      "left" : "isConstructor = current.getType() == Token.NEW;",
      "right" : "isConstructor = current.getType() == Token.NEW;",
      "info" : "ExpressionStatement[56922-56969]:ExpressionStatement[57106-57153]"
    }, {
      "left" : "current = current.getNext();",
      "right" : "current = current.getNext();",
      "info" : "ExpressionStatement[56980-57008]:ExpressionStatement[57164-57192]"
    }, {
      "left" : "FunctionParamBuilder paramBuilder = new FunctionParamBuilder(this);",
      "right" : "FunctionParamBuilder paramBuilder = new FunctionParamBuilder(this);",
      "info" : "VariableDeclarationStatement[57028-57095]:VariableDeclarationStatement[57212-57279]"
    }, {
      "left" : "if (current.getType() == Token.PARAM_LIST)",
      "right" : "if (current.getType() == Token.PARAM_LIST)",
      "info" : "IfStatement[57105-58312]:IfStatement[57289-58496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57148-58312]:Block[57332-58496]"
    }, {
      "left" : "Node args = current.getFirstChild();",
      "right" : "Node args = current.getFirstChild();",
      "info" : "VariableDeclarationStatement[57160-57196]:VariableDeclarationStatement[57344-57380]"
    }, {
      "left" : "for (Node arg = current.getFirstChild(); arg != null;\n               arg = arg.getNext())",
      "right" : "for (Node arg = current.getFirstChild(); arg != null;\n               arg = arg.getNext())",
      "info" : "ForStatement[57207-58263]:ForStatement[57391-58447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57297-58263]:Block[57481-58447]"
    }, {
      "left" : "if (arg.getType() == Token.ELLIPSIS)",
      "right" : "if (arg.getType() == Token.ELLIPSIS)",
      "info" : "IfStatement[57311-58251]:IfStatement[57495-58435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57348-57674]:Block[57532-57858]"
    }, {
      "left" : "if (arg.getChildCount() == 0)",
      "right" : "if (arg.getChildCount() == 0)",
      "info" : "IfStatement[57364-57660]:IfStatement[57548-57844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57394-57481]:Block[57578-57665]"
    }, {
      "left" : "paramBuilder.addVarArgs(getNativeType(UNKNOWN_TYPE));",
      "right" : "paramBuilder.addVarArgs(getNativeType(UNKNOWN_TYPE));",
      "info" : "ExpressionStatement[57412-57465]:ExpressionStatement[57596-57649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57487-57660]:Block[57671-57844]"
    }, {
      "left" : "paramBuilder.addVarArgs(\n                    createFromTypeNodesInternal(\n                        arg.getFirstChild(), sourceName, scope));",
      "right" : "paramBuilder.addVarArgs(\n                    createFromTypeNodesInternal(\n                        arg.getFirstChild(), sourceName, scope));",
      "info" : "ExpressionStatement[57505-57644]:ExpressionStatement[57689-57828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57680-58251]:Block[57864-58435]"
    }, {
      "left" : "JSType type = createFromTypeNodesInternal(\n                  arg, sourceName, scope);",
      "right" : "JSType type = createFromTypeNodesInternal(\n                  arg, sourceName, scope);",
      "info" : "VariableDeclarationStatement[57696-57781]:VariableDeclarationStatement[57880-57965]"
    }, {
      "left" : "if (arg.getType() == Token.EQUALS)",
      "right" : "if (arg.getType() == Token.EQUALS)",
      "info" : "IfStatement[57796-58237]:IfStatement[57980-58421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57831-58160]:Block[58015-58344]"
    }, {
      "left" : "boolean addSuccess = paramBuilder.addOptionalParams(type);",
      "right" : "boolean addSuccess = paramBuilder.addOptionalParams(type);",
      "info" : "VariableDeclarationStatement[57849-57907]:VariableDeclarationStatement[58033-58091]"
    }, {
      "left" : "if (!addSuccess)",
      "right" : "if (!addSuccess)",
      "info" : "IfStatement[57924-58144]:IfStatement[58108-58328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57941-58144]:Block[58125-58328]"
    }, {
      "left" : "reporter.warning(\n                      ScriptRuntime.getMessage0(\"msg.jsdoc.function.varargs\"),\n                      sourceName, arg.getLineno(), arg.getCharno());",
      "right" : "reporter.warning(\n                      ScriptRuntime.getMessage0(\"msg.jsdoc.function.varargs\"),\n                      sourceName, arg.getLineno(), arg.getCharno());",
      "info" : "ExpressionStatement[57961-58126]:ExpressionStatement[58145-58310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58166-58237]:Block[58350-58421]"
    }, {
      "left" : "paramBuilder.addRequiredParams(type);",
      "right" : "paramBuilder.addRequiredParams(type);",
      "info" : "ExpressionStatement[58184-58221]:ExpressionStatement[58368-58405]"
    }, {
      "left" : "current = current.getNext();",
      "right" : "current = current.getNext();",
      "info" : "ExpressionStatement[58274-58302]:ExpressionStatement[58458-58486]"
    }, {
      "left" : "JSType returnType =\n            createFromTypeNodesInternal(current, sourceName, scope);",
      "right" : "JSType returnType =\n            createFromTypeNodesInternal(current, sourceName, scope);",
      "info" : "VariableDeclarationStatement[58322-58410]:VariableDeclarationStatement[58506-58594]"
    }, {
      "left" : "return new FunctionBuilder(this)\n            .withParams(paramBuilder)\n            .withReturnType(returnType)\n            .withTypeOfThis(thisType)\n            .setIsConstructor(isConstructor)\n            .build();",
      "right" : "return new FunctionBuilder(this)\n            .withParams(paramBuilder)\n            .withReturnType(returnType)\n            .withTypeOfThis(thisType)\n            .setIsConstructor(isConstructor)\n            .build();",
      "info" : "ReturnStatement[58420-58635]:ReturnStatement[58604-58819]"
    }, {
      "left" : "throw new IllegalStateException(\n        \"Unexpected node in type expression: \" + n.toString());",
      "right" : "throw new IllegalStateException(\n        \"Unexpected node in type expression: \" + n.toString());",
      "info" : "ThrowStatement[58647-58743]:ThrowStatement[58831-58927]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[58974-58981]:Modifier[59158-59165]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[58982-58988]:SimpleType[59166-59172]"
    }, {
      "left" : "createRecordTypeFromNodes",
      "right" : "createRecordTypeFromNodes",
      "info" : "SimpleName[58989-59014]:SimpleName[59173-59198]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[59015-59021]:SingleVariableDeclaration[59199-59205]"
    }, {
      "left" : "String sourceName",
      "right" : "String sourceName",
      "info" : "SingleVariableDeclaration[59023-59040]:SingleVariableDeclaration[59207-59224]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[59048-59073]:SingleVariableDeclaration[59232-59257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59075-60643]:Block[59259-60827]"
    }, {
      "left" : "RecordTypeBuilder builder = new RecordTypeBuilder(this);",
      "right" : "RecordTypeBuilder builder = new RecordTypeBuilder(this);",
      "info" : "VariableDeclarationStatement[59082-59138]:VariableDeclarationStatement[59266-59322]"
    }, {
      "left" : "for (Node fieldTypeNode = n.getFirstChild();\n         fieldTypeNode != null;\n         fieldTypeNode = fieldTypeNode.getNext())",
      "right" : "for (Node fieldTypeNode = n.getFirstChild();\n         fieldTypeNode != null;\n         fieldTypeNode = fieldTypeNode.getNext())",
      "info" : "ForStatement[59194-60610]:ForStatement[59378-60794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59321-60610]:Block[59505-60794]"
    }, {
      "left" : "Node fieldNameNode = fieldTypeNode;",
      "right" : "Node fieldNameNode = fieldTypeNode;",
      "info" : "VariableDeclarationStatement[59364-59399]:VariableDeclarationStatement[59548-59583]"
    }, {
      "left" : "boolean hasType = false;",
      "right" : "boolean hasType = false;",
      "info" : "VariableDeclarationStatement[59406-59430]:VariableDeclarationStatement[59590-59614]"
    }, {
      "left" : "if (fieldTypeNode.getType() == Token.COLON)",
      "right" : "if (fieldTypeNode.getType() == Token.COLON)",
      "info" : "IfStatement[59438-59570]:IfStatement[59622-59754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59482-59570]:Block[59666-59754]"
    }, {
      "left" : "fieldNameNode = fieldTypeNode.getFirstChild();",
      "right" : "fieldNameNode = fieldTypeNode.getFirstChild();",
      "info" : "ExpressionStatement[59492-59538]:ExpressionStatement[59676-59722]"
    }, {
      "left" : "hasType = true;",
      "right" : "hasType = true;",
      "info" : "ExpressionStatement[59547-59562]:ExpressionStatement[59731-59746]"
    }, {
      "left" : "String fieldName = fieldNameNode.getString();",
      "right" : "String fieldName = fieldNameNode.getString();",
      "info" : "VariableDeclarationStatement[59578-59623]:VariableDeclarationStatement[59762-59807]"
    }, {
      "left" : "if (fieldName.startsWith(\"'\") || fieldName.startsWith(\"\\\"\"))",
      "right" : "if (fieldName.startsWith(\"'\") || fieldName.startsWith(\"\\\"\"))",
      "info" : "IfStatement[59769-59907]:IfStatement[59953-60091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59830-59907]:Block[60014-60091]"
    }, {
      "left" : "fieldName = fieldName.substring(1, fieldName.length() - 1);",
      "right" : "fieldName = fieldName.substring(1, fieldName.length() - 1);",
      "info" : "ExpressionStatement[59840-59899]:ExpressionStatement[60024-60083]"
    }, {
      "left" : "JSType fieldType = null;",
      "right" : "JSType fieldType = null;",
      "info" : "VariableDeclarationStatement[59949-59973]:VariableDeclarationStatement[60133-60157]"
    }, {
      "left" : "if (hasType)",
      "right" : "if (hasType)",
      "info" : "IfStatement[59981-60270]:IfStatement[60165-60454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59994-60150]:Block[60178-60334]"
    }, {
      "left" : "fieldType = createFromTypeNodesInternal(\n            fieldTypeNode.getLastChild(), sourceName, scope);",
      "right" : "fieldType = createFromTypeNodesInternal(\n            fieldTypeNode.getLastChild(), sourceName, scope);",
      "info" : "ExpressionStatement[60040-60142]:ExpressionStatement[60224-60326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60156-60270]:Block[60340-60454]"
    }, {
      "left" : "fieldType = getNativeType(JSTypeNative.UNKNOWN_TYPE);",
      "right" : "fieldType = getNativeType(JSTypeNative.UNKNOWN_TYPE);",
      "info" : "ExpressionStatement[60209-60262]:ExpressionStatement[60393-60446]"
    }, {
      "left" : "if (builder.addProperty(fieldName, fieldType, fieldNameNode) == null)",
      "right" : "if (builder.addProperty(fieldName, fieldType, fieldNameNode) == null)",
      "info" : "IfStatement[60319-60604]:IfStatement[60503-60788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60389-60604]:Block[60573-60788]"
    }, {
      "left" : "reporter.warning(\n            \"Duplicate record field \" + fieldName,\n            sourceName,\n            n.getLineno(), fieldNameNode.getCharno());",
      "right" : "reporter.warning(\n            \"Duplicate record field \" + fieldName,\n            sourceName,\n            n.getLineno(), fieldNameNode.getCharno());",
      "info" : "ExpressionStatement[60449-60596]:ExpressionStatement[60633-60780]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[60616-60639]:ReturnStatement[60800-60823]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60693-60699]:Modifier[60877-60883]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60700-60704]:PrimitiveType[60884-60888]"
    }, {
      "left" : "setTemplateTypeName",
      "right" : "setTemplateTypeName",
      "info" : "SimpleName[60705-60724]:SimpleName[60889-60908]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[60725-60736]:SingleVariableDeclaration[60909-60920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60738-60821]:Block[60922-61005]"
    }, {
      "left" : "templateTypeName = name;",
      "right" : "templateTypeName = name;",
      "info" : "ExpressionStatement[60744-60768]:ExpressionStatement[60928-60952]"
    }, {
      "left" : "templateType = new TemplateType(this, name);",
      "right" : "templateType = new TemplateType(this, name);",
      "info" : "ExpressionStatement[60773-60817]:ExpressionStatement[60957-61001]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60873-60879]:Modifier[61057-61063]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60880-60884]:PrimitiveType[61064-61068]"
    }, {
      "left" : "clearTemplateTypeName",
      "right" : "clearTemplateTypeName",
      "info" : "SimpleName[60885-60906]:SimpleName[61069-61090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60909-60968]:Block[61093-61152]"
    }, {
      "left" : "templateTypeName = null;",
      "right" : "templateTypeName = null;",
      "info" : "ExpressionStatement[60915-60939]:ExpressionStatement[61099-61123]"
    }, {
      "left" : "templateType = null;",
      "right" : "templateType = null;",
      "info" : "ExpressionStatement[60944-60964]:ExpressionStatement[61128-61148]"
    } ]
  },
  "interFileMappings" : { }
}