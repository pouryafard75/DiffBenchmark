{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "HelpFormatter",
      "right" : "HelpFormatter",
      "info" : "TypeDeclaration[1032-29775]:TypeDeclaration[1032-29711]"
    }, {
      "left" : "public static final int DEFAULT_WIDTH = 74;",
      "right" : "public static final int DEFAULT_WIDTH = 74;",
      "info" : "FieldDeclaration[1337-1429]:FieldDeclaration[1337-1429]"
    }, {
      "left" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "right" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "info" : "FieldDeclaration[1435-1532]:FieldDeclaration[1435-1532]"
    }, {
      "left" : "public static final int DEFAULT_DESC_PAD = 3;",
      "right" : "public static final int DEFAULT_DESC_PAD = 3;",
      "info" : "FieldDeclaration[1538-1689]:FieldDeclaration[1538-1689]"
    }, {
      "left" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "right" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "info" : "FieldDeclaration[1695-1828]:FieldDeclaration[1695-1828]"
    }, {
      "left" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "right" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "info" : "FieldDeclaration[1834-1926]:FieldDeclaration[1834-1926]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "right" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "info" : "FieldDeclaration[1932-2032]:FieldDeclaration[1932-2032]"
    }, {
      "left" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "right" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "info" : "FieldDeclaration[2038-2130]:FieldDeclaration[2038-2130]"
    }, {
      "left" : "public int defaultWidth = DEFAULT_WIDTH;",
      "right" : "public int defaultWidth = DEFAULT_WIDTH;",
      "info" : "FieldDeclaration[2218-2430]:FieldDeclaration[2218-2430]"
    }, {
      "left" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "right" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "info" : "FieldDeclaration[2436-2672]:FieldDeclaration[2436-2672]"
    }, {
      "left" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "right" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "info" : "FieldDeclaration[2678-2954]:FieldDeclaration[2678-2954]"
    }, {
      "left" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "right" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "info" : "FieldDeclaration[2960-3228]:FieldDeclaration[2960-3228]"
    }, {
      "left" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "right" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "info" : "FieldDeclaration[3234-3466]:FieldDeclaration[3234-3466]"
    }, {
      "left" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "right" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "info" : "FieldDeclaration[3472-3690]:FieldDeclaration[3472-3690]"
    }, {
      "left" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "right" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "info" : "FieldDeclaration[3696-3927]:FieldDeclaration[3696-3927]"
    }, {
      "left" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "right" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "info" : "FieldDeclaration[3933-4150]:FieldDeclaration[3933-4150]"
    }, {
      "left" : "protected Comparator optionComparator = new OptionComparator();",
      "right" : "protected Comparator optionComparator = new OptionComparator();",
      "info" : "FieldDeclaration[4156-4387]:FieldDeclaration[4156-4387]"
    }, {
      "left" : "public void setWidth(int width)",
      "right" : "public void setWidth(int width)",
      "info" : "MethodDeclaration[4393-4564]:MethodDeclaration[4393-4564]"
    }, {
      "left" : "public int getWidth()",
      "right" : "public int getWidth()",
      "info" : "MethodDeclaration[4570-4710]:MethodDeclaration[4570-4710]"
    }, {
      "left" : "public void setLeftPadding(int padding)",
      "right" : "public void setLeftPadding(int padding)",
      "info" : "MethodDeclaration[4716-4913]:MethodDeclaration[4716-4913]"
    }, {
      "left" : "public int getLeftPadding()",
      "right" : "public int getLeftPadding()",
      "info" : "MethodDeclaration[4919-5079]:MethodDeclaration[4919-5079]"
    }, {
      "left" : "public void setDescPadding(int padding)",
      "right" : "public void setDescPadding(int padding)",
      "info" : "MethodDeclaration[5085-5282]:MethodDeclaration[5085-5282]"
    }, {
      "left" : "public int getDescPadding()",
      "right" : "public int getDescPadding()",
      "info" : "MethodDeclaration[5288-5448]:MethodDeclaration[5288-5448]"
    }, {
      "left" : "public void setSyntaxPrefix(String prefix)",
      "right" : "public void setSyntaxPrefix(String prefix)",
      "info" : "MethodDeclaration[5454-5659]:MethodDeclaration[5454-5659]"
    }, {
      "left" : "public String getSyntaxPrefix()",
      "right" : "public String getSyntaxPrefix()",
      "info" : "MethodDeclaration[5665-5836]:MethodDeclaration[5665-5836]"
    }, {
      "left" : "public void setNewLine(String newline)",
      "right" : "public void setNewLine(String newline)",
      "info" : "MethodDeclaration[5842-6030]:MethodDeclaration[5842-6030]"
    }, {
      "left" : "public String getNewLine()",
      "right" : "public String getNewLine()",
      "info" : "MethodDeclaration[6036-6187]:MethodDeclaration[6036-6187]"
    }, {
      "left" : "public void setOptPrefix(String prefix)",
      "right" : "public void setOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6193-6386]:MethodDeclaration[6193-6386]"
    }, {
      "left" : "public String getOptPrefix()",
      "right" : "public String getOptPrefix()",
      "info" : "MethodDeclaration[6392-6551]:MethodDeclaration[6392-6551]"
    }, {
      "left" : "public void setLongOptPrefix(String prefix)",
      "right" : "public void setLongOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6557-6766]:MethodDeclaration[6557-6766]"
    }, {
      "left" : "public String getLongOptPrefix()",
      "right" : "public String getLongOptPrefix()",
      "info" : "MethodDeclaration[6772-6947]:MethodDeclaration[6772-6947]"
    }, {
      "left" : "public void setArgName(String name)",
      "right" : "public void setArgName(String name)",
      "info" : "MethodDeclaration[6953-7132]:MethodDeclaration[6953-7132]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[7138-7289]:MethodDeclaration[7138-7289]"
    }, {
      "left" : "public Comparator getOptionComparator()",
      "right" : "public Comparator getOptionComparator()",
      "info" : "MethodDeclaration[7295-7547]:MethodDeclaration[7295-7547]"
    }, {
      "left" : "public void setOptionComparator(Comparator comparator)",
      "right" : "public void setOptionComparator(Comparator comparator)",
      "info" : "MethodDeclaration[7553-7994]:MethodDeclaration[7553-7994]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options)",
      "info" : "MethodDeclaration[8000-8427]:MethodDeclaration[8000-8427]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "info" : "MethodDeclaration[8433-8975]:MethodDeclaration[8433-8975]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[8981-9565]:MethodDeclaration[8981-9565]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[9571-10284]:MethodDeclaration[9571-10284]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[10290-10966]:MethodDeclaration[10290-10966]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[10972-11900]:MethodDeclaration[10972-11900]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "info" : "MethodDeclaration[11906-12901]:MethodDeclaration[11906-12901]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[12908-14587]:MethodDeclaration[12908-14587]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "right" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "info" : "MethodDeclaration[14593-16689]:MethodDeclaration[14593-16689]"
    }, {
      "left" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "right" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "info" : "MethodDeclaration[16695-17794]:MethodDeclaration[16695-17794]"
    }, {
      "left" : "private static void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "right" : "private static void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "info" : "MethodDeclaration[17800-18738]:MethodDeclaration[17800-18738]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "right" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "info" : "MethodDeclaration[18744-19285]:MethodDeclaration[18744-19285]"
    }, {
      "left" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "right" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "info" : "MethodDeclaration[19291-20110]:MethodDeclaration[19291-20110]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "info" : "MethodDeclaration[20116-20499]:MethodDeclaration[20116-20499]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[20505-21102]:MethodDeclaration[20505-21102]"
    }, {
      "left" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "right" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "info" : "MethodDeclaration[21190-24261]:MethodDeclaration[21190-24261]"
    }, {
      "left" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "right" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[24267-25825]:MethodDeclaration[24267-25761]"
    }, {
      "left" : "protected int findWrapPos(String text, int width, int startPos)",
      "right" : "protected int findWrapPos(String text, int width, int startPos)",
      "info" : "MethodDeclaration[25831-27649]:MethodDeclaration[25767-27585]"
    }, {
      "left" : "protected String createPadding(int len)",
      "right" : "protected String createPadding(int len)",
      "info" : "MethodDeclaration[27655-28067]:MethodDeclaration[27591-28003]"
    }, {
      "left" : "protected String rtrim(String s)",
      "right" : "protected String rtrim(String s)",
      "info" : "MethodDeclaration[28073-28601]:MethodDeclaration[28009-28537]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "TypeDeclaration[28847-29773]:TypeDeclaration[28783-29709]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[29035-29767]:MethodDeclaration[28971-29703]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4522-4564]:Block[4522-4564]"
    }, {
      "left" : "this.defaultWidth = width;",
      "right" : "this.defaultWidth = width;",
      "info" : "ExpressionStatement[4532-4558]:ExpressionStatement[4532-4558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4674-4710]:Block[4674-4710]"
    }, {
      "left" : "return defaultWidth;",
      "right" : "return defaultWidth;",
      "info" : "ReturnStatement[4684-4704]:ReturnStatement[4684-4704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4867-4913]:Block[4867-4913]"
    }, {
      "left" : "this.defaultLeftPad = padding;",
      "right" : "this.defaultLeftPad = padding;",
      "info" : "ExpressionStatement[4877-4907]:ExpressionStatement[4877-4907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5041-5079]:Block[5041-5079]"
    }, {
      "left" : "return defaultLeftPad;",
      "right" : "return defaultLeftPad;",
      "info" : "ReturnStatement[5051-5073]:ReturnStatement[5051-5073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5236-5282]:Block[5236-5282]"
    }, {
      "left" : "this.defaultDescPad = padding;",
      "right" : "this.defaultDescPad = padding;",
      "info" : "ExpressionStatement[5246-5276]:ExpressionStatement[5246-5276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5410-5448]:Block[5410-5448]"
    }, {
      "left" : "return defaultDescPad;",
      "right" : "return defaultDescPad;",
      "info" : "ReturnStatement[5420-5442]:ReturnStatement[5420-5442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5609-5659]:Block[5609-5659]"
    }, {
      "left" : "this.defaultSyntaxPrefix = prefix;",
      "right" : "this.defaultSyntaxPrefix = prefix;",
      "info" : "ExpressionStatement[5619-5653]:ExpressionStatement[5619-5653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5793-5836]:Block[5793-5836]"
    }, {
      "left" : "return defaultSyntaxPrefix;",
      "right" : "return defaultSyntaxPrefix;",
      "info" : "ReturnStatement[5803-5830]:ReturnStatement[5803-5830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5984-6030]:Block[5984-6030]"
    }, {
      "left" : "this.defaultNewLine = newline;",
      "right" : "this.defaultNewLine = newline;",
      "info" : "ExpressionStatement[5994-6024]:ExpressionStatement[5994-6024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6149-6187]:Block[6149-6187]"
    }, {
      "left" : "return defaultNewLine;",
      "right" : "return defaultNewLine;",
      "info" : "ReturnStatement[6159-6181]:ReturnStatement[6159-6181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6339-6386]:Block[6339-6386]"
    }, {
      "left" : "this.defaultOptPrefix = prefix;",
      "right" : "this.defaultOptPrefix = prefix;",
      "info" : "ExpressionStatement[6349-6380]:ExpressionStatement[6349-6380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6511-6551]:Block[6511-6551]"
    }, {
      "left" : "return defaultOptPrefix;",
      "right" : "return defaultOptPrefix;",
      "info" : "ReturnStatement[6521-6545]:ReturnStatement[6521-6545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6715-6766]:Block[6715-6766]"
    }, {
      "left" : "this.defaultLongOptPrefix = prefix;",
      "right" : "this.defaultLongOptPrefix = prefix;",
      "info" : "ExpressionStatement[6725-6760]:ExpressionStatement[6725-6760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6903-6947]:Block[6903-6947]"
    }, {
      "left" : "return defaultLongOptPrefix;",
      "right" : "return defaultLongOptPrefix;",
      "info" : "ReturnStatement[6913-6941]:ReturnStatement[6913-6941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7089-7132]:Block[7089-7132]"
    }, {
      "left" : "this.defaultArgName = name;",
      "right" : "this.defaultArgName = name;",
      "info" : "ExpressionStatement[7099-7126]:ExpressionStatement[7099-7126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7251-7289]:Block[7251-7289]"
    }, {
      "left" : "return defaultArgName;",
      "right" : "return defaultArgName;",
      "info" : "ReturnStatement[7261-7283]:ReturnStatement[7261-7283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7507-7547]:Block[7507-7547]"
    }, {
      "left" : "return optionComparator;",
      "right" : "return optionComparator;",
      "info" : "ReturnStatement[7517-7541]:ReturnStatement[7517-7541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7794-7994]:Block[7794-7994]"
    }, {
      "left" : "if (comparator == null)",
      "right" : "if (comparator == null)",
      "info" : "IfStatement[7804-7988]:IfStatement[7804-7988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7836-7907]:Block[7836-7907]"
    }, {
      "left" : "this.optionComparator = new OptionComparator();",
      "right" : "this.optionComparator = new OptionComparator();",
      "info" : "ExpressionStatement[7850-7897]:ExpressionStatement[7850-7897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7929-7988]:Block[7929-7988]"
    }, {
      "left" : "this.optionComparator = comparator;",
      "right" : "this.optionComparator = comparator;",
      "info" : "ExpressionStatement[7943-7978]:ExpressionStatement[7943-7978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8344-8427]:Block[8344-8427]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "info" : "ExpressionStatement[8354-8421]:ExpressionStatement[8354-8421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8888-8975]:Block[8888-8975]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "info" : "ExpressionStatement[8898-8969]:ExpressionStatement[8898-8969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9492-9565]:Block[9492-9565]"
    }, {
      "left" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[9502-9559]:ExpressionStatement[9502-9559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10193-10284]:Block[10193-10284]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "info" : "ExpressionStatement[10203-10278]:ExpressionStatement[10203-10278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10886-10966]:Block[10886-10966]"
    }, {
      "left" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[10896-10960]:ExpressionStatement[10896-10960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11705-11900]:Block[11705-11900]"
    }, {
      "left" : "PrintWriter pw = new PrintWriter(System.out);",
      "right" : "PrintWriter pw = new PrintWriter(System.out);",
      "info" : "VariableDeclarationStatement[11715-11760]:VariableDeclarationStatement[11715-11760]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "info" : "ExpressionStatement[11770-11874]:ExpressionStatement[11770-11874]"
    }, {
      "left" : "pw.flush();",
      "right" : "pw.flush();",
      "info" : "ExpressionStatement[11883-11894]:ExpressionStatement[11883-11894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12799-12901]:Block[12799-12901]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "info" : "ExpressionStatement[12809-12895]:ExpressionStatement[12809-12895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13909-14587]:Block[13909-14587]"
    }, {
      "left" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "right" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "info" : "IfStatement[13919-14078]:IfStatement[13919-14078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13989-14078]:Block[13989-14078]"
    }, {
      "left" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "right" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "info" : "ThrowStatement[14003-14068]:ThrowStatement[14003-14068]"
    }, {
      "left" : "if (autoUsage)",
      "right" : "if (autoUsage)",
      "info" : "IfStatement[14088-14264]:IfStatement[14088-14264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14111-14181]:Block[14111-14181]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax, options);",
      "right" : "printUsage(pw, width, cmdLineSyntax, options);",
      "info" : "ExpressionStatement[14125-14171]:ExpressionStatement[14125-14171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14203-14264]:Block[14203-14264]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax);",
      "right" : "printUsage(pw, width, cmdLineSyntax);",
      "info" : "ExpressionStatement[14217-14254]:ExpressionStatement[14217-14254]"
    }, {
      "left" : "if ((header != null) && (header.trim().length() > 0))",
      "right" : "if ((header != null) && (header.trim().length() > 0))",
      "info" : "IfStatement[14274-14392]:IfStatement[14274-14392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14336-14392]:Block[14336-14392]"
    }, {
      "left" : "printWrapped(pw, width, header);",
      "right" : "printWrapped(pw, width, header);",
      "info" : "ExpressionStatement[14350-14382]:ExpressionStatement[14350-14382]"
    }, {
      "left" : "printOptions(pw, width, options, leftPad, descPad);",
      "right" : "printOptions(pw, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[14402-14453]:ExpressionStatement[14402-14453]"
    }, {
      "left" : "if ((footer != null) && (footer.trim().length() > 0))",
      "right" : "if ((footer != null) && (footer.trim().length() > 0))",
      "info" : "IfStatement[14463-14581]:IfStatement[14463-14581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14525-14581]:Block[14525-14581]"
    }, {
      "left" : "printWrapped(pw, width, footer);",
      "right" : "printWrapped(pw, width, footer);",
      "info" : "ExpressionStatement[14539-14571]:ExpressionStatement[14539-14571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14992-16689]:Block[14992-16689]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "right" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "info" : "VariableDeclarationStatement[15042-15124]:VariableDeclarationStatement[15042-15124]"
    }, {
      "left" : "final Collection processedGroups = new ArrayList();",
      "right" : "final Collection processedGroups = new ArrayList();",
      "info" : "VariableDeclarationStatement[15187-15238]:VariableDeclarationStatement[15187-15238]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[15273-15287]:VariableDeclarationStatement[15273-15287]"
    }, {
      "left" : "List optList = new ArrayList(options.getOptions());",
      "right" : "List optList = new ArrayList(options.getOptions());",
      "info" : "VariableDeclarationStatement[15297-15348]:VariableDeclarationStatement[15297-15348]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[15357-15406]:ExpressionStatement[15357-15406]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[15451-16568]:ForStatement[15451-16568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15511-16568]:Block[15511-16568]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[15560-15587]:ExpressionStatement[15560-15587]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[15662-15713]:VariableDeclarationStatement[15662-15713]"
    }, {
      "left" : "if (group != null)",
      "right" : "if (group != null)",
      "info" : "IfStatement[15776-16466]:IfStatement[15776-16466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15807-16296]:Block[15807-16296]"
    }, {
      "left" : "if (!processedGroups.contains(group))",
      "right" : "if (!processedGroups.contains(group))",
      "info" : "IfStatement[15892-16170]:IfStatement[15892-16170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15946-16170]:Block[15946-16170]"
    }, {
      "left" : "processedGroups.add(group);",
      "right" : "processedGroups.add(group);",
      "info" : "ExpressionStatement[16027-16054]:ExpressionStatement[16027-16054]"
    }, {
      "left" : "appendOptionGroup(buff, group);",
      "right" : "appendOptionGroup(buff, group);",
      "info" : "ExpressionStatement[16121-16152]:ExpressionStatement[16121-16152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16386-16466]:Block[16386-16466]"
    }, {
      "left" : "appendOption(buff, option, option.isRequired());",
      "right" : "appendOption(buff, option, option.isRequired());",
      "info" : "ExpressionStatement[16404-16452]:ExpressionStatement[16404-16452]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[16480-16558]:IfStatement[16480-16558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16509-16558]:Block[16509-16558]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[16527-16544]:ExpressionStatement[16527-16544]"
    }, {
      "left" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "right" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "info" : "ExpressionStatement[16608-16683]:ExpressionStatement[16608-16683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17147-17794]:Block[17147-17794]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[17157-17231]:IfStatement[17157-17231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17190-17231]:Block[17190-17231]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[17204-17221]:ExpressionStatement[17204-17221]"
    }, {
      "left" : "List optList = new ArrayList(group.getOptions());",
      "right" : "List optList = new ArrayList(group.getOptions());",
      "info" : "VariableDeclarationStatement[17241-17290]:VariableDeclarationStatement[17241-17290]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[17299-17348]:ExpressionStatement[17299-17348]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[17403-17704]:ForStatement[17403-17704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17463-17704]:Block[17463-17704]"
    }, {
      "left" : "appendOption(buff, (Option) i.next(), true);",
      "right" : "appendOption(buff, (Option) i.next(), true);",
      "info" : "ExpressionStatement[17556-17600]:ExpressionStatement[17556-17600]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[17614-17694]:IfStatement[17614-17694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17643-17694]:Block[17643-17694]"
    }, {
      "left" : "buff.append(\" | \");",
      "right" : "buff.append(\" | \");",
      "info" : "ExpressionStatement[17661-17680]:ExpressionStatement[17661-17680]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[17714-17788]:IfStatement[17714-17788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17747-17788]:Block[17747-17788]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[17761-17778]:ExpressionStatement[17761-17778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18149-18738]:Block[18149-18738]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[18159-18223]:IfStatement[18159-18223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18182-18223]:Block[18182-18223]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[18196-18213]:ExpressionStatement[18196-18213]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[18233-18427]:IfStatement[18233-18427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18270-18335]:Block[18270-18335]"
    }, {
      "left" : "buff.append(\"-\").append(option.getOpt());",
      "right" : "buff.append(\"-\").append(option.getOpt());",
      "info" : "ExpressionStatement[18284-18325]:ExpressionStatement[18284-18325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18357-18427]:Block[18357-18427]"
    }, {
      "left" : "buff.append(\"--\").append(option.getLongOpt());",
      "right" : "buff.append(\"--\").append(option.getLongOpt());",
      "info" : "ExpressionStatement[18371-18417]:ExpressionStatement[18371-18417]"
    }, {
      "left" : "if (option.hasArg() && option.hasArgName())",
      "right" : "if (option.hasArg() && option.hasArgName())",
      "info" : "IfStatement[18474-18608]:IfStatement[18474-18608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18526-18608]:Block[18526-18608]"
    }, {
      "left" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[18540-18598]:ExpressionStatement[18540-18598]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[18668-18732]:IfStatement[18668-18732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18691-18732]:Block[18691-18732]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[18705-18722]:ExpressionStatement[18705-18722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19115-19285]:Block[19115-19285]"
    }, {
      "left" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "right" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "info" : "VariableDeclarationStatement[19125-19169]:VariableDeclarationStatement[19125-19169]"
    }, {
      "left" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "right" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "info" : "ExpressionStatement[19179-19279]:ExpressionStatement[19179-19279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19960-20110]:Block[19960-20110]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[19970-20007]:VariableDeclarationStatement[19970-20007]"
    }, {
      "left" : "renderOptions(sb, width, options, leftPad, descPad);",
      "right" : "renderOptions(sb, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[20017-20069]:ExpressionStatement[20017-20069]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[20078-20104]:ExpressionStatement[20078-20104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20450-20499]:Block[20450-20499]"
    }, {
      "left" : "printWrapped(pw, width, 0, text);",
      "right" : "printWrapped(pw, width, 0, text);",
      "info" : "ExpressionStatement[20460-20493]:ExpressionStatement[20460-20493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20939-21102]:Block[20939-21102]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(text.length());",
      "right" : "StringBuffer sb = new StringBuffer(text.length());",
      "info" : "VariableDeclarationStatement[20949-20999]:VariableDeclarationStatement[20949-20999]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "info" : "ExpressionStatement[21009-21061]:ExpressionStatement[21009-21061]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[21070-21096]:ExpressionStatement[21070-21096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21874-24261]:Block[21874-24261]"
    }, {
      "left" : "final String lpad = createPadding(leftPad);",
      "right" : "final String lpad = createPadding(leftPad);",
      "info" : "VariableDeclarationStatement[21884-21927]:VariableDeclarationStatement[21884-21927]"
    }, {
      "left" : "final String dpad = createPadding(descPad);",
      "right" : "final String dpad = createPadding(descPad);",
      "info" : "VariableDeclarationStatement[21936-21979]:VariableDeclarationStatement[21936-21979]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[22222-22234]:VariableDeclarationStatement[22222-22234]"
    }, {
      "left" : "StringBuffer optBuf;",
      "right" : "StringBuffer optBuf;",
      "info" : "VariableDeclarationStatement[22243-22263]:VariableDeclarationStatement[22243-22263]"
    }, {
      "left" : "List prefixList = new ArrayList();",
      "right" : "List prefixList = new ArrayList();",
      "info" : "VariableDeclarationStatement[22272-22306]:VariableDeclarationStatement[22272-22306]"
    }, {
      "left" : "List optList = options.helpOptions();",
      "right" : "List optList = options.helpOptions();",
      "info" : "VariableDeclarationStatement[22316-22353]:VariableDeclarationStatement[22316-22353]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[22363-22412]:ExpressionStatement[22363-22412]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[22422-23481]:ForStatement[22422-23481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22482-23481]:Block[22482-23481]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[22496-22530]:VariableDeclarationStatement[22496-22530]"
    }, {
      "left" : "optBuf = new StringBuffer(8);",
      "right" : "optBuf = new StringBuffer(8);",
      "info" : "ExpressionStatement[22543-22572]:ExpressionStatement[22543-22572]"
    }, {
      "left" : "if (option.getOpt() == null)",
      "right" : "if (option.getOpt() == null)",
      "info" : "IfStatement[22586-23050]:IfStatement[22586-23050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22627-22744]:Block[22627-22744]"
    }, {
      "left" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[22645-22730]:ExpressionStatement[22645-22730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22774-23050]:Block[22774-23050]"
    }, {
      "left" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "right" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "info" : "ExpressionStatement[22792-22861]:ExpressionStatement[22792-22861]"
    }, {
      "left" : "if (option.hasLongOpt())",
      "right" : "if (option.hasLongOpt())",
      "info" : "IfStatement[22879-23036]:IfStatement[22879-23036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22920-23036]:Block[22920-23036]"
    }, {
      "left" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[22942-23018]:ExpressionStatement[22942-23018]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[23064-23367]:IfStatement[23064-23367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23097-23367]:Block[23097-23367]"
    }, {
      "left" : "if (option.hasArgName())",
      "right" : "if (option.hasArgName())",
      "info" : "IfStatement[23115-23353]:IfStatement[23115-23353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23156-23256]:Block[23156-23256]"
    }, {
      "left" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[23178-23238]:ExpressionStatement[23178-23238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23294-23353]:Block[23294-23353]"
    }, {
      "left" : "optBuf.append(' ');",
      "right" : "optBuf.append(' ');",
      "info" : "ExpressionStatement[23316-23335]:ExpressionStatement[23316-23335]"
    }, {
      "left" : "prefixList.add(optBuf);",
      "right" : "prefixList.add(optBuf);",
      "info" : "ExpressionStatement[23381-23404]:ExpressionStatement[23381-23404]"
    }, {
      "left" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "right" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "info" : "ExpressionStatement[23417-23471]:ExpressionStatement[23417-23471]"
    }, {
      "left" : "int x = 0;",
      "right" : "int x = 0;",
      "info" : "VariableDeclarationStatement[23491-23501]:VariableDeclarationStatement[23491-23501]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[23511-24235]:ForStatement[23511-24235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23571-24235]:Block[23571-24235]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[23585-23619]:VariableDeclarationStatement[23585-23619]"
    }, {
      "left" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "right" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "info" : "ExpressionStatement[23632-23690]:ExpressionStatement[23632-23690]"
    }, {
      "left" : "if (optBuf.length() < max)",
      "right" : "if (optBuf.length() < max)",
      "info" : "IfStatement[23704-23827]:IfStatement[23704-23827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23743-23827]:Block[23743-23827]"
    }, {
      "left" : "optBuf.append(createPadding(max - optBuf.length()));",
      "right" : "optBuf.append(createPadding(max - optBuf.length()));",
      "info" : "ExpressionStatement[23761-23813]:ExpressionStatement[23761-23813]"
    }, {
      "left" : "optBuf.append(dpad);",
      "right" : "optBuf.append(dpad);",
      "info" : "ExpressionStatement[23841-23861]:ExpressionStatement[23841-23861]"
    }, {
      "left" : "int nextLineTabStop = max + descPad;",
      "right" : "int nextLineTabStop = max + descPad;",
      "info" : "VariableDeclarationStatement[23875-23911]:VariableDeclarationStatement[23875-23911]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[23925-24045]:IfStatement[23925-24045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23974-24045]:Block[23974-24045]"
    }, {
      "left" : "optBuf.append(option.getDescription());",
      "right" : "optBuf.append(option.getDescription());",
      "info" : "ExpressionStatement[23992-24031]:ExpressionStatement[23992-24031]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "info" : "ExpressionStatement[24059-24124]:ExpressionStatement[24059-24124]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[24138-24225]:IfStatement[24138-24225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24167-24225]:Block[24167-24225]"
    }, {
      "left" : "sb.append(defaultNewLine);",
      "right" : "sb.append(defaultNewLine);",
      "info" : "ExpressionStatement[24185-24211]:ExpressionStatement[24185-24211]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[24245-24255]:ReturnStatement[24245-24255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24864-25825]:Block[24864-25761]"
    }, {
      "left" : "int pos = findWrapPos(text, width, 0);",
      "right" : "int pos = findWrapPos(text, width, 0);",
      "info" : "VariableDeclarationStatement[24874-24912]:VariableDeclarationStatement[24874-24912]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[24922-25016]:IfStatement[24922-25016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24945-25016]:Block[24945-25016]"
    }, {
      "left" : "sb.append(rtrim(text));",
      "right" : "sb.append(rtrim(text));",
      "info" : "ExpressionStatement[24959-24982]:ExpressionStatement[24959-24982]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[24996-25006]:ReturnStatement[24996-25006]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[25025-25089]:ExpressionStatement[25025-25089]"
    }, {
      "left" : "final String padding = createPadding(nextLineTabStop);",
      "right" : "final String padding = createPadding(nextLineTabStop);",
      "info" : "VariableDeclarationStatement[25195-25249]:VariableDeclarationStatement[25195-25249]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[25259-25819]:WhileStatement[25259-25755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25280-25819]:Block[25280-25755]"
    }, {
      "left" : "text = padding + text.substring(pos).trim();",
      "right" : "text = padding + text.substring(pos).trim();",
      "info" : "ExpressionStatement[25325-25369]:ExpressionStatement[25294-25338]"
    }, {
      "left" : "pos = findWrapPos(text, width, 0);",
      "right" : "pos = findWrapPos(text, width, 0);",
      "info" : "ExpressionStatement[25382-25416]:ExpressionStatement[25351-25385]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[25430-25731]:IfStatement[25399-25502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25457-25533]:Block[25426-25502]"
    }, {
      "left" : "sb.append(text);",
      "right" : "sb.append(text);",
      "info" : "ExpressionStatement[25475-25491]:ExpressionStatement[25444-25460]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25509-25519]:ReturnStatement[25478-25488]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[25745-25809]:ExpressionStatement[25681-25745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26512-27649]:Block[26448-27585]"
    }, {
      "left" : "int pos = -1;",
      "right" : "int pos = -1;",
      "info" : "VariableDeclarationStatement[26522-26535]:VariableDeclarationStatement[26458-26471]"
    }, {
      "left" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "right" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "info" : "IfStatement[26619-26907]:IfStatement[26555-26843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26773-26812]:Block[26709-26748]"
    }, {
      "left" : "return pos + 1;",
      "right" : "return pos + 1;",
      "info" : "ReturnStatement[26787-26802]:ReturnStatement[26723-26738]"
    }, {
      "left" : "if (startPos + width >= text.length())",
      "right" : "if (startPos + width >= text.length())",
      "info" : "IfStatement[26826-26907]:IfStatement[26762-26843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26873-26907]:Block[26809-26843]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[26887-26897]:ReturnStatement[26823-26833]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[26990-27013]:ExpressionStatement[26926-26949]"
    }, {
      "left" : "char c;",
      "right" : "char c;",
      "info" : "VariableDeclarationStatement[27023-27030]:VariableDeclarationStatement[26959-26966]"
    }, {
      "left" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[27040-27185]:WhileStatement[26976-27121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27155-27185]:Block[27091-27121]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[27169-27175]:ExpressionStatement[27105-27111]"
    }, {
      "left" : "if (pos > startPos)",
      "right" : "if (pos > startPos)",
      "info" : "IfStatement[27235-27298]:IfStatement[27171-27234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27263-27298]:Block[27199-27234]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[27277-27288]:ReturnStatement[27213-27224]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[27408-27431]:ExpressionStatement[27344-27367]"
    }, {
      "left" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[27441-27590]:WhileStatement[27377-27526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27560-27590]:Block[27496-27526]"
    }, {
      "left" : "++pos;",
      "right" : "++pos;",
      "info" : "ExpressionStatement[27574-27580]:ExpressionStatement[27510-27516]"
    }, {
      "left" : "return (pos == text.length()) ? (-1) : pos;",
      "right" : "return (pos == text.length()) ? (-1) : pos;",
      "info" : "ReturnStatement[27600-27643]:ReturnStatement[27536-27579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27893-28067]:Block[27829-28003]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(len);",
      "right" : "StringBuffer sb = new StringBuffer(len);",
      "info" : "VariableDeclarationStatement[27903-27943]:VariableDeclarationStatement[27839-27879]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[27953-28030]:ForStatement[27889-27966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27991-28030]:Block[27927-27966]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28005-28020]:ExpressionStatement[27941-27956]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[28040-28061]:ReturnStatement[27976-27997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28327-28601]:Block[28263-28537]"
    }, {
      "left" : "if ((s == null) || (s.length() == 0))",
      "right" : "if ((s == null) || (s.length() == 0))",
      "info" : "IfStatement[28337-28416]:IfStatement[28273-28352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28383-28416]:Block[28319-28352]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[28397-28406]:ReturnStatement[28333-28342]"
    }, {
      "left" : "int pos = s.length();",
      "right" : "int pos = s.length();",
      "info" : "VariableDeclarationStatement[28426-28447]:VariableDeclarationStatement[28362-28383]"
    }, {
      "left" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "right" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "info" : "WhileStatement[28457-28558]:WhileStatement[28393-28494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28528-28558]:Block[28464-28494]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[28542-28548]:ExpressionStatement[28478-28484]"
    }, {
      "left" : "return s.substring(0, pos);",
      "right" : "return s.substring(0, pos);",
      "info" : "ReturnStatement[28568-28595]:ReturnStatement[28504-28531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29608-29767]:Block[29544-29703]"
    }, {
      "left" : "Option opt1 = (Option) o1;",
      "right" : "Option opt1 = (Option) o1;",
      "info" : "VariableDeclarationStatement[29622-29648]:VariableDeclarationStatement[29558-29584]"
    }, {
      "left" : "Option opt2 = (Option) o2;",
      "right" : "Option opt2 = (Option) o2;",
      "info" : "VariableDeclarationStatement[29661-29687]:VariableDeclarationStatement[29597-29623]"
    }, {
      "left" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "right" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "info" : "ReturnStatement[29701-29757]:ReturnStatement[29637-29693]"
    } ]
  },
  "interFileMappings" : { }
}