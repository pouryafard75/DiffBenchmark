{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1081-1129]:FieldDeclaration[1081-1129]"
    }, {
      "left" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "right" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "info" : "FieldDeclaration[1135-1200]:FieldDeclaration[1135-1200]"
    }, {
      "left" : "private final String[] values;",
      "right" : "private final String[] values;",
      "info" : "FieldDeclaration[1206-1272]:FieldDeclaration[1206-1272]"
    }, {
      "left" : "private final Map<String, Integer> mapping;",
      "right" : "private final Map<String, Integer> mapping;",
      "info" : "FieldDeclaration[1278-1366]:FieldDeclaration[1278-1366]"
    }, {
      "left" : "private final String comment;",
      "right" : "private final String comment;",
      "info" : "FieldDeclaration[1372-1446]:FieldDeclaration[1372-1446]"
    }, {
      "left" : "private final long recordNumber;",
      "right" : "private final long recordNumber;",
      "info" : "FieldDeclaration[1452-1514]:FieldDeclaration[1452-1514]"
    }, {
      "left" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "right" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "info" : "MethodDeclaration[1520-1829]:MethodDeclaration[1520-1829]"
    }, {
      "left" : "public String get(final int i)",
      "right" : "public String get(final int i)",
      "info" : "MethodDeclaration[1835-2059]:MethodDeclaration[1835-2059]"
    }, {
      "left" : "public boolean isConsistent()",
      "right" : "public boolean isConsistent()",
      "info" : "MethodDeclaration[2839-3372]:MethodDeclaration[3161-3694]"
    }, {
      "left" : "public boolean isMapped(final String name)",
      "right" : "public boolean isMapped(final String name)",
      "info" : "MethodDeclaration[3378-3694]:MethodDeclaration[3700-4016]"
    }, {
      "left" : "public boolean isSet(final String name)",
      "right" : "public boolean isSet(final String name)",
      "info" : "MethodDeclaration[3700-4041]:MethodDeclaration[4022-4363]"
    }, {
      "left" : "public Iterator<String> iterator()",
      "right" : "public Iterator<String> iterator()",
      "info" : "MethodDeclaration[4047-4279]:MethodDeclaration[4369-4601]"
    }, {
      "left" : "String[] values()",
      "right" : "String[] values()",
      "info" : "MethodDeclaration[4285-4333]:MethodDeclaration[4607-4655]"
    }, {
      "left" : "public String getComment()",
      "right" : "public String getComment()",
      "info" : "MethodDeclaration[4339-4583]:MethodDeclaration[4661-4905]"
    }, {
      "left" : "public long getRecordNumber()",
      "right" : "public long getRecordNumber()",
      "info" : "MethodDeclaration[4589-4785]:MethodDeclaration[4911-5107]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[4791-4958]:MethodDeclaration[5113-5280]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[4964-5050]:MethodDeclaration[5286-5372]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1648-1829]:Block[1648-1829]"
    }, {
      "left" : "this.recordNumber = recordNumber;",
      "right" : "this.recordNumber = recordNumber;",
      "info" : "ExpressionStatement[1658-1691]:ExpressionStatement[1658-1691]"
    }, {
      "left" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "right" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "info" : "ExpressionStatement[1700-1759]:ExpressionStatement[1700-1759]"
    }, {
      "left" : "this.mapping = mapping;",
      "right" : "this.mapping = mapping;",
      "info" : "ExpressionStatement[1768-1791]:ExpressionStatement[1768-1791]"
    }, {
      "left" : "this.comment = comment;",
      "right" : "this.comment = comment;",
      "info" : "ExpressionStatement[1800-1823]:ExpressionStatement[1800-1823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2026-2059]:Block[2026-2059]"
    }, {
      "left" : "return values[i];",
      "right" : "return values[i];",
      "info" : "ReturnStatement[2036-2053]:ReturnStatement[2036-2053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3292-3372]:Block[3614-3694]"
    }, {
      "left" : "return mapping == null ? true : mapping.size() == values.length;",
      "right" : "return mapping == null ? true : mapping.size() == values.length;",
      "info" : "ReturnStatement[3302-3366]:ReturnStatement[3624-3688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3619-3694]:Block[3941-4016]"
    }, {
      "left" : "return mapping != null ? mapping.containsKey(name) : false;",
      "right" : "return mapping != null ? mapping.containsKey(name) : false;",
      "info" : "ReturnStatement[3629-3688]:ReturnStatement[3951-4010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3955-4041]:Block[4277-4363]"
    }, {
      "left" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "right" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "info" : "ReturnStatement[3965-4035]:ReturnStatement[4287-4357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4223-4279]:Block[4545-4601]"
    }, {
      "left" : "return Arrays.asList(values).iterator();",
      "right" : "return Arrays.asList(values).iterator();",
      "info" : "ReturnStatement[4233-4273]:ReturnStatement[4555-4595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4303-4333]:Block[4625-4655]"
    }, {
      "left" : "return values;",
      "right" : "return values;",
      "info" : "ReturnStatement[4313-4327]:ReturnStatement[4635-4649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4552-4583]:Block[4874-4905]"
    }, {
      "left" : "return comment;",
      "right" : "return comment;",
      "info" : "ReturnStatement[4562-4577]:ReturnStatement[4884-4899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4749-4785]:Block[5071-5107]"
    }, {
      "left" : "return recordNumber;",
      "right" : "return recordNumber;",
      "info" : "ReturnStatement[4759-4779]:ReturnStatement[5081-5101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4921-4958]:Block[5243-5280]"
    }, {
      "left" : "return values.length;",
      "right" : "return values.length;",
      "info" : "ReturnStatement[4931-4952]:ReturnStatement[5253-5274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5003-5050]:Block[5325-5372]"
    }, {
      "left" : "return Arrays.toString(values);",
      "right" : "return Arrays.toString(values);",
      "info" : "ReturnStatement[5013-5044]:ReturnStatement[5335-5366]"
    } ]
  },
  "interFileMappings" : { }
}