{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DebugPathSanitizer",
      "right" : "DebugPathSanitizer",
      "info" : "TypeDeclaration[1425-6879]:TypeDeclaration[1644-8112]"
    }, {
      "left" : "private static final DebugSectionFinder DEBUG_SECTION_FINDER = new DebugSectionFinder();",
      "right" : "private static final DebugSectionFinder DEBUG_SECTION_FINDER = new DebugSectionFinder();",
      "info" : "FieldDeclaration[1792-1880]:FieldDeclaration[2011-2099]"
    }, {
      "left" : "private final int pathSize;",
      "right" : "private final int pathSize;",
      "info" : "FieldDeclaration[1884-1911]:FieldDeclaration[2103-2130]"
    }, {
      "left" : "private final char separator;",
      "right" : "private final char separator;",
      "info" : "FieldDeclaration[1914-1943]:FieldDeclaration[2133-2162]"
    }, {
      "left" : "private final Path compilationDirectory;",
      "right" : "private final Path compilationDirectory;",
      "info" : "FieldDeclaration[1946-1986]:FieldDeclaration[2165-2205]"
    }, {
      "left" : "private final ImmutableBiMap<Path, Path> other;",
      "right" : "private final ImmutableBiMap<Path, Path> other;",
      "info" : "FieldDeclaration[1989-2036]:FieldDeclaration[2208-2255]"
    }, {
      "left" : "public DebugPathSanitizer(\n      int pathSize,\n      char separator,\n      Path compilationDirectory,\n      ImmutableBiMap<Path, Path> other)",
      "right" : "public DebugPathSanitizer(\n      int pathSize,\n      char separator,\n      Path compilationDirectory,\n      ImmutableBiMap<Path, Path> other)",
      "info" : "MethodDeclaration[2040-2605]:MethodDeclaration[2629-3194]"
    }, {
      "left" : "public String getExpandedPath(Path path)",
      "right" : "public String getExpandedPath(Path path)",
      "info" : "MethodDeclaration[2609-2928]:MethodDeclaration[3198-3517]"
    }, {
      "left" : "private ImmutableBiMap<Path, Path> getAllPaths(Optional<Path> workingDir)",
      "right" : "private ImmutableBiMap<Path, Path> getAllPaths(Optional<Path> workingDir)",
      "info" : "MethodDeclaration[2932-3240]:MethodDeclaration[3521-3919]"
    }, {
      "left" : "public String getCompilationDirectory()",
      "right" : "public String getCompilationDirectory()",
      "info" : "MethodDeclaration[3244-3339]:MethodDeclaration[4181-4276]"
    }, {
      "left" : "public Function<String, String> sanitize(\n      final Optional<Path> workingDir,\n      final boolean expandPaths)",
      "right" : "public Function<String, String> sanitize(\n      final Optional<Path> workingDir,\n      final boolean expandPaths)",
      "info" : "MethodDeclaration[3343-3660]:MethodDeclaration[4280-4597]"
    }, {
      "left" : "public String apply(String input)",
      "right" : "public String apply(String input)",
      "info" : "MethodDeclaration[3509-3649]:MethodDeclaration[4446-4586]"
    }, {
      "left" : "public String sanitize(Optional<Path> workingDir, String contents, boolean expandPaths)",
      "right" : "public String sanitize(Optional<Path> workingDir, String contents, boolean expandPaths)",
      "info" : "MethodDeclaration[3664-4406]:MethodDeclaration[4601-5639]"
    }, {
      "left" : "public String sanitize(Optional<Path> workingDir, String contents)",
      "right" : "public String sanitize(Optional<Path> workingDir, String contents)",
      "info" : "MethodDeclaration[4410-4549]:MethodDeclaration[5643-5782]"
    }, {
      "left" : "public String restore(Optional<Path> workingDir, String contents)",
      "right" : "public String restore(Optional<Path> workingDir, String contents)",
      "info" : "MethodDeclaration[4553-4825]:MethodDeclaration[5786-6058]"
    }, {
      "left" : "private void restore(ByteBuffer buffer, ByteBufferReplacer replacer)",
      "right" : "private void restore(ByteBuffer buffer, ByteBufferReplacer replacer)",
      "info" : "MethodDeclaration[4829-5820]:MethodDeclaration[6062-7053]"
    }, {
      "left" : "private void restore(Path path, ByteBufferReplacer replacer) throws IOException",
      "right" : "private void restore(Path path, ByteBufferReplacer replacer) throws IOException",
      "info" : "MethodDeclaration[5824-6094]:MethodDeclaration[7057-7327]"
    }, {
      "left" : "private ByteBufferReplacer getCompilationDirectoryReplacer(Path workingDir)",
      "right" : "private ByteBufferReplacer getCompilationDirectoryReplacer(Path workingDir)",
      "info" : "MethodDeclaration[6098-6529]:MethodDeclaration[7331-7762]"
    }, {
      "left" : "public void restoreCompilationDirectory(Path path, Path workingDir) throws IOException",
      "right" : "public void restoreCompilationDirectory(Path path, Path workingDir) throws IOException",
      "info" : "MethodDeclaration[6720-6876]:MethodDeclaration[7953-8109]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2460-2605]:Block[3049-3194]"
    }, {
      "left" : "this.pathSize = pathSize;",
      "right" : "this.pathSize = pathSize;",
      "info" : "ExpressionStatement[2466-2491]:ExpressionStatement[3055-3080]"
    }, {
      "left" : "this.separator = separator;",
      "right" : "this.separator = separator;",
      "info" : "ExpressionStatement[2496-2523]:ExpressionStatement[3085-3112]"
    }, {
      "left" : "this.compilationDirectory = compilationDirectory;",
      "right" : "this.compilationDirectory = compilationDirectory;",
      "info" : "ExpressionStatement[2528-2577]:ExpressionStatement[3117-3166]"
    }, {
      "left" : "this.other = other;",
      "right" : "this.other = other;",
      "info" : "ExpressionStatement[2582-2601]:ExpressionStatement[3171-3190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2787-2928]:Block[3376-3517]"
    }, {
      "left" : "Preconditions.checkArgument(path.toString().length() <= pathSize);",
      "right" : "Preconditions.checkArgument(path.toString().length() <= pathSize);",
      "info" : "ExpressionStatement[2793-2859]:ExpressionStatement[3382-3448]"
    }, {
      "left" : "return Strings.padEnd(path.toString(), pathSize, separator);",
      "right" : "return Strings.padEnd(path.toString(), pathSize, separator);",
      "info" : "ReturnStatement[2864-2924]:ReturnStatement[3453-3513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3006-3240]:Block[3595-3919]"
    }, {
      "left" : "ImmutableBiMap.Builder<Path, Path> builder = ImmutableBiMap.builder();",
      "right" : "ImmutableBiMap.Builder<Path, Path> builder = ImmutableBiMap.builder();",
      "info" : "VariableDeclarationStatement[3012-3082]:VariableDeclarationStatement[3997-4067]"
    }, {
      "left" : "builder.putAll(other);",
      "right" : "builder.putAll(other);",
      "info" : "ExpressionStatement[3186-3208]:ExpressionStatement[4123-4145]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[3213-3236]:ReturnStatement[4150-4173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3284-3339]:Block[4221-4276]"
    }, {
      "left" : "return getExpandedPath(compilationDirectory);",
      "right" : "return getExpandedPath(compilationDirectory);",
      "info" : "ReturnStatement[3290-3335]:ReturnStatement[4227-4272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3457-3660]:Block[4394-4597]"
    }, {
      "left" : "return new Function<String, String>() {\n      @Override\n      public String apply(String input) {\n        return DebugPathSanitizer.this.sanitize(workingDir, input, expandPaths);\n      }\n    };",
      "right" : "return new Function<String, String>() {\n      @Override\n      public String apply(String input) {\n        return DebugPathSanitizer.this.sanitize(workingDir, input, expandPaths);\n      }\n    };",
      "info" : "ReturnStatement[3463-3656]:ReturnStatement[4400-4593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3559-3649]:Block[4496-4586]"
    }, {
      "left" : "return DebugPathSanitizer.this.sanitize(workingDir, input, expandPaths);",
      "right" : "return DebugPathSanitizer.this.sanitize(workingDir, input, expandPaths);",
      "info" : "ReturnStatement[3569-3641]:ReturnStatement[4506-4578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4040-4406]:Block[4977-5639]"
    }, {
      "left" : "for (Map.Entry<Path, Path> entry : getAllPaths(workingDir).entrySet())",
      "right" : "for (Map.Entry<Path, Path> entry : getAllPaths(workingDir).entrySet())",
      "info" : "EnhancedForStatement[4046-4381]:EnhancedForStatement[4983-5614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4117-4381]:Block[5054-5614]"
    }, {
      "left" : "String replacement;",
      "right" : "String replacement;",
      "info" : "VariableDeclarationStatement[4125-4144]:VariableDeclarationStatement[5062-5081]"
    }, {
      "left" : "if (expandPaths)",
      "right" : "if (expandPaths)",
      "info" : "IfStatement[4151-4300]:IfStatement[5088-5237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4168-4234]:Block[5105-5171]"
    }, {
      "left" : "replacement = getExpandedPath(entry.getValue());",
      "right" : "replacement = getExpandedPath(entry.getValue());",
      "info" : "ExpressionStatement[4178-4226]:ExpressionStatement[5115-5163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4240-4300]:Block[5177-5237]"
    }, {
      "left" : "replacement = entry.getValue().toString();",
      "right" : "replacement = entry.getValue().toString();",
      "info" : "ExpressionStatement[4250-4292]:ExpressionStatement[5187-5229]"
    }, {
      "left" : "contents = contents.replace(entry.getKey().toString(), replacement);",
      "right" : "contents = contents.replace(pathToReplace, replacement);",
      "info" : "ExpressionStatement[4307-4375]:ExpressionStatement[5544-5600]"
    }, {
      "left" : "return contents;",
      "right" : "return contents;",
      "info" : "ReturnStatement[4386-4402]:ReturnStatement[5619-5635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4477-4549]:Block[5710-5782]"
    }, {
      "left" : "return sanitize(workingDir, contents, /* expandPaths */ true);",
      "right" : "return sanitize(workingDir, contents, /* expandPaths */ true);",
      "info" : "ReturnStatement[4483-4545]:ReturnStatement[5716-5778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4619-4825]:Block[5852-6058]"
    }, {
      "left" : "for (Map.Entry<Path, Path> entry : getAllPaths(workingDir).entrySet())",
      "right" : "for (Map.Entry<Path, Path> entry : getAllPaths(workingDir).entrySet())",
      "info" : "EnhancedForStatement[4625-4800]:EnhancedForStatement[5858-6033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4696-4800]:Block[5929-6033]"
    }, {
      "left" : "contents = contents.replace(getExpandedPath(entry.getValue()), entry.getKey().toString());",
      "right" : "contents = contents.replace(getExpandedPath(entry.getValue()), entry.getKey().toString());",
      "info" : "ExpressionStatement[4704-4794]:ExpressionStatement[5937-6027]"
    }, {
      "left" : "return contents;",
      "right" : "return contents;",
      "info" : "ReturnStatement[4805-4821]:ReturnStatement[6038-6054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5075-5820]:Block[6308-7053]"
    }, {
      "left" : "Optional<ImmutableMap<String, DebugSection>> results = DEBUG_SECTION_FINDER.find(buffer);",
      "right" : "Optional<ImmutableMap<String, DebugSection>> results = DEBUG_SECTION_FINDER.find(buffer);",
      "info" : "VariableDeclarationStatement[5152-5241]:VariableDeclarationStatement[6385-6474]"
    }, {
      "left" : "if (results.isPresent())",
      "right" : "if (results.isPresent())",
      "info" : "IfStatement[5421-5816]:IfStatement[6654-7049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5446-5771]:Block[6679-7004]"
    }, {
      "left" : "for (DebugSection section : results.get().values())",
      "right" : "for (DebugSection section : results.get().values())",
      "info" : "EnhancedForStatement[5454-5765]:EnhancedForStatement[6687-6998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5506-5765]:Block[6739-6998]"
    }, {
      "left" : "Preconditions.checkState(!section.properties.contains(COMPRESSED));",
      "right" : "Preconditions.checkState(!section.properties.contains(COMPRESSED));",
      "info" : "ExpressionStatement[5586-5653]:ExpressionStatement[6819-6886]"
    }, {
      "left" : "if (section.properties.contains(STRINGS))",
      "right" : "if (section.properties.contains(STRINGS))",
      "info" : "IfStatement[5662-5757]:IfStatement[6895-6990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5704-5757]:Block[6937-6990]"
    }, {
      "left" : "replacer.replace(section.body);",
      "right" : "replacer.replace(section.body);",
      "info" : "ExpressionStatement[5716-5747]:ExpressionStatement[6949-6980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5777-5816]:Block[7010-7049]"
    }, {
      "left" : "replacer.replace(buffer);",
      "right" : "replacer.replace(buffer);",
      "info" : "ExpressionStatement[5785-5810]:ExpressionStatement[7018-7043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5904-6094]:Block[7137-7327]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5910-6090]:TryStatement[7143-7323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5974-6090]:Block[7207-7323]"
    }, {
      "left" : "MappedByteBuffer buffer = channel.map(READ_WRITE, 0, channel.size());",
      "right" : "MappedByteBuffer buffer = channel.map(READ_WRITE, 0, channel.size());",
      "info" : "VariableDeclarationStatement[5982-6051]:VariableDeclarationStatement[7215-7284]"
    }, {
      "left" : "restore(buffer, replacer);",
      "right" : "restore(buffer, replacer);",
      "info" : "ExpressionStatement[6058-6084]:ExpressionStatement[7291-7317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6314-6529]:Block[7547-7762]"
    }, {
      "left" : "return new ByteBufferReplacer(\n        ImmutableMap.of(\n            getExpandedPath(workingDir).getBytes(Charsets.US_ASCII),\n            getExpandedPath(compilationDirectory).getBytes(Charsets.US_ASCII)));",
      "right" : "return new ByteBufferReplacer(\n        ImmutableMap.of(\n            getExpandedPath(workingDir).getBytes(Charsets.US_ASCII),\n            getExpandedPath(compilationDirectory).getBytes(Charsets.US_ASCII)));",
      "info" : "ReturnStatement[6320-6525]:ReturnStatement[7553-7758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6807-6876]:Block[8040-8109]"
    }, {
      "left" : "restore(path, getCompilationDirectoryReplacer(workingDir));",
      "right" : "restore(path, getCompilationDirectoryReplacer(workingDir));",
      "info" : "ExpressionStatement[6813-6872]:ExpressionStatement[8046-8105]"
    } ]
  },
  "interFileMappings" : { }
}