{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ReloadWSDLPublisherTestCase",
      "right" : "ReloadWSDLPublisherTestCase",
      "info" : "TypeDeclaration[2949-8972]:TypeDeclaration[2288-6351]"
    }, {
      "left" : "private static final String DEFAULT_JBOSSAS = \"default-jbossas\";",
      "right" : "private static final String DEFAULT_JBOSSAS = \"default-jbossas\";",
      "info" : "FieldDeclaration[3141-3205]:FieldDeclaration[2480-2544]"
    }, {
      "left" : "private static final String DEPLOYMENT = \"jaxws-manual-pojo\";",
      "right" : "private static final String DEPLOYMENT = \"jaxws-manual-pojo\";",
      "info" : "FieldDeclaration[3210-3271]:FieldDeclaration[2549-2610]"
    }, {
      "left" : "private static final String keepAlive = System.getProperty(\"http.keepAlive\") == null ? \"true\" : System.getProperty(\"http.keepAlive\");",
      "right" : "private static final String keepAlive = System.getProperty(\"http.keepAlive\") == null ? \"true\" : System.getProperty(\"http.keepAlive\");",
      "info" : "FieldDeclaration[3276-3409]:FieldDeclaration[2615-2748]"
    }, {
      "left" : "private static final String maxConnections = System.getProperty(\"http.maxConnections\") == null ? \"5\" : System.getProperty(\"http.maxConnections\");",
      "right" : "private static final String maxConnections = System.getProperty(\"http.maxConnections\") == null ? \"5\" : System.getProperty(\"http.maxConnections\");",
      "info" : "FieldDeclaration[3414-3559]:FieldDeclaration[2753-2898]"
    }, {
      "left" : "@ArquillianResource\n    ContainerController containerController;",
      "right" : "@ArquillianResource\n    ContainerController containerController;",
      "info" : "FieldDeclaration[3565-3629]:FieldDeclaration[2904-2968]"
    }, {
      "left" : "@ArquillianResource\n    Deployer deployer;",
      "right" : "@ArquillianResource\n    Deployer deployer;",
      "info" : "FieldDeclaration[3635-3677]:FieldDeclaration[2974-3016]"
    }, {
      "left" : "public static WebArchive deployment()",
      "right" : "public static WebArchive deployment()",
      "info" : "MethodDeclaration[3683-3978]:MethodDeclaration[3022-3317]"
    }, {
      "left" : "public void endpointLookup() throws Exception",
      "right" : "public void endpointLookup() throws Exception",
      "info" : "MethodDeclaration[3984-4325]:MethodDeclaration[3323-3664]"
    }, {
      "left" : "public void testHelloStringAfterReload() throws Exception",
      "right" : "public void testHelloStringAfterReload() throws Exception",
      "info" : "MethodDeclaration[4331-5579]:MethodDeclaration[3670-4961]"
    }, {
      "left" : "public void stopContainer()",
      "right" : "public void stopContainer()",
      "info" : "MethodDeclaration[5585-5997]:MethodDeclaration[4967-5379]"
    }, {
      "left" : "private void checkWsdl(URL wsdlURL) throws IOException",
      "right" : "private void checkWsdl(URL wsdlURL) throws IOException",
      "info" : "MethodDeclaration[8006-8970]:MethodDeclaration[5385-6349]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3093-3099]:Modifier[2432-2438]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3100-3105]:TYPE_DECLARATION_KIND[2439-2444]"
    }, {
      "left" : "ReloadWSDLPublisherTestCase",
      "right" : "ReloadWSDLPublisherTestCase",
      "info" : "SimpleName[3106-3133]:SimpleName[2445-2472]"
    }, {
      "left" : "@Deployment(name = DEPLOYMENT, testable = false, managed = false)",
      "right" : "@Deployment(name = DEPLOYMENT, testable = false, managed = false)",
      "info" : "NormalAnnotation[3683-3748]:NormalAnnotation[3022-3087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3753-3759]:Modifier[3092-3098]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3760-3766]:Modifier[3099-3105]"
    }, {
      "left" : "WebArchive",
      "right" : "WebArchive",
      "info" : "SimpleType[3767-3777]:SimpleType[3106-3116]"
    }, {
      "left" : "deployment",
      "right" : "deployment",
      "info" : "SimpleName[3778-3788]:SimpleName[3117-3127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3791-3978]:Block[3130-3317]"
    }, {
      "left" : "WebArchive pojoWar = ShrinkWrap.create(WebArchive.class, DEPLOYMENT + \".war\").addClasses(\n                EndpointIface.class, PojoEndpoint.class);",
      "right" : "WebArchive pojoWar = ShrinkWrap.create(WebArchive.class, DEPLOYMENT + \".war\").addClasses(\n                EndpointIface.class, PojoEndpoint.class);",
      "info" : "VariableDeclarationStatement[3801-3948]:VariableDeclarationStatement[3140-3287]"
    }, {
      "left" : "return pojoWar;",
      "right" : "return pojoWar;",
      "info" : "ReturnStatement[3957-3972]:ReturnStatement[3296-3311]"
    }, {
      "left" : "@Before",
      "right" : "@Before",
      "info" : "MarkerAnnotation[3984-3991]:MarkerAnnotation[3323-3330]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3996-4002]:Modifier[3335-3341]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4003-4007]:PrimitiveType[3342-3346]"
    }, {
      "left" : "endpointLookup",
      "right" : "endpointLookup",
      "info" : "SimpleName[4008-4022]:SimpleName[3347-3361]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4032-4041]:SimpleType[3371-3380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4042-4325]:Block[3381-3664]"
    }, {
      "left" : "containerController.start(DEFAULT_JBOSSAS);",
      "right" : "containerController.start(DEFAULT_JBOSSAS);",
      "info" : "ExpressionStatement[4052-4095]:ExpressionStatement[3391-3434]"
    }, {
      "left" : "if (containerController.isStarted(DEFAULT_JBOSSAS))",
      "right" : "if (containerController.isStarted(DEFAULT_JBOSSAS))",
      "info" : "IfStatement[4104-4208]:IfStatement[3443-3547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4156-4208]:Block[3495-3547]"
    }, {
      "left" : "deployer.deploy(DEPLOYMENT);",
      "right" : "deployer.deploy(DEPLOYMENT);",
      "info" : "ExpressionStatement[4170-4198]:ExpressionStatement[3509-3537]"
    }, {
      "left" : "System.setProperty(\"http.keepAlive\", \"false\");",
      "right" : "System.setProperty(\"http.keepAlive\", \"false\");",
      "info" : "ExpressionStatement[4217-4263]:ExpressionStatement[3556-3602]"
    }, {
      "left" : "System.setProperty(\"http.maxConnections\", \"1\");",
      "right" : "System.setProperty(\"http.maxConnections\", \"1\");",
      "info" : "ExpressionStatement[4272-4319]:ExpressionStatement[3611-3658]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4378-4384]:Modifier[3717-3723]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4385-4389]:PrimitiveType[3724-3728]"
    }, {
      "left" : "testHelloStringAfterReload",
      "right" : "testHelloStringAfterReload",
      "info" : "SimpleName[4390-4416]:SimpleName[3729-3755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4436-5579]:Block[3775-4961]"
    }, {
      "left" : "Assert.assertTrue(containerController.isStarted(DEFAULT_JBOSSAS));",
      "right" : "Assert.assertTrue(containerController.isStarted(DEFAULT_JBOSSAS));",
      "info" : "ExpressionStatement[4446-4512]:ExpressionStatement[3785-3851]"
    }, {
      "left" : "ManagementClient managementClient = new ManagementClient(TestSuiteEnvironment.getModelControllerClient(),\n                TestSuiteEnvironment.getServerAddress(), TestSuiteEnvironment.getServerPort(), \"http-remoting\");",
      "right" : "ManagementClient managementClient = new ManagementClient(TestSuiteEnvironment.getModelControllerClient(),\n                TestSuiteEnvironment.getServerAddress(), TestSuiteEnvironment.getServerPort(), \"http-remoting\");",
      "info" : "VariableDeclarationStatement[4521-4739]:VariableDeclarationStatement[3860-4078]"
    }, {
      "left" : "QName serviceName = new QName(\"http://jbossws.org/basic\", \"POJOService\");",
      "right" : "QName serviceName = new QName(\"http://jbossws.org/basic\", \"POJOService\");",
      "info" : "VariableDeclarationStatement[4748-4821]:VariableDeclarationStatement[4087-4160]"
    }, {
      "left" : "URL wsdlURL = new URL(managementClient.getWebUri().toURL(), '/' + DEPLOYMENT + \"/POJOService?wsdl\");",
      "right" : "URL wsdlURL = new URL(managementClient.getWebUri().toURL(), '/' + DEPLOYMENT + \"/POJOService?wsdl\");",
      "info" : "VariableDeclarationStatement[4830-4930]:VariableDeclarationStatement[4169-4269]"
    }, {
      "left" : "checkWsdl(wsdlURL);",
      "right" : "checkWsdl(wsdlURL);",
      "info" : "ExpressionStatement[4939-4958]:ExpressionStatement[4278-4297]"
    }, {
      "left" : "Service service = Service.create(wsdlURL, serviceName);",
      "right" : "Service service = Service.create(wsdlURL, serviceName);",
      "info" : "VariableDeclarationStatement[4967-5022]:VariableDeclarationStatement[4306-4361]"
    }, {
      "left" : "EndpointIface proxy = service.getPort(EndpointIface.class);",
      "right" : "EndpointIface proxy = service.getPort(EndpointIface.class);",
      "info" : "VariableDeclarationStatement[5031-5090]:VariableDeclarationStatement[4370-4429]"
    }, {
      "left" : "Assert.assertEquals(\"Hello World!\", proxy.helloString(\"World\"));",
      "right" : "Assert.assertEquals(\"Hello World!\", proxy.helloString(\"World\"));",
      "info" : "ExpressionStatement[5099-5163]:ExpressionStatement[4438-4502]"
    }, {
      "left" : "checkWsdl(wsdlURL);",
      "right" : "checkWsdl(wsdlURL);",
      "info" : "ExpressionStatement[5220-5239]:ExpressionStatement[4602-4621]"
    }, {
      "left" : "serviceName = new QName(\"http://jbossws.org/basic\", \"POJOService\");",
      "right" : "serviceName = new QName(\"http://jbossws.org/basic\", \"POJOService\");",
      "info" : "ExpressionStatement[5248-5315]:ExpressionStatement[4630-4697]"
    }, {
      "left" : "service = Service.create(wsdlURL, serviceName);",
      "right" : "service = Service.create(wsdlURL, serviceName);",
      "info" : "ExpressionStatement[5324-5371]:ExpressionStatement[4706-4753]"
    }, {
      "left" : "proxy = service.getPort(EndpointIface.class);",
      "right" : "proxy = service.getPort(EndpointIface.class);",
      "info" : "ExpressionStatement[5380-5425]:ExpressionStatement[4762-4807]"
    }, {
      "left" : "Assert.assertEquals(\"Hello World!\", proxy.helloString(\"World\"));",
      "right" : "Assert.assertEquals(\"Hello World!\", proxy.helloString(\"World\"));",
      "info" : "ExpressionStatement[5434-5498]:ExpressionStatement[4816-4880]"
    }, {
      "left" : "Assert.assertTrue(containerController.isStarted(DEFAULT_JBOSSAS));",
      "right" : "Assert.assertTrue(containerController.isStarted(DEFAULT_JBOSSAS));",
      "info" : "ExpressionStatement[5507-5573]:ExpressionStatement[4889-4955]"
    }, {
      "left" : "@After",
      "right" : "@After",
      "info" : "MarkerAnnotation[5585-5591]:MarkerAnnotation[4967-4973]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5596-5602]:Modifier[4978-4984]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5603-5607]:PrimitiveType[4985-4989]"
    }, {
      "left" : "stopContainer",
      "right" : "stopContainer",
      "info" : "SimpleName[5608-5621]:SimpleName[4990-5003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5624-5997]:Block[5006-5379]"
    }, {
      "left" : "System.setProperty(\"http.keepAlive\", keepAlive);",
      "right" : "System.setProperty(\"http.keepAlive\", keepAlive);",
      "info" : "ExpressionStatement[5634-5682]:ExpressionStatement[5016-5064]"
    }, {
      "left" : "System.setProperty(\"http.maxConnections\", maxConnections);",
      "right" : "System.setProperty(\"http.maxConnections\", maxConnections);",
      "info" : "ExpressionStatement[5691-5749]:ExpressionStatement[5073-5131]"
    }, {
      "left" : "if (containerController.isStarted(DEFAULT_JBOSSAS))",
      "right" : "if (containerController.isStarted(DEFAULT_JBOSSAS))",
      "info" : "IfStatement[5758-5864]:IfStatement[5140-5246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5810-5864]:Block[5192-5246]"
    }, {
      "left" : "deployer.undeploy(DEPLOYMENT);",
      "right" : "deployer.undeploy(DEPLOYMENT);",
      "info" : "ExpressionStatement[5824-5854]:ExpressionStatement[5206-5236]"
    }, {
      "left" : "if (containerController.isStarted(DEFAULT_JBOSSAS))",
      "right" : "if (containerController.isStarted(DEFAULT_JBOSSAS))",
      "info" : "IfStatement[5873-5991]:IfStatement[5255-5373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5925-5991]:Block[5307-5373]"
    }, {
      "left" : "containerController.stop(DEFAULT_JBOSSAS);",
      "right" : "containerController.stop(DEFAULT_JBOSSAS);",
      "info" : "ExpressionStatement[5939-5981]:ExpressionStatement[5321-5363]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8006-8013]:Modifier[5385-5392]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8014-8018]:PrimitiveType[5393-5397]"
    }, {
      "left" : "checkWsdl",
      "right" : "checkWsdl",
      "info" : "SimpleName[8019-8028]:SimpleName[5398-5407]"
    }, {
      "left" : "URL wsdlURL",
      "right" : "URL wsdlURL",
      "info" : "SingleVariableDeclaration[8029-8040]:SingleVariableDeclaration[5408-5419]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8049-8060]:SimpleType[5428-5439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8061-8970]:Block[5440-6349]"
    }, {
      "left" : "StringBuilder proxyUsed = new StringBuilder();",
      "right" : "StringBuilder proxyUsed = new StringBuilder();",
      "info" : "VariableDeclarationStatement[8071-8117]:VariableDeclarationStatement[5450-5496]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8126-8652]:TryStatement[5505-6031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8130-8507]:Block[5509-5886]"
    }, {
      "left" : "List<Proxy> proxies = ProxySelector.getDefault().select(wsdlURL.toURI());",
      "right" : "List<Proxy> proxies = ProxySelector.getDefault().select(wsdlURL.toURI());",
      "info" : "VariableDeclarationStatement[8144-8217]:VariableDeclarationStatement[5523-5596]"
    }, {
      "left" : "for(Proxy proxy : proxies)",
      "right" : "for(Proxy proxy : proxies)",
      "info" : "EnhancedForStatement[8230-8497]:EnhancedForStatement[5609-5876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8257-8497]:Block[5636-5876]"
    }, {
      "left" : "System.out.println(\"To connect to \" + wsdlURL + \" we are using proxy \" + proxy);",
      "right" : "System.out.println(\"To connect to \" + wsdlURL + \" we are using proxy \" + proxy);",
      "info" : "ExpressionStatement[8275-8355]:ExpressionStatement[5654-5734]"
    }, {
      "left" : "proxyUsed.append(\"To connect to \").append(wsdlURL).append(\" we are using proxy \").append(proxy).append(\"\\r\\n\");",
      "right" : "proxyUsed.append(\"To connect to \").append(wsdlURL).append(\" we are using proxy \").append(proxy).append(\"\\r\\n\");",
      "info" : "ExpressionStatement[8372-8483]:ExpressionStatement[5751-5862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8538-8652]:Block[5917-6031]"
    }, {
      "left" : "Logger.getLogger(ReloadWSDLPublisherTestCase.class.getName()).log(Level.SEVERE, null, ex);",
      "right" : "Logger.getLogger(ReloadWSDLPublisherTestCase.class.getName()).log(Level.SEVERE, null, ex);",
      "info" : "ExpressionStatement[8552-8642]:ExpressionStatement[5931-6021]"
    }, {
      "left" : "HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection();",
      "right" : "HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection();",
      "info" : "VariableDeclarationStatement[8661-8737]:VariableDeclarationStatement[6040-6116]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8746-8964]:TryStatement[6125-6343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8750-8907]:Block[6129-6286]"
    }, {
      "left" : "connection.connect();",
      "right" : "connection.connect();",
      "info" : "ExpressionStatement[8764-8785]:ExpressionStatement[6143-6164]"
    }, {
      "left" : "Assert.assertEquals(proxyUsed.toString(), HttpServletResponse.SC_OK, connection.getResponseCode());",
      "right" : "Assert.assertEquals(proxyUsed.toString(), HttpServletResponse.SC_OK, connection.getResponseCode());",
      "info" : "ExpressionStatement[8798-8897]:ExpressionStatement[6177-6276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8916-8964]:Block[6295-6343]"
    }, {
      "left" : "connection.disconnect();",
      "right" : "connection.disconnect();",
      "info" : "ExpressionStatement[8930-8954]:ExpressionStatement[6309-6333]"
    } ]
  },
  "interFileMappings" : {
    "Moved to File: testsuite/shared/src/main/java/org/jboss/as/test/shared/ServerReload.java" : {
      "matchedElements" : [
 {
        "left" : "private void reloadServer(ManagementClient managementClient, int timeout) throws Exception",
        "right" : "public static void executeReloadAndWaitForCompletion(ModelControllerClient client, int timeout)",
        "info" : "MethodDeclaration[6003-6208]:MethodDeclaration[2177-2355]"
      } ],
      "mappings" : [
 {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[6094-6208]:Block[2273-2355]"
      }, {
        "left" : "executeReload(managementClient.getControllerClient());",
        "right" : "executeReload(client);",
        "info" : "ExpressionStatement[6104-6158]:ExpressionStatement[2283-2305]"
      }, {
        "left" : "waitForLiveServerToReload(timeout);",
        "right" : "waitForLiveServerToReload(timeout);",
        "info" : "ExpressionStatement[6167-6202]:ExpressionStatement[2314-2349]"
      } ]
    }
  }
}