{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1998191268711234347L;",
      "right" : "private static final long serialVersionUID = 1998191268711234347L;",
      "info" : "FieldDeclaration[1626-1692]:FieldDeclaration[1626-1692]"
    }, {
      "left" : "ObjectMethodsGuru methodsGuru = new ObjectMethodsGuru();",
      "right" : "ObjectMethodsGuru methodsGuru = new ObjectMethodsGuru();",
      "info" : "FieldDeclaration[1697-1753]:FieldDeclaration[1697-1753]"
    }, {
      "left" : "MockUtil mockUtil = new MockUtil();",
      "right" : "MockUtil mockUtil = new MockUtil();",
      "info" : "FieldDeclaration[1758-1793]:FieldDeclaration[1758-1793]"
    }, {
      "left" : "Object returnValueFor(Class<?> type)",
      "right" : "Object returnValueFor(Class<?> type)",
      "info" : "MethodDeclaration[2902-4663]:MethodDeclaration[2961-4722]"
    } ],
    "mappings" : [
 {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[2902-2908]:SimpleType[2961-2967]"
    }, {
      "left" : "returnValueFor",
      "right" : "returnValueFor",
      "info" : "SimpleName[2909-2923]:SimpleName[2968-2982]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[2924-2937]:SingleVariableDeclaration[2983-2996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2939-4663]:Block[2998-4722]"
    }, {
      "left" : "if (Primitives.isPrimitiveOrWrapper(type))",
      "right" : "if (Primitives.isPrimitiveOrWrapper(type))",
      "info" : "IfStatement[2949-4525]:IfStatement[3008-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2992-3245]:Block[3051-3304]"
    }, {
      "left" : "return Primitives.defaultValueForPrimitiveOrWrapper(type);",
      "right" : "return Primitives.defaultValueForPrimitiveOrWrapper(type);",
      "info" : "ReturnStatement[3006-3064]:ReturnStatement[3065-3123]"
    }, {
      "left" : "if (type == Collection.class)",
      "right" : "if (type == Collection.class)",
      "info" : "IfStatement[3251-4525]:IfStatement[3310-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3281-3337]:Block[3340-3396]"
    }, {
      "left" : "return new LinkedList<Object>();",
      "right" : "return new LinkedList<Object>();",
      "info" : "ReturnStatement[3295-3327]:ReturnStatement[3354-3386]"
    }, {
      "left" : "if (type == Set.class)",
      "right" : "if (type == Set.class)",
      "info" : "IfStatement[3343-4525]:IfStatement[3402-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3366-3419]:Block[3425-3478]"
    }, {
      "left" : "return new HashSet<Object>();",
      "right" : "return new HashSet<Object>();",
      "info" : "ReturnStatement[3380-3409]:ReturnStatement[3439-3468]"
    }, {
      "left" : "if (type == HashSet.class)",
      "right" : "if (type == HashSet.class)",
      "info" : "IfStatement[3425-4525]:IfStatement[3484-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3452-3505]:Block[3511-3564]"
    }, {
      "left" : "return new HashSet<Object>();",
      "right" : "return new HashSet<Object>();",
      "info" : "ReturnStatement[3466-3495]:ReturnStatement[3525-3554]"
    }, {
      "left" : "if (type == SortedSet.class)",
      "right" : "if (type == SortedSet.class)",
      "info" : "IfStatement[3511-4525]:IfStatement[3570-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3540-3593]:Block[3599-3652]"
    }, {
      "left" : "return new TreeSet<Object>();",
      "right" : "return new TreeSet<Object>();",
      "info" : "ReturnStatement[3554-3583]:ReturnStatement[3613-3642]"
    }, {
      "left" : "if (type == TreeSet.class)",
      "right" : "if (type == TreeSet.class)",
      "info" : "IfStatement[3599-4525]:IfStatement[3658-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3626-3679]:Block[3685-3738]"
    }, {
      "left" : "return new TreeSet<Object>();",
      "right" : "return new TreeSet<Object>();",
      "info" : "ReturnStatement[3640-3669]:ReturnStatement[3699-3728]"
    }, {
      "left" : "if (type == LinkedHashSet.class)",
      "right" : "if (type == LinkedHashSet.class)",
      "info" : "IfStatement[3685-4525]:IfStatement[3744-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3718-3777]:Block[3777-3836]"
    }, {
      "left" : "return new LinkedHashSet<Object>();",
      "right" : "return new LinkedHashSet<Object>();",
      "info" : "ReturnStatement[3732-3767]:ReturnStatement[3791-3826]"
    }, {
      "left" : "if (type == List.class)",
      "right" : "if (type == List.class)",
      "info" : "IfStatement[3783-4525]:IfStatement[3842-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3807-3863]:Block[3866-3922]"
    }, {
      "left" : "return new LinkedList<Object>();",
      "right" : "return new LinkedList<Object>();",
      "info" : "ReturnStatement[3821-3853]:ReturnStatement[3880-3912]"
    }, {
      "left" : "if (type == LinkedList.class)",
      "right" : "if (type == LinkedList.class)",
      "info" : "IfStatement[3869-4525]:IfStatement[3928-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3899-3955]:Block[3958-4014]"
    }, {
      "left" : "return new LinkedList<Object>();",
      "right" : "return new LinkedList<Object>();",
      "info" : "ReturnStatement[3913-3945]:ReturnStatement[3972-4004]"
    }, {
      "left" : "if (type == ArrayList.class)",
      "right" : "if (type == ArrayList.class)",
      "info" : "IfStatement[3961-4525]:IfStatement[4020-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3990-4045]:Block[4049-4104]"
    }, {
      "left" : "return new ArrayList<Object>();",
      "right" : "return new ArrayList<Object>();",
      "info" : "ReturnStatement[4004-4035]:ReturnStatement[4063-4094]"
    }, {
      "left" : "if (type == Map.class)",
      "right" : "if (type == Map.class)",
      "info" : "IfStatement[4051-4525]:IfStatement[4110-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4074-4135]:Block[4133-4194]"
    }, {
      "left" : "return new HashMap<Object, Object>();",
      "right" : "return new HashMap<Object, Object>();",
      "info" : "ReturnStatement[4088-4125]:ReturnStatement[4147-4184]"
    }, {
      "left" : "if (type == HashMap.class)",
      "right" : "if (type == HashMap.class)",
      "info" : "IfStatement[4141-4525]:IfStatement[4200-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4168-4229]:Block[4227-4288]"
    }, {
      "left" : "return new HashMap<Object, Object>();",
      "right" : "return new HashMap<Object, Object>();",
      "info" : "ReturnStatement[4182-4219]:ReturnStatement[4241-4278]"
    }, {
      "left" : "if (type == SortedMap.class)",
      "right" : "if (type == SortedMap.class)",
      "info" : "IfStatement[4235-4525]:IfStatement[4294-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4264-4325]:Block[4323-4384]"
    }, {
      "left" : "return new TreeMap<Object, Object>();",
      "right" : "return new TreeMap<Object, Object>();",
      "info" : "ReturnStatement[4278-4315]:ReturnStatement[4337-4374]"
    }, {
      "left" : "if (type == TreeMap.class)",
      "right" : "if (type == TreeMap.class)",
      "info" : "IfStatement[4331-4525]:IfStatement[4390-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4358-4419]:Block[4417-4478]"
    }, {
      "left" : "return new TreeMap<Object, Object>();",
      "right" : "return new TreeMap<Object, Object>();",
      "info" : "ReturnStatement[4372-4409]:ReturnStatement[4431-4468]"
    }, {
      "left" : "if (type == LinkedHashMap.class)",
      "right" : "if (type == LinkedHashMap.class)",
      "info" : "IfStatement[4425-4525]:IfStatement[4484-4584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4458-4525]:Block[4517-4584]"
    }, {
      "left" : "return new LinkedHashMap<Object, Object>();",
      "right" : "return new LinkedHashMap<Object, Object>();",
      "info" : "ReturnStatement[4472-4515]:ReturnStatement[4531-4574]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4645-4657]:ReturnStatement[4704-4716]"
    } ]
  },
  "interFileMappings" : { }
}