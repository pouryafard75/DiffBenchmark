{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsonValueSerializer",
      "right" : "JsonValueSerializer",
      "info" : "TypeDeclaration[915-15074]:TypeDeclaration[1035-19347]"
    }, {
      "left" : "protected final AnnotatedMethod _accessorMethod;",
      "right" : "protected final AnnotatedMethod _accessorMethod;",
      "info" : "FieldDeclaration[1677-1787]:FieldDeclaration[1797-1907]"
    }, {
      "left" : "protected final JsonSerializer<Object> _valueSerializer;",
      "right" : "protected final JsonSerializer<Object> _valueSerializer;",
      "info" : "FieldDeclaration[1793-1849]:FieldDeclaration[1913-1969]"
    }, {
      "left" : "protected final BeanProperty _property;",
      "right" : "protected final BeanProperty _property;",
      "info" : "FieldDeclaration[1855-1894]:FieldDeclaration[1975-2014]"
    }, {
      "left" : "protected final boolean _forceTypeInformation;",
      "right" : "protected final boolean _forceTypeInformation;",
      "info" : "FieldDeclaration[1900-2222]:FieldDeclaration[2020-2342]"
    }, {
      "left" : "public JsonValueSerializer(AnnotatedMethod valueMethod, JsonSerializer<?> ser)",
      "right" : "public JsonValueSerializer(AnnotatedMethod valueMethod, JsonSerializer<?> ser)",
      "info" : "MethodDeclaration[2394-3161]:MethodDeclaration[2514-3281]"
    }, {
      "left" : "public JsonValueSerializer(JsonValueSerializer src, BeanProperty property,\n            JsonSerializer<?> ser, boolean forceTypeInfo)",
      "right" : "public JsonValueSerializer(JsonValueSerializer src, BeanProperty property,\n            JsonSerializer<?> ser, boolean forceTypeInfo)",
      "info" : "MethodDeclaration[3167-3576]:MethodDeclaration[3287-3696]"
    }, {
      "left" : "private final static Class<Object> _notNullClass(Class<?> cls)",
      "right" : "private final static Class<Object> _notNullClass(Class<?> cls)",
      "info" : "MethodDeclaration[3582-3754]:MethodDeclaration[3702-3874]"
    }, {
      "left" : "public JsonValueSerializer withResolved(BeanProperty property,\n            JsonSerializer<?> ser, boolean forceTypeInfo)",
      "right" : "public JsonValueSerializer withResolved(BeanProperty property,\n            JsonSerializer<?> ser, boolean forceTypeInfo)",
      "info" : "MethodDeclaration[3764-4129]:MethodDeclaration[3884-4249]"
    }, {
      "left" : "public JsonSerializer<?> createContextual(SerializerProvider provider,\n            BeanProperty property)\n        throws JsonMappingException",
      "right" : "public JsonSerializer<?> createContextual(SerializerProvider provider,\n            BeanProperty property)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4306-6252]:MethodDeclaration[4426-6372]"
    }, {
      "left" : "public void serialize(Object bean, JsonGenerator gen, SerializerProvider prov) throws IOException",
      "right" : "public void serialize(Object bean, JsonGenerator gen, SerializerProvider prov) throws IOException",
      "info" : "MethodDeclaration[6438-7983]:MethodDeclaration[6558-8103]"
    }, {
      "left" : "public void serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider,\n            TypeSerializer typeSer0) throws IOException",
      "right" : "public void serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider,\n            TypeSerializer typeSer0) throws IOException",
      "info" : "MethodDeclaration[7989-10282]:MethodDeclaration[8109-10480]"
    }, {
      "left" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)\n        throws JsonMappingException",
      "right" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[10292-10695]:MethodDeclaration[10490-10893]"
    }, {
      "left" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint)\n        throws JsonMappingException",
      "right" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[10701-12036]:MethodDeclaration[10899-12234]"
    }, {
      "left" : "protected boolean _acceptJsonFormatVisitorForEnum(JsonFormatVisitorWrapper visitor,\n            JavaType typeHint, Class<?> enumType)\n        throws JsonMappingException",
      "right" : "protected boolean _acceptJsonFormatVisitorForEnum(JsonFormatVisitorWrapper visitor,\n            JavaType typeHint, Class<?> enumType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12042-13699]:MethodDeclaration[12240-13897]"
    }, {
      "left" : "protected boolean isNaturalTypeWithStdHandling(Class<?> rawType, JsonSerializer<?> ser)",
      "right" : "protected boolean isNaturalTypeWithStdHandling(Class<?> rawType, JsonSerializer<?> ser)",
      "info" : "MethodDeclaration[13705-14298]:MethodDeclaration[13903-14496]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[14469-14646]:MethodDeclaration[14667-14844]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1530-1536]:Modifier[1650-1656]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1537-1542]:TYPE_DECLARATION_KIND[1657-1662]"
    }, {
      "left" : "JsonValueSerializer",
      "right" : "JsonValueSerializer",
      "info" : "SimpleName[1543-1562]:SimpleName[1663-1682]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[2790-2820]:SingleMemberAnnotation[2910-2940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2825-2831]:Modifier[2945-2951]"
    }, {
      "left" : "JsonValueSerializer",
      "right" : "JsonValueSerializer",
      "info" : "SimpleName[2832-2851]:SimpleName[2952-2971]"
    }, {
      "left" : "AnnotatedMethod valueMethod",
      "right" : "AnnotatedMethod valueMethod",
      "info" : "SingleVariableDeclaration[2852-2879]:SingleVariableDeclaration[2972-2999]"
    }, {
      "left" : "JsonSerializer<?> ser",
      "right" : "JsonSerializer<?> ser",
      "info" : "SingleVariableDeclaration[2881-2902]:SingleVariableDeclaration[3001-3022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2908-3161]:Block[3028-3281]"
    }, {
      "left" : "super(valueMethod.getType());",
      "right" : "super(valueMethod.getType());",
      "info" : "SuperConstructorInvocation[2918-2947]:SuperConstructorInvocation[3038-3067]"
    }, {
      "left" : "_accessorMethod = valueMethod;",
      "right" : "_accessorMethod = valueMethod;",
      "info" : "ExpressionStatement[2956-2986]:ExpressionStatement[3076-3106]"
    }, {
      "left" : "_valueSerializer = (JsonSerializer<Object>) ser;",
      "right" : "_valueSerializer = (JsonSerializer<Object>) ser;",
      "info" : "ExpressionStatement[2995-3043]:ExpressionStatement[3115-3163]"
    }, {
      "left" : "_property = null;",
      "right" : "_property = null;",
      "info" : "ExpressionStatement[3052-3069]:ExpressionStatement[3172-3189]"
    }, {
      "left" : "_forceTypeInformation = true;",
      "right" : "_forceTypeInformation = true;",
      "info" : "ExpressionStatement[3078-3107]:ExpressionStatement[3198-3227]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[3167-3197]:SingleMemberAnnotation[3287-3317]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3202-3208]:Modifier[3322-3328]"
    }, {
      "left" : "JsonValueSerializer",
      "right" : "JsonValueSerializer",
      "info" : "SimpleName[3209-3228]:SimpleName[3329-3348]"
    }, {
      "left" : "JsonValueSerializer src",
      "right" : "JsonValueSerializer src",
      "info" : "SingleVariableDeclaration[3229-3252]:SingleVariableDeclaration[3349-3372]"
    }, {
      "left" : "BeanProperty property",
      "right" : "BeanProperty property",
      "info" : "SingleVariableDeclaration[3254-3275]:SingleVariableDeclaration[3374-3395]"
    }, {
      "left" : "JsonSerializer<?> ser",
      "right" : "JsonSerializer<?> ser",
      "info" : "SingleVariableDeclaration[3289-3310]:SingleVariableDeclaration[3409-3430]"
    }, {
      "left" : "boolean forceTypeInfo",
      "right" : "boolean forceTypeInfo",
      "info" : "SingleVariableDeclaration[3312-3333]:SingleVariableDeclaration[3432-3453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3339-3576]:Block[3459-3696]"
    }, {
      "left" : "super(_notNullClass(src.handledType()));",
      "right" : "super(_notNullClass(src.handledType()));",
      "info" : "SuperConstructorInvocation[3349-3389]:SuperConstructorInvocation[3469-3509]"
    }, {
      "left" : "_accessorMethod = src._accessorMethod;",
      "right" : "_accessorMethod = src._accessorMethod;",
      "info" : "ExpressionStatement[3398-3436]:ExpressionStatement[3518-3556]"
    }, {
      "left" : "_valueSerializer = (JsonSerializer<Object>) ser;",
      "right" : "_valueSerializer = (JsonSerializer<Object>) ser;",
      "info" : "ExpressionStatement[3445-3493]:ExpressionStatement[3565-3613]"
    }, {
      "left" : "_property = property;",
      "right" : "_property = property;",
      "info" : "ExpressionStatement[3502-3523]:ExpressionStatement[3622-3643]"
    }, {
      "left" : "_forceTypeInformation = forceTypeInfo;",
      "right" : "_forceTypeInformation = forceTypeInfo;",
      "info" : "ExpressionStatement[3532-3570]:ExpressionStatement[3652-3690]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[3582-3612]:SingleMemberAnnotation[3702-3732]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3617-3624]:Modifier[3737-3744]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[3625-3630]:Modifier[3745-3750]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3631-3637]:Modifier[3751-3757]"
    }, {
      "left" : "Class<Object>",
      "right" : "Class<Object>",
      "info" : "ParameterizedType[3638-3651]:ParameterizedType[3758-3771]"
    }, {
      "left" : "_notNullClass",
      "right" : "_notNullClass",
      "info" : "SimpleName[3652-3665]:SimpleName[3772-3785]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[3666-3678]:SingleVariableDeclaration[3786-3798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3680-3754]:Block[3800-3874]"
    }, {
      "left" : "return (cls == null) ? Object.class : (Class<Object>) cls;",
      "right" : "return (cls == null) ? Object.class : (Class<Object>) cls;",
      "info" : "ReturnStatement[3690-3748]:ReturnStatement[3810-3868]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3764-3770]:Modifier[3884-3890]"
    }, {
      "left" : "JsonValueSerializer",
      "right" : "JsonValueSerializer",
      "info" : "SimpleType[3771-3790]:SimpleType[3891-3910]"
    }, {
      "left" : "withResolved",
      "right" : "withResolved",
      "info" : "SimpleName[3791-3803]:SimpleName[3911-3923]"
    }, {
      "left" : "BeanProperty property",
      "right" : "BeanProperty property",
      "info" : "SingleVariableDeclaration[3804-3825]:SingleVariableDeclaration[3924-3945]"
    }, {
      "left" : "JsonSerializer<?> ser",
      "right" : "JsonSerializer<?> ser",
      "info" : "SingleVariableDeclaration[3839-3860]:SingleVariableDeclaration[3959-3980]"
    }, {
      "left" : "boolean forceTypeInfo",
      "right" : "boolean forceTypeInfo",
      "info" : "SingleVariableDeclaration[3862-3883]:SingleVariableDeclaration[3982-4003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3889-4129]:Block[4009-4249]"
    }, {
      "left" : "if (_property == property && _valueSerializer == ser\n                && forceTypeInfo == _forceTypeInformation)",
      "right" : "if (_property == property && _valueSerializer == ser\n                && forceTypeInfo == _forceTypeInformation)",
      "info" : "IfStatement[3899-4047]:IfStatement[4019-4167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4011-4047]:Block[4131-4167]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4025-4037]:ReturnStatement[4145-4157]"
    }, {
      "left" : "return new JsonValueSerializer(this, property, ser, forceTypeInfo);",
      "right" : "return new JsonValueSerializer(this, property, ser, forceTypeInfo);",
      "info" : "ReturnStatement[4056-4123]:ReturnStatement[4176-4243]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4450-4459]:MarkerAnnotation[4570-4579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4464-4470]:Modifier[4584-4590]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[4471-4488]:ParameterizedType[4591-4608]"
    }, {
      "left" : "createContextual",
      "right" : "createContextual",
      "info" : "SimpleName[4489-4505]:SimpleName[4609-4625]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[4506-4533]:SingleVariableDeclaration[4626-4653]"
    }, {
      "left" : "BeanProperty property",
      "right" : "BeanProperty property",
      "info" : "SingleVariableDeclaration[4547-4568]:SingleVariableDeclaration[4667-4688]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[4585-4605]:SimpleType[4705-4725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4610-6252]:Block[4730-6372]"
    }, {
      "left" : "JsonSerializer<?> ser = _valueSerializer;",
      "right" : "JsonSerializer<?> ser = _valueSerializer;",
      "info" : "VariableDeclarationStatement[4620-4661]:VariableDeclarationStatement[4740-4781]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[4670-6225]:IfStatement[4790-6345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4687-5974]:Block[4807-6094]"
    }, {
      "left" : "JavaType t = _accessorMethod.getType();",
      "right" : "JavaType t = _accessorMethod.getType();",
      "info" : "VariableDeclarationStatement[4960-4999]:VariableDeclarationStatement[5080-5119]"
    }, {
      "left" : "if (provider.isEnabled(MapperFeature.USE_STATIC_TYPING) || t.isFinal())",
      "right" : "if (provider.isEnabled(MapperFeature.USE_STATIC_TYPING) || t.isFinal())",
      "info" : "IfStatement[5012-5964]:IfStatement[5132-6084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5084-5964]:Block[5204-6084]"
    }, {
      "left" : "ser = provider.findPrimaryPropertySerializer(t, property);",
      "right" : "ser = provider.findPrimaryPropertySerializer(t, property);",
      "info" : "ExpressionStatement[5487-5545]:ExpressionStatement[5607-5665]"
    }, {
      "left" : "boolean forceTypeInformation = isNaturalTypeWithStdHandling(t.getRawClass(), ser);",
      "right" : "boolean forceTypeInformation = isNaturalTypeWithStdHandling(t.getRawClass(), ser);",
      "info" : "VariableDeclarationStatement[5794-5876]:VariableDeclarationStatement[5914-5996]"
    }, {
      "left" : "return withResolved(property, ser, forceTypeInformation);",
      "right" : "return withResolved(property, ser, forceTypeInformation);",
      "info" : "ReturnStatement[5893-5950]:ReturnStatement[6013-6070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5980-6225]:Block[6100-6345]"
    }, {
      "left" : "ser = provider.handlePrimaryContextualization(ser, property);",
      "right" : "ser = provider.handlePrimaryContextualization(ser, property);",
      "info" : "ExpressionStatement[6083-6144]:ExpressionStatement[6203-6264]"
    }, {
      "left" : "return withResolved(property, ser, _forceTypeInformation);",
      "right" : "return withResolved(property, ser, _forceTypeInformation);",
      "info" : "ReturnStatement[6157-6215]:ReturnStatement[6277-6335]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6234-6246]:ReturnStatement[6354-6366]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6438-6447]:MarkerAnnotation[6558-6567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6452-6458]:Modifier[6572-6578]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6459-6463]:PrimitiveType[6579-6583]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[6464-6473]:SimpleName[6584-6593]"
    }, {
      "left" : "Object bean",
      "right" : "Object bean",
      "info" : "SingleVariableDeclaration[6474-6485]:SingleVariableDeclaration[6594-6605]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[6487-6504]:SingleVariableDeclaration[6607-6624]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[6506-6529]:SingleVariableDeclaration[6626-6649]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[6538-6549]:SimpleType[6658-6669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6554-7983]:Block[6674-8103]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6564-7977]:TryStatement[6684-8097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6568-7333]:Block[6688-7453]"
    }, {
      "left" : "Object value = _accessorMethod.getValue(bean);",
      "right" : "Object value = _accessorMethod.getValue(bean);",
      "info" : "VariableDeclarationStatement[6582-6628]:VariableDeclarationStatement[6702-6748]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[6641-6747]:IfStatement[6761-6867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6660-6747]:Block[6780-6867]"
    }, {
      "left" : "prov.defaultSerializeNull(gen);",
      "right" : "prov.defaultSerializeNull(gen);",
      "info" : "ExpressionStatement[6678-6709]:ExpressionStatement[6798-6829]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[6726-6733]:ReturnStatement[6846-6853]"
    }, {
      "left" : "JsonSerializer<Object> ser = _valueSerializer;",
      "right" : "JsonSerializer<Object> ser = _valueSerializer;",
      "info" : "VariableDeclarationStatement[6760-6806]:VariableDeclarationStatement[6880-6926]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[6819-7278]:IfStatement[6939-7398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6836-7278]:Block[6956-7398]"
    }, {
      "left" : "Class<?> c = value.getClass();",
      "right" : "Class<?> c = value.getClass();",
      "info" : "VariableDeclarationStatement[6854-6884]:VariableDeclarationStatement[6974-7004]"
    }, {
      "left" : "ser = prov.findTypedValueSerializer(c, true, _property);",
      "right" : "ser = prov.findTypedValueSerializer(c, true, _property);",
      "info" : "ExpressionStatement[7208-7264]:ExpressionStatement[7328-7384]"
    }, {
      "left" : "ser.serialize(value, gen, prov);",
      "right" : "ser.serialize(value, gen, prov);",
      "info" : "ExpressionStatement[7291-7323]:ExpressionStatement[7411-7443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7358-7392]:Block[7478-7512]"
    }, {
      "left" : "throw ioe;",
      "right" : "throw ioe;",
      "info" : "ThrowStatement[7372-7382]:ThrowStatement[7492-7502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7413-7977]:Block[7533-8097]"
    }, {
      "left" : "Throwable t = e;",
      "right" : "Throwable t = e;",
      "info" : "VariableDeclarationStatement[7427-7443]:VariableDeclarationStatement[7547-7563]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[7535-7655]:WhileStatement[7655-7775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7606-7655]:Block[7726-7775]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[7624-7641]:ExpressionStatement[7744-7761]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[7738-7810]:IfStatement[7858-7930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7762-7810]:Block[7882-7930]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[7780-7796]:ThrowStatement[7900-7916]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, bean, _accessorMethod.getName() + \"()\");",
      "right" : "throw JsonMappingException.wrapWithPath(t, bean, _accessorMethod.getName() + \"()\");",
      "info" : "ThrowStatement[7884-7967]:ThrowStatement[8004-8087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8003-8009]:Modifier[8123-8129]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8010-8014]:PrimitiveType[8130-8134]"
    }, {
      "left" : "serializeWithType",
      "right" : "serializeWithType",
      "info" : "SimpleName[8015-8032]:SimpleName[8135-8152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8154-10282]:Block[8274-10480]"
    }, {
      "left" : "Object value = null;",
      "right" : "Object value = null;",
      "info" : "VariableDeclarationStatement[8241-8261]:VariableDeclarationStatement[8361-8381]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8270-10276]:TryStatement[8390-10474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8274-9632]:Block[8394-9830]"
    }, {
      "left" : "value = _accessorMethod.getValue(bean);",
      "right" : "value = _accessorMethod.getValue(bean);",
      "info" : "ExpressionStatement[8288-8327]:ExpressionStatement[8408-8447]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[8407-8517]:IfStatement[8527-8637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8426-8517]:Block[8546-8637]"
    }, {
      "left" : "provider.defaultSerializeNull(gen);",
      "right" : "provider.defaultSerializeNull(gen);",
      "info" : "ExpressionStatement[8444-8479]:ExpressionStatement[8564-8599]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[8496-8503]:ReturnStatement[8616-8623]"
    }, {
      "left" : "JsonSerializer<Object> ser = _valueSerializer;",
      "right" : "JsonSerializer<Object> ser = _valueSerializer;",
      "info" : "VariableDeclarationStatement[8530-8576]:VariableDeclarationStatement[8650-8696]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[8589-9338]:IfStatement[8709-9458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8606-8832]:Block[8726-8952]"
    }, {
      "left" : "ser = provider.findValueSerializer(value.getClass(), _property);",
      "right" : "ser = provider.findValueSerializer(value.getClass(), _property);",
      "info" : "ExpressionStatement[8754-8818]:ExpressionStatement[8874-8938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8838-9338]:Block[8958-9458]"
    }, {
      "left" : "if (_forceTypeInformation)",
      "right" : "if (_forceTypeInformation)",
      "info" : "IfStatement[9061-9324]:IfStatement[9181-9444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9088-9324]:Block[9208-9444]"
    }, {
      "left" : "typeSer0.writeTypePrefixForScalar(bean, gen);",
      "right" : "typeSer0.writeTypePrefixForScalar(bean, gen);",
      "info" : "ExpressionStatement[9110-9155]:ExpressionStatement[9230-9275]"
    }, {
      "left" : "ser.serialize(value, gen, provider);",
      "right" : "ser.serialize(value, gen, provider);",
      "info" : "ExpressionStatement[9176-9212]:ExpressionStatement[9296-9332]"
    }, {
      "left" : "typeSer0.writeTypeSuffixForScalar(bean, gen);",
      "right" : "typeSer0.writeTypeSuffixForScalar(bean, gen);",
      "info" : "ExpressionStatement[9233-9278]:ExpressionStatement[9353-9398]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[9299-9306]:ReturnStatement[9419-9426]"
    }, {
      "left" : "ser.serializeWithType(value, gen, provider, typeSer0);",
      "right" : "ser.serializeWithType(value, gen, provider, rr);",
      "info" : "ExpressionStatement[9568-9622]:ExpressionStatement[9772-9820]"
    }, {
      "left" : "typeSer0",
      "right" : "rr",
      "info" : "SimpleName[9612-9620]:SimpleName[9816-9818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9657-9691]:Block[9855-9889]"
    }, {
      "left" : "throw ioe;",
      "right" : "throw ioe;",
      "info" : "ThrowStatement[9671-9681]:ThrowStatement[9869-9879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9712-10276]:Block[9910-10474]"
    }, {
      "left" : "Throwable t = e;",
      "right" : "Throwable t = e;",
      "info" : "VariableDeclarationStatement[9726-9742]:VariableDeclarationStatement[9924-9940]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[9834-9954]:WhileStatement[10032-10152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9905-9954]:Block[10103-10152]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[9923-9940]:ExpressionStatement[10121-10138]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[10037-10109]:IfStatement[10235-10307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10061-10109]:Block[10259-10307]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[10079-10095]:ThrowStatement[10277-10293]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, bean, _accessorMethod.getName() + \"()\");",
      "right" : "throw JsonMappingException.wrapWithPath(t, bean, _accessorMethod.getName() + \"()\");",
      "info" : "ThrowStatement[10183-10266]:ThrowStatement[10381-10464]"
    }, {
      "left" : "@SuppressWarnings(\"deprecation\")",
      "right" : "@SuppressWarnings(\"deprecation\")",
      "info" : "SingleMemberAnnotation[10292-10324]:SingleMemberAnnotation[10490-10522]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10329-10338]:MarkerAnnotation[10527-10536]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10343-10349]:Modifier[10541-10547]"
    }, {
      "left" : "JsonNode",
      "right" : "JsonNode",
      "info" : "SimpleType[10350-10358]:SimpleType[10548-10556]"
    }, {
      "left" : "getSchema",
      "right" : "getSchema",
      "info" : "SimpleName[10359-10368]:SimpleName[10557-10566]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[10369-10396]:SingleVariableDeclaration[10567-10594]"
    }, {
      "left" : "Type typeHint",
      "right" : "Type typeHint",
      "info" : "SingleVariableDeclaration[10398-10411]:SingleVariableDeclaration[10596-10609]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[10428-10448]:SimpleType[10626-10646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10453-10695]:Block[10651-10893]"
    }, {
      "left" : "if (_valueSerializer instanceof SchemaAware)",
      "right" : "if (_valueSerializer instanceof SchemaAware)",
      "info" : "IfStatement[10463-10597]:IfStatement[10661-10795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10508-10597]:Block[10706-10795]"
    }, {
      "left" : "return ((SchemaAware)_valueSerializer).getSchema(provider, null);",
      "right" : "return ((SchemaAware)_valueSerializer).getSchema(provider, null);",
      "info" : "ReturnStatement[10522-10587]:ReturnStatement[10720-10785]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.jsonschema.JsonSchema.getDefaultSchemaNode();",
      "right" : "return com.fasterxml.jackson.databind.jsonschema.JsonSchema.getDefaultSchemaNode();",
      "info" : "ReturnStatement[10606-10689]:ReturnStatement[10804-10887]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10701-10710]:MarkerAnnotation[10899-10908]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10715-10721]:Modifier[10913-10919]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10722-10726]:PrimitiveType[10920-10924]"
    }, {
      "left" : "acceptJsonFormatVisitor",
      "right" : "acceptJsonFormatVisitor",
      "info" : "SimpleName[10727-10750]:SimpleName[10925-10948]"
    }, {
      "left" : "JsonFormatVisitorWrapper visitor",
      "right" : "JsonFormatVisitorWrapper visitor",
      "info" : "SingleVariableDeclaration[10751-10783]:SingleVariableDeclaration[10949-10981]"
    }, {
      "left" : "JavaType typeHint",
      "right" : "JavaType typeHint",
      "info" : "SingleVariableDeclaration[10785-10802]:SingleVariableDeclaration[10983-11000]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[10819-10839]:SimpleType[11017-11037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10844-12036]:Block[11042-12234]"
    }, {
      "left" : "final JavaType type = _accessorMethod.getType();",
      "right" : "final JavaType type = _accessorMethod.getType();",
      "info" : "VariableDeclarationStatement[11351-11399]:VariableDeclarationStatement[11549-11597]"
    }, {
      "left" : "Class<?> declaring = _accessorMethod.getDeclaringClass();",
      "right" : "Class<?> declaring = _accessorMethod.getDeclaringClass();",
      "info" : "VariableDeclarationStatement[11408-11465]:VariableDeclarationStatement[11606-11663]"
    }, {
      "left" : "if ((declaring != null) && declaring.isEnum())",
      "right" : "if ((declaring != null) && declaring.isEnum())",
      "info" : "IfStatement[11474-11651]:IfStatement[11672-11849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11521-11651]:Block[11719-11849]"
    }, {
      "left" : "if (_acceptJsonFormatVisitorForEnum(visitor, typeHint, declaring))",
      "right" : "if (_acceptJsonFormatVisitorForEnum(visitor, typeHint, declaring))",
      "info" : "IfStatement[11535-11641]:IfStatement[11733-11839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11602-11641]:Block[11800-11839]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11620-11627]:ReturnStatement[11818-11825]"
    }, {
      "left" : "JsonSerializer<Object> ser = _valueSerializer;",
      "right" : "JsonSerializer<Object> ser = _valueSerializer;",
      "info" : "VariableDeclarationStatement[11660-11706]:VariableDeclarationStatement[11858-11904]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[11715-11977]:IfStatement[11913-12175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11732-11977]:Block[11930-12175]"
    }, {
      "left" : "ser = visitor.getProvider().findTypedValueSerializer(type, false, _property);",
      "right" : "ser = visitor.getProvider().findTypedValueSerializer(type, false, _property);",
      "info" : "ExpressionStatement[11746-11823]:ExpressionStatement[11944-12021]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[11836-11967]:IfStatement[12034-12165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11853-11967]:Block[12051-12165]"
    }, {
      "left" : "visitor.expectAnyFormat(typeHint);",
      "right" : "visitor.expectAnyFormat(typeHint);",
      "info" : "ExpressionStatement[11895-11929]:ExpressionStatement[12093-12127]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11946-11953]:ReturnStatement[12144-12151]"
    }, {
      "left" : "ser.acceptJsonFormatVisitor(visitor, null);",
      "right" : "ser.acceptJsonFormatVisitor(visitor, null);",
      "info" : "ExpressionStatement[11986-12029]:ExpressionStatement[12184-12227]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12317-12326]:Modifier[12515-12524]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[12327-12334]:PrimitiveType[12525-12532]"
    }, {
      "left" : "_acceptJsonFormatVisitorForEnum",
      "right" : "_acceptJsonFormatVisitorForEnum",
      "info" : "SimpleName[12335-12366]:SimpleName[12533-12564]"
    }, {
      "left" : "JsonFormatVisitorWrapper visitor",
      "right" : "JsonFormatVisitorWrapper visitor",
      "info" : "SingleVariableDeclaration[12367-12399]:SingleVariableDeclaration[12565-12597]"
    }, {
      "left" : "JavaType typeHint",
      "right" : "JavaType typeHint",
      "info" : "SingleVariableDeclaration[12413-12430]:SingleVariableDeclaration[12611-12628]"
    }, {
      "left" : "Class<?> enumType",
      "right" : "Class<?> enumType",
      "info" : "SingleVariableDeclaration[12432-12449]:SingleVariableDeclaration[12630-12647]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[12466-12486]:SimpleType[12664-12684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12491-13699]:Block[12689-13897]"
    }, {
      "left" : "JsonStringFormatVisitor stringVisitor = visitor.expectStringFormat(typeHint);",
      "right" : "JsonStringFormatVisitor stringVisitor = visitor.expectStringFormat(typeHint);",
      "info" : "VariableDeclarationStatement[12563-12640]:VariableDeclarationStatement[12761-12838]"
    }, {
      "left" : "if (stringVisitor != null)",
      "right" : "if (stringVisitor != null)",
      "info" : "IfStatement[12649-13672]:IfStatement[12847-13870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12676-13672]:Block[12874-13870]"
    }, {
      "left" : "Set<String> enums = new LinkedHashSet<String>();",
      "right" : "Set<String> enums = new LinkedHashSet<String>();",
      "info" : "VariableDeclarationStatement[12690-12738]:VariableDeclarationStatement[12888-12936]"
    }, {
      "left" : "for (Object en : enumType.getEnumConstants())",
      "right" : "for (Object en : enumType.getEnumConstants())",
      "info" : "EnhancedForStatement[12751-13618]:EnhancedForStatement[12949-13816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12797-13618]:Block[12995-13816]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[12815-13604]:TryStatement[13013-13802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12819-13159]:Block[13017-13357]"
    }, {
      "left" : "enums.add(String.valueOf(_accessorMethod.callOn(en)));",
      "right" : "enums.add(String.valueOf(_accessorMethod.callOn(en)));",
      "info" : "ExpressionStatement[13087-13141]:ExpressionStatement[13285-13339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13180-13604]:Block[13378-13802]"
    }, {
      "left" : "Throwable t = e;",
      "right" : "Throwable t = e;",
      "info" : "VariableDeclarationStatement[13202-13218]:VariableDeclarationStatement[13400-13416]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[13239-13375]:WhileStatement[13437-13573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13310-13375]:Block[13508-13573]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[13336-13353]:ExpressionStatement[13534-13551]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[13396-13484]:IfStatement[13594-13682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13420-13484]:Block[13618-13682]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[13446-13462]:ThrowStatement[13644-13660]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, en, _accessorMethod.getName() + \"()\");",
      "right" : "throw JsonMappingException.wrapWithPath(t, en, _accessorMethod.getName() + \"()\");",
      "info" : "ThrowStatement[13505-13586]:ThrowStatement[13703-13784]"
    }, {
      "left" : "stringVisitor.enumTypes(enums);",
      "right" : "stringVisitor.enumTypes(enums);",
      "info" : "ExpressionStatement[13631-13662]:ExpressionStatement[13829-13860]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[13681-13693]:ReturnStatement[13879-13891]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[13705-13714]:Modifier[13903-13912]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13715-13722]:PrimitiveType[13913-13920]"
    }, {
      "left" : "isNaturalTypeWithStdHandling",
      "right" : "isNaturalTypeWithStdHandling",
      "info" : "SimpleName[13723-13751]:SimpleName[13921-13949]"
    }, {
      "left" : "Class<?> rawType",
      "right" : "Class<?> rawType",
      "info" : "SingleVariableDeclaration[13752-13768]:SingleVariableDeclaration[13950-13966]"
    }, {
      "left" : "JsonSerializer<?> ser",
      "right" : "JsonSerializer<?> ser",
      "info" : "SingleVariableDeclaration[13770-13791]:SingleVariableDeclaration[13968-13989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13797-14298]:Block[13995-14496]"
    }, {
      "left" : "if (rawType.isPrimitive())",
      "right" : "if (rawType.isPrimitive())",
      "info" : "IfStatement[13866-14251]:IfStatement[14064-14449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13893-14044]:Block[14091-14242]"
    }, {
      "left" : "if (rawType != Integer.TYPE && rawType != Boolean.TYPE && rawType != Double.TYPE)",
      "right" : "if (rawType != Integer.TYPE && rawType != Boolean.TYPE && rawType != Double.TYPE)",
      "info" : "IfStatement[13907-14034]:IfStatement[14105-14232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13989-14034]:Block[14187-14232]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[14007-14020]:ReturnStatement[14205-14218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14050-14251]:Block[14248-14449]"
    }, {
      "left" : "if (rawType != String.class &&\n                    rawType != Integer.class && rawType != Boolean.class && rawType != Double.class)",
      "right" : "if (rawType != String.class &&\n                    rawType != Integer.class && rawType != Boolean.class && rawType != Double.class)",
      "info" : "IfStatement[14064-14241]:IfStatement[14262-14439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14196-14241]:Block[14394-14439]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[14214-14227]:ReturnStatement[14412-14425]"
    }, {
      "left" : "return isDefaultSerializer(ser);",
      "right" : "return isDefaultSerializer(ser);",
      "info" : "ReturnStatement[14260-14292]:ReturnStatement[14458-14490]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14469-14478]:MarkerAnnotation[14667-14676]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14483-14489]:Modifier[14681-14687]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14490-14496]:SimpleType[14688-14694]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[14497-14505]:SimpleName[14695-14703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14508-14646]:Block[14706-14844]"
    }, {
      "left" : "return \"(@JsonValue serializer for method \" + _accessorMethod.getDeclaringClass() + \"#\" + _accessorMethod.getName() + \")\";",
      "right" : "return \"(@JsonValue serializer for method \" + _accessorMethod.getDeclaringClass() + \"#\" + _accessorMethod.getName() + \")\";",
      "info" : "ReturnStatement[14518-14640]:ReturnStatement[14716-14838]"
    } ]
  },
  "interFileMappings" : { }
}