{
  "matchedElements" : [
 {
    "left" : "class : ReturnsDeepStubs",
    "right" : "class : ReturnsDeepStubs",
    "info" : "TypeDeclaration[772-5299]:TypeDeclaration[772-5798]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[1554-1621]:FieldDeclaration[1554-1621]"
  }, {
    "left" : "public answer(invocation ) : ",
    "right" : "public answer(invocation ) : ",
    "info" : "MethodDeclaration[1758-2257]:MethodDeclaration[1731-2313]"
  }, {
    "left" : "private getMock(invocation , returnTypeGenericMetadata ) : ",
    "right" : "private getMock(invocation , returnTypeGenericMetadata ) : ",
    "info" : "MethodDeclaration[2269-3043]:MethodDeclaration[2655-3429]"
  }, {
    "left" : "private createNewDeepStubMock(returnTypeGenericMetadata ) : ",
    "right" : "private createNewDeepStubMock(returnTypeGenericMetadata ) : ",
    "info" : "MethodDeclaration[3051-3837]:MethodDeclaration[3437-4223]"
  }, {
    "left" : "private withSettingsUsing(returnTypeGenericMetadata ) : ",
    "right" : "private withSettingsUsing(returnTypeGenericMetadata ) : ",
    "info" : "MethodDeclaration[3845-4307]:MethodDeclaration[4231-4720]"
  }, {
    "left" : "private returnsDeepStubsAnswerUsing(returnTypeGenericMetadata ) : ",
    "right" : "private returnsDeepStubsAnswerUsing(returnTypeGenericMetadata ) : ",
    "info" : "MethodDeclaration[4315-4659]:MethodDeclaration[4728-5072]"
  }, {
    "left" : "protected actualParameterizedType(mock ) : ",
    "right" : "protected actualParameterizedType(mock ) : ",
    "info" : "MethodDeclaration[4480-4640]:MethodDeclaration[4893-5053]"
  }, {
    "left" : "private recordDeepStubMock(mock , container ) : ",
    "right" : "private recordDeepStubMock(mock , container ) : ",
    "info" : "MethodDeclaration[4667-5005]:MethodDeclaration[5080-5422]"
  }, {
    "left" : "public answer(invocation ) : ",
    "right" : "public answer(invocation ) : ",
    "info" : "MethodDeclaration[4841-4954]:MethodDeclaration[5258-5371]"
  }, {
    "left" : "protected actualParameterizedType(mock ) : ",
    "right" : "protected actualParameterizedType(mock ) : ",
    "info" : "MethodDeclaration[5023-5296]:MethodDeclaration[5522-5795]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1471-1477]:Modifier[1471-1477]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1478-1483]:TYPE_DECLARATION_KIND[1478-1483]"
  }, {
    "left" : "MockitoCore",
    "right" : "MockitoCore",
    "info" : "SimpleType[1637-1648]:SimpleType[1647-1658]"
  }, {
    "left" : "new MockitoCore()",
    "right" : "new MockitoCore()",
    "info" : "ClassInstanceCreation[1663-1680]:ClassInstanceCreation[2445-2462]"
  }, {
    "left" : "ReturnsEmptyValues",
    "right" : "ReturnsEmptyValues",
    "info" : "SimpleType[1695-1713]:SimpleType[1695-1713]"
  }, {
    "left" : "new ReturnsEmptyValues()",
    "right" : "new ReturnsEmptyValues()",
    "info" : "ClassInstanceCreation[1725-1749]:ClassInstanceCreation[2604-2628]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1758-1764]:Modifier[1731-1737]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[1765-1771]:SimpleType[1738-1744]"
  }, {
    "left" : "answer",
    "right" : "answer",
    "info" : "SimpleName[1772-1778]:SimpleName[1745-1751]"
  }, {
    "left" : "InvocationOnMock invocation",
    "right" : "InvocationOnMock invocation",
    "info" : "SingleVariableDeclaration[1779-1806]:SingleVariableDeclaration[1752-1779]"
  }, {
    "left" : "Throwable",
    "right" : "Throwable",
    "info" : "SimpleType[1815-1824]:SimpleType[1788-1797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1825-2257]:Block[1798-2313]"
  }, {
    "left" : "GenericMetadataSupport returnTypeGenericMetadata =\r\n                actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());",
    "right" : "GenericMetadataSupport returnTypeGenericMetadata =\r\n                actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());",
    "info" : "VariableDeclarationStatement[1836-1999]:VariableDeclarationStatement[1809-1972]"
  }, {
    "left" : "Class<?> rawType = returnTypeGenericMetadata.rawType();",
    "right" : "Class<?> rawType = returnTypeGenericMetadata.rawType();",
    "info" : "VariableDeclarationStatement[2011-2066]:VariableDeclarationStatement[1984-2039]"
  }, {
    "left" : "if (!mockitoCore.isTypeMockable(rawType))",
    "right" : "if (!mockitoCore.isTypeMockable(rawType))",
    "info" : "IfStatement[2076-2184]:IfStatement[2132-2240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2118-2184]:Block[2174-2240]"
  }, {
    "left" : "return delegate.returnValueFor(rawType);",
    "right" : "return delegate.returnValueFor(rawType);",
    "info" : "ReturnStatement[2133-2173]:ReturnStatement[2189-2229]"
  }, {
    "left" : "return getMock(invocation, returnTypeGenericMetadata);",
    "right" : "return getMock(invocation, returnTypeGenericMetadata);",
    "info" : "ReturnStatement[2196-2250]:ReturnStatement[2252-2306]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[2269-2276]:Modifier[2655-2662]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[2277-2283]:SimpleType[2663-2669]"
  }, {
    "left" : "getMock",
    "right" : "getMock",
    "info" : "SimpleName[2284-2291]:SimpleName[2670-2677]"
  }, {
    "left" : "InvocationOnMock invocation",
    "right" : "InvocationOnMock invocation",
    "info" : "SingleVariableDeclaration[2292-2319]:SingleVariableDeclaration[2678-2705]"
  }, {
    "left" : "GenericMetadataSupport returnTypeGenericMetadata",
    "right" : "GenericMetadataSupport returnTypeGenericMetadata",
    "info" : "SingleVariableDeclaration[2321-2369]:SingleVariableDeclaration[2707-2755]"
  }, {
    "left" : "Throwable",
    "right" : "Throwable",
    "info" : "SimpleType[2378-2387]:SimpleType[2764-2773]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2388-3043]:Block[2774-3429]"
  }, {
    "left" : "InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());",
    "right" : "InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());",
    "info" : "VariableDeclarationStatement[2396-2486]:VariableDeclarationStatement[2782-2872]"
  }, {
    "left" : "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
    "right" : "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
    "info" : "VariableDeclarationStatement[2493-2588]:VariableDeclarationStatement[2879-2974]"
  }, {
    "left" : "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations())",
    "right" : "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations())",
    "info" : "EnhancedForStatement[2648-2915]:EnhancedForStatement[3034-3301]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2740-2915]:Block[3126-3301]"
  }, {
    "left" : "if(container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation()))",
    "right" : "if(container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation()))",
    "info" : "IfStatement[2749-2910]:IfStatement[3135-3296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2840-2910]:Block[3226-3296]"
  }, {
    "left" : "return stubbedInvocationMatcher.answer(invocation);",
    "right" : "return stubbedInvocationMatcher.answer(invocation);",
    "info" : "ReturnStatement[2850-2901]:ReturnStatement[3236-3287]"
  }, {
    "left" : "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
    "right" : "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
    "info" : "ReturnStatement[2949-3036]:ReturnStatement[3335-3422]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3580-3587]:Modifier[3966-3973]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[3588-3594]:SimpleType[3974-3980]"
  }, {
    "left" : "createNewDeepStubMock",
    "right" : "createNewDeepStubMock",
    "info" : "SimpleName[3595-3616]:SimpleName[3981-4002]"
  }, {
    "left" : "GenericMetadataSupport returnTypeGenericMetadata",
    "right" : "GenericMetadataSupport returnTypeGenericMetadata",
    "info" : "SingleVariableDeclaration[3617-3665]:SingleVariableDeclaration[4003-4051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3667-3837]:Block[4053-4223]"
  }, {
    "left" : "return mockitoCore.mock(\r\n                returnTypeGenericMetadata.rawType(),\r\n                withSettingsUsing(returnTypeGenericMetadata)\r\n        );",
    "right" : "return mockitoCore.mock(\r\n                returnTypeGenericMetadata.rawType(),\r\n                withSettingsUsing(returnTypeGenericMetadata)\r\n        );",
    "info" : "ReturnStatement[3678-3830]:ReturnStatement[4064-4216]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3845-3852]:Modifier[4231-4238]"
  }, {
    "left" : "MockSettings",
    "right" : "MockSettings",
    "info" : "SimpleType[3853-3865]:SimpleType[4239-4251]"
  }, {
    "left" : "withSettingsUsing",
    "right" : "withSettingsUsing",
    "info" : "SimpleName[3866-3883]:SimpleName[4252-4269]"
  }, {
    "left" : "GenericMetadataSupport returnTypeGenericMetadata",
    "right" : "GenericMetadataSupport returnTypeGenericMetadata",
    "info" : "SingleVariableDeclaration[3884-3932]:SingleVariableDeclaration[4270-4318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3934-4307]:Block[4320-4720]"
  }, {
    "left" : "MockSettings mockSettings =\r\n                returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ?\r\n                withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces())\r\n                : withSettings();",
    "right" : "MockSettings mockSettings =\r\n                returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ?\r\n                withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces())\r\n                : withSettings();",
    "info" : "VariableDeclarationStatement[3945-4180]:VariableDeclarationStatement[4331-4566]"
  }, {
    "left" : "return mockSettings\r\n                .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
    "right" : "return mockSettings\r\n\t\t        .serializable()\r\n                .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
    "info" : "ReturnStatement[4192-4300]:ReturnStatement[4578-4713]"
  }, {
    "left" : "mockSettings",
    "right" : "mockSettings",
    "info" : "METHOD_INVOCATION_RECEIVER[4199-4211]:METHOD_INVOCATION_RECEIVER[4585-4597]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[4315-4322]:Modifier[4728-4735]"
  }, {
    "left" : "ReturnsDeepStubs",
    "right" : "ReturnsDeepStubs",
    "info" : "SimpleType[4323-4339]:SimpleType[4736-4752]"
  }, {
    "left" : "returnsDeepStubsAnswerUsing",
    "right" : "returnsDeepStubsAnswerUsing",
    "info" : "SimpleName[4340-4367]:SimpleName[4753-4780]"
  }, {
    "left" : "final GenericMetadataSupport returnTypeGenericMetadata",
    "right" : "final GenericMetadataSupport returnTypeGenericMetadata",
    "info" : "SingleVariableDeclaration[4368-4422]:SingleVariableDeclaration[4781-4835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4424-4659]:Block[4837-5072]"
  }, {
    "left" : "return new ReturnsDeepStubs() {\r\n            @Override\r\n            protected GenericMetadataSupport actualParameterizedType(Object mock) {\r\n                return returnTypeGenericMetadata;\r\n            }\r\n        };",
    "right" : "return new ReturnsDeepStubs() {\r\n            @Override\r\n            protected GenericMetadataSupport actualParameterizedType(Object mock) {\r\n                return returnTypeGenericMetadata;\r\n            }\r\n        };",
    "info" : "ReturnStatement[4435-4652]:ReturnStatement[4848-5065]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4480-4489]:MarkerAnnotation[4893-4902]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[4503-4512]:Modifier[4916-4925]"
  }, {
    "left" : "GenericMetadataSupport",
    "right" : "GenericMetadataSupport",
    "info" : "SimpleType[4513-4535]:SimpleType[4926-4948]"
  }, {
    "left" : "actualParameterizedType",
    "right" : "actualParameterizedType",
    "info" : "SimpleName[4536-4559]:SimpleName[4949-4972]"
  }, {
    "left" : "Object mock",
    "right" : "Object mock",
    "info" : "SingleVariableDeclaration[4560-4571]:SingleVariableDeclaration[4973-4984]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4573-4640]:Block[4986-5053]"
  }, {
    "left" : "return returnTypeGenericMetadata;",
    "right" : "return returnTypeGenericMetadata;",
    "info" : "ReturnStatement[4592-4625]:ReturnStatement[5005-5038]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[4667-4674]:Modifier[5080-5087]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[4675-4681]:SimpleType[5088-5094]"
  }, {
    "left" : "recordDeepStubMock",
    "right" : "recordDeepStubMock",
    "info" : "SimpleName[4682-4700]:SimpleName[5095-5113]"
  }, {
    "left" : "final Object mock",
    "right" : "final Object mock",
    "info" : "SingleVariableDeclaration[4701-4718]:SingleVariableDeclaration[5114-5131]"
  }, {
    "left" : "InvocationContainerImpl container",
    "right" : "InvocationContainerImpl container",
    "info" : "SingleVariableDeclaration[4720-4753]:SingleVariableDeclaration[5133-5166]"
  }, {
    "left" : "Throwable",
    "right" : "Throwable",
    "info" : "SimpleType[4762-4771]:SimpleType[5175-5184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4772-5005]:Block[5185-5422]"
  }, {
    "left" : "container.addAnswer(new Answer<Object>() {\r\n            public Object answer(InvocationOnMock invocation) throws Throwable {\r\n                return mock;\r\n            }\r\n        }, false);",
    "right" : "container.addAnswer(new SerializableAnswer() {\r\n            public Object answer(InvocationOnMock invocation) throws Throwable {\r\n                return mock;\r\n            }\r\n        }, false);",
    "info" : "ExpressionStatement[4785-4974]:ExpressionStatement[5198-5391]"
  }, {
    "left" : "Answer<Object>",
    "right" : "Answer<Object>",
    "info" : "ParameterizedType[4809-4823]:ParameterizedType[5473-5487]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4841-4847]:Modifier[5258-5264]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[4848-4854]:SimpleType[5265-5271]"
  }, {
    "left" : "answer",
    "right" : "answer",
    "info" : "SimpleName[4855-4861]:SimpleName[5272-5278]"
  }, {
    "left" : "InvocationOnMock invocation",
    "right" : "InvocationOnMock invocation",
    "info" : "SingleVariableDeclaration[4862-4889]:SingleVariableDeclaration[5279-5306]"
  }, {
    "left" : "Throwable",
    "right" : "Throwable",
    "info" : "SimpleType[4898-4907]:SimpleType[5315-5324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4908-4954]:Block[5325-5371]"
  }, {
    "left" : "return mock;",
    "right" : "return mock;",
    "info" : "ReturnStatement[4927-4939]:ReturnStatement[5344-5356]"
  }, {
    "left" : "return mock;",
    "right" : "return mock;",
    "info" : "ReturnStatement[4986-4998]:ReturnStatement[5403-5415]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[5023-5032]:Modifier[5522-5531]"
  }, {
    "left" : "GenericMetadataSupport",
    "right" : "GenericMetadataSupport",
    "info" : "SimpleType[5033-5055]:SimpleType[5532-5554]"
  }, {
    "left" : "actualParameterizedType",
    "right" : "actualParameterizedType",
    "info" : "SimpleName[5056-5079]:SimpleName[5555-5578]"
  }, {
    "left" : "Object mock",
    "right" : "Object mock",
    "info" : "SingleVariableDeclaration[5080-5091]:SingleVariableDeclaration[5579-5590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5093-5296]:Block[5592-5795]"
  }, {
    "left" : "CreationSettings mockSettings = (CreationSettings) new MockUtil().getMockHandler(mock).getMockSettings();",
    "right" : "CreationSettings mockSettings = (CreationSettings) new MockUtil().getMockHandler(mock).getMockSettings();",
    "info" : "VariableDeclarationStatement[5104-5209]:VariableDeclarationStatement[5603-5708]"
  }, {
    "left" : "return GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());",
    "right" : "return GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());",
    "info" : "ReturnStatement[5219-5289]:ReturnStatement[5718-5788]"
  } ]
}