{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DatabindContext",
      "right" : "DatabindContext",
      "info" : "TypeDeclaration[576-12888]:TypeDeclaration[576-12903]"
    }, {
      "left" : "private final static int MAX_ERROR_STR_LEN = 500;",
      "right" : "private final static int MAX_ERROR_STR_LEN = 500;",
      "info" : "FieldDeclaration[957-1221]:FieldDeclaration[957-1221]"
    }, {
      "left" : "public abstract MapperConfig<?> getConfig();",
      "right" : "public abstract MapperConfig<?> getConfig();",
      "info" : "MethodDeclaration[1400-1567]:MethodDeclaration[1400-1567]"
    }, {
      "left" : "public abstract AnnotationIntrospector getAnnotationIntrospector();",
      "right" : "public abstract AnnotationIntrospector getAnnotationIntrospector();",
      "info" : "MethodDeclaration[1573-1822]:MethodDeclaration[1573-1822]"
    }, {
      "left" : "public abstract boolean isEnabled(MapperFeature feature);",
      "right" : "public abstract boolean isEnabled(MapperFeature feature);",
      "info" : "MethodDeclaration[2018-2282]:MethodDeclaration[2018-2282]"
    }, {
      "left" : "public abstract boolean canOverrideAccessModifiers();",
      "right" : "public abstract boolean canOverrideAccessModifiers();",
      "info" : "MethodDeclaration[2288-2524]:MethodDeclaration[2288-2524]"
    }, {
      "left" : "public abstract Class<?> getActiveView();",
      "right" : "public abstract Class<?> getActiveView();",
      "info" : "MethodDeclaration[2530-2692]:MethodDeclaration[2530-2692]"
    }, {
      "left" : "public abstract Locale getLocale();",
      "right" : "public abstract Locale getLocale();",
      "info" : "MethodDeclaration[2698-2767]:MethodDeclaration[2698-2767]"
    }, {
      "left" : "public abstract TimeZone getTimeZone();",
      "right" : "public abstract TimeZone getTimeZone();",
      "info" : "MethodDeclaration[2773-2846]:MethodDeclaration[2773-2846]"
    }, {
      "left" : "public abstract JsonFormat.Value getDefaultPropertyFormat(Class<?> baseType);",
      "right" : "public abstract JsonFormat.Value getDefaultPropertyFormat(Class<?> baseType);",
      "info" : "MethodDeclaration[2852-2963]:MethodDeclaration[2852-2963]"
    }, {
      "left" : "public abstract Object getAttribute(Object key);",
      "right" : "public abstract Object getAttribute(Object key);",
      "info" : "MethodDeclaration[3146-3571]:MethodDeclaration[3146-3571]"
    }, {
      "left" : "public abstract DatabindContext setAttribute(Object key, Object value);",
      "right" : "public abstract DatabindContext setAttribute(Object key, Object value);",
      "info" : "MethodDeclaration[3577-4014]:MethodDeclaration[3577-4014]"
    }, {
      "left" : "public JavaType constructType(Type type)",
      "right" : "public JavaType constructType(Type type)",
      "info" : "MethodDeclaration[4201-4501]:MethodDeclaration[4201-4501]"
    }, {
      "left" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
      "right" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
      "info" : "MethodDeclaration[4507-4970]:MethodDeclaration[4507-4970]"
    }, {
      "left" : "public JavaType resolveSubType(JavaType baseType, String subClass)\n        throws JsonMappingException",
      "right" : "public JavaType resolveSubType(JavaType baseType, String subClass)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4976-6676]:MethodDeclaration[4976-6691]"
    }, {
      "left" : "protected abstract JsonMappingException invalidTypeIdException(JavaType baseType, String typeId,\n            String extraDesc);",
      "right" : "protected abstract JsonMappingException invalidTypeIdException(JavaType baseType, String typeId,\n            String extraDesc);",
      "info" : "MethodDeclaration[6682-7276]:MethodDeclaration[6697-7291]"
    }, {
      "left" : "public abstract TypeFactory getTypeFactory();",
      "right" : "public abstract TypeFactory getTypeFactory();",
      "info" : "MethodDeclaration[7282-7327]:MethodDeclaration[7297-7342]"
    }, {
      "left" : "public ObjectIdGenerator<?> objectIdGeneratorInstance(Annotated annotated,\n            ObjectIdInfo objectIdInfo)\n        throws JsonMappingException",
      "right" : "public ObjectIdGenerator<?> objectIdGeneratorInstance(Annotated annotated,\n            ObjectIdInfo objectIdInfo)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7511-8195]:MethodDeclaration[7526-8210]"
    }, {
      "left" : "public ObjectIdResolver objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)",
      "right" : "public ObjectIdResolver objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)",
      "info" : "MethodDeclaration[8201-8798]:MethodDeclaration[8216-8813]"
    }, {
      "left" : "public Converter<Object,Object> converterInstance(Annotated annotated,\n            Object converterDef)\n        throws JsonMappingException",
      "right" : "public Converter<Object,Object> converterInstance(Annotated annotated,\n            Object converterDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8804-10615]:MethodDeclaration[8819-10630]"
    }, {
      "left" : "public abstract <T> T reportBadDefinition(JavaType type, String msg) throws JsonMappingException;",
      "right" : "public abstract <T> T reportBadDefinition(JavaType type, String msg) throws JsonMappingException;",
      "info" : "MethodDeclaration[10788-11176]:MethodDeclaration[10803-11191]"
    }, {
      "left" : "public <T> T reportBadDefinition(Class<?> type, String msg) throws JsonMappingException",
      "right" : "public <T> T reportBadDefinition(Class<?> type, String msg) throws JsonMappingException",
      "info" : "MethodDeclaration[11182-11373]:MethodDeclaration[11197-11388]"
    }, {
      "left" : "protected final String _format(String msg, Object... msgArgs)",
      "right" : "protected final String _format(String msg, Object... msgArgs)",
      "info" : "MethodDeclaration[11545-11760]:MethodDeclaration[11560-11775]"
    }, {
      "left" : "protected final String _truncate(String desc)",
      "right" : "protected final String _truncate(String desc)",
      "info" : "MethodDeclaration[11766-12114]:MethodDeclaration[11781-12129]"
    }, {
      "left" : "protected String _quotedString(String desc)",
      "right" : "protected String _quotedString(String desc)",
      "info" : "MethodDeclaration[12120-12408]:MethodDeclaration[12135-12423]"
    }, {
      "left" : "protected String _colonConcat(String msgBase, String extra)",
      "right" : "protected String _colonConcat(String msgBase, String extra)",
      "info" : "MethodDeclaration[12418-12625]:MethodDeclaration[12433-12640]"
    }, {
      "left" : "protected String _desc(String desc)",
      "right" : "protected String _desc(String desc)",
      "info" : "MethodDeclaration[12631-12886]:MethodDeclaration[12646-12901]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[913-919]:Modifier[913-919]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[920-928]:Modifier[920-928]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[929-934]:TYPE_DECLARATION_KIND[929-934]"
    }, {
      "left" : "DatabindContext",
      "right" : "DatabindContext",
      "info" : "SimpleName[935-950]:SimpleName[935-950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1523-1529]:Modifier[1523-1529]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1530-1538]:Modifier[1530-1538]"
    }, {
      "left" : "MapperConfig<?>",
      "right" : "MapperConfig<?>",
      "info" : "ParameterizedType[1539-1554]:ParameterizedType[1539-1554]"
    }, {
      "left" : "getConfig",
      "right" : "getConfig",
      "info" : "SimpleName[1555-1564]:SimpleName[1555-1564]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1755-1761]:Modifier[1755-1761]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1762-1770]:Modifier[1762-1770]"
    }, {
      "left" : "AnnotationIntrospector",
      "right" : "AnnotationIntrospector",
      "info" : "SimpleType[1771-1793]:SimpleType[1771-1793]"
    }, {
      "left" : "getAnnotationIntrospector",
      "right" : "getAnnotationIntrospector",
      "info" : "SimpleName[1794-1819]:SimpleName[1794-1819]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2225-2231]:Modifier[2225-2231]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2232-2240]:Modifier[2232-2240]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2241-2248]:PrimitiveType[2241-2248]"
    }, {
      "left" : "isEnabled",
      "right" : "isEnabled",
      "info" : "SimpleName[2249-2258]:SimpleName[2249-2258]"
    }, {
      "left" : "MapperFeature feature",
      "right" : "MapperFeature feature",
      "info" : "SingleVariableDeclaration[2259-2280]:SingleVariableDeclaration[2259-2280]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2471-2477]:Modifier[2471-2477]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2478-2486]:Modifier[2478-2486]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2487-2494]:PrimitiveType[2487-2494]"
    }, {
      "left" : "canOverrideAccessModifiers",
      "right" : "canOverrideAccessModifiers",
      "info" : "SimpleName[2495-2521]:SimpleName[2495-2521]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2651-2657]:Modifier[2651-2657]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2658-2666]:Modifier[2658-2666]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[2667-2675]:ParameterizedType[2667-2675]"
    }, {
      "left" : "getActiveView",
      "right" : "getActiveView",
      "info" : "SimpleName[2676-2689]:SimpleName[2676-2689]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2732-2738]:Modifier[2732-2738]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2739-2747]:Modifier[2739-2747]"
    }, {
      "left" : "Locale",
      "right" : "Locale",
      "info" : "SimpleType[2748-2754]:SimpleType[2748-2754]"
    }, {
      "left" : "getLocale",
      "right" : "getLocale",
      "info" : "SimpleName[2755-2764]:SimpleName[2755-2764]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2807-2813]:Modifier[2807-2813]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2814-2822]:Modifier[2814-2822]"
    }, {
      "left" : "TimeZone",
      "right" : "TimeZone",
      "info" : "SimpleType[2823-2831]:SimpleType[2823-2831]"
    }, {
      "left" : "getTimeZone",
      "right" : "getTimeZone",
      "info" : "SimpleName[2832-2843]:SimpleName[2832-2843]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2886-2892]:Modifier[2886-2892]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2893-2901]:Modifier[2893-2901]"
    }, {
      "left" : "JsonFormat.Value",
      "right" : "JsonFormat.Value",
      "info" : "SimpleType[2902-2918]:SimpleType[2902-2918]"
    }, {
      "left" : "getDefaultPropertyFormat",
      "right" : "getDefaultPropertyFormat",
      "info" : "SimpleName[2919-2943]:SimpleName[2919-2943]"
    }, {
      "left" : "Class<?> baseType",
      "right" : "Class<?> baseType",
      "info" : "SingleVariableDeclaration[2944-2961]:SingleVariableDeclaration[2944-2961]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3523-3529]:Modifier[3523-3529]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[3530-3538]:Modifier[3530-3538]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[3539-3545]:SimpleType[3539-3545]"
    }, {
      "left" : "getAttribute",
      "right" : "getAttribute",
      "info" : "SimpleName[3546-3558]:SimpleName[3546-3558]"
    }, {
      "left" : "Object key",
      "right" : "Object key",
      "info" : "SingleVariableDeclaration[3559-3569]:SingleVariableDeclaration[3559-3569]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3943-3949]:Modifier[3943-3949]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[3950-3958]:Modifier[3950-3958]"
    }, {
      "left" : "DatabindContext",
      "right" : "DatabindContext",
      "info" : "SimpleType[3959-3974]:SimpleType[3959-3974]"
    }, {
      "left" : "setAttribute",
      "right" : "setAttribute",
      "info" : "SimpleName[3975-3987]:SimpleName[3975-3987]"
    }, {
      "left" : "Object key",
      "right" : "Object key",
      "info" : "SingleVariableDeclaration[3988-3998]:SingleVariableDeclaration[3988-3998]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[4000-4012]:SingleVariableDeclaration[4000-4012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4337-4343]:Modifier[4337-4343]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[4344-4352]:SimpleType[4344-4352]"
    }, {
      "left" : "constructType",
      "right" : "constructType",
      "info" : "SimpleName[4353-4366]:SimpleName[4353-4366]"
    }, {
      "left" : "Type type",
      "right" : "Type type",
      "info" : "SingleVariableDeclaration[4367-4376]:SingleVariableDeclaration[4367-4376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4378-4501]:Block[4378-4501]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[4388-4442]:IfStatement[4388-4442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4406-4442]:Block[4406-4442]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4420-4432]:ReturnStatement[4420-4432]"
    }, {
      "left" : "return getTypeFactory().constructType(type);",
      "right" : "return getTypeFactory().constructType(type);",
      "info" : "ReturnStatement[4451-4495]:ReturnStatement[4451-4495]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4625-4631]:Modifier[4625-4631]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[4632-4640]:SimpleType[4632-4640]"
    }, {
      "left" : "constructSpecializedType",
      "right" : "constructSpecializedType",
      "info" : "SimpleName[4641-4665]:SimpleName[4641-4665]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[4666-4683]:SingleVariableDeclaration[4666-4683]"
    }, {
      "left" : "Class<?> subclass",
      "right" : "Class<?> subclass",
      "info" : "SingleVariableDeclaration[4685-4702]:SingleVariableDeclaration[4685-4702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4704-4970]:Block[4704-4970]"
    }, {
      "left" : "if (baseType.getRawClass() == subclass)",
      "right" : "if (baseType.getRawClass() == subclass)",
      "info" : "IfStatement[4811-4891]:IfStatement[4811-4891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4851-4891]:Block[4851-4891]"
    }, {
      "left" : "return baseType;",
      "right" : "return baseType;",
      "info" : "ReturnStatement[4865-4881]:ReturnStatement[4865-4881]"
    }, {
      "left" : "return getConfig().constructSpecializedType(baseType, subclass);",
      "right" : "return getConfig().constructSpecializedType(baseType, subclass);",
      "info" : "ReturnStatement[4900-4964]:ReturnStatement[4900-4964]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5124-5130]:Modifier[5124-5130]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[5131-5139]:SimpleType[5131-5139]"
    }, {
      "left" : "resolveSubType",
      "right" : "resolveSubType",
      "info" : "SimpleName[5140-5154]:SimpleName[5140-5154]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[5155-5172]:SingleVariableDeclaration[5155-5172]"
    }, {
      "left" : "String subClass",
      "right" : "String subClass",
      "info" : "SingleVariableDeclaration[5174-5189]:SingleVariableDeclaration[5174-5189]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[5206-5226]:SimpleType[5206-5226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5231-6676]:Block[5231-6691]"
    }, {
      "left" : "if (subClass.indexOf('<') > 0)",
      "right" : "if (subClass.indexOf('<') > 0)",
      "info" : "IfStatement[5442-6595]:IfStatement[5442-6610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5473-5949]:Block[5473-5949]"
    }, {
      "left" : "JavaType t = getTypeFactory().constructFromCanonical(subClass);",
      "right" : "JavaType t = getTypeFactory().constructFromCanonical(subClass);",
      "info" : "VariableDeclarationStatement[5773-5836]:VariableDeclarationStatement[5773-5836]"
    }, {
      "left" : "if (t.isTypeOrSubTypeOf(baseType.getRawClass()))",
      "right" : "if (t.isTypeOrSubTypeOf(baseType.getRawClass()))",
      "info" : "IfStatement[5849-5939]:IfStatement[5849-5939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5898-5939]:Block[5898-5939]"
    }, {
      "left" : "return t;",
      "right" : "return t;",
      "info" : "ReturnStatement[5916-5925]:ReturnStatement[5916-5925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5955-6595]:Block[5955-6610]"
    }, {
      "left" : "Class<?> cls;",
      "right" : "Class<?> cls;",
      "info" : "VariableDeclarationStatement[5969-5982]:VariableDeclarationStatement[5969-5982]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5995-6437]:TryStatement[5995-6452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5999-6075]:Block[5999-6075]"
    }, {
      "left" : "cls =  getTypeFactory().findClass(subClass);",
      "right" : "cls =  getTypeFactory().findClass(subClass);",
      "info" : "ExpressionStatement[6017-6061]:ExpressionStatement[6017-6061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6109-6187]:Block[6109-6187]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6161-6173]:ReturnStatement[6161-6173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6208-6437]:Block[6208-6452]"
    }, {
      "left" : "throw invalidTypeIdException(baseType, subClass, String.format(\n                        \"problem: (%s) %s\",\n                        e.getClass().getName(),\n                        e.getMessage()));",
      "right" : "throw invalidTypeIdException(baseType, subClass, String.format(\n                        \"problem: (%s) %s\",\n                        e.getClass().getName(),\n                        ClassUtil.exceptionMessage(e)));",
      "info" : "ThrowStatement[6226-6423]:ThrowStatement[6226-6438]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[6406-6407]:SimpleName[6433-6434]"
    }, {
      "left" : "getMessage",
      "right" : "exceptionMessage",
      "info" : "SimpleName[6408-6418]:SimpleName[6416-6432]"
    }, {
      "left" : "if (baseType.isTypeOrSuperTypeOf(cls))",
      "right" : "if (baseType.isTypeOrSuperTypeOf(cls))",
      "info" : "IfStatement[6450-6585]:IfStatement[6465-6600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6489-6585]:Block[6504-6600]"
    }, {
      "left" : "return getTypeFactory().constructSpecializedType(baseType, cls);",
      "right" : "return getTypeFactory().constructSpecializedType(baseType, cls);",
      "info" : "ReturnStatement[6507-6571]:ReturnStatement[6522-6586]"
    }, {
      "left" : "throw invalidTypeIdException(baseType, subClass, \"Not a subtype\");",
      "right" : "throw invalidTypeIdException(baseType, subClass, \"Not a subtype\");",
      "info" : "ThrowStatement[6604-6670]:ThrowStatement[6619-6685]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7149-7158]:Modifier[7164-7173]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[7159-7167]:Modifier[7174-7182]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7168-7188]:SimpleType[7183-7203]"
    }, {
      "left" : "invalidTypeIdException",
      "right" : "invalidTypeIdException",
      "info" : "SimpleName[7189-7211]:SimpleName[7204-7226]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[7212-7229]:SingleVariableDeclaration[7227-7244]"
    }, {
      "left" : "String typeId",
      "right" : "String typeId",
      "info" : "SingleVariableDeclaration[7231-7244]:SingleVariableDeclaration[7246-7259]"
    }, {
      "left" : "String extraDesc",
      "right" : "String extraDesc",
      "info" : "SingleVariableDeclaration[7258-7274]:SingleVariableDeclaration[7273-7289]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7282-7288]:Modifier[7297-7303]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[7289-7297]:Modifier[7304-7312]"
    }, {
      "left" : "TypeFactory",
      "right" : "TypeFactory",
      "info" : "SimpleType[7298-7309]:SimpleType[7313-7324]"
    }, {
      "left" : "getTypeFactory",
      "right" : "getTypeFactory",
      "info" : "SimpleName[7310-7324]:SimpleName[7325-7339]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7511-7517]:Modifier[7526-7532]"
    }, {
      "left" : "ObjectIdGenerator<?>",
      "right" : "ObjectIdGenerator<?>",
      "info" : "ParameterizedType[7518-7538]:ParameterizedType[7533-7553]"
    }, {
      "left" : "objectIdGeneratorInstance",
      "right" : "objectIdGeneratorInstance",
      "info" : "SimpleName[7539-7564]:SimpleName[7554-7579]"
    }, {
      "left" : "Annotated annotated",
      "right" : "Annotated annotated",
      "info" : "SingleVariableDeclaration[7565-7584]:SingleVariableDeclaration[7580-7599]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo",
      "right" : "ObjectIdInfo objectIdInfo",
      "info" : "SingleVariableDeclaration[7598-7623]:SingleVariableDeclaration[7613-7638]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7640-7660]:SimpleType[7655-7675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7665-8195]:Block[7680-8210]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[7675-7728]:VariableDeclarationStatement[7690-7743]"
    }, {
      "left" : "final MapperConfig<?> config = getConfig();",
      "right" : "final MapperConfig<?> config = getConfig();",
      "info" : "VariableDeclarationStatement[7737-7780]:VariableDeclarationStatement[7752-7795]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[7789-7846]:VariableDeclarationStatement[7804-7861]"
    }, {
      "left" : "ObjectIdGenerator<?> gen = (hi == null) ? null : hi.objectIdGeneratorInstance(config, annotated, implClass);",
      "right" : "ObjectIdGenerator<?> gen = (hi == null) ? null : hi.objectIdGeneratorInstance(config, annotated, implClass);",
      "info" : "VariableDeclarationStatement[7855-7963]:VariableDeclarationStatement[7870-7978]"
    }, {
      "left" : "if (gen == null)",
      "right" : "if (gen == null)",
      "info" : "IfStatement[7972-8135]:IfStatement[7987-8150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7989-8135]:Block[8004-8150]"
    }, {
      "left" : "gen = (ObjectIdGenerator<?>) ClassUtil.createInstance(implClass,\n                    config.canOverrideAccessModifiers());",
      "right" : "gen = (ObjectIdGenerator<?>) ClassUtil.createInstance(implClass,\n                    config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[8003-8125]:ExpressionStatement[8018-8140]"
    }, {
      "left" : "return gen.forScope(objectIdInfo.getScope());",
      "right" : "return gen.forScope(objectIdInfo.getScope());",
      "info" : "ReturnStatement[8144-8189]:ReturnStatement[8159-8204]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8201-8207]:Modifier[8216-8222]"
    }, {
      "left" : "ObjectIdResolver",
      "right" : "ObjectIdResolver",
      "info" : "SimpleType[8208-8224]:SimpleType[8223-8239]"
    }, {
      "left" : "objectIdResolverInstance",
      "right" : "objectIdResolverInstance",
      "info" : "SimpleName[8225-8249]:SimpleName[8240-8264]"
    }, {
      "left" : "Annotated annotated",
      "right" : "Annotated annotated",
      "info" : "SingleVariableDeclaration[8250-8269]:SingleVariableDeclaration[8265-8284]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo",
      "right" : "ObjectIdInfo objectIdInfo",
      "info" : "SingleVariableDeclaration[8271-8296]:SingleVariableDeclaration[8286-8311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8302-8798]:Block[8317-8813]"
    }, {
      "left" : "Class<? extends ObjectIdResolver> implClass = objectIdInfo.getResolverType();",
      "right" : "Class<? extends ObjectIdResolver> implClass = objectIdInfo.getResolverType();",
      "info" : "VariableDeclarationStatement[8312-8389]:VariableDeclarationStatement[8327-8404]"
    }, {
      "left" : "final MapperConfig<?> config = getConfig();",
      "right" : "final MapperConfig<?> config = getConfig();",
      "info" : "VariableDeclarationStatement[8398-8441]:VariableDeclarationStatement[8413-8456]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[8450-8507]:VariableDeclarationStatement[8465-8522]"
    }, {
      "left" : "ObjectIdResolver resolver = (hi == null) ? null : hi.resolverIdGeneratorInstance(config, annotated, implClass);",
      "right" : "ObjectIdResolver resolver = (hi == null) ? null : hi.resolverIdGeneratorInstance(config, annotated, implClass);",
      "info" : "VariableDeclarationStatement[8516-8627]:VariableDeclarationStatement[8531-8642]"
    }, {
      "left" : "if (resolver == null)",
      "right" : "if (resolver == null)",
      "info" : "IfStatement[8636-8766]:IfStatement[8651-8781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8658-8766]:Block[8673-8781]"
    }, {
      "left" : "resolver = ClassUtil.createInstance(implClass, config.canOverrideAccessModifiers());",
      "right" : "resolver = ClassUtil.createInstance(implClass, config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[8672-8756]:ExpressionStatement[8687-8771]"
    }, {
      "left" : "return resolver;",
      "right" : "return resolver;",
      "info" : "ReturnStatement[8776-8792]:ReturnStatement[8791-8807]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[9012-9042]:SingleMemberAnnotation[9027-9057]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9047-9053]:Modifier[9062-9068]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[9054-9078]:ParameterizedType[9069-9093]"
    }, {
      "left" : "converterInstance",
      "right" : "converterInstance",
      "info" : "SimpleName[9079-9096]:SimpleName[9094-9111]"
    }, {
      "left" : "Annotated annotated",
      "right" : "Annotated annotated",
      "info" : "SingleVariableDeclaration[9097-9116]:SingleVariableDeclaration[9112-9131]"
    }, {
      "left" : "Object converterDef",
      "right" : "Object converterDef",
      "info" : "SingleVariableDeclaration[9130-9149]:SingleVariableDeclaration[9145-9164]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[9166-9186]:SimpleType[9181-9201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9191-10615]:Block[9206-10630]"
    }, {
      "left" : "if (converterDef == null)",
      "right" : "if (converterDef == null)",
      "info" : "IfStatement[9201-9263]:IfStatement[9216-9278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9227-9263]:Block[9242-9278]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9241-9253]:ReturnStatement[9256-9268]"
    }, {
      "left" : "if (converterDef instanceof Converter<?,?>)",
      "right" : "if (converterDef instanceof Converter<?,?>)",
      "info" : "IfStatement[9272-9387]:IfStatement[9287-9402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9316-9387]:Block[9331-9402]"
    }, {
      "left" : "return (Converter<Object,Object>) converterDef;",
      "right" : "return (Converter<Object,Object>) converterDef;",
      "info" : "ReturnStatement[9330-9377]:ReturnStatement[9345-9392]"
    }, {
      "left" : "if (!(converterDef instanceof Class))",
      "right" : "if (!(converterDef instanceof Class))",
      "info" : "IfStatement[9396-9666]:IfStatement[9411-9681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9434-9666]:Block[9449-9681]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "info" : "ThrowStatement[9448-9656]:ThrowStatement[9463-9671]"
    }, {
      "left" : "Class<?> converterClass = (Class<?>)converterDef;",
      "right" : "Class<?> converterClass = (Class<?>)converterDef;",
      "info" : "VariableDeclarationStatement[9675-9724]:VariableDeclarationStatement[9690-9739]"
    }, {
      "left" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "right" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "info" : "IfStatement[9801-9923]:IfStatement[9816-9938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9887-9923]:Block[9902-9938]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9901-9913]:ReturnStatement[9916-9928]"
    }, {
      "left" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "right" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "info" : "IfStatement[9932-10161]:IfStatement[9947-10176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9987-10161]:Block[10002-10176]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "info" : "ThrowStatement[10001-10151]:ThrowStatement[10016-10166]"
    }, {
      "left" : "final MapperConfig<?> config = getConfig();",
      "right" : "final MapperConfig<?> config = getConfig();",
      "info" : "VariableDeclarationStatement[10170-10213]:VariableDeclarationStatement[10185-10228]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[10222-10279]:VariableDeclarationStatement[10237-10294]"
    }, {
      "left" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(config, annotated, converterClass);",
      "right" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(config, annotated, converterClass);",
      "info" : "VariableDeclarationStatement[10288-10388]:VariableDeclarationStatement[10303-10403]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[10397-10561]:IfStatement[10412-10576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10415-10561]:Block[10430-10576]"
    }, {
      "left" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    config.canOverrideAccessModifiers());",
      "right" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[10429-10551]:ExpressionStatement[10444-10566]"
    }, {
      "left" : "return (Converter<Object,Object>) conv;",
      "right" : "return (Converter<Object,Object>) conv;",
      "info" : "ReturnStatement[10570-10609]:ReturnStatement[10585-10624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11079-11085]:Modifier[11094-11100]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[11086-11094]:Modifier[11101-11109]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[11096-11097]:TypeParameter[11111-11112]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[11099-11100]:SimpleType[11114-11115]"
    }, {
      "left" : "reportBadDefinition",
      "right" : "reportBadDefinition",
      "info" : "SimpleName[11101-11120]:SimpleName[11116-11135]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[11121-11134]:SingleVariableDeclaration[11136-11149]"
    }, {
      "left" : "String msg",
      "right" : "String msg",
      "info" : "SingleVariableDeclaration[11136-11146]:SingleVariableDeclaration[11151-11161]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[11155-11175]:SimpleType[11170-11190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11216-11222]:Modifier[11231-11237]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[11224-11225]:TypeParameter[11239-11240]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[11227-11228]:SimpleType[11242-11243]"
    }, {
      "left" : "reportBadDefinition",
      "right" : "reportBadDefinition",
      "info" : "SimpleName[11229-11248]:SimpleName[11244-11263]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[11249-11262]:SingleVariableDeclaration[11264-11277]"
    }, {
      "left" : "String msg",
      "right" : "String msg",
      "info" : "SingleVariableDeclaration[11264-11274]:SingleVariableDeclaration[11279-11289]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[11283-11303]:SimpleType[11298-11318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11304-11373]:Block[11319-11388]"
    }, {
      "left" : "return reportBadDefinition(constructType(type), msg);",
      "right" : "return reportBadDefinition(constructType(type), msg);",
      "info" : "ReturnStatement[11314-11367]:ReturnStatement[11329-11382]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11579-11588]:Modifier[11594-11603]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11589-11594]:Modifier[11604-11609]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11595-11601]:SimpleType[11610-11616]"
    }, {
      "left" : "_format",
      "right" : "_format",
      "info" : "SimpleName[11602-11609]:SimpleName[11617-11624]"
    }, {
      "left" : "String msg",
      "right" : "String msg",
      "info" : "SingleVariableDeclaration[11610-11620]:SingleVariableDeclaration[11625-11635]"
    }, {
      "left" : "Object... msgArgs",
      "right" : "Object... msgArgs",
      "info" : "SingleVariableDeclaration[11622-11639]:SingleVariableDeclaration[11637-11654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11641-11760]:Block[11656-11775]"
    }, {
      "left" : "if (msgArgs.length > 0)",
      "right" : "if (msgArgs.length > 0)",
      "info" : "IfStatement[11651-11734]:IfStatement[11666-11749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11675-11734]:Block[11690-11749]"
    }, {
      "left" : "return String.format(msg, msgArgs);",
      "right" : "return String.format(msg, msgArgs);",
      "info" : "ReturnStatement[11689-11724]:ReturnStatement[11704-11739]"
    }, {
      "left" : "return msg;",
      "right" : "return msg;",
      "info" : "ReturnStatement[11743-11754]:ReturnStatement[11758-11769]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11800-11809]:Modifier[11815-11824]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11810-11815]:Modifier[11825-11830]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11816-11822]:SimpleType[11831-11837]"
    }, {
      "left" : "_truncate",
      "right" : "_truncate",
      "info" : "SimpleName[11823-11832]:SimpleName[11838-11847]"
    }, {
      "left" : "String desc",
      "right" : "String desc",
      "info" : "SingleVariableDeclaration[11833-11844]:SingleVariableDeclaration[11848-11859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11846-12114]:Block[11861-12129]"
    }, {
      "left" : "if (desc == null)",
      "right" : "if (desc == null)",
      "info" : "IfStatement[11856-11908]:IfStatement[11871-11923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11874-11908]:Block[11889-11923]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[11888-11898]:ReturnStatement[11903-11913]"
    }, {
      "left" : "if (desc.length() <= MAX_ERROR_STR_LEN)",
      "right" : "if (desc.length() <= MAX_ERROR_STR_LEN)",
      "info" : "IfStatement[11917-11993]:IfStatement[11932-12008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11957-11993]:Block[11972-12008]"
    }, {
      "left" : "return desc;",
      "right" : "return desc;",
      "info" : "ReturnStatement[11971-11983]:ReturnStatement[11986-11998]"
    }, {
      "left" : "return desc.substring(0, MAX_ERROR_STR_LEN) + \"]...[\" + desc.substring(desc.length() - MAX_ERROR_STR_LEN);",
      "right" : "return desc.substring(0, MAX_ERROR_STR_LEN) + \"]...[\" + desc.substring(desc.length() - MAX_ERROR_STR_LEN);",
      "info" : "ReturnStatement[12002-12108]:ReturnStatement[12017-12123]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12154-12163]:Modifier[12169-12178]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12164-12170]:SimpleType[12179-12185]"
    }, {
      "left" : "_quotedString",
      "right" : "_quotedString",
      "info" : "SimpleName[12171-12184]:SimpleName[12186-12199]"
    }, {
      "left" : "String desc",
      "right" : "String desc",
      "info" : "SingleVariableDeclaration[12185-12196]:SingleVariableDeclaration[12200-12211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12198-12408]:Block[12213-12423]"
    }, {
      "left" : "if (desc == null)",
      "right" : "if (desc == null)",
      "info" : "IfStatement[12208-12265]:IfStatement[12223-12280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12226-12265]:Block[12241-12280]"
    }, {
      "left" : "return \"[N/A]\";",
      "right" : "return \"[N/A]\";",
      "info" : "ReturnStatement[12240-12255]:ReturnStatement[12255-12270]"
    }, {
      "left" : "return String.format(\"\\\"%s\\\"\", _truncate(desc));",
      "right" : "return String.format(\"\\\"%s\\\"\", _truncate(desc));",
      "info" : "ReturnStatement[12354-12402]:ReturnStatement[12369-12417]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12452-12461]:Modifier[12467-12476]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12462-12468]:SimpleType[12477-12483]"
    }, {
      "left" : "_colonConcat",
      "right" : "_colonConcat",
      "info" : "SimpleName[12469-12481]:SimpleName[12484-12496]"
    }, {
      "left" : "String msgBase",
      "right" : "String msgBase",
      "info" : "SingleVariableDeclaration[12482-12496]:SingleVariableDeclaration[12497-12511]"
    }, {
      "left" : "String extra",
      "right" : "String extra",
      "info" : "SingleVariableDeclaration[12498-12510]:SingleVariableDeclaration[12513-12525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12512-12625]:Block[12527-12640]"
    }, {
      "left" : "if (extra == null)",
      "right" : "if (extra == null)",
      "info" : "IfStatement[12522-12580]:IfStatement[12537-12595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12541-12580]:Block[12556-12595]"
    }, {
      "left" : "return msgBase;",
      "right" : "return msgBase;",
      "info" : "ReturnStatement[12555-12570]:ReturnStatement[12570-12585]"
    }, {
      "left" : "return msgBase + \": \" + extra;",
      "right" : "return msgBase + \": \" + extra;",
      "info" : "ReturnStatement[12589-12619]:ReturnStatement[12604-12634]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12665-12674]:Modifier[12680-12689]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12675-12681]:SimpleType[12690-12696]"
    }, {
      "left" : "_desc",
      "right" : "_desc",
      "info" : "SimpleName[12682-12687]:SimpleName[12697-12702]"
    }, {
      "left" : "String desc",
      "right" : "String desc",
      "info" : "SingleVariableDeclaration[12688-12699]:SingleVariableDeclaration[12703-12714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12701-12886]:Block[12716-12901]"
    }, {
      "left" : "if (desc == null)",
      "right" : "if (desc == null)",
      "info" : "IfStatement[12711-12768]:IfStatement[12726-12783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12729-12768]:Block[12744-12783]"
    }, {
      "left" : "return \"[N/A]\";",
      "right" : "return \"[N/A]\";",
      "info" : "ReturnStatement[12743-12758]:ReturnStatement[12758-12773]"
    }, {
      "left" : "return _truncate(desc);",
      "right" : "return _truncate(desc);",
      "info" : "ReturnStatement[12857-12880]:ReturnStatement[12872-12895]"
    } ]
  },
  "interFileMappings" : { }
}