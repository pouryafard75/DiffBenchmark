{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "@SuppressWarnings(\"rawtypes\")\n    public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;",
      "right" : "@SuppressWarnings(\"rawtypes\")\n    public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;",
      "info" : "FieldDeclaration[4284-4662]:FieldDeclaration[4284-4662]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n    public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;",
      "right" : "@SuppressWarnings(\"rawtypes\")\n    public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;",
      "info" : "FieldDeclaration[4668-5067]:FieldDeclaration[4668-5067]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n    public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;",
      "right" : "@SuppressWarnings(\"rawtypes\")\n    public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;",
      "info" : "FieldDeclaration[5073-5259]:FieldDeclaration[5073-5259]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n    public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;",
      "right" : "@SuppressWarnings(\"rawtypes\")\n    public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;",
      "info" : "FieldDeclaration[5265-5434]:FieldDeclaration[5265-5434]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n    public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;",
      "right" : "@SuppressWarnings(\"rawtypes\")\n    public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;",
      "info" : "FieldDeclaration[5440-5640]:FieldDeclaration[5440-5640]"
    }, {
      "left" : "private static final String DEFAULT_TOSTRING_PREFIX = \"[\";",
      "right" : "private static final String DEFAULT_TOSTRING_PREFIX = \"[\";",
      "info" : "FieldDeclaration[5646-5806]:FieldDeclaration[5646-5806]"
    }, {
      "left" : "private static final String DEFAULT_TOSTRING_SUFFIX = \"]\";",
      "right" : "private static final String DEFAULT_TOSTRING_SUFFIX = \"]\";",
      "info" : "FieldDeclaration[5812-5972]:FieldDeclaration[5812-5972]"
    }, {
      "left" : "private static final String DEFAULT_TOSTRING_DELIMITER = \", \";",
      "right" : "private static final String DEFAULT_TOSTRING_DELIMITER = \", \";",
      "info" : "FieldDeclaration[5978-6172]:FieldDeclaration[5978-6172]"
    }, {
      "left" : "private IteratorUtils()",
      "right" : "private IteratorUtils()",
      "info" : "MethodDeclaration[6178-6271]:MethodDeclaration[6178-6271]"
    }, {
      "left" : "public static <E> ResettableIterator<E> emptyIterator()",
      "right" : "public static <E> ResettableIterator<E> emptyIterator()",
      "info" : "MethodDeclaration[6368-6918]:MethodDeclaration[6368-6918]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> emptyListIterator()",
      "right" : "public static <E> ResettableListIterator<E> emptyListIterator()",
      "info" : "MethodDeclaration[6924-7508]:MethodDeclaration[6924-7508]"
    }, {
      "left" : "public static <E> OrderedIterator<E> emptyOrderedIterator()",
      "right" : "public static <E> OrderedIterator<E> emptyOrderedIterator()",
      "info" : "MethodDeclaration[7514-7889]:MethodDeclaration[7514-7889]"
    }, {
      "left" : "public static <K, V> MapIterator<K, V> emptyMapIterator()",
      "right" : "public static <K, V> MapIterator<K, V> emptyMapIterator()",
      "info" : "MethodDeclaration[7895-8288]:MethodDeclaration[7895-8288]"
    }, {
      "left" : "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()",
      "right" : "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()",
      "info" : "MethodDeclaration[8294-8723]:MethodDeclaration[8294-8723]"
    }, {
      "left" : "public static <E> ResettableIterator<E> singletonIterator(final E object)",
      "right" : "public static <E> ResettableIterator<E> singletonIterator(final E object)",
      "info" : "MethodDeclaration[8824-9448]:MethodDeclaration[8824-9448]"
    }, {
      "left" : "public static <E> ListIterator<E> singletonListIterator(final E object)",
      "right" : "public static <E> ListIterator<E> singletonListIterator(final E object)",
      "info" : "MethodDeclaration[9454-9920]:MethodDeclaration[9454-9920]"
    }, {
      "left" : "public static <E> ResettableIterator<E> arrayIterator(final E... array)",
      "right" : "public static <E> ResettableIterator<E> arrayIterator(final E... array)",
      "info" : "MethodDeclaration[10018-10571]:MethodDeclaration[10018-10571]"
    }, {
      "left" : "public static <E> ResettableIterator<E> arrayIterator(final Object array)",
      "right" : "public static <E> ResettableIterator<E> arrayIterator(final Object array)",
      "info" : "MethodDeclaration[10577-11195]:MethodDeclaration[10577-11195]"
    }, {
      "left" : "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)",
      "right" : "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)",
      "info" : "MethodDeclaration[11201-11976]:MethodDeclaration[11201-11976]"
    }, {
      "left" : "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)",
      "right" : "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)",
      "info" : "MethodDeclaration[11982-12817]:MethodDeclaration[11982-12817]"
    }, {
      "left" : "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)",
      "right" : "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)",
      "info" : "MethodDeclaration[12823-13681]:MethodDeclaration[12823-13681]"
    }, {
      "left" : "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)",
      "right" : "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)",
      "info" : "MethodDeclaration[13687-14561]:MethodDeclaration[13687-14561]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)",
      "right" : "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)",
      "info" : "MethodDeclaration[14645-15048]:MethodDeclaration[14645-15048]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)",
      "right" : "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)",
      "info" : "MethodDeclaration[15054-15692]:MethodDeclaration[15054-15692]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)",
      "right" : "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)",
      "info" : "MethodDeclaration[15698-16268]:MethodDeclaration[15698-16268]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)",
      "right" : "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)",
      "info" : "MethodDeclaration[16274-17080]:MethodDeclaration[16274-17080]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)",
      "right" : "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)",
      "info" : "MethodDeclaration[17086-17784]:MethodDeclaration[17086-17784]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)",
      "right" : "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)",
      "info" : "MethodDeclaration[17790-18684]:MethodDeclaration[17790-18684]"
    }, {
      "left" : "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)",
      "right" : "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)",
      "info" : "MethodDeclaration[18783-19359]:MethodDeclaration[18783-19359]"
    }, {
      "left" : "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator,\n                                                         long offset, long max)",
      "right" : "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator,\n                                                         long offset, long max)",
      "info" : "MethodDeclaration[19365-20349]:MethodDeclaration[19365-20349]"
    }, {
      "left" : "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)",
      "right" : "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)",
      "info" : "MethodDeclaration[20453-20963]:MethodDeclaration[20453-20963]"
    }, {
      "left" : "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)",
      "right" : "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)",
      "info" : "MethodDeclaration[20969-21576]:MethodDeclaration[20969-21576]"
    }, {
      "left" : "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)",
      "right" : "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)",
      "info" : "MethodDeclaration[21582-22196]:MethodDeclaration[21582-22196]"
    }, {
      "left" : "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1,\n                                                  final Iterator<? extends E> iterator2)",
      "right" : "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1,\n                                                  final Iterator<? extends E> iterator2)",
      "info" : "MethodDeclaration[22296-23105]:MethodDeclaration[22296-23105]"
    }, {
      "left" : "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)",
      "right" : "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)",
      "info" : "MethodDeclaration[23111-23636]:MethodDeclaration[23111-23636]"
    }, {
      "left" : "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)",
      "right" : "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)",
      "info" : "MethodDeclaration[23642-24279]:MethodDeclaration[23642-24279]"
    }, {
      "left" : "public static <E> Iterator<E> objectGraphIterator(final E root,\n            final Transformer<? super E, ? extends E> transformer)",
      "right" : "public static <E> Iterator<E> objectGraphIterator(final E root,\n            final Transformer<? super E, ? extends E> transformer)",
      "info" : "MethodDeclaration[27903-30471]:MethodDeclaration[28317-30885]"
    }, {
      "left" : "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator,\n            final Transformer<? super I, ? extends O> transform)",
      "right" : "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator,\n            final Transformer<? super I, ? extends O> transform)",
      "info" : "MethodDeclaration[30574-31561]:MethodDeclaration[30988-31975]"
    }, {
      "left" : "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator,\n                                                   final Predicate<? super E> predicate)",
      "right" : "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator,\n                                                   final Predicate<? super E> predicate)",
      "info" : "MethodDeclaration[31661-32590]:MethodDeclaration[32075-33004]"
    }, {
      "left" : "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator,\n            final Predicate<? super E> predicate)",
      "right" : "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator,\n            final Predicate<? super E> predicate)",
      "info" : "MethodDeclaration[32596-33537]:MethodDeclaration[33010-33951]"
    }, {
      "left" : "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)",
      "right" : "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)",
      "info" : "MethodDeclaration[33636-34373]:MethodDeclaration[34050-34787]"
    }, {
      "left" : "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)",
      "right" : "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)",
      "info" : "MethodDeclaration[34379-35087]:MethodDeclaration[34793-35501]"
    }, {
      "left" : "public static NodeListIterator nodeListIterator(final NodeList nodeList)",
      "right" : "public static NodeListIterator nodeListIterator(final NodeList nodeList)",
      "info" : "MethodDeclaration[35209-35800]:MethodDeclaration[35623-36214]"
    }, {
      "left" : "public static NodeListIterator nodeListIterator(final Node node)",
      "right" : "public static NodeListIterator nodeListIterator(final Node node)",
      "info" : "MethodDeclaration[35806-36641]:MethodDeclaration[36220-37055]"
    }, {
      "left" : "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)",
      "right" : "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)",
      "info" : "MethodDeclaration[36741-37181]:MethodDeclaration[37155-37595]"
    }, {
      "left" : "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)",
      "right" : "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)",
      "info" : "MethodDeclaration[37282-37725]:MethodDeclaration[37696-38139]"
    }, {
      "left" : "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)",
      "right" : "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)",
      "info" : "MethodDeclaration[37825-38366]:MethodDeclaration[38239-38780]"
    }, {
      "left" : "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a,\n                                                         final Iterator<? extends E> b)",
      "right" : "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a,\n                                                         final Iterator<? extends E> b)",
      "info" : "MethodDeclaration[38465-39079]:MethodDeclaration[38879-39493]"
    }, {
      "left" : "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a,\n                                                         final Iterator<? extends E> b,\n                                                         final Iterator<? extends E> c)",
      "right" : "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a,\n                                                         final Iterator<? extends E> b,\n                                                         final Iterator<? extends E> c)",
      "info" : "MethodDeclaration[39085-39840]:MethodDeclaration[39499-40254]"
    }, {
      "left" : "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)",
      "right" : "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)",
      "info" : "MethodDeclaration[39846-40349]:MethodDeclaration[40260-40763]"
    }, {
      "left" : "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)",
      "right" : "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)",
      "info" : "MethodDeclaration[40446-40935]:MethodDeclaration[40860-41349]"
    }, {
      "left" : "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration,\n                                             final Collection<? super E> removeCollection)",
      "right" : "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration,\n                                             final Collection<? super E> removeCollection)",
      "info" : "MethodDeclaration[40941-41798]:MethodDeclaration[41355-42212]"
    }, {
      "left" : "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)",
      "right" : "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)",
      "info" : "MethodDeclaration[41804-42317]:MethodDeclaration[42218-42731]"
    }, {
      "left" : "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)",
      "right" : "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)",
      "info" : "MethodDeclaration[42323-42930]:MethodDeclaration[42737-43344]"
    }, {
      "left" : "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)",
      "right" : "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)",
      "info" : "MethodDeclaration[42936-43532]:MethodDeclaration[43350-43946]"
    }, {
      "left" : "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)",
      "right" : "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)",
      "info" : "MethodDeclaration[43538-44218]:MethodDeclaration[43952-44632]"
    }, {
      "left" : "public static Object[] toArray(final Iterator<?> iterator)",
      "right" : "public static Object[] toArray(final Iterator<?> iterator)",
      "info" : "MethodDeclaration[44224-44868]:MethodDeclaration[44638-45282]"
    }, {
      "left" : "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)",
      "right" : "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)",
      "info" : "MethodDeclaration[44874-46014]:MethodDeclaration[45288-46428]"
    }, {
      "left" : "public static <E> List<E> toList(final Iterator<? extends E> iterator)",
      "right" : "public static <E> List<E> toList(final Iterator<? extends E> iterator)",
      "info" : "MethodDeclaration[46020-46538]:MethodDeclaration[46434-46952]"
    }, {
      "left" : "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)",
      "right" : "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)",
      "info" : "MethodDeclaration[46544-47596]:MethodDeclaration[46958-48010]"
    }, {
      "left" : "public static Iterator<?> getIterator(final Object obj)",
      "right" : "public static Iterator<?> getIterator(final Object obj)",
      "info" : "MethodDeclaration[47602-50246]:MethodDeclaration[48016-50660]"
    }, {
      "left" : "public static <E> void apply(final Iterator<E> iterator, final Closure<? super E> closure)",
      "right" : "public static <E> void apply(final Iterator<E> iterator, final Closure<? super E> closure)",
      "info" : "MethodDeclaration[50354-51091]:MethodDeclaration[50768-51505]"
    }, {
      "left" : "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)",
      "right" : "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)",
      "info" : "MethodDeclaration[51097-52110]:MethodDeclaration[51511-52524]"
    }, {
      "left" : "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)",
      "right" : "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)",
      "info" : "MethodDeclaration[52116-53149]:MethodDeclaration[52530-53563]"
    }, {
      "left" : "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)",
      "right" : "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)",
      "info" : "MethodDeclaration[53155-54230]:MethodDeclaration[53569-54644]"
    }, {
      "left" : "public static boolean isEmpty(final Iterator<?> iterator)",
      "right" : "public static boolean isEmpty(final Iterator<?> iterator)",
      "info" : "MethodDeclaration[54236-54653]:MethodDeclaration[54650-55067]"
    }, {
      "left" : "public static <E> boolean contains(final Iterator<E> iterator, final Object object)",
      "right" : "public static <E> boolean contains(final Iterator<E> iterator, final Object object)",
      "info" : "MethodDeclaration[54659-55251]:MethodDeclaration[55073-55665]"
    }, {
      "left" : "public static <E> E get(final Iterator<E> iterator, final int index)",
      "right" : "public static <E> E get(final Iterator<E> iterator, final int index)",
      "info" : "MethodDeclaration[55257-56358]:MethodDeclaration[55671-56772]"
    }, {
      "left" : "public static int size(final Iterator<?> iterator)",
      "right" : "public static int size(final Iterator<?> iterator)",
      "info" : "MethodDeclaration[56364-56929]:MethodDeclaration[56778-57343]"
    }, {
      "left" : "public static <E> String toString(final Iterator<E> iterator)",
      "right" : "public static <E> String toString(final Iterator<E> iterator)",
      "info" : "MethodDeclaration[56935-57808]:MethodDeclaration[57349-58222]"
    }, {
      "left" : "public static <E> String toString(final Iterator<E> iterator,\n                                      final Transformer<? super E, String> transformer)",
      "right" : "public static <E> String toString(final Iterator<E> iterator,\n                                      final Transformer<? super E, String> transformer)",
      "info" : "MethodDeclaration[57814-58902]:MethodDeclaration[58228-59316]"
    }, {
      "left" : "public static <E> String toString(final Iterator<E> iterator,\n                                      final Transformer<? super E, String> transformer,\n                                      final String delimiter,\n                                      final String prefix,\n                                      final String suffix)",
      "right" : "public static <E> String toString(final Iterator<E> iterator,\n                                      final Transformer<? super E, String> transformer,\n                                      final String delimiter,\n                                      final String prefix,\n                                      final String suffix)",
      "info" : "MethodDeclaration[58908-61276]:MethodDeclaration[59322-61690]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6269-6271]:Block[6269-6271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6852-6918]:Block[6852-6918]"
    }, {
      "left" : "return EmptyIterator.<E>resettableEmptyIterator();",
      "right" : "return EmptyIterator.<E>resettableEmptyIterator();",
      "info" : "ReturnStatement[6862-6912]:ReturnStatement[6862-6912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7434-7508]:Block[7434-7508]"
    }, {
      "left" : "return EmptyListIterator.<E>resettableEmptyListIterator();",
      "right" : "return EmptyListIterator.<E>resettableEmptyListIterator();",
      "info" : "ReturnStatement[7444-7502]:ReturnStatement[7444-7502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7819-7889]:Block[7819-7889]"
    }, {
      "left" : "return EmptyOrderedIterator.<E>emptyOrderedIterator();",
      "right" : "return EmptyOrderedIterator.<E>emptyOrderedIterator();",
      "info" : "ReturnStatement[7829-7883]:ReturnStatement[7829-7883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8223-8288]:Block[8223-8288]"
    }, {
      "left" : "return EmptyMapIterator.<K, V>emptyMapIterator();",
      "right" : "return EmptyMapIterator.<K, V>emptyMapIterator();",
      "info" : "ReturnStatement[8233-8282]:ReturnStatement[8233-8282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8644-8723]:Block[8644-8723]"
    }, {
      "left" : "return EmptyOrderedMapIterator.<K, V>emptyOrderedMapIterator();",
      "right" : "return EmptyOrderedMapIterator.<K, V>emptyOrderedMapIterator();",
      "info" : "ReturnStatement[8654-8717]:ReturnStatement[8654-8717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9392-9448]:Block[9392-9448]"
    }, {
      "left" : "return new SingletonIterator<E>(object);",
      "right" : "return new SingletonIterator<E>(object);",
      "info" : "ReturnStatement[9402-9442]:ReturnStatement[9402-9442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9860-9920]:Block[9860-9920]"
    }, {
      "left" : "return new SingletonListIterator<E>(object);",
      "right" : "return new SingletonListIterator<E>(object);",
      "info" : "ReturnStatement[9870-9914]:ReturnStatement[9870-9914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10514-10571]:Block[10514-10571]"
    }, {
      "left" : "return new ObjectArrayIterator<E>(array);",
      "right" : "return new ObjectArrayIterator<E>(array);",
      "info" : "ReturnStatement[10524-10565]:ReturnStatement[10524-10565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11144-11195]:Block[11144-11195]"
    }, {
      "left" : "return new ArrayIterator<E>(array);",
      "right" : "return new ArrayIterator<E>(array);",
      "info" : "ReturnStatement[11154-11189]:ReturnStatement[11154-11189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11912-11976]:Block[11912-11976]"
    }, {
      "left" : "return new ObjectArrayIterator<E>(array, start);",
      "right" : "return new ObjectArrayIterator<E>(array, start);",
      "info" : "ReturnStatement[11922-11970]:ReturnStatement[11922-11970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12759-12817]:Block[12759-12817]"
    }, {
      "left" : "return new ArrayIterator<E>(array, start);",
      "right" : "return new ArrayIterator<E>(array, start);",
      "info" : "ReturnStatement[12769-12811]:ReturnStatement[12769-12811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13612-13681]:Block[13612-13681]"
    }, {
      "left" : "return new ObjectArrayIterator<E>(array, start, end);",
      "right" : "return new ObjectArrayIterator<E>(array, start, end);",
      "info" : "ReturnStatement[13622-13675]:ReturnStatement[13622-13675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14498-14561]:Block[14498-14561]"
    }, {
      "left" : "return new ArrayIterator<E>(array, start, end);",
      "right" : "return new ArrayIterator<E>(array, start, end);",
      "info" : "ReturnStatement[14508-14555]:ReturnStatement[14508-14555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14987-15048]:Block[14987-15048]"
    }, {
      "left" : "return new ObjectArrayListIterator<E>(array);",
      "right" : "return new ObjectArrayListIterator<E>(array);",
      "info" : "ReturnStatement[14997-15042]:ReturnStatement[14997-15042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15637-15692]:Block[15637-15692]"
    }, {
      "left" : "return new ArrayListIterator<E>(array);",
      "right" : "return new ArrayListIterator<E>(array);",
      "info" : "ReturnStatement[15647-15686]:ReturnStatement[15647-15686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16200-16268]:Block[16200-16268]"
    }, {
      "left" : "return new ObjectArrayListIterator<E>(array, start);",
      "right" : "return new ObjectArrayListIterator<E>(array, start);",
      "info" : "ReturnStatement[16210-16262]:ReturnStatement[16210-16262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17018-17080]:Block[17018-17080]"
    }, {
      "left" : "return new ArrayListIterator<E>(array, start);",
      "right" : "return new ArrayListIterator<E>(array, start);",
      "info" : "ReturnStatement[17028-17074]:ReturnStatement[17028-17074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17711-17784]:Block[17711-17784]"
    }, {
      "left" : "return new ObjectArrayListIterator<E>(array, start, end);",
      "right" : "return new ObjectArrayListIterator<E>(array, start, end);",
      "info" : "ReturnStatement[17721-17778]:ReturnStatement[17721-17778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18617-18684]:Block[18617-18684]"
    }, {
      "left" : "return new ArrayListIterator<E>(array, start, end);",
      "right" : "return new ArrayListIterator<E>(array, start, end);",
      "info" : "ReturnStatement[18627-18678]:ReturnStatement[18627-18678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19302-19359]:Block[19302-19359]"
    }, {
      "left" : "return boundedIterator(iterator, 0, max);",
      "right" : "return boundedIterator(iterator, 0, max);",
      "info" : "ReturnStatement[19312-19353]:ReturnStatement[19312-19353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20280-20349]:Block[20280-20349]"
    }, {
      "left" : "return new BoundedIterator<E>(iterator, offset, max);",
      "right" : "return new BoundedIterator<E>(iterator, offset, max);",
      "info" : "ReturnStatement[20290-20343]:ReturnStatement[20290-20343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20888-20963]:Block[20888-20963]"
    }, {
      "left" : "return UnmodifiableIterator.unmodifiableIterator(iterator);",
      "right" : "return UnmodifiableIterator.unmodifiableIterator(iterator);",
      "info" : "ReturnStatement[20898-20957]:ReturnStatement[20898-20957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21490-21576]:Block[21490-21576]"
    }, {
      "left" : "return UnmodifiableListIterator.umodifiableListIterator(listIterator);",
      "right" : "return UnmodifiableListIterator.umodifiableListIterator(listIterator);",
      "info" : "ReturnStatement[21500-21570]:ReturnStatement[21500-21570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22112-22196]:Block[22112-22196]"
    }, {
      "left" : "return UnmodifiableMapIterator.unmodifiableMapIterator(mapIterator);",
      "right" : "return UnmodifiableMapIterator.unmodifiableMapIterator(mapIterator);",
      "info" : "ReturnStatement[22122-22190]:ReturnStatement[22122-22190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22866-23105]:Block[22866-23105]"
    }, {
      "left" : "return new IteratorChain<E>(iterator1, iterator2);",
      "right" : "return new IteratorChain<E>(iterator1, iterator2);",
      "info" : "ReturnStatement[23049-23099]:ReturnStatement[23049-23099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23581-23636]:Block[23581-23636]"
    }, {
      "left" : "return new IteratorChain<E>(iterators);",
      "right" : "return new IteratorChain<E>(iterators);",
      "info" : "ReturnStatement[23591-23630]:ReturnStatement[23591-23630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24224-24279]:Block[24224-24279]"
    }, {
      "left" : "return new IteratorChain<E>(iterators);",
      "right" : "return new IteratorChain<E>(iterators);",
      "info" : "ReturnStatement[24234-24273]:ReturnStatement[24234-24273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30402-30471]:Block[30816-30885]"
    }, {
      "left" : "return new ObjectGraphIterator<E>(root, transformer);",
      "right" : "return new ObjectGraphIterator<E>(root, transformer);",
      "info" : "ReturnStatement[30412-30465]:ReturnStatement[30826-30879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31254-31561]:Block[31668-31975]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[31265-31371]:IfStatement[31679-31785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31287-31371]:Block[31701-31785]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[31301-31361]:ThrowStatement[31715-31775]"
    }, {
      "left" : "if (transform == null)",
      "right" : "if (transform == null)",
      "info" : "IfStatement[31380-31490]:IfStatement[31794-31904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31403-31490]:Block[31817-31904]"
    }, {
      "left" : "throw new NullPointerException(\"Transformer must not be null\");",
      "right" : "throw new NullPointerException(\"Transformer must not be null\");",
      "info" : "ThrowStatement[31417-31480]:ThrowStatement[31831-31894]"
    }, {
      "left" : "return new TransformIterator<I, O>(iterator, transform);",
      "right" : "return new TransformIterator<I, O>(iterator, transform);",
      "info" : "ReturnStatement[31499-31555]:ReturnStatement[31913-31969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32292-32590]:Block[32706-33004]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[32302-32408]:IfStatement[32716-32822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32324-32408]:Block[32738-32822]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[32338-32398]:ThrowStatement[32752-32812]"
    }, {
      "left" : "if (predicate == null)",
      "right" : "if (predicate == null)",
      "info" : "IfStatement[32417-32525]:IfStatement[32831-32939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32440-32525]:Block[32854-32939]"
    }, {
      "left" : "throw new NullPointerException(\"Predicate must not be null\");",
      "right" : "throw new NullPointerException(\"Predicate must not be null\");",
      "info" : "ThrowStatement[32454-32515]:ThrowStatement[32868-32929]"
    }, {
      "left" : "return new FilterIterator<E>(iterator, predicate);",
      "right" : "return new FilterIterator<E>(iterator, predicate);",
      "info" : "ReturnStatement[32534-32584]:ReturnStatement[32948-32998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33222-33537]:Block[33636-33951]"
    }, {
      "left" : "if (listIterator == null)",
      "right" : "if (listIterator == null)",
      "info" : "IfStatement[33233-33347]:IfStatement[33647-33761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33259-33347]:Block[33673-33761]"
    }, {
      "left" : "throw new NullPointerException(\"ListIterator must not be null\");",
      "right" : "throw new NullPointerException(\"ListIterator must not be null\");",
      "info" : "ThrowStatement[33273-33337]:ThrowStatement[33687-33751]"
    }, {
      "left" : "if (predicate == null)",
      "right" : "if (predicate == null)",
      "info" : "IfStatement[33356-33464]:IfStatement[33770-33878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33379-33464]:Block[33793-33878]"
    }, {
      "left" : "throw new NullPointerException(\"Predicate must not be null\");",
      "right" : "throw new NullPointerException(\"Predicate must not be null\");",
      "info" : "ThrowStatement[33393-33454]:ThrowStatement[33807-33868]"
    }, {
      "left" : "return new FilterListIterator<E>(listIterator, predicate);",
      "right" : "return new FilterListIterator<E>(listIterator, predicate);",
      "info" : "ReturnStatement[33473-33531]:ReturnStatement[33887-33945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34208-34373]:Block[34622-34787]"
    }, {
      "left" : "if (coll == null)",
      "right" : "if (coll == null)",
      "info" : "IfStatement[34218-34322]:IfStatement[34632-34736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34236-34322]:Block[34650-34736]"
    }, {
      "left" : "throw new NullPointerException(\"Collection must not be null\");",
      "right" : "throw new NullPointerException(\"Collection must not be null\");",
      "info" : "ThrowStatement[34250-34312]:ThrowStatement[34664-34726]"
    }, {
      "left" : "return new LoopingIterator<E>(coll);",
      "right" : "return new LoopingIterator<E>(coll);",
      "info" : "ReturnStatement[34331-34367]:ReturnStatement[34745-34781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34924-35087]:Block[35338-35501]"
    }, {
      "left" : "if (list == null)",
      "right" : "if (list == null)",
      "info" : "IfStatement[34934-35032]:IfStatement[35348-35446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34952-35032]:Block[35366-35446]"
    }, {
      "left" : "throw new NullPointerException(\"List must not be null\");",
      "right" : "throw new NullPointerException(\"List must not be null\");",
      "info" : "ThrowStatement[34966-35022]:ThrowStatement[35380-35436]"
    }, {
      "left" : "return new LoopingListIterator<E>(list);",
      "right" : "return new LoopingListIterator<E>(list);",
      "info" : "ReturnStatement[35041-35081]:ReturnStatement[35455-35495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35631-35800]:Block[36045-36214]"
    }, {
      "left" : "if (nodeList == null)",
      "right" : "if (nodeList == null)",
      "info" : "IfStatement[35641-35747]:IfStatement[36055-36161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35663-35747]:Block[36077-36161]"
    }, {
      "left" : "throw new NullPointerException(\"NodeList must not be null\");",
      "right" : "throw new NullPointerException(\"NodeList must not be null\");",
      "info" : "ThrowStatement[35677-35737]:ThrowStatement[36091-36151]"
    }, {
      "left" : "return new NodeListIterator(nodeList);",
      "right" : "return new NodeListIterator(nodeList);",
      "info" : "ReturnStatement[35756-35794]:ReturnStatement[36170-36208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36484-36641]:Block[36898-37055]"
    }, {
      "left" : "if (node == null)",
      "right" : "if (node == null)",
      "info" : "IfStatement[36494-36592]:IfStatement[36908-37006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36512-36592]:Block[36926-37006]"
    }, {
      "left" : "throw new NullPointerException(\"Node must not be null\");",
      "right" : "throw new NullPointerException(\"Node must not be null\");",
      "info" : "ThrowStatement[36526-36582]:ThrowStatement[36940-36996]"
    }, {
      "left" : "return new NodeListIterator(node);",
      "right" : "return new NodeListIterator(node);",
      "info" : "ReturnStatement[36601-36635]:ReturnStatement[37015-37049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37116-37181]:Block[37530-37595]"
    }, {
      "left" : "return PeekingIterator.peekingIterator(iterator);",
      "right" : "return PeekingIterator.peekingIterator(iterator);",
      "info" : "ReturnStatement[37126-37175]:ReturnStatement[37540-37589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37658-37725]:Block[38072-38139]"
    }, {
      "left" : "return PushbackIterator.pushbackIterator(iterator);",
      "right" : "return PushbackIterator.pushbackIterator(iterator);",
      "info" : "ReturnStatement[37668-37719]:ReturnStatement[38082-38133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38301-38366]:Block[38715-38780]"
    }, {
      "left" : "return new SkippingIterator<E>(iterator, offset);",
      "right" : "return new SkippingIterator<E>(iterator, offset);",
      "info" : "ReturnStatement[38311-38360]:ReturnStatement[38725-38774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39027-39079]:Block[39441-39493]"
    }, {
      "left" : "return new ZippingIterator<E>(a, b);",
      "right" : "return new ZippingIterator<E>(a, b);",
      "info" : "ReturnStatement[39037-39073]:ReturnStatement[39451-39487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39785-39840]:Block[40199-40254]"
    }, {
      "left" : "return new ZippingIterator<E>(a, b, c);",
      "right" : "return new ZippingIterator<E>(a, b, c);",
      "info" : "ReturnStatement[39795-39834]:ReturnStatement[40209-40248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40292-40349]:Block[40706-40763]"
    }, {
      "left" : "return new ZippingIterator<E>(iterators);",
      "right" : "return new ZippingIterator<E>(iterators);",
      "info" : "ReturnStatement[40302-40343]:ReturnStatement[40716-40757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40751-40935]:Block[41165-41349]"
    }, {
      "left" : "if (enumeration == null)",
      "right" : "if (enumeration == null)",
      "info" : "IfStatement[40761-40873]:IfStatement[41175-41287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40786-40873]:Block[41200-41287]"
    }, {
      "left" : "throw new NullPointerException(\"Enumeration must not be null\");",
      "right" : "throw new NullPointerException(\"Enumeration must not be null\");",
      "info" : "ThrowStatement[40800-40863]:ThrowStatement[41214-41277]"
    }, {
      "left" : "return new EnumerationIterator<E>(enumeration);",
      "right" : "return new EnumerationIterator<E>(enumeration);",
      "info" : "ReturnStatement[40882-40929]:ReturnStatement[41296-41343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41471-41798]:Block[41885-42212]"
    }, {
      "left" : "if (enumeration == null)",
      "right" : "if (enumeration == null)",
      "info" : "IfStatement[41481-41593]:IfStatement[41895-42007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41506-41593]:Block[41920-42007]"
    }, {
      "left" : "throw new NullPointerException(\"Enumeration must not be null\");",
      "right" : "throw new NullPointerException(\"Enumeration must not be null\");",
      "info" : "ThrowStatement[41520-41583]:ThrowStatement[41934-41997]"
    }, {
      "left" : "if (removeCollection == null)",
      "right" : "if (removeCollection == null)",
      "info" : "IfStatement[41602-41718]:IfStatement[42016-42132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41632-41718]:Block[42046-42132]"
    }, {
      "left" : "throw new NullPointerException(\"Collection must not be null\");",
      "right" : "throw new NullPointerException(\"Collection must not be null\");",
      "info" : "ThrowStatement[41646-41708]:ThrowStatement[42060-42122]"
    }, {
      "left" : "return new EnumerationIterator<E>(enumeration, removeCollection);",
      "right" : "return new EnumerationIterator<E>(enumeration, removeCollection);",
      "info" : "ReturnStatement[41727-41792]:ReturnStatement[42141-42206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42142-42317]:Block[42556-42731]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[42152-42258]:IfStatement[42566-42672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42174-42258]:Block[42588-42672]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[42188-42248]:ThrowStatement[42602-42662]"
    }, {
      "left" : "return new IteratorEnumeration<E>(iterator);",
      "right" : "return new IteratorEnumeration<E>(iterator);",
      "info" : "ReturnStatement[42267-42311]:ReturnStatement[42681-42725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42751-42930]:Block[43165-43344]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[42761-42867]:IfStatement[43175-43281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42783-42867]:Block[43197-43281]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[42797-42857]:ThrowStatement[43211-43271]"
    }, {
      "left" : "return new IteratorIterable<E>(iterator, false);",
      "right" : "return new IteratorIterable<E>(iterator, false);",
      "info" : "ReturnStatement[42876-42924]:ReturnStatement[43290-43338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43354-43532]:Block[43768-43946]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[43364-43470]:IfStatement[43778-43884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43386-43470]:Block[43800-43884]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[43400-43460]:ThrowStatement[43814-43874]"
    }, {
      "left" : "return new IteratorIterable<E>(iterator, true);",
      "right" : "return new IteratorIterable<E>(iterator, true);",
      "info" : "ReturnStatement[43479-43526]:ReturnStatement[43893-43940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44043-44218]:Block[44457-44632]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[44053-44159]:IfStatement[44467-44573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44075-44159]:Block[44489-44573]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[44089-44149]:ThrowStatement[44503-44563]"
    }, {
      "left" : "return new ListIteratorWrapper<E>(iterator);",
      "right" : "return new ListIteratorWrapper<E>(iterator);",
      "info" : "ReturnStatement[44168-44212]:ReturnStatement[44582-44626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44663-44868]:Block[45077-45282]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[44673-44779]:IfStatement[45087-45193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44695-44779]:Block[45109-45193]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[44709-44769]:ThrowStatement[45123-45183]"
    }, {
      "left" : "final List<?> list = toList(iterator, 100);",
      "right" : "final List<?> list = toList(iterator, 100);",
      "info" : "VariableDeclarationStatement[44788-44831]:VariableDeclarationStatement[45202-45245]"
    }, {
      "left" : "return list.toArray();",
      "right" : "return list.toArray();",
      "info" : "ReturnStatement[44840-44862]:ReturnStatement[45254-45276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45517-46014]:Block[45931-46428]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[45527-45633]:IfStatement[45941-46047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45549-45633]:Block[45963-46047]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[45563-45623]:ThrowStatement[45977-46037]"
    }, {
      "left" : "if (arrayClass == null)",
      "right" : "if (arrayClass == null)",
      "info" : "IfStatement[45642-45753]:IfStatement[46056-46167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45666-45753]:Block[46080-46167]"
    }, {
      "left" : "throw new NullPointerException(\"Array class must not be null\");",
      "right" : "throw new NullPointerException(\"Array class must not be null\");",
      "info" : "ThrowStatement[45680-45743]:ThrowStatement[46094-46157]"
    }, {
      "left" : "final List<E> list = toList(iterator, 100);",
      "right" : "final List<E> list = toList(iterator, 100);",
      "info" : "VariableDeclarationStatement[45762-45805]:VariableDeclarationStatement[46176-46219]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\") // as per Javadoc, will throw CCE if class is wrong\n        final E[] array = (E[]) Array.newInstance(arrayClass, list.size());",
      "right" : "@SuppressWarnings(\"unchecked\") // as per Javadoc, will throw CCE if class is wrong\n        final E[] array = (E[]) Array.newInstance(arrayClass, list.size());",
      "info" : "VariableDeclarationStatement[45814-45972]:VariableDeclarationStatement[46228-46386]"
    }, {
      "left" : "return list.toArray(array);",
      "right" : "return list.toArray(array);",
      "info" : "ReturnStatement[45981-46008]:ReturnStatement[46395-46422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46494-46538]:Block[46908-46952]"
    }, {
      "left" : "return toList(iterator, 10);",
      "right" : "return toList(iterator, 10);",
      "info" : "ReturnStatement[46504-46532]:ReturnStatement[46918-46946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47173-47596]:Block[47587-48010]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[47183-47289]:IfStatement[47597-47703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47205-47289]:Block[47619-47703]"
    }, {
      "left" : "throw new NullPointerException(\"Iterator must not be null\");",
      "right" : "throw new NullPointerException(\"Iterator must not be null\");",
      "info" : "ThrowStatement[47219-47279]:ThrowStatement[47633-47693]"
    }, {
      "left" : "if (estimatedSize < 1)",
      "right" : "if (estimatedSize < 1)",
      "info" : "IfStatement[47298-47421]:IfStatement[47712-47835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47321-47421]:Block[47735-47835]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Estimated size must be greater than 0\");",
      "right" : "throw new IllegalArgumentException(\"Estimated size must be greater than 0\");",
      "info" : "ThrowStatement[47335-47411]:ThrowStatement[47749-47825]"
    }, {
      "left" : "final List<E> list = new ArrayList<E>(estimatedSize);",
      "right" : "final List<E> list = new ArrayList<E>(estimatedSize);",
      "info" : "VariableDeclarationStatement[47430-47483]:VariableDeclarationStatement[47844-47897]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[47492-47569]:WhileStatement[47906-47983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47519-47569]:Block[47933-47983]"
    }, {
      "left" : "list.add(iterator.next());",
      "right" : "list.add(iterator.next());",
      "info" : "ExpressionStatement[47533-47559]:ExpressionStatement[47947-47973]"
    }, {
      "left" : "return list;",
      "right" : "return list;",
      "info" : "ReturnStatement[47578-47590]:ReturnStatement[47992-48004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48455-50246]:Block[48869-50660]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[48465-48529]:IfStatement[48879-48943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48482-48529]:Block[48896-48943]"
    }, {
      "left" : "return emptyIterator();",
      "right" : "return emptyIterator();",
      "info" : "ReturnStatement[48496-48519]:ReturnStatement[48910-48933]"
    }, {
      "left" : "if (obj instanceof Iterator)",
      "right" : "if (obj instanceof Iterator)",
      "info" : "IfStatement[48538-48616]:IfStatement[48952-49030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48567-48616]:Block[48981-49030]"
    }, {
      "left" : "return (Iterator<?>) obj;",
      "right" : "return (Iterator<?>) obj;",
      "info" : "ReturnStatement[48581-48606]:ReturnStatement[48995-49020]"
    }, {
      "left" : "if (obj instanceof Iterable)",
      "right" : "if (obj instanceof Iterable)",
      "info" : "IfStatement[48625-48716]:IfStatement[49039-49130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48654-48716]:Block[49068-49130]"
    }, {
      "left" : "return ((Iterable<?>) obj).iterator();",
      "right" : "return ((Iterable<?>) obj).iterator();",
      "info" : "ReturnStatement[48668-48706]:ReturnStatement[49082-49120]"
    }, {
      "left" : "if (obj instanceof Object[])",
      "right" : "if (obj instanceof Object[])",
      "info" : "IfStatement[48725-48833]:IfStatement[49139-49247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48754-48833]:Block[49168-49247]"
    }, {
      "left" : "return new ObjectArrayIterator<Object>((Object[]) obj);",
      "right" : "return new ObjectArrayIterator<Object>((Object[]) obj);",
      "info" : "ReturnStatement[48768-48823]:ReturnStatement[49182-49237]"
    }, {
      "left" : "if (obj instanceof Enumeration)",
      "right" : "if (obj instanceof Enumeration)",
      "info" : "IfStatement[48842-48959]:IfStatement[49256-49373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48874-48959]:Block[49288-49373]"
    }, {
      "left" : "return new EnumerationIterator<Object>((Enumeration<?>) obj);",
      "right" : "return new EnumerationIterator<Object>((Enumeration<?>) obj);",
      "info" : "ReturnStatement[48888-48949]:ReturnStatement[49302-49363]"
    }, {
      "left" : "if (obj instanceof Map)",
      "right" : "if (obj instanceof Map)",
      "info" : "IfStatement[48968-49061]:IfStatement[49382-49475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48992-49061]:Block[49406-49475]"
    }, {
      "left" : "return ((Map<?, ?>) obj).values().iterator();",
      "right" : "return ((Map<?, ?>) obj).values().iterator();",
      "info" : "ReturnStatement[49006-49051]:ReturnStatement[49420-49465]"
    }, {
      "left" : "if (obj instanceof NodeList)",
      "right" : "if (obj instanceof NodeList)",
      "info" : "IfStatement[49070-49167]:IfStatement[49484-49581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49099-49167]:Block[49513-49581]"
    }, {
      "left" : "return new NodeListIterator((NodeList) obj);",
      "right" : "return new NodeListIterator((NodeList) obj);",
      "info" : "ReturnStatement[49113-49157]:ReturnStatement[49527-49571]"
    }, {
      "left" : "if (obj instanceof Node)",
      "right" : "if (obj instanceof Node)",
      "info" : "IfStatement[49176-49265]:IfStatement[49590-49679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49201-49265]:Block[49615-49679]"
    }, {
      "left" : "return new NodeListIterator((Node) obj);",
      "right" : "return new NodeListIterator((Node) obj);",
      "info" : "ReturnStatement[49215-49255]:ReturnStatement[49629-49669]"
    }, {
      "left" : "if (obj instanceof Dictionary)",
      "right" : "if (obj instanceof Dictionary)",
      "info" : "IfStatement[49274-49503]:IfStatement[49688-49917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49305-49405]:Block[49719-49819]"
    }, {
      "left" : "return new EnumerationIterator<Object>(((Dictionary<?, ?>) obj).elements());",
      "right" : "return new EnumerationIterator<Object>(((Dictionary<?, ?>) obj).elements());",
      "info" : "ReturnStatement[49319-49395]:ReturnStatement[49733-49809]"
    }, {
      "left" : "if (obj.getClass().isArray())",
      "right" : "if (obj.getClass().isArray())",
      "info" : "IfStatement[49411-49503]:IfStatement[49825-49917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49441-49503]:Block[49855-49917]"
    }, {
      "left" : "return new ArrayIterator<Object>(obj);",
      "right" : "return new ArrayIterator<Object>(obj);",
      "info" : "ReturnStatement[49455-49493]:ReturnStatement[49869-49907]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[49512-50201]:TryStatement[49926-50615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49516-49877]:Block[49930-50291]"
    }, {
      "left" : "final Method method = obj.getClass().getMethod(\"iterator\", (Class[]) null);",
      "right" : "final Method method = obj.getClass().getMethod(\"iterator\", (Class[]) null);",
      "info" : "VariableDeclarationStatement[49530-49605]:VariableDeclarationStatement[49944-50019]"
    }, {
      "left" : "if (Iterator.class.isAssignableFrom(method.getReturnType()))",
      "right" : "if (Iterator.class.isAssignableFrom(method.getReturnType()))",
      "info" : "IfStatement[49618-49867]:IfStatement[50032-50281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49679-49867]:Block[50093-50281]"
    }, {
      "left" : "final Iterator<?> it = (Iterator<?>) method.invoke(obj, (Object[]) null);",
      "right" : "final Iterator<?> it = (Iterator<?>) method.invoke(obj, (Object[]) null);",
      "info" : "VariableDeclarationStatement[49697-49770]:VariableDeclarationStatement[50111-50184]"
    }, {
      "left" : "if (it != null)",
      "right" : "if (it != null)",
      "info" : "IfStatement[49787-49853]:IfStatement[50201-50267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49803-49853]:Block[50217-50267]"
    }, {
      "left" : "return it;",
      "right" : "return it;",
      "info" : "ReturnStatement[49825-49835]:ReturnStatement[50239-50249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49911-49953]:Block[50325-50367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49992-50034]:Block[50406-50448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50074-50116]:Block[50488-50530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50159-50201]:Block[50573-50615]"
    }, {
      "left" : "return singletonIterator(obj);",
      "right" : "return singletonIterator(obj);",
      "info" : "ReturnStatement[50210-50240]:ReturnStatement[50624-50654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50780-51091]:Block[51194-51505]"
    }, {
      "left" : "if (closure == null)",
      "right" : "if (closure == null)",
      "info" : "IfStatement[50790-50894]:IfStatement[51204-51308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50811-50894]:Block[51225-51308]"
    }, {
      "left" : "throw new NullPointerException(\"Closure must not be null\");",
      "right" : "throw new NullPointerException(\"Closure must not be null\");",
      "info" : "ThrowStatement[50825-50884]:ThrowStatement[51239-51298]"
    }, {
      "left" : "if (iterator != null)",
      "right" : "if (iterator != null)",
      "info" : "IfStatement[50904-51085]:IfStatement[51318-51499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50926-51085]:Block[51340-51499]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[50940-51075]:WhileStatement[51354-51489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50967-51075]:Block[51381-51489]"
    }, {
      "left" : "final E element = iterator.next();",
      "right" : "final E element = iterator.next();",
      "info" : "VariableDeclarationStatement[50985-51019]:VariableDeclarationStatement[51399-51433]"
    }, {
      "left" : "closure.execute(element);",
      "right" : "closure.execute(element);",
      "info" : "ExpressionStatement[51036-51061]:ExpressionStatement[51450-51475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51711-52110]:Block[52125-52524]"
    }, {
      "left" : "if (predicate == null)",
      "right" : "if (predicate == null)",
      "info" : "IfStatement[51721-51829]:IfStatement[52135-52243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51744-51829]:Block[52158-52243]"
    }, {
      "left" : "throw new NullPointerException(\"Predicate must not be null\");",
      "right" : "throw new NullPointerException(\"Predicate must not be null\");",
      "info" : "ThrowStatement[51758-51819]:ThrowStatement[52172-52233]"
    }, {
      "left" : "if (iterator != null)",
      "right" : "if (iterator != null)",
      "info" : "IfStatement[51839-52083]:IfStatement[52253-52497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51861-52083]:Block[52275-52497]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[51875-52073]:WhileStatement[52289-52487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51902-52073]:Block[52316-52487]"
    }, {
      "left" : "final E element = iterator.next();",
      "right" : "final E element = iterator.next();",
      "info" : "VariableDeclarationStatement[51920-51954]:VariableDeclarationStatement[52334-52368]"
    }, {
      "left" : "if (predicate.evaluate(element))",
      "right" : "if (predicate.evaluate(element))",
      "info" : "IfStatement[51971-52059]:IfStatement[52385-52473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52004-52059]:Block[52418-52473]"
    }, {
      "left" : "return element;",
      "right" : "return element;",
      "info" : "ReturnStatement[52026-52041]:ReturnStatement[52440-52455]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52092-52104]:ReturnStatement[52506-52518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52752-53149]:Block[53166-53563]"
    }, {
      "left" : "if (predicate == null)",
      "right" : "if (predicate == null)",
      "info" : "IfStatement[52762-52870]:IfStatement[53176-53284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52785-52870]:Block[53199-53284]"
    }, {
      "left" : "throw new NullPointerException(\"Predicate must not be null\");",
      "right" : "throw new NullPointerException(\"Predicate must not be null\");",
      "info" : "ThrowStatement[52799-52860]:ThrowStatement[53213-53274]"
    }, {
      "left" : "if (iterator != null)",
      "right" : "if (iterator != null)",
      "info" : "IfStatement[52880-53121]:IfStatement[53294-53535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52902-53121]:Block[53316-53535]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[52916-53111]:WhileStatement[53330-53525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52943-53111]:Block[53357-53525]"
    }, {
      "left" : "final E element = iterator.next();",
      "right" : "final E element = iterator.next();",
      "info" : "VariableDeclarationStatement[52961-52995]:VariableDeclarationStatement[53375-53409]"
    }, {
      "left" : "if (predicate.evaluate(element))",
      "right" : "if (predicate.evaluate(element))",
      "info" : "IfStatement[53012-53097]:IfStatement[53426-53511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53045-53097]:Block[53459-53511]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53067-53079]:ReturnStatement[53481-53493]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53130-53143]:ReturnStatement[53544-53557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53832-54230]:Block[54246-54644]"
    }, {
      "left" : "if (predicate == null)",
      "right" : "if (predicate == null)",
      "info" : "IfStatement[53842-53950]:IfStatement[54256-54364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53865-53950]:Block[54279-54364]"
    }, {
      "left" : "throw new NullPointerException(\"Predicate must not be null\");",
      "right" : "throw new NullPointerException(\"Predicate must not be null\");",
      "info" : "ThrowStatement[53879-53940]:ThrowStatement[54293-54354]"
    }, {
      "left" : "if (iterator != null)",
      "right" : "if (iterator != null)",
      "info" : "IfStatement[53960-54203]:IfStatement[54374-54617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53982-54203]:Block[54396-54617]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[53996-54193]:WhileStatement[54410-54607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54023-54193]:Block[54437-54607]"
    }, {
      "left" : "final E element = iterator.next();",
      "right" : "final E element = iterator.next();",
      "info" : "VariableDeclarationStatement[54041-54075]:VariableDeclarationStatement[54455-54489]"
    }, {
      "left" : "if (!predicate.evaluate(element))",
      "right" : "if (!predicate.evaluate(element))",
      "info" : "IfStatement[54092-54179]:IfStatement[54506-54593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54126-54179]:Block[54540-54593]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54148-54161]:ReturnStatement[54562-54575]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[54212-54224]:ReturnStatement[54626-54638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54590-54653]:Block[55004-55067]"
    }, {
      "left" : "return iterator == null || !iterator.hasNext();",
      "right" : "return iterator == null || !iterator.hasNext();",
      "info" : "ReturnStatement[54600-54647]:ReturnStatement[55014-55061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55168-55251]:Block[55582-55665]"
    }, {
      "left" : "return matchesAny(iterator, EqualPredicate.equalPredicate(object));",
      "right" : "return matchesAny(iterator, EqualPredicate.equalPredicate(object));",
      "info" : "ReturnStatement[55178-55245]:ReturnStatement[55592-55659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56034-56358]:Block[56448-56772]"
    }, {
      "left" : "int i = index;",
      "right" : "int i = index;",
      "info" : "VariableDeclarationStatement[56044-56058]:VariableDeclarationStatement[56458-56472]"
    }, {
      "left" : "CollectionUtils.checkIndexBounds(i);",
      "right" : "CollectionUtils.checkIndexBounds(i);",
      "info" : "ExpressionStatement[56067-56103]:ExpressionStatement[56481-56517]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[56112-56277]:WhileStatement[56526-56691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56139-56277]:Block[56553-56691]"
    }, {
      "left" : "i--;",
      "right" : "i--;",
      "info" : "ExpressionStatement[56153-56157]:ExpressionStatement[56567-56571]"
    }, {
      "left" : "if (i == -1)",
      "right" : "if (i == -1)",
      "info" : "IfStatement[56170-56238]:IfStatement[56584-56652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56183-56238]:Block[56597-56652]"
    }, {
      "left" : "return iterator.next();",
      "right" : "return iterator.next();",
      "info" : "ReturnStatement[56201-56224]:ReturnStatement[56615-56638]"
    }, {
      "left" : "iterator.next();",
      "right" : "iterator.next();",
      "info" : "ExpressionStatement[56251-56267]:ExpressionStatement[56665-56681]"
    }, {
      "left" : "throw new IndexOutOfBoundsException(\"Entry does not exist: \" + i);",
      "right" : "throw new IndexOutOfBoundsException(\"Entry does not exist: \" + i);",
      "info" : "ThrowStatement[56286-56352]:ThrowStatement[56700-56766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56725-56929]:Block[57139-57343]"
    }, {
      "left" : "int size = 0;",
      "right" : "int size = 0;",
      "info" : "VariableDeclarationStatement[56735-56748]:VariableDeclarationStatement[57149-57162]"
    }, {
      "left" : "if (iterator != null)",
      "right" : "if (iterator != null)",
      "info" : "IfStatement[56757-56902]:IfStatement[57171-57316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56779-56902]:Block[57193-57316]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[56793-56892]:WhileStatement[57207-57306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56820-56892]:Block[57234-57306]"
    }, {
      "left" : "iterator.next();",
      "right" : "iterator.next();",
      "info" : "ExpressionStatement[56838-56854]:ExpressionStatement[57252-57268]"
    }, {
      "left" : "size++;",
      "right" : "size++;",
      "info" : "ExpressionStatement[56871-56878]:ExpressionStatement[57285-57292]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[56911-56923]:ReturnStatement[57325-57337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57597-57808]:Block[58011-58222]"
    }, {
      "left" : "return toString(iterator, TransformerUtils.stringValueTransformer(),\n                        DEFAULT_TOSTRING_DELIMITER, DEFAULT_TOSTRING_PREFIX,\n                        DEFAULT_TOSTRING_SUFFIX);",
      "right" : "return toString(iterator, TransformerUtils.stringValueTransformer(),\n                        DEFAULT_TOSTRING_DELIMITER, DEFAULT_TOSTRING_PREFIX,\n                        DEFAULT_TOSTRING_SUFFIX);",
      "info" : "ReturnStatement[57607-57802]:ReturnStatement[58021-58216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58745-58902]:Block[59159-59316]"
    }, {
      "left" : "return toString(iterator, transformer, DEFAULT_TOSTRING_DELIMITER,\n                        DEFAULT_TOSTRING_PREFIX, DEFAULT_TOSTRING_SUFFIX);",
      "right" : "return toString(iterator, transformer, DEFAULT_TOSTRING_DELIMITER,\n                        DEFAULT_TOSTRING_PREFIX, DEFAULT_TOSTRING_SUFFIX);",
      "info" : "ReturnStatement[58755-58896]:ReturnStatement[59169-59310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60237-61276]:Block[60651-61690]"
    }, {
      "left" : "if (transformer == null)",
      "right" : "if (transformer == null)",
      "info" : "IfStatement[60247-60358]:IfStatement[60661-60772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60272-60358]:Block[60686-60772]"
    }, {
      "left" : "throw new NullPointerException(\"transformer may not be null\");",
      "right" : "throw new NullPointerException(\"transformer may not be null\");",
      "info" : "ThrowStatement[60286-60348]:ThrowStatement[60700-60762]"
    }, {
      "left" : "if (delimiter == null)",
      "right" : "if (delimiter == null)",
      "info" : "IfStatement[60367-60474]:IfStatement[60781-60888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60390-60474]:Block[60804-60888]"
    }, {
      "left" : "throw new NullPointerException(\"delimiter may not be null\");",
      "right" : "throw new NullPointerException(\"delimiter may not be null\");",
      "info" : "ThrowStatement[60404-60464]:ThrowStatement[60818-60878]"
    }, {
      "left" : "if (prefix == null)",
      "right" : "if (prefix == null)",
      "info" : "IfStatement[60483-60584]:IfStatement[60897-60998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60503-60584]:Block[60917-60998]"
    }, {
      "left" : "throw new NullPointerException(\"prefix may not be null\");",
      "right" : "throw new NullPointerException(\"prefix may not be null\");",
      "info" : "ThrowStatement[60517-60574]:ThrowStatement[60931-60988]"
    }, {
      "left" : "if (suffix == null)",
      "right" : "if (suffix == null)",
      "info" : "IfStatement[60593-60694]:IfStatement[61007-61108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60613-60694]:Block[61027-61108]"
    }, {
      "left" : "throw new NullPointerException(\"suffix may not be null\");",
      "right" : "throw new NullPointerException(\"suffix may not be null\");",
      "info" : "ThrowStatement[60627-60684]:ThrowStatement[61041-61098]"
    }, {
      "left" : "final StringBuilder stringBuilder = new StringBuilder(prefix);",
      "right" : "final StringBuilder stringBuilder = new StringBuilder(prefix);",
      "info" : "VariableDeclarationStatement[60703-60765]:VariableDeclarationStatement[61117-61179]"
    }, {
      "left" : "if (iterator != null)",
      "right" : "if (iterator != null)",
      "info" : "IfStatement[60774-61191]:IfStatement[61188-61605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60796-61191]:Block[61210-61605]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[60810-61022]:WhileStatement[61224-61436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60837-61022]:Block[61251-61436]"
    }, {
      "left" : "final E element = iterator.next();",
      "right" : "final E element = iterator.next();",
      "info" : "VariableDeclarationStatement[60855-60889]:VariableDeclarationStatement[61269-61303]"
    }, {
      "left" : "stringBuilder.append(transformer.transform(element));",
      "right" : "stringBuilder.append(transformer.transform(element));",
      "info" : "ExpressionStatement[60906-60959]:ExpressionStatement[61320-61373]"
    }, {
      "left" : "stringBuilder.append(delimiter);",
      "right" : "stringBuilder.append(delimiter);",
      "info" : "ExpressionStatement[60976-61008]:ExpressionStatement[61390-61422]"
    }, {
      "left" : "if(stringBuilder.length() > prefix.length())",
      "right" : "if(stringBuilder.length() > prefix.length())",
      "info" : "IfStatement[61035-61181]:IfStatement[61449-61595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61080-61181]:Block[61494-61595]"
    }, {
      "left" : "stringBuilder.setLength(stringBuilder.length() - delimiter.length());",
      "right" : "stringBuilder.setLength(stringBuilder.length() - delimiter.length());",
      "info" : "ExpressionStatement[61098-61167]:ExpressionStatement[61512-61581]"
    }, {
      "left" : "stringBuilder.append(suffix);",
      "right" : "stringBuilder.append(suffix);",
      "info" : "ExpressionStatement[61200-61229]:ExpressionStatement[61614-61643]"
    }, {
      "left" : "return stringBuilder.toString();",
      "right" : "return stringBuilder.toString();",
      "info" : "ReturnStatement[61238-61270]:ReturnStatement[61652-61684]"
    } ]
  },
  "interFileMappings" : { }
}