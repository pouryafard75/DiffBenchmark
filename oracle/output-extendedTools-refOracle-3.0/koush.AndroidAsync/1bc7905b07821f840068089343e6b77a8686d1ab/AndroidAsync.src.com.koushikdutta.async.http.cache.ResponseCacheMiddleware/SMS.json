{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ResponseCacheMiddleware",
      "right" : "ResponseCacheMiddleware",
      "info" : "TypeDeclaration[1794-29528]:TypeDeclaration[1794-29639]"
    }, {
      "left" : "public static final int ENTRY_METADATA = 0;",
      "right" : "public static final int ENTRY_METADATA = 0;",
      "info" : "FieldDeclaration[1862-1905]:FieldDeclaration[1862-1905]"
    }, {
      "left" : "public static final int ENTRY_BODY = 1;",
      "right" : "public static final int ENTRY_BODY = 1;",
      "info" : "FieldDeclaration[1910-1949]:FieldDeclaration[1910-1949]"
    }, {
      "left" : "public static final int ENTRY_COUNT = 2;",
      "right" : "public static final int ENTRY_COUNT = 2;",
      "info" : "FieldDeclaration[1954-1994]:FieldDeclaration[1954-1994]"
    }, {
      "left" : "public static final String SERVED_FROM = \"X-Served-From\";",
      "right" : "public static final String SERVED_FROM = \"X-Served-From\";",
      "info" : "FieldDeclaration[1999-2056]:FieldDeclaration[1999-2056]"
    }, {
      "left" : "public static final String CONDITIONAL_CACHE = \"conditional-cache\";",
      "right" : "public static final String CONDITIONAL_CACHE = \"conditional-cache\";",
      "info" : "FieldDeclaration[2061-2128]:FieldDeclaration[2061-2128]"
    }, {
      "left" : "public static final String CACHE = \"cache\";",
      "right" : "public static final String CACHE = \"cache\";",
      "info" : "FieldDeclaration[2133-2176]:FieldDeclaration[2133-2176]"
    }, {
      "left" : "private static final String LOGTAG = \"AsyncHttpCache\";",
      "right" : "private static final String LOGTAG = \"AsyncHttpCache\";",
      "info" : "FieldDeclaration[2181-2235]:FieldDeclaration[2181-2235]"
    }, {
      "left" : "private boolean caching = true;",
      "right" : "private boolean caching = true;",
      "info" : "FieldDeclaration[2240-2271]:FieldDeclaration[2240-2271]"
    }, {
      "left" : "private int writeSuccessCount;",
      "right" : "private int writeSuccessCount;",
      "info" : "FieldDeclaration[2276-2306]:FieldDeclaration[2276-2306]"
    }, {
      "left" : "private int writeAbortCount;",
      "right" : "private int writeAbortCount;",
      "info" : "FieldDeclaration[2311-2339]:FieldDeclaration[2311-2339]"
    }, {
      "left" : "private FileCache cache;",
      "right" : "private FileCache cache;",
      "info" : "FieldDeclaration[2344-2368]:FieldDeclaration[2344-2368]"
    }, {
      "left" : "private AsyncServer server;",
      "right" : "private AsyncServer server;",
      "info" : "FieldDeclaration[2373-2400]:FieldDeclaration[2373-2400]"
    }, {
      "left" : "private int conditionalCacheHitCount;",
      "right" : "private int conditionalCacheHitCount;",
      "info" : "FieldDeclaration[2405-2442]:FieldDeclaration[2405-2442]"
    }, {
      "left" : "private int cacheHitCount;",
      "right" : "private int cacheHitCount;",
      "info" : "FieldDeclaration[2447-2473]:FieldDeclaration[2447-2473]"
    }, {
      "left" : "private int networkCount;",
      "right" : "private int networkCount;",
      "info" : "FieldDeclaration[2478-2503]:FieldDeclaration[2478-2503]"
    }, {
      "left" : "private int cacheStoreCount;",
      "right" : "private int cacheStoreCount;",
      "info" : "FieldDeclaration[2508-2536]:FieldDeclaration[2508-2536]"
    }, {
      "left" : "private ResponseCacheMiddleware()",
      "right" : "private ResponseCacheMiddleware()",
      "info" : "MethodDeclaration[2542-2583]:MethodDeclaration[2542-2583]"
    }, {
      "left" : "public static ResponseCacheMiddleware addCache(AsyncHttpClient client, File cacheDir, long size) throws IOException",
      "right" : "public static ResponseCacheMiddleware addCache(AsyncHttpClient client, File cacheDir, long size) throws IOException",
      "info" : "MethodDeclaration[2589-3174]:MethodDeclaration[2589-3174]"
    }, {
      "left" : "public FileCache getFileCache()",
      "right" : "public FileCache getFileCache()",
      "info" : "MethodDeclaration[3180-3241]:MethodDeclaration[3180-3241]"
    }, {
      "left" : "public boolean getCaching()",
      "right" : "public boolean getCaching()",
      "info" : "MethodDeclaration[3251-3310]:MethodDeclaration[3251-3310]"
    }, {
      "left" : "public void setCaching(boolean caching)",
      "right" : "public void setCaching(boolean caching)",
      "info" : "MethodDeclaration[3320-3399]:MethodDeclaration[3320-3399]"
    }, {
      "left" : "public Cancellable getSocket(final GetSocketData data)",
      "right" : "public Cancellable getSocket(final GetSocketData data)",
      "info" : "MethodDeclaration[3545-7771]:MethodDeclaration[3545-7788]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[6631-6812]:MethodDeclaration[6631-6829]"
    }, {
      "left" : "public int getConditionalCacheHitCount()",
      "right" : "public int getConditionalCacheHitCount()",
      "info" : "MethodDeclaration[7777-7866]:MethodDeclaration[7794-7883]"
    }, {
      "left" : "public int getCacheHitCount()",
      "right" : "public int getCacheHitCount()",
      "info" : "MethodDeclaration[7872-7939]:MethodDeclaration[7889-7956]"
    }, {
      "left" : "public int getNetworkCount()",
      "right" : "public int getNetworkCount()",
      "info" : "MethodDeclaration[7949-8014]:MethodDeclaration[7966-8031]"
    }, {
      "left" : "public int getCacheStoreCount()",
      "right" : "public int getCacheStoreCount()",
      "info" : "MethodDeclaration[8020-8091]:MethodDeclaration[8037-8108]"
    }, {
      "left" : "public void onBodyDecoder(OnBodyDataOnRequestSentData data)",
      "right" : "public void onBodyDecoder(OnBodyDataOnRequestSentData data)",
      "info" : "MethodDeclaration[8230-11690]:MethodDeclaration[8247-11717]"
    }, {
      "left" : "public void onResponseComplete(OnResponseCompleteDataOnRequestSentData data)",
      "right" : "public void onResponseComplete(OnResponseCompleteDataOnRequestSentData data)",
      "info" : "MethodDeclaration[11725-12433]:MethodDeclaration[11752-12460]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[12443-12536]:MethodDeclaration[12470-12563]"
    }, {
      "left" : "CacheData",
      "right" : "CacheData",
      "info" : "TypeDeclaration[12542-12728]:TypeDeclaration[12569-12755]"
    }, {
      "left" : "FileInputStream[] snapshot;",
      "right" : "FileInputStream[] snapshot;",
      "info" : "FieldDeclaration[12582-12609]:FieldDeclaration[12609-12636]"
    }, {
      "left" : "EntryCacheResponse candidate;",
      "right" : "EntryCacheResponse candidate;",
      "info" : "FieldDeclaration[12618-12647]:FieldDeclaration[12645-12674]"
    }, {
      "left" : "long contentLength;",
      "right" : "long contentLength;",
      "info" : "FieldDeclaration[12656-12675]:FieldDeclaration[12683-12702]"
    }, {
      "left" : "ResponseHeaders cachedResponseHeaders;",
      "right" : "ResponseHeaders cachedResponseHeaders;",
      "info" : "FieldDeclaration[12684-12722]:FieldDeclaration[12711-12749]"
    }, {
      "left" : "BodyCacher",
      "right" : "BodyCacher",
      "info" : "TypeDeclaration[12738-15056]:TypeDeclaration[12765-15083]"
    }, {
      "left" : "EntryEditor editor;",
      "right" : "EntryEditor editor;",
      "info" : "FieldDeclaration[12808-12827]:FieldDeclaration[12835-12854]"
    }, {
      "left" : "ByteBufferList cached;",
      "right" : "ByteBufferList cached;",
      "info" : "FieldDeclaration[12836-12858]:FieldDeclaration[12863-12885]"
    }, {
      "left" : "protected void report(Exception e)",
      "right" : "protected void report(Exception e)",
      "info" : "MethodDeclaration[12868-13013]:MethodDeclaration[12895-13040]"
    }, {
      "left" : "public void onDataAvailable(DataEmitter emitter, ByteBufferList bb)",
      "right" : "public void onDataAvailable(DataEmitter emitter, ByteBufferList bb)",
      "info" : "MethodDeclaration[13023-14637]:MethodDeclaration[13050-14664]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[14647-14744]:MethodDeclaration[14674-14771]"
    }, {
      "left" : "public void abort()",
      "right" : "public void abort()",
      "info" : "MethodDeclaration[14754-14896]:MethodDeclaration[14781-14923]"
    }, {
      "left" : "public void commit()",
      "right" : "public void commit()",
      "info" : "MethodDeclaration[14906-15050]:MethodDeclaration[14933-15077]"
    }, {
      "left" : "CachedBodyEmitter",
      "right" : "CachedBodyEmitter",
      "info" : "TypeDeclaration[15062-17836]:TypeDeclaration[15089-17947]"
    }, {
      "left" : "EntryCacheResponse cacheResponse;",
      "right" : "EntryCacheResponse cacheResponse;",
      "info" : "FieldDeclaration[15139-15172]:FieldDeclaration[15166-15199]"
    }, {
      "left" : "ByteBufferList pending = new ByteBufferList();",
      "right" : "ByteBufferList pending = new ByteBufferList();",
      "info" : "FieldDeclaration[15181-15227]:FieldDeclaration[15208-15254]"
    }, {
      "left" : "private boolean paused;",
      "right" : "private boolean paused;",
      "info" : "FieldDeclaration[15236-15259]:FieldDeclaration[15263-15286]"
    }, {
      "left" : "private Allocator allocator = new Allocator();",
      "right" : "private Allocator allocator = new Allocator();",
      "info" : "FieldDeclaration[15268-15314]:FieldDeclaration[15295-15341]"
    }, {
      "left" : "boolean allowEnd;",
      "right" : "boolean allowEnd;",
      "info" : "FieldDeclaration[15323-15340]:FieldDeclaration[15350-15367]"
    }, {
      "left" : "public CachedBodyEmitter(EntryCacheResponse cacheResponse, long contentLength)",
      "right" : "public CachedBodyEmitter(EntryCacheResponse cacheResponse, long contentLength)",
      "info" : "MethodDeclaration[15349-15546]:MethodDeclaration[15376-15573]"
    }, {
      "left" : "Runnable spewRunnable = new Runnable() {\n            @Override\n            public void run() {\n                spewInternal();\n            }\n        };",
      "right" : "Runnable sendCachedDataRunnable = new Runnable() {\n            @Override\n            public void run() {\n                sendCachedDataOnNetworkThread();\n            }\n        };",
      "info" : "FieldDeclaration[15556-15707]:FieldDeclaration[15583-15761]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[15609-15696]:MethodDeclaration[15646-15750]"
    }, {
      "left" : "void spewInternal()",
      "right" : "void sendCachedDataOnNetworkThread()",
      "info" : "MethodDeclaration[15717-17008]:MethodDeclaration[15771-17089]"
    }, {
      "left" : "void spew()",
      "right" : "void sendCachedData()",
      "info" : "MethodDeclaration[17018-17085]:MethodDeclaration[17099-17186]"
    }, {
      "left" : "public void resume()",
      "right" : "public void resume()",
      "info" : "MethodDeclaration[17095-17193]:MethodDeclaration[17196-17304]"
    }, {
      "left" : "public boolean isPaused()",
      "right" : "public boolean isPaused()",
      "info" : "MethodDeclaration[17203-17285]:MethodDeclaration[17314-17396]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[17295-17436]:MethodDeclaration[17406-17547]"
    }, {
      "left" : "protected void report(Exception e)",
      "right" : "protected void report(Exception e)",
      "info" : "MethodDeclaration[17446-17830]:MethodDeclaration[17557-17941]"
    }, {
      "left" : "Entry",
      "right" : "Entry",
      "info" : "TypeDeclaration[17846-25996]:TypeDeclaration[17957-26107]"
    }, {
      "left" : "private final String uri;",
      "right" : "private final String uri;",
      "info" : "FieldDeclaration[17889-17914]:FieldDeclaration[18000-18025]"
    }, {
      "left" : "private final RawHeaders varyHeaders;",
      "right" : "private final RawHeaders varyHeaders;",
      "info" : "FieldDeclaration[17923-17960]:FieldDeclaration[18034-18071]"
    }, {
      "left" : "private final String requestMethod;",
      "right" : "private final String requestMethod;",
      "info" : "FieldDeclaration[17969-18004]:FieldDeclaration[18080-18115]"
    }, {
      "left" : "private final RawHeaders responseHeaders;",
      "right" : "private final RawHeaders responseHeaders;",
      "info" : "FieldDeclaration[18013-18054]:FieldDeclaration[18124-18165]"
    }, {
      "left" : "private final String cipherSuite;",
      "right" : "private final String cipherSuite;",
      "info" : "FieldDeclaration[18063-18096]:FieldDeclaration[18174-18207]"
    }, {
      "left" : "private final Certificate[] peerCertificates;",
      "right" : "private final Certificate[] peerCertificates;",
      "info" : "FieldDeclaration[18105-18150]:FieldDeclaration[18216-18261]"
    }, {
      "left" : "private final Certificate[] localCertificates;",
      "right" : "private final Certificate[] localCertificates;",
      "info" : "FieldDeclaration[18159-18205]:FieldDeclaration[18270-18316]"
    }, {
      "left" : "public Entry(InputStream in) throws IOException",
      "right" : "public Entry(InputStream in) throws IOException",
      "info" : "MethodDeclaration[20018-21611]:MethodDeclaration[20129-21722]"
    }, {
      "left" : "public Entry(Uri uri, RawHeaders varyHeaders, AsyncHttpRequest request, RawHeaders responseHeaders)",
      "right" : "public Entry(Uri uri, RawHeaders varyHeaders, AsyncHttpRequest request, RawHeaders responseHeaders)",
      "info" : "MethodDeclaration[21621-22674]:MethodDeclaration[21732-22785]"
    }, {
      "left" : "public void writeTo(EntryEditor editor) throws IOException",
      "right" : "public void writeTo(EntryEditor editor) throws IOException",
      "info" : "MethodDeclaration[22684-23905]:MethodDeclaration[22795-24016]"
    }, {
      "left" : "private boolean isHttps()",
      "right" : "private boolean isHttps()",
      "info" : "MethodDeclaration[23915-23999]:MethodDeclaration[24026-24110]"
    }, {
      "left" : "private Certificate[] readCertArray(StrictLineReader reader) throws IOException",
      "right" : "private Certificate[] readCertArray(StrictLineReader reader) throws IOException",
      "info" : "MethodDeclaration[24009-24879]:MethodDeclaration[24120-24990]"
    }, {
      "left" : "private void writeCertArray(Writer writer, Certificate[] certificates) throws IOException",
      "right" : "private void writeCertArray(Writer writer, Certificate[] certificates) throws IOException",
      "info" : "MethodDeclaration[24889-25593]:MethodDeclaration[25000-25704]"
    }, {
      "left" : "public boolean matches(Uri uri, String requestMethod,\n                Map<String, List<String>> requestHeaders)",
      "right" : "public boolean matches(Uri uri, String requestMethod,\n                Map<String, List<String>> requestHeaders)",
      "info" : "MethodDeclaration[25603-25990]:MethodDeclaration[25714-26101]"
    }, {
      "left" : "EntryCacheResponse",
      "right" : "EntryCacheResponse",
      "info" : "TypeDeclaration[26002-26527]:TypeDeclaration[26113-26638]"
    }, {
      "left" : "private final Entry entry;",
      "right" : "private final Entry entry;",
      "info" : "FieldDeclaration[26066-26092]:FieldDeclaration[26177-26203]"
    }, {
      "left" : "private final FileInputStream snapshot;",
      "right" : "private final FileInputStream snapshot;",
      "info" : "FieldDeclaration[26101-26140]:FieldDeclaration[26212-26251]"
    }, {
      "left" : "public EntryCacheResponse(Entry entry, FileInputStream snapshot)",
      "right" : "public EntryCacheResponse(Entry entry, FileInputStream snapshot)",
      "info" : "MethodDeclaration[26150-26296]:MethodDeclaration[26261-26407]"
    }, {
      "left" : "public Map<String, List<String>> getHeaders()",
      "right" : "public Map<String, List<String>> getHeaders()",
      "info" : "MethodDeclaration[26306-26428]:MethodDeclaration[26417-26539]"
    }, {
      "left" : "public FileInputStream getBody()",
      "right" : "public FileInputStream getBody()",
      "info" : "MethodDeclaration[26438-26521]:MethodDeclaration[26549-26632]"
    }, {
      "left" : "CachedSSLSocket",
      "right" : "CachedSSLSocket",
      "info" : "TypeDeclaration[26533-26970]:TypeDeclaration[26644-27081]"
    }, {
      "left" : "public CachedSSLSocket(EntryCacheResponse cacheResponse, long contentLength)",
      "right" : "public CachedSSLSocket(EntryCacheResponse cacheResponse, long contentLength)",
      "info" : "MethodDeclaration[26620-26757]:MethodDeclaration[26731-26868]"
    }, {
      "left" : "public SSLEngine getSSLEngine()",
      "right" : "public SSLEngine getSSLEngine()",
      "info" : "MethodDeclaration[26767-26853]:MethodDeclaration[26878-26964]"
    }, {
      "left" : "public X509Certificate[] getPeerCertificates()",
      "right" : "public X509Certificate[] getPeerCertificates()",
      "info" : "MethodDeclaration[26863-26964]:MethodDeclaration[26974-27075]"
    }, {
      "left" : "CachedSocket",
      "right" : "CachedSocket",
      "info" : "TypeDeclaration[26976-28537]:TypeDeclaration[27087-28648]"
    }, {
      "left" : "boolean closed;",
      "right" : "boolean closed;",
      "info" : "FieldDeclaration[27062-27077]:FieldDeclaration[27173-27188]"
    }, {
      "left" : "boolean open;",
      "right" : "boolean open;",
      "info" : "FieldDeclaration[27086-27099]:FieldDeclaration[27197-27210]"
    }, {
      "left" : "CompletedCallback closedCallback;",
      "right" : "CompletedCallback closedCallback;",
      "info" : "FieldDeclaration[27108-27141]:FieldDeclaration[27219-27252]"
    }, {
      "left" : "public CachedSocket(EntryCacheResponse cacheResponse, long contentLength)",
      "right" : "public CachedSocket(EntryCacheResponse cacheResponse, long contentLength)",
      "info" : "MethodDeclaration[27150-27313]:MethodDeclaration[27261-27424]"
    }, {
      "left" : "public void end()",
      "right" : "public void end()",
      "info" : "MethodDeclaration[27323-27370]:MethodDeclaration[27434-27481]"
    }, {
      "left" : "protected void report(Exception e)",
      "right" : "protected void report(Exception e)",
      "info" : "MethodDeclaration[27380-27635]:MethodDeclaration[27491-27746]"
    }, {
      "left" : "public void write(ByteBufferList bb)",
      "right" : "public void write(ByteBufferList bb)",
      "info" : "MethodDeclaration[27645-27799]:MethodDeclaration[27756-27910]"
    }, {
      "left" : "public WritableCallback getWriteableCallback()",
      "right" : "public WritableCallback getWriteableCallback()",
      "info" : "MethodDeclaration[27809-27910]:MethodDeclaration[27920-28021]"
    }, {
      "left" : "public void setWriteableCallback(WritableCallback handler)",
      "right" : "public void setWriteableCallback(WritableCallback handler)",
      "info" : "MethodDeclaration[27920-28008]:MethodDeclaration[28031-28119]"
    }, {
      "left" : "public boolean isOpen()",
      "right" : "public boolean isOpen()",
      "info" : "MethodDeclaration[28018-28096]:MethodDeclaration[28129-28207]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[28106-28181]:MethodDeclaration[28217-28292]"
    }, {
      "left" : "public CompletedCallback getClosedCallback()",
      "right" : "public CompletedCallback getClosedCallback()",
      "info" : "MethodDeclaration[28191-28300]:MethodDeclaration[28302-28411]"
    }, {
      "left" : "public void setClosedCallback(CompletedCallback handler)",
      "right" : "public void setClosedCallback(CompletedCallback handler)",
      "info" : "MethodDeclaration[28310-28434]:MethodDeclaration[28421-28545]"
    }, {
      "left" : "public AsyncServer getServer()",
      "right" : "public AsyncServer getServer()",
      "info" : "MethodDeclaration[28444-28531]:MethodDeclaration[28555-28642]"
    }, {
      "left" : "EntryEditor",
      "right" : "EntryEditor",
      "info" : "TypeDeclaration[28543-29526]:TypeDeclaration[28654-29637]"
    }, {
      "left" : "String key;",
      "right" : "String key;",
      "info" : "FieldDeclaration[28571-28582]:FieldDeclaration[28682-28693]"
    }, {
      "left" : "File[] temps;",
      "right" : "File[] temps;",
      "info" : "FieldDeclaration[28591-28604]:FieldDeclaration[28702-28715]"
    }, {
      "left" : "FileOutputStream[] outs;",
      "right" : "FileOutputStream[] outs;",
      "info" : "FieldDeclaration[28613-28637]:FieldDeclaration[28724-28748]"
    }, {
      "left" : "boolean done;",
      "right" : "boolean done;",
      "info" : "FieldDeclaration[28646-28659]:FieldDeclaration[28757-28770]"
    }, {
      "left" : "public EntryEditor(String key)",
      "right" : "public EntryEditor(String key)",
      "info" : "MethodDeclaration[28668-28845]:MethodDeclaration[28779-28956]"
    }, {
      "left" : "void commit()",
      "right" : "void commit()",
      "info" : "MethodDeclaration[28855-29077]:MethodDeclaration[28966-29188]"
    }, {
      "left" : "FileOutputStream newOutputStream(int index) throws IOException",
      "right" : "FileOutputStream newOutputStream(int index) throws IOException",
      "info" : "MethodDeclaration[29087-29296]:MethodDeclaration[29198-29407]"
    }, {
      "left" : "void abort()",
      "right" : "void abort()",
      "info" : "MethodDeclaration[29306-29520]:MethodDeclaration[29417-29631]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1794-1800]:Modifier[1794-1800]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1801-1806]:TYPE_DECLARATION_KIND[1801-1806]"
    }, {
      "left" : "ResponseCacheMiddleware",
      "right" : "ResponseCacheMiddleware",
      "info" : "SimpleName[1807-1830]:SimpleName[1807-1830]"
    }, {
      "left" : "SimpleMiddleware",
      "right" : "SimpleMiddleware",
      "info" : "SimpleType[1839-1855]:SimpleType[1839-1855]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2542-2549]:Modifier[2542-2549]"
    }, {
      "left" : "ResponseCacheMiddleware",
      "right" : "ResponseCacheMiddleware",
      "info" : "SimpleName[2550-2573]:SimpleName[2550-2573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2576-2583]:Block[2576-2583]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2589-2595]:Modifier[2589-2595]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2596-2602]:Modifier[2596-2602]"
    }, {
      "left" : "ResponseCacheMiddleware",
      "right" : "ResponseCacheMiddleware",
      "info" : "SimpleType[2603-2626]:SimpleType[2603-2626]"
    }, {
      "left" : "addCache",
      "right" : "addCache",
      "info" : "SimpleName[2627-2635]:SimpleName[2627-2635]"
    }, {
      "left" : "AsyncHttpClient client",
      "right" : "AsyncHttpClient client",
      "info" : "SingleVariableDeclaration[2636-2658]:SingleVariableDeclaration[2636-2658]"
    }, {
      "left" : "File cacheDir",
      "right" : "File cacheDir",
      "info" : "SingleVariableDeclaration[2660-2673]:SingleVariableDeclaration[2660-2673]"
    }, {
      "left" : "long size",
      "right" : "long size",
      "info" : "SingleVariableDeclaration[2675-2684]:SingleVariableDeclaration[2675-2684]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2693-2704]:SimpleType[2693-2704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2705-3174]:Block[2705-3174]"
    }, {
      "left" : "for (AsyncHttpClientMiddleware middleware: client.getMiddleware())",
      "right" : "for (AsyncHttpClientMiddleware middleware: client.getMiddleware())",
      "info" : "EnhancedForStatement[2715-2942]:EnhancedForStatement[2715-2942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2782-2942]:Block[2782-2942]"
    }, {
      "left" : "if (middleware instanceof ResponseCacheMiddleware)",
      "right" : "if (middleware instanceof ResponseCacheMiddleware)",
      "info" : "IfStatement[2796-2932]:IfStatement[2796-2932]"
    }, {
      "left" : "throw new IOException(\"Response cache already added to http client\");",
      "right" : "throw new IOException(\"Response cache already added to http client\");",
      "info" : "ThrowStatement[2863-2932]:ThrowStatement[2863-2932]"
    }, {
      "left" : "ResponseCacheMiddleware ret = new ResponseCacheMiddleware();",
      "right" : "ResponseCacheMiddleware ret = new ResponseCacheMiddleware();",
      "info" : "VariableDeclarationStatement[2951-3011]:VariableDeclarationStatement[2951-3011]"
    }, {
      "left" : "ret.server = client.getServer();",
      "right" : "ret.server = client.getServer();",
      "info" : "ExpressionStatement[3020-3052]:ExpressionStatement[3020-3052]"
    }, {
      "left" : "ret.cache = new FileCache(cacheDir, size, false);",
      "right" : "ret.cache = new FileCache(cacheDir, size, false);",
      "info" : "ExpressionStatement[3061-3110]:ExpressionStatement[3061-3110]"
    }, {
      "left" : "client.insertMiddleware(ret);",
      "right" : "client.insertMiddleware(ret);",
      "info" : "ExpressionStatement[3119-3148]:ExpressionStatement[3119-3148]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[3157-3168]:ReturnStatement[3157-3168]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3180-3186]:Modifier[3180-3186]"
    }, {
      "left" : "FileCache",
      "right" : "FileCache",
      "info" : "SimpleType[3187-3196]:SimpleType[3187-3196]"
    }, {
      "left" : "getFileCache",
      "right" : "getFileCache",
      "info" : "SimpleName[3197-3209]:SimpleName[3197-3209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3212-3241]:Block[3212-3241]"
    }, {
      "left" : "return cache;",
      "right" : "return cache;",
      "info" : "ReturnStatement[3222-3235]:ReturnStatement[3222-3235]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3251-3257]:Modifier[3251-3257]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3258-3265]:PrimitiveType[3258-3265]"
    }, {
      "left" : "getCaching",
      "right" : "getCaching",
      "info" : "SimpleName[3266-3276]:SimpleName[3266-3276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3279-3310]:Block[3279-3310]"
    }, {
      "left" : "return caching;",
      "right" : "return caching;",
      "info" : "ReturnStatement[3289-3304]:ReturnStatement[3289-3304]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3320-3326]:Modifier[3320-3326]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3327-3331]:PrimitiveType[3327-3331]"
    }, {
      "left" : "setCaching",
      "right" : "setCaching",
      "info" : "SimpleName[3332-3342]:SimpleName[3332-3342]"
    }, {
      "left" : "boolean caching",
      "right" : "boolean caching",
      "info" : "SingleVariableDeclaration[3343-3358]:SingleVariableDeclaration[3343-3358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3360-3399]:Block[3360-3399]"
    }, {
      "left" : "this.caching = caching;",
      "right" : "this.caching = caching;",
      "info" : "ExpressionStatement[3370-3393]:ExpressionStatement[3370-3393]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3545-3554]:MarkerAnnotation[3545-3554]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3559-3565]:Modifier[3559-3565]"
    }, {
      "left" : "Cancellable",
      "right" : "Cancellable",
      "info" : "SimpleType[3566-3577]:SimpleType[3566-3577]"
    }, {
      "left" : "getSocket",
      "right" : "getSocket",
      "info" : "SimpleName[3578-3587]:SimpleName[3578-3587]"
    }, {
      "left" : "final GetSocketData data",
      "right" : "final GetSocketData data",
      "info" : "SingleVariableDeclaration[3588-3612]:SingleVariableDeclaration[3588-3612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3614-7771]:Block[3614-7788]"
    }, {
      "left" : "RequestHeaders requestHeaders = new RequestHeaders(data.request.getUri(), RawHeaders.fromMultimap(data.request.getHeaders().getMultiMap()));",
      "right" : "RequestHeaders requestHeaders = new RequestHeaders(data.request.getUri(), RawHeaders.fromMultimap(data.request.getHeaders().getMultiMap()));",
      "info" : "VariableDeclarationStatement[3624-3764]:VariableDeclarationStatement[3624-3764]"
    }, {
      "left" : "data.state.put(\"request-headers\", requestHeaders);",
      "right" : "data.state.put(\"request-headers\", requestHeaders);",
      "info" : "ExpressionStatement[3773-3823]:ExpressionStatement[3773-3823]"
    }, {
      "left" : "if (cache == null || !caching || requestHeaders.isNoCache())",
      "right" : "if (cache == null || !caching || requestHeaders.isNoCache())",
      "info" : "IfStatement[3833-3958]:IfStatement[3833-3958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3894-3958]:Block[3894-3958]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[3908-3923]:ExpressionStatement[3908-3923]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3936-3948]:ReturnStatement[3936-3948]"
    }, {
      "left" : "String key = FileCache.toKeyString(data.request.getUri());",
      "right" : "String key = FileCache.toKeyString(data.request.getUri());",
      "info" : "VariableDeclarationStatement[3968-4026]:VariableDeclarationStatement[3968-4026]"
    }, {
      "left" : "FileInputStream[] snapshot = null;",
      "right" : "FileInputStream[] snapshot = null;",
      "info" : "VariableDeclarationStatement[4035-4069]:VariableDeclarationStatement[4035-4069]"
    }, {
      "left" : "long contentLength;",
      "right" : "long contentLength;",
      "info" : "VariableDeclarationStatement[4078-4097]:VariableDeclarationStatement[4078-4097]"
    }, {
      "left" : "Entry entry;",
      "right" : "Entry entry;",
      "info" : "VariableDeclarationStatement[4106-4118]:VariableDeclarationStatement[4106-4118]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4127-4626]:TryStatement[4127-4626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4131-4424]:Block[4131-4424]"
    }, {
      "left" : "snapshot = cache.get(key, ENTRY_COUNT);",
      "right" : "snapshot = cache.get(key, ENTRY_COUNT);",
      "info" : "ExpressionStatement[4145-4184]:ExpressionStatement[4145-4184]"
    }, {
      "left" : "if (snapshot == null)",
      "right" : "if (snapshot == null)",
      "info" : "IfStatement[4197-4295]:IfStatement[4197-4295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4219-4295]:Block[4219-4295]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[4237-4252]:ExpressionStatement[4237-4252]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4269-4281]:ReturnStatement[4269-4281]"
    }, {
      "left" : "contentLength = snapshot[ENTRY_BODY].available();",
      "right" : "contentLength = snapshot[ENTRY_BODY].available();",
      "info" : "ExpressionStatement[4308-4357]:ExpressionStatement[4308-4357]"
    }, {
      "left" : "entry = new Entry(snapshot[ENTRY_METADATA]);",
      "right" : "entry = new Entry(snapshot[ENTRY_METADATA]);",
      "info" : "ExpressionStatement[4370-4414]:ExpressionStatement[4370-4414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4455-4626]:Block[4455-4626]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[4526-4541]:ExpressionStatement[4526-4541]"
    }, {
      "left" : "StreamUtility.closeQuietly(snapshot);",
      "right" : "StreamUtility.closeQuietly(snapshot);",
      "info" : "ExpressionStatement[4554-4591]:ExpressionStatement[4554-4591]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4604-4616]:ReturnStatement[4604-4616]"
    }, {
      "left" : "if (!entry.matches(data.request.getUri(), data.request.getMethod(), data.request.getHeaders().getMultiMap()))",
      "right" : "if (!entry.matches(data.request.getUri(), data.request.getMethod(), data.request.getHeaders().getMultiMap()))",
      "info" : "IfStatement[4672-4896]:IfStatement[4672-4896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4782-4896]:Block[4782-4896]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[4796-4811]:ExpressionStatement[4796-4811]"
    }, {
      "left" : "StreamUtility.closeQuietly(snapshot);",
      "right" : "StreamUtility.closeQuietly(snapshot);",
      "info" : "ExpressionStatement[4824-4861]:ExpressionStatement[4824-4861]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4874-4886]:ReturnStatement[4874-4886]"
    }, {
      "left" : "EntryCacheResponse candidate = new EntryCacheResponse(entry, snapshot[ENTRY_BODY]);",
      "right" : "EntryCacheResponse candidate = new EntryCacheResponse(entry, snapshot[ENTRY_BODY]);",
      "info" : "VariableDeclarationStatement[4906-4989]:VariableDeclarationStatement[4906-4989]"
    }, {
      "left" : "Map<String, List<String>> responseHeadersMap;",
      "right" : "Map<String, List<String>> responseHeadersMap;",
      "info" : "VariableDeclarationStatement[4999-5044]:VariableDeclarationStatement[4999-5044]"
    }, {
      "left" : "FileInputStream cachedResponseBody;",
      "right" : "FileInputStream cachedResponseBody;",
      "info" : "VariableDeclarationStatement[5053-5088]:VariableDeclarationStatement[5053-5088]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5097-5366]:TryStatement[5097-5366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5101-5223]:Block[5101-5223]"
    }, {
      "left" : "responseHeadersMap = candidate.getHeaders();",
      "right" : "responseHeadersMap = candidate.getHeaders();",
      "info" : "ExpressionStatement[5115-5159]:ExpressionStatement[5115-5159]"
    }, {
      "left" : "cachedResponseBody = candidate.getBody();",
      "right" : "cachedResponseBody = candidate.getBody();",
      "info" : "ExpressionStatement[5172-5213]:ExpressionStatement[5172-5213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5252-5366]:Block[5252-5366]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[5266-5281]:ExpressionStatement[5266-5281]"
    }, {
      "left" : "StreamUtility.closeQuietly(snapshot);",
      "right" : "StreamUtility.closeQuietly(snapshot);",
      "info" : "ExpressionStatement[5294-5331]:ExpressionStatement[5294-5331]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5344-5356]:ReturnStatement[5344-5356]"
    }, {
      "left" : "if (responseHeadersMap == null || cachedResponseBody == null)",
      "right" : "if (responseHeadersMap == null || cachedResponseBody == null)",
      "info" : "IfStatement[5375-5551]:IfStatement[5375-5551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5437-5551]:Block[5437-5551]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[5451-5466]:ExpressionStatement[5451-5466]"
    }, {
      "left" : "StreamUtility.closeQuietly(snapshot);",
      "right" : "StreamUtility.closeQuietly(snapshot);",
      "info" : "ExpressionStatement[5479-5516]:ExpressionStatement[5479-5516]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5529-5541]:ReturnStatement[5529-5541]"
    }, {
      "left" : "RawHeaders rawResponseHeaders = RawHeaders.fromMultimap(responseHeadersMap);",
      "right" : "RawHeaders rawResponseHeaders = RawHeaders.fromMultimap(responseHeadersMap);",
      "info" : "VariableDeclarationStatement[5561-5637]:VariableDeclarationStatement[5561-5637]"
    }, {
      "left" : "ResponseHeaders cachedResponseHeaders = new ResponseHeaders(data.request.getUri(), rawResponseHeaders);",
      "right" : "ResponseHeaders cachedResponseHeaders = new ResponseHeaders(data.request.getUri(), rawResponseHeaders);",
      "info" : "VariableDeclarationStatement[5646-5749]:VariableDeclarationStatement[5646-5749]"
    }, {
      "left" : "rawResponseHeaders.set(\"Content-Length\", String.valueOf(contentLength));",
      "right" : "rawResponseHeaders.set(\"Content-Length\", String.valueOf(contentLength));",
      "info" : "ExpressionStatement[5758-5830]:ExpressionStatement[5758-5830]"
    }, {
      "left" : "rawResponseHeaders.removeAll(\"Content-Encoding\");",
      "right" : "rawResponseHeaders.removeAll(\"Content-Encoding\");",
      "info" : "ExpressionStatement[5839-5888]:ExpressionStatement[5839-5888]"
    }, {
      "left" : "rawResponseHeaders.removeAll(\"Transfer-Encoding\");",
      "right" : "rawResponseHeaders.removeAll(\"Transfer-Encoding\");",
      "info" : "ExpressionStatement[5897-5947]:ExpressionStatement[5897-5947]"
    }, {
      "left" : "cachedResponseHeaders.setLocalTimestamps(System.currentTimeMillis(), System.currentTimeMillis());",
      "right" : "cachedResponseHeaders.setLocalTimestamps(System.currentTimeMillis(), System.currentTimeMillis());",
      "info" : "ExpressionStatement[5956-6053]:ExpressionStatement[5956-6053]"
    }, {
      "left" : "long now = System.currentTimeMillis();",
      "right" : "long now = System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[6063-6101]:VariableDeclarationStatement[6063-6101]"
    }, {
      "left" : "ResponseSource responseSource = cachedResponseHeaders.chooseResponseSource(now, requestHeaders);",
      "right" : "ResponseSource responseSource = cachedResponseHeaders.chooseResponseSource(now, requestHeaders);",
      "info" : "VariableDeclarationStatement[6110-6206]:VariableDeclarationStatement[6110-6206]"
    }, {
      "left" : "if (responseSource == ResponseSource.CACHE)",
      "right" : "if (responseSource == ResponseSource.CACHE)",
      "info" : "IfStatement[6216-7765]:IfStatement[6216-7782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6260-7033]:Block[6260-7050]"
    }, {
      "left" : "data.request.logi(\"Response retrieved from cache\");",
      "right" : "data.request.logi(\"Response retrieved from cache\");",
      "info" : "ExpressionStatement[6274-6325]:ExpressionStatement[6274-6325]"
    }, {
      "left" : "final CachedSocket socket = entry.isHttps() ? new CachedSSLSocket(candidate, contentLength) : new CachedSocket(candidate, contentLength);",
      "right" : "final CachedSocket socket = entry.isHttps() ? new CachedSSLSocket(candidate, contentLength) : new CachedSocket(candidate, contentLength);",
      "info" : "VariableDeclarationStatement[6338-6475]:VariableDeclarationStatement[6338-6475]"
    }, {
      "left" : "socket.pending.add(ByteBuffer.wrap(rawResponseHeaders.toHeaderString().getBytes()));",
      "right" : "socket.pending.add(ByteBuffer.wrap(rawResponseHeaders.toHeaderString().getBytes()));",
      "info" : "ExpressionStatement[6488-6572]:ExpressionStatement[6488-6572]"
    }, {
      "left" : "server.post(new Runnable() {\n                @Override\n                public void run() {\n                    data.connectCallback.onConnectCompleted(null, socket);\n                    socket.spewInternal();\n                }\n            });",
      "right" : "server.post(new Runnable() {\n                @Override\n                public void run() {\n                    data.connectCallback.onConnectCompleted(null, socket);\n                    socket.sendCachedDataOnNetworkThread();\n                }\n            });",
      "info" : "ExpressionStatement[6586-6828]:ExpressionStatement[6586-6845]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6631-6640]:MarkerAnnotation[6631-6640]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6657-6663]:Modifier[6657-6663]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6664-6668]:PrimitiveType[6664-6668]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[6669-6672]:SimpleName[6669-6672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6675-6812]:Block[6675-6829]"
    }, {
      "left" : "data.connectCallback.onConnectCompleted(null, socket);",
      "right" : "data.connectCallback.onConnectCompleted(null, socket);",
      "info" : "ExpressionStatement[6697-6751]:ExpressionStatement[6697-6751]"
    }, {
      "left" : "socket.spewInternal();",
      "right" : "socket.sendCachedDataOnNetworkThread();",
      "info" : "ExpressionStatement[6772-6794]:ExpressionStatement[6772-6811]"
    }, {
      "left" : "spewInternal",
      "right" : "sendCachedDataOnNetworkThread",
      "info" : "SimpleName[6779-6791]:SimpleName[6779-6808]"
    }, {
      "left" : "cacheHitCount++;",
      "right" : "cacheHitCount++;",
      "info" : "ExpressionStatement[6841-6857]:ExpressionStatement[6858-6874]"
    }, {
      "left" : "data.state.put(\"socket-owner\", this);",
      "right" : "data.state.put(\"socket-owner\", this);",
      "info" : "ExpressionStatement[6870-6907]:ExpressionStatement[6887-6924]"
    }, {
      "left" : "SimpleCancellable ret = new SimpleCancellable();",
      "right" : "SimpleCancellable ret = new SimpleCancellable();",
      "info" : "VariableDeclarationStatement[6920-6968]:VariableDeclarationStatement[6937-6985]"
    }, {
      "left" : "ret.setComplete();",
      "right" : "ret.setComplete();",
      "info" : "ExpressionStatement[6981-6999]:ExpressionStatement[6998-7016]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[7012-7023]:ReturnStatement[7029-7040]"
    }, {
      "left" : "if (responseSource == ResponseSource.CONDITIONAL_CACHE)",
      "right" : "if (responseSource == ResponseSource.CONDITIONAL_CACHE)",
      "info" : "IfStatement[7047-7765]:IfStatement[7064-7782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7103-7533]:Block[7120-7550]"
    }, {
      "left" : "data.request.logi(\"Response may be served from conditional cache\");",
      "right" : "data.request.logi(\"Response may be served from conditional cache\");",
      "info" : "ExpressionStatement[7117-7184]:ExpressionStatement[7134-7201]"
    }, {
      "left" : "CacheData cacheData = new CacheData();",
      "right" : "CacheData cacheData = new CacheData();",
      "info" : "VariableDeclarationStatement[7197-7235]:VariableDeclarationStatement[7214-7252]"
    }, {
      "left" : "cacheData.snapshot = snapshot;",
      "right" : "cacheData.snapshot = snapshot;",
      "info" : "ExpressionStatement[7248-7278]:ExpressionStatement[7265-7295]"
    }, {
      "left" : "cacheData.contentLength = contentLength;",
      "right" : "cacheData.contentLength = contentLength;",
      "info" : "ExpressionStatement[7291-7331]:ExpressionStatement[7308-7348]"
    }, {
      "left" : "cacheData.cachedResponseHeaders = cachedResponseHeaders;",
      "right" : "cacheData.cachedResponseHeaders = cachedResponseHeaders;",
      "info" : "ExpressionStatement[7344-7400]:ExpressionStatement[7361-7417]"
    }, {
      "left" : "cacheData.candidate = candidate;",
      "right" : "cacheData.candidate = candidate;",
      "info" : "ExpressionStatement[7413-7445]:ExpressionStatement[7430-7462]"
    }, {
      "left" : "data.state.put(\"cache-data\", cacheData);",
      "right" : "data.state.put(\"cache-data\", cacheData);",
      "info" : "ExpressionStatement[7458-7498]:ExpressionStatement[7475-7515]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7511-7523]:ReturnStatement[7528-7540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7547-7765]:Block[7564-7782]"
    }, {
      "left" : "data.request.logd(\"Response can not be served from cache\");",
      "right" : "data.request.logd(\"Response can not be served from cache\");",
      "info" : "ExpressionStatement[7561-7620]:ExpressionStatement[7578-7637]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[7665-7680]:ExpressionStatement[7682-7697]"
    }, {
      "left" : "StreamUtility.closeQuietly(snapshot);",
      "right" : "StreamUtility.closeQuietly(snapshot);",
      "info" : "ExpressionStatement[7693-7730]:ExpressionStatement[7710-7747]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7743-7755]:ReturnStatement[7760-7772]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7777-7783]:Modifier[7794-7800]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[7784-7787]:PrimitiveType[7801-7804]"
    }, {
      "left" : "getConditionalCacheHitCount",
      "right" : "getConditionalCacheHitCount",
      "info" : "SimpleName[7788-7815]:SimpleName[7805-7832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7818-7866]:Block[7835-7883]"
    }, {
      "left" : "return conditionalCacheHitCount;",
      "right" : "return conditionalCacheHitCount;",
      "info" : "ReturnStatement[7828-7860]:ReturnStatement[7845-7877]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7872-7878]:Modifier[7889-7895]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[7879-7882]:PrimitiveType[7896-7899]"
    }, {
      "left" : "getCacheHitCount",
      "right" : "getCacheHitCount",
      "info" : "SimpleName[7883-7899]:SimpleName[7900-7916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7902-7939]:Block[7919-7956]"
    }, {
      "left" : "return cacheHitCount;",
      "right" : "return cacheHitCount;",
      "info" : "ReturnStatement[7912-7933]:ReturnStatement[7929-7950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7949-7955]:Modifier[7966-7972]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[7956-7959]:PrimitiveType[7973-7976]"
    }, {
      "left" : "getNetworkCount",
      "right" : "getNetworkCount",
      "info" : "SimpleName[7960-7975]:SimpleName[7977-7992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7978-8014]:Block[7995-8031]"
    }, {
      "left" : "return networkCount;",
      "right" : "return networkCount;",
      "info" : "ReturnStatement[7988-8008]:ReturnStatement[8005-8025]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8020-8026]:Modifier[8037-8043]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8027-8030]:PrimitiveType[8044-8047]"
    }, {
      "left" : "getCacheStoreCount",
      "right" : "getCacheStoreCount",
      "info" : "SimpleName[8031-8049]:SimpleName[8048-8066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8052-8091]:Block[8069-8108]"
    }, {
      "left" : "return cacheStoreCount;",
      "right" : "return cacheStoreCount;",
      "info" : "ReturnStatement[8062-8085]:ReturnStatement[8079-8102]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8230-8239]:MarkerAnnotation[8247-8256]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8244-8250]:Modifier[8261-8267]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8251-8255]:PrimitiveType[8268-8272]"
    }, {
      "left" : "onBodyDecoder",
      "right" : "onBodyDecoder",
      "info" : "SimpleName[8256-8269]:SimpleName[8273-8286]"
    }, {
      "left" : "OnBodyDataOnRequestSentData data",
      "right" : "OnBodyDataOnRequestSentData data",
      "info" : "SingleVariableDeclaration[8270-8302]:SingleVariableDeclaration[8287-8319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8304-11690]:Block[8321-11717]"
    }, {
      "left" : "CachedSocket cached = com.koushikdutta.async.Util.getWrappedSocket(data.socket, CachedSocket.class);",
      "right" : "CachedSocket cached = com.koushikdutta.async.Util.getWrappedSocket(data.socket, CachedSocket.class);",
      "info" : "VariableDeclarationStatement[8314-8414]:VariableDeclarationStatement[8331-8431]"
    }, {
      "left" : "if (cached != null)",
      "right" : "if (cached != null)",
      "info" : "IfStatement[8423-8535]:IfStatement[8440-8552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8443-8535]:Block[8460-8552]"
    }, {
      "left" : "data.response.headers().set(SERVED_FROM, CACHE);",
      "right" : "data.response.headers().set(SERVED_FROM, CACHE);",
      "info" : "ExpressionStatement[8457-8505]:ExpressionStatement[8474-8522]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[8518-8525]:ReturnStatement[8535-8542]"
    }, {
      "left" : "CacheData cacheData = data.state.get(\"cache-data\");",
      "right" : "CacheData cacheData = data.state.get(\"cache-data\");",
      "info" : "VariableDeclarationStatement[8545-8596]:VariableDeclarationStatement[8562-8613]"
    }, {
      "left" : "RawHeaders rh = RawHeaders.fromMultimap(data.response.headers().getMultiMap());",
      "right" : "RawHeaders rh = RawHeaders.fromMultimap(data.response.headers().getMultiMap());",
      "info" : "VariableDeclarationStatement[8605-8684]:VariableDeclarationStatement[8622-8701]"
    }, {
      "left" : "rh.removeAll(\"Content-Length\");",
      "right" : "rh.removeAll(\"Content-Length\");",
      "info" : "ExpressionStatement[8693-8724]:ExpressionStatement[8710-8741]"
    }, {
      "left" : "rh.setStatusLine(String.format(\"%s %s %s\", data.response.protocol(), data.response.code(), data.response.message()));",
      "right" : "rh.setStatusLine(String.format(\"%s %s %s\", data.response.protocol(), data.response.code(), data.response.message()));",
      "info" : "ExpressionStatement[8733-8850]:ExpressionStatement[8750-8867]"
    }, {
      "left" : "ResponseHeaders networkResponse = new ResponseHeaders(data.request.getUri(), rh);",
      "right" : "ResponseHeaders networkResponse = new ResponseHeaders(data.request.getUri(), rh);",
      "info" : "VariableDeclarationStatement[8859-8940]:VariableDeclarationStatement[8876-8957]"
    }, {
      "left" : "data.state.put(\"response-headers\", networkResponse);",
      "right" : "data.state.put(\"response-headers\", networkResponse);",
      "info" : "ExpressionStatement[8949-9001]:ExpressionStatement[8966-9018]"
    }, {
      "left" : "if (cacheData != null)",
      "right" : "if (cacheData != null)",
      "info" : "IfStatement[9010-10146]:IfStatement[9027-10173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9033-10146]:Block[9050-10173]"
    }, {
      "left" : "if (cacheData.cachedResponseHeaders.validate(networkResponse))",
      "right" : "if (cacheData.cachedResponseHeaders.validate(networkResponse))",
      "info" : "IfStatement[9047-9958]:IfStatement[9064-9985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9110-9958]:Block[9127-9985]"
    }, {
      "left" : "data.request.logi(\"Serving response from conditional cache\");",
      "right" : "data.request.logi(\"Serving response from conditional cache\");",
      "info" : "ExpressionStatement[9128-9189]:ExpressionStatement[9145-9206]"
    }, {
      "left" : "ResponseHeaders combined = cacheData.cachedResponseHeaders.combine(networkResponse);",
      "right" : "ResponseHeaders combined = cacheData.cachedResponseHeaders.combine(networkResponse);",
      "info" : "VariableDeclarationStatement[9206-9290]:VariableDeclarationStatement[9223-9307]"
    }, {
      "left" : "data.response.headers(new Headers(combined.getHeaders().toMultimap()));",
      "right" : "data.response.headers(new Headers(combined.getHeaders().toMultimap()));",
      "info" : "ExpressionStatement[9307-9378]:ExpressionStatement[9324-9395]"
    }, {
      "left" : "data.response.code(combined.getHeaders().getResponseCode());",
      "right" : "data.response.code(combined.getHeaders().getResponseCode());",
      "info" : "ExpressionStatement[9395-9455]:ExpressionStatement[9412-9472]"
    }, {
      "left" : "data.response.message(combined.getHeaders().getResponseMessage());",
      "right" : "data.response.message(combined.getHeaders().getResponseMessage());",
      "info" : "ExpressionStatement[9472-9538]:ExpressionStatement[9489-9555]"
    }, {
      "left" : "data.response.headers().set(SERVED_FROM, CONDITIONAL_CACHE);",
      "right" : "data.response.headers().set(SERVED_FROM, CONDITIONAL_CACHE);",
      "info" : "ExpressionStatement[9556-9616]:ExpressionStatement[9573-9633]"
    }, {
      "left" : "conditionalCacheHitCount++;",
      "right" : "conditionalCacheHitCount++;",
      "info" : "ExpressionStatement[9633-9660]:ExpressionStatement[9650-9677]"
    }, {
      "left" : "CachedBodyEmitter bodySpewer = new CachedBodyEmitter(cacheData.candidate, cacheData.contentLength);",
      "right" : "CachedBodyEmitter bodySpewer = new CachedBodyEmitter(cacheData.candidate, cacheData.contentLength);",
      "info" : "VariableDeclarationStatement[9678-9777]:VariableDeclarationStatement[9695-9794]"
    }, {
      "left" : "bodySpewer.setDataEmitter(data.bodyEmitter);",
      "right" : "bodySpewer.setDataEmitter(data.bodyEmitter);",
      "info" : "ExpressionStatement[9794-9838]:ExpressionStatement[9811-9855]"
    }, {
      "left" : "data.bodyEmitter = bodySpewer;",
      "right" : "data.bodyEmitter = bodySpewer;",
      "info" : "ExpressionStatement[9855-9885]:ExpressionStatement[9872-9902]"
    }, {
      "left" : "bodySpewer.spew();",
      "right" : "bodySpewer.sendCachedData();",
      "info" : "ExpressionStatement[9902-9920]:ExpressionStatement[9919-9947]"
    }, {
      "left" : "spew",
      "right" : "sendCachedData",
      "info" : "SimpleName[9913-9917]:SimpleName[9930-9944]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[9937-9944]:ReturnStatement[9964-9971]"
    }, {
      "left" : "data.state.remove(\"cache-data\");",
      "right" : "data.state.remove(\"cache-data\");",
      "info" : "ExpressionStatement[10044-10076]:ExpressionStatement[10071-10103]"
    }, {
      "left" : "StreamUtility.closeQuietly(cacheData.snapshot);",
      "right" : "StreamUtility.closeQuietly(cacheData.snapshot);",
      "info" : "ExpressionStatement[10089-10136]:ExpressionStatement[10116-10163]"
    }, {
      "left" : "if (!caching)",
      "right" : "if (!caching)",
      "info" : "IfStatement[10156-10189]:IfStatement[10183-10216]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[10182-10189]:ReturnStatement[10209-10216]"
    }, {
      "left" : "RequestHeaders requestHeaders = data.state.get(\"request-headers\");",
      "right" : "RequestHeaders requestHeaders = data.state.get(\"request-headers\");",
      "info" : "VariableDeclarationStatement[10199-10265]:VariableDeclarationStatement[10226-10292]"
    }, {
      "left" : "if (requestHeaders == null || !networkResponse.isCacheable(requestHeaders) || !data.request.getMethod().equals(AsyncHttpGet.METHOD))",
      "right" : "if (requestHeaders == null || !networkResponse.isCacheable(requestHeaders) || !data.request.getMethod().equals(AsyncHttpGet.METHOD))",
      "info" : "IfStatement[10274-10769]:IfStatement[10301-10796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10407-10769]:Block[10434-10796]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[10664-10679]:ExpressionStatement[10691-10706]"
    }, {
      "left" : "data.request.logd(\"Response is not cacheable\");",
      "right" : "data.request.logd(\"Response is not cacheable\");",
      "info" : "ExpressionStatement[10692-10739]:ExpressionStatement[10719-10766]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[10752-10759]:ReturnStatement[10779-10786]"
    }, {
      "left" : "String key = FileCache.toKeyString(data.request.getUri());",
      "right" : "String key = FileCache.toKeyString(data.request.getUri());",
      "info" : "VariableDeclarationStatement[10779-10837]:VariableDeclarationStatement[10806-10864]"
    }, {
      "left" : "RawHeaders varyHeaders = requestHeaders.getHeaders().getAll(networkResponse.getVaryFields());",
      "right" : "RawHeaders varyHeaders = requestHeaders.getHeaders().getAll(networkResponse.getVaryFields());",
      "info" : "VariableDeclarationStatement[10846-10939]:VariableDeclarationStatement[10873-10966]"
    }, {
      "left" : "Entry entry = new Entry(data.request.getUri(), varyHeaders, data.request, networkResponse.getHeaders());",
      "right" : "Entry entry = new Entry(data.request.getUri(), varyHeaders, data.request, networkResponse.getHeaders());",
      "info" : "VariableDeclarationStatement[10948-11052]:VariableDeclarationStatement[10975-11079]"
    }, {
      "left" : "BodyCacher cacher = new BodyCacher();",
      "right" : "BodyCacher cacher = new BodyCacher();",
      "info" : "VariableDeclarationStatement[11061-11098]:VariableDeclarationStatement[11088-11125]"
    }, {
      "left" : "EntryEditor editor = new EntryEditor(key);",
      "right" : "EntryEditor editor = new EntryEditor(key);",
      "info" : "VariableDeclarationStatement[11107-11149]:VariableDeclarationStatement[11134-11176]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[11158-11445]:TryStatement[11185-11472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11162-11287]:Block[11189-11314]"
    }, {
      "left" : "entry.writeTo(editor);",
      "right" : "entry.writeTo(editor);",
      "info" : "ExpressionStatement[11176-11198]:ExpressionStatement[11203-11225]"
    }, {
      "left" : "editor.newOutputStream(ENTRY_BODY);",
      "right" : "editor.newOutputStream(ENTRY_BODY);",
      "info" : "ExpressionStatement[11242-11277]:ExpressionStatement[11269-11304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11316-11445]:Block[11343-11472]"
    }, {
      "left" : "editor.abort();",
      "right" : "editor.abort();",
      "info" : "ExpressionStatement[11372-11387]:ExpressionStatement[11399-11414]"
    }, {
      "left" : "networkCount++;",
      "right" : "networkCount++;",
      "info" : "ExpressionStatement[11400-11415]:ExpressionStatement[11427-11442]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11428-11435]:ReturnStatement[11455-11462]"
    }, {
      "left" : "cacher.editor = editor;",
      "right" : "cacher.editor = editor;",
      "info" : "ExpressionStatement[11454-11477]:ExpressionStatement[11481-11504]"
    }, {
      "left" : "cacher.setDataEmitter(data.bodyEmitter);",
      "right" : "cacher.setDataEmitter(data.bodyEmitter);",
      "info" : "ExpressionStatement[11487-11527]:ExpressionStatement[11514-11554]"
    }, {
      "left" : "data.bodyEmitter = cacher;",
      "right" : "data.bodyEmitter = cacher;",
      "info" : "ExpressionStatement[11536-11562]:ExpressionStatement[11563-11589]"
    }, {
      "left" : "data.state.put(\"body-cacher\", cacher);",
      "right" : "data.state.put(\"body-cacher\", cacher);",
      "info" : "ExpressionStatement[11572-11610]:ExpressionStatement[11599-11637]"
    }, {
      "left" : "data.request.logd(\"Caching response\");",
      "right" : "data.request.logd(\"Caching response\");",
      "info" : "ExpressionStatement[11619-11657]:ExpressionStatement[11646-11684]"
    }, {
      "left" : "cacheStoreCount++;",
      "right" : "cacheStoreCount++;",
      "info" : "ExpressionStatement[11666-11684]:ExpressionStatement[11693-11711]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11725-11734]:MarkerAnnotation[11752-11761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11739-11745]:Modifier[11766-11772]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11746-11750]:PrimitiveType[11773-11777]"
    }, {
      "left" : "onResponseComplete",
      "right" : "onResponseComplete",
      "info" : "SimpleName[11751-11769]:SimpleName[11778-11796]"
    }, {
      "left" : "OnResponseCompleteDataOnRequestSentData data",
      "right" : "OnResponseCompleteDataOnRequestSentData data",
      "info" : "SingleVariableDeclaration[11770-11814]:SingleVariableDeclaration[11797-11841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11816-12433]:Block[11843-12460]"
    }, {
      "left" : "CacheData cacheData = data.state.get(\"cache-data\");",
      "right" : "CacheData cacheData = data.state.get(\"cache-data\");",
      "info" : "VariableDeclarationStatement[11826-11877]:VariableDeclarationStatement[11853-11904]"
    }, {
      "left" : "if (cacheData != null && cacheData.snapshot != null)",
      "right" : "if (cacheData != null && cacheData.snapshot != null)",
      "info" : "IfStatement[11886-11998]:IfStatement[11913-12025]"
    }, {
      "left" : "StreamUtility.closeQuietly(cacheData.snapshot);",
      "right" : "StreamUtility.closeQuietly(cacheData.snapshot);",
      "info" : "ExpressionStatement[11951-11998]:ExpressionStatement[11978-12025]"
    }, {
      "left" : "CachedSocket cachedSocket = Util.getWrappedSocket(data.socket, CachedSocket.class);",
      "right" : "CachedSocket cachedSocket = Util.getWrappedSocket(data.socket, CachedSocket.class);",
      "info" : "VariableDeclarationStatement[12008-12091]:VariableDeclarationStatement[12035-12118]"
    }, {
      "left" : "if (cachedSocket != null)",
      "right" : "if (cachedSocket != null)",
      "info" : "IfStatement[12100-12205]:IfStatement[12127-12232]"
    }, {
      "left" : "StreamUtility.closeQuietly((cachedSocket.cacheResponse).getBody());",
      "right" : "StreamUtility.closeQuietly((cachedSocket.cacheResponse).getBody());",
      "info" : "ExpressionStatement[12138-12205]:ExpressionStatement[12165-12232]"
    }, {
      "left" : "BodyCacher cacher = data.state.get(\"body-cacher\");",
      "right" : "BodyCacher cacher = data.state.get(\"body-cacher\");",
      "info" : "VariableDeclarationStatement[12215-12265]:VariableDeclarationStatement[12242-12292]"
    }, {
      "left" : "if (cacher != null)",
      "right" : "if (cacher != null)",
      "info" : "IfStatement[12274-12427]:IfStatement[12301-12454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12294-12427]:Block[12321-12454]"
    }, {
      "left" : "if (data.exception != null)",
      "right" : "if (data.exception != null)",
      "info" : "IfStatement[12308-12417]:IfStatement[12335-12444]"
    }, {
      "left" : "cacher.abort();",
      "right" : "cacher.abort();",
      "info" : "ExpressionStatement[12352-12367]:ExpressionStatement[12379-12394]"
    }, {
      "left" : "cacher.commit();",
      "right" : "cacher.commit();",
      "info" : "ExpressionStatement[12401-12417]:ExpressionStatement[12428-12444]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12443-12449]:Modifier[12470-12476]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12450-12454]:PrimitiveType[12477-12481]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[12455-12460]:SimpleName[12482-12487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12463-12536]:Block[12490-12563]"
    }, {
      "left" : "if (cache != null)",
      "right" : "if (cache != null)",
      "info" : "IfStatement[12473-12530]:IfStatement[12500-12557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12492-12530]:Block[12519-12557]"
    }, {
      "left" : "cache.clear();",
      "right" : "cache.clear();",
      "info" : "ExpressionStatement[12506-12520]:ExpressionStatement[12533-12547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12542-12548]:Modifier[12569-12575]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12549-12555]:Modifier[12576-12582]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[12556-12561]:TYPE_DECLARATION_KIND[12583-12588]"
    }, {
      "left" : "CacheData",
      "right" : "CacheData",
      "info" : "SimpleName[12562-12571]:SimpleName[12589-12598]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12738-12745]:Modifier[12765-12772]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12746-12752]:Modifier[12773-12779]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[12753-12758]:TYPE_DECLARATION_KIND[12780-12785]"
    }, {
      "left" : "BodyCacher",
      "right" : "BodyCacher",
      "info" : "SimpleName[12759-12769]:SimpleName[12786-12796]"
    }, {
      "left" : "FilteredDataEmitter",
      "right" : "FilteredDataEmitter",
      "info" : "SimpleType[12778-12797]:SimpleType[12805-12824]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12868-12877]:MarkerAnnotation[12895-12904]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12886-12895]:Modifier[12913-12922]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12896-12900]:PrimitiveType[12923-12927]"
    }, {
      "left" : "report",
      "right" : "report",
      "info" : "SimpleName[12901-12907]:SimpleName[12928-12934]"
    }, {
      "left" : "Exception e",
      "right" : "Exception e",
      "info" : "SingleVariableDeclaration[12908-12919]:SingleVariableDeclaration[12935-12946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12921-13013]:Block[12948-13040]"
    }, {
      "left" : "super.report(e);",
      "right" : "super.report(e);",
      "info" : "ExpressionStatement[12935-12951]:ExpressionStatement[12962-12978]"
    }, {
      "left" : "if (e != null)",
      "right" : "if (e != null)",
      "info" : "IfStatement[12964-13003]:IfStatement[12991-13030]"
    }, {
      "left" : "abort();",
      "right" : "abort();",
      "info" : "ExpressionStatement[12995-13003]:ExpressionStatement[13022-13030]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13023-13032]:MarkerAnnotation[13050-13059]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13041-13047]:Modifier[13068-13074]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13048-13052]:PrimitiveType[13075-13079]"
    }, {
      "left" : "onDataAvailable",
      "right" : "onDataAvailable",
      "info" : "SimpleName[13053-13068]:SimpleName[13080-13095]"
    }, {
      "left" : "DataEmitter emitter",
      "right" : "DataEmitter emitter",
      "info" : "SingleVariableDeclaration[13069-13088]:SingleVariableDeclaration[13096-13115]"
    }, {
      "left" : "ByteBufferList bb",
      "right" : "ByteBufferList bb",
      "info" : "SingleVariableDeclaration[13090-13107]:SingleVariableDeclaration[13117-13134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13109-14637]:Block[13136-14664]"
    }, {
      "left" : "if (cached != null)",
      "right" : "if (cached != null)",
      "info" : "IfStatement[13123-13390]:IfStatement[13150-13417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13143-13390]:Block[13170-13417]"
    }, {
      "left" : "super.onDataAvailable(emitter, cached);",
      "right" : "super.onDataAvailable(emitter, cached);",
      "info" : "ExpressionStatement[13161-13200]:ExpressionStatement[13188-13227]"
    }, {
      "left" : "if (cached.remaining() > 0)",
      "right" : "if (cached.remaining() > 0)",
      "info" : "IfStatement[13290-13345]:IfStatement[13317-13372]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[13338-13345]:ReturnStatement[13365-13372]"
    }, {
      "left" : "cached = null;",
      "right" : "cached = null;",
      "info" : "ExpressionStatement[13362-13376]:ExpressionStatement[13389-13403]"
    }, {
      "left" : "ByteBufferList copy = new ByteBufferList();",
      "right" : "ByteBufferList copy = new ByteBufferList();",
      "info" : "VariableDeclarationStatement[13502-13545]:VariableDeclarationStatement[13529-13572]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13558-14428]:TryStatement[13585-14455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13562-14259]:Block[13589-14286]"
    }, {
      "left" : "if (editor != null)",
      "right" : "if (editor != null)",
      "info" : "IfStatement[13580-14245]:IfStatement[13607-14272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13600-14245]:Block[13627-14272]"
    }, {
      "left" : "OutputStream outputStream = editor.newOutputStream(ENTRY_BODY);",
      "right" : "OutputStream outputStream = editor.newOutputStream(ENTRY_BODY);",
      "info" : "VariableDeclarationStatement[13622-13685]:VariableDeclarationStatement[13649-13712]"
    }, {
      "left" : "if (outputStream != null)",
      "right" : "if (outputStream != null)",
      "info" : "IfStatement[13706-14227]:IfStatement[13733-14254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13732-14145]:Block[13759-14172]"
    }, {
      "left" : "while (!bb.isEmpty())",
      "right" : "while (!bb.isEmpty())",
      "info" : "WhileStatement[13758-14123]:WhileStatement[13785-14150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13780-14123]:Block[13807-14150]"
    }, {
      "left" : "ByteBuffer b = bb.remove();",
      "right" : "ByteBuffer b = bb.remove();",
      "info" : "VariableDeclarationStatement[13810-13837]:VariableDeclarationStatement[13837-13864]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13866-14097]:TryStatement[13893-14124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13870-13984]:Block[13897-14011]"
    }, {
      "left" : "ByteBufferList.writeOutputStream(outputStream, b);",
      "right" : "ByteBufferList.writeOutputStream(outputStream, b);",
      "info" : "ExpressionStatement[13904-13954]:ExpressionStatement[13931-13981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14021-14097]:Block[14048-14124]"
    }, {
      "left" : "copy.add(b);",
      "right" : "copy.add(b);",
      "info" : "ExpressionStatement[14055-14067]:ExpressionStatement[14082-14094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14171-14227]:Block[14198-14254]"
    }, {
      "left" : "abort();",
      "right" : "abort();",
      "info" : "ExpressionStatement[14197-14205]:ExpressionStatement[14224-14232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14292-14332]:Block[14319-14359]"
    }, {
      "left" : "abort();",
      "right" : "abort();",
      "info" : "ExpressionStatement[14310-14318]:ExpressionStatement[14337-14345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14353-14428]:Block[14380-14455]"
    }, {
      "left" : "bb.get(copy);",
      "right" : "bb.get(copy);",
      "info" : "ExpressionStatement[14371-14384]:ExpressionStatement[14398-14411]"
    }, {
      "left" : "copy.get(bb);",
      "right" : "copy.get(bb);",
      "info" : "ExpressionStatement[14401-14414]:ExpressionStatement[14428-14441]"
    }, {
      "left" : "super.onDataAvailable(emitter, bb);",
      "right" : "super.onDataAvailable(emitter, bb);",
      "info" : "ExpressionStatement[14442-14477]:ExpressionStatement[14469-14504]"
    }, {
      "left" : "if (editor != null && bb.remaining() > 0)",
      "right" : "if (editor != null && bb.remaining() > 0)",
      "info" : "IfStatement[14491-14627]:IfStatement[14518-14654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14533-14627]:Block[14560-14654]"
    }, {
      "left" : "cached = new ByteBufferList();",
      "right" : "cached = new ByteBufferList();",
      "info" : "ExpressionStatement[14551-14581]:ExpressionStatement[14578-14608]"
    }, {
      "left" : "bb.get(cached);",
      "right" : "bb.get(cached);",
      "info" : "ExpressionStatement[14598-14613]:ExpressionStatement[14625-14640]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14647-14656]:MarkerAnnotation[14674-14683]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14665-14671]:Modifier[14692-14698]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14672-14676]:PrimitiveType[14699-14703]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[14677-14682]:SimpleName[14704-14709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14685-14744]:Block[14712-14771]"
    }, {
      "left" : "abort();",
      "right" : "abort();",
      "info" : "ExpressionStatement[14699-14707]:ExpressionStatement[14726-14734]"
    }, {
      "left" : "super.close();",
      "right" : "super.close();",
      "info" : "ExpressionStatement[14720-14734]:ExpressionStatement[14747-14761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14754-14760]:Modifier[14781-14787]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14761-14765]:PrimitiveType[14788-14792]"
    }, {
      "left" : "abort",
      "right" : "abort",
      "info" : "SimpleName[14766-14771]:SimpleName[14793-14798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14774-14896]:Block[14801-14923]"
    }, {
      "left" : "if (editor != null)",
      "right" : "if (editor != null)",
      "info" : "IfStatement[14788-14886]:IfStatement[14815-14913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14808-14886]:Block[14835-14913]"
    }, {
      "left" : "editor.abort();",
      "right" : "editor.abort();",
      "info" : "ExpressionStatement[14826-14841]:ExpressionStatement[14853-14868]"
    }, {
      "left" : "editor = null;",
      "right" : "editor = null;",
      "info" : "ExpressionStatement[14858-14872]:ExpressionStatement[14885-14899]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14906-14912]:Modifier[14933-14939]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14913-14917]:PrimitiveType[14940-14944]"
    }, {
      "left" : "commit",
      "right" : "commit",
      "info" : "SimpleName[14918-14924]:SimpleName[14945-14951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14927-15050]:Block[14954-15077]"
    }, {
      "left" : "if (editor != null)",
      "right" : "if (editor != null)",
      "info" : "IfStatement[14941-15040]:IfStatement[14968-15067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14961-15040]:Block[14988-15067]"
    }, {
      "left" : "editor.commit();",
      "right" : "editor.commit();",
      "info" : "ExpressionStatement[14979-14995]:ExpressionStatement[15006-15022]"
    }, {
      "left" : "editor = null;",
      "right" : "editor = null;",
      "info" : "ExpressionStatement[15012-15026]:ExpressionStatement[15039-15053]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15062-15069]:Modifier[15089-15096]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15070-15076]:Modifier[15097-15103]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[15077-15082]:TYPE_DECLARATION_KIND[15104-15109]"
    }, {
      "left" : "CachedBodyEmitter",
      "right" : "CachedBodyEmitter",
      "info" : "SimpleName[15083-15100]:SimpleName[15110-15127]"
    }, {
      "left" : "FilteredDataEmitter",
      "right" : "FilteredDataEmitter",
      "info" : "SimpleType[15109-15128]:SimpleType[15136-15155]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15349-15355]:Modifier[15376-15382]"
    }, {
      "left" : "CachedBodyEmitter",
      "right" : "CachedBodyEmitter",
      "info" : "SimpleName[15356-15373]:SimpleName[15383-15400]"
    }, {
      "left" : "EntryCacheResponse cacheResponse",
      "right" : "EntryCacheResponse cacheResponse",
      "info" : "SingleVariableDeclaration[15374-15406]:SingleVariableDeclaration[15401-15433]"
    }, {
      "left" : "long contentLength",
      "right" : "long contentLength",
      "info" : "SingleVariableDeclaration[15408-15426]:SingleVariableDeclaration[15435-15453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15428-15546]:Block[15455-15573]"
    }, {
      "left" : "this.cacheResponse = cacheResponse;",
      "right" : "this.cacheResponse = cacheResponse;",
      "info" : "ExpressionStatement[15442-15477]:ExpressionStatement[15469-15504]"
    }, {
      "left" : "allocator.setCurrentAlloc((int)contentLength);",
      "right" : "allocator.setCurrentAlloc((int)contentLength);",
      "info" : "ExpressionStatement[15490-15536]:ExpressionStatement[15517-15563]"
    }, {
      "left" : "spewRunnable",
      "right" : "sendCachedDataRunnable",
      "info" : "SimpleName[15565-15577]:SimpleName[15592-15614]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15609-15618]:MarkerAnnotation[15646-15655]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15631-15637]:Modifier[15668-15674]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15638-15642]:PrimitiveType[15675-15679]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[15643-15646]:SimpleName[15680-15683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15649-15696]:Block[15686-15750]"
    }, {
      "left" : "spewInternal",
      "right" : "sendCachedDataOnNetworkThread",
      "info" : "SimpleName[15667-15679]:SimpleName[15704-15733]"
    }, {
      "left" : "spewInternal();",
      "right" : "sendCachedDataOnNetworkThread();",
      "info" : "ExpressionStatement[15667-15682]:ExpressionStatement[15704-15736]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15717-15721]:PrimitiveType[15771-15775]"
    }, {
      "left" : "spewInternal",
      "right" : "sendCachedDataOnNetworkThread",
      "info" : "SimpleName[15722-15734]:SimpleName[15776-15805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15737-17008]:Block[15808-17089]"
    }, {
      "left" : "if (pending.remaining() > 0)",
      "right" : "if (pending.remaining() > 0)",
      "info" : "IfStatement[15751-15940]:IfStatement[15822-16011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15780-15940]:Block[15851-16011]"
    }, {
      "left" : "super.onDataAvailable(CachedBodyEmitter.this, pending);",
      "right" : "super.onDataAvailable(CachedBodyEmitter.this, pending);",
      "info" : "ExpressionStatement[15798-15853]:ExpressionStatement[15869-15924]"
    }, {
      "left" : "if (pending.remaining() > 0)",
      "right" : "if (pending.remaining() > 0)",
      "info" : "IfStatement[15870-15926]:IfStatement[15941-15997]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[15919-15926]:ReturnStatement[15990-15997]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[15982-16712]:TryStatement[16053-16783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15986-16578]:Block[16057-16649]"
    }, {
      "left" : "ByteBuffer buffer = allocator.allocate();",
      "right" : "ByteBuffer buffer = allocator.allocate();",
      "info" : "VariableDeclarationStatement[16004-16045]:VariableDeclarationStatement[16075-16116]"
    }, {
      "left" : "assert buffer.position() == 0;",
      "right" : "assert buffer.position() == 0;",
      "info" : "AssertStatement[16062-16092]:AssertStatement[16133-16163]"
    }, {
      "left" : "FileInputStream din = cacheResponse.getBody();",
      "right" : "FileInputStream din = cacheResponse.getBody();",
      "info" : "VariableDeclarationStatement[16109-16155]:VariableDeclarationStatement[16180-16226]"
    }, {
      "left" : "int read = din.read(buffer.array(), buffer.arrayOffset(), buffer.capacity());",
      "right" : "int read = din.read(buffer.array(), buffer.arrayOffset(), buffer.capacity());",
      "info" : "VariableDeclarationStatement[16172-16249]:VariableDeclarationStatement[16243-16320]"
    }, {
      "left" : "if (read == -1)",
      "right" : "if (read == -1)",
      "info" : "IfStatement[16266-16452]:IfStatement[16337-16523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16282-16452]:Block[16353-16523]"
    }, {
      "left" : "ByteBufferList.reclaim(buffer);",
      "right" : "ByteBufferList.reclaim(buffer);",
      "info" : "ExpressionStatement[16304-16335]:ExpressionStatement[16375-16406]"
    }, {
      "left" : "allowEnd = true;",
      "right" : "allowEnd = true;",
      "info" : "ExpressionStatement[16356-16372]:ExpressionStatement[16427-16443]"
    }, {
      "left" : "report(null);",
      "right" : "report(null);",
      "info" : "ExpressionStatement[16393-16406]:ExpressionStatement[16464-16477]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[16427-16434]:ReturnStatement[16498-16505]"
    }, {
      "left" : "allocator.track(read);",
      "right" : "allocator.track(read);",
      "info" : "ExpressionStatement[16469-16491]:ExpressionStatement[16540-16562]"
    }, {
      "left" : "buffer.limit(read);",
      "right" : "buffer.limit(read);",
      "info" : "ExpressionStatement[16508-16527]:ExpressionStatement[16579-16598]"
    }, {
      "left" : "pending.add(buffer);",
      "right" : "pending.add(buffer);",
      "info" : "ExpressionStatement[16544-16564]:ExpressionStatement[16615-16635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16613-16712]:Block[16684-16783]"
    }, {
      "left" : "allowEnd = true;",
      "right" : "allowEnd = true;",
      "info" : "ExpressionStatement[16631-16647]:ExpressionStatement[16702-16718]"
    }, {
      "left" : "report(e);",
      "right" : "report(e);",
      "info" : "ExpressionStatement[16664-16674]:ExpressionStatement[16735-16745]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[16691-16698]:ReturnStatement[16762-16769]"
    }, {
      "left" : "super.onDataAvailable(this, pending);",
      "right" : "super.onDataAvailable(this, pending);",
      "info" : "ExpressionStatement[16725-16762]:ExpressionStatement[16796-16833]"
    }, {
      "left" : "if (pending.remaining() > 0)",
      "right" : "if (pending.remaining() > 0)",
      "info" : "IfStatement[16775-16827]:IfStatement[16846-16898]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[16820-16827]:ReturnStatement[16891-16898]"
    }, {
      "left" : "getServer().postDelayed(spewRunnable, 10);",
      "right" : "getServer().postDelayed(sendCachedDataRunnable, 10);",
      "info" : "ExpressionStatement[16956-16998]:ExpressionStatement[17027-17079]"
    }, {
      "left" : "spewRunnable",
      "right" : "sendCachedDataRunnable",
      "info" : "SimpleName[16980-16992]:SimpleName[17051-17073]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17018-17022]:PrimitiveType[17099-17103]"
    }, {
      "left" : "spew",
      "right" : "sendCachedData",
      "info" : "SimpleName[17023-17027]:SimpleName[17104-17118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17030-17085]:Block[17121-17186]"
    }, {
      "left" : "getServer().post(spewRunnable);",
      "right" : "getServer().post(sendCachedDataRunnable);",
      "info" : "ExpressionStatement[17044-17075]:ExpressionStatement[17135-17176]"
    }, {
      "left" : "spewRunnable",
      "right" : "sendCachedDataRunnable",
      "info" : "SimpleName[17061-17073]:SimpleName[17152-17174]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17095-17104]:MarkerAnnotation[17196-17205]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17113-17119]:Modifier[17214-17220]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17120-17124]:PrimitiveType[17221-17225]"
    }, {
      "left" : "resume",
      "right" : "resume",
      "info" : "SimpleName[17125-17131]:SimpleName[17226-17232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17134-17193]:Block[17235-17304]"
    }, {
      "left" : "paused = false;",
      "right" : "paused = false;",
      "info" : "ExpressionStatement[17148-17163]:ExpressionStatement[17249-17264]"
    }, {
      "left" : "spew",
      "right" : "sendCachedData",
      "info" : "SimpleName[17176-17180]:SimpleName[17277-17291]"
    }, {
      "left" : "spew();",
      "right" : "sendCachedData();",
      "info" : "ExpressionStatement[17176-17183]:ExpressionStatement[17277-17294]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17203-17212]:MarkerAnnotation[17314-17323]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17221-17227]:Modifier[17332-17338]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17228-17235]:PrimitiveType[17339-17346]"
    }, {
      "left" : "isPaused",
      "right" : "isPaused",
      "info" : "SimpleName[17236-17244]:SimpleName[17347-17355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17247-17285]:Block[17358-17396]"
    }, {
      "left" : "return paused;",
      "right" : "return paused;",
      "info" : "ReturnStatement[17261-17275]:ReturnStatement[17372-17386]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17295-17304]:MarkerAnnotation[17406-17415]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17313-17319]:Modifier[17424-17430]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17320-17324]:PrimitiveType[17431-17435]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[17325-17330]:SimpleName[17436-17441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17333-17436]:Block[17444-17547]"
    }, {
      "left" : "StreamUtility.closeQuietly(cacheResponse.getBody());",
      "right" : "StreamUtility.closeQuietly(cacheResponse.getBody());",
      "info" : "ExpressionStatement[17347-17399]:ExpressionStatement[17458-17510]"
    }, {
      "left" : "super.close();",
      "right" : "super.close();",
      "info" : "ExpressionStatement[17412-17426]:ExpressionStatement[17523-17537]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17446-17455]:MarkerAnnotation[17557-17566]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[17464-17473]:Modifier[17575-17584]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17474-17478]:PrimitiveType[17585-17589]"
    }, {
      "left" : "report",
      "right" : "report",
      "info" : "SimpleName[17479-17485]:SimpleName[17590-17596]"
    }, {
      "left" : "Exception e",
      "right" : "Exception e",
      "info" : "SingleVariableDeclaration[17486-17497]:SingleVariableDeclaration[17597-17608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17499-17830]:Block[17610-17941]"
    }, {
      "left" : "if (!allowEnd)",
      "right" : "if (!allowEnd)",
      "info" : "IfStatement[17688-17726]:IfStatement[17799-17837]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[17719-17726]:ReturnStatement[17830-17837]"
    }, {
      "left" : "StreamUtility.closeQuietly(cacheResponse.getBody());",
      "right" : "StreamUtility.closeQuietly(cacheResponse.getBody());",
      "info" : "ExpressionStatement[17739-17791]:ExpressionStatement[17850-17902]"
    }, {
      "left" : "super.report(e);",
      "right" : "super.report(e);",
      "info" : "ExpressionStatement[17804-17820]:ExpressionStatement[17915-17931]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17846-17853]:Modifier[17957-17964]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17854-17860]:Modifier[17965-17971]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17861-17866]:Modifier[17972-17977]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[17867-17872]:TYPE_DECLARATION_KIND[17978-17983]"
    }, {
      "left" : "Entry",
      "right" : "Entry",
      "info" : "SimpleName[17873-17878]:SimpleName[17984-17989]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20018-20024]:Modifier[20129-20135]"
    }, {
      "left" : "Entry",
      "right" : "Entry",
      "info" : "SimpleName[20025-20030]:SimpleName[20136-20141]"
    }, {
      "left" : "InputStream in",
      "right" : "InputStream in",
      "info" : "SingleVariableDeclaration[20031-20045]:SingleVariableDeclaration[20142-20156]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20054-20065]:SimpleType[20165-20176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20066-21611]:Block[20177-21722]"
    }, {
      "left" : "StrictLineReader reader = null;",
      "right" : "StrictLineReader reader = null;",
      "info" : "VariableDeclarationStatement[20080-20111]:VariableDeclarationStatement[20191-20222]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[20124-21601]:TryStatement[20235-21712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20128-21521]:Block[20239-21632]"
    }, {
      "left" : "reader = new StrictLineReader(in, Charsets.US_ASCII);",
      "right" : "reader = new StrictLineReader(in, Charsets.US_ASCII);",
      "info" : "ExpressionStatement[20146-20199]:ExpressionStatement[20257-20310]"
    }, {
      "left" : "uri = reader.readLine();",
      "right" : "uri = reader.readLine();",
      "info" : "ExpressionStatement[20216-20240]:ExpressionStatement[20327-20351]"
    }, {
      "left" : "requestMethod = reader.readLine();",
      "right" : "requestMethod = reader.readLine();",
      "info" : "ExpressionStatement[20257-20291]:ExpressionStatement[20368-20402]"
    }, {
      "left" : "varyHeaders = new RawHeaders();",
      "right" : "varyHeaders = new RawHeaders();",
      "info" : "ExpressionStatement[20308-20339]:ExpressionStatement[20419-20450]"
    }, {
      "left" : "int varyRequestHeaderLineCount = reader.readInt();",
      "right" : "int varyRequestHeaderLineCount = reader.readInt();",
      "info" : "VariableDeclarationStatement[20356-20406]:VariableDeclarationStatement[20467-20517]"
    }, {
      "left" : "for (int i = 0; i < varyRequestHeaderLineCount; i++)",
      "right" : "for (int i = 0; i < varyRequestHeaderLineCount; i++)",
      "info" : "ForStatement[20423-20555]:ForStatement[20534-20666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20476-20555]:Block[20587-20666]"
    }, {
      "left" : "varyHeaders.addLine(reader.readLine());",
      "right" : "varyHeaders.addLine(reader.readLine());",
      "info" : "ExpressionStatement[20498-20537]:ExpressionStatement[20609-20648]"
    }, {
      "left" : "responseHeaders = new RawHeaders();",
      "right" : "responseHeaders = new RawHeaders();",
      "info" : "ExpressionStatement[20573-20608]:ExpressionStatement[20684-20719]"
    }, {
      "left" : "responseHeaders.setStatusLine(reader.readLine());",
      "right" : "responseHeaders.setStatusLine(reader.readLine());",
      "info" : "ExpressionStatement[20625-20674]:ExpressionStatement[20736-20785]"
    }, {
      "left" : "int responseHeaderLineCount = reader.readInt();",
      "right" : "int responseHeaderLineCount = reader.readInt();",
      "info" : "VariableDeclarationStatement[20691-20738]:VariableDeclarationStatement[20802-20849]"
    }, {
      "left" : "for (int i = 0; i < responseHeaderLineCount; i++)",
      "right" : "for (int i = 0; i < responseHeaderLineCount; i++)",
      "info" : "ForStatement[20755-20888]:ForStatement[20866-20999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20805-20888]:Block[20916-20999]"
    }, {
      "left" : "responseHeaders.addLine(reader.readLine());",
      "right" : "responseHeaders.addLine(reader.readLine());",
      "info" : "ExpressionStatement[20827-20870]:ExpressionStatement[20938-20981]"
    }, {
      "left" : "cipherSuite = null;",
      "right" : "cipherSuite = null;",
      "info" : "ExpressionStatement[21377-21396]:ExpressionStatement[21488-21507]"
    }, {
      "left" : "peerCertificates = null;",
      "right" : "peerCertificates = null;",
      "info" : "ExpressionStatement[21417-21441]:ExpressionStatement[21528-21552]"
    }, {
      "left" : "localCertificates = null;",
      "right" : "localCertificates = null;",
      "info" : "ExpressionStatement[21462-21487]:ExpressionStatement[21573-21598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21530-21601]:Block[21641-21712]"
    }, {
      "left" : "StreamUtility.closeQuietly(reader, in);",
      "right" : "StreamUtility.closeQuietly(reader, in);",
      "info" : "ExpressionStatement[21548-21587]:ExpressionStatement[21659-21698]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21621-21627]:Modifier[21732-21738]"
    }, {
      "left" : "Entry",
      "right" : "Entry",
      "info" : "SimpleName[21628-21633]:SimpleName[21739-21744]"
    }, {
      "left" : "Uri uri",
      "right" : "Uri uri",
      "info" : "SingleVariableDeclaration[21634-21641]:SingleVariableDeclaration[21745-21752]"
    }, {
      "left" : "RawHeaders varyHeaders",
      "right" : "RawHeaders varyHeaders",
      "info" : "SingleVariableDeclaration[21643-21665]:SingleVariableDeclaration[21754-21776]"
    }, {
      "left" : "AsyncHttpRequest request",
      "right" : "AsyncHttpRequest request",
      "info" : "SingleVariableDeclaration[21667-21691]:SingleVariableDeclaration[21778-21802]"
    }, {
      "left" : "RawHeaders responseHeaders",
      "right" : "RawHeaders responseHeaders",
      "info" : "SingleVariableDeclaration[21693-21719]:SingleVariableDeclaration[21804-21830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21721-22674]:Block[21832-22785]"
    }, {
      "left" : "this.uri = uri.toString();",
      "right" : "this.uri = uri.toString();",
      "info" : "ExpressionStatement[21735-21761]:ExpressionStatement[21846-21872]"
    }, {
      "left" : "this.varyHeaders = varyHeaders;",
      "right" : "this.varyHeaders = varyHeaders;",
      "info" : "ExpressionStatement[21774-21805]:ExpressionStatement[21885-21916]"
    }, {
      "left" : "this.requestMethod = request.getMethod();",
      "right" : "this.requestMethod = request.getMethod();",
      "info" : "ExpressionStatement[21818-21859]:ExpressionStatement[21929-21970]"
    }, {
      "left" : "this.responseHeaders = responseHeaders;",
      "right" : "this.responseHeaders = responseHeaders;",
      "info" : "ExpressionStatement[21872-21911]:ExpressionStatement[21983-22022]"
    }, {
      "left" : "cipherSuite = null;",
      "right" : "cipherSuite = null;",
      "info" : "ExpressionStatement[22546-22565]:ExpressionStatement[22657-22676]"
    }, {
      "left" : "peerCertificates = null;",
      "right" : "peerCertificates = null;",
      "info" : "ExpressionStatement[22582-22606]:ExpressionStatement[22693-22717]"
    }, {
      "left" : "localCertificates = null;",
      "right" : "localCertificates = null;",
      "info" : "ExpressionStatement[22623-22648]:ExpressionStatement[22734-22759]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22684-22690]:Modifier[22795-22801]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22691-22695]:PrimitiveType[22802-22806]"
    }, {
      "left" : "writeTo",
      "right" : "writeTo",
      "info" : "SimpleName[22696-22703]:SimpleName[22807-22814]"
    }, {
      "left" : "EntryEditor editor",
      "right" : "EntryEditor editor",
      "info" : "SingleVariableDeclaration[22704-22722]:SingleVariableDeclaration[22815-22833]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22731-22742]:SimpleType[22842-22853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22743-23905]:Block[22854-24016]"
    }, {
      "left" : "OutputStream out = editor.newOutputStream(ENTRY_METADATA);",
      "right" : "OutputStream out = editor.newOutputStream(ENTRY_METADATA);",
      "info" : "VariableDeclarationStatement[22757-22815]:VariableDeclarationStatement[22868-22926]"
    }, {
      "left" : "Writer writer = new BufferedWriter(new OutputStreamWriter(out, Charsets.UTF_8));",
      "right" : "Writer writer = new BufferedWriter(new OutputStreamWriter(out, Charsets.UTF_8));",
      "info" : "VariableDeclarationStatement[22828-22908]:VariableDeclarationStatement[22939-23019]"
    }, {
      "left" : "writer.write(uri + '\\n');",
      "right" : "writer.write(uri + '\\n');",
      "info" : "ExpressionStatement[22922-22947]:ExpressionStatement[23033-23058]"
    }, {
      "left" : "writer.write(requestMethod + '\\n');",
      "right" : "writer.write(requestMethod + '\\n');",
      "info" : "ExpressionStatement[22960-22995]:ExpressionStatement[23071-23106]"
    }, {
      "left" : "writer.write(Integer.toString(varyHeaders.length()) + '\\n');",
      "right" : "writer.write(Integer.toString(varyHeaders.length()) + '\\n');",
      "info" : "ExpressionStatement[23008-23068]:ExpressionStatement[23119-23179]"
    }, {
      "left" : "for (int i = 0; i < varyHeaders.length(); i++)",
      "right" : "for (int i = 0; i < varyHeaders.length(); i++)",
      "info" : "ForStatement[23081-23266]:ForStatement[23192-23377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23128-23266]:Block[23239-23377]"
    }, {
      "left" : "writer.write(varyHeaders.getFieldName(i) + \": \"\n                        + varyHeaders.getValue(i) + '\\n');",
      "right" : "writer.write(varyHeaders.getFieldName(i) + \": \"\n                        + varyHeaders.getValue(i) + '\\n');",
      "info" : "ExpressionStatement[23146-23252]:ExpressionStatement[23257-23363]"
    }, {
      "left" : "writer.write(responseHeaders.getStatusLine() + '\\n');",
      "right" : "writer.write(responseHeaders.getStatusLine() + '\\n');",
      "info" : "ExpressionStatement[23280-23333]:ExpressionStatement[23391-23444]"
    }, {
      "left" : "writer.write(Integer.toString(responseHeaders.length()) + '\\n');",
      "right" : "writer.write(Integer.toString(responseHeaders.length()) + '\\n');",
      "info" : "ExpressionStatement[23346-23410]:ExpressionStatement[23457-23521]"
    }, {
      "left" : "for (int i = 0; i < responseHeaders.length(); i++)",
      "right" : "for (int i = 0; i < responseHeaders.length(); i++)",
      "info" : "ForStatement[23423-23620]:ForStatement[23534-23731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23474-23620]:Block[23585-23731]"
    }, {
      "left" : "writer.write(responseHeaders.getFieldName(i) + \": \"\n                        + responseHeaders.getValue(i) + '\\n');",
      "right" : "writer.write(responseHeaders.getFieldName(i) + \": \"\n                        + responseHeaders.getValue(i) + '\\n');",
      "info" : "ExpressionStatement[23492-23606]:ExpressionStatement[23603-23717]"
    }, {
      "left" : "if (isHttps())",
      "right" : "if (isHttps())",
      "info" : "IfStatement[23634-23867]:IfStatement[23745-23978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23649-23867]:Block[23760-23978]"
    }, {
      "left" : "writer.write('\\n');",
      "right" : "writer.write('\\n');",
      "info" : "ExpressionStatement[23667-23686]:ExpressionStatement[23778-23797]"
    }, {
      "left" : "writer.write(cipherSuite + '\\n');",
      "right" : "writer.write(cipherSuite + '\\n');",
      "info" : "ExpressionStatement[23703-23736]:ExpressionStatement[23814-23847]"
    }, {
      "left" : "writeCertArray(writer, peerCertificates);",
      "right" : "writeCertArray(writer, peerCertificates);",
      "info" : "ExpressionStatement[23753-23794]:ExpressionStatement[23864-23905]"
    }, {
      "left" : "writeCertArray(writer, localCertificates);",
      "right" : "writeCertArray(writer, localCertificates);",
      "info" : "ExpressionStatement[23811-23853]:ExpressionStatement[23922-23964]"
    }, {
      "left" : "writer.close();",
      "right" : "writer.close();",
      "info" : "ExpressionStatement[23880-23895]:ExpressionStatement[23991-24006]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23915-23922]:Modifier[24026-24033]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[23923-23930]:PrimitiveType[24034-24041]"
    }, {
      "left" : "isHttps",
      "right" : "isHttps",
      "info" : "SimpleName[23931-23938]:SimpleName[24042-24049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23941-23999]:Block[24052-24110]"
    }, {
      "left" : "return uri.startsWith(\"https://\");",
      "right" : "return uri.startsWith(\"https://\");",
      "info" : "ReturnStatement[23955-23989]:ReturnStatement[24066-24100]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24009-24016]:Modifier[24120-24127]"
    }, {
      "left" : "Certificate[]",
      "right" : "Certificate[]",
      "info" : "ArrayType[24017-24030]:ArrayType[24128-24141]"
    }, {
      "left" : "readCertArray",
      "right" : "readCertArray",
      "info" : "SimpleName[24031-24044]:SimpleName[24142-24155]"
    }, {
      "left" : "StrictLineReader reader",
      "right" : "StrictLineReader reader",
      "info" : "SingleVariableDeclaration[24045-24068]:SingleVariableDeclaration[24156-24179]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24077-24088]:SimpleType[24188-24199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24089-24879]:Block[24200-24990]"
    }, {
      "left" : "int length = reader.readInt();",
      "right" : "int length = reader.readInt();",
      "info" : "VariableDeclarationStatement[24103-24133]:VariableDeclarationStatement[24214-24244]"
    }, {
      "left" : "if (length == -1)",
      "right" : "if (length == -1)",
      "info" : "IfStatement[24146-24208]:IfStatement[24257-24319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24164-24208]:Block[24275-24319]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24182-24194]:ReturnStatement[24293-24305]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[24221-24869]:TryStatement[24332-24980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24225-24767]:Block[24336-24878]"
    }, {
      "left" : "CertificateFactory certificateFactory = CertificateFactory.getInstance(\"X.509\");",
      "right" : "CertificateFactory certificateFactory = CertificateFactory.getInstance(\"X.509\");",
      "info" : "VariableDeclarationStatement[24243-24323]:VariableDeclarationStatement[24354-24434]"
    }, {
      "left" : "Certificate[] result = new Certificate[length];",
      "right" : "Certificate[] result = new Certificate[length];",
      "info" : "VariableDeclarationStatement[24340-24387]:VariableDeclarationStatement[24451-24498]"
    }, {
      "left" : "for (int i = 0; i < result.length; i++)",
      "right" : "for (int i = 0; i < result.length; i++)",
      "info" : "ForStatement[24404-24722]:ForStatement[24515-24833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24444-24722]:Block[24555-24833]"
    }, {
      "left" : "String line = reader.readLine();",
      "right" : "String line = reader.readLine();",
      "info" : "VariableDeclarationStatement[24466-24498]:VariableDeclarationStatement[24577-24609]"
    }, {
      "left" : "byte[] bytes = Base64.decode(line, Base64.DEFAULT);",
      "right" : "byte[] bytes = Base64.decode(line, Base64.DEFAULT);",
      "info" : "VariableDeclarationStatement[24519-24570]:VariableDeclarationStatement[24630-24681]"
    }, {
      "left" : "result[i] = certificateFactory.generateCertificate(\n                            new ByteArrayInputStream(bytes));",
      "right" : "result[i] = certificateFactory.generateCertificate(\n                            new ByteArrayInputStream(bytes));",
      "info" : "ExpressionStatement[24591-24704]:ExpressionStatement[24702-24815]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[24739-24753]:ReturnStatement[24850-24864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24799-24869]:Block[24910-24980]"
    }, {
      "left" : "throw new IOException(e.getMessage());",
      "right" : "throw new IOException(e.getMessage());",
      "info" : "ThrowStatement[24817-24855]:ThrowStatement[24928-24966]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24889-24896]:Modifier[25000-25007]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24897-24901]:PrimitiveType[25008-25012]"
    }, {
      "left" : "writeCertArray",
      "right" : "writeCertArray",
      "info" : "SimpleName[24902-24916]:SimpleName[25013-25027]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[24917-24930]:SingleVariableDeclaration[25028-25041]"
    }, {
      "left" : "Certificate[] certificates",
      "right" : "Certificate[] certificates",
      "info" : "SingleVariableDeclaration[24932-24958]:SingleVariableDeclaration[25043-25069]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24967-24978]:SimpleType[25078-25089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24979-25593]:Block[25090-25704]"
    }, {
      "left" : "if (certificates == null)",
      "right" : "if (certificates == null)",
      "info" : "IfStatement[24993-25096]:IfStatement[25104-25207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25019-25096]:Block[25130-25207]"
    }, {
      "left" : "writer.write(\"-1\\n\");",
      "right" : "writer.write(\"-1\\n\");",
      "info" : "ExpressionStatement[25037-25058]:ExpressionStatement[25148-25169]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25075-25082]:ReturnStatement[25186-25193]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[25109-25583]:TryStatement[25220-25694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25113-25473]:Block[25224-25584]"
    }, {
      "left" : "writer.write(Integer.toString(certificates.length) + '\\n');",
      "right" : "writer.write(Integer.toString(certificates.length) + '\\n');",
      "info" : "ExpressionStatement[25131-25190]:ExpressionStatement[25242-25301]"
    }, {
      "left" : "for (Certificate certificate : certificates)",
      "right" : "for (Certificate certificate : certificates)",
      "info" : "EnhancedForStatement[25207-25459]:EnhancedForStatement[25318-25570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25252-25459]:Block[25363-25570]"
    }, {
      "left" : "byte[] bytes = certificate.getEncoded();",
      "right" : "byte[] bytes = certificate.getEncoded();",
      "info" : "VariableDeclarationStatement[25274-25314]:VariableDeclarationStatement[25385-25425]"
    }, {
      "left" : "String line = Base64.encodeToString(bytes, Base64.DEFAULT);",
      "right" : "String line = Base64.encodeToString(bytes, Base64.DEFAULT);",
      "info" : "VariableDeclarationStatement[25335-25394]:VariableDeclarationStatement[25446-25505]"
    }, {
      "left" : "writer.write(line + '\\n');",
      "right" : "writer.write(line + '\\n');",
      "info" : "ExpressionStatement[25415-25441]:ExpressionStatement[25526-25552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25513-25583]:Block[25624-25694]"
    }, {
      "left" : "throw new IOException(e.getMessage());",
      "right" : "throw new IOException(e.getMessage());",
      "info" : "ThrowStatement[25531-25569]:ThrowStatement[25642-25680]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25603-25609]:Modifier[25714-25720]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[25610-25617]:PrimitiveType[25721-25728]"
    }, {
      "left" : "matches",
      "right" : "matches",
      "info" : "SimpleName[25618-25625]:SimpleName[25729-25736]"
    }, {
      "left" : "Uri uri",
      "right" : "Uri uri",
      "info" : "SingleVariableDeclaration[25626-25633]:SingleVariableDeclaration[25737-25744]"
    }, {
      "left" : "String requestMethod",
      "right" : "String requestMethod",
      "info" : "SingleVariableDeclaration[25635-25655]:SingleVariableDeclaration[25746-25766]"
    }, {
      "left" : "Map<String, List<String>> requestHeaders",
      "right" : "Map<String, List<String>> requestHeaders",
      "info" : "SingleVariableDeclaration[25673-25713]:SingleVariableDeclaration[25784-25824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25715-25990]:Block[25826-26101]"
    }, {
      "left" : "return this.uri.equals(uri.toString())\n                    && this.requestMethod.equals(requestMethod)\n                    && new ResponseHeaders(uri, responseHeaders)\n                            .varyMatches(varyHeaders.toMultimap(), requestHeaders);",
      "right" : "return this.uri.equals(uri.toString())\n                    && this.requestMethod.equals(requestMethod)\n                    && new ResponseHeaders(uri, responseHeaders)\n                            .varyMatches(varyHeaders.toMultimap(), requestHeaders);",
      "info" : "ReturnStatement[25729-25980]:ReturnStatement[25840-26091]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26002-26008]:Modifier[26113-26119]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[26009-26014]:TYPE_DECLARATION_KIND[26120-26125]"
    }, {
      "left" : "EntryCacheResponse",
      "right" : "EntryCacheResponse",
      "info" : "SimpleName[26015-26033]:SimpleName[26126-26144]"
    }, {
      "left" : "CacheResponse",
      "right" : "CacheResponse",
      "info" : "SimpleType[26042-26055]:SimpleType[26153-26166]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26150-26156]:Modifier[26261-26267]"
    }, {
      "left" : "EntryCacheResponse",
      "right" : "EntryCacheResponse",
      "info" : "SimpleName[26157-26175]:SimpleName[26268-26286]"
    }, {
      "left" : "Entry entry",
      "right" : "Entry entry",
      "info" : "SingleVariableDeclaration[26176-26187]:SingleVariableDeclaration[26287-26298]"
    }, {
      "left" : "FileInputStream snapshot",
      "right" : "FileInputStream snapshot",
      "info" : "SingleVariableDeclaration[26189-26213]:SingleVariableDeclaration[26300-26324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26215-26296]:Block[26326-26407]"
    }, {
      "left" : "this.entry = entry;",
      "right" : "this.entry = entry;",
      "info" : "ExpressionStatement[26229-26248]:ExpressionStatement[26340-26359]"
    }, {
      "left" : "this.snapshot = snapshot;",
      "right" : "this.snapshot = snapshot;",
      "info" : "ExpressionStatement[26261-26286]:ExpressionStatement[26372-26397]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26306-26315]:MarkerAnnotation[26417-26426]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26316-26322]:Modifier[26427-26433]"
    }, {
      "left" : "Map<String, List<String>>",
      "right" : "Map<String, List<String>>",
      "info" : "ParameterizedType[26323-26348]:ParameterizedType[26434-26459]"
    }, {
      "left" : "getHeaders",
      "right" : "getHeaders",
      "info" : "SimpleName[26349-26359]:SimpleName[26460-26470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26362-26428]:Block[26473-26539]"
    }, {
      "left" : "return entry.responseHeaders.toMultimap();",
      "right" : "return entry.responseHeaders.toMultimap();",
      "info" : "ReturnStatement[26376-26418]:ReturnStatement[26487-26529]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26438-26447]:MarkerAnnotation[26549-26558]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26448-26454]:Modifier[26559-26565]"
    }, {
      "left" : "FileInputStream",
      "right" : "FileInputStream",
      "info" : "SimpleType[26455-26470]:SimpleType[26566-26581]"
    }, {
      "left" : "getBody",
      "right" : "getBody",
      "info" : "SimpleName[26471-26478]:SimpleName[26582-26589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26481-26521]:Block[26592-26632]"
    }, {
      "left" : "return snapshot;",
      "right" : "return snapshot;",
      "info" : "ReturnStatement[26495-26511]:ReturnStatement[26606-26622]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26533-26540]:Modifier[26644-26651]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[26541-26546]:TYPE_DECLARATION_KIND[26652-26657]"
    }, {
      "left" : "CachedSSLSocket",
      "right" : "CachedSSLSocket",
      "info" : "SimpleName[26547-26562]:SimpleName[26658-26673]"
    }, {
      "left" : "CachedSocket",
      "right" : "CachedSocket",
      "info" : "SimpleType[26571-26583]:SimpleType[26682-26694]"
    }, {
      "left" : "AsyncSSLSocket",
      "right" : "AsyncSSLSocket",
      "info" : "SimpleType[26595-26609]:SimpleType[26706-26720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26620-26626]:Modifier[26731-26737]"
    }, {
      "left" : "CachedSSLSocket",
      "right" : "CachedSSLSocket",
      "info" : "SimpleName[26627-26642]:SimpleName[26738-26753]"
    }, {
      "left" : "EntryCacheResponse cacheResponse",
      "right" : "EntryCacheResponse cacheResponse",
      "info" : "SingleVariableDeclaration[26643-26675]:SingleVariableDeclaration[26754-26786]"
    }, {
      "left" : "long contentLength",
      "right" : "long contentLength",
      "info" : "SingleVariableDeclaration[26677-26695]:SingleVariableDeclaration[26788-26806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26697-26757]:Block[26808-26868]"
    }, {
      "left" : "super(cacheResponse, contentLength);",
      "right" : "super(cacheResponse, contentLength);",
      "info" : "SuperConstructorInvocation[26711-26747]:SuperConstructorInvocation[26822-26858]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26767-26776]:MarkerAnnotation[26878-26887]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26785-26791]:Modifier[26896-26902]"
    }, {
      "left" : "SSLEngine",
      "right" : "SSLEngine",
      "info" : "SimpleType[26792-26801]:SimpleType[26903-26912]"
    }, {
      "left" : "getSSLEngine",
      "right" : "getSSLEngine",
      "info" : "SimpleName[26802-26814]:SimpleName[26913-26925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26817-26853]:Block[26928-26964]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[26831-26843]:ReturnStatement[26942-26954]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26863-26872]:MarkerAnnotation[26974-26983]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26881-26887]:Modifier[26992-26998]"
    }, {
      "left" : "X509Certificate[]",
      "right" : "X509Certificate[]",
      "info" : "ArrayType[26888-26905]:ArrayType[26999-27016]"
    }, {
      "left" : "getPeerCertificates",
      "right" : "getPeerCertificates",
      "info" : "SimpleName[26906-26925]:SimpleName[27017-27036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26928-26964]:Block[27039-27075]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[26942-26954]:ReturnStatement[27053-27065]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26976-26983]:Modifier[27087-27094]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[26984-26989]:TYPE_DECLARATION_KIND[27095-27100]"
    }, {
      "left" : "CachedSocket",
      "right" : "CachedSocket",
      "info" : "SimpleName[26990-27002]:SimpleName[27101-27113]"
    }, {
      "left" : "CachedBodyEmitter",
      "right" : "CachedBodyEmitter",
      "info" : "SimpleType[27011-27028]:SimpleType[27122-27139]"
    }, {
      "left" : "AsyncSocket",
      "right" : "AsyncSocket",
      "info" : "SimpleType[27040-27051]:SimpleType[27151-27162]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27150-27156]:Modifier[27261-27267]"
    }, {
      "left" : "CachedSocket",
      "right" : "CachedSocket",
      "info" : "SimpleName[27157-27169]:SimpleName[27268-27280]"
    }, {
      "left" : "EntryCacheResponse cacheResponse",
      "right" : "EntryCacheResponse cacheResponse",
      "info" : "SingleVariableDeclaration[27170-27202]:SingleVariableDeclaration[27281-27313]"
    }, {
      "left" : "long contentLength",
      "right" : "long contentLength",
      "info" : "SingleVariableDeclaration[27204-27222]:SingleVariableDeclaration[27315-27333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27224-27313]:Block[27335-27424]"
    }, {
      "left" : "super(cacheResponse, contentLength);",
      "right" : "super(cacheResponse, contentLength);",
      "info" : "SuperConstructorInvocation[27238-27274]:SuperConstructorInvocation[27349-27385]"
    }, {
      "left" : "allowEnd = true;",
      "right" : "allowEnd = true;",
      "info" : "ExpressionStatement[27287-27303]:ExpressionStatement[27398-27414]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27323-27332]:MarkerAnnotation[27434-27443]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27341-27347]:Modifier[27452-27458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27348-27352]:PrimitiveType[27459-27463]"
    }, {
      "left" : "end",
      "right" : "end",
      "info" : "SimpleName[27353-27356]:SimpleName[27464-27467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27359-27370]:Block[27470-27481]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27380-27389]:MarkerAnnotation[27491-27500]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[27398-27407]:Modifier[27509-27518]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27408-27412]:PrimitiveType[27519-27523]"
    }, {
      "left" : "report",
      "right" : "report",
      "info" : "SimpleName[27413-27419]:SimpleName[27524-27530]"
    }, {
      "left" : "Exception e",
      "right" : "Exception e",
      "info" : "SingleVariableDeclaration[27420-27431]:SingleVariableDeclaration[27531-27542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27433-27635]:Block[27544-27746]"
    }, {
      "left" : "super.report(e);",
      "right" : "super.report(e);",
      "info" : "ExpressionStatement[27447-27463]:ExpressionStatement[27558-27574]"
    }, {
      "left" : "if (closed)",
      "right" : "if (closed)",
      "info" : "IfStatement[27476-27511]:IfStatement[27587-27622]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[27504-27511]:ReturnStatement[27615-27622]"
    }, {
      "left" : "closed = true;",
      "right" : "closed = true;",
      "info" : "ExpressionStatement[27524-27538]:ExpressionStatement[27635-27649]"
    }, {
      "left" : "if (closedCallback != null)",
      "right" : "if (closedCallback != null)",
      "info" : "IfStatement[27551-27625]:IfStatement[27662-27736]"
    }, {
      "left" : "closedCallback.onCompleted(e);",
      "right" : "closedCallback.onCompleted(e);",
      "info" : "ExpressionStatement[27595-27625]:ExpressionStatement[27706-27736]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27645-27654]:MarkerAnnotation[27756-27765]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27663-27669]:Modifier[27774-27780]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27670-27674]:PrimitiveType[27781-27785]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[27675-27680]:SimpleName[27786-27791]"
    }, {
      "left" : "ByteBufferList bb",
      "right" : "ByteBufferList bb",
      "info" : "SingleVariableDeclaration[27681-27698]:SingleVariableDeclaration[27792-27809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27700-27799]:Block[27811-27910]"
    }, {
      "left" : "bb.recycle();",
      "right" : "bb.recycle();",
      "info" : "ExpressionStatement[27776-27789]:ExpressionStatement[27887-27900]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27809-27818]:MarkerAnnotation[27920-27929]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27827-27833]:Modifier[27938-27944]"
    }, {
      "left" : "WritableCallback",
      "right" : "WritableCallback",
      "info" : "SimpleType[27834-27850]:SimpleType[27945-27961]"
    }, {
      "left" : "getWriteableCallback",
      "right" : "getWriteableCallback",
      "info" : "SimpleName[27851-27871]:SimpleName[27962-27982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27874-27910]:Block[27985-28021]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[27888-27900]:ReturnStatement[27999-28011]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27920-27929]:MarkerAnnotation[28031-28040]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27938-27944]:Modifier[28049-28055]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27945-27949]:PrimitiveType[28056-28060]"
    }, {
      "left" : "setWriteableCallback",
      "right" : "setWriteableCallback",
      "info" : "SimpleName[27950-27970]:SimpleName[28061-28081]"
    }, {
      "left" : "WritableCallback handler",
      "right" : "WritableCallback handler",
      "info" : "SingleVariableDeclaration[27971-27995]:SingleVariableDeclaration[28082-28106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27997-28008]:Block[28108-28119]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28018-28027]:MarkerAnnotation[28129-28138]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28036-28042]:Modifier[28147-28153]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[28043-28050]:PrimitiveType[28154-28161]"
    }, {
      "left" : "isOpen",
      "right" : "isOpen",
      "info" : "SimpleName[28051-28057]:SimpleName[28162-28168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28060-28096]:Block[28171-28207]"
    }, {
      "left" : "return open;",
      "right" : "return open;",
      "info" : "ReturnStatement[28074-28086]:ReturnStatement[28185-28197]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28106-28115]:MarkerAnnotation[28217-28226]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28124-28130]:Modifier[28235-28241]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28131-28135]:PrimitiveType[28242-28246]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[28136-28141]:SimpleName[28247-28252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28144-28181]:Block[28255-28292]"
    }, {
      "left" : "open = false;",
      "right" : "open = false;",
      "info" : "ExpressionStatement[28158-28171]:ExpressionStatement[28269-28282]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28191-28200]:MarkerAnnotation[28302-28311]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28209-28215]:Modifier[28320-28326]"
    }, {
      "left" : "CompletedCallback",
      "right" : "CompletedCallback",
      "info" : "SimpleType[28216-28233]:SimpleType[28327-28344]"
    }, {
      "left" : "getClosedCallback",
      "right" : "getClosedCallback",
      "info" : "SimpleName[28234-28251]:SimpleName[28345-28362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28254-28300]:Block[28365-28411]"
    }, {
      "left" : "return closedCallback;",
      "right" : "return closedCallback;",
      "info" : "ReturnStatement[28268-28290]:ReturnStatement[28379-28401]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28310-28319]:MarkerAnnotation[28421-28430]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28328-28334]:Modifier[28439-28445]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28335-28339]:PrimitiveType[28446-28450]"
    }, {
      "left" : "setClosedCallback",
      "right" : "setClosedCallback",
      "info" : "SimpleName[28340-28357]:SimpleName[28451-28468]"
    }, {
      "left" : "CompletedCallback handler",
      "right" : "CompletedCallback handler",
      "info" : "SingleVariableDeclaration[28358-28383]:SingleVariableDeclaration[28469-28494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28385-28434]:Block[28496-28545]"
    }, {
      "left" : "closedCallback = handler;",
      "right" : "closedCallback = handler;",
      "info" : "ExpressionStatement[28399-28424]:ExpressionStatement[28510-28535]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28444-28453]:MarkerAnnotation[28555-28564]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28462-28468]:Modifier[28573-28579]"
    }, {
      "left" : "AsyncServer",
      "right" : "AsyncServer",
      "info" : "SimpleType[28469-28480]:SimpleType[28580-28591]"
    }, {
      "left" : "getServer",
      "right" : "getServer",
      "info" : "SimpleName[28481-28490]:SimpleName[28592-28601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28493-28531]:Block[28604-28642]"
    }, {
      "left" : "return server;",
      "right" : "return server;",
      "info" : "ReturnStatement[28507-28521]:ReturnStatement[28618-28632]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[28543-28548]:TYPE_DECLARATION_KIND[28654-28659]"
    }, {
      "left" : "EntryEditor",
      "right" : "EntryEditor",
      "info" : "SimpleName[28549-28560]:SimpleName[28660-28671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28668-28674]:Modifier[28779-28785]"
    }, {
      "left" : "EntryEditor",
      "right" : "EntryEditor",
      "info" : "SimpleName[28675-28686]:SimpleName[28786-28797]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[28687-28697]:SingleVariableDeclaration[28798-28808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28699-28845]:Block[28810-28956]"
    }, {
      "left" : "this.key = key;",
      "right" : "this.key = key;",
      "info" : "ExpressionStatement[28713-28728]:ExpressionStatement[28824-28839]"
    }, {
      "left" : "temps = cache.getTempFiles(ENTRY_COUNT);",
      "right" : "temps = cache.getTempFiles(ENTRY_COUNT);",
      "info" : "ExpressionStatement[28741-28781]:ExpressionStatement[28852-28892]"
    }, {
      "left" : "outs = new FileOutputStream[ENTRY_COUNT];",
      "right" : "outs = new FileOutputStream[ENTRY_COUNT];",
      "info" : "ExpressionStatement[28794-28835]:ExpressionStatement[28905-28946]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28855-28859]:PrimitiveType[28966-28970]"
    }, {
      "left" : "commit",
      "right" : "commit",
      "info" : "SimpleName[28860-28866]:SimpleName[28971-28977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28869-29077]:Block[28980-29188]"
    }, {
      "left" : "StreamUtility.closeQuietly(outs);",
      "right" : "StreamUtility.closeQuietly(outs);",
      "info" : "ExpressionStatement[28883-28916]:ExpressionStatement[28994-29027]"
    }, {
      "left" : "if (done)",
      "right" : "if (done)",
      "info" : "IfStatement[28929-28962]:IfStatement[29040-29073]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[28955-28962]:ReturnStatement[29066-29073]"
    }, {
      "left" : "cache.commitTempFiles(key, temps);",
      "right" : "cache.commitTempFiles(key, temps);",
      "info" : "ExpressionStatement[28975-29009]:ExpressionStatement[29086-29120]"
    }, {
      "left" : "writeSuccessCount++;",
      "right" : "writeSuccessCount++;",
      "info" : "ExpressionStatement[29022-29042]:ExpressionStatement[29133-29153]"
    }, {
      "left" : "done = true;",
      "right" : "done = true;",
      "info" : "ExpressionStatement[29055-29067]:ExpressionStatement[29166-29178]"
    }, {
      "left" : "FileOutputStream",
      "right" : "FileOutputStream",
      "info" : "SimpleType[29087-29103]:SimpleType[29198-29214]"
    }, {
      "left" : "newOutputStream",
      "right" : "newOutputStream",
      "info" : "SimpleName[29104-29119]:SimpleName[29215-29230]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[29120-29129]:SingleVariableDeclaration[29231-29240]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[29138-29149]:SimpleType[29249-29260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29150-29296]:Block[29261-29407]"
    }, {
      "left" : "if (outs[index] == null)",
      "right" : "if (outs[index] == null)",
      "info" : "IfStatement[29164-29254]:IfStatement[29275-29365]"
    }, {
      "left" : "outs[index] = new FileOutputStream(temps[index]);",
      "right" : "outs[index] = new FileOutputStream(temps[index]);",
      "info" : "ExpressionStatement[29205-29254]:ExpressionStatement[29316-29365]"
    }, {
      "left" : "return outs[index];",
      "right" : "return outs[index];",
      "info" : "ReturnStatement[29267-29286]:ReturnStatement[29378-29397]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29306-29310]:PrimitiveType[29417-29421]"
    }, {
      "left" : "abort",
      "right" : "abort",
      "info" : "SimpleName[29311-29316]:SimpleName[29422-29427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29319-29520]:Block[29430-29631]"
    }, {
      "left" : "StreamUtility.closeQuietly(outs);",
      "right" : "StreamUtility.closeQuietly(outs);",
      "info" : "ExpressionStatement[29333-29366]:ExpressionStatement[29444-29477]"
    }, {
      "left" : "FileCache.removeFiles(temps);",
      "right" : "FileCache.removeFiles(temps);",
      "info" : "ExpressionStatement[29379-29408]:ExpressionStatement[29490-29519]"
    }, {
      "left" : "if (done)",
      "right" : "if (done)",
      "info" : "IfStatement[29421-29454]:IfStatement[29532-29565]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[29447-29454]:ReturnStatement[29558-29565]"
    }, {
      "left" : "writeAbortCount++;",
      "right" : "writeAbortCount++;",
      "info" : "ExpressionStatement[29467-29485]:ExpressionStatement[29578-29596]"
    }, {
      "left" : "done = true;",
      "right" : "done = true;",
      "info" : "ExpressionStatement[29498-29510]:ExpressionStatement[29609-29621]"
    } ]
  },
  "interFileMappings" : { }
}