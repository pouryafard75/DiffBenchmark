{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "FixedMembershipToken",
      "right" : "FixedMembershipToken",
      "info" : "TypeDeclaration[358-4052]:TypeDeclaration[496-4301]"
    }, {
      "left" : "private List<String> memberList = null;",
      "right" : "private final List<InetSocketAddress> memberList = new ArrayList<>();",
      "info" : "FieldDeclaration[944-983]:FieldDeclaration[1079-1148]"
    }, {
      "left" : "private String token = \"emptyToken\";",
      "right" : "private String                        token = \"emptyToken\";",
      "info" : "FieldDeclaration[988-1024]:FieldDeclaration[1153-1212]"
    }, {
      "left" : "@Property\n    private String fixed_members_seperator = \",\";",
      "right" : "@Property\n    private String fixed_members_seperator = \",\";",
      "info" : "FieldDeclaration[1030-1089]:FieldDeclaration[1218-1277]"
    }, {
      "left" : "public FixedMembershipToken()",
      "right" : "public FixedMembershipToken()",
      "info" : "MethodDeclaration[1095-1132]:MethodDeclaration[1283-1320]"
    }, {
      "left" : "public FixedMembershipToken(String token)",
      "right" : "public FixedMembershipToken(String token)",
      "info" : "MethodDeclaration[1138-1213]:MethodDeclaration[1326-1401]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[1219-1306]:MethodDeclaration[1407-1494]"
    }, {
      "left" : "public void setFixedMembersSeparator(String value)",
      "right" : "public void setFixedMembersSeparator(String value)",
      "info" : "MethodDeclaration[1312-1425]:MethodDeclaration[1500-1613]"
    }, {
      "left" : "public boolean authenticate(AuthToken token, Message msg)",
      "right" : "public boolean authenticate(AuthToken token, Message msg)",
      "info" : "MethodDeclaration[1431-2805]:MethodDeclaration[1619-2248]"
    }, {
      "left" : "private static boolean hasPort(String member)",
      "right" : "private static boolean hasPort(String member)",
      "info" : "MethodDeclaration[2811-2901]:MethodDeclaration[2807-2897]"
    }, {
      "left" : "public void setMemberList(String list)",
      "right" : "public void setMemberList(String list) throws UnknownHostException",
      "info" : "MethodDeclaration[2907-3278]:MethodDeclaration[2903-3595]"
    }, {
      "left" : "public void writeTo(DataOutput out) throws Exception",
      "right" : "public void writeTo(DataOutput out) throws Exception",
      "info" : "MethodDeclaration[3284-3635]:MethodDeclaration[3601-3918]"
    }, {
      "left" : "public void readFrom(DataInput in) throws Exception",
      "right" : "public void readFrom(DataInput in) throws Exception",
      "info" : "MethodDeclaration[3641-3986]:MethodDeclaration[3924-4235]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[3992-4050]:MethodDeclaration[4241-4299]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[886-892]:Modifier[1021-1027]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[893-898]:TYPE_DECLARATION_KIND[1028-1033]"
    }, {
      "left" : "FixedMembershipToken",
      "right" : "FixedMembershipToken",
      "info" : "SimpleName[899-919]:SimpleName[1034-1054]"
    }, {
      "left" : "AuthToken",
      "right" : "AuthToken",
      "info" : "SimpleType[928-937]:SimpleType[1063-1072]"
    }, {
      "left" : "String",
      "right" : "InetSocketAddress",
      "info" : "SimpleName[957-963]:SimpleName[1098-1115]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1095-1101]:Modifier[1283-1289]"
    }, {
      "left" : "FixedMembershipToken",
      "right" : "FixedMembershipToken",
      "info" : "SimpleName[1102-1122]:SimpleName[1290-1310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1125-1132]:Block[1313-1320]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1138-1144]:Modifier[1326-1332]"
    }, {
      "left" : "FixedMembershipToken",
      "right" : "FixedMembershipToken",
      "info" : "SimpleName[1145-1165]:SimpleName[1333-1353]"
    }, {
      "left" : "String token",
      "right" : "String token",
      "info" : "SingleVariableDeclaration[1166-1178]:SingleVariableDeclaration[1354-1366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1180-1213]:Block[1368-1401]"
    }, {
      "left" : "this.token=token;",
      "right" : "this.token=token;",
      "info" : "ExpressionStatement[1190-1207]:ExpressionStatement[1378-1395]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1219-1225]:Modifier[1407-1413]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1226-1232]:SimpleType[1414-1420]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[1233-1240]:SimpleName[1421-1428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1243-1306]:Block[1431-1494]"
    }, {
      "left" : "return \"org.jgroups.auth.FixedMembershipToken\";",
      "right" : "return \"org.jgroups.auth.FixedMembershipToken\";",
      "info" : "ReturnStatement[1253-1300]:ReturnStatement[1441-1488]"
    }, {
      "left" : "@Property",
      "right" : "@Property",
      "info" : "MarkerAnnotation[1312-1321]:MarkerAnnotation[1500-1509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1326-1332]:Modifier[1514-1520]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1333-1337]:PrimitiveType[1521-1525]"
    }, {
      "left" : "setFixedMembersSeparator",
      "right" : "setFixedMembersSeparator",
      "info" : "SimpleName[1338-1362]:SimpleName[1526-1550]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[1363-1375]:SingleVariableDeclaration[1551-1563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1377-1425]:Block[1565-1613]"
    }, {
      "left" : "fixed_members_seperator = value;",
      "right" : "fixed_members_seperator = value;",
      "info" : "ExpressionStatement[1387-1419]:ExpressionStatement[1575-1607]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1431-1437]:Modifier[1619-1625]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1438-1445]:PrimitiveType[1626-1633]"
    }, {
      "left" : "authenticate",
      "right" : "authenticate",
      "info" : "SimpleName[1446-1458]:SimpleName[1634-1646]"
    }, {
      "left" : "AuthToken token",
      "right" : "AuthToken token",
      "info" : "SingleVariableDeclaration[1459-1474]:SingleVariableDeclaration[1647-1662]"
    }, {
      "left" : "Message msg",
      "right" : "Message msg",
      "info" : "SingleVariableDeclaration[1476-1487]:SingleVariableDeclaration[1664-1675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1489-2805]:Block[1677-2248]"
    }, {
      "left" : "if ((token != null) && (token instanceof FixedMembershipToken) && (this.memberList != null))",
      "right" : "if ((token != null) && (token instanceof FixedMembershipToken) && (this.memberList != null))",
      "info" : "IfStatement[1499-2658]:IfStatement[1687-2113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1592-2658]:Block[1780-2113]"
    }, {
      "left" : "PhysicalAddress src = (PhysicalAddress) auth.down(new Event(Event.GET_PHYSICAL_ADDRESS,\n                            msg.getSrc()));",
      "right" : "PhysicalAddress src = (PhysicalAddress) auth.down(new Event(Event.GET_PHYSICAL_ADDRESS, msg.getSrc()));",
      "info" : "VariableDeclarationStatement[1606-1737]:VariableDeclarationStatement[1794-1897]"
    }, {
      "left" : "src == null",
      "right" : "src == null",
      "info" : "InfixExpression[1754-1765]:InfixExpression[1914-1925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1767-1937]:Block[1927-2051]"
    }, {
      "left" : "if (log.isErrorEnabled())",
      "right" : "if (src == null)",
      "info" : "IfStatement[1785-1893]:IfStatement[1910-2051]"
    }, {
      "left" : "log.error(\"didn't find physical address for \" + msg.getSrc());",
      "right" : "log.error(\"didn't find physical address for \" + msg.getSrc());",
      "info" : "ExpressionStatement[1831-1893]:ExpressionStatement[1945-2007]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1910-1923]:ReturnStatement[2024-2037]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1951-1957]:SimpleType[3208-3214]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2010-2016]:SimpleType[3395-3401]"
    }, {
      "left" : "sourceAddressWithPort",
      "right" : "isInMembersList",
      "info" : "SimpleName[2044-2065]:SimpleName[2071-2086]"
    }, {
      "left" : "sourceAddressWithPort.substring(0,\n                            sourceAddressWithPort.indexOf(\":\"))",
      "right" : "isInMembersList((IpAddress)src)",
      "info" : "MethodInvocation[2044-2142]:MethodInvocation[2071-2102]"
    }, {
      "left" : "sourceAddressWithPort",
      "right" : "IpAddress",
      "info" : "SimpleName[2107-2128]:SimpleName[2088-2097]"
    }, {
      "left" : "indexOf",
      "right" : "src",
      "info" : "SimpleName[2129-2136]:SimpleName[2098-2101]"
    }, {
      "left" : "for (String member : memberList)",
      "right" : "for(InetSocketAddress addr: memberList)",
      "info" : "EnhancedForStatement[2291-2622]:EnhancedForStatement[2389-2505]"
    }, {
      "left" : "String",
      "right" : "IpAddress",
      "info" : "SimpleName[2296-2302]:SimpleName[2285-2294]"
    }, {
      "left" : "String member",
      "right" : "IpAddress sender",
      "info" : "SingleVariableDeclaration[2296-2309]:SingleVariableDeclaration[2285-2301]"
    }, {
      "left" : "member",
      "right" : "sender",
      "info" : "SimpleName[2303-2309]:SimpleName[2295-2301]"
    }, {
      "left" : "memberList",
      "right" : "memberList",
      "info" : "SimpleName[2312-2322]:SimpleName[2316-2326]"
    }, {
      "left" : "hasPort",
      "right" : "sender",
      "info" : "SimpleName[2346-2353]:SimpleName[2338-2344]"
    }, {
      "left" : "member",
      "right" : "memberList",
      "info" : "SimpleName[2354-2360]:SimpleName[2417-2427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2363-2481]:Block[2429-2505]"
    }, {
      "left" : "if (member.equals(sourceAddressWithPort))",
      "right" : "if(match(sender, addr))",
      "info" : "IfStatement[2385-2463]:IfStatement[2443-2495]"
    }, {
      "left" : "member",
      "right" : "match",
      "info" : "SimpleName[2389-2395]:SimpleName[2446-2451]"
    }, {
      "left" : "equals",
      "right" : "sender",
      "info" : "SimpleName[2396-2402]:SimpleName[2452-2458]"
    }, {
      "left" : "sourceAddressWithPort",
      "right" : "addr",
      "info" : "SimpleName[2403-2424]:SimpleName[2460-2464]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2451-2463]:ReturnStatement[2483-2495]"
    }, {
      "left" : "member",
      "right" : "addr",
      "info" : "SimpleName[2513-2519]:SimpleName[2673-2677]"
    }, {
      "left" : "member.equals(sourceAddressWithoutPort)",
      "right" : "addr.getAddress().equals(sender.getIpAddress())",
      "info" : "MethodInvocation[2513-2552]:MethodInvocation[2673-2720]"
    }, {
      "left" : "sourceAddressWithoutPort",
      "right" : "getIpAddress",
      "info" : "SimpleName[2527-2551]:SimpleName[2705-2717]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2578-2590]:ReturnStatement[2483-2495]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2635-2648]:ReturnStatement[2514-2527]"
    }, {
      "left" : "if (log.isWarnEnabled())",
      "right" : "if (log.isWarnEnabled())",
      "info" : "IfStatement[2668-2777]:IfStatement[2123-2220]"
    }, {
      "left" : "log.warn(\"Invalid AuthToken instance - wrong type or null\");",
      "right" : "log.warn(\"Invalid AuthToken instance - wrong type or null\");",
      "info" : "ExpressionStatement[2707-2767]:ExpressionStatement[2160-2220]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2786-2799]:ReturnStatement[2229-2242]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2811-2818]:Modifier[2807-2814]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2819-2825]:Modifier[2815-2821]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2826-2833]:PrimitiveType[2822-2829]"
    }, {
      "left" : "hasPort",
      "right" : "hasPort",
      "info" : "SimpleName[2834-2841]:SimpleName[2830-2837]"
    }, {
      "left" : "String member",
      "right" : "String member",
      "info" : "SingleVariableDeclaration[2842-2855]:SingleVariableDeclaration[2838-2851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2857-2901]:Block[2853-2897]"
    }, {
      "left" : "return member.contains(\":\");",
      "right" : "return member.contains(\":\");",
      "info" : "ReturnStatement[2867-2895]:ReturnStatement[2863-2891]"
    }, {
      "left" : "@Property(name = \"fixed_members_value\")",
      "right" : "@Property(name = \"fixed_members_value\")",
      "info" : "NormalAnnotation[2907-2946]:NormalAnnotation[2903-2942]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2951-2957]:Modifier[2947-2953]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2958-2962]:PrimitiveType[2954-2958]"
    }, {
      "left" : "setMemberList",
      "right" : "setMemberList",
      "info" : "SimpleName[2963-2976]:SimpleName[2959-2972]"
    }, {
      "left" : "String list",
      "right" : "String list",
      "info" : "SingleVariableDeclaration[2977-2988]:SingleVariableDeclaration[2973-2984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2990-3278]:Block[3014-3595]"
    }, {
      "left" : "memberList",
      "right" : "memberList",
      "info" : "SimpleName[3000-3010]:SimpleName[3024-3034]"
    }, {
      "left" : "memberList = new ArrayList<>();",
      "right" : "memberList.clear();",
      "info" : "ExpressionStatement[3000-3031]:ExpressionStatement[3024-3043]"
    }, {
      "left" : "new ArrayList<>()",
      "right" : "new ArrayList<>()",
      "info" : "ClassInstanceCreation[3013-3030]:ClassInstanceCreation[1130-1147]"
    }, {
      "left" : "StringTokenizer memberListTokenizer = new StringTokenizer(list, fixed_members_seperator);",
      "right" : "StringTokenizer memberListTokenizer = new StringTokenizer(list, fixed_members_seperator);",
      "info" : "VariableDeclarationStatement[3040-3129]:VariableDeclarationStatement[3052-3141]"
    }, {
      "left" : "while (memberListTokenizer.hasMoreTokens())",
      "right" : "while (memberListTokenizer.hasMoreTokens())",
      "info" : "WhileStatement[3138-3272]:WhileStatement[3150-3589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3182-3272]:Block[3194-3589]"
    }, {
      "left" : "memberList",
      "right" : "memberList",
      "info" : "METHOD_INVOCATION_RECEIVER[3196-3206]:METHOD_INVOCATION_RECEIVER[3529-3539]"
    }, {
      "left" : "add",
      "right" : "tmp",
      "info" : "SimpleName[3207-3210]:SimpleName[3215-3218]"
    }, {
      "left" : "memberListTokenizer.nextToken().replace('/', ':')",
      "right" : "memberListTokenizer.nextToken().trim()",
      "info" : "MethodInvocation[3211-3260]:MethodInvocation[3219-3257]"
    }, {
      "left" : "replace",
      "right" : "trim",
      "info" : "SimpleName[3243-3250]:SimpleName[3251-3255]"
    }, {
      "left" : "'/', ':'",
      "right" : "'/'",
      "info" : "METHOD_INVOCATION_ARGUMENTS[3251-3259]:METHOD_INVOCATION_ARGUMENTS[3297-3300]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3439-3445]:Modifier[3734-3740]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3446-3450]:PrimitiveType[3741-3745]"
    }, {
      "left" : "writeTo",
      "right" : "writeTo",
      "info" : "SimpleName[3451-3458]:SimpleName[3746-3753]"
    }, {
      "left" : "DataOutput out",
      "right" : "DataOutput out",
      "info" : "SingleVariableDeclaration[3459-3473]:SingleVariableDeclaration[3754-3768]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[3482-3491]:SimpleType[3777-3786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3492-3635]:Block[3787-3918]"
    }, {
      "left" : "if (log.isDebugEnabled())",
      "right" : "if (log.isDebugEnabled())",
      "info" : "IfStatement[3502-3587]:IfStatement[3797-3870]"
    }, {
      "left" : "log.debug(\"SimpleToken writeTo()\");",
      "right" : "log.debug(\"SimpleToken writeTo()\");",
      "info" : "ExpressionStatement[3542-3577]:ExpressionStatement[3835-3870]"
    }, {
      "left" : "Bits.writeString(this.token,out);",
      "right" : "Bits.writeString(this.token,out);",
      "info" : "ExpressionStatement[3596-3629]:ExpressionStatement[3879-3912]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3790-3796]:Modifier[4051-4057]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3797-3801]:PrimitiveType[4058-4062]"
    }, {
      "left" : "readFrom",
      "right" : "readFrom",
      "info" : "SimpleName[3802-3810]:SimpleName[4063-4071]"
    }, {
      "left" : "DataInput in",
      "right" : "DataInput in",
      "info" : "SingleVariableDeclaration[3811-3823]:SingleVariableDeclaration[4072-4084]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[3832-3841]:SimpleType[4093-4102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3842-3986]:Block[4103-4235]"
    }, {
      "left" : "if (log.isDebugEnabled())",
      "right" : "if (log.isDebugEnabled())",
      "info" : "IfStatement[3852-3938]:IfStatement[4113-4187]"
    }, {
      "left" : "log.debug(\"SimpleToken readFrom()\");",
      "right" : "log.debug(\"SimpleToken readFrom()\");",
      "info" : "ExpressionStatement[3892-3928]:ExpressionStatement[4151-4187]"
    }, {
      "left" : "this.token = Bits.readString(in);",
      "right" : "this.token = Bits.readString(in);",
      "info" : "ExpressionStatement[3947-3980]:ExpressionStatement[4196-4229]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3992-3998]:Modifier[4241-4247]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3999-4002]:PrimitiveType[4248-4251]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[4003-4007]:SimpleName[4252-4256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4010-4050]:Block[4259-4299]"
    }, {
      "left" : "return Util.size(token);",
      "right" : "return Util.size(token);",
      "info" : "ReturnStatement[4020-4044]:ReturnStatement[4269-4293]"
    } ]
  },
  "interFileMappings" : { }
}