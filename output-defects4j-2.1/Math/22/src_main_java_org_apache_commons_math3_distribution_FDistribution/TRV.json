{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final double DEFAULT_INVERSE_ABSOLUTE_ACCURACY = 1e-9;",
      "right" : "public static final double DEFAULT_INVERSE_ABSOLUTE_ACCURACY = 1e-9;",
      "info" : "FieldDeclaration[1516-1674]:FieldDeclaration[1516-1674]"
    }, {
      "left" : "private static final long serialVersionUID = -8516354193418641566L;",
      "right" : "private static final long serialVersionUID = -8516354193418641566L;",
      "info" : "FieldDeclaration[1679-1790]:FieldDeclaration[1679-1790]"
    }, {
      "left" : "private final double numeratorDegreesOfFreedom;",
      "right" : "private final double numeratorDegreesOfFreedom;",
      "info" : "FieldDeclaration[1795-1887]:FieldDeclaration[1795-1887]"
    }, {
      "left" : "private final double denominatorDegreesOfFreedom;",
      "right" : "private final double denominatorDegreesOfFreedom;",
      "info" : "FieldDeclaration[1892-1986]:FieldDeclaration[1892-1986]"
    }, {
      "left" : "private final double solverAbsoluteAccuracy;",
      "right" : "private final double solverAbsoluteAccuracy;",
      "info" : "FieldDeclaration[1991-2087]:FieldDeclaration[1991-2087]"
    }, {
      "left" : "private double numericalVariance = Double.NaN;",
      "right" : "private double numericalVariance = Double.NaN;",
      "info" : "FieldDeclaration[2092-2175]:FieldDeclaration[2092-2175]"
    }, {
      "left" : "private boolean numericalVarianceIsCalculated = false;",
      "right" : "private boolean numericalVarianceIsCalculated = false;",
      "info" : "FieldDeclaration[2180-2303]:FieldDeclaration[2180-2303]"
    }, {
      "left" : "public FDistribution(double numeratorDegreesOfFreedom,\n                         double denominatorDegreesOfFreedom)\n        throws NotStrictlyPositiveException",
      "right" : "public FDistribution(double numeratorDegreesOfFreedom,\n                         double denominatorDegreesOfFreedom)\n        throws NotStrictlyPositiveException",
      "info" : "MethodDeclaration[2309-2975]:MethodDeclaration[2309-2975]"
    }, {
      "left" : "public FDistribution(double numeratorDegreesOfFreedom,\n                         double denominatorDegreesOfFreedom,\n                         double inverseCumAccuracy)\n        throws NotStrictlyPositiveException",
      "right" : "public FDistribution(double numeratorDegreesOfFreedom,\n                         double denominatorDegreesOfFreedom,\n                         double inverseCumAccuracy)\n        throws NotStrictlyPositiveException",
      "info" : "MethodDeclaration[2981-3883]:MethodDeclaration[2981-3883]"
    }, {
      "left" : "public FDistribution(RandomGenerator rng,\n                         double numeratorDegreesOfFreedom,\n                         double denominatorDegreesOfFreedom,\n                         double inverseCumAccuracy)\n        throws NotStrictlyPositiveException",
      "right" : "public FDistribution(RandomGenerator rng,\n                         double numeratorDegreesOfFreedom,\n                         double denominatorDegreesOfFreedom,\n                         double inverseCumAccuracy)\n        throws NotStrictlyPositiveException",
      "info" : "MethodDeclaration[3889-5337]:MethodDeclaration[3889-5337]"
    }, {
      "left" : "public double density(double x)",
      "right" : "public double density(double x)",
      "info" : "MethodDeclaration[5343-6098]:MethodDeclaration[5343-6098]"
    }, {
      "left" : "public double cumulativeProbability(double x)",
      "right" : "public double cumulativeProbability(double x)",
      "info" : "MethodDeclaration[6104-6745]:MethodDeclaration[6104-6745]"
    }, {
      "left" : "public double getNumeratorDegreesOfFreedom()",
      "right" : "public double getNumeratorDegreesOfFreedom()",
      "info" : "MethodDeclaration[6751-6965]:MethodDeclaration[6751-6965]"
    }, {
      "left" : "public double getDenominatorDegreesOfFreedom()",
      "right" : "public double getDenominatorDegreesOfFreedom()",
      "info" : "MethodDeclaration[6971-7193]:MethodDeclaration[6971-7193]"
    }, {
      "left" : "protected double getSolverAbsoluteAccuracy()",
      "right" : "protected double getSolverAbsoluteAccuracy()",
      "info" : "MethodDeclaration[7199-7329]:MethodDeclaration[7199-7329]"
    }, {
      "left" : "public double getNumericalMean()",
      "right" : "public double getNumericalMean()",
      "info" : "MethodDeclaration[7335-7827]:MethodDeclaration[7335-7827]"
    }, {
      "left" : "public double getNumericalVariance()",
      "right" : "public double getNumericalVariance()",
      "info" : "MethodDeclaration[7833-8466]:MethodDeclaration[7833-8466]"
    }, {
      "left" : "protected double calculateNumericalVariance()",
      "right" : "protected double calculateNumericalVariance()",
      "info" : "MethodDeclaration[8472-9116]:MethodDeclaration[8472-9116]"
    }, {
      "left" : "public double getSupportLowerBound()",
      "right" : "public double getSupportLowerBound()",
      "info" : "MethodDeclaration[9122-9364]:MethodDeclaration[9122-9364]"
    }, {
      "left" : "public double getSupportUpperBound()",
      "right" : "public double getSupportUpperBound()",
      "info" : "MethodDeclaration[9370-9681]:MethodDeclaration[9370-9681]"
    }, {
      "left" : "public boolean isSupportUpperBoundInclusive()",
      "right" : "public boolean isSupportUpperBoundInclusive()",
      "info" : "MethodDeclaration[9792-9892]:MethodDeclaration[9793-9893]"
    }, {
      "left" : "public boolean isSupportConnected()",
      "right" : "public boolean isSupportConnected()",
      "info" : "MethodDeclaration[9898-10095]:MethodDeclaration[9899-10096]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2850-2975]:Block[2850-2975]"
    }, {
      "left" : "this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,\n             DEFAULT_INVERSE_ABSOLUTE_ACCURACY);",
      "right" : "this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,\n             DEFAULT_INVERSE_ABSOLUTE_ACCURACY);",
      "info" : "ConstructorInvocation[2860-2969]:ConstructorInvocation[2860-2969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3755-3883]:Block[3755-3883]"
    }, {
      "left" : "this(new Well19937c(), numeratorDegreesOfFreedom,\n             denominatorDegreesOfFreedom, inverseCumAccuracy);",
      "right" : "this(new Well19937c(), numeratorDegreesOfFreedom,\n             denominatorDegreesOfFreedom, inverseCumAccuracy);",
      "info" : "ConstructorInvocation[3765-3877]:ConstructorInvocation[3765-3877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4666-5337]:Block[4666-5337]"
    }, {
      "left" : "super(rng);",
      "right" : "super(rng);",
      "info" : "SuperConstructorInvocation[4676-4687]:SuperConstructorInvocation[4676-4687]"
    }, {
      "left" : "if (numeratorDegreesOfFreedom <= 0)",
      "right" : "if (numeratorDegreesOfFreedom <= 0)",
      "info" : "IfStatement[4697-4911]:IfStatement[4697-4911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4733-4911]:Block[4733-4911]"
    }, {
      "left" : "throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,\n                                                   numeratorDegreesOfFreedom);",
      "right" : "throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,\n                                                   numeratorDegreesOfFreedom);",
      "info" : "ThrowStatement[4747-4901]:ThrowStatement[4747-4901]"
    }, {
      "left" : "if (denominatorDegreesOfFreedom <= 0)",
      "right" : "if (denominatorDegreesOfFreedom <= 0)",
      "info" : "IfStatement[4920-5138]:IfStatement[4920-5138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4958-5138]:Block[4958-5138]"
    }, {
      "left" : "throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,\n                                                   denominatorDegreesOfFreedom);",
      "right" : "throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,\n                                                   denominatorDegreesOfFreedom);",
      "info" : "ThrowStatement[4972-5128]:ThrowStatement[4972-5128]"
    }, {
      "left" : "this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;",
      "right" : "this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;",
      "info" : "ExpressionStatement[5147-5206]:ExpressionStatement[5147-5206]"
    }, {
      "left" : "this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;",
      "right" : "this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;",
      "info" : "ExpressionStatement[5215-5278]:ExpressionStatement[5215-5278]"
    }, {
      "left" : "solverAbsoluteAccuracy = inverseCumAccuracy;",
      "right" : "solverAbsoluteAccuracy = inverseCumAccuracy;",
      "info" : "ExpressionStatement[5287-5331]:ExpressionStatement[5287-5331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5437-6098]:Block[5437-6098]"
    }, {
      "left" : "final double nhalf = numeratorDegreesOfFreedom / 2;",
      "right" : "final double nhalf = numeratorDegreesOfFreedom / 2;",
      "info" : "VariableDeclarationStatement[5447-5498]:VariableDeclarationStatement[5447-5498]"
    }, {
      "left" : "final double mhalf = denominatorDegreesOfFreedom / 2;",
      "right" : "final double mhalf = denominatorDegreesOfFreedom / 2;",
      "info" : "VariableDeclarationStatement[5507-5560]:VariableDeclarationStatement[5507-5560]"
    }, {
      "left" : "final double logx = FastMath.log(x);",
      "right" : "final double logx = FastMath.log(x);",
      "info" : "VariableDeclarationStatement[5569-5605]:VariableDeclarationStatement[5569-5605]"
    }, {
      "left" : "final double logn = FastMath.log(numeratorDegreesOfFreedom);",
      "right" : "final double logn = FastMath.log(numeratorDegreesOfFreedom);",
      "info" : "VariableDeclarationStatement[5614-5674]:VariableDeclarationStatement[5614-5674]"
    }, {
      "left" : "final double logm = FastMath.log(denominatorDegreesOfFreedom);",
      "right" : "final double logm = FastMath.log(denominatorDegreesOfFreedom);",
      "info" : "VariableDeclarationStatement[5683-5745]:VariableDeclarationStatement[5683-5745]"
    }, {
      "left" : "final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                           denominatorDegreesOfFreedom);",
      "right" : "final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                           denominatorDegreesOfFreedom);",
      "info" : "VariableDeclarationStatement[5754-5893]:VariableDeclarationStatement[5754-5893]"
    }, {
      "left" : "return FastMath.exp(nhalf * logn + nhalf * logx - logx +\n                            mhalf * logm - nhalf * lognxm - mhalf * lognxm -\n                            Beta.logBeta(nhalf, mhalf));",
      "right" : "return FastMath.exp(nhalf * logn + nhalf * logx - logx +\n                            mhalf * logm - nhalf * lognxm - mhalf * lognxm -\n                            Beta.logBeta(nhalf, mhalf));",
      "info" : "ReturnStatement[5902-6092]:ReturnStatement[5902-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6412-6745]:Block[6412-6745]"
    }, {
      "left" : "double ret;",
      "right" : "double ret;",
      "info" : "VariableDeclarationStatement[6422-6433]:VariableDeclarationStatement[6422-6433]"
    }, {
      "left" : "if (x <= 0)",
      "right" : "if (x <= 0)",
      "info" : "IfStatement[6442-6719]:IfStatement[6442-6719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6454-6486]:Block[6454-6486]"
    }, {
      "left" : "ret = 0;",
      "right" : "ret = 0;",
      "info" : "ExpressionStatement[6468-6476]:ExpressionStatement[6468-6476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6492-6719]:Block[6492-6719]"
    }, {
      "left" : "double n = numeratorDegreesOfFreedom;",
      "right" : "double n = numeratorDegreesOfFreedom;",
      "info" : "VariableDeclarationStatement[6506-6543]:VariableDeclarationStatement[6506-6543]"
    }, {
      "left" : "double m = denominatorDegreesOfFreedom;",
      "right" : "double m = denominatorDegreesOfFreedom;",
      "info" : "VariableDeclarationStatement[6556-6595]:VariableDeclarationStatement[6556-6595]"
    }, {
      "left" : "ret = Beta.regularizedBeta((n * x) / (m + n * x),\n                0.5 * n,\n                0.5 * m);",
      "right" : "ret = Beta.regularizedBeta((n * x) / (m + n * x),\n                0.5 * n,\n                0.5 * m);",
      "info" : "ExpressionStatement[6609-6709]:ExpressionStatement[6609-6709]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[6728-6739]:ReturnStatement[6728-6739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6916-6965]:Block[6916-6965]"
    }, {
      "left" : "return numeratorDegreesOfFreedom;",
      "right" : "return numeratorDegreesOfFreedom;",
      "info" : "ReturnStatement[6926-6959]:ReturnStatement[6926-6959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7142-7193]:Block[7142-7193]"
    }, {
      "left" : "return denominatorDegreesOfFreedom;",
      "right" : "return denominatorDegreesOfFreedom;",
      "info" : "ReturnStatement[7152-7187]:ReturnStatement[7152-7187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7283-7329]:Block[7283-7329]"
    }, {
      "left" : "return solverAbsoluteAccuracy;",
      "right" : "return solverAbsoluteAccuracy;",
      "info" : "ReturnStatement[7293-7323]:ReturnStatement[7293-7323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7621-7827]:Block[7621-7827]"
    }, {
      "left" : "final double denominatorDF = getDenominatorDegreesOfFreedom();",
      "right" : "final double denominatorDF = getDenominatorDegreesOfFreedom();",
      "info" : "VariableDeclarationStatement[7631-7693]:VariableDeclarationStatement[7631-7693]"
    }, {
      "left" : "if (denominatorDF > 2)",
      "right" : "if (denominatorDF > 2)",
      "info" : "IfStatement[7703-7793]:IfStatement[7703-7793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7726-7793]:Block[7726-7793]"
    }, {
      "left" : "return denominatorDF / (denominatorDF - 2);",
      "right" : "return denominatorDF / (denominatorDF - 2);",
      "info" : "ReturnStatement[7740-7783]:ReturnStatement[7740-7783]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[7803-7821]:ReturnStatement[7803-7821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8257-8466]:Block[8257-8466]"
    }, {
      "left" : "if (!numericalVarianceIsCalculated)",
      "right" : "if (!numericalVarianceIsCalculated)",
      "info" : "IfStatement[8267-8426]:IfStatement[8267-8426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8303-8426]:Block[8303-8426]"
    }, {
      "left" : "numericalVariance = calculateNumericalVariance();",
      "right" : "numericalVariance = calculateNumericalVariance();",
      "info" : "ExpressionStatement[8317-8366]:ExpressionStatement[8317-8366]"
    }, {
      "left" : "numericalVarianceIsCalculated = true;",
      "right" : "numericalVarianceIsCalculated = true;",
      "info" : "ExpressionStatement[8379-8416]:ExpressionStatement[8379-8416]"
    }, {
      "left" : "return numericalVariance;",
      "right" : "return numericalVariance;",
      "info" : "ReturnStatement[8435-8460]:ReturnStatement[8435-8460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8637-9116]:Block[8637-9116]"
    }, {
      "left" : "final double denominatorDF = getDenominatorDegreesOfFreedom();",
      "right" : "final double denominatorDF = getDenominatorDegreesOfFreedom();",
      "info" : "VariableDeclarationStatement[8647-8709]:VariableDeclarationStatement[8647-8709]"
    }, {
      "left" : "if (denominatorDF > 4)",
      "right" : "if (denominatorDF > 4)",
      "info" : "IfStatement[8719-9082]:IfStatement[8719-9082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8742-9082]:Block[8742-9082]"
    }, {
      "left" : "final double numeratorDF = getNumeratorDegreesOfFreedom();",
      "right" : "final double numeratorDF = getNumeratorDegreesOfFreedom();",
      "info" : "VariableDeclarationStatement[8756-8814]:VariableDeclarationStatement[8756-8814]"
    }, {
      "left" : "final double denomDFMinusTwo = denominatorDF - 2;",
      "right" : "final double denomDFMinusTwo = denominatorDF - 2;",
      "info" : "VariableDeclarationStatement[8827-8876]:VariableDeclarationStatement[8827-8876]"
    }, {
      "left" : "return ( 2 * (denominatorDF * denominatorDF) * (numeratorDF + denominatorDF - 2) ) /\n                   ( (numeratorDF * (denomDFMinusTwo * denomDFMinusTwo) * (denominatorDF - 4)) );",
      "right" : "return ( 2 * (denominatorDF * denominatorDF) * (numeratorDF + denominatorDF - 2) ) /\n                   ( (numeratorDF * (denomDFMinusTwo * denomDFMinusTwo) * (denominatorDF - 4)) );",
      "info" : "ReturnStatement[8890-9072]:ReturnStatement[8890-9072]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[9092-9110]:ReturnStatement[9092-9110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9339-9364]:Block[9339-9364]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[9349-9358]:ReturnStatement[9349-9358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9633-9681]:Block[9633-9681]"
    }, {
      "left" : "return Double.POSITIVE_INFINITY;",
      "right" : "return Double.POSITIVE_INFINITY;",
      "info" : "ReturnStatement[9643-9675]:ReturnStatement[9643-9675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9863-9892]:Block[9864-9893]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9873-9886]:ReturnStatement[9874-9887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10067-10095]:Block[10068-10096]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[10077-10089]:ReturnStatement[10078-10090]"
    } ]
  },
  "interFileMappings" : { }
}