{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "static final DiagnosticType GLOBAL_THIS = DiagnosticType.warning(\n      \"JSC_USED_GLOBAL_THIS\",\n      \"dangerous use of the global 'this' object\");",
      "right" : "static final DiagnosticType GLOBAL_THIS = DiagnosticType.warning(\n      \"JSC_USED_GLOBAL_THIS\",\n      \"dangerous use of the global 'this' object\");",
      "info" : "FieldDeclaration[1879-2026]:FieldDeclaration[1879-2026]"
    }, {
      "left" : "private final AbstractCompiler compiler;",
      "right" : "private final AbstractCompiler compiler;",
      "info" : "FieldDeclaration[2030-2070]:FieldDeclaration[2030-2070]"
    }, {
      "left" : "private final CheckLevel level;",
      "right" : "private final CheckLevel level;",
      "info" : "FieldDeclaration[2073-2104]:FieldDeclaration[2073-2104]"
    }, {
      "left" : "private Node assignLhsChild = null;",
      "right" : "private Node assignLhsChild = null;",
      "info" : "FieldDeclaration[2108-2334]:FieldDeclaration[2108-2334]"
    }, {
      "left" : "CheckGlobalThis(AbstractCompiler compiler, CheckLevel level)",
      "right" : "CheckGlobalThis(AbstractCompiler compiler, CheckLevel level)",
      "info" : "MethodDeclaration[2338-2458]:MethodDeclaration[2338-2458]"
    }, {
      "left" : "public void visit(NodeTraversal t, Node n, Node parent)",
      "right" : "public void visit(NodeTraversal t, Node n, Node parent)",
      "info" : "MethodDeclaration[4585-4845]:MethodDeclaration[4625-4885]"
    }, {
      "left" : "private boolean shouldReportThis(Node n, Node parent)",
      "right" : "private boolean shouldReportThis(Node n, Node parent)",
      "info" : "MethodDeclaration[4849-5132]:MethodDeclaration[4889-5172]"
    }, {
      "left" : "private JSDocInfo getFunctionJsDocInfo(Node n)",
      "right" : "private JSDocInfo getFunctionJsDocInfo(Node n)",
      "info" : "MethodDeclaration[5136-5955]:MethodDeclaration[5176-5995]"
    } ],
    "mappings" : [
 {
      "left" : "CheckGlobalThis",
      "right" : "CheckGlobalThis",
      "info" : "SimpleName[2338-2353]:SimpleName[2338-2353]"
    }, {
      "left" : "AbstractCompiler compiler",
      "right" : "AbstractCompiler compiler",
      "info" : "SingleVariableDeclaration[2354-2379]:SingleVariableDeclaration[2354-2379]"
    }, {
      "left" : "CheckLevel level",
      "right" : "CheckLevel level",
      "info" : "SingleVariableDeclaration[2381-2397]:SingleVariableDeclaration[2381-2397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2399-2458]:Block[2399-2458]"
    }, {
      "left" : "this.compiler = compiler;",
      "right" : "this.compiler = compiler;",
      "info" : "ExpressionStatement[2405-2430]:ExpressionStatement[2405-2430]"
    }, {
      "left" : "this.level = level;",
      "right" : "this.level = level;",
      "info" : "ExpressionStatement[2435-2454]:ExpressionStatement[2435-2454]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4585-4591]:Modifier[4625-4631]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4592-4596]:PrimitiveType[4632-4636]"
    }, {
      "left" : "visit",
      "right" : "visit",
      "info" : "SimpleName[4597-4602]:SimpleName[4637-4642]"
    }, {
      "left" : "NodeTraversal t",
      "right" : "NodeTraversal t",
      "info" : "SingleVariableDeclaration[4603-4618]:SingleVariableDeclaration[4643-4658]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[4620-4626]:SingleVariableDeclaration[4660-4666]"
    }, {
      "left" : "Node parent",
      "right" : "Node parent",
      "info" : "SingleVariableDeclaration[4628-4639]:SingleVariableDeclaration[4668-4679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4641-4845]:Block[4681-4885]"
    }, {
      "left" : "if (n.getType() == Token.THIS && shouldReportThis(n, parent))",
      "right" : "if (n.getType() == Token.THIS && shouldReportThis(n, parent))",
      "info" : "IfStatement[4647-4775]:IfStatement[4687-4815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4709-4775]:Block[4749-4815]"
    }, {
      "left" : "compiler.report(t.makeError(n, level, GLOBAL_THIS));",
      "right" : "compiler.report(t.makeError(n, level, GLOBAL_THIS));",
      "info" : "ExpressionStatement[4717-4769]:ExpressionStatement[4757-4809]"
    }, {
      "left" : "if (n == assignLhsChild)",
      "right" : "if (n == assignLhsChild)",
      "info" : "IfStatement[4780-4841]:IfStatement[4820-4881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4805-4841]:Block[4845-4881]"
    }, {
      "left" : "assignLhsChild = null;",
      "right" : "assignLhsChild = null;",
      "info" : "ExpressionStatement[4813-4835]:ExpressionStatement[4853-4875]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4849-4856]:Modifier[4889-4896]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4857-4864]:PrimitiveType[4897-4904]"
    }, {
      "left" : "shouldReportThis",
      "right" : "shouldReportThis",
      "info" : "SimpleName[4865-4881]:SimpleName[4905-4921]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[4882-4888]:SingleVariableDeclaration[4922-4928]"
    }, {
      "left" : "Node parent",
      "right" : "Node parent",
      "info" : "SingleVariableDeclaration[4890-4901]:SingleVariableDeclaration[4930-4941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4903-5132]:Block[4943-5172]"
    }, {
      "left" : "if (assignLhsChild != null)",
      "right" : "if (assignLhsChild != null)",
      "info" : "IfStatement[4909-5024]:IfStatement[4949-5064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4937-5024]:Block[4977-5064]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5006-5018]:ReturnStatement[5046-5058]"
    }, {
      "left" : "return parent != null && NodeUtil.isGet(parent);",
      "right" : "return parent != null && NodeUtil.isGet(parent);",
      "info" : "ReturnStatement[5080-5128]:ReturnStatement[5120-5168]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5412-5419]:Modifier[5452-5459]"
    }, {
      "left" : "JSDocInfo",
      "right" : "JSDocInfo",
      "info" : "SimpleType[5420-5429]:SimpleType[5460-5469]"
    }, {
      "left" : "getFunctionJsDocInfo",
      "right" : "getFunctionJsDocInfo",
      "info" : "SimpleName[5430-5450]:SimpleName[5470-5490]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[5451-5457]:SingleVariableDeclaration[5491-5497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5459-5955]:Block[5499-5995]"
    }, {
      "left" : "JSDocInfo jsDoc = n.getJSDocInfo();",
      "right" : "JSDocInfo jsDoc = n.getJSDocInfo();",
      "info" : "VariableDeclarationStatement[5465-5500]:VariableDeclarationStatement[5505-5540]"
    }, {
      "left" : "Node parent = n.getParent();",
      "right" : "Node parent = n.getParent();",
      "info" : "VariableDeclarationStatement[5505-5533]:VariableDeclarationStatement[5545-5573]"
    }, {
      "left" : "if (jsDoc == null)",
      "right" : "if (jsDoc == null)",
      "info" : "IfStatement[5538-5933]:IfStatement[5578-5973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5557-5933]:Block[5597-5973]"
    }, {
      "left" : "int parentType = parent.getType();",
      "right" : "int parentType = parent.getType();",
      "info" : "VariableDeclarationStatement[5565-5599]:VariableDeclarationStatement[5605-5639]"
    }, {
      "left" : "if (parentType == Token.NAME || parentType == Token.ASSIGN)",
      "right" : "if (parentType == Token.NAME || parentType == Token.ASSIGN)",
      "info" : "IfStatement[5606-5927]:IfStatement[5646-5967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5666-5927]:Block[5706-5967]"
    }, {
      "left" : "jsDoc = parent.getJSDocInfo();",
      "right" : "jsDoc = parent.getJSDocInfo();",
      "info" : "ExpressionStatement[5676-5706]:ExpressionStatement[5716-5746]"
    }, {
      "left" : "if (jsDoc == null && parentType == Token.NAME)",
      "right" : "if (jsDoc == null && parentType == Token.NAME)",
      "info" : "IfStatement[5715-5919]:IfStatement[5755-5959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5762-5919]:Block[5802-5959]"
    }, {
      "left" : "Node gramps = parent.getParent();",
      "right" : "Node gramps = parent.getParent();",
      "info" : "VariableDeclarationStatement[5774-5807]:VariableDeclarationStatement[5814-5847]"
    }, {
      "left" : "if (gramps.getType() == Token.VAR)",
      "right" : "if (gramps.getType() == Token.VAR)",
      "info" : "IfStatement[5818-5909]:IfStatement[5858-5949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5853-5909]:Block[5893-5949]"
    }, {
      "left" : "jsDoc = gramps.getJSDocInfo();",
      "right" : "jsDoc = gramps.getJSDocInfo();",
      "info" : "ExpressionStatement[5867-5897]:ExpressionStatement[5907-5937]"
    }, {
      "left" : "return jsDoc;",
      "right" : "return jsDoc;",
      "info" : "ReturnStatement[5938-5951]:ReturnStatement[5978-5991]"
    } ]
  },
  "interFileMappings" : { }
}