{
  "matchedElements" : [
 {
    "left" : "class : LightweightMessageFormatter",
    "right" : "class : LightweightMessageFormatter",
    "info" : "TypeDeclaration[981-5281]:TypeDeclaration[981-5282]"
  }, {
    "left" : "excerpt",
    "right" : "excerpt",
    "info" : "FieldDeclaration[1188-1218]:FieldDeclaration[1188-1218]"
  }, {
    "left" : "excerptFormatter",
    "right" : "excerptFormatter",
    "info" : "FieldDeclaration[1221-1313]:FieldDeclaration[1221-1313]"
  }, {
    "left" : "private LightweightMessageFormatter()",
    "right" : "private LightweightMessageFormatter()",
    "info" : "MethodDeclaration[1317-1492]:MethodDeclaration[1317-1492]"
  }, {
    "left" : "public LightweightMessageFormatter(source )",
    "right" : "public LightweightMessageFormatter(source )",
    "info" : "MethodDeclaration[1496-1590]:MethodDeclaration[1496-1590]"
  }, {
    "left" : "public LightweightMessageFormatter(source , excerpt )",
    "right" : "public LightweightMessageFormatter(source , excerpt )",
    "info" : "MethodDeclaration[1594-1780]:MethodDeclaration[1594-1780]"
  }, {
    "left" : "package withoutSource() : ",
    "right" : "package withoutSource() : ",
    "info" : "MethodDeclaration[1784-1886]:MethodDeclaration[1784-1886]"
  }, {
    "left" : "public formatError(error ) : ",
    "right" : "public formatError(error ) : ",
    "info" : "MethodDeclaration[1890-1969]:MethodDeclaration[1890-1969]"
  }, {
    "left" : "public formatWarning(warning ) : ",
    "right" : "public formatWarning(warning ) : ",
    "info" : "MethodDeclaration[1973-2057]:MethodDeclaration[1973-2057]"
  }, {
    "left" : "private format(error , warning boolean) : ",
    "right" : "private format(error , warning boolean) : ",
    "info" : "MethodDeclaration[2061-3436]:MethodDeclaration[2061-3437]"
  }, {
    "left" : "class : LineNumberingFormatter",
    "right" : "class : LineNumberingFormatter",
    "info" : "TypeDeclaration[3440-5279]:TypeDeclaration[3441-5280]"
  }, {
    "left" : "public formatLine(line , lineNumber int) : ",
    "right" : "public formatLine(line , lineNumber int) : ",
    "info" : "MethodDeclaration[3713-3793]:MethodDeclaration[3714-3794]"
  }, {
    "left" : "public formatRegion(region ) : ",
    "right" : "public formatRegion(region ) : ",
    "info" : "MethodDeclaration[3799-5275]:MethodDeclaration[3800-5276]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1110-1116]:Modifier[1110-1116]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1117-1122]:TYPE_DECLARATION_KIND[1117-1122]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1407-1414]:Modifier[1407-1414]"
  }, {
    "left" : "LightweightMessageFormatter",
    "right" : "LightweightMessageFormatter",
    "info" : "SimpleName[1415-1442]:SimpleName[1415-1442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1445-1492]:Block[1445-1492]"
  }, {
    "left" : "super(null);",
    "right" : "super(null);",
    "info" : "SuperConstructorInvocation[1451-1463]:SuperConstructorInvocation[1451-1463]"
  }, {
    "left" : "this.excerpt = LINE;",
    "right" : "this.excerpt = LINE;",
    "info" : "ExpressionStatement[1468-1488]:ExpressionStatement[1468-1488]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1496-1502]:Modifier[1496-1502]"
  }, {
    "left" : "LightweightMessageFormatter",
    "right" : "LightweightMessageFormatter",
    "info" : "SimpleName[1503-1530]:SimpleName[1503-1530]"
  }, {
    "left" : "SourceExcerptProvider source",
    "right" : "SourceExcerptProvider source",
    "info" : "SingleVariableDeclaration[1531-1559]:SingleVariableDeclaration[1531-1559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1561-1590]:Block[1561-1590]"
  }, {
    "left" : "this(source, LINE);",
    "right" : "this(source, LINE);",
    "info" : "ConstructorInvocation[1567-1586]:ConstructorInvocation[1567-1586]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1594-1600]:Modifier[1594-1600]"
  }, {
    "left" : "LightweightMessageFormatter",
    "right" : "LightweightMessageFormatter",
    "info" : "SimpleName[1601-1628]:SimpleName[1601-1628]"
  }, {
    "left" : "SourceExcerptProvider source",
    "right" : "SourceExcerptProvider source",
    "info" : "SingleVariableDeclaration[1629-1657]:SingleVariableDeclaration[1629-1657]"
  }, {
    "left" : "SourceExcerpt excerpt",
    "right" : "SourceExcerpt excerpt",
    "info" : "SingleVariableDeclaration[1665-1686]:SingleVariableDeclaration[1665-1686]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1688-1780]:Block[1688-1780]"
  }, {
    "left" : "super(source);",
    "right" : "super(source);",
    "info" : "SuperConstructorInvocation[1694-1708]:SuperConstructorInvocation[1694-1708]"
  }, {
    "left" : "Preconditions.checkNotNull(source);",
    "right" : "Preconditions.checkNotNull(source);",
    "info" : "ExpressionStatement[1713-1748]:ExpressionStatement[1713-1748]"
  }, {
    "left" : "this.excerpt = excerpt;",
    "right" : "this.excerpt = excerpt;",
    "info" : "ExpressionStatement[1753-1776]:ExpressionStatement[1753-1776]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1784-1790]:Modifier[1784-1790]"
  }, {
    "left" : "LightweightMessageFormatter",
    "right" : "LightweightMessageFormatter",
    "info" : "SimpleType[1791-1818]:SimpleType[1791-1818]"
  }, {
    "left" : "withoutSource",
    "right" : "withoutSource",
    "info" : "SimpleName[1819-1832]:SimpleName[1819-1832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1835-1886]:Block[1835-1886]"
  }, {
    "left" : "return new LightweightMessageFormatter();",
    "right" : "return new LightweightMessageFormatter();",
    "info" : "ReturnStatement[1841-1882]:ReturnStatement[1841-1882]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1890-1896]:Modifier[1890-1896]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[1897-1903]:SimpleType[1897-1903]"
  }, {
    "left" : "formatError",
    "right" : "formatError",
    "info" : "SimpleName[1904-1915]:SimpleName[1904-1915]"
  }, {
    "left" : "JSError error",
    "right" : "JSError error",
    "info" : "SingleVariableDeclaration[1916-1929]:SingleVariableDeclaration[1916-1929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1931-1969]:Block[1931-1969]"
  }, {
    "left" : "return format(error, false);",
    "right" : "return format(error, false);",
    "info" : "ReturnStatement[1937-1965]:ReturnStatement[1937-1965]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1973-1979]:Modifier[1973-1979]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[1980-1986]:SimpleType[1980-1986]"
  }, {
    "left" : "formatWarning",
    "right" : "formatWarning",
    "info" : "SimpleName[1987-2000]:SimpleName[1987-2000]"
  }, {
    "left" : "JSError warning",
    "right" : "JSError warning",
    "info" : "SingleVariableDeclaration[2001-2016]:SingleVariableDeclaration[2001-2016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2018-2057]:Block[2018-2057]"
  }, {
    "left" : "return format(warning, true);",
    "right" : "return format(warning, true);",
    "info" : "ReturnStatement[2024-2053]:ReturnStatement[2024-2053]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[2061-2068]:Modifier[2061-2068]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[2069-2075]:SimpleType[2069-2075]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[2076-2082]:SimpleName[2076-2082]"
  }, {
    "left" : "JSError error",
    "right" : "JSError error",
    "info" : "SingleVariableDeclaration[2083-2096]:SingleVariableDeclaration[2083-2096]"
  }, {
    "left" : "boolean warning",
    "right" : "boolean warning",
    "info" : "SingleVariableDeclaration[2098-2113]:SingleVariableDeclaration[2098-2113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2115-3436]:Block[2115-3437]"
  }, {
    "left" : "SourceExcerptProvider source = getSource();",
    "right" : "SourceExcerptProvider source = getSource();",
    "info" : "VariableDeclarationStatement[2151-2194]:VariableDeclarationStatement[2151-2194]"
  }, {
    "left" : "String sourceExcerpt = source == null ? null :\n        excerpt.get(\n            source, error.sourceName, error.lineNumber, excerptFormatter);",
    "right" : "String sourceExcerpt = source == null ? null :\n        excerpt.get(\n            source, error.sourceName, error.lineNumber, excerptFormatter);",
    "info" : "VariableDeclarationStatement[2199-2341]:VariableDeclarationStatement[2199-2341]"
  }, {
    "left" : "StringBuilder b = new StringBuilder();",
    "right" : "StringBuilder b = new StringBuilder();",
    "info" : "VariableDeclarationStatement[2377-2415]:VariableDeclarationStatement[2377-2415]"
  }, {
    "left" : "if (error.sourceName != null)",
    "right" : "if (error.sourceName != null)",
    "info" : "IfStatement[2420-2614]:IfStatement[2420-2614]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2450-2614]:Block[2450-2614]"
  }, {
    "left" : "b.append(error.sourceName);",
    "right" : "b.append(error.sourceName);",
    "info" : "ExpressionStatement[2458-2485]:ExpressionStatement[2458-2485]"
  }, {
    "left" : "if (error.lineNumber > 0)",
    "right" : "if (error.lineNumber > 0)",
    "info" : "IfStatement[2492-2586]:IfStatement[2492-2586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2518-2586]:Block[2518-2586]"
  }, {
    "left" : "b.append(':');",
    "right" : "b.append(':');",
    "info" : "ExpressionStatement[2528-2542]:ExpressionStatement[2528-2542]"
  }, {
    "left" : "b.append(error.lineNumber);",
    "right" : "b.append(error.lineNumber);",
    "info" : "ExpressionStatement[2551-2578]:ExpressionStatement[2551-2578]"
  }, {
    "left" : "b.append(\": \");",
    "right" : "b.append(\": \");",
    "info" : "ExpressionStatement[2593-2608]:ExpressionStatement[2593-2608]"
  }, {
    "left" : "b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));",
    "right" : "b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));",
    "info" : "ExpressionStatement[2620-2692]:ExpressionStatement[2620-2692]"
  }, {
    "left" : "b.append(\" - \");",
    "right" : "b.append(\" - \");",
    "info" : "ExpressionStatement[2697-2713]:ExpressionStatement[2697-2713]"
  }, {
    "left" : "b.append(error.description);",
    "right" : "b.append(error.description);",
    "info" : "ExpressionStatement[2719-2747]:ExpressionStatement[2719-2747]"
  }, {
    "left" : "b.append('\\n');",
    "right" : "b.append('\\n');",
    "info" : "ExpressionStatement[2752-2767]:ExpressionStatement[2752-2767]"
  }, {
    "left" : "if (sourceExcerpt != null)",
    "right" : "if (sourceExcerpt != null)",
    "info" : "IfStatement[2772-3407]:IfStatement[2772-3408]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2799-3407]:Block[2799-3408]"
  }, {
    "left" : "b.append(sourceExcerpt);",
    "right" : "b.append(sourceExcerpt);",
    "info" : "ExpressionStatement[2807-2831]:ExpressionStatement[2807-2831]"
  }, {
    "left" : "b.append('\\n');",
    "right" : "b.append('\\n');",
    "info" : "ExpressionStatement[2838-2853]:ExpressionStatement[2838-2853]"
  }, {
    "left" : "int charno = error.getCharno();",
    "right" : "int charno = error.getCharno();",
    "info" : "VariableDeclarationStatement[2860-2891]:VariableDeclarationStatement[2860-2891]"
  }, {
    "left" : "if (excerpt.equals(LINE)\n          && 0 <= charno && charno < sourceExcerpt.length())",
    "right" : "if (excerpt.equals(LINE)\n          && 0 <= charno && charno <= sourceExcerpt.length())",
    "info" : "IfStatement[3058-3401]:IfStatement[3058-3402]"
  }, {
    "left" : "<",
    "right" : "<=",
    "info" : "INFIX_EXPRESSION_OPERATOR[3118-3119]:INFIX_EXPRESSION_OPERATOR[3118-3120]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3144-3401]:Block[3145-3402]"
  }, {
    "left" : "for (int i = 0; i < charno; i++)",
    "right" : "for (int i = 0; i < charno; i++)",
    "info" : "ForStatement[3154-3368]:ForStatement[3155-3369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3187-3368]:Block[3188-3369]"
  }, {
    "left" : "char c = sourceExcerpt.charAt(i);",
    "right" : "char c = sourceExcerpt.charAt(i);",
    "info" : "VariableDeclarationStatement[3199-3232]:VariableDeclarationStatement[3200-3233]"
  }, {
    "left" : "if (Character.isWhitespace(c))",
    "right" : "if (Character.isWhitespace(c))",
    "info" : "IfStatement[3243-3358]:IfStatement[3244-3359]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3274-3312]:Block[3275-3313]"
  }, {
    "left" : "b.append(c);",
    "right" : "b.append(c);",
    "info" : "ExpressionStatement[3288-3300]:ExpressionStatement[3289-3301]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3318-3358]:Block[3319-3359]"
  }, {
    "left" : "b.append(' ');",
    "right" : "b.append(' ');",
    "info" : "ExpressionStatement[3332-3346]:ExpressionStatement[3333-3347]"
  }, {
    "left" : "b.append(\"^\\n\");",
    "right" : "b.append(\"^\\n\");",
    "info" : "ExpressionStatement[3377-3393]:ExpressionStatement[3378-3394]"
  }, {
    "left" : "return b.toString();",
    "right" : "return b.toString();",
    "info" : "ReturnStatement[3412-3432]:ReturnStatement[3413-3433]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3643-3649]:Modifier[3644-3650]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3650-3655]:TYPE_DECLARATION_KIND[3651-3656]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3713-3719]:Modifier[3714-3720]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3720-3726]:SimpleType[3721-3727]"
  }, {
    "left" : "formatLine",
    "right" : "formatLine",
    "info" : "SimpleName[3727-3737]:SimpleName[3728-3738]"
  }, {
    "left" : "String line",
    "right" : "String line",
    "info" : "SingleVariableDeclaration[3738-3749]:SingleVariableDeclaration[3739-3750]"
  }, {
    "left" : "int lineNumber",
    "right" : "int lineNumber",
    "info" : "SingleVariableDeclaration[3751-3765]:SingleVariableDeclaration[3752-3766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3767-3793]:Block[3768-3794]"
  }, {
    "left" : "return line;",
    "right" : "return line;",
    "info" : "ReturnStatement[3775-3787]:ReturnStatement[3776-3788]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3799-3805]:Modifier[3800-3806]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3806-3812]:SimpleType[3807-3813]"
  }, {
    "left" : "formatRegion",
    "right" : "formatRegion",
    "info" : "SimpleName[3813-3825]:SimpleName[3814-3826]"
  }, {
    "left" : "Region region",
    "right" : "Region region",
    "info" : "SingleVariableDeclaration[3826-3839]:SingleVariableDeclaration[3827-3840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3841-5275]:Block[3842-5276]"
  }, {
    "left" : "if (region == null)",
    "right" : "if (region == null)",
    "info" : "IfStatement[3849-3899]:IfStatement[3850-3900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3869-3899]:Block[3870-3900]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[3879-3891]:ReturnStatement[3880-3892]"
  }, {
    "left" : "String code = region.getSourceExcerpt();",
    "right" : "String code = region.getSourceExcerpt();",
    "info" : "VariableDeclarationStatement[3906-3946]:VariableDeclarationStatement[3907-3947]"
  }, {
    "left" : "if (code.length() == 0)",
    "right" : "if (code.length() == 0)",
    "info" : "IfStatement[3953-4007]:IfStatement[3954-4008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3977-4007]:Block[3978-4008]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[3987-3999]:ReturnStatement[3988-4000]"
  }, {
    "left" : "int numberLength = Integer.toString(region.getEndingLineNumber())\n          .length();",
    "right" : "int numberLength = Integer.toString(region.getEndingLineNumber())\n          .length();",
    "info" : "VariableDeclarationStatement[4057-4143]:VariableDeclarationStatement[4058-4144]"
  }, {
    "left" : "StringBuilder builder = new StringBuilder(code.length() * 2);",
    "right" : "StringBuilder builder = new StringBuilder(code.length() * 2);",
    "info" : "VariableDeclarationStatement[4171-4232]:VariableDeclarationStatement[4172-4233]"
  }, {
    "left" : "int start = 0;",
    "right" : "int start = 0;",
    "info" : "VariableDeclarationStatement[4239-4253]:VariableDeclarationStatement[4240-4254]"
  }, {
    "left" : "int end = code.indexOf('\\n', start);",
    "right" : "int end = code.indexOf('\\n', start);",
    "info" : "VariableDeclarationStatement[4260-4296]:VariableDeclarationStatement[4261-4297]"
  }, {
    "left" : "int lineNumber = region.getBeginningLineNumber();",
    "right" : "int lineNumber = region.getBeginningLineNumber();",
    "info" : "VariableDeclarationStatement[4303-4352]:VariableDeclarationStatement[4304-4353]"
  }, {
    "left" : "while (start >= 0)",
    "right" : "while (start >= 0)",
    "info" : "WhileStatement[4359-5236]:WhileStatement[4360-5237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4378-5236]:Block[4379-5237]"
  }, {
    "left" : "String line;",
    "right" : "String line;",
    "info" : "VariableDeclarationStatement[4415-4427]:VariableDeclarationStatement[4416-4428]"
  }, {
    "left" : "if (end < 0)",
    "right" : "if (end < 0)",
    "info" : "IfStatement[4436-4673]:IfStatement[4437-4674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4449-4611]:Block[4450-4612]"
  }, {
    "left" : "line = code.substring(start);",
    "right" : "line = code.substring(start);",
    "info" : "ExpressionStatement[4461-4490]:ExpressionStatement[4462-4491]"
  }, {
    "left" : "if (line.length() == 0)",
    "right" : "if (line.length() == 0)",
    "info" : "IfStatement[4501-4601]:IfStatement[4502-4602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4525-4601]:Block[4526-4602]"
  }, {
    "left" : "return builder.substring(0, builder.length() - 1);",
    "right" : "return builder.substring(0, builder.length() - 1);",
    "info" : "ReturnStatement[4539-4589]:ReturnStatement[4540-4590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4617-4673]:Block[4618-4674]"
  }, {
    "left" : "line = code.substring(start, end);",
    "right" : "line = code.substring(start, end);",
    "info" : "ExpressionStatement[4629-4663]:ExpressionStatement[4630-4664]"
  }, {
    "left" : "builder.append(\"  \");",
    "right" : "builder.append(\"  \");",
    "info" : "ExpressionStatement[4682-4703]:ExpressionStatement[4683-4704]"
  }, {
    "left" : "int spaces = numberLength - Integer.toString(lineNumber).length();",
    "right" : "int spaces = numberLength - Integer.toString(lineNumber).length();",
    "info" : "VariableDeclarationStatement[4756-4822]:VariableDeclarationStatement[4757-4823]"
  }, {
    "left" : "builder.append(Strings.repeat(\" \", spaces));",
    "right" : "builder.append(Strings.repeat(\" \", spaces));",
    "info" : "ExpressionStatement[4831-4875]:ExpressionStatement[4832-4876]"
  }, {
    "left" : "builder.append(lineNumber);",
    "right" : "builder.append(lineNumber);",
    "info" : "ExpressionStatement[4884-4911]:ExpressionStatement[4885-4912]"
  }, {
    "left" : "builder.append(\"| \");",
    "right" : "builder.append(\"| \");",
    "info" : "ExpressionStatement[4920-4941]:ExpressionStatement[4921-4942]"
  }, {
    "left" : "if (end < 0)",
    "right" : "if (end < 0)",
    "info" : "IfStatement[4975-5228]:IfStatement[4976-5229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4988-5053]:Block[4989-5054]"
  }, {
    "left" : "builder.append(line);",
    "right" : "builder.append(line);",
    "info" : "ExpressionStatement[5000-5021]:ExpressionStatement[5001-5022]"
  }, {
    "left" : "start = -1;",
    "right" : "start = -1;",
    "info" : "ExpressionStatement[5032-5043]:ExpressionStatement[5033-5044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5059-5228]:Block[5060-5229]"
  }, {
    "left" : "builder.append(line);",
    "right" : "builder.append(line);",
    "info" : "ExpressionStatement[5071-5092]:ExpressionStatement[5072-5093]"
  }, {
    "left" : "builder.append('\\n');",
    "right" : "builder.append('\\n');",
    "info" : "ExpressionStatement[5103-5124]:ExpressionStatement[5104-5125]"
  }, {
    "left" : "start = end + 1;",
    "right" : "start = end + 1;",
    "info" : "ExpressionStatement[5135-5151]:ExpressionStatement[5136-5152]"
  }, {
    "left" : "end = code.indexOf('\\n', start);",
    "right" : "end = code.indexOf('\\n', start);",
    "info" : "ExpressionStatement[5162-5194]:ExpressionStatement[5163-5195]"
  }, {
    "left" : "lineNumber++;",
    "right" : "lineNumber++;",
    "info" : "ExpressionStatement[5205-5218]:ExpressionStatement[5206-5219]"
  }, {
    "left" : "return builder.toString();",
    "right" : "return builder.toString();",
    "info" : "ReturnStatement[5243-5269]:ReturnStatement[5244-5270]"
  } ]
}