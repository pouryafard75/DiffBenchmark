{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "TypeDeclaration[1936-17205]:TypeDeclaration[1936-17103]"
    }, {
      "left" : "protected Collection<StepHandler> stepHandlers;",
      "right" : "protected Collection<StepHandler> stepHandlers;",
      "info" : "FieldDeclaration[2118-2190]:FieldDeclaration[2118-2190]"
    }, {
      "left" : "protected double stepStart;",
      "right" : "protected double stepStart;",
      "info" : "FieldDeclaration[2196-2259]:FieldDeclaration[2196-2259]"
    }, {
      "left" : "protected double stepSize;",
      "right" : "protected double stepSize;",
      "info" : "FieldDeclaration[2265-2320]:FieldDeclaration[2265-2320]"
    }, {
      "left" : "protected boolean isLastStep;",
      "right" : "protected boolean isLastStep;",
      "info" : "FieldDeclaration[2326-2391]:FieldDeclaration[2326-2391]"
    }, {
      "left" : "protected boolean resetOccurred;",
      "right" : "protected boolean resetOccurred;",
      "info" : "FieldDeclaration[2397-2512]:FieldDeclaration[2397-2512]"
    }, {
      "left" : "private Collection<EventState> eventsStates;",
      "right" : "private Collection<EventState> eventsStates;",
      "info" : "FieldDeclaration[2518-2588]:FieldDeclaration[2518-2588]"
    }, {
      "left" : "private boolean statesInitialized;",
      "right" : "private boolean statesInitialized;",
      "info" : "FieldDeclaration[2594-2682]:FieldDeclaration[2594-2682]"
    }, {
      "left" : "private final String name;",
      "right" : "private final String name;",
      "info" : "FieldDeclaration[2688-2745]:FieldDeclaration[2688-2745]"
    }, {
      "left" : "private Incrementor evaluations;",
      "right" : "private Incrementor evaluations;",
      "info" : "FieldDeclaration[2751-2829]:FieldDeclaration[2751-2829]"
    }, {
      "left" : "private transient ExpandableStatefulODE expandable;",
      "right" : "private transient ExpandableStatefulODE expandable;",
      "info" : "FieldDeclaration[2835-2934]:FieldDeclaration[2835-2934]"
    }, {
      "left" : "public AbstractIntegrator(final String name)",
      "right" : "public AbstractIntegrator(final String name)",
      "info" : "MethodDeclaration[2940-3401]:MethodDeclaration[2940-3401]"
    }, {
      "left" : "protected AbstractIntegrator()",
      "right" : "protected AbstractIntegrator()",
      "info" : "MethodDeclaration[3407-3517]:MethodDeclaration[3407-3517]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[3523-3600]:MethodDeclaration[3523-3600]"
    }, {
      "left" : "public void addStepHandler(final StepHandler handler)",
      "right" : "public void addStepHandler(final StepHandler handler)",
      "info" : "MethodDeclaration[3606-3727]:MethodDeclaration[3606-3727]"
    }, {
      "left" : "public Collection<StepHandler> getStepHandlers()",
      "right" : "public Collection<StepHandler> getStepHandlers()",
      "info" : "MethodDeclaration[3733-3879]:MethodDeclaration[3733-3879]"
    }, {
      "left" : "public void clearStepHandlers()",
      "right" : "public void clearStepHandlers()",
      "info" : "MethodDeclaration[3885-3979]:MethodDeclaration[3885-3979]"
    }, {
      "left" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount)",
      "right" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount)",
      "info" : "MethodDeclaration[3985-4438]:MethodDeclaration[3985-4438]"
    }, {
      "left" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount,\n                                final UnivariateSolver solver)",
      "right" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount,\n                                final UnivariateSolver solver)",
      "info" : "MethodDeclaration[4444-4926]:MethodDeclaration[4444-4926]"
    }, {
      "left" : "public Collection<EventHandler> getEventHandlers()",
      "right" : "public Collection<EventHandler> getEventHandlers()",
      "info" : "MethodDeclaration[4932-5248]:MethodDeclaration[4932-5248]"
    }, {
      "left" : "public void clearEventHandlers()",
      "right" : "public void clearEventHandlers()",
      "info" : "MethodDeclaration[5254-5349]:MethodDeclaration[5254-5349]"
    }, {
      "left" : "public double getCurrentStepStart()",
      "right" : "public double getCurrentStepStart()",
      "info" : "MethodDeclaration[5355-5449]:MethodDeclaration[5355-5449]"
    }, {
      "left" : "public double getCurrentSignedStepsize()",
      "right" : "public double getCurrentSignedStepsize()",
      "info" : "MethodDeclaration[5455-5553]:MethodDeclaration[5455-5553]"
    }, {
      "left" : "public void setMaxEvaluations(int maxEvaluations)",
      "right" : "public void setMaxEvaluations(int maxEvaluations)",
      "info" : "MethodDeclaration[5559-5737]:MethodDeclaration[5559-5737]"
    }, {
      "left" : "public int getMaxEvaluations()",
      "right" : "public int getMaxEvaluations()",
      "info" : "MethodDeclaration[5743-5852]:MethodDeclaration[5743-5852]"
    }, {
      "left" : "public int getEvaluations()",
      "right" : "public int getEvaluations()",
      "info" : "MethodDeclaration[5858-5957]:MethodDeclaration[5858-5957]"
    }, {
      "left" : "protected void initIntegration(final double t0, final double[] y0, final double t)",
      "right" : "protected void initIntegration(final double t0, final double[] y0, final double t)",
      "info" : "MethodDeclaration[5963-6583]:MethodDeclaration[5963-6583]"
    }, {
      "left" : "protected void setEquations(final ExpandableStatefulODE equations)",
      "right" : "protected void setEquations(final ExpandableStatefulODE equations)",
      "info" : "MethodDeclaration[6589-6776]:MethodDeclaration[6589-6776]"
    }, {
      "left" : "public double integrate(final FirstOrderDifferentialEquations equations,\n                            final double t0, final double[] y0, final double t, final double[] y)\n        throws DimensionMismatchException, NumberIsTooSmallException,\n               MaxCountExceededException, NoBracketingException",
      "right" : "public double integrate(final FirstOrderDifferentialEquations equations,\n                            final double t0, final double[] y0, final double t, final double[] y)\n        throws DimensionMismatchException, NumberIsTooSmallException,\n               MaxCountExceededException, NoBracketingException",
      "info" : "MethodDeclaration[6782-7885]:MethodDeclaration[6782-7885]"
    }, {
      "left" : "public abstract void integrate(ExpandableStatefulODE equations, double t)\n        throws NumberIsTooSmallException, DimensionMismatchException,\n               MaxCountExceededException, NoBracketingException;",
      "right" : "public abstract void integrate(ExpandableStatefulODE equations, double t)\n        throws NumberIsTooSmallException, DimensionMismatchException,\n               MaxCountExceededException, NoBracketingException;",
      "info" : "MethodDeclaration[7891-9409]:MethodDeclaration[7891-9409]"
    }, {
      "left" : "public void computeDerivatives(final double t, final double[] y, final double[] yDot)\n        throws MaxCountExceededException, DimensionMismatchException",
      "right" : "public void computeDerivatives(final double t, final double[] y, final double[] yDot)\n        throws MaxCountExceededException, DimensionMismatchException",
      "info" : "MethodDeclaration[9415-10167]:MethodDeclaration[9415-10167]"
    }, {
      "left" : "protected void setStateInitialized(final boolean stateInitialized)",
      "right" : "protected void setStateInitialized(final boolean stateInitialized)",
      "info" : "MethodDeclaration[10173-10620]:MethodDeclaration[10173-10620]"
    }, {
      "left" : "protected double acceptStep(final AbstractStepInterpolator interpolator,\n                                final double[] y, final double[] yDot, final double tEnd)\n        throws MaxCountExceededException, DimensionMismatchException, NoBracketingException",
      "right" : "protected double acceptStep(final AbstractStepInterpolator interpolator,\n                                final double[] y, final double[] yDot, final double tEnd)\n        throws MaxCountExceededException, DimensionMismatchException, NoBracketingException",
      "info" : "MethodDeclaration[10626-16195]:MethodDeclaration[10626-16093]"
    }, {
      "left" : "public int compare(EventState es0, EventState es1)",
      "right" : "public int compare(EventState es0, EventState es1)",
      "info" : "MethodDeclaration[12346-12551]:MethodDeclaration[12346-12551]"
    }, {
      "left" : "protected void sanityChecks(final ExpandableStatefulODE equations, final double t)\n        throws NumberIsTooSmallException, DimensionMismatchException",
      "right" : "protected void sanityChecks(final ExpandableStatefulODE equations, final double t)\n        throws NumberIsTooSmallException, DimensionMismatchException",
      "info" : "MethodDeclaration[16201-17202]:MethodDeclaration[16099-17100]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2038-2044]:Modifier[2038-2044]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2045-2053]:Modifier[2045-2053]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2054-2059]:TYPE_DECLARATION_KIND[2054-2059]"
    }, {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "SimpleName[2060-2078]:SimpleName[2060-2078]"
    }, {
      "left" : "FirstOrderIntegrator",
      "right" : "FirstOrderIntegrator",
      "info" : "SimpleType[2090-2110]:SimpleType[2090-2110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3013-3019]:Modifier[3013-3019]"
    }, {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "SimpleName[3020-3038]:SimpleName[3020-3038]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[3039-3056]:SingleVariableDeclaration[3039-3056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3058-3401]:Block[3058-3401]"
    }, {
      "left" : "this.name = name;",
      "right" : "this.name = name;",
      "info" : "ExpressionStatement[3068-3085]:ExpressionStatement[3068-3085]"
    }, {
      "left" : "stepHandlers = new ArrayList<StepHandler>();",
      "right" : "stepHandlers = new ArrayList<StepHandler>();",
      "info" : "ExpressionStatement[3094-3138]:ExpressionStatement[3094-3138]"
    }, {
      "left" : "stepStart = Double.NaN;",
      "right" : "stepStart = Double.NaN;",
      "info" : "ExpressionStatement[3147-3170]:ExpressionStatement[3147-3170]"
    }, {
      "left" : "stepSize  = Double.NaN;",
      "right" : "stepSize  = Double.NaN;",
      "info" : "ExpressionStatement[3179-3202]:ExpressionStatement[3179-3202]"
    }, {
      "left" : "eventsStates = new ArrayList<EventState>();",
      "right" : "eventsStates = new ArrayList<EventState>();",
      "info" : "ExpressionStatement[3211-3254]:ExpressionStatement[3211-3254]"
    }, {
      "left" : "statesInitialized = false;",
      "right" : "statesInitialized = false;",
      "info" : "ExpressionStatement[3263-3289]:ExpressionStatement[3263-3289]"
    }, {
      "left" : "evaluations = new Incrementor();",
      "right" : "evaluations = new Incrementor();",
      "info" : "ExpressionStatement[3298-3330]:ExpressionStatement[3298-3330]"
    }, {
      "left" : "setMaxEvaluations(-1);",
      "right" : "setMaxEvaluations(-1);",
      "info" : "ExpressionStatement[3339-3361]:ExpressionStatement[3339-3361]"
    }, {
      "left" : "evaluations.resetCount();",
      "right" : "evaluations.resetCount();",
      "info" : "ExpressionStatement[3370-3395]:ExpressionStatement[3370-3395]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3459-3468]:Modifier[3459-3468]"
    }, {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "SimpleName[3469-3487]:SimpleName[3469-3487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3490-3517]:Block[3490-3517]"
    }, {
      "left" : "this(null);",
      "right" : "this(null);",
      "info" : "ConstructorInvocation[3500-3511]:ConstructorInvocation[3500-3511]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3548-3554]:Modifier[3548-3554]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3555-3561]:SimpleType[3555-3561]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[3562-3569]:SimpleName[3562-3569]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3572-3600]:Block[3572-3600]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[3582-3594]:ReturnStatement[3582-3594]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3631-3637]:Modifier[3631-3637]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3638-3642]:PrimitiveType[3638-3642]"
    }, {
      "left" : "addStepHandler",
      "right" : "addStepHandler",
      "info" : "SimpleName[3643-3657]:SimpleName[3643-3657]"
    }, {
      "left" : "final StepHandler handler",
      "right" : "final StepHandler handler",
      "info" : "SingleVariableDeclaration[3658-3683]:SingleVariableDeclaration[3658-3683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3685-3727]:Block[3685-3727]"
    }, {
      "left" : "stepHandlers.add(handler);",
      "right" : "stepHandlers.add(handler);",
      "info" : "ExpressionStatement[3695-3721]:ExpressionStatement[3695-3721]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3758-3764]:Modifier[3758-3764]"
    }, {
      "left" : "Collection<StepHandler>",
      "right" : "Collection<StepHandler>",
      "info" : "ParameterizedType[3765-3788]:ParameterizedType[3765-3788]"
    }, {
      "left" : "getStepHandlers",
      "right" : "getStepHandlers",
      "info" : "SimpleName[3789-3804]:SimpleName[3789-3804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3807-3879]:Block[3807-3879]"
    }, {
      "left" : "return Collections.unmodifiableCollection(stepHandlers);",
      "right" : "return Collections.unmodifiableCollection(stepHandlers);",
      "info" : "ReturnStatement[3817-3873]:ReturnStatement[3817-3873]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3910-3916]:Modifier[3910-3916]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3917-3921]:PrimitiveType[3917-3921]"
    }, {
      "left" : "clearStepHandlers",
      "right" : "clearStepHandlers",
      "info" : "SimpleName[3922-3939]:SimpleName[3922-3939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3942-3979]:Block[3942-3979]"
    }, {
      "left" : "stepHandlers.clear();",
      "right" : "stepHandlers.clear();",
      "info" : "ExpressionStatement[3952-3973]:ExpressionStatement[3952-3973]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4010-4016]:Modifier[4010-4016]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4017-4021]:PrimitiveType[4017-4021]"
    }, {
      "left" : "addEventHandler",
      "right" : "addEventHandler",
      "info" : "SimpleName[4022-4037]:SimpleName[4022-4037]"
    }, {
      "left" : "final EventHandler handler",
      "right" : "final EventHandler handler",
      "info" : "SingleVariableDeclaration[4038-4064]:SingleVariableDeclaration[4038-4064]"
    }, {
      "left" : "final double maxCheckInterval",
      "right" : "final double maxCheckInterval",
      "info" : "SingleVariableDeclaration[4098-4127]:SingleVariableDeclaration[4098-4127]"
    }, {
      "left" : "final double convergence",
      "right" : "final double convergence",
      "info" : "SingleVariableDeclaration[4161-4185]:SingleVariableDeclaration[4161-4185]"
    }, {
      "left" : "final int maxIterationCount",
      "right" : "final int maxIterationCount",
      "info" : "SingleVariableDeclaration[4219-4246]:SingleVariableDeclaration[4219-4246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4248-4438]:Block[4248-4438]"
    }, {
      "left" : "addEventHandler(handler, maxCheckInterval, convergence,\n                        maxIterationCount,\n                        new BracketingNthOrderBrentSolver(convergence, 5));",
      "right" : "addEventHandler(handler, maxCheckInterval, convergence,\n                        maxIterationCount,\n                        new BracketingNthOrderBrentSolver(convergence, 5));",
      "info" : "ExpressionStatement[4258-4432]:ExpressionStatement[4258-4432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4469-4475]:Modifier[4469-4475]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4476-4480]:PrimitiveType[4476-4480]"
    }, {
      "left" : "addEventHandler",
      "right" : "addEventHandler",
      "info" : "SimpleName[4481-4496]:SimpleName[4481-4496]"
    }, {
      "left" : "final EventHandler handler",
      "right" : "final EventHandler handler",
      "info" : "SingleVariableDeclaration[4497-4523]:SingleVariableDeclaration[4497-4523]"
    }, {
      "left" : "final double maxCheckInterval",
      "right" : "final double maxCheckInterval",
      "info" : "SingleVariableDeclaration[4557-4586]:SingleVariableDeclaration[4557-4586]"
    }, {
      "left" : "final double convergence",
      "right" : "final double convergence",
      "info" : "SingleVariableDeclaration[4620-4644]:SingleVariableDeclaration[4620-4644]"
    }, {
      "left" : "final int maxIterationCount",
      "right" : "final int maxIterationCount",
      "info" : "SingleVariableDeclaration[4678-4705]:SingleVariableDeclaration[4678-4705]"
    }, {
      "left" : "final UnivariateSolver solver",
      "right" : "final UnivariateSolver solver",
      "info" : "SingleVariableDeclaration[4739-4768]:SingleVariableDeclaration[4739-4768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4770-4926]:Block[4770-4926]"
    }, {
      "left" : "eventsStates.add(new EventState(handler, maxCheckInterval, convergence,\n                                        maxIterationCount, solver));",
      "right" : "eventsStates.add(new EventState(handler, maxCheckInterval, convergence,\n                                        maxIterationCount, solver));",
      "info" : "ExpressionStatement[4780-4920]:ExpressionStatement[4780-4920]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4957-4963]:Modifier[4957-4963]"
    }, {
      "left" : "Collection<EventHandler>",
      "right" : "Collection<EventHandler>",
      "info" : "ParameterizedType[4964-4988]:ParameterizedType[4964-4988]"
    }, {
      "left" : "getEventHandlers",
      "right" : "getEventHandlers",
      "info" : "SimpleName[4989-5005]:SimpleName[4989-5005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5008-5248]:Block[5008-5248]"
    }, {
      "left" : "final List<EventHandler> list = new ArrayList<EventHandler>();",
      "right" : "final List<EventHandler> list = new ArrayList<EventHandler>();",
      "info" : "VariableDeclarationStatement[5018-5080]:VariableDeclarationStatement[5018-5080]"
    }, {
      "left" : "for (EventState state : eventsStates)",
      "right" : "for (EventState state : eventsStates)",
      "info" : "EnhancedForStatement[5089-5185]:EnhancedForStatement[5089-5185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5127-5185]:Block[5127-5185]"
    }, {
      "left" : "list.add(state.getEventHandler());",
      "right" : "list.add(state.getEventHandler());",
      "info" : "ExpressionStatement[5141-5175]:ExpressionStatement[5141-5175]"
    }, {
      "left" : "return Collections.unmodifiableCollection(list);",
      "right" : "return Collections.unmodifiableCollection(list);",
      "info" : "ReturnStatement[5194-5242]:ReturnStatement[5194-5242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5279-5285]:Modifier[5279-5285]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5286-5290]:PrimitiveType[5286-5290]"
    }, {
      "left" : "clearEventHandlers",
      "right" : "clearEventHandlers",
      "info" : "SimpleName[5291-5309]:SimpleName[5291-5309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5312-5349]:Block[5312-5349]"
    }, {
      "left" : "eventsStates.clear();",
      "right" : "eventsStates.clear();",
      "info" : "ExpressionStatement[5322-5343]:ExpressionStatement[5322-5343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5380-5386]:Modifier[5380-5386]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[5387-5393]:PrimitiveType[5387-5393]"
    }, {
      "left" : "getCurrentStepStart",
      "right" : "getCurrentStepStart",
      "info" : "SimpleName[5394-5413]:SimpleName[5394-5413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5416-5449]:Block[5416-5449]"
    }, {
      "left" : "return stepStart;",
      "right" : "return stepStart;",
      "info" : "ReturnStatement[5426-5443]:ReturnStatement[5426-5443]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5480-5486]:Modifier[5480-5486]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[5487-5493]:PrimitiveType[5487-5493]"
    }, {
      "left" : "getCurrentSignedStepsize",
      "right" : "getCurrentSignedStepsize",
      "info" : "SimpleName[5494-5518]:SimpleName[5494-5518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5521-5553]:Block[5521-5553]"
    }, {
      "left" : "return stepSize;",
      "right" : "return stepSize;",
      "info" : "ReturnStatement[5531-5547]:ReturnStatement[5531-5547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5584-5590]:Modifier[5584-5590]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5591-5595]:PrimitiveType[5591-5595]"
    }, {
      "left" : "setMaxEvaluations",
      "right" : "setMaxEvaluations",
      "info" : "SimpleName[5596-5613]:SimpleName[5596-5613]"
    }, {
      "left" : "int maxEvaluations",
      "right" : "int maxEvaluations",
      "info" : "SingleVariableDeclaration[5614-5632]:SingleVariableDeclaration[5614-5632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5634-5737]:Block[5634-5737]"
    }, {
      "left" : "evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations);",
      "right" : "evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations);",
      "info" : "ExpressionStatement[5644-5731]:ExpressionStatement[5644-5731]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5768-5774]:Modifier[5768-5774]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5775-5778]:PrimitiveType[5775-5778]"
    }, {
      "left" : "getMaxEvaluations",
      "right" : "getMaxEvaluations",
      "info" : "SimpleName[5779-5796]:SimpleName[5779-5796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5799-5852]:Block[5799-5852]"
    }, {
      "left" : "return evaluations.getMaximalCount();",
      "right" : "return evaluations.getMaximalCount();",
      "info" : "ReturnStatement[5809-5846]:ReturnStatement[5809-5846]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5883-5889]:Modifier[5883-5889]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5890-5893]:PrimitiveType[5890-5893]"
    }, {
      "left" : "getEvaluations",
      "right" : "getEvaluations",
      "info" : "SimpleName[5894-5908]:SimpleName[5894-5908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5911-5957]:Block[5911-5957]"
    }, {
      "left" : "return evaluations.getCount();",
      "right" : "return evaluations.getCount();",
      "info" : "ReturnStatement[5921-5951]:ReturnStatement[5921-5951]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6203-6212]:Modifier[6203-6212]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6213-6217]:PrimitiveType[6213-6217]"
    }, {
      "left" : "initIntegration",
      "right" : "initIntegration",
      "info" : "SimpleName[6218-6233]:SimpleName[6218-6233]"
    }, {
      "left" : "final double t0",
      "right" : "final double t0",
      "info" : "SingleVariableDeclaration[6234-6249]:SingleVariableDeclaration[6234-6249]"
    }, {
      "left" : "final double[] y0",
      "right" : "final double[] y0",
      "info" : "SingleVariableDeclaration[6251-6268]:SingleVariableDeclaration[6251-6268]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[6270-6284]:SingleVariableDeclaration[6270-6284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6286-6583]:Block[6286-6583]"
    }, {
      "left" : "evaluations.resetCount();",
      "right" : "evaluations.resetCount();",
      "info" : "ExpressionStatement[6297-6322]:ExpressionStatement[6297-6322]"
    }, {
      "left" : "for (final EventState state : eventsStates)",
      "right" : "for (final EventState state : eventsStates)",
      "info" : "EnhancedForStatement[6332-6440]:EnhancedForStatement[6332-6440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6376-6440]:Block[6376-6440]"
    }, {
      "left" : "state.getEventHandler().init(t0, y0, t);",
      "right" : "state.getEventHandler().init(t0, y0, t);",
      "info" : "ExpressionStatement[6390-6430]:ExpressionStatement[6390-6430]"
    }, {
      "left" : "for (StepHandler handler : stepHandlers)",
      "right" : "for (StepHandler handler : stepHandlers)",
      "info" : "EnhancedForStatement[6450-6539]:EnhancedForStatement[6450-6539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6491-6539]:Block[6491-6539]"
    }, {
      "left" : "handler.init(t0, y0, t);",
      "right" : "handler.init(t0, y0, t);",
      "info" : "ExpressionStatement[6505-6529]:ExpressionStatement[6505-6529]"
    }, {
      "left" : "setStateInitialized(false);",
      "right" : "setStateInitialized(false);",
      "info" : "ExpressionStatement[6549-6576]:ExpressionStatement[6549-6576]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6665-6674]:Modifier[6665-6674]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6675-6679]:PrimitiveType[6675-6679]"
    }, {
      "left" : "setEquations",
      "right" : "setEquations",
      "info" : "SimpleName[6680-6692]:SimpleName[6680-6692]"
    }, {
      "left" : "final ExpandableStatefulODE equations",
      "right" : "final ExpandableStatefulODE equations",
      "info" : "SingleVariableDeclaration[6693-6730]:SingleVariableDeclaration[6693-6730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6732-6776]:Block[6732-6776]"
    }, {
      "left" : "this.expandable = equations;",
      "right" : "this.expandable = equations;",
      "info" : "ExpressionStatement[6742-6770]:ExpressionStatement[6742-6770]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6807-6813]:Modifier[6807-6813]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6814-6820]:PrimitiveType[6814-6820]"
    }, {
      "left" : "integrate",
      "right" : "integrate",
      "info" : "SimpleName[6821-6830]:SimpleName[6821-6830]"
    }, {
      "left" : "final FirstOrderDifferentialEquations equations",
      "right" : "final FirstOrderDifferentialEquations equations",
      "info" : "SingleVariableDeclaration[6831-6878]:SingleVariableDeclaration[6831-6878]"
    }, {
      "left" : "final double t0",
      "right" : "final double t0",
      "info" : "SingleVariableDeclaration[6908-6923]:SingleVariableDeclaration[6908-6923]"
    }, {
      "left" : "final double[] y0",
      "right" : "final double[] y0",
      "info" : "SingleVariableDeclaration[6925-6942]:SingleVariableDeclaration[6925-6942]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[6944-6958]:SingleVariableDeclaration[6944-6958]"
    }, {
      "left" : "final double[] y",
      "right" : "final double[] y",
      "info" : "SingleVariableDeclaration[6960-6976]:SingleVariableDeclaration[6960-6976]"
    }, {
      "left" : "DimensionMismatchException",
      "right" : "DimensionMismatchException",
      "info" : "SimpleType[6993-7019]:SimpleType[6993-7019]"
    }, {
      "left" : "NumberIsTooSmallException",
      "right" : "NumberIsTooSmallException",
      "info" : "SimpleType[7021-7046]:SimpleType[7021-7046]"
    }, {
      "left" : "MaxCountExceededException",
      "right" : "MaxCountExceededException",
      "info" : "SimpleType[7063-7088]:SimpleType[7063-7088]"
    }, {
      "left" : "NoBracketingException",
      "right" : "NoBracketingException",
      "info" : "SimpleType[7090-7111]:SimpleType[7090-7111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7112-7885]:Block[7112-7885]"
    }, {
      "left" : "if (y0.length != equations.getDimension())",
      "right" : "if (y0.length != equations.getDimension())",
      "info" : "IfStatement[7123-7264]:IfStatement[7123-7264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7166-7264]:Block[7166-7264]"
    }, {
      "left" : "throw new DimensionMismatchException(y0.length, equations.getDimension());",
      "right" : "throw new DimensionMismatchException(y0.length, equations.getDimension());",
      "info" : "ThrowStatement[7180-7254]:ThrowStatement[7180-7254]"
    }, {
      "left" : "if (y.length != equations.getDimension())",
      "right" : "if (y.length != equations.getDimension())",
      "info" : "IfStatement[7273-7412]:IfStatement[7273-7412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7315-7412]:Block[7315-7412]"
    }, {
      "left" : "throw new DimensionMismatchException(y.length, equations.getDimension());",
      "right" : "throw new DimensionMismatchException(y.length, equations.getDimension());",
      "info" : "ThrowStatement[7329-7402]:ThrowStatement[7329-7402]"
    }, {
      "left" : "final ExpandableStatefulODE expandableODE = new ExpandableStatefulODE(equations);",
      "right" : "final ExpandableStatefulODE expandableODE = new ExpandableStatefulODE(equations);",
      "info" : "VariableDeclarationStatement[7471-7552]:VariableDeclarationStatement[7471-7552]"
    }, {
      "left" : "expandableODE.setTime(t0);",
      "right" : "expandableODE.setTime(t0);",
      "info" : "ExpressionStatement[7561-7587]:ExpressionStatement[7561-7587]"
    }, {
      "left" : "expandableODE.setPrimaryState(y0);",
      "right" : "expandableODE.setPrimaryState(y0);",
      "info" : "ExpressionStatement[7596-7630]:ExpressionStatement[7596-7630]"
    }, {
      "left" : "integrate(expandableODE, t);",
      "right" : "integrate(expandableODE, t);",
      "info" : "ExpressionStatement[7671-7699]:ExpressionStatement[7671-7699]"
    }, {
      "left" : "System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0, y.length);",
      "right" : "System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0, y.length);",
      "info" : "ExpressionStatement[7769-7838]:ExpressionStatement[7769-7838]"
    }, {
      "left" : "return expandableODE.getTime();",
      "right" : "return expandableODE.getTime();",
      "info" : "ReturnStatement[7847-7878]:ReturnStatement[7847-7878]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9201-9207]:Modifier[9201-9207]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[9208-9216]:Modifier[9208-9216]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9217-9221]:PrimitiveType[9217-9221]"
    }, {
      "left" : "integrate",
      "right" : "integrate",
      "info" : "SimpleName[9222-9231]:SimpleName[9222-9231]"
    }, {
      "left" : "ExpandableStatefulODE equations",
      "right" : "ExpandableStatefulODE equations",
      "info" : "SingleVariableDeclaration[9232-9263]:SingleVariableDeclaration[9232-9263]"
    }, {
      "left" : "double t",
      "right" : "double t",
      "info" : "SingleVariableDeclaration[9265-9273]:SingleVariableDeclaration[9265-9273]"
    }, {
      "left" : "NumberIsTooSmallException",
      "right" : "NumberIsTooSmallException",
      "info" : "SimpleType[9290-9315]:SimpleType[9290-9315]"
    }, {
      "left" : "DimensionMismatchException",
      "right" : "DimensionMismatchException",
      "info" : "SimpleType[9317-9343]:SimpleType[9317-9343]"
    }, {
      "left" : "MaxCountExceededException",
      "right" : "MaxCountExceededException",
      "info" : "SimpleType[9360-9385]:SimpleType[9360-9385]"
    }, {
      "left" : "NoBracketingException",
      "right" : "NoBracketingException",
      "info" : "SimpleType[9387-9408]:SimpleType[9387-9408]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9916-9922]:Modifier[9916-9922]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9923-9927]:PrimitiveType[9923-9927]"
    }, {
      "left" : "computeDerivatives",
      "right" : "computeDerivatives",
      "info" : "SimpleName[9928-9946]:SimpleName[9928-9946]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[9947-9961]:SingleVariableDeclaration[9947-9961]"
    }, {
      "left" : "final double[] y",
      "right" : "final double[] y",
      "info" : "SingleVariableDeclaration[9963-9979]:SingleVariableDeclaration[9963-9979]"
    }, {
      "left" : "final double[] yDot",
      "right" : "final double[] yDot",
      "info" : "SingleVariableDeclaration[9981-10000]:SingleVariableDeclaration[9981-10000]"
    }, {
      "left" : "MaxCountExceededException",
      "right" : "MaxCountExceededException",
      "info" : "SimpleType[10017-10042]:SimpleType[10017-10042]"
    }, {
      "left" : "DimensionMismatchException",
      "right" : "DimensionMismatchException",
      "info" : "SimpleType[10044-10070]:SimpleType[10044-10070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10071-10167]:Block[10071-10167]"
    }, {
      "left" : "evaluations.incrementCount();",
      "right" : "evaluations.incrementCount();",
      "info" : "ExpressionStatement[10081-10110]:ExpressionStatement[10081-10110]"
    }, {
      "left" : "expandable.computeDerivatives(t, y, yDot);",
      "right" : "expandable.computeDerivatives(t, y, yDot);",
      "info" : "ExpressionStatement[10119-10161]:ExpressionStatement[10119-10161]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10495-10504]:Modifier[10495-10504]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10505-10509]:PrimitiveType[10505-10509]"
    }, {
      "left" : "setStateInitialized",
      "right" : "setStateInitialized",
      "info" : "SimpleName[10510-10529]:SimpleName[10510-10529]"
    }, {
      "left" : "final boolean stateInitialized",
      "right" : "final boolean stateInitialized",
      "info" : "SingleVariableDeclaration[10530-10560]:SingleVariableDeclaration[10530-10560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10562-10620]:Block[10562-10620]"
    }, {
      "left" : "this.statesInitialized = stateInitialized;",
      "right" : "this.statesInitialized = stateInitialized;",
      "info" : "ExpressionStatement[10572-10614]:ExpressionStatement[10572-10614]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11397-11406]:Modifier[11397-11406]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[11407-11413]:PrimitiveType[11407-11413]"
    }, {
      "left" : "acceptStep",
      "right" : "acceptStep",
      "info" : "SimpleName[11414-11424]:SimpleName[11414-11424]"
    }, {
      "left" : "final AbstractStepInterpolator interpolator",
      "right" : "final AbstractStepInterpolator interpolator",
      "info" : "SingleVariableDeclaration[11425-11468]:SingleVariableDeclaration[11425-11468]"
    }, {
      "left" : "final double[] y",
      "right" : "final double[] y",
      "info" : "SingleVariableDeclaration[11502-11518]:SingleVariableDeclaration[11502-11518]"
    }, {
      "left" : "final double[] yDot",
      "right" : "final double[] yDot",
      "info" : "SingleVariableDeclaration[11520-11539]:SingleVariableDeclaration[11520-11539]"
    }, {
      "left" : "final double tEnd",
      "right" : "final double tEnd",
      "info" : "SingleVariableDeclaration[11541-11558]:SingleVariableDeclaration[11541-11558]"
    }, {
      "left" : "MaxCountExceededException",
      "right" : "MaxCountExceededException",
      "info" : "SimpleType[11575-11600]:SimpleType[11575-11600]"
    }, {
      "left" : "DimensionMismatchException",
      "right" : "DimensionMismatchException",
      "info" : "SimpleType[11602-11628]:SimpleType[11602-11628]"
    }, {
      "left" : "NoBracketingException",
      "right" : "NoBracketingException",
      "info" : "SimpleType[11630-11651]:SimpleType[11630-11651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11652-16195]:Block[11652-16093]"
    }, {
      "left" : "double previousT = interpolator.getGlobalPreviousTime();",
      "right" : "double previousT = interpolator.getGlobalPreviousTime();",
      "info" : "VariableDeclarationStatement[11667-11723]:VariableDeclarationStatement[11667-11723]"
    }, {
      "left" : "final double currentT = interpolator.getGlobalCurrentTime();",
      "right" : "final double currentT = interpolator.getGlobalCurrentTime();",
      "info" : "VariableDeclarationStatement[11736-11796]:VariableDeclarationStatement[11736-11796]"
    }, {
      "left" : "if (! statesInitialized)",
      "right" : "if (! statesInitialized)",
      "info" : "IfStatement[11864-12079]:IfStatement[11864-12079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11889-12079]:Block[11889-12079]"
    }, {
      "left" : "for (EventState state : eventsStates)",
      "right" : "for (EventState state : eventsStates)",
      "info" : "EnhancedForStatement[11907-12023]:EnhancedForStatement[11907-12023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11945-12023]:Block[11945-12023]"
    }, {
      "left" : "state.reinitializeBegin(interpolator);",
      "right" : "state.reinitializeBegin(interpolator);",
      "info" : "ExpressionStatement[11967-12005]:ExpressionStatement[11967-12005]"
    }, {
      "left" : "statesInitialized = true;",
      "right" : "statesInitialized = true;",
      "info" : "ExpressionStatement[12040-12065]:ExpressionStatement[12040-12065]"
    }, {
      "left" : "final int orderingSign = interpolator.isForward() ? +1 : -1;",
      "right" : "final int orderingSign = interpolator.isForward() ? +1 : -1;",
      "info" : "VariableDeclarationStatement[12162-12222]:VariableDeclarationStatement[12162-12222]"
    }, {
      "left" : "SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {\n\n                /** {@inheritDoc} */\n                public int compare(EventState es0, EventState es1) {\n                    return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());\n                }\n\n            });",
      "right" : "SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {\n\n                /** {@inheritDoc} */\n                public int compare(EventState es0, EventState es1) {\n                    return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());\n                }\n\n            });",
      "info" : "VariableDeclarationStatement[12235-12568]:VariableDeclarationStatement[12235-12568]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12383-12389]:Modifier[12383-12389]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12390-12393]:PrimitiveType[12390-12393]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[12394-12401]:SimpleName[12394-12401]"
    }, {
      "left" : "EventState es0",
      "right" : "EventState es0",
      "info" : "SingleVariableDeclaration[12402-12416]:SingleVariableDeclaration[12402-12416]"
    }, {
      "left" : "EventState es1",
      "right" : "EventState es1",
      "info" : "SingleVariableDeclaration[12418-12432]:SingleVariableDeclaration[12418-12432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12434-12551]:Block[12434-12551]"
    }, {
      "left" : "return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());",
      "right" : "return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());",
      "info" : "ReturnStatement[12456-12533]:ReturnStatement[12456-12533]"
    }, {
      "left" : "for (final EventState state : eventsStates)",
      "right" : "for (final EventState state : eventsStates)",
      "info" : "EnhancedForStatement[12582-12826]:EnhancedForStatement[12582-12826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12626-12826]:Block[12626-12826]"
    }, {
      "left" : "if (state.evaluateStep(interpolator))",
      "right" : "if (state.evaluateStep(interpolator))",
      "info" : "IfStatement[12644-12812]:IfStatement[12644-12812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12682-12812]:Block[12682-12812]"
    }, {
      "left" : "occuringEvents.add(state);",
      "right" : "occuringEvents.add(state);",
      "info" : "ExpressionStatement[12768-12794]:ExpressionStatement[12768-12794]"
    }, {
      "left" : "while (!occuringEvents.isEmpty())",
      "right" : "while (!occuringEvents.isEmpty())",
      "info" : "WhileStatement[12840-15496]:WhileStatement[12840-15394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12874-15496]:Block[12874-15394]"
    }, {
      "left" : "final Iterator<EventState> iterator = occuringEvents.iterator();",
      "right" : "final Iterator<EventState> iterator = occuringEvents.iterator();",
      "info" : "VariableDeclarationStatement[12951-13015]:VariableDeclarationStatement[12951-13015]"
    }, {
      "left" : "final EventState currentEvent = iterator.next();",
      "right" : "final EventState currentEvent = iterator.next();",
      "info" : "VariableDeclarationStatement[13032-13080]:VariableDeclarationStatement[13032-13080]"
    }, {
      "left" : "iterator.remove();",
      "right" : "iterator.remove();",
      "info" : "ExpressionStatement[13097-13115]:ExpressionStatement[13097-13115]"
    }, {
      "left" : "final double eventT = currentEvent.getEventTime();",
      "right" : "final double eventT = currentEvent.getEventTime();",
      "info" : "VariableDeclarationStatement[13225-13275]:VariableDeclarationStatement[13225-13275]"
    }, {
      "left" : "interpolator.setSoftPreviousTime(previousT);",
      "right" : "interpolator.setSoftPreviousTime(previousT);",
      "info" : "ExpressionStatement[13292-13336]:ExpressionStatement[13292-13336]"
    }, {
      "left" : "interpolator.setSoftCurrentTime(eventT);",
      "right" : "interpolator.setSoftCurrentTime(eventT);",
      "info" : "ExpressionStatement[13353-13393]:ExpressionStatement[13353-13393]"
    }, {
      "left" : "interpolator.setInterpolatedTime(eventT);",
      "right" : "interpolator.setInterpolatedTime(eventT);",
      "info" : "ExpressionStatement[13454-13495]:ExpressionStatement[13454-13495]"
    }, {
      "left" : "final double[] eventY = interpolator.getInterpolatedState().clone();",
      "right" : "final double[] eventY = interpolator.getInterpolatedState().clone();",
      "info" : "VariableDeclarationStatement[13512-13580]:VariableDeclarationStatement[13512-13580]"
    }, {
      "left" : "currentEvent",
      "right" : "state",
      "info" : "SimpleName[13658-13670]:SimpleName[13724-13729]"
    }, {
      "left" : "currentEvent.stepAccepted(eventT, eventY);",
      "right" : "state.stepAccepted(eventT, eventY);",
      "info" : "ExpressionStatement[13658-13700]:ExpressionStatement[13724-13759]"
    }, {
      "left" : "for (final StepHandler handler : stepHandlers)",
      "right" : "for (final StepHandler handler : stepHandlers)",
      "info" : "EnhancedForStatement[13838-13970]:EnhancedForStatement[13926-14058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13885-13970]:Block[13973-14058]"
    }, {
      "left" : "handler.handleStep(interpolator, isLastStep);",
      "right" : "handler.handleStep(interpolator, isLastStep);",
      "info" : "ExpressionStatement[13907-13952]:ExpressionStatement[13995-14040]"
    }, {
      "left" : "if (isLastStep)",
      "right" : "if (isLastStep)",
      "info" : "IfStatement[13988-14340]:IfStatement[14076-14270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14004-14340]:Block[14092-14270]"
    }, {
      "left" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "right" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "info" : "ExpressionStatement[14085-14129]:ExpressionStatement[14173-14217]"
    }, {
      "left" : "for (final EventState remaining : occuringEvents)",
      "right" : "for (final EventState state : eventsStates)",
      "info" : "EnhancedForStatement[14150-14287]:EnhancedForStatement[14331-14469]"
    }, {
      "left" : "final EventState remaining",
      "right" : "final EventState state",
      "info" : "SingleVariableDeclaration[14155-14181]:SingleVariableDeclaration[13663-13685]"
    }, {
      "left" : "remaining",
      "right" : "state",
      "info" : "SimpleName[14172-14181]:SimpleName[13680-13685]"
    }, {
      "left" : "occuringEvents",
      "right" : "eventsStates",
      "info" : "SimpleName[14184-14198]:SimpleName[14361-14373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14200-14287]:Block[14375-14469]"
    }, {
      "left" : "remaining",
      "right" : "state",
      "info" : "SimpleName[14226-14235]:SimpleName[14423-14428]"
    }, {
      "left" : "remaining.stepAccepted(eventT, eventY)",
      "right" : "state.reset(eventT, eventY)",
      "info" : "MethodInvocation[14226-14264]:MethodInvocation[14423-14450]"
    }, {
      "left" : "stepAccepted",
      "right" : "reset",
      "info" : "SimpleName[14236-14248]:SimpleName[14429-14434]"
    }, {
      "left" : "return eventT;",
      "right" : "return eventT;",
      "info" : "ReturnStatement[14308-14322]:ReturnStatement[14238-14252]"
    }, {
      "left" : "if (needReset)",
      "right" : "if (needReset)",
      "info" : "IfStatement[14430-14967]:IfStatement[14486-14865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14445-14967]:Block[14501-14865]"
    }, {
      "left" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "right" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "info" : "ExpressionStatement[14613-14657]:ExpressionStatement[14669-14713]"
    }, {
      "left" : "computeDerivatives(eventT, y, yDot);",
      "right" : "computeDerivatives(eventT, y, yDot);",
      "info" : "ExpressionStatement[14678-14714]:ExpressionStatement[14734-14770]"
    }, {
      "left" : "resetOccurred = true;",
      "right" : "resetOccurred = true;",
      "info" : "ExpressionStatement[14735-14756]:ExpressionStatement[14791-14812]"
    }, {
      "left" : "final EventState remaining",
      "right" : "final EventState state",
      "info" : "SingleVariableDeclaration[14782-14808]:SingleVariableDeclaration[14336-14358]"
    }, {
      "left" : "remaining",
      "right" : "state",
      "info" : "SimpleName[14799-14808]:SimpleName[14353-14358]"
    }, {
      "left" : "return eventT;",
      "right" : "return eventT;",
      "info" : "ReturnStatement[14935-14949]:ReturnStatement[14833-14847]"
    }, {
      "left" : "previousT = eventT;",
      "right" : "previousT = eventT;",
      "info" : "ExpressionStatement[15055-15074]:ExpressionStatement[14953-14972]"
    }, {
      "left" : "interpolator.setSoftPreviousTime(eventT);",
      "right" : "interpolator.setSoftPreviousTime(eventT);",
      "info" : "ExpressionStatement[15091-15132]:ExpressionStatement[14989-15030]"
    }, {
      "left" : "interpolator.setSoftCurrentTime(currentT);",
      "right" : "interpolator.setSoftCurrentTime(currentT);",
      "info" : "ExpressionStatement[15149-15191]:ExpressionStatement[15047-15089]"
    }, {
      "left" : "if (currentEvent.evaluateStep(interpolator))",
      "right" : "if (currentEvent.evaluateStep(interpolator))",
      "info" : "IfStatement[15299-15481]:IfStatement[15197-15379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15344-15481]:Block[15242-15379]"
    }, {
      "left" : "occuringEvents.add(currentEvent);",
      "right" : "occuringEvents.add(currentEvent);",
      "info" : "ExpressionStatement[15430-15463]:ExpressionStatement[15328-15361]"
    }, {
      "left" : "interpolator.setInterpolatedTime(currentT);",
      "right" : "interpolator.setInterpolatedTime(currentT);",
      "info" : "ExpressionStatement[15569-15612]:ExpressionStatement[15467-15510]"
    }, {
      "left" : "final double[] currentY = interpolator.getInterpolatedState();",
      "right" : "final double[] currentY = interpolator.getInterpolatedState();",
      "info" : "VariableDeclarationStatement[15625-15687]:VariableDeclarationStatement[15523-15585]"
    }, {
      "left" : "for (final EventState state : eventsStates)",
      "right" : "for (final EventState state : eventsStates)",
      "info" : "EnhancedForStatement[15700-15872]:EnhancedForStatement[15598-15770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15744-15872]:Block[15642-15770]"
    }, {
      "left" : "state.stepAccepted(currentT, currentY);",
      "right" : "state.stepAccepted(currentT, currentY);",
      "info" : "ExpressionStatement[15762-15801]:ExpressionStatement[15660-15699]"
    }, {
      "left" : "isLastStep = isLastStep || state.stop();",
      "right" : "isLastStep = isLastStep || state.stop();",
      "info" : "ExpressionStatement[15818-15858]:ExpressionStatement[15716-15756]"
    }, {
      "left" : "isLastStep = isLastStep || Precision.equals(currentT, tEnd, 1);",
      "right" : "isLastStep = isLastStep || Precision.equals(currentT, tEnd, 1);",
      "info" : "ExpressionStatement[15885-15948]:ExpressionStatement[15783-15846]"
    }, {
      "left" : "for (StepHandler handler : stepHandlers)",
      "right" : "for (StepHandler handler : stepHandlers)",
      "info" : "EnhancedForStatement[16040-16158]:EnhancedForStatement[15938-16056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16081-16158]:Block[15979-16056]"
    }, {
      "left" : "handler.handleStep(interpolator, isLastStep);",
      "right" : "handler.handleStep(interpolator, isLastStep);",
      "info" : "ExpressionStatement[16099-16144]:ExpressionStatement[15997-16042]"
    }, {
      "left" : "return currentT;",
      "right" : "return currentT;",
      "info" : "ReturnStatement[16172-16188]:ReturnStatement[16070-16086]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[16581-16590]:Modifier[16479-16488]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16591-16595]:PrimitiveType[16489-16493]"
    }, {
      "left" : "sanityChecks",
      "right" : "sanityChecks",
      "info" : "SimpleName[16596-16608]:SimpleName[16494-16506]"
    }, {
      "left" : "final ExpandableStatefulODE equations",
      "right" : "final ExpandableStatefulODE equations",
      "info" : "SingleVariableDeclaration[16609-16646]:SingleVariableDeclaration[16507-16544]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[16648-16662]:SingleVariableDeclaration[16546-16560]"
    }, {
      "left" : "NumberIsTooSmallException",
      "right" : "NumberIsTooSmallException",
      "info" : "SimpleType[16679-16704]:SimpleType[16577-16602]"
    }, {
      "left" : "DimensionMismatchException",
      "right" : "DimensionMismatchException",
      "info" : "SimpleType[16706-16732]:SimpleType[16604-16630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16733-17202]:Block[16631-17100]"
    }, {
      "left" : "final double threshold = 1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()),\n                                                                  FastMath.abs(t)));",
      "right" : "final double threshold = 1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()),\n                                                                  FastMath.abs(t)));",
      "info" : "VariableDeclarationStatement[16744-16921]:VariableDeclarationStatement[16642-16819]"
    }, {
      "left" : "final double dt = FastMath.abs(equations.getTime() - t);",
      "right" : "final double dt = FastMath.abs(equations.getTime() - t);",
      "info" : "VariableDeclarationStatement[16930-16986]:VariableDeclarationStatement[16828-16884]"
    }, {
      "left" : "if (dt <= threshold)",
      "right" : "if (dt <= threshold)",
      "info" : "IfStatement[16995-17195]:IfStatement[16893-17093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17016-17195]:Block[16914-17093]"
    }, {
      "left" : "throw new NumberIsTooSmallException(LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,\n                                                dt, threshold, false);",
      "right" : "throw new NumberIsTooSmallException(LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,\n                                                dt, threshold, false);",
      "info" : "ThrowStatement[17030-17185]:ThrowStatement[16928-17083]"
    } ]
  },
  "interFileMappings" : { }
}