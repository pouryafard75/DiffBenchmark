{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "PreviewWorldScreen",
      "right" : "PreviewWorldScreen",
      "info" : "TypeDeclaration[2972-10220]:TypeDeclaration[2972-10536]"
    }, {
      "left" : "public static final ResourceUrn ASSET_URI = new ResourceUrn(\"engine:previewWorldScreen\");",
      "right" : "public static final ResourceUrn ASSET_URI = new ResourceUrn(\"engine:previewWorldScreen\");",
      "info" : "FieldDeclaration[3161-3250]:FieldDeclaration[3161-3250]"
    }, {
      "left" : "private static final Logger logger = LoggerFactory.getLogger(PreviewWorldScreen.class);",
      "right" : "private static final Logger logger = LoggerFactory.getLogger(PreviewWorldScreen.class);",
      "info" : "FieldDeclaration[3256-3343]:FieldDeclaration[3256-3343]"
    }, {
      "left" : "@In\n    private ModuleManager moduleManager;",
      "right" : "@In\n    private ModuleManager moduleManager;",
      "info" : "FieldDeclaration[3349-3393]:FieldDeclaration[3349-3393]"
    }, {
      "left" : "@In\n    private ModuleAwareAssetTypeManager assetTypeManager;",
      "right" : "@In\n    private ModuleAwareAssetTypeManager assetTypeManager;",
      "info" : "FieldDeclaration[3399-3460]:FieldDeclaration[3399-3460]"
    }, {
      "left" : "@In\n    private WorldGeneratorManager worldGeneratorManager;",
      "right" : "@In\n    private WorldGeneratorManager worldGeneratorManager;",
      "info" : "FieldDeclaration[3466-3526]:FieldDeclaration[3466-3526]"
    }, {
      "left" : "@In\n    private Config config;",
      "right" : "@In\n    private Config config;",
      "info" : "FieldDeclaration[3532-3562]:FieldDeclaration[3532-3562]"
    }, {
      "left" : "@In\n    private Context context;",
      "right" : "@In\n    private Context context;",
      "info" : "FieldDeclaration[3568-3600]:FieldDeclaration[3568-3600]"
    }, {
      "left" : "private WorldGenerator worldGenerator;",
      "right" : "private WorldGenerator worldGenerator;",
      "info" : "FieldDeclaration[3606-3644]:FieldDeclaration[3606-3644]"
    }, {
      "left" : "private UIImage previewImage;",
      "right" : "private UIImage previewImage;",
      "info" : "FieldDeclaration[3650-3679]:FieldDeclaration[3650-3679]"
    }, {
      "left" : "private UISlider zoomSlider;",
      "right" : "private UISlider zoomSlider;",
      "info" : "FieldDeclaration[3684-3712]:FieldDeclaration[3684-3712]"
    }, {
      "left" : "private UIButton applyButton;",
      "right" : "private UIButton applyButton;",
      "info" : "FieldDeclaration[3717-3746]:FieldDeclaration[3717-3746]"
    }, {
      "left" : "private UIText seed;",
      "right" : "private UIText seed;",
      "info" : "FieldDeclaration[3752-3772]:FieldDeclaration[3752-3772]"
    }, {
      "left" : "private PreviewGenerator previewGen;",
      "right" : "private PreviewGenerator previewGen;",
      "info" : "FieldDeclaration[3778-3814]:FieldDeclaration[3778-3814]"
    }, {
      "left" : "private Context subContext;",
      "right" : "private Context subContext;",
      "info" : "FieldDeclaration[3821-3848]:FieldDeclaration[3821-3848]"
    }, {
      "left" : "private ModuleEnvironment environment;",
      "right" : "private ModuleEnvironment environment;",
      "info" : "FieldDeclaration[3853-3891]:FieldDeclaration[3853-3891]"
    }, {
      "left" : "private Texture texture;",
      "right" : "private Texture texture;",
      "info" : "FieldDeclaration[3897-3921]:FieldDeclaration[3897-3921]"
    }, {
      "left" : "private boolean triggerUpdate;",
      "right" : "private boolean triggerUpdate;",
      "info" : "FieldDeclaration[3927-3957]:FieldDeclaration[3927-3957]"
    }, {
      "left" : "public PreviewWorldScreen()",
      "right" : "public PreviewWorldScreen()",
      "info" : "MethodDeclaration[3963-3998]:MethodDeclaration[4003-4038]"
    }, {
      "left" : "public void onOpened()",
      "right" : "public void onOpened()",
      "info" : "MethodDeclaration[4004-5682]:MethodDeclaration[4044-5364]"
    }, {
      "left" : "private void genTexture()",
      "right" : "private void genTexture()",
      "info" : "MethodDeclaration[5688-6283]:MethodDeclaration[6044-6639]"
    }, {
      "left" : "public void update(float delta)",
      "right" : "public void update(float delta)",
      "info" : "MethodDeclaration[6289-6475]:MethodDeclaration[6645-6831]"
    }, {
      "left" : "private void configureProperties()",
      "right" : "private void configureProperties()",
      "info" : "MethodDeclaration[6481-7519]:MethodDeclaration[6837-7875]"
    }, {
      "left" : "public void onClosed()",
      "right" : "public void onClosed()",
      "info" : "MethodDeclaration[7525-8308]:MethodDeclaration[7881-8590]"
    }, {
      "left" : "public void initialise()",
      "right" : "public void initialise()",
      "info" : "MethodDeclaration[8314-9084]:MethodDeclaration[8596-9366]"
    }, {
      "left" : "public void onActivated(UIWidget widget)",
      "right" : "public void onActivated(UIWidget widget)",
      "info" : "MethodDeclaration[8706-8829]:MethodDeclaration[8988-9111]"
    }, {
      "left" : "public void onActivated(UIWidget button)",
      "right" : "public void onActivated(UIWidget button)",
      "info" : "MethodDeclaration[8946-9066]:MethodDeclaration[9228-9348]"
    }, {
      "left" : "public boolean isLowerLayerVisible()",
      "right" : "public boolean isLowerLayerVisible()",
      "info" : "MethodDeclaration[9090-9170]:MethodDeclaration[9372-9452]"
    }, {
      "left" : "public void bindSeed(Binding<String> binding)",
      "right" : "public void bindSeed(Binding<String> binding)",
      "info" : "MethodDeclaration[9176-9303]:MethodDeclaration[9458-9585]"
    }, {
      "left" : "private void updatePreview()",
      "right" : "private void updatePreview()",
      "info" : "MethodDeclaration[9309-10218]:MethodDeclaration[9591-10534]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3098-3104]:Modifier[3098-3104]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3105-3110]:TYPE_DECLARATION_KIND[3105-3110]"
    }, {
      "left" : "PreviewWorldScreen",
      "right" : "PreviewWorldScreen",
      "info" : "SimpleName[3111-3129]:SimpleName[3111-3129]"
    }, {
      "left" : "CoreScreenLayer",
      "right" : "CoreScreenLayer",
      "info" : "SimpleType[3138-3153]:SimpleType[3138-3153]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3963-3969]:Modifier[4003-4009]"
    }, {
      "left" : "PreviewWorldScreen",
      "right" : "PreviewWorldScreen",
      "info" : "SimpleName[3970-3988]:SimpleName[4010-4028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3991-3998]:Block[4031-4038]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4004-4013]:MarkerAnnotation[4044-4053]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4018-4024]:Modifier[4058-4064]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4025-4029]:PrimitiveType[4065-4069]"
    }, {
      "left" : "onOpened",
      "right" : "onOpened",
      "info" : "SimpleName[4030-4038]:SimpleName[4070-4078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4041-5682]:Block[4081-5364]"
    }, {
      "left" : "super.onOpened();",
      "right" : "super.onOpened();",
      "info" : "ExpressionStatement[4051-4068]:ExpressionStatement[4091-4108]"
    }, {
      "left" : "SimpleUri worldGenUri = config.getWorldGeneration().getDefaultGenerator();",
      "right" : "SimpleUri worldGenUri = config.getWorldGeneration().getDefaultGenerator();",
      "info" : "VariableDeclarationStatement[4078-4152]:VariableDeclarationStatement[4118-4192]"
    }, {
      "left" : "Name moduleName = worldGenUri.getModuleName();",
      "right" : "Name moduleName = worldGenUri.getModuleName();",
      "info" : "VariableDeclarationStatement[4161-4207]:VariableDeclarationStatement[4201-4247]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4217-5676]:TryStatement[4257-5358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4221-5449]:Block[4261-5131]"
    }, {
      "left" : "DependencyResolver resolver = new DependencyResolver(moduleManager.getRegistry());",
      "right" : "DependencyResolver resolver = new DependencyResolver(moduleManager.getRegistry());",
      "info" : "VariableDeclarationStatement[4235-4317]:VariableDeclarationStatement[4275-4357]"
    }, {
      "left" : "ResolutionResult result = resolver.resolve(moduleName);",
      "right" : "ResolutionResult result = resolver.resolve(moduleName);",
      "info" : "VariableDeclarationStatement[4330-4385]:VariableDeclarationStatement[4370-4425]"
    }, {
      "left" : "if (result.isSuccess())",
      "right" : "if (result.isSuccess())",
      "info" : "IfStatement[4398-5438]:IfStatement[4438-5120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4422-5337]:Block[4462-5019]"
    }, {
      "left" : "subContext = new ContextImpl(context);",
      "right" : "subContext = new ContextImpl(context);",
      "info" : "ExpressionStatement[4440-4478]:ExpressionStatement[4480-4518]"
    }, {
      "left" : "CoreRegistry.setContext(subContext);",
      "right" : "CoreRegistry.setContext(subContext);",
      "info" : "ExpressionStatement[4495-4531]:ExpressionStatement[4535-4571]"
    }, {
      "left" : "environment = moduleManager.loadEnvironment(result.getModules(), false);",
      "right" : "environment = moduleManager.loadEnvironment(result.getModules(), false);",
      "info" : "ExpressionStatement[4548-4620]:ExpressionStatement[4588-4660]"
    }, {
      "left" : "subContext.put(WorldGeneratorPluginLibrary.class, new TempWorldGeneratorPluginLibrary(environment, subContext));",
      "right" : "subContext.put(WorldGeneratorPluginLibrary.class, new TempWorldGeneratorPluginLibrary(environment, subContext));",
      "info" : "ExpressionStatement[4637-4749]:ExpressionStatement[4677-4789]"
    }, {
      "left" : "EnvironmentSwitchHandler environmentSwitchHandler = context.get(EnvironmentSwitchHandler.class);",
      "right" : "EnvironmentSwitchHandler environmentSwitchHandler = context.get(EnvironmentSwitchHandler.class);",
      "info" : "VariableDeclarationStatement[4766-4862]:VariableDeclarationStatement[5505-5601]"
    }, {
      "left" : "environmentSwitchHandler.handleSwitchToPreviewEnivronment(context, environment);",
      "right" : "environmentSwitchHandler.handleSwitchToPreviewEnivronment(context, environment);",
      "info" : "ExpressionStatement[4879-4959]:ExpressionStatement[5614-5694]"
    }, {
      "left" : "genTexture();",
      "right" : "genTexture();",
      "info" : "ExpressionStatement[4976-4989]:ExpressionStatement[5707-5720]"
    }, {
      "left" : "worldGenerator = worldGeneratorManager.createWorldGenerator(worldGenUri, subContext, environment);",
      "right" : "worldGenerator = worldGeneratorManager.createWorldGenerator(worldGenUri, subContext, environment);",
      "info" : "ExpressionStatement[5006-5104]:ExpressionStatement[4807-4905]"
    }, {
      "left" : "worldGenerator.setWorldSeed(seed.getText());",
      "right" : "worldGenerator.setWorldSeed(seed.getText());",
      "info" : "ExpressionStatement[5121-5165]:ExpressionStatement[4922-4966]"
    }, {
      "left" : "previewGen = new FacetLayerPreview(environment, worldGenerator);",
      "right" : "previewGen = new FacetLayerPreview(environment, worldGenerator);",
      "info" : "ExpressionStatement[5182-5246]:ExpressionStatement[5733-5797]"
    }, {
      "left" : "configureProperties();",
      "right" : "configureProperties();",
      "info" : "ExpressionStatement[5263-5285]:ExpressionStatement[4983-5005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5343-5438]:Block[5025-5120]"
    }, {
      "left" : "logger.error(\"Could not resolve modules for: {}\", worldGenUri);",
      "right" : "logger.error(\"Could not resolve modules for: {}\", worldGenUri);",
      "info" : "ExpressionStatement[5361-5424]:ExpressionStatement[5043-5106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5470-5676]:Block[5152-5358]"
    }, {
      "left" : "worldGenerator = null;",
      "right" : "worldGenerator = null;",
      "info" : "ExpressionStatement[5543-5565]:ExpressionStatement[5225-5247]"
    }, {
      "left" : "logger.error(\"Unable to load world generator: \" + worldGenUri + \" for a 2d preview\", e);",
      "right" : "logger.error(\"Unable to load world generator: \" + worldGenUri + \" for a 2d preview\", e);",
      "info" : "ExpressionStatement[5578-5666]:ExpressionStatement[5260-5348]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5688-5695]:Modifier[6044-6051]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5696-5700]:PrimitiveType[6052-6056]"
    }, {
      "left" : "genTexture",
      "right" : "genTexture",
      "info" : "SimpleName[5701-5711]:SimpleName[6057-6067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5714-6283]:Block[6070-6639]"
    }, {
      "left" : "int imgWidth = 384;",
      "right" : "int imgWidth = 384;",
      "info" : "VariableDeclarationStatement[5724-5743]:VariableDeclarationStatement[6080-6099]"
    }, {
      "left" : "int imgHeight = 384;",
      "right" : "int imgHeight = 384;",
      "info" : "VariableDeclarationStatement[5752-5772]:VariableDeclarationStatement[6108-6128]"
    }, {
      "left" : "ByteBuffer buffer = ByteBuffer.allocateDirect(imgWidth * imgHeight * Integer.BYTES);",
      "right" : "ByteBuffer buffer = ByteBuffer.allocateDirect(imgWidth * imgHeight * Integer.BYTES);",
      "info" : "VariableDeclarationStatement[5781-5865]:VariableDeclarationStatement[6137-6221]"
    }, {
      "left" : "ByteBuffer[] data = new ByteBuffer[]{buffer};",
      "right" : "ByteBuffer[] data = new ByteBuffer[]{buffer};",
      "info" : "VariableDeclarationStatement[5874-5919]:VariableDeclarationStatement[6230-6275]"
    }, {
      "left" : "ResourceUrn uri = new ResourceUrn(\"engine:terrainPreview\");",
      "right" : "ResourceUrn uri = new ResourceUrn(\"engine:terrainPreview\");",
      "info" : "VariableDeclarationStatement[5928-5987]:VariableDeclarationStatement[6284-6343]"
    }, {
      "left" : "TextureData texData = new TextureData(imgWidth, imgHeight, data, Texture.WrapMode.CLAMP, Texture.FilterMode.LINEAR);",
      "right" : "TextureData texData = new TextureData(imgWidth, imgHeight, data, Texture.WrapMode.CLAMP, Texture.FilterMode.LINEAR);",
      "info" : "VariableDeclarationStatement[5996-6112]:VariableDeclarationStatement[6352-6468]"
    }, {
      "left" : "texture = Assets.generateAsset(uri, texData, Texture.class);",
      "right" : "texture = Assets.generateAsset(uri, texData, Texture.class);",
      "info" : "ExpressionStatement[6121-6181]:ExpressionStatement[6477-6537]"
    }, {
      "left" : "previewImage = find(\"preview\", UIImage.class);",
      "right" : "previewImage = find(\"preview\", UIImage.class);",
      "info" : "ExpressionStatement[6191-6237]:ExpressionStatement[6547-6593]"
    }, {
      "left" : "previewImage.setImage(texture);",
      "right" : "previewImage.setImage(texture);",
      "info" : "ExpressionStatement[6246-6277]:ExpressionStatement[6602-6633]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6289-6298]:MarkerAnnotation[6645-6654]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6303-6309]:Modifier[6659-6665]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6310-6314]:PrimitiveType[6666-6670]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[6315-6321]:SimpleName[6671-6677]"
    }, {
      "left" : "float delta",
      "right" : "float delta",
      "info" : "SingleVariableDeclaration[6322-6333]:SingleVariableDeclaration[6678-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6335-6475]:Block[6691-6831]"
    }, {
      "left" : "super.update(delta);",
      "right" : "super.update(delta);",
      "info" : "ExpressionStatement[6345-6365]:ExpressionStatement[6701-6721]"
    }, {
      "left" : "if (triggerUpdate)",
      "right" : "if (triggerUpdate)",
      "info" : "IfStatement[6375-6469]:IfStatement[6731-6825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6394-6469]:Block[6750-6825]"
    }, {
      "left" : "updatePreview();",
      "right" : "updatePreview();",
      "info" : "ExpressionStatement[6408-6424]:ExpressionStatement[6764-6780]"
    }, {
      "left" : "triggerUpdate = false;",
      "right" : "triggerUpdate = false;",
      "info" : "ExpressionStatement[6437-6459]:ExpressionStatement[6793-6815]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6481-6488]:Modifier[6837-6844]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6489-6493]:PrimitiveType[6845-6849]"
    }, {
      "left" : "configureProperties",
      "right" : "configureProperties",
      "info" : "SimpleName[6494-6513]:SimpleName[6850-6869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6516-7519]:Block[6872-7875]"
    }, {
      "left" : "PropertyLayout propLayout = find(\"properties\", PropertyLayout.class);",
      "right" : "PropertyLayout propLayout = find(\"properties\", PropertyLayout.class);",
      "info" : "VariableDeclarationStatement[6527-6596]:VariableDeclarationStatement[6883-6952]"
    }, {
      "left" : "propLayout.setOrdering(PropertyOrdering.byLabel());",
      "right" : "propLayout.setOrdering(PropertyOrdering.byLabel());",
      "info" : "ExpressionStatement[6605-6656]:ExpressionStatement[6961-7012]"
    }, {
      "left" : "propLayout.clear();",
      "right" : "propLayout.clear();",
      "info" : "ExpressionStatement[6665-6684]:ExpressionStatement[7021-7040]"
    }, {
      "left" : "WorldConfigurator worldConfig = worldGenerator.getConfigurator();",
      "right" : "WorldConfigurator worldConfig = worldGenerator.getConfigurator();",
      "info" : "VariableDeclarationStatement[6694-6759]:VariableDeclarationStatement[7050-7115]"
    }, {
      "left" : "Map<String, Component> params = worldConfig.getProperties();",
      "right" : "Map<String, Component> params = worldConfig.getProperties();",
      "info" : "VariableDeclarationStatement[6769-6829]:VariableDeclarationStatement[7125-7185]"
    }, {
      "left" : "for (String key : params.keySet())",
      "right" : "for (String key : params.keySet())",
      "info" : "EnhancedForStatement[6839-7206]:EnhancedForStatement[7195-7562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6874-7206]:Block[7230-7562]"
    }, {
      "left" : "Class<? extends Component> clazz = params.get(key).getClass();",
      "right" : "Class<? extends Component> clazz = params.get(key).getClass();",
      "info" : "VariableDeclarationStatement[6888-6950]:VariableDeclarationStatement[7244-7306]"
    }, {
      "left" : "Component comp = config.getModuleConfig(worldGenerator.getUri(), key, clazz);",
      "right" : "Component comp = config.getModuleConfig(worldGenerator.getUri(), key, clazz);",
      "info" : "VariableDeclarationStatement[6963-7040]:VariableDeclarationStatement[7319-7396]"
    }, {
      "left" : "if (comp != null)",
      "right" : "if (comp != null)",
      "info" : "IfStatement[7053-7196]:IfStatement[7409-7552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7071-7196]:Block[7427-7552]"
    }, {
      "left" : "worldConfig.setProperty(key, comp);",
      "right" : "worldConfig.setProperty(key, comp);",
      "info" : "ExpressionStatement[7089-7124]:ExpressionStatement[7445-7480]"
    }, {
      "left" : "PropertyProvider provider = new PropertyProvider();",
      "right" : "PropertyProvider provider = new PropertyProvider();",
      "info" : "VariableDeclarationStatement[7216-7267]:VariableDeclarationStatement[7572-7623]"
    }, {
      "left" : "for (String label : params.keySet())",
      "right" : "for (String label : params.keySet())",
      "info" : "EnhancedForStatement[7277-7513]:EnhancedForStatement[7633-7869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7314-7513]:Block[7670-7869]"
    }, {
      "left" : "Component target = params.get(label);",
      "right" : "Component target = params.get(label);",
      "info" : "VariableDeclarationStatement[7328-7365]:VariableDeclarationStatement[7684-7721]"
    }, {
      "left" : "List<Property<?, ?>> properties = provider.createProperties(target);",
      "right" : "List<Property<?, ?>> properties = provider.createProperties(target);",
      "info" : "VariableDeclarationStatement[7378-7446]:VariableDeclarationStatement[7734-7802]"
    }, {
      "left" : "propLayout.addProperties(label, properties);",
      "right" : "propLayout.addProperties(label, properties);",
      "info" : "ExpressionStatement[7459-7503]:ExpressionStatement[7815-7859]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7525-7534]:MarkerAnnotation[7881-7890]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7539-7545]:Modifier[7895-7901]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7546-7550]:PrimitiveType[7902-7906]"
    }, {
      "left" : "onClosed",
      "right" : "onClosed",
      "info" : "SimpleName[7551-7559]:SimpleName[7907-7915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7562-8308]:Block[7918-8590]"
    }, {
      "left" : "CoreRegistry.setContext(context);",
      "right" : "CoreRegistry.setContext(context);",
      "info" : "ExpressionStatement[7573-7606]:ExpressionStatement[7929-7962]"
    }, {
      "left" : "if (environment != null)",
      "right" : "if (environment != null)",
      "info" : "IfStatement[7616-7912]:IfStatement[7972-8268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7641-7912]:Block[7997-8268]"
    }, {
      "left" : "EnvironmentSwitchHandler environmentSwitchHandler = context.get(EnvironmentSwitchHandler.class);",
      "right" : "EnvironmentSwitchHandler environmentSwitchHandler = context.get(EnvironmentSwitchHandler.class);",
      "info" : "VariableDeclarationStatement[7655-7751]:VariableDeclarationStatement[8011-8107]"
    }, {
      "left" : "environmentSwitchHandler.handleSwitchBackFromPreviewEnivronment(context);",
      "right" : "environmentSwitchHandler.handleSwitchBackFromPreviewEnivronment(context);",
      "info" : "ExpressionStatement[7764-7837]:ExpressionStatement[8120-8193]"
    }, {
      "left" : "environment.close();",
      "right" : "environment.close();",
      "info" : "ExpressionStatement[7850-7870]:ExpressionStatement[8206-8226]"
    }, {
      "left" : "environment = null;",
      "right" : "environment = null;",
      "info" : "ExpressionStatement[7883-7902]:ExpressionStatement[8239-8258]"
    }, {
      "left" : "if (previewGen != null)",
      "right" : "if(previewInitialized)",
      "info" : "IfStatement[7922-8020]:IfStatement[5898-6032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7946-8020]:Block[5921-5989]"
    }, {
      "left" : "previewGen.close();",
      "right" : "previewGen.close();",
      "info" : "ExpressionStatement[7960-7979]:ExpressionStatement[5935-5954]"
    }, {
      "left" : "WorldConfigurator worldConfig = worldGenerator.getConfigurator();",
      "right" : "WorldConfigurator worldConfig = worldGenerator.getConfigurator();",
      "info" : "VariableDeclarationStatement[8030-8095]:VariableDeclarationStatement[8312-8377]"
    }, {
      "left" : "Map<String, Component> params = worldConfig.getProperties();",
      "right" : "Map<String, Component> params = worldConfig.getProperties();",
      "info" : "VariableDeclarationStatement[8105-8165]:VariableDeclarationStatement[8387-8447]"
    }, {
      "left" : "if (params != null)",
      "right" : "if (params != null)",
      "info" : "IfStatement[8174-8275]:IfStatement[8456-8557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8194-8275]:Block[8476-8557]"
    }, {
      "left" : "config.setModuleConfigs(worldGenerator.getUri(), params);",
      "right" : "config.setModuleConfigs(worldGenerator.getUri(), params);",
      "info" : "ExpressionStatement[8208-8265]:ExpressionStatement[8490-8547]"
    }, {
      "left" : "super.onClosed();",
      "right" : "super.onClosed();",
      "info" : "ExpressionStatement[8285-8302]:ExpressionStatement[8567-8584]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8314-8323]:MarkerAnnotation[8596-8605]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8328-8334]:Modifier[8610-8616]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8335-8339]:PrimitiveType[8617-8621]"
    }, {
      "left" : "initialise",
      "right" : "initialise",
      "info" : "SimpleName[8340-8350]:SimpleName[8622-8632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8353-9084]:Block[8635-9366]"
    }, {
      "left" : "zoomSlider = find(\"zoomSlider\", UISlider.class);",
      "right" : "zoomSlider = find(\"zoomSlider\", UISlider.class);",
      "info" : "ExpressionStatement[8363-8411]:ExpressionStatement[8645-8693]"
    }, {
      "left" : "if (zoomSlider != null)",
      "right" : "if (zoomSlider != null)",
      "info" : "IfStatement[8420-8492]:IfStatement[8702-8774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8444-8492]:Block[8726-8774]"
    }, {
      "left" : "zoomSlider.setValue(2f);",
      "right" : "zoomSlider.setValue(2f);",
      "info" : "ExpressionStatement[8458-8482]:ExpressionStatement[8740-8764]"
    }, {
      "left" : "seed = find(\"seed\", UIText.class);",
      "right" : "seed = find(\"seed\", UIText.class);",
      "info" : "ExpressionStatement[8502-8536]:ExpressionStatement[8784-8818]"
    }, {
      "left" : "applyButton = find(\"apply\", UIButton.class);",
      "right" : "applyButton = find(\"apply\", UIButton.class);",
      "info" : "ExpressionStatement[8546-8590]:ExpressionStatement[8828-8872]"
    }, {
      "left" : "if (applyButton != null)",
      "right" : "if (applyButton != null)",
      "info" : "IfStatement[8599-8855]:IfStatement[8881-9137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8624-8855]:Block[8906-9137]"
    }, {
      "left" : "applyButton.subscribe(new ActivateEventListener() {\n                @Override\n                public void onActivated(UIWidget widget) {\n                    updatePreview();\n                }\n            });",
      "right" : "applyButton.subscribe(new ActivateEventListener() {\n                @Override\n                public void onActivated(UIWidget widget) {\n                    updatePreview();\n                }\n            });",
      "info" : "ExpressionStatement[8638-8845]:ExpressionStatement[8920-9127]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8706-8715]:MarkerAnnotation[8988-8997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8732-8738]:Modifier[9014-9020]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8739-8743]:PrimitiveType[9021-9025]"
    }, {
      "left" : "onActivated",
      "right" : "onActivated",
      "info" : "SimpleName[8744-8755]:SimpleName[9026-9037]"
    }, {
      "left" : "UIWidget widget",
      "right" : "UIWidget widget",
      "info" : "SingleVariableDeclaration[8756-8771]:SingleVariableDeclaration[9038-9053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8773-8829]:Block[9055-9111]"
    }, {
      "left" : "updatePreview();",
      "right" : "updatePreview();",
      "info" : "ExpressionStatement[8795-8811]:ExpressionStatement[9077-9093]"
    }, {
      "left" : "WidgetUtil.trySubscribe(this, \"close\", new ActivateEventListener() {\n            @Override\n            public void onActivated(UIWidget button) {\n                getManager().popScreen();\n            }\n        });",
      "right" : "WidgetUtil.trySubscribe(this, \"close\", new ActivateEventListener() {\n            @Override\n            public void onActivated(UIWidget button) {\n                getManager().popScreen();\n            }\n        });",
      "info" : "ExpressionStatement[8865-9078]:ExpressionStatement[9147-9360]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8946-8955]:MarkerAnnotation[9228-9237]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8968-8974]:Modifier[9250-9256]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8975-8979]:PrimitiveType[9257-9261]"
    }, {
      "left" : "onActivated",
      "right" : "onActivated",
      "info" : "SimpleName[8980-8991]:SimpleName[9262-9273]"
    }, {
      "left" : "UIWidget button",
      "right" : "UIWidget button",
      "info" : "SingleVariableDeclaration[8992-9007]:SingleVariableDeclaration[9274-9289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9009-9066]:Block[9291-9348]"
    }, {
      "left" : "getManager().popScreen();",
      "right" : "getManager().popScreen();",
      "info" : "ExpressionStatement[9027-9052]:ExpressionStatement[9309-9334]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9090-9099]:MarkerAnnotation[9372-9381]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9104-9110]:Modifier[9386-9392]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9111-9118]:PrimitiveType[9393-9400]"
    }, {
      "left" : "isLowerLayerVisible",
      "right" : "isLowerLayerVisible",
      "info" : "SimpleName[9119-9138]:SimpleName[9401-9420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9141-9170]:Block[9423-9452]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9151-9164]:ReturnStatement[9433-9446]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9176-9182]:Modifier[9458-9464]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9183-9187]:PrimitiveType[9465-9469]"
    }, {
      "left" : "bindSeed",
      "right" : "bindSeed",
      "info" : "SimpleName[9188-9196]:SimpleName[9470-9478]"
    }, {
      "left" : "Binding<String> binding",
      "right" : "Binding<String> binding",
      "info" : "SingleVariableDeclaration[9197-9220]:SingleVariableDeclaration[9479-9502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9222-9303]:Block[9504-9585]"
    }, {
      "left" : "if (seed != null)",
      "right" : "if (seed != null)",
      "info" : "IfStatement[9232-9297]:IfStatement[9514-9579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9250-9297]:Block[9532-9579]"
    }, {
      "left" : "seed.bindText(binding);",
      "right" : "seed.bindText(binding);",
      "info" : "ExpressionStatement[9264-9287]:ExpressionStatement[9546-9569]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9309-9316]:Modifier[9591-9598]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9317-9321]:PrimitiveType[9599-9603]"
    }, {
      "left" : "updatePreview",
      "right" : "updatePreview",
      "info" : "SimpleName[9322-9335]:SimpleName[9604-9617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9338-10218]:Block[9620-10534]"
    }, {
      "left" : "final NUIManager manager = context.get(NUIManager.class);",
      "right" : "final NUIManager manager = context.get(NUIManager.class);",
      "info" : "VariableDeclarationStatement[9349-9406]:VariableDeclarationStatement[9665-9722]"
    }, {
      "left" : "final WaitPopup<TextureData> popup = manager.pushScreen(WaitPopup.ASSET_URI, WaitPopup.class);",
      "right" : "final WaitPopup<TextureData> popup = manager.pushScreen(WaitPopup.ASSET_URI, WaitPopup.class);",
      "info" : "VariableDeclarationStatement[9415-9509]:VariableDeclarationStatement[9731-9825]"
    }, {
      "left" : "popup.setMessage(\"Updating Preview\", \"Please wait ...\");",
      "right" : "popup.setMessage(\"Updating Preview\", \"Please wait ...\");",
      "info" : "ExpressionStatement[9518-9574]:ExpressionStatement[9834-9890]"
    }, {
      "left" : "ProgressListener progressListener = progress ->\n                popup.setMessage(\"Updating Preview\", String.format(\"Please wait ... %d%%\", (int) (progress * 100f)));",
      "right" : "ProgressListener progressListener = progress ->\n                popup.setMessage(\"Updating Preview\", String.format(\"Please wait ... %d%%\", (int) (progress * 100f)));",
      "info" : "VariableDeclarationStatement[9584-9749]:VariableDeclarationStatement[9900-10065]"
    }, {
      "left" : "Callable<TextureData> operation = () -> {\n            if (seed != null) {\n                worldGenerator.setWorldSeed(seed.getText());\n            }\n            int zoom = TeraMath.floorToInt(zoomSlider.getValue());\n            TextureData data = texture.getData();\n            previewGen.render(data, zoom, progressListener);\n\n            return data;\n        };",
      "right" : "Callable<TextureData> operation = () -> {\n            if (seed != null) {\n                worldGenerator.setWorldSeed(seed.getText());\n            }\n            int zoom = TeraMath.floorToInt(zoomSlider.getValue());\n            TextureData data = texture.getData();\n            previewGen.render(data, zoom, progressListener);\n\n            return data;\n        };",
      "info" : "VariableDeclarationStatement[9759-10122]:VariableDeclarationStatement[10075-10438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9799-10121]:Block[10115-10437]"
    }, {
      "left" : "if (seed != null)",
      "right" : "if (seed != null)",
      "info" : "IfStatement[9813-9907]:IfStatement[10129-10223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9831-9907]:Block[10147-10223]"
    }, {
      "left" : "worldGenerator.setWorldSeed(seed.getText());",
      "right" : "worldGenerator.setWorldSeed(seed.getText());",
      "info" : "ExpressionStatement[9849-9893]:ExpressionStatement[10165-10209]"
    }, {
      "left" : "int zoom = TeraMath.floorToInt(zoomSlider.getValue());",
      "right" : "int zoom = TeraMath.floorToInt(zoomSlider.getValue());",
      "info" : "VariableDeclarationStatement[9920-9974]:VariableDeclarationStatement[10236-10290]"
    }, {
      "left" : "TextureData data = texture.getData();",
      "right" : "TextureData data = texture.getData();",
      "info" : "VariableDeclarationStatement[9987-10024]:VariableDeclarationStatement[10303-10340]"
    }, {
      "left" : "previewGen.render(data, zoom, progressListener);",
      "right" : "previewGen.render(data, zoom, progressListener);",
      "info" : "ExpressionStatement[10037-10085]:ExpressionStatement[10353-10401]"
    }, {
      "left" : "return data;",
      "right" : "return data;",
      "info" : "ReturnStatement[10099-10111]:ReturnStatement[10415-10427]"
    }, {
      "left" : "popup.onSuccess(texture::reload);",
      "right" : "popup.onSuccess(texture::reload);",
      "info" : "ExpressionStatement[10132-10165]:ExpressionStatement[10448-10481]"
    }, {
      "left" : "popup.startOperation(operation, true);",
      "right" : "popup.startOperation(operation, true);",
      "info" : "ExpressionStatement[10174-10212]:ExpressionStatement[10490-10528]"
    } ]
  },
  "interFileMappings" : { }
}