{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static void put(@NotNull List<String> parameters, boolean condition, @NotNull String value)",
      "right" : "public static void put(@NotNull List<String> parameters, boolean condition, @NotNull String value)",
      "info" : "MethodDeclaration[763-1065]:MethodDeclaration[763-1065]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull File path)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull File path)",
      "info" : "MethodDeclaration[1069-1219]:MethodDeclaration[1069-1219]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull File path, boolean usePegRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull File path, boolean usePegRevision)",
      "info" : "MethodDeclaration[1223-1449]:MethodDeclaration[1223-1449]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull File path, @Nullable SVNRevision pegRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull File path, @Nullable SVNRevision pegRevision)",
      "info" : "MethodDeclaration[1453-1628]:MethodDeclaration[1453-1628]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target)",
      "info" : "MethodDeclaration[2365-2529]:MethodDeclaration[2508-2672]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target, boolean usePegRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target, boolean usePegRevision)",
      "info" : "MethodDeclaration[2533-2773]:MethodDeclaration[2676-2916]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth)",
      "info" : "MethodDeclaration[2777-2897]:MethodDeclaration[2920-3040]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth, boolean sticky)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth, boolean sticky)",
      "info" : "MethodDeclaration[2901-3246]:MethodDeclaration[3044-3389]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable SVNRevision revision)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable SVNRevision revision)",
      "info" : "MethodDeclaration[3250-3560]:MethodDeclaration[3393-3703]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull SVNRevision startRevision, @NotNull SVNRevision endRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull SVNRevision startRevision, @NotNull SVNRevision endRevision)",
      "info" : "MethodDeclaration[3564-3801]:MethodDeclaration[3707-3944]"
    }, {
      "left" : "public static String format(@NotNull SVNRevision revision)",
      "right" : "public static String format(@NotNull SVNRevision revision)",
      "info" : "MethodDeclaration[3805-4017]:MethodDeclaration[3948-4160]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable DiffOptions diffOptions)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable DiffOptions diffOptions)",
      "info" : "MethodDeclaration[4021-4691]:MethodDeclaration[4164-4834]"
    }, {
      "left" : "public static void putChangeLists(@NotNull List<String> parameters, @Nullable Iterable<String> changeLists)",
      "right" : "public static void putChangeLists(@NotNull List<String> parameters, @Nullable Iterable<String> changeLists)",
      "info" : "MethodDeclaration[4695-4967]:MethodDeclaration[4838-5110]"
    }, {
      "left" : "public static String escape(@NotNull String path)",
      "right" : "public static String escape(@NotNull String path)",
      "info" : "MethodDeclaration[4971-5077]:MethodDeclaration[5114-5220]"
    }, {
      "left" : "public static <T> T parse(@NotNull String data, @NotNull Class<T> type) throws JAXBException",
      "right" : "public static <T> T parse(@NotNull String data, @NotNull Class<T> type) throws JAXBException",
      "info" : "MethodDeclaration[5081-5369]:MethodDeclaration[5224-5512]"
    }, {
      "left" : "public static File getHomeDirectory()",
      "right" : "public static File getHomeDirectory()",
      "info" : "MethodDeclaration[5373-5475]:MethodDeclaration[5516-5618]"
    }, {
      "left" : "public static char getStatusChar(@Nullable String type)",
      "right" : "public static char getStatusChar(@Nullable String type)",
      "info" : "MethodDeclaration[5479-5702]:MethodDeclaration[5622-5845]"
    }, {
      "left" : "public static StatusType getStatusType(@Nullable String type)",
      "right" : "public static StatusType getStatusType(@Nullable String type)",
      "info" : "MethodDeclaration[5706-5831]:MethodDeclaration[5849-5974]"
    }, {
      "left" : "public static StatusType getStatusType(char first)",
      "right" : "public static StatusType getStatusType(char first)",
      "info" : "MethodDeclaration[5835-6577]:MethodDeclaration[5978-6720]"
    }, {
      "left" : "public static File correctUpToExistingParent(File base)",
      "right" : "public static File correctUpToExistingParent(File base)",
      "info" : "MethodDeclaration[6581-6787]:MethodDeclaration[6724-6930]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1004-1065]:Block[1004-1065]"
    }, {
      "left" : "if (condition)",
      "right" : "if (condition)",
      "info" : "IfStatement[1010-1061]:IfStatement[1010-1061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1025-1061]:Block[1025-1061]"
    }, {
      "left" : "parameters.add(value);",
      "right" : "parameters.add(value);",
      "info" : "ExpressionStatement[1033-1055]:ExpressionStatement[1033-1055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1146-1219]:Block[1146-1219]"
    }, {
      "left" : "put(parameters, path.getAbsolutePath(), SVNRevision.UNDEFINED);",
      "right" : "put(parameters, path.getAbsolutePath(), SVNRevision.UNDEFINED);",
      "info" : "ExpressionStatement[1152-1215]:ExpressionStatement[1152-1215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1324-1449]:Block[1324-1449]"
    }, {
      "left" : "if (usePegRevision)",
      "right" : "if (usePegRevision)",
      "info" : "IfStatement[1330-1445]:IfStatement[1330-1445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1350-1386]:Block[1350-1386]"
    }, {
      "left" : "put(parameters, path);",
      "right" : "put(parameters, path);",
      "info" : "ExpressionStatement[1358-1380]:ExpressionStatement[1358-1380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1392-1445]:Block[1392-1445]"
    }, {
      "left" : "parameters.add(path.getAbsolutePath());",
      "right" : "parameters.add(path.getAbsolutePath());",
      "info" : "ExpressionStatement[1400-1439]:ExpressionStatement[1400-1439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1565-1628]:Block[1565-1628]"
    }, {
      "left" : "put(parameters, path.getAbsolutePath(), pegRevision);",
      "right" : "put(parameters, path.getAbsolutePath(), pegRevision);",
      "info" : "ExpressionStatement[1571-1624]:ExpressionStatement[1571-1624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2449-2529]:Block[2592-2672]"
    }, {
      "left" : "put(parameters, target.getPathOrUrlString(), target.getPegRevision());",
      "right" : "put(parameters, target.getPathOrUrlString(), target.getPegRevision());",
      "info" : "ExpressionStatement[2455-2525]:ExpressionStatement[2598-2668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2641-2773]:Block[2784-2916]"
    }, {
      "left" : "if (usePegRevision)",
      "right" : "if (usePegRevision)",
      "info" : "IfStatement[2647-2769]:IfStatement[2790-2912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2667-2705]:Block[2810-2848]"
    }, {
      "left" : "put(parameters, target);",
      "right" : "put(parameters, target);",
      "info" : "ExpressionStatement[2675-2699]:ExpressionStatement[2818-2842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2711-2769]:Block[2854-2912]"
    }, {
      "left" : "parameters.add(target.getPathOrUrlString());",
      "right" : "parameters.add(target.getPathOrUrlString());",
      "info" : "ExpressionStatement[2719-2763]:ExpressionStatement[2862-2906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2857-2897]:Block[3000-3040]"
    }, {
      "left" : "put(parameters, depth, false);",
      "right" : "put(parameters, depth, false);",
      "info" : "ExpressionStatement[2863-2893]:ExpressionStatement[3006-3036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2997-3246]:Block[3140-3389]"
    }, {
      "left" : "if (depth != null && !Depth.UNKNOWN.equals(depth))",
      "right" : "if (depth != null && !Depth.UNKNOWN.equals(depth))",
      "info" : "IfStatement[3003-3242]:IfStatement[3146-3385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3054-3242]:Block[3197-3385]"
    }, {
      "left" : "parameters.add(\"--depth\");",
      "right" : "parameters.add(\"--depth\");",
      "info" : "ExpressionStatement[3062-3088]:ExpressionStatement[3205-3231]"
    }, {
      "left" : "parameters.add(depth.getName());",
      "right" : "parameters.add(depth.getName());",
      "info" : "ExpressionStatement[3095-3127]:ExpressionStatement[3238-3270]"
    }, {
      "left" : "if (sticky)",
      "right" : "if (sticky)",
      "info" : "IfStatement[3135-3236]:IfStatement[3278-3379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3147-3236]:Block[3290-3379]"
    }, {
      "left" : "parameters.add(\"--set-depth\");",
      "right" : "parameters.add(\"--set-depth\");",
      "info" : "ExpressionStatement[3157-3187]:ExpressionStatement[3300-3330]"
    }, {
      "left" : "parameters.add(depth.getName());",
      "right" : "parameters.add(depth.getName());",
      "info" : "ExpressionStatement[3196-3228]:ExpressionStatement[3339-3371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3339-3560]:Block[3482-3703]"
    }, {
      "left" : "if (revision != null && !SVNRevision.UNDEFINED.equals(revision) && !SVNRevision.WORKING.equals(revision) && revision.isValid())",
      "right" : "if (revision != null && !SVNRevision.UNDEFINED.equals(revision) && !SVNRevision.WORKING.equals(revision) && revision.isValid())",
      "info" : "IfStatement[3345-3556]:IfStatement[3488-3699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3473-3556]:Block[3616-3699]"
    }, {
      "left" : "parameters.add(\"--revision\");",
      "right" : "parameters.add(\"--revision\");",
      "info" : "ExpressionStatement[3481-3510]:ExpressionStatement[3624-3653]"
    }, {
      "left" : "parameters.add(format(revision));",
      "right" : "parameters.add(format(revision));",
      "info" : "ExpressionStatement[3517-3550]:ExpressionStatement[3660-3693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3691-3801]:Block[3834-3944]"
    }, {
      "left" : "parameters.add(\"--revision\");",
      "right" : "parameters.add(\"--revision\");",
      "info" : "ExpressionStatement[3697-3726]:ExpressionStatement[3840-3869]"
    }, {
      "left" : "parameters.add(format(startRevision) + \":\" + format(endRevision));",
      "right" : "parameters.add(format(startRevision) + \":\" + format(endRevision));",
      "info" : "ExpressionStatement[3731-3797]:ExpressionStatement[3874-3940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3875-4017]:Block[4018-4160]"
    }, {
      "left" : "return revision.getDate() != null ? \"{\" + DateFormatUtil.ISO8601_DATE_FORMAT.format(revision.getDate()) + \"}\" : revision.toString();",
      "right" : "return revision.getDate() != null ? \"{\" + DateFormatUtil.ISO8601_DATE_FORMAT.format(revision.getDate()) + \"}\" : revision.toString();",
      "info" : "ReturnStatement[3881-4013]:ReturnStatement[4024-4156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4113-4691]:Block[4256-4834]"
    }, {
      "left" : "if (diffOptions != null)",
      "right" : "if (diffOptions != null)",
      "info" : "IfStatement[4119-4687]:IfStatement[4262-4830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4144-4687]:Block[4287-4830]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[4152-4196]:VariableDeclarationStatement[4295-4339]"
    }, {
      "left" : "if (diffOptions.isIgnoreAllWhitespace())",
      "right" : "if (diffOptions.isIgnoreAllWhitespace())",
      "info" : "IfStatement[4204-4304]:IfStatement[4347-4447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4245-4304]:Block[4388-4447]"
    }, {
      "left" : "builder.append(\" --ignore-space-change\");",
      "right" : "builder.append(\" --ignore-space-change\");",
      "info" : "ExpressionStatement[4255-4296]:ExpressionStatement[4398-4439]"
    }, {
      "left" : "if (diffOptions.isIgnoreAmountOfWhitespace())",
      "right" : "if (diffOptions.isIgnoreAmountOfWhitespace())",
      "info" : "IfStatement[4311-4413]:IfStatement[4454-4556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4357-4413]:Block[4500-4556]"
    }, {
      "left" : "builder.append(\" --ignore-all-space\");",
      "right" : "builder.append(\" --ignore-all-space\");",
      "info" : "ExpressionStatement[4367-4405]:ExpressionStatement[4510-4548]"
    }, {
      "left" : "if (diffOptions.isIgnoreEOLStyle())",
      "right" : "if (diffOptions.isIgnoreEOLStyle())",
      "info" : "IfStatement[4420-4512]:IfStatement[4563-4655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4456-4512]:Block[4599-4655]"
    }, {
      "left" : "builder.append(\" --ignore-eol-style\");",
      "right" : "builder.append(\" --ignore-eol-style\");",
      "info" : "ExpressionStatement[4466-4504]:ExpressionStatement[4609-4647]"
    }, {
      "left" : "String value = builder.toString().trim();",
      "right" : "String value = builder.toString().trim();",
      "info" : "VariableDeclarationStatement[4520-4561]:VariableDeclarationStatement[4663-4704]"
    }, {
      "left" : "if (!StringUtil.isEmpty(value))",
      "right" : "if (!StringUtil.isEmpty(value))",
      "info" : "IfStatement[4569-4681]:IfStatement[4712-4824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4601-4681]:Block[4744-4824]"
    }, {
      "left" : "parameters.add(\"--extensions\");",
      "right" : "parameters.add(\"--extensions\");",
      "info" : "ExpressionStatement[4611-4642]:ExpressionStatement[4754-4785]"
    }, {
      "left" : "parameters.add(value);",
      "right" : "parameters.add(value);",
      "info" : "ExpressionStatement[4651-4673]:ExpressionStatement[4794-4816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4803-4967]:Block[4946-5110]"
    }, {
      "left" : "if (changeLists != null)",
      "right" : "if (changeLists != null)",
      "info" : "IfStatement[4809-4963]:IfStatement[4952-5106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4834-4963]:Block[4977-5106]"
    }, {
      "left" : "for (String changeList : changeLists)",
      "right" : "for (String changeList : changeLists)",
      "info" : "EnhancedForStatement[4842-4957]:EnhancedForStatement[4985-5100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4880-4957]:Block[5023-5100]"
    }, {
      "left" : "parameters.add(\"--cl\");",
      "right" : "parameters.add(\"--cl\");",
      "info" : "ExpressionStatement[4890-4913]:ExpressionStatement[5033-5056]"
    }, {
      "left" : "parameters.add(changeList);",
      "right" : "parameters.add(changeList);",
      "info" : "ExpressionStatement[4922-4949]:ExpressionStatement[5065-5092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5021-5077]:Block[5164-5220]"
    }, {
      "left" : "return path.contains(\"@\") ? path + \"@\" : path;",
      "right" : "return path.contains(\"@\") ? path + \"@\" : path;",
      "info" : "ReturnStatement[5027-5073]:ReturnStatement[5170-5216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5174-5369]:Block[5317-5512]"
    }, {
      "left" : "JAXBContext context = JAXBContext.newInstance(type);",
      "right" : "JAXBContext context = JAXBContext.newInstance(type);",
      "info" : "VariableDeclarationStatement[5180-5232]:VariableDeclarationStatement[5323-5375]"
    }, {
      "left" : "Unmarshaller unmarshaller = context.createUnmarshaller();",
      "right" : "Unmarshaller unmarshaller = context.createUnmarshaller();",
      "info" : "VariableDeclarationStatement[5237-5294]:VariableDeclarationStatement[5380-5437]"
    }, {
      "left" : "return (T) unmarshaller.unmarshal(new StringReader(data.trim()));",
      "right" : "return (T) unmarshaller.unmarshal(new StringReader(data.trim()));",
      "info" : "ReturnStatement[5300-5365]:ReturnStatement[5443-5508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5422-5475]:Block[5565-5618]"
    }, {
      "left" : "return new File(PathManager.getHomePath());",
      "right" : "return new File(PathManager.getHomePath());",
      "info" : "ReturnStatement[5428-5471]:ReturnStatement[5571-5614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5636-5702]:Block[5779-5845]"
    }, {
      "left" : "return !StringUtil.isEmpty(type) ? type.charAt(0) : ' ';",
      "right" : "return !StringUtil.isEmpty(type) ? type.charAt(0) : ' ';",
      "info" : "ReturnStatement[5642-5698]:ReturnStatement[5785-5841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5779-5831]:Block[5922-5974]"
    }, {
      "left" : "return getStatusType(getStatusChar(type));",
      "right" : "return getStatusType(getStatusChar(type));",
      "info" : "ReturnStatement[5785-5827]:ReturnStatement[5928-5970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5897-6577]:Block[6040-6720]"
    }, {
      "left" : "final StatusType contentsStatus;",
      "right" : "final StatusType contentsStatus;",
      "info" : "VariableDeclarationStatement[5903-5935]:VariableDeclarationStatement[6046-6078]"
    }, {
      "left" : "if ('A' == first)",
      "right" : "if ('A' == first)",
      "info" : "IfStatement[5940-6546]:IfStatement[6083-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5958-6013]:Block[6101-6156]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_ADDED;",
      "right" : "contentsStatus = StatusType.STATUS_ADDED;",
      "info" : "ExpressionStatement[5966-6007]:ExpressionStatement[6109-6150]"
    }, {
      "left" : "if ('D' == first)",
      "right" : "if ('D' == first)",
      "info" : "IfStatement[6019-6546]:IfStatement[6162-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6037-6094]:Block[6180-6237]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_DELETED;",
      "right" : "contentsStatus = StatusType.STATUS_DELETED;",
      "info" : "ExpressionStatement[6045-6088]:ExpressionStatement[6188-6231]"
    }, {
      "left" : "if ('U' == first)",
      "right" : "if ('U' == first)",
      "info" : "IfStatement[6100-6546]:IfStatement[6243-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6118-6168]:Block[6261-6311]"
    }, {
      "left" : "contentsStatus = StatusType.CHANGED;",
      "right" : "contentsStatus = StatusType.CHANGED;",
      "info" : "ExpressionStatement[6126-6162]:ExpressionStatement[6269-6305]"
    }, {
      "left" : "if ('C' == first)",
      "right" : "if ('C' == first)",
      "info" : "IfStatement[6174-6546]:IfStatement[6317-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6192-6245]:Block[6335-6388]"
    }, {
      "left" : "contentsStatus = StatusType.CONFLICTED;",
      "right" : "contentsStatus = StatusType.CONFLICTED;",
      "info" : "ExpressionStatement[6200-6239]:ExpressionStatement[6343-6382]"
    }, {
      "left" : "if ('G' == first)",
      "right" : "if ('G' == first)",
      "info" : "IfStatement[6251-6546]:IfStatement[6394-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6269-6318]:Block[6412-6461]"
    }, {
      "left" : "contentsStatus = StatusType.MERGED;",
      "right" : "contentsStatus = StatusType.MERGED;",
      "info" : "ExpressionStatement[6277-6312]:ExpressionStatement[6420-6455]"
    }, {
      "left" : "if ('R' == first)",
      "right" : "if ('R' == first)",
      "info" : "IfStatement[6324-6546]:IfStatement[6467-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6342-6400]:Block[6485-6543]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_REPLACED;",
      "right" : "contentsStatus = StatusType.STATUS_REPLACED;",
      "info" : "ExpressionStatement[6350-6394]:ExpressionStatement[6493-6537]"
    }, {
      "left" : "if ('E' == first)",
      "right" : "if ('E' == first)",
      "info" : "IfStatement[6406-6546]:IfStatement[6549-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6424-6484]:Block[6567-6627]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_OBSTRUCTED;",
      "right" : "contentsStatus = StatusType.STATUS_OBSTRUCTED;",
      "info" : "ExpressionStatement[6432-6478]:ExpressionStatement[6575-6621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6490-6546]:Block[6633-6689]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_NORMAL;",
      "right" : "contentsStatus = StatusType.STATUS_NORMAL;",
      "info" : "ExpressionStatement[6498-6540]:ExpressionStatement[6641-6683]"
    }, {
      "left" : "return contentsStatus;",
      "right" : "return contentsStatus;",
      "info" : "ReturnStatement[6551-6573]:ReturnStatement[6694-6716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6637-6787]:Block[6780-6930]"
    }, {
      "left" : "while (base != null)",
      "right" : "while (base != null)",
      "info" : "WhileStatement[6643-6766]:WhileStatement[6786-6909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6664-6766]:Block[6807-6909]"
    }, {
      "left" : "if (base.exists() && base.isDirectory())",
      "right" : "if (base.exists() && base.isDirectory())",
      "info" : "IfStatement[6672-6725]:IfStatement[6815-6868]"
    }, {
      "left" : "return base;",
      "right" : "return base;",
      "info" : "ReturnStatement[6713-6725]:ReturnStatement[6856-6868]"
    }, {
      "left" : "base = base.getParentFile();",
      "right" : "base = base.getParentFile();",
      "info" : "ExpressionStatement[6732-6760]:ExpressionStatement[6875-6903]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6771-6783]:ReturnStatement[6914-6926]"
    } ]
  },
  "interFileMappings" : { }
}