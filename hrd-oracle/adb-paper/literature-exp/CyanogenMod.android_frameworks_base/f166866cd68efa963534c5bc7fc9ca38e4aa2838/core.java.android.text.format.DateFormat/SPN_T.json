{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DateFormat",
      "right" : "DateFormat",
      "info" : "TypeDeclaration[1118-25544]:TypeDeclaration[1118-25218]"
    }, {
      "left" : "@Deprecated\n    public  static final char    QUOTE                  =    '\\'';",
      "right" : "@Deprecated\n    public  static final char    QUOTE                  =    '\\'';",
      "info" : "FieldDeclaration[2502-2664]:FieldDeclaration[2502-2664]"
    }, {
      "left" : "@Deprecated\n    public  static final char    AM_PM                  =    'a';",
      "right" : "@Deprecated\n    public  static final char    AM_PM                  =    'a';",
      "info" : "FieldDeclaration[2670-2833]:FieldDeclaration[2670-2833]"
    }, {
      "left" : "@Deprecated\n    public  static final char    CAPITAL_AM_PM          =    'A';",
      "right" : "@Deprecated\n    public  static final char    CAPITAL_AM_PM          =    'A';",
      "info" : "FieldDeclaration[2839-3036]:FieldDeclaration[2839-3036]"
    }, {
      "left" : "@Deprecated\n    public  static final char    DATE                   =    'd';",
      "right" : "@Deprecated\n    public  static final char    DATE                   =    'd';",
      "info" : "FieldDeclaration[3042-3205]:FieldDeclaration[3042-3205]"
    }, {
      "left" : "@Deprecated\n    public  static final char    DAY                    =    'E';",
      "right" : "@Deprecated\n    public  static final char    DAY                    =    'E';",
      "info" : "FieldDeclaration[3211-3374]:FieldDeclaration[3211-3374]"
    }, {
      "left" : "@Deprecated\n    public  static final char    HOUR                   =    'h';",
      "right" : "@Deprecated\n    public  static final char    HOUR                   =    'h';",
      "info" : "FieldDeclaration[3380-3543]:FieldDeclaration[3380-3543]"
    }, {
      "left" : "@Deprecated\n    public  static final char    HOUR_OF_DAY            =    'k';",
      "right" : "@Deprecated\n    public  static final char    HOUR_OF_DAY            =    'k';",
      "info" : "FieldDeclaration[3549-3924]:FieldDeclaration[3549-3924]"
    }, {
      "left" : "@Deprecated\n    public  static final char    MINUTE                 =    'm';",
      "right" : "@Deprecated\n    public  static final char    MINUTE                 =    'm';",
      "info" : "FieldDeclaration[3930-4093]:FieldDeclaration[3930-4093]"
    }, {
      "left" : "@Deprecated\n    public  static final char    MONTH                  =    'M';",
      "right" : "@Deprecated\n    public  static final char    MONTH                  =    'M';",
      "info" : "FieldDeclaration[4099-4262]:FieldDeclaration[4099-4262]"
    }, {
      "left" : "@Deprecated\n    public  static final char    STANDALONE_MONTH       =    'L';",
      "right" : "@Deprecated\n    public  static final char    STANDALONE_MONTH       =    'L';",
      "info" : "FieldDeclaration[4268-4431]:FieldDeclaration[4268-4431]"
    }, {
      "left" : "@Deprecated\n    public  static final char    SECONDS                =    's';",
      "right" : "@Deprecated\n    public  static final char    SECONDS                =    's';",
      "info" : "FieldDeclaration[4437-4600]:FieldDeclaration[4437-4600]"
    }, {
      "left" : "@Deprecated\n    public  static final char    TIME_ZONE              =    'z';",
      "right" : "@Deprecated\n    public  static final char    TIME_ZONE              =    'z';",
      "info" : "FieldDeclaration[4606-4769]:FieldDeclaration[4606-4769]"
    }, {
      "left" : "@Deprecated\n    public  static final char    YEAR                   =    'y';",
      "right" : "@Deprecated\n    public  static final char    YEAR                   =    'y';",
      "info" : "FieldDeclaration[4775-4938]:FieldDeclaration[4775-4938]"
    }, {
      "left" : "private static final Object sLocaleLock = new Object();",
      "right" : "private static final Object sLocaleLock = new Object();",
      "info" : "FieldDeclaration[4945-5000]:FieldDeclaration[4945-5000]"
    }, {
      "left" : "private static Locale sIs24HourLocale;",
      "right" : "private static Locale sIs24HourLocale;",
      "info" : "FieldDeclaration[5005-5043]:FieldDeclaration[5005-5043]"
    }, {
      "left" : "private static boolean sIs24Hour;",
      "right" : "private static boolean sIs24Hour;",
      "info" : "FieldDeclaration[5048-5081]:FieldDeclaration[5048-5081]"
    }, {
      "left" : "public static boolean is24HourFormat(Context context)",
      "right" : "public static boolean is24HourFormat(Context context)",
      "info" : "MethodDeclaration[5088-5432]:MethodDeclaration[5088-5432]"
    }, {
      "left" : "public static boolean is24HourFormatLocale(Context context)",
      "right" : "public static boolean is24HourFormat(Context context, int userHandle)",
      "info" : "MethodDeclaration[6120-7374]:MethodDeclaration[5438-7048]"
    }, {
      "left" : "public static String getBestDateTimePattern(Locale locale, String skeleton)",
      "right" : "public static String getBestDateTimePattern(Locale locale, String skeleton)",
      "info" : "MethodDeclaration[7380-9071]:MethodDeclaration[7054-8745]"
    }, {
      "left" : "public static java.text.DateFormat getTimeFormat(Context context)",
      "right" : "public static java.text.DateFormat getTimeFormat(Context context)",
      "info" : "MethodDeclaration[9077-9538]:MethodDeclaration[8751-9212]"
    }, {
      "left" : "public static String getTimeFormatString(Context context)",
      "right" : "public static String getTimeFormatString(Context context)",
      "info" : "MethodDeclaration[9544-9904]:MethodDeclaration[9218-9578]"
    }, {
      "left" : "public static String getTimeFormatString(Context context, int userHandle)",
      "right" : "public static String getTimeFormatString(Context context, int userHandle)",
      "info" : "MethodDeclaration[9910-10470]:MethodDeclaration[9584-10144]"
    }, {
      "left" : "public static java.text.DateFormat getDateFormat(Context context)",
      "right" : "public static java.text.DateFormat getDateFormat(Context context)",
      "info" : "MethodDeclaration[10476-11077]:MethodDeclaration[10150-10751]"
    }, {
      "left" : "public static java.text.DateFormat getDateFormatForSetting(Context context,\n                                                               String value)",
      "right" : "public static java.text.DateFormat getDateFormatForSetting(Context context,\n                                                               String value)",
      "info" : "MethodDeclaration[11083-11750]:MethodDeclaration[10757-11424]"
    }, {
      "left" : "private static String getDateFormatStringForSetting(Context context, String value)",
      "right" : "private static String getDateFormatStringForSetting(Context context, String value)",
      "info" : "MethodDeclaration[11756-13292]:MethodDeclaration[11430-12966]"
    }, {
      "left" : "public static java.text.DateFormat getLongDateFormat(Context context)",
      "right" : "public static java.text.DateFormat getLongDateFormat(Context context)",
      "info" : "MethodDeclaration[13298-13772]:MethodDeclaration[12972-13446]"
    }, {
      "left" : "public static java.text.DateFormat getMediumDateFormat(Context context)",
      "right" : "public static java.text.DateFormat getMediumDateFormat(Context context)",
      "info" : "MethodDeclaration[13778-14246]:MethodDeclaration[13452-13920]"
    }, {
      "left" : "public static char[] getDateFormatOrder(Context context)",
      "right" : "public static char[] getDateFormatOrder(Context context)",
      "info" : "MethodDeclaration[14252-14920]:MethodDeclaration[13926-14594]"
    }, {
      "left" : "private static String getDateFormatString(Context context)",
      "right" : "private static String getDateFormatString(Context context)",
      "info" : "MethodDeclaration[14926-15180]:MethodDeclaration[14600-14854]"
    }, {
      "left" : "public static CharSequence format(CharSequence inFormat, long inTimeInMillis)",
      "right" : "public static CharSequence format(CharSequence inFormat, long inTimeInMillis)",
      "info" : "MethodDeclaration[15186-15718]:MethodDeclaration[14860-15392]"
    }, {
      "left" : "public static CharSequence format(CharSequence inFormat, Date inDate)",
      "right" : "public static CharSequence format(CharSequence inFormat, Date inDate)",
      "info" : "MethodDeclaration[15724-16258]:MethodDeclaration[15398-15932]"
    }, {
      "left" : "public static boolean hasSeconds(CharSequence inFormat)",
      "right" : "public static boolean hasSeconds(CharSequence inFormat)",
      "info" : "MethodDeclaration[16264-16742]:MethodDeclaration[15938-16416]"
    }, {
      "left" : "public static boolean hasDesignator(CharSequence inFormat, char designator)",
      "right" : "public static boolean hasDesignator(CharSequence inFormat, char designator)",
      "info" : "MethodDeclaration[16748-17448]:MethodDeclaration[16422-17122]"
    }, {
      "left" : "private static int skipQuotedText(CharSequence s, int i, int len)",
      "right" : "private static int skipQuotedText(CharSequence s, int i, int len)",
      "info" : "MethodDeclaration[17454-18110]:MethodDeclaration[17128-17784]"
    }, {
      "left" : "public static CharSequence format(CharSequence inFormat, Calendar inDate)",
      "right" : "public static CharSequence format(CharSequence inFormat, Calendar inDate)",
      "info" : "MethodDeclaration[18116-22076]:MethodDeclaration[17790-21750]"
    }, {
      "left" : "private static String getDayOfWeekString(LocaleData ld, int day, int count, int kind)",
      "right" : "private static String getDayOfWeekString(LocaleData ld, int day, int count, int kind)",
      "info" : "MethodDeclaration[22082-22592]:MethodDeclaration[21756-22266]"
    }, {
      "left" : "private static String getMonthString(LocaleData ld, int month, int count, int kind)",
      "right" : "private static String getMonthString(LocaleData ld, int month, int count, int kind)",
      "info" : "MethodDeclaration[22598-23240]:MethodDeclaration[22272-22914]"
    }, {
      "left" : "private static String getTimeZoneString(Calendar inDate, int count)",
      "right" : "private static String getTimeZoneString(Calendar inDate, int count)",
      "info" : "MethodDeclaration[23246-23759]:MethodDeclaration[22920-23433]"
    }, {
      "left" : "private static String formatZoneOffset(int offset, int count)",
      "right" : "private static String formatZoneOffset(int offset, int count)",
      "info" : "MethodDeclaration[23765-24268]:MethodDeclaration[23439-23942]"
    }, {
      "left" : "private static String getYearString(int year, int count)",
      "right" : "private static String getYearString(int year, int count)",
      "info" : "MethodDeclaration[24274-24469]:MethodDeclaration[23948-24143]"
    }, {
      "left" : "private static int appendQuotedText(SpannableStringBuilder s, int i, int len)",
      "right" : "private static int appendQuotedText(SpannableStringBuilder s, int i, int len)",
      "info" : "MethodDeclaration[24475-25383]:MethodDeclaration[24149-25057]"
    }, {
      "left" : "private static String zeroPad(int inValue, int inMinDigits)",
      "right" : "private static String zeroPad(int inValue, int inMinDigits)",
      "info" : "MethodDeclaration[25389-25542]:MethodDeclaration[25063-25216]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2472-2478]:Modifier[2472-2478]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2479-2484]:TYPE_DECLARATION_KIND[2479-2484]"
    }, {
      "left" : "DateFormat",
      "right" : "DateFormat",
      "info" : "SimpleName[2485-2495]:SimpleName[2485-2495]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5308-5314]:Modifier[5308-5314]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5315-5321]:Modifier[5315-5321]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5322-5329]:PrimitiveType[5322-5329]"
    }, {
      "left" : "is24HourFormat",
      "right" : "is24HourFormat",
      "info" : "SimpleName[5330-5344]:SimpleName[5330-5344]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[5345-5360]:SingleVariableDeclaration[5345-5360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5362-5432]:Block[5362-5432]"
    }, {
      "left" : "return is24HourFormat(context, UserHandle.myUserId());",
      "right" : "return is24HourFormat(context, UserHandle.myUserId());",
      "info" : "ReturnStatement[5372-5426]:ReturnStatement[5372-5426]"
    }, {
      "left" : "int userHandle",
      "right" : "int userHandle",
      "info" : "SingleVariableDeclaration[5822-5836]:SingleVariableDeclaration[5822-5836]"
    }, {
      "left" : "String value = Settings.System.getStringForUser(context.getContentResolver(),\n                Settings.System.TIME_12_24, userHandle);",
      "right" : "String value = Settings.System.getStringForUser(context.getContentResolver(),\n                Settings.System.TIME_12_24, userHandle);",
      "info" : "VariableDeclarationStatement[5848-5982]:VariableDeclarationStatement[5848-5982]"
    }, {
      "left" : "value == null",
      "right" : "value == null",
      "info" : "InfixExpression[5996-6009]:InfixExpression[5996-6009]"
    }, {
      "left" : "return value.equals(\"24\");",
      "right" : "return value.equals(\"24\");",
      "info" : "ReturnStatement[6082-6108]:ReturnStatement[7016-7042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6390-6396]:Modifier[5768-5774]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6397-6403]:Modifier[5775-5781]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6404-6411]:PrimitiveType[5782-5789]"
    }, {
      "left" : "is24HourFormatLocale",
      "right" : "is24HourFormat",
      "info" : "SimpleName[6412-6432]:SimpleName[5790-5804]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[6433-6448]:SingleVariableDeclaration[5805-5820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6450-7374]:Block[5838-7048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6450-7374]:Block[6011-7006]"
    }, {
      "left" : "Locale locale = context.getResources().getConfiguration().locale;",
      "right" : "Locale locale = context.getResources().getConfiguration().locale;",
      "info" : "VariableDeclarationStatement[6489-6554]:VariableDeclarationStatement[6025-6090]"
    }, {
      "left" : "synchronized (sLocaleLock) {\n            if (sIs24HourLocale != null && sIs24HourLocale.equals(locale)) {\n                return sIs24Hour;\n            }\n        }",
      "right" : "synchronized (sLocaleLock) {\n                if (sIs24HourLocale != null && sIs24HourLocale.equals(locale)) {\n                    return sIs24Hour;\n                }\n            }",
      "info" : "SynchronizedStatement[6564-6727]:SynchronizedStatement[6104-6283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6591-6727]:Block[6131-6283]"
    }, {
      "left" : "if (sIs24HourLocale != null && sIs24HourLocale.equals(locale))",
      "right" : "if (sIs24HourLocale != null && sIs24HourLocale.equals(locale))",
      "info" : "IfStatement[6605-6717]:IfStatement[6149-6269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6668-6717]:Block[6212-6269]"
    }, {
      "left" : "return sIs24Hour;",
      "right" : "return sIs24Hour;",
      "info" : "ReturnStatement[6686-6703]:ReturnStatement[6234-6251]"
    }, {
      "left" : "java.text.DateFormat natural =\n                java.text.DateFormat.getTimeInstance(java.text.DateFormat.LONG, locale);",
      "right" : "java.text.DateFormat natural =\n                    java.text.DateFormat.getTimeInstance(java.text.DateFormat.LONG, locale);",
      "info" : "VariableDeclarationStatement[6737-6856]:VariableDeclarationStatement[6297-6420]"
    }, {
      "left" : "if (natural instanceof SimpleDateFormat)",
      "right" : "if (natural instanceof SimpleDateFormat)",
      "info" : "IfStatement[6866-7211]:IfStatement[6434-6819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6907-7168]:Block[6475-6768]"
    }, {
      "left" : "SimpleDateFormat sdf = (SimpleDateFormat) natural;",
      "right" : "SimpleDateFormat sdf = (SimpleDateFormat) natural;",
      "info" : "VariableDeclarationStatement[6921-6971]:VariableDeclarationStatement[6493-6543]"
    }, {
      "left" : "String pattern = sdf.toPattern();",
      "right" : "String pattern = sdf.toPattern();",
      "info" : "VariableDeclarationStatement[6984-7017]:VariableDeclarationStatement[6560-6593]"
    }, {
      "left" : "if (pattern.indexOf('H') >= 0)",
      "right" : "if (pattern.indexOf('H') >= 0)",
      "info" : "IfStatement[7031-7158]:IfStatement[6611-6754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7062-7107]:Block[6642-6695]"
    }, {
      "left" : "value = \"24\";",
      "right" : "value = \"24\";",
      "info" : "ExpressionStatement[7080-7093]:ExpressionStatement[6664-6677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7113-7158]:Block[6701-6754]"
    }, {
      "left" : "value = \"12\";",
      "right" : "value = \"12\";",
      "info" : "ExpressionStatement[7131-7144]:ExpressionStatement[6723-6736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7174-7211]:Block[6774-6819]"
    }, {
      "left" : "value = \"12\";",
      "right" : "value = \"12\";",
      "info" : "ExpressionStatement[7188-7201]:ExpressionStatement[6792-6805]"
    }, {
      "left" : "synchronized (sLocaleLock) {\n            sIs24HourLocale = locale;\n            sIs24Hour = value.equals(\"24\");\n        }",
      "right" : "synchronized (sLocaleLock) {\n                sIs24HourLocale = locale;\n                sIs24Hour = value.equals(\"24\");\n            }",
      "info" : "SynchronizedStatement[7221-7341]:SynchronizedStatement[6833-6965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7248-7341]:Block[6860-6965]"
    }, {
      "left" : "sIs24HourLocale = locale;",
      "right" : "sIs24HourLocale = locale;",
      "info" : "ExpressionStatement[7262-7287]:ExpressionStatement[6878-6903]"
    }, {
      "left" : "sIs24Hour = value.equals(\"24\");",
      "right" : "sIs24Hour = value.equals(\"24\");",
      "info" : "ExpressionStatement[7300-7331]:ExpressionStatement[6920-6951]"
    }, {
      "left" : "return sIs24Hour;",
      "right" : "return sIs24Hour;",
      "info" : "ReturnStatement[7351-7368]:ReturnStatement[6979-6996]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8927-8933]:Modifier[8601-8607]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8934-8940]:Modifier[8608-8614]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8941-8947]:SimpleType[8615-8621]"
    }, {
      "left" : "getBestDateTimePattern",
      "right" : "getBestDateTimePattern",
      "info" : "SimpleName[8948-8970]:SimpleName[8622-8644]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[8971-8984]:SingleVariableDeclaration[8645-8658]"
    }, {
      "left" : "String skeleton",
      "right" : "String skeleton",
      "info" : "SingleVariableDeclaration[8986-9001]:SingleVariableDeclaration[8660-8675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9003-9071]:Block[8677-8745]"
    }, {
      "left" : "return ICU.getBestDateTimePattern(skeleton, locale);",
      "right" : "return ICU.getBestDateTimePattern(skeleton, locale);",
      "info" : "ReturnStatement[9013-9065]:ReturnStatement[8687-8739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9388-9394]:Modifier[9062-9068]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9395-9401]:Modifier[9069-9075]"
    }, {
      "left" : "java.text.DateFormat",
      "right" : "java.text.DateFormat",
      "info" : "SimpleType[9402-9422]:SimpleType[9076-9096]"
    }, {
      "left" : "getTimeFormat",
      "right" : "getTimeFormat",
      "info" : "SimpleName[9423-9436]:SimpleName[9097-9110]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[9437-9452]:SingleVariableDeclaration[9111-9126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9454-9538]:Block[9128-9212]"
    }, {
      "left" : "return new java.text.SimpleDateFormat(getTimeFormatString(context));",
      "right" : "return new java.text.SimpleDateFormat(getTimeFormatString(context));",
      "info" : "ReturnStatement[9464-9532]:ReturnStatement[9138-9206]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9771-9777]:Modifier[9445-9451]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9778-9784]:Modifier[9452-9458]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[9785-9791]:SimpleType[9459-9465]"
    }, {
      "left" : "getTimeFormatString",
      "right" : "getTimeFormatString",
      "info" : "SimpleName[9792-9811]:SimpleName[9466-9485]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[9812-9827]:SingleVariableDeclaration[9486-9501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9829-9904]:Block[9503-9578]"
    }, {
      "left" : "return getTimeFormatString(context, UserHandle.myUserId());",
      "right" : "return getTimeFormatString(context, UserHandle.myUserId());",
      "info" : "ReturnStatement[9839-9898]:ReturnStatement[9513-9572]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10214-10220]:Modifier[9888-9894]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10221-10227]:Modifier[9895-9901]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10228-10234]:SimpleType[9902-9908]"
    }, {
      "left" : "getTimeFormatString",
      "right" : "getTimeFormatString",
      "info" : "SimpleName[10235-10254]:SimpleName[9909-9928]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[10255-10270]:SingleVariableDeclaration[9929-9944]"
    }, {
      "left" : "int userHandle",
      "right" : "int userHandle",
      "info" : "SingleVariableDeclaration[10272-10286]:SingleVariableDeclaration[9946-9960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10288-10470]:Block[9962-10144]"
    }, {
      "left" : "LocaleData d = LocaleData.get(context.getResources().getConfiguration().locale);",
      "right" : "LocaleData d = LocaleData.get(context.getResources().getConfiguration().locale);",
      "info" : "VariableDeclarationStatement[10298-10378]:VariableDeclarationStatement[9972-10052]"
    }, {
      "left" : "return is24HourFormat(context, userHandle) ? d.timeFormat24 : d.timeFormat12;",
      "right" : "return is24HourFormat(context, userHandle) ? d.timeFormat24 : d.timeFormat12;",
      "info" : "ReturnStatement[10387-10464]:ReturnStatement[10061-10138]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10822-10828]:Modifier[10496-10502]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10829-10835]:Modifier[10503-10509]"
    }, {
      "left" : "java.text.DateFormat",
      "right" : "java.text.DateFormat",
      "info" : "SimpleType[10836-10856]:SimpleType[10510-10530]"
    }, {
      "left" : "getDateFormat",
      "right" : "getDateFormat",
      "info" : "SimpleName[10857-10870]:SimpleName[10531-10544]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[10871-10886]:SingleVariableDeclaration[10545-10560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10888-11077]:Block[10562-10751]"
    }, {
      "left" : "String value = Settings.System.getString(context.getContentResolver(),\n                Settings.System.DATE_FORMAT);",
      "right" : "String value = Settings.System.getString(context.getContentResolver(),\n                Settings.System.DATE_FORMAT);",
      "info" : "VariableDeclarationStatement[10898-11014]:VariableDeclarationStatement[10572-10688]"
    }, {
      "left" : "return getDateFormatForSetting(context, value);",
      "right" : "return getDateFormatForSetting(context, value);",
      "info" : "ReturnStatement[11024-11071]:ReturnStatement[10698-10745]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11464-11470]:Modifier[11138-11144]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11471-11477]:Modifier[11145-11151]"
    }, {
      "left" : "java.text.DateFormat",
      "right" : "java.text.DateFormat",
      "info" : "SimpleType[11478-11498]:SimpleType[11152-11172]"
    }, {
      "left" : "getDateFormatForSetting",
      "right" : "getDateFormatForSetting",
      "info" : "SimpleName[11499-11522]:SimpleName[11173-11196]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[11523-11538]:SingleVariableDeclaration[11197-11212]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[11603-11615]:SingleVariableDeclaration[11277-11289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11617-11750]:Block[11291-11424]"
    }, {
      "left" : "String format = getDateFormatStringForSetting(context, value);",
      "right" : "String format = getDateFormatStringForSetting(context, value);",
      "info" : "VariableDeclarationStatement[11627-11689]:VariableDeclarationStatement[11301-11363]"
    }, {
      "left" : "return new java.text.SimpleDateFormat(format);",
      "right" : "return new java.text.SimpleDateFormat(format);",
      "info" : "ReturnStatement[11698-11744]:ReturnStatement[11372-11418]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11756-11763]:Modifier[11430-11437]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11764-11770]:Modifier[11438-11444]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11771-11777]:SimpleType[11445-11451]"
    }, {
      "left" : "getDateFormatStringForSetting",
      "right" : "getDateFormatStringForSetting",
      "info" : "SimpleName[11778-11807]:SimpleName[11452-11481]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[11808-11823]:SingleVariableDeclaration[11482-11497]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[11825-11837]:SingleVariableDeclaration[11499-11511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11839-13292]:Block[11513-12966]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[11849-13100]:IfStatement[11523-12774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11868-13100]:Block[11542-12774]"
    }, {
      "left" : "int month = value.indexOf('M');",
      "right" : "int month = value.indexOf('M');",
      "info" : "VariableDeclarationStatement[11882-11913]:VariableDeclarationStatement[11556-11587]"
    }, {
      "left" : "int day = value.indexOf('d');",
      "right" : "int day = value.indexOf('d');",
      "info" : "VariableDeclarationStatement[11926-11955]:VariableDeclarationStatement[11600-11629]"
    }, {
      "left" : "int year = value.indexOf('y');",
      "right" : "int year = value.indexOf('y');",
      "info" : "VariableDeclarationStatement[11968-11998]:VariableDeclarationStatement[11642-11672]"
    }, {
      "left" : "if (month >= 0 && day >= 0 && year >= 0)",
      "right" : "if (month >= 0 && day >= 0 && year >= 0)",
      "info" : "IfStatement[12012-13090]:IfStatement[11686-12764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12053-13090]:Block[11727-12764]"
    }, {
      "left" : "String template = context.getString(R.string.numeric_date_template);",
      "right" : "String template = context.getString(R.string.numeric_date_template);",
      "info" : "VariableDeclarationStatement[12071-12139]:VariableDeclarationStatement[11745-11813]"
    }, {
      "left" : "if (year < month && year < day)",
      "right" : "if (year < month && year < day)",
      "info" : "IfStatement[12156-13045]:IfStatement[11830-12719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12188-12451]:Block[11862-12125]"
    }, {
      "left" : "if (month < day)",
      "right" : "if (month < day)",
      "info" : "IfStatement[12210-12433]:IfStatement[11884-12107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12227-12327]:Block[11901-12001]"
    }, {
      "left" : "value = String.format(template, \"yyyy\", \"MM\", \"dd\");",
      "right" : "value = String.format(template, \"yyyy\", \"MM\", \"dd\");",
      "info" : "ExpressionStatement[12253-12305]:ExpressionStatement[11927-11979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12333-12433]:Block[12007-12107]"
    }, {
      "left" : "value = String.format(template, \"yyyy\", \"dd\", \"MM\");",
      "right" : "value = String.format(template, \"yyyy\", \"dd\", \"MM\");",
      "info" : "ExpressionStatement[12359-12411]:ExpressionStatement[12033-12085]"
    }, {
      "left" : "if (month < day)",
      "right" : "if (month < day)",
      "info" : "IfStatement[12457-13045]:IfStatement[12131-12719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12474-12748]:Block[12148-12422]"
    }, {
      "left" : "if (day < year)",
      "right" : "if (day < year)",
      "info" : "IfStatement[12496-12730]:IfStatement[12170-12404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12512-12612]:Block[12186-12286]"
    }, {
      "left" : "value = String.format(template, \"MM\", \"dd\", \"yyyy\");",
      "right" : "value = String.format(template, \"MM\", \"dd\", \"yyyy\");",
      "info" : "ExpressionStatement[12538-12590]:ExpressionStatement[12212-12264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12618-12730]:Block[12292-12404]"
    }, {
      "left" : "value = String.format(template, \"MM\", \"yyyy\", \"dd\");",
      "right" : "value = String.format(template, \"MM\", \"yyyy\", \"dd\");",
      "info" : "ExpressionStatement[12656-12708]:ExpressionStatement[12330-12382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12754-13045]:Block[12428-12719]"
    }, {
      "left" : "if (month < year)",
      "right" : "if (month < year)",
      "info" : "IfStatement[12791-13027]:IfStatement[12465-12701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12809-12909]:Block[12483-12583]"
    }, {
      "left" : "value = String.format(template, \"dd\", \"MM\", \"yyyy\");",
      "right" : "value = String.format(template, \"dd\", \"MM\", \"yyyy\");",
      "info" : "ExpressionStatement[12835-12887]:ExpressionStatement[12509-12561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12915-13027]:Block[12589-12701]"
    }, {
      "left" : "value = String.format(template, \"dd\", \"yyyy\", \"MM\");",
      "right" : "value = String.format(template, \"dd\", \"yyyy\", \"MM\");",
      "info" : "ExpressionStatement[12953-13005]:ExpressionStatement[12627-12679]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[13063-13076]:ReturnStatement[12737-12750]"
    }, {
      "left" : "LocaleData d = LocaleData.get(context.getResources().getConfiguration().locale);",
      "right" : "LocaleData d = LocaleData.get(context.getResources().getConfiguration().locale);",
      "info" : "VariableDeclarationStatement[13171-13251]:VariableDeclarationStatement[12845-12925]"
    }, {
      "left" : "return d.shortDateFormat4;",
      "right" : "return d.shortDateFormat4;",
      "info" : "ReturnStatement[13260-13286]:ReturnStatement[12934-12960]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13615-13621]:Modifier[13289-13295]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13622-13628]:Modifier[13296-13302]"
    }, {
      "left" : "java.text.DateFormat",
      "right" : "java.text.DateFormat",
      "info" : "SimpleType[13629-13649]:SimpleType[13303-13323]"
    }, {
      "left" : "getLongDateFormat",
      "right" : "getLongDateFormat",
      "info" : "SimpleName[13650-13667]:SimpleName[13324-13341]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[13668-13683]:SingleVariableDeclaration[13342-13357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13685-13772]:Block[13359-13446]"
    }, {
      "left" : "return java.text.DateFormat.getDateInstance(java.text.DateFormat.LONG);",
      "right" : "return java.text.DateFormat.getDateInstance(java.text.DateFormat.LONG);",
      "info" : "ReturnStatement[13695-13766]:ReturnStatement[13369-13440]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14085-14091]:Modifier[13759-13765]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14092-14098]:Modifier[13766-13772]"
    }, {
      "left" : "java.text.DateFormat",
      "right" : "java.text.DateFormat",
      "info" : "SimpleType[14099-14119]:SimpleType[13773-13793]"
    }, {
      "left" : "getMediumDateFormat",
      "right" : "getMediumDateFormat",
      "info" : "SimpleName[14120-14139]:SimpleName[13794-13813]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[14140-14155]:SingleVariableDeclaration[13814-13829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14157-14246]:Block[13831-13920]"
    }, {
      "left" : "return java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);",
      "right" : "return java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM);",
      "info" : "ReturnStatement[14167-14240]:ReturnStatement[13841-13914]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14787-14793]:Modifier[14461-14467]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14794-14800]:Modifier[14468-14474]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[14801-14807]:ArrayType[14475-14481]"
    }, {
      "left" : "getDateFormatOrder",
      "right" : "getDateFormatOrder",
      "info" : "SimpleName[14808-14826]:SimpleName[14482-14500]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[14827-14842]:SingleVariableDeclaration[14501-14516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14844-14920]:Block[14518-14594]"
    }, {
      "left" : "return ICU.getDateFormatOrder(getDateFormatString(context));",
      "right" : "return ICU.getDateFormatOrder(getDateFormatString(context));",
      "info" : "ReturnStatement[14854-14914]:ReturnStatement[14528-14588]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14926-14933]:Modifier[14600-14607]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14934-14940]:Modifier[14608-14614]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14941-14947]:SimpleType[14615-14621]"
    }, {
      "left" : "getDateFormatString",
      "right" : "getDateFormatString",
      "info" : "SimpleName[14948-14967]:SimpleName[14622-14641]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[14968-14983]:SingleVariableDeclaration[14642-14657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14985-15180]:Block[14659-14854]"
    }, {
      "left" : "String value = Settings.System.getString(context.getContentResolver(),\n                Settings.System.DATE_FORMAT);",
      "right" : "String value = Settings.System.getString(context.getContentResolver(),\n                Settings.System.DATE_FORMAT);",
      "info" : "VariableDeclarationStatement[14995-15111]:VariableDeclarationStatement[14669-14785]"
    }, {
      "left" : "return getDateFormatStringForSetting(context, value);",
      "right" : "return getDateFormatStringForSetting(context, value);",
      "info" : "ReturnStatement[15121-15174]:ReturnStatement[14795-14848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15574-15580]:Modifier[15248-15254]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15581-15587]:Modifier[15255-15261]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[15588-15600]:SimpleType[15262-15274]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[15601-15607]:SimpleName[15275-15281]"
    }, {
      "left" : "CharSequence inFormat",
      "right" : "CharSequence inFormat",
      "info" : "SingleVariableDeclaration[15608-15629]:SingleVariableDeclaration[15282-15303]"
    }, {
      "left" : "long inTimeInMillis",
      "right" : "long inTimeInMillis",
      "info" : "SingleVariableDeclaration[15631-15650]:SingleVariableDeclaration[15305-15324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15652-15718]:Block[15326-15392]"
    }, {
      "left" : "return format(inFormat, new Date(inTimeInMillis));",
      "right" : "return format(inFormat, new Date(inTimeInMillis));",
      "info" : "ReturnStatement[15662-15712]:ReturnStatement[15336-15386]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16072-16078]:Modifier[15746-15752]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16079-16085]:Modifier[15753-15759]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[16086-16098]:SimpleType[15760-15772]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[16099-16105]:SimpleName[15773-15779]"
    }, {
      "left" : "CharSequence inFormat",
      "right" : "CharSequence inFormat",
      "info" : "SingleVariableDeclaration[16106-16127]:SingleVariableDeclaration[15780-15801]"
    }, {
      "left" : "Date inDate",
      "right" : "Date inDate",
      "info" : "SingleVariableDeclaration[16129-16140]:SingleVariableDeclaration[15803-15814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16142-16258]:Block[15816-15932]"
    }, {
      "left" : "Calendar c = new GregorianCalendar();",
      "right" : "Calendar c = new GregorianCalendar();",
      "info" : "VariableDeclarationStatement[16152-16189]:VariableDeclarationStatement[15826-15863]"
    }, {
      "left" : "c.setTime(inDate);",
      "right" : "c.setTime(inDate);",
      "info" : "ExpressionStatement[16198-16216]:ExpressionStatement[15872-15890]"
    }, {
      "left" : "return format(inFormat, c);",
      "right" : "return format(inFormat, c);",
      "info" : "ReturnStatement[16225-16252]:ReturnStatement[15899-15926]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16630-16636]:Modifier[16304-16310]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16637-16643]:Modifier[16311-16317]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16644-16651]:PrimitiveType[16318-16325]"
    }, {
      "left" : "hasSeconds",
      "right" : "hasSeconds",
      "info" : "SimpleName[16652-16662]:SimpleName[16326-16336]"
    }, {
      "left" : "CharSequence inFormat",
      "right" : "CharSequence inFormat",
      "info" : "SingleVariableDeclaration[16663-16684]:SingleVariableDeclaration[16337-16358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16686-16742]:Block[16360-16416]"
    }, {
      "left" : "return hasDesignator(inFormat, SECONDS);",
      "right" : "return hasDesignator(inFormat, SECONDS);",
      "info" : "ReturnStatement[16696-16736]:ReturnStatement[16370-16410]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16919-16925]:Modifier[16593-16599]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16926-16932]:Modifier[16600-16606]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16933-16940]:PrimitiveType[16607-16614]"
    }, {
      "left" : "hasDesignator",
      "right" : "hasDesignator",
      "info" : "SimpleName[16941-16954]:SimpleName[16615-16628]"
    }, {
      "left" : "CharSequence inFormat",
      "right" : "CharSequence inFormat",
      "info" : "SingleVariableDeclaration[16955-16976]:SingleVariableDeclaration[16629-16650]"
    }, {
      "left" : "char designator",
      "right" : "char designator",
      "info" : "SingleVariableDeclaration[16978-16993]:SingleVariableDeclaration[16652-16667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16995-17448]:Block[16669-17122]"
    }, {
      "left" : "if (inFormat == null)",
      "right" : "if (inFormat == null)",
      "info" : "IfStatement[17005-17040]:IfStatement[16679-16714]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[17027-17040]:ReturnStatement[16701-16714]"
    }, {
      "left" : "final int length = inFormat.length();",
      "right" : "final int length = inFormat.length();",
      "info" : "VariableDeclarationStatement[17050-17087]:VariableDeclarationStatement[16724-16761]"
    }, {
      "left" : "int c;",
      "right" : "int c;",
      "info" : "VariableDeclarationStatement[17097-17103]:VariableDeclarationStatement[16771-16777]"
    }, {
      "left" : "int count;",
      "right" : "int count;",
      "info" : "VariableDeclarationStatement[17112-17122]:VariableDeclarationStatement[16786-16796]"
    }, {
      "left" : "for (int i = 0; i < length; i += count)",
      "right" : "for (int i = 0; i < length; i += count)",
      "info" : "ForStatement[17132-17419]:ForStatement[16806-17093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17172-17419]:Block[16846-17093]"
    }, {
      "left" : "count = 1;",
      "right" : "count = 1;",
      "info" : "ExpressionStatement[17186-17196]:ExpressionStatement[16860-16870]"
    }, {
      "left" : "c = inFormat.charAt(i);",
      "right" : "c = inFormat.charAt(i);",
      "info" : "ExpressionStatement[17209-17232]:ExpressionStatement[16883-16906]"
    }, {
      "left" : "if (c == QUOTE)",
      "right" : "if (c == QUOTE)",
      "info" : "IfStatement[17246-17409]:IfStatement[16920-17083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17262-17338]:Block[16936-17012]"
    }, {
      "left" : "count = skipQuotedText(inFormat, i, length);",
      "right" : "count = skipQuotedText(inFormat, i, length);",
      "info" : "ExpressionStatement[17280-17324]:ExpressionStatement[16954-16998]"
    }, {
      "left" : "if (c == designator)",
      "right" : "if (c == designator)",
      "info" : "IfStatement[17344-17409]:IfStatement[17018-17083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17365-17409]:Block[17039-17083]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[17383-17395]:ReturnStatement[17057-17069]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[17429-17442]:ReturnStatement[17103-17116]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17454-17461]:Modifier[17128-17135]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17462-17468]:Modifier[17136-17142]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[17469-17472]:PrimitiveType[17143-17146]"
    }, {
      "left" : "skipQuotedText",
      "right" : "skipQuotedText",
      "info" : "SimpleName[17473-17487]:SimpleName[17147-17161]"
    }, {
      "left" : "CharSequence s",
      "right" : "CharSequence s",
      "info" : "SingleVariableDeclaration[17488-17502]:SingleVariableDeclaration[17162-17176]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[17504-17509]:SingleVariableDeclaration[17178-17183]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[17511-17518]:SingleVariableDeclaration[17185-17192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17520-18110]:Block[17194-17784]"
    }, {
      "left" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "right" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "info" : "IfStatement[17530-17608]:IfStatement[17204-17282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17575-17608]:Block[17249-17282]"
    }, {
      "left" : "return 2;",
      "right" : "return 2;",
      "info" : "ReturnStatement[17589-17598]:ReturnStatement[17263-17272]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[17618-17632]:VariableDeclarationStatement[17292-17306]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[17671-17675]:ExpressionStatement[17345-17349]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[17685-18081]:WhileStatement[17359-17755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17701-18081]:Block[17375-17755]"
    }, {
      "left" : "char c = s.charAt(i);",
      "right" : "char c = s.charAt(i);",
      "info" : "VariableDeclarationStatement[17715-17736]:VariableDeclarationStatement[17389-17410]"
    }, {
      "left" : "if (c == QUOTE)",
      "right" : "if (c == QUOTE)",
      "info" : "IfStatement[17750-18071]:IfStatement[17424-17745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17766-18004]:Block[17440-17678]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[17784-17792]:ExpressionStatement[17458-17466]"
    }, {
      "left" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "right" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "info" : "IfStatement[17849-17990]:IfStatement[17523-17664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17894-17938]:Block[17568-17612]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[17916-17920]:ExpressionStatement[17590-17594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17944-17990]:Block[17618-17664]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17966-17972]:BreakStatement[17640-17646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18010-18071]:Block[17684-17745]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[18028-18032]:ExpressionStatement[17702-17706]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[18049-18057]:ExpressionStatement[17723-17731]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[18091-18104]:ReturnStatement[17765-17778]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18468-18474]:Modifier[18142-18148]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18475-18481]:Modifier[18149-18155]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[18482-18494]:SimpleType[18156-18168]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[18495-18501]:SimpleName[18169-18175]"
    }, {
      "left" : "CharSequence inFormat",
      "right" : "CharSequence inFormat",
      "info" : "SingleVariableDeclaration[18502-18523]:SingleVariableDeclaration[18176-18197]"
    }, {
      "left" : "Calendar inDate",
      "right" : "Calendar inDate",
      "info" : "SingleVariableDeclaration[18525-18540]:SingleVariableDeclaration[18199-18214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18542-22076]:Block[18216-21750]"
    }, {
      "left" : "SpannableStringBuilder s = new SpannableStringBuilder(inFormat);",
      "right" : "SpannableStringBuilder s = new SpannableStringBuilder(inFormat);",
      "info" : "VariableDeclarationStatement[18552-18616]:VariableDeclarationStatement[18226-18290]"
    }, {
      "left" : "int count;",
      "right" : "int count;",
      "info" : "VariableDeclarationStatement[18625-18635]:VariableDeclarationStatement[18299-18309]"
    }, {
      "left" : "LocaleData localeData = LocaleData.get(Locale.getDefault());",
      "right" : "LocaleData localeData = LocaleData.get(Locale.getDefault());",
      "info" : "VariableDeclarationStatement[18645-18705]:VariableDeclarationStatement[18319-18379]"
    }, {
      "left" : "int len = inFormat.length();",
      "right" : "int len = inFormat.length();",
      "info" : "VariableDeclarationStatement[18715-18743]:VariableDeclarationStatement[18389-18417]"
    }, {
      "left" : "for (int i = 0; i < len; i += count)",
      "right" : "for (int i = 0; i < len; i += count)",
      "info" : "ForStatement[18753-21925]:ForStatement[18427-21599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18790-21925]:Block[18464-21599]"
    }, {
      "left" : "count = 1;",
      "right" : "count = 1;",
      "info" : "ExpressionStatement[18804-18814]:ExpressionStatement[18478-18488]"
    }, {
      "left" : "int c = s.charAt(i);",
      "right" : "int c = s.charAt(i);",
      "info" : "VariableDeclarationStatement[18827-18847]:VariableDeclarationStatement[18501-18521]"
    }, {
      "left" : "if (c == QUOTE)",
      "right" : "if (c == QUOTE)",
      "info" : "IfStatement[18861-19005]:IfStatement[18535-18679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18877-19005]:Block[18551-18679]"
    }, {
      "left" : "count = appendQuotedText(s, i, len);",
      "right" : "count = appendQuotedText(s, i, len);",
      "info" : "ExpressionStatement[18895-18931]:ExpressionStatement[18569-18605]"
    }, {
      "left" : "len = s.length();",
      "right" : "len = s.length();",
      "info" : "ExpressionStatement[18948-18965]:ExpressionStatement[18622-18639]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[18982-18991]:ContinueStatement[18656-18665]"
    }, {
      "left" : "while ((i + count < len) && (s.charAt(i + count) == c))",
      "right" : "while ((i + count < len) && (s.charAt(i + count) == c))",
      "info" : "WhileStatement[19019-19115]:WhileStatement[18693-18789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19075-19115]:Block[18749-18789]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[19093-19101]:ExpressionStatement[18767-18775]"
    }, {
      "left" : "String replacement;",
      "right" : "String replacement;",
      "info" : "VariableDeclarationStatement[19129-19148]:VariableDeclarationStatement[18803-18822]"
    }, {
      "left" : "switch (c) {\n                case 'A':\n                case 'a':\n                    replacement = localeData.amPm[inDate.get(Calendar.AM_PM) - Calendar.AM];\n                    break;\n                case 'd':\n                    replacement = zeroPad(inDate.get(Calendar.DATE), count);\n                    break;\n                case 'c':\n                case 'E':\n                    replacement = getDayOfWeekString(localeData,\n                                                     inDate.get(Calendar.DAY_OF_WEEK), count, c);\n                    break;\n                case 'K': // hour in am/pm (0-11)\n                case 'h': // hour in am/pm (1-12)\n                    {\n                        int hour = inDate.get(Calendar.HOUR);\n                        if (c == 'h' && hour == 0) {\n                            hour = 12;\n                        }\n                        replacement = zeroPad(hour, count);\n                    }\n                    break;\n                case 'H': // hour in day (0-23)\n                case 'k': // hour in day (1-24) [but see note below]\n                    {\n                        int hour = inDate.get(Calendar.HOUR_OF_DAY);\n                        // Historically on Android 'k' was interpreted as 'H', which wasn't\n                        // implemented, so pretty much all callers that want to format 24-hour\n                        // times are abusing 'k'. http://b/8359981.\n                        if (false && c == 'k' && hour == 0) {\n                            hour = 24;\n                        }\n                        replacement = zeroPad(hour, count);\n                    }\n                    break;\n                case 'L':\n                case 'M':\n                    replacement = getMonthString(localeData,\n                                                 inDate.get(Calendar.MONTH), count, c);\n                    break;\n                case 'm':\n                    replacement = zeroPad(inDate.get(Calendar.MINUTE), count);\n                    break;\n                case 's':\n                    replacement = zeroPad(inDate.get(Calendar.SECOND), count);\n                    break;\n                case 'y':\n                    replacement = getYearString(inDate.get(Calendar.YEAR), count);\n                    break;\n                case 'z':\n                    replacement = getTimeZoneString(inDate, count);\n                    break;\n                default:\n                    replacement = null;\n                    break;\n            }",
      "right" : "switch (c) {\n                case 'A':\n                case 'a':\n                    replacement = localeData.amPm[inDate.get(Calendar.AM_PM) - Calendar.AM];\n                    break;\n                case 'd':\n                    replacement = zeroPad(inDate.get(Calendar.DATE), count);\n                    break;\n                case 'c':\n                case 'E':\n                    replacement = getDayOfWeekString(localeData,\n                                                     inDate.get(Calendar.DAY_OF_WEEK), count, c);\n                    break;\n                case 'K': // hour in am/pm (0-11)\n                case 'h': // hour in am/pm (1-12)\n                    {\n                        int hour = inDate.get(Calendar.HOUR);\n                        if (c == 'h' && hour == 0) {\n                            hour = 12;\n                        }\n                        replacement = zeroPad(hour, count);\n                    }\n                    break;\n                case 'H': // hour in day (0-23)\n                case 'k': // hour in day (1-24) [but see note below]\n                    {\n                        int hour = inDate.get(Calendar.HOUR_OF_DAY);\n                        // Historically on Android 'k' was interpreted as 'H', which wasn't\n                        // implemented, so pretty much all callers that want to format 24-hour\n                        // times are abusing 'k'. http://b/8359981.\n                        if (false && c == 'k' && hour == 0) {\n                            hour = 24;\n                        }\n                        replacement = zeroPad(hour, count);\n                    }\n                    break;\n                case 'L':\n                case 'M':\n                    replacement = getMonthString(localeData,\n                                                 inDate.get(Calendar.MONTH), count, c);\n                    break;\n                case 'm':\n                    replacement = zeroPad(inDate.get(Calendar.MINUTE), count);\n                    break;\n                case 's':\n                    replacement = zeroPad(inDate.get(Calendar.SECOND), count);\n                    break;\n                case 'y':\n                    replacement = getYearString(inDate.get(Calendar.YEAR), count);\n                    break;\n                case 'z':\n                    replacement = getTimeZoneString(inDate, count);\n                    break;\n                default:\n                    replacement = null;\n                    break;\n            }",
      "info" : "SwitchStatement[19161-21682]:SwitchStatement[18835-21356]"
    }, {
      "left" : "case 'A':",
      "right" : "case 'A':",
      "info" : "SwitchCase[19190-19199]:SwitchCase[18864-18873]"
    }, {
      "left" : "case 'a':",
      "right" : "case 'a':",
      "info" : "SwitchCase[19216-19225]:SwitchCase[18890-18899]"
    }, {
      "left" : "replacement = localeData.amPm[inDate.get(Calendar.AM_PM) - Calendar.AM];",
      "right" : "replacement = localeData.amPm[inDate.get(Calendar.AM_PM) - Calendar.AM];",
      "info" : "ExpressionStatement[19246-19318]:ExpressionStatement[18920-18992]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[19339-19345]:BreakStatement[19013-19019]"
    }, {
      "left" : "case 'd':",
      "right" : "case 'd':",
      "info" : "SwitchCase[19362-19371]:SwitchCase[19036-19045]"
    }, {
      "left" : "replacement = zeroPad(inDate.get(Calendar.DATE), count);",
      "right" : "replacement = zeroPad(inDate.get(Calendar.DATE), count);",
      "info" : "ExpressionStatement[19392-19448]:ExpressionStatement[19066-19122]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[19469-19475]:BreakStatement[19143-19149]"
    }, {
      "left" : "case 'c':",
      "right" : "case 'c':",
      "info" : "SwitchCase[19492-19501]:SwitchCase[19166-19175]"
    }, {
      "left" : "case 'E':",
      "right" : "case 'E':",
      "info" : "SwitchCase[19518-19527]:SwitchCase[19192-19201]"
    }, {
      "left" : "replacement = getDayOfWeekString(localeData,\n                                                     inDate.get(Calendar.DAY_OF_WEEK), count, c);",
      "right" : "replacement = getDayOfWeekString(localeData,\n                                                     inDate.get(Calendar.DAY_OF_WEEK), count, c);",
      "info" : "ExpressionStatement[19548-19690]:ExpressionStatement[19222-19364]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[19711-19717]:BreakStatement[19385-19391]"
    }, {
      "left" : "case 'K':",
      "right" : "case 'K':",
      "info" : "SwitchCase[19734-19743]:SwitchCase[19408-19417]"
    }, {
      "left" : "case 'h':",
      "right" : "case 'h':",
      "info" : "SwitchCase[19784-19793]:SwitchCase[19458-19467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19838-20101]:Block[19512-19775]"
    }, {
      "left" : "int hour = inDate.get(Calendar.HOUR);",
      "right" : "int hour = inDate.get(Calendar.HOUR);",
      "info" : "VariableDeclarationStatement[19864-19901]:VariableDeclarationStatement[19538-19575]"
    }, {
      "left" : "if (c == 'h' && hour == 0)",
      "right" : "if (c == 'h' && hour == 0)",
      "info" : "IfStatement[19926-20019]:IfStatement[19600-19693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19953-20019]:Block[19627-19693]"
    }, {
      "left" : "hour = 12;",
      "right" : "hour = 12;",
      "info" : "ExpressionStatement[19983-19993]:ExpressionStatement[19657-19667]"
    }, {
      "left" : "replacement = zeroPad(hour, count);",
      "right" : "replacement = zeroPad(hour, count);",
      "info" : "ExpressionStatement[20044-20079]:ExpressionStatement[19718-19753]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20122-20128]:BreakStatement[19796-19802]"
    }, {
      "left" : "case 'H':",
      "right" : "case 'H':",
      "info" : "SwitchCase[20145-20154]:SwitchCase[19819-19828]"
    }, {
      "left" : "case 'k':",
      "right" : "case 'k':",
      "info" : "SwitchCase[20193-20202]:SwitchCase[19867-19876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20266-20800]:Block[19940-20474]"
    }, {
      "left" : "int hour = inDate.get(Calendar.HOUR_OF_DAY);",
      "right" : "int hour = inDate.get(Calendar.HOUR_OF_DAY);",
      "info" : "VariableDeclarationStatement[20292-20336]:VariableDeclarationStatement[19966-20010]"
    }, {
      "left" : "if (false && c == 'k' && hour == 0)",
      "right" : "if (false && c == 'k' && hour == 0)",
      "info" : "IfStatement[20616-20718]:IfStatement[20290-20392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20652-20718]:Block[20326-20392]"
    }, {
      "left" : "hour = 24;",
      "right" : "hour = 24;",
      "info" : "ExpressionStatement[20682-20692]:ExpressionStatement[20356-20366]"
    }, {
      "left" : "replacement = zeroPad(hour, count);",
      "right" : "replacement = zeroPad(hour, count);",
      "info" : "ExpressionStatement[20743-20778]:ExpressionStatement[20417-20452]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20821-20827]:BreakStatement[20495-20501]"
    }, {
      "left" : "case 'L':",
      "right" : "case 'L':",
      "info" : "SwitchCase[20844-20853]:SwitchCase[20518-20527]"
    }, {
      "left" : "case 'M':",
      "right" : "case 'M':",
      "info" : "SwitchCase[20870-20879]:SwitchCase[20544-20553]"
    }, {
      "left" : "replacement = getMonthString(localeData,\n                                                 inDate.get(Calendar.MONTH), count, c);",
      "right" : "replacement = getMonthString(localeData,\n                                                 inDate.get(Calendar.MONTH), count, c);",
      "info" : "ExpressionStatement[20900-21028]:ExpressionStatement[20574-20702]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21049-21055]:BreakStatement[20723-20729]"
    }, {
      "left" : "case 'm':",
      "right" : "case 'm':",
      "info" : "SwitchCase[21072-21081]:SwitchCase[20746-20755]"
    }, {
      "left" : "replacement = zeroPad(inDate.get(Calendar.MINUTE), count);",
      "right" : "replacement = zeroPad(inDate.get(Calendar.MINUTE), count);",
      "info" : "ExpressionStatement[21102-21160]:ExpressionStatement[20776-20834]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21181-21187]:BreakStatement[20855-20861]"
    }, {
      "left" : "case 's':",
      "right" : "case 's':",
      "info" : "SwitchCase[21204-21213]:SwitchCase[20878-20887]"
    }, {
      "left" : "replacement = zeroPad(inDate.get(Calendar.SECOND), count);",
      "right" : "replacement = zeroPad(inDate.get(Calendar.SECOND), count);",
      "info" : "ExpressionStatement[21234-21292]:ExpressionStatement[20908-20966]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21313-21319]:BreakStatement[20987-20993]"
    }, {
      "left" : "case 'y':",
      "right" : "case 'y':",
      "info" : "SwitchCase[21336-21345]:SwitchCase[21010-21019]"
    }, {
      "left" : "replacement = getYearString(inDate.get(Calendar.YEAR), count);",
      "right" : "replacement = getYearString(inDate.get(Calendar.YEAR), count);",
      "info" : "ExpressionStatement[21366-21428]:ExpressionStatement[21040-21102]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21449-21455]:BreakStatement[21123-21129]"
    }, {
      "left" : "case 'z':",
      "right" : "case 'z':",
      "info" : "SwitchCase[21472-21481]:SwitchCase[21146-21155]"
    }, {
      "left" : "replacement = getTimeZoneString(inDate, count);",
      "right" : "replacement = getTimeZoneString(inDate, count);",
      "info" : "ExpressionStatement[21502-21549]:ExpressionStatement[21176-21223]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21570-21576]:BreakStatement[21244-21250]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[21593-21601]:SwitchCase[21267-21275]"
    }, {
      "left" : "replacement = null;",
      "right" : "replacement = null;",
      "info" : "ExpressionStatement[21622-21641]:ExpressionStatement[21296-21315]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21662-21668]:BreakStatement[21336-21342]"
    }, {
      "left" : "if (replacement != null)",
      "right" : "if (replacement != null)",
      "info" : "IfStatement[21696-21915]:IfStatement[21370-21589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21721-21915]:Block[21395-21589]"
    }, {
      "left" : "s.replace(i, i + count, replacement);",
      "right" : "s.replace(i, i + count, replacement);",
      "info" : "ExpressionStatement[21739-21776]:ExpressionStatement[21413-21450]"
    }, {
      "left" : "count = replacement.length();",
      "right" : "count = replacement.length();",
      "info" : "ExpressionStatement[21793-21822]:ExpressionStatement[21467-21496]"
    }, {
      "left" : "len = s.length();",
      "right" : "len = s.length();",
      "info" : "ExpressionStatement[21884-21901]:ExpressionStatement[21558-21575]"
    }, {
      "left" : "if (inFormat instanceof Spanned)",
      "right" : "if (inFormat instanceof Spanned)",
      "info" : "IfStatement[21935-22070]:IfStatement[21609-21744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21968-22020]:Block[21642-21694]"
    }, {
      "left" : "return new SpannedString(s);",
      "right" : "return new SpannedString(s);",
      "info" : "ReturnStatement[21982-22010]:ReturnStatement[21656-21684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22026-22070]:Block[21700-21744]"
    }, {
      "left" : "return s.toString();",
      "right" : "return s.toString();",
      "info" : "ReturnStatement[22040-22060]:ReturnStatement[21714-21734]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[22082-22089]:Modifier[21756-21763]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22090-22096]:Modifier[21764-21770]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[22097-22103]:SimpleType[21771-21777]"
    }, {
      "left" : "getDayOfWeekString",
      "right" : "getDayOfWeekString",
      "info" : "SimpleName[22104-22122]:SimpleName[21778-21796]"
    }, {
      "left" : "LocaleData ld",
      "right" : "LocaleData ld",
      "info" : "SingleVariableDeclaration[22123-22136]:SingleVariableDeclaration[21797-21810]"
    }, {
      "left" : "int day",
      "right" : "int day",
      "info" : "SingleVariableDeclaration[22138-22145]:SingleVariableDeclaration[21812-21819]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[22147-22156]:SingleVariableDeclaration[21821-21830]"
    }, {
      "left" : "int kind",
      "right" : "int kind",
      "info" : "SingleVariableDeclaration[22158-22166]:SingleVariableDeclaration[21832-21840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22168-22592]:Block[21842-22266]"
    }, {
      "left" : "boolean standalone = (kind == 'c');",
      "right" : "boolean standalone = (kind == 'c');",
      "info" : "VariableDeclarationStatement[22178-22213]:VariableDeclarationStatement[21852-21887]"
    }, {
      "left" : "if (count == 5)",
      "right" : "if (count == 5)",
      "info" : "IfStatement[22222-22586]:IfStatement[21896-22260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22238-22344]:Block[21912-22018]"
    }, {
      "left" : "return standalone ? ld.tinyStandAloneWeekdayNames[day] : ld.tinyWeekdayNames[day];",
      "right" : "return standalone ? ld.tinyStandAloneWeekdayNames[day] : ld.tinyWeekdayNames[day];",
      "info" : "ReturnStatement[22252-22334]:ReturnStatement[21926-22008]"
    }, {
      "left" : "if (count == 4)",
      "right" : "if (count == 4)",
      "info" : "IfStatement[22350-22586]:IfStatement[22024-22260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22366-22472]:Block[22040-22146]"
    }, {
      "left" : "return standalone ? ld.longStandAloneWeekdayNames[day] : ld.longWeekdayNames[day];",
      "right" : "return standalone ? ld.longStandAloneWeekdayNames[day] : ld.longWeekdayNames[day];",
      "info" : "ReturnStatement[22380-22462]:ReturnStatement[22054-22136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22478-22586]:Block[22152-22260]"
    }, {
      "left" : "return standalone ? ld.shortStandAloneWeekdayNames[day] : ld.shortWeekdayNames[day];",
      "right" : "return standalone ? ld.shortStandAloneWeekdayNames[day] : ld.shortWeekdayNames[day];",
      "info" : "ReturnStatement[22492-22576]:ReturnStatement[22166-22250]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[22598-22605]:Modifier[22272-22279]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22606-22612]:Modifier[22280-22286]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[22613-22619]:SimpleType[22287-22293]"
    }, {
      "left" : "getMonthString",
      "right" : "getMonthString",
      "info" : "SimpleName[22620-22634]:SimpleName[22294-22308]"
    }, {
      "left" : "LocaleData ld",
      "right" : "LocaleData ld",
      "info" : "SingleVariableDeclaration[22635-22648]:SingleVariableDeclaration[22309-22322]"
    }, {
      "left" : "int month",
      "right" : "int month",
      "info" : "SingleVariableDeclaration[22650-22659]:SingleVariableDeclaration[22324-22333]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[22661-22670]:SingleVariableDeclaration[22335-22344]"
    }, {
      "left" : "int kind",
      "right" : "int kind",
      "info" : "SingleVariableDeclaration[22672-22680]:SingleVariableDeclaration[22346-22354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22682-23240]:Block[22356-22914]"
    }, {
      "left" : "boolean standalone = (kind == 'L');",
      "right" : "boolean standalone = (kind == 'L');",
      "info" : "VariableDeclarationStatement[22692-22727]:VariableDeclarationStatement[22366-22401]"
    }, {
      "left" : "if (count == 5)",
      "right" : "if (count == 5)",
      "info" : "IfStatement[22736-23234]:IfStatement[22410-22908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22752-22858]:Block[22426-22532]"
    }, {
      "left" : "return standalone ? ld.tinyStandAloneMonthNames[month] : ld.tinyMonthNames[month];",
      "right" : "return standalone ? ld.tinyStandAloneMonthNames[month] : ld.tinyMonthNames[month];",
      "info" : "ReturnStatement[22766-22848]:ReturnStatement[22440-22522]"
    }, {
      "left" : "if (count == 4)",
      "right" : "if (count == 4)",
      "info" : "IfStatement[22864-23234]:IfStatement[22538-22908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22880-22986]:Block[22554-22660]"
    }, {
      "left" : "return standalone ? ld.longStandAloneMonthNames[month] : ld.longMonthNames[month];",
      "right" : "return standalone ? ld.longStandAloneMonthNames[month] : ld.longMonthNames[month];",
      "info" : "ReturnStatement[22894-22976]:ReturnStatement[22568-22650]"
    }, {
      "left" : "if (count == 3)",
      "right" : "if (count == 3)",
      "info" : "IfStatement[22992-23234]:IfStatement[22666-22908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23008-23116]:Block[22682-22790]"
    }, {
      "left" : "return standalone ? ld.shortStandAloneMonthNames[month] : ld.shortMonthNames[month];",
      "right" : "return standalone ? ld.shortStandAloneMonthNames[month] : ld.shortMonthNames[month];",
      "info" : "ReturnStatement[23022-23106]:ReturnStatement[22696-22780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23122-23234]:Block[22796-22908]"
    }, {
      "left" : "return zeroPad(month+1, count);",
      "right" : "return zeroPad(month+1, count);",
      "info" : "ReturnStatement[23193-23224]:ReturnStatement[22867-22898]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23246-23253]:Modifier[22920-22927]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23254-23260]:Modifier[22928-22934]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23261-23267]:SimpleType[22935-22941]"
    }, {
      "left" : "getTimeZoneString",
      "right" : "getTimeZoneString",
      "info" : "SimpleName[23268-23285]:SimpleName[22942-22959]"
    }, {
      "left" : "Calendar inDate",
      "right" : "Calendar inDate",
      "info" : "SingleVariableDeclaration[23286-23301]:SingleVariableDeclaration[22960-22975]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[23303-23312]:SingleVariableDeclaration[22977-22986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23314-23759]:Block[22988-23433]"
    }, {
      "left" : "TimeZone tz = inDate.getTimeZone();",
      "right" : "TimeZone tz = inDate.getTimeZone();",
      "info" : "VariableDeclarationStatement[23324-23359]:VariableDeclarationStatement[22998-23033]"
    }, {
      "left" : "if (count < 2)",
      "right" : "if (count < 2)",
      "info" : "IfStatement[23368-23753]:IfStatement[23042-23427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23383-23613]:Block[23057-23287]"
    }, {
      "left" : "return formatZoneOffset(inDate.get(Calendar.DST_OFFSET) +\n                                    inDate.get(Calendar.ZONE_OFFSET),\n                                    count);",
      "right" : "return formatZoneOffset(inDate.get(Calendar.DST_OFFSET) +\n                                    inDate.get(Calendar.ZONE_OFFSET),\n                                    count);",
      "info" : "ReturnStatement[23432-23603]:ReturnStatement[23106-23277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23619-23753]:Block[23293-23427]"
    }, {
      "left" : "boolean dst = inDate.get(Calendar.DST_OFFSET) != 0;",
      "right" : "boolean dst = inDate.get(Calendar.DST_OFFSET) != 0;",
      "info" : "VariableDeclarationStatement[23633-23684]:VariableDeclarationStatement[23307-23358]"
    }, {
      "left" : "return tz.getDisplayName(dst, TimeZone.SHORT);",
      "right" : "return tz.getDisplayName(dst, TimeZone.SHORT);",
      "info" : "ReturnStatement[23697-23743]:ReturnStatement[23371-23417]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23765-23772]:Modifier[23439-23446]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23773-23779]:Modifier[23447-23453]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23780-23786]:SimpleType[23454-23460]"
    }, {
      "left" : "formatZoneOffset",
      "right" : "formatZoneOffset",
      "info" : "SimpleName[23787-23803]:SimpleName[23461-23477]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[23804-23814]:SingleVariableDeclaration[23478-23488]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[23816-23825]:SingleVariableDeclaration[23490-23499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23827-24268]:Block[23501-23942]"
    }, {
      "left" : "offset /= 1000;",
      "right" : "offset /= 1000;",
      "info" : "ExpressionStatement[23837-23852]:ExpressionStatement[23511-23526]"
    }, {
      "left" : "StringBuilder tb = new StringBuilder();",
      "right" : "StringBuilder tb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[23888-23927]:VariableDeclarationStatement[23562-23601]"
    }, {
      "left" : "if (offset < 0)",
      "right" : "if (offset < 0)",
      "info" : "IfStatement[23937-24073]:IfStatement[23611-23747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23953-24025]:Block[23627-23699]"
    }, {
      "left" : "tb.insert(0, \"-\");",
      "right" : "tb.insert(0, \"-\");",
      "info" : "ExpressionStatement[23967-23985]:ExpressionStatement[23641-23659]"
    }, {
      "left" : "offset = -offset;",
      "right" : "offset = -offset;",
      "info" : "ExpressionStatement[23998-24015]:ExpressionStatement[23672-23689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24031-24073]:Block[23705-23747]"
    }, {
      "left" : "tb.insert(0, \"+\");",
      "right" : "tb.insert(0, \"+\");",
      "info" : "ExpressionStatement[24045-24063]:ExpressionStatement[23719-23737]"
    }, {
      "left" : "int hours = offset / 3600;",
      "right" : "int hours = offset / 3600;",
      "info" : "VariableDeclarationStatement[24083-24109]:VariableDeclarationStatement[23757-23783]"
    }, {
      "left" : "int minutes = (offset % 3600) / 60;",
      "right" : "int minutes = (offset % 3600) / 60;",
      "info" : "VariableDeclarationStatement[24118-24153]:VariableDeclarationStatement[23792-23827]"
    }, {
      "left" : "tb.append(zeroPad(hours, 2));",
      "right" : "tb.append(zeroPad(hours, 2));",
      "info" : "ExpressionStatement[24163-24192]:ExpressionStatement[23837-23866]"
    }, {
      "left" : "tb.append(zeroPad(minutes, 2));",
      "right" : "tb.append(zeroPad(minutes, 2));",
      "info" : "ExpressionStatement[24201-24232]:ExpressionStatement[23875-23906]"
    }, {
      "left" : "return tb.toString();",
      "right" : "return tb.toString();",
      "info" : "ReturnStatement[24241-24262]:ReturnStatement[23915-23936]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24274-24281]:Modifier[23948-23955]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24282-24288]:Modifier[23956-23962]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[24289-24295]:SimpleType[23963-23969]"
    }, {
      "left" : "getYearString",
      "right" : "getYearString",
      "info" : "SimpleName[24296-24309]:SimpleName[23970-23983]"
    }, {
      "left" : "int year",
      "right" : "int year",
      "info" : "SingleVariableDeclaration[24310-24318]:SingleVariableDeclaration[23984-23992]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[24320-24329]:SingleVariableDeclaration[23994-24003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24331-24469]:Block[24005-24143]"
    }, {
      "left" : "return (count <= 2) ? zeroPad(year % 100, 2)\n                            : String.format(Locale.getDefault(), \"%d\", year);",
      "right" : "return (count <= 2) ? zeroPad(year % 100, 2)\n                            : String.format(Locale.getDefault(), \"%d\", year);",
      "info" : "ReturnStatement[24341-24463]:ReturnStatement[24015-24137]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24475-24482]:Modifier[24149-24156]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24483-24489]:Modifier[24157-24163]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[24490-24493]:PrimitiveType[24164-24167]"
    }, {
      "left" : "appendQuotedText",
      "right" : "appendQuotedText",
      "info" : "SimpleName[24494-24510]:SimpleName[24168-24184]"
    }, {
      "left" : "SpannableStringBuilder s",
      "right" : "SpannableStringBuilder s",
      "info" : "SingleVariableDeclaration[24511-24535]:SingleVariableDeclaration[24185-24209]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[24537-24542]:SingleVariableDeclaration[24211-24216]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[24544-24551]:SingleVariableDeclaration[24218-24225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24553-25383]:Block[24227-25057]"
    }, {
      "left" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "right" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "info" : "IfStatement[24563-24673]:IfStatement[24237-24347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24608-24673]:Block[24282-24347]"
    }, {
      "left" : "s.delete(i, i + 1);",
      "right" : "s.delete(i, i + 1);",
      "info" : "ExpressionStatement[24622-24641]:ExpressionStatement[24296-24315]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[24654-24663]:ReturnStatement[24328-24337]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[24683-24697]:VariableDeclarationStatement[24357-24371]"
    }, {
      "left" : "s.delete(i, i + 1);",
      "right" : "s.delete(i, i + 1);",
      "info" : "ExpressionStatement[24739-24758]:ExpressionStatement[24413-24432]"
    }, {
      "left" : "len--;",
      "right" : "len--;",
      "info" : "ExpressionStatement[24767-24773]:ExpressionStatement[24441-24447]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[24783-25354]:WhileStatement[24457-25028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24799-25354]:Block[24473-25028]"
    }, {
      "left" : "char c = s.charAt(i);",
      "right" : "char c = s.charAt(i);",
      "info" : "VariableDeclarationStatement[24813-24834]:VariableDeclarationStatement[24487-24508]"
    }, {
      "left" : "if (c == QUOTE)",
      "right" : "if (c == QUOTE)",
      "info" : "IfStatement[24848-25344]:IfStatement[24522-25018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24864-25277]:Block[24538-24951]"
    }, {
      "left" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "right" : "if (i + 1 < len && s.charAt(i + 1) == QUOTE)",
      "info" : "IfStatement[24922-25263]:IfStatement[24596-24937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24967-25108]:Block[24641-24782]"
    }, {
      "left" : "s.delete(i, i + 1);",
      "right" : "s.delete(i, i + 1);",
      "info" : "ExpressionStatement[24990-25009]:ExpressionStatement[24664-24683]"
    }, {
      "left" : "len--;",
      "right" : "len--;",
      "info" : "ExpressionStatement[25030-25036]:ExpressionStatement[24704-24710]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[25057-25065]:ExpressionStatement[24731-24739]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[25086-25090]:ExpressionStatement[24760-24764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25114-25263]:Block[24788-24937]"
    }, {
      "left" : "s.delete(i, i + 1);",
      "right" : "s.delete(i, i + 1);",
      "info" : "ExpressionStatement[25199-25218]:ExpressionStatement[24873-24892]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[25239-25245]:BreakStatement[24913-24919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25283-25344]:Block[24957-25018]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[25301-25305]:ExpressionStatement[24975-24979]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[25322-25330]:ExpressionStatement[24996-25004]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[25364-25377]:ReturnStatement[25038-25051]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25389-25396]:Modifier[25063-25070]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[25397-25403]:Modifier[25071-25077]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[25404-25410]:SimpleType[25078-25084]"
    }, {
      "left" : "zeroPad",
      "right" : "zeroPad",
      "info" : "SimpleName[25411-25418]:SimpleName[25085-25092]"
    }, {
      "left" : "int inValue",
      "right" : "int inValue",
      "info" : "SingleVariableDeclaration[25419-25430]:SingleVariableDeclaration[25093-25104]"
    }, {
      "left" : "int inMinDigits",
      "right" : "int inMinDigits",
      "info" : "SingleVariableDeclaration[25432-25447]:SingleVariableDeclaration[25106-25121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25449-25542]:Block[25123-25216]"
    }, {
      "left" : "return String.format(Locale.getDefault(), \"%0\" + inMinDigits + \"d\", inValue);",
      "right" : "return String.format(Locale.getDefault(), \"%0\" + inMinDigits + \"d\", inValue);",
      "info" : "ReturnStatement[25459-25536]:ReturnStatement[25133-25210]"
    } ]
  },
  "interFileMappings" : { }
}