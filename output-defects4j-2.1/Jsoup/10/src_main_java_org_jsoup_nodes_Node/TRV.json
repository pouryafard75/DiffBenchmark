{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Node parentNode;",
      "right" : "Node parentNode;",
      "info" : "FieldDeclaration[513-529]:FieldDeclaration[513-529]"
    }, {
      "left" : "List<Node> childNodes;",
      "right" : "List<Node> childNodes;",
      "info" : "FieldDeclaration[534-556]:FieldDeclaration[534-556]"
    }, {
      "left" : "Attributes attributes;",
      "right" : "Attributes attributes;",
      "info" : "FieldDeclaration[561-583]:FieldDeclaration[561-583]"
    }, {
      "left" : "String baseUri;",
      "right" : "String baseUri;",
      "info" : "FieldDeclaration[588-603]:FieldDeclaration[588-603]"
    }, {
      "left" : "int siblingIndex;",
      "right" : "int siblingIndex;",
      "info" : "FieldDeclaration[608-625]:FieldDeclaration[608-625]"
    }, {
      "left" : "protected Node(String baseUri, Attributes attributes)",
      "right" : "protected Node(String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[631-1028]:MethodDeclaration[631-1028]"
    }, {
      "left" : "protected Node(String baseUri)",
      "right" : "protected Node(String baseUri)",
      "info" : "MethodDeclaration[1034-1113]:MethodDeclaration[1034-1113]"
    }, {
      "left" : "protected Node()",
      "right" : "protected Node()",
      "info" : "MethodDeclaration[1119-1326]:MethodDeclaration[1119-1326]"
    }, {
      "left" : "public abstract String nodeName();",
      "right" : "public abstract String nodeName();",
      "info" : "MethodDeclaration[1332-1521]:MethodDeclaration[1332-1521]"
    }, {
      "left" : "public String attr(String attributeKey)",
      "right" : "public String attr(String attributeKey)",
      "info" : "MethodDeclaration[1527-2398]:MethodDeclaration[1527-2398]"
    }, {
      "left" : "public Attributes attributes()",
      "right" : "public Attributes attributes()",
      "info" : "MethodDeclaration[2404-2629]:MethodDeclaration[2404-2629]"
    }, {
      "left" : "public Node attr(String attributeKey, String attributeValue)",
      "right" : "public Node attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[2635-3011]:MethodDeclaration[2635-3011]"
    }, {
      "left" : "public boolean hasAttr(String attributeKey)",
      "right" : "public boolean hasAttr(String attributeKey)",
      "info" : "MethodDeclaration[3017-3332]:MethodDeclaration[3017-3332]"
    }, {
      "left" : "public Node removeAttr(String attributeKey)",
      "right" : "public Node removeAttr(String attributeKey)",
      "info" : "MethodDeclaration[3338-3640]:MethodDeclaration[3338-3640]"
    }, {
      "left" : "public String baseUri()",
      "right" : "public String baseUri()",
      "info" : "MethodDeclaration[3646-3775]:MethodDeclaration[3646-3775]"
    }, {
      "left" : "public void setBaseUri(String baseUri)",
      "right" : "public void setBaseUri(String baseUri)",
      "info" : "MethodDeclaration[3781-3985]:MethodDeclaration[3781-3985]"
    }, {
      "left" : "public Node childNode(int index)",
      "right" : "public Node childNode(int index)",
      "info" : "MethodDeclaration[5975-6181]:MethodDeclaration[6073-6279]"
    }, {
      "left" : "public List<Node> childNodes()",
      "right" : "public List<Node> childNodes()",
      "info" : "MethodDeclaration[6187-6521]:MethodDeclaration[6285-6619]"
    }, {
      "left" : "protected Node[] childNodesAsArray()",
      "right" : "protected Node[] childNodesAsArray()",
      "info" : "MethodDeclaration[6531-6641]:MethodDeclaration[6629-6739]"
    }, {
      "left" : "public Node parent()",
      "right" : "public Node parent()",
      "info" : "MethodDeclaration[6647-6801]:MethodDeclaration[6745-6899]"
    }, {
      "left" : "public Document ownerDocument()",
      "right" : "public Document ownerDocument()",
      "info" : "MethodDeclaration[6811-7208]:MethodDeclaration[6909-7306]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[7218-7440]:MethodDeclaration[7316-7538]"
    }, {
      "left" : "public void replaceWith(Node in)",
      "right" : "public void replaceWith(Node in)",
      "info" : "MethodDeclaration[7450-7745]:MethodDeclaration[7548-7843]"
    }, {
      "left" : "protected void setParentNode(Node parentNode)",
      "right" : "protected void setParentNode(Node parentNode)",
      "info" : "MethodDeclaration[7751-7926]:MethodDeclaration[7849-8024]"
    }, {
      "left" : "protected void replaceChild(Node out, Node in)",
      "right" : "protected void replaceChild(Node out, Node in)",
      "info" : "MethodDeclaration[7932-8327]:MethodDeclaration[8030-8425]"
    }, {
      "left" : "protected void removeChild(Node out)",
      "right" : "protected void removeChild(Node out)",
      "info" : "MethodDeclaration[8333-8558]:MethodDeclaration[8431-8656]"
    }, {
      "left" : "protected void addChildren(Node... children)",
      "right" : "protected void addChildren(Node... children)",
      "info" : "MethodDeclaration[8564-8884]:MethodDeclaration[8662-8982]"
    }, {
      "left" : "protected void addChildren(int index, Node... children)",
      "right" : "protected void addChildren(int index, Node... children)",
      "info" : "MethodDeclaration[8890-9195]:MethodDeclaration[8988-9293]"
    }, {
      "left" : "private void reparentChild(Node child)",
      "right" : "private void reparentChild(Node child)",
      "info" : "MethodDeclaration[9201-9369]:MethodDeclaration[9299-9467]"
    }, {
      "left" : "private void reindexChildren()",
      "right" : "private void reindexChildren()",
      "info" : "MethodDeclaration[9379-9531]:MethodDeclaration[9477-9629]"
    }, {
      "left" : "public List<Node> siblingNodes()",
      "right" : "public List<Node> siblingNodes()",
      "info" : "MethodDeclaration[9541-9857]:MethodDeclaration[9639-9955]"
    }, {
      "left" : "public Node nextSibling()",
      "right" : "public Node nextSibling()",
      "info" : "MethodDeclaration[9863-10329]:MethodDeclaration[9961-10427]"
    }, {
      "left" : "public Node previousSibling()",
      "right" : "public Node previousSibling()",
      "info" : "MethodDeclaration[10335-10728]:MethodDeclaration[10433-10826]"
    }, {
      "left" : "public Integer siblingIndex()",
      "right" : "public Integer siblingIndex()",
      "info" : "MethodDeclaration[10734-11042]:MethodDeclaration[10832-11140]"
    }, {
      "left" : "protected void setSiblingIndex(int siblingIndex)",
      "right" : "protected void setSiblingIndex(int siblingIndex)",
      "info" : "MethodDeclaration[11052-11150]:MethodDeclaration[11150-11248]"
    }, {
      "left" : "public String outerHtml()",
      "right" : "public String outerHtml()",
      "info" : "MethodDeclaration[11156-11378]:MethodDeclaration[11254-11476]"
    }, {
      "left" : "protected void outerHtml(StringBuilder accum)",
      "right" : "protected void outerHtml(StringBuilder accum)",
      "info" : "MethodDeclaration[11384-11529]:MethodDeclaration[11482-11627]"
    }, {
      "left" : "private Document.OutputSettings getOutputSettings()",
      "right" : "private Document.OutputSettings getOutputSettings()",
      "info" : "MethodDeclaration[11621-11793]:MethodDeclaration[11719-11891]"
    }, {
      "left" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[11799-11991]:MethodDeclaration[11897-12089]"
    }, {
      "left" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[11997-12086]:MethodDeclaration[12095-12184]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[12092-12152]:MethodDeclaration[12190-12250]"
    }, {
      "left" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[12158-12331]:MethodDeclaration[12256-12429]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[12337-12543]:MethodDeclaration[12435-12641]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[12549-12840]:MethodDeclaration[12647-12938]"
    }, {
      "left" : "public Node clone()",
      "right" : "public Node clone()",
      "info" : "MethodDeclaration[12846-13382]:MethodDeclaration[12944-13480]"
    }, {
      "left" : "protected Node doClone(Node parent)",
      "right" : "protected Node doClone(Node parent)",
      "info" : "MethodDeclaration[13388-14093]:MethodDeclaration[13486-14191]"
    }, {
      "left" : "OuterHtmlVisitor",
      "right" : "OuterHtmlVisitor",
      "info" : "TypeDeclaration[14099-14694]:TypeDeclaration[14197-14792]"
    }, {
      "left" : "private StringBuilder accum;",
      "right" : "private StringBuilder accum;",
      "info" : "FieldDeclaration[14170-14198]:FieldDeclaration[14268-14296]"
    }, {
      "left" : "private Document.OutputSettings out;",
      "right" : "private Document.OutputSettings out;",
      "info" : "FieldDeclaration[14207-14243]:FieldDeclaration[14305-14341]"
    }, {
      "left" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "right" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "info" : "MethodDeclaration[14253-14391]:MethodDeclaration[14351-14489]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[14401-14502]:MethodDeclaration[14499-14600]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[14512-14688]:MethodDeclaration[14610-14786]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[817-1028]:Block[817-1028]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[827-853]:ExpressionStatement[827-853]"
    }, {
      "left" : "Validate.notNull(attributes);",
      "right" : "Validate.notNull(attributes);",
      "info" : "ExpressionStatement[862-891]:ExpressionStatement[862-891]"
    }, {
      "left" : "childNodes = new ArrayList<Node>(4);",
      "right" : "childNodes = new ArrayList<Node>(4);",
      "info" : "ExpressionStatement[909-945]:ExpressionStatement[909-945]"
    }, {
      "left" : "this.baseUri = baseUri.trim();",
      "right" : "this.baseUri = baseUri.trim();",
      "info" : "ExpressionStatement[954-984]:ExpressionStatement[954-984]"
    }, {
      "left" : "this.attributes = attributes;",
      "right" : "this.attributes = attributes;",
      "info" : "ExpressionStatement[993-1022]:ExpressionStatement[993-1022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1065-1113]:Block[1065-1113]"
    }, {
      "left" : "this(baseUri, new Attributes());",
      "right" : "this(baseUri, new Attributes());",
      "info" : "ConstructorInvocation[1075-1107]:ConstructorInvocation[1075-1107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1247-1326]:Block[1247-1326]"
    }, {
      "left" : "childNodes = Collections.EMPTY_LIST;",
      "right" : "childNodes = Collections.EMPTY_LIST;",
      "info" : "ExpressionStatement[1257-1293]:ExpressionStatement[1257-1293]"
    }, {
      "left" : "attributes = null;",
      "right" : "attributes = null;",
      "info" : "ExpressionStatement[1302-1320]:ExpressionStatement[1302-1320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2110-2398]:Block[2110-2398]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[2120-2151]:ExpressionStatement[2120-2151]"
    }, {
      "left" : "if (hasAttr(attributeKey))",
      "right" : "if (hasAttr(attributeKey))",
      "info" : "IfStatement[2161-2392]:IfStatement[2161-2392]"
    }, {
      "left" : "return attributes.get(attributeKey);",
      "right" : "return attributes.get(attributeKey);",
      "info" : "ReturnStatement[2200-2236]:ReturnStatement[2200-2236]"
    }, {
      "left" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "right" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "info" : "IfStatement[2250-2392]:IfStatement[2250-2392]"
    }, {
      "left" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "right" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "info" : "ReturnStatement[2313-2368]:ReturnStatement[2313-2368]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[2382-2392]:ReturnStatement[2382-2392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2595-2629]:Block[2595-2629]"
    }, {
      "left" : "return attributes;",
      "right" : "return attributes;",
      "info" : "ReturnStatement[2605-2623]:ReturnStatement[2605-2623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2929-3011]:Block[2929-3011]"
    }, {
      "left" : "attributes.put(attributeKey, attributeValue);",
      "right" : "attributes.put(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[2939-2984]:ExpressionStatement[2939-2984]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2993-3005]:ReturnStatement[2993-3005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3237-3332]:Block[3237-3332]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[3247-3278]:ExpressionStatement[3247-3278]"
    }, {
      "left" : "return attributes.hasKey(attributeKey);",
      "right" : "return attributes.hasKey(attributeKey);",
      "info" : "ReturnStatement[3287-3326]:ReturnStatement[3287-3326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3531-3640]:Block[3531-3640]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[3541-3572]:ExpressionStatement[3541-3572]"
    }, {
      "left" : "attributes.remove(attributeKey);",
      "right" : "attributes.remove(attributeKey);",
      "info" : "ExpressionStatement[3581-3613]:ExpressionStatement[3581-3613]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3622-3634]:ReturnStatement[3622-3634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3744-3775]:Block[3744-3775]"
    }, {
      "left" : "return baseUri;",
      "right" : "return baseUri;",
      "info" : "ReturnStatement[3754-3769]:ReturnStatement[3754-3769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3911-3985]:Block[3911-3985]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[3921-3947]:ExpressionStatement[3921-3947]"
    }, {
      "left" : "this.baseUri = baseUri;",
      "right" : "this.baseUri = baseUri;",
      "info" : "ExpressionStatement[3956-3979]:ExpressionStatement[3956-3979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6136-6181]:Block[6234-6279]"
    }, {
      "left" : "return childNodes.get(index);",
      "right" : "return childNodes.get(index);",
      "info" : "ReturnStatement[6146-6175]:ReturnStatement[6244-6273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6457-6521]:Block[6555-6619]"
    }, {
      "left" : "return Collections.unmodifiableList(childNodes);",
      "right" : "return Collections.unmodifiableList(childNodes);",
      "info" : "ReturnStatement[6467-6515]:ReturnStatement[6565-6613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6568-6641]:Block[6666-6739]"
    }, {
      "left" : "return childNodes.toArray(new Node[childNodes().size()]);",
      "right" : "return childNodes.toArray(new Node[childNodes().size()]);",
      "info" : "ReturnStatement[6578-6635]:ReturnStatement[6676-6733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6767-6801]:Block[6865-6899]"
    }, {
      "left" : "return parentNode;",
      "right" : "return parentNode;",
      "info" : "ReturnStatement[6777-6795]:ReturnStatement[6875-6893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7005-7208]:Block[7103-7306]"
    }, {
      "left" : "if (this instanceof Document)",
      "right" : "if (this instanceof Document)",
      "info" : "IfStatement[7015-7202]:IfStatement[7113-7300]"
    }, {
      "left" : "return (Document) this;",
      "right" : "return (Document) this;",
      "info" : "ReturnStatement[7057-7080]:ReturnStatement[7155-7178]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[7094-7202]:IfStatement[7192-7300]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7130-7142]:ReturnStatement[7228-7240]"
    }, {
      "left" : "return parentNode.ownerDocument();",
      "right" : "return parentNode.ownerDocument();",
      "info" : "ReturnStatement[7168-7202]:ReturnStatement[7266-7300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7357-7440]:Block[7455-7538]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[7367-7396]:ExpressionStatement[7465-7494]"
    }, {
      "left" : "parentNode.removeChild(this);",
      "right" : "parentNode.removeChild(this);",
      "info" : "ExpressionStatement[7405-7434]:ExpressionStatement[7503-7532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7627-7745]:Block[7725-7843]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[7637-7658]:ExpressionStatement[7735-7756]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[7667-7696]:ExpressionStatement[7765-7794]"
    }, {
      "left" : "parentNode.replaceChild(this, in);",
      "right" : "parentNode.replaceChild(this, in);",
      "info" : "ExpressionStatement[7705-7739]:ExpressionStatement[7803-7837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7797-7926]:Block[7895-8024]"
    }, {
      "left" : "if (this.parentNode != null)",
      "right" : "if (this.parentNode != null)",
      "info" : "IfStatement[7807-7882]:IfStatement[7905-7980]"
    }, {
      "left" : "this.parentNode.removeChild(this);",
      "right" : "this.parentNode.removeChild(this);",
      "info" : "ExpressionStatement[7848-7882]:ExpressionStatement[7946-7980]"
    }, {
      "left" : "this.parentNode = parentNode;",
      "right" : "this.parentNode = parentNode;",
      "info" : "ExpressionStatement[7891-7920]:ExpressionStatement[7989-8018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7979-8327]:Block[8077-8425]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[7989-8029]:ExpressionStatement[8087-8127]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[8038-8059]:ExpressionStatement[8136-8157]"
    }, {
      "left" : "if (in.parentNode != null)",
      "right" : "if (in.parentNode != null)",
      "info" : "IfStatement[8068-8137]:IfStatement[8166-8235]"
    }, {
      "left" : "in.parentNode.removeChild(in);",
      "right" : "in.parentNode.removeChild(in);",
      "info" : "ExpressionStatement[8107-8137]:ExpressionStatement[8205-8235]"
    }, {
      "left" : "Integer index = out.siblingIndex();",
      "right" : "Integer index = out.siblingIndex();",
      "info" : "VariableDeclarationStatement[8155-8190]:VariableDeclarationStatement[8253-8288]"
    }, {
      "left" : "childNodes.set(index, in);",
      "right" : "childNodes.set(index, in);",
      "info" : "ExpressionStatement[8199-8225]:ExpressionStatement[8297-8323]"
    }, {
      "left" : "in.parentNode = this;",
      "right" : "in.parentNode = this;",
      "info" : "ExpressionStatement[8234-8255]:ExpressionStatement[8332-8353]"
    }, {
      "left" : "in.setSiblingIndex(index);",
      "right" : "in.setSiblingIndex(index);",
      "info" : "ExpressionStatement[8264-8290]:ExpressionStatement[8362-8388]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[8299-8321]:ExpressionStatement[8397-8419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8370-8558]:Block[8468-8656]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[8380-8420]:ExpressionStatement[8478-8518]"
    }, {
      "left" : "int index = out.siblingIndex();",
      "right" : "int index = out.siblingIndex();",
      "info" : "VariableDeclarationStatement[8429-8460]:VariableDeclarationStatement[8527-8558]"
    }, {
      "left" : "childNodes.remove(index);",
      "right" : "childNodes.remove(index);",
      "info" : "ExpressionStatement[8469-8494]:ExpressionStatement[8567-8592]"
    }, {
      "left" : "reindexChildren();",
      "right" : "reindexChildren();",
      "info" : "ExpressionStatement[8503-8521]:ExpressionStatement[8601-8619]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[8530-8552]:ExpressionStatement[8628-8650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8609-8884]:Block[8707-8982]"
    }, {
      "left" : "for (Node child: children)",
      "right" : "for (Node child: children)",
      "info" : "EnhancedForStatement[8715-8878]:EnhancedForStatement[8813-8976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8742-8878]:Block[8840-8976]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[8756-8777]:ExpressionStatement[8854-8875]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[8790-8812]:ExpressionStatement[8888-8910]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size()-1);",
      "right" : "child.setSiblingIndex(childNodes.size()-1);",
      "info" : "ExpressionStatement[8825-8868]:ExpressionStatement[8923-8966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8946-9195]:Block[9044-9293]"
    }, {
      "left" : "Validate.noNullElements(children);",
      "right" : "Validate.noNullElements(children);",
      "info" : "ExpressionStatement[8956-8990]:ExpressionStatement[9054-9088]"
    }, {
      "left" : "for (int i = children.length - 1; i >= 0; i--)",
      "right" : "for (int i = children.length - 1; i >= 0; i--)",
      "info" : "ForStatement[8999-9162]:ForStatement[9097-9260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9046-9162]:Block[9144-9260]"
    }, {
      "left" : "Node in = children[i];",
      "right" : "Node in = children[i];",
      "info" : "VariableDeclarationStatement[9060-9082]:VariableDeclarationStatement[9158-9180]"
    }, {
      "left" : "reparentChild(in);",
      "right" : "reparentChild(in);",
      "info" : "ExpressionStatement[9095-9113]:ExpressionStatement[9193-9211]"
    }, {
      "left" : "childNodes.add(index, in);",
      "right" : "childNodes.add(index, in);",
      "info" : "ExpressionStatement[9126-9152]:ExpressionStatement[9224-9250]"
    }, {
      "left" : "reindexChildren();",
      "right" : "reindexChildren();",
      "info" : "ExpressionStatement[9171-9189]:ExpressionStatement[9269-9287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9240-9369]:Block[9338-9467]"
    }, {
      "left" : "if (child.parentNode != null)",
      "right" : "if (child.parentNode != null)",
      "info" : "IfStatement[9250-9328]:IfStatement[9348-9426]"
    }, {
      "left" : "child.parentNode.removeChild(child);",
      "right" : "child.parentNode.removeChild(child);",
      "info" : "ExpressionStatement[9292-9328]:ExpressionStatement[9390-9426]"
    }, {
      "left" : "child.setParentNode(this);",
      "right" : "child.setParentNode(this);",
      "info" : "ExpressionStatement[9337-9363]:ExpressionStatement[9435-9461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9410-9531]:Block[9508-9629]"
    }, {
      "left" : "for (int i = 0; i < childNodes.size(); i++)",
      "right" : "for (int i = 0; i < childNodes.size(); i++)",
      "info" : "ForStatement[9420-9525]:ForStatement[9518-9623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9464-9525]:Block[9562-9623]"
    }, {
      "left" : "childNodes.get(i).setSiblingIndex(i);",
      "right" : "childNodes.get(i).setSiblingIndex(i);",
      "info" : "ExpressionStatement[9478-9515]:ExpressionStatement[9576-9613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9742-9857]:Block[9840-9955]"
    }, {
      "left" : "return parent().childNodes();",
      "right" : "return parent().childNodes();",
      "info" : "ReturnStatement[9752-9781]:ReturnStatement[9850-9879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10003-10329]:Block[10101-10427]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[10013-10061]:IfStatement[10111-10159]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10049-10061]:ReturnStatement[10147-10159]"
    }, {
      "left" : "List<Node> siblings = parentNode.childNodes;",
      "right" : "List<Node> siblings = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[10087-10131]:VariableDeclarationStatement[10185-10229]"
    }, {
      "left" : "Integer index = siblingIndex();",
      "right" : "Integer index = siblingIndex();",
      "info" : "VariableDeclarationStatement[10140-10171]:VariableDeclarationStatement[10238-10269]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[10180-10204]:ExpressionStatement[10278-10302]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[10213-10323]:IfStatement[10311-10421]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[10256-10285]:ReturnStatement[10354-10383]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10311-10323]:ReturnStatement[10409-10421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10492-10728]:Block[10590-10826]"
    }, {
      "left" : "List<Node> siblings = parentNode.childNodes;",
      "right" : "List<Node> siblings = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[10502-10546]:VariableDeclarationStatement[10600-10644]"
    }, {
      "left" : "Integer index = siblingIndex();",
      "right" : "Integer index = siblingIndex();",
      "info" : "VariableDeclarationStatement[10555-10586]:VariableDeclarationStatement[10653-10684]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[10595-10619]:ExpressionStatement[10693-10717]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[10628-10722]:IfStatement[10726-10820]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[10655-10684]:ReturnStatement[10753-10782]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10710-10722]:ReturnStatement[10808-10820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11006-11042]:Block[11104-11140]"
    }, {
      "left" : "return siblingIndex;",
      "right" : "return siblingIndex;",
      "info" : "ReturnStatement[11016-11036]:ReturnStatement[11114-11134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11101-11150]:Block[11199-11248]"
    }, {
      "left" : "this.siblingIndex = siblingIndex;",
      "right" : "this.siblingIndex = siblingIndex;",
      "info" : "ExpressionStatement[11111-11144]:ExpressionStatement[11209-11242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11254-11378]:Block[11352-11476]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder(32*1024);",
      "right" : "StringBuilder accum = new StringBuilder(32*1024);",
      "info" : "VariableDeclarationStatement[11264-11313]:VariableDeclarationStatement[11362-11411]"
    }, {
      "left" : "outerHtml(accum);",
      "right" : "outerHtml(accum);",
      "info" : "ExpressionStatement[11322-11339]:ExpressionStatement[11420-11437]"
    }, {
      "left" : "return accum.toString();",
      "right" : "return accum.toString();",
      "info" : "ReturnStatement[11348-11372]:ReturnStatement[11446-11470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11430-11529]:Block[11528-11627]"
    }, {
      "left" : "new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);",
      "right" : "new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);",
      "info" : "ExpressionStatement[11440-11523]:ExpressionStatement[11538-11621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11673-11793]:Block[11771-11891]"
    }, {
      "left" : "return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();",
      "right" : "return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();",
      "info" : "ReturnStatement[11683-11787]:ReturnStatement[11781-11885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12117-12152]:Block[12215-12250]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[12127-12146]:ReturnStatement[12225-12244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12241-12331]:Block[12339-12429]"
    }, {
      "left" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "right" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "info" : "ExpressionStatement[12251-12325]:ExpressionStatement[12349-12423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12383-12543]:Block[12481-12641]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[12393-12420]:IfStatement[12491-12518]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12408-12420]:ReturnStatement[12506-12518]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12524-12537]:ReturnStatement[12622-12635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12585-12840]:Block[12683-12938]"
    }, {
      "left" : "int result = parentNode != null ? parentNode.hashCode() : 0;",
      "right" : "int result = parentNode != null ? parentNode.hashCode() : 0;",
      "info" : "VariableDeclarationStatement[12595-12655]:VariableDeclarationStatement[12693-12753]"
    }, {
      "left" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "right" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "info" : "ExpressionStatement[12739-12811]:ExpressionStatement[12837-12909]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[12820-12834]:ReturnStatement[12918-12932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13324-13382]:Block[13422-13480]"
    }, {
      "left" : "return doClone(null);",
      "right" : "return doClone(null);",
      "info" : "ReturnStatement[13334-13355]:ReturnStatement[13432-13453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13424-14093]:Block[13522-14191]"
    }, {
      "left" : "Node clone;",
      "right" : "Node clone;",
      "info" : "VariableDeclarationStatement[13434-13445]:VariableDeclarationStatement[13532-13543]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13454-13603]:TryStatement[13552-13701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13458-13511]:Block[13556-13609]"
    }, {
      "left" : "clone = (Node) super.clone();",
      "right" : "clone = (Node) super.clone();",
      "info" : "ExpressionStatement[13472-13501]:ExpressionStatement[13570-13599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13549-13603]:Block[13647-13701]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[13563-13593]:ThrowStatement[13661-13691]"
    }, {
      "left" : "clone.parentNode = parent;",
      "right" : "clone.parentNode = parent;",
      "info" : "ExpressionStatement[13613-13639]:ExpressionStatement[13711-13737]"
    }, {
      "left" : "clone.siblingIndex = parent == null ? 0 : siblingIndex;",
      "right" : "clone.siblingIndex = parent == null ? 0 : siblingIndex;",
      "info" : "ExpressionStatement[13690-13745]:ExpressionStatement[13788-13843]"
    }, {
      "left" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "right" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "info" : "ExpressionStatement[13754-13820]:ExpressionStatement[13852-13918]"
    }, {
      "left" : "clone.baseUri = baseUri;",
      "right" : "clone.baseUri = baseUri;",
      "info" : "ExpressionStatement[13829-13853]:ExpressionStatement[13927-13951]"
    }, {
      "left" : "clone.childNodes = new ArrayList<Node>(childNodes.size());",
      "right" : "clone.childNodes = new ArrayList<Node>(childNodes.size());",
      "info" : "ExpressionStatement[13862-13920]:ExpressionStatement[13960-14018]"
    }, {
      "left" : "for (Node child: childNodes)\n            clone.childNodes.add(child.doClone(clone));",
      "right" : "for (Node child: childNodes)\n            clone.childNodes.add(child.doClone(clone));",
      "info" : "EnhancedForStatement[13929-14013]:EnhancedForStatement[14027-14111]"
    }, {
      "left" : "clone.childNodes.add(child.doClone(clone));",
      "right" : "clone.childNodes.add(child.doClone(clone));",
      "info" : "ExpressionStatement[13970-14013]:ExpressionStatement[14068-14111]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[14074-14087]:ReturnStatement[14172-14185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14320-14391]:Block[14418-14489]"
    }, {
      "left" : "this.accum = accum;",
      "right" : "this.accum = accum;",
      "info" : "ExpressionStatement[14334-14353]:ExpressionStatement[14432-14451]"
    }, {
      "left" : "this.out = out;",
      "right" : "this.out = out;",
      "info" : "ExpressionStatement[14366-14381]:ExpressionStatement[14464-14479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14440-14502]:Block[14538-14600]"
    }, {
      "left" : "node.outerHtmlHead(accum, depth, out);",
      "right" : "node.outerHtmlHead(accum, depth, out);",
      "info" : "ExpressionStatement[14454-14492]:ExpressionStatement[14552-14590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14551-14688]:Block[14649-14786]"
    }, {
      "left" : "if (!node.nodeName().equals(\"#text\"))",
      "right" : "if (!node.nodeName().equals(\"#text\"))",
      "info" : "IfStatement[14565-14678]:IfStatement[14663-14776]"
    }, {
      "left" : "node.outerHtmlTail(accum, depth, out);",
      "right" : "node.outerHtmlTail(accum, depth, out);",
      "info" : "ExpressionStatement[14640-14678]:ExpressionStatement[14738-14776]"
    } ]
  },
  "interFileMappings" : { }
}