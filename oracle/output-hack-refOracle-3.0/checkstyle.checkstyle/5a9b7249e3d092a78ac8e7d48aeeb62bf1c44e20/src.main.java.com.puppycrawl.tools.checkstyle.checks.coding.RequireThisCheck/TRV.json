{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final String MSG_METHOD = \"require.this.method\";",
      "right" : "public static final String MSG_METHOD = \"require.this.method\";",
      "info" : "FieldDeclaration[2531-2700]:FieldDeclaration[2531-2700]"
    }, {
      "left" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "right" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "info" : "FieldDeclaration[2706-2879]:FieldDeclaration[2706-2879]"
    }, {
      "left" : "private boolean checkFields = true;",
      "right" : "private boolean checkFields = true;",
      "info" : "FieldDeclaration[2885-2969]:FieldDeclaration[2885-2969]"
    }, {
      "left" : "private boolean checkMethods = true;",
      "right" : "private boolean checkMethods = true;",
      "info" : "FieldDeclaration[2974-3060]:FieldDeclaration[2974-3060]"
    }, {
      "left" : "public void setCheckFields(boolean checkFields)",
      "right" : "public void setCheckFields(boolean checkFields)",
      "info" : "MethodDeclaration[3066-3280]:MethodDeclaration[3066-3280]"
    }, {
      "left" : "public void setCheckMethods(boolean checkMethods)",
      "right" : "public void setCheckMethods(boolean checkMethods)",
      "info" : "MethodDeclaration[3286-3507]:MethodDeclaration[3286-3507]"
    }, {
      "left" : "public int[] getDefaultTokens()",
      "right" : "public int[] getDefaultTokens()",
      "info" : "MethodDeclaration[3513-3912]:MethodDeclaration[3513-3912]"
    }, {
      "left" : "public int[] getRequiredTokens()",
      "right" : "public int[] getRequiredTokens()",
      "info" : "MethodDeclaration[3918-4007]:MethodDeclaration[3918-4007]"
    }, {
      "left" : "public int[] getAcceptableTokens()",
      "right" : "public int[] getAcceptableTokens()",
      "info" : "MethodDeclaration[4013-4137]:MethodDeclaration[4013-4137]"
    }, {
      "left" : "public void visitToken(DetailAST ast)",
      "right" : "public void visitToken(DetailAST ast)",
      "info" : "MethodDeclaration[4143-4323]:MethodDeclaration[4143-4323]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3185-3191]:Modifier[3185-3191]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3192-3196]:PrimitiveType[3192-3196]"
    }, {
      "left" : "setCheckFields",
      "right" : "setCheckFields",
      "info" : "SimpleName[3197-3211]:SimpleName[3197-3211]"
    }, {
      "left" : "boolean checkFields",
      "right" : "boolean checkFields",
      "info" : "SingleVariableDeclaration[3212-3231]:SingleVariableDeclaration[3212-3231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3233-3280]:Block[3233-3280]"
    }, {
      "left" : "this.checkFields = checkFields;",
      "right" : "this.checkFields = checkFields;",
      "info" : "ExpressionStatement[3243-3274]:ExpressionStatement[3243-3274]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3408-3414]:Modifier[3408-3414]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3415-3419]:PrimitiveType[3415-3419]"
    }, {
      "left" : "setCheckMethods",
      "right" : "setCheckMethods",
      "info" : "SimpleName[3420-3435]:SimpleName[3420-3435]"
    }, {
      "left" : "boolean checkMethods",
      "right" : "boolean checkMethods",
      "info" : "SingleVariableDeclaration[3436-3456]:SingleVariableDeclaration[3436-3456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3458-3507]:Block[3458-3507]"
    }, {
      "left" : "this.checkMethods = checkMethods;",
      "right" : "this.checkMethods = checkMethods;",
      "info" : "ExpressionStatement[3468-3501]:ExpressionStatement[3468-3501]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3513-3522]:MarkerAnnotation[3513-3522]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3527-3533]:Modifier[3527-3533]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[3534-3539]:ArrayType[3534-3539]"
    }, {
      "left" : "getDefaultTokens",
      "right" : "getDefaultTokens",
      "info" : "SimpleName[3540-3556]:SimpleName[3540-3556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3559-3912]:Block[3559-3912]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "right" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "info" : "ReturnStatement[3569-3906]:ReturnStatement[3569-3906]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3918-3927]:MarkerAnnotation[3918-3927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3932-3938]:Modifier[3932-3938]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[3939-3944]:ArrayType[3939-3944]"
    }, {
      "left" : "getRequiredTokens",
      "right" : "getRequiredTokens",
      "info" : "SimpleName[3945-3962]:SimpleName[3945-3962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3965-4007]:Block[3965-4007]"
    }, {
      "left" : "return getDefaultTokens();",
      "right" : "return getDefaultTokens();",
      "info" : "ReturnStatement[3975-4001]:ReturnStatement[3975-4001]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4013-4022]:MarkerAnnotation[4013-4022]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4027-4033]:Modifier[4027-4033]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[4034-4039]:ArrayType[4034-4039]"
    }, {
      "left" : "getAcceptableTokens",
      "right" : "getAcceptableTokens",
      "info" : "SimpleName[4040-4059]:SimpleName[4040-4059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4062-4137]:Block[4062-4137]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "right" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "info" : "ReturnStatement[4072-4131]:ReturnStatement[4072-4131]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4143-4152]:MarkerAnnotation[4143-4152]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4157-4163]:Modifier[4157-4163]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4164-4168]:PrimitiveType[4164-4168]"
    }, {
      "left" : "visitToken",
      "right" : "visitToken",
      "info" : "SimpleName[4169-4179]:SimpleName[4169-4179]"
    }, {
      "left" : "DetailAST ast",
      "right" : "DetailAST ast",
      "info" : "SingleVariableDeclaration[4180-4193]:SingleVariableDeclaration[4180-4193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4195-4323]:Block[4195-4323]"
    }, {
      "left" : "super.visitToken(ast);",
      "right" : "super.visitToken(ast);",
      "info" : "ExpressionStatement[4205-4227]:ExpressionStatement[4205-4227]"
    }, {
      "left" : "if (ast.getType() == TokenTypes.IDENT)",
      "right" : "if (ast.getType() == TokenTypes.IDENT)",
      "info" : "IfStatement[4236-4317]:IfStatement[4236-4317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4275-4317]:Block[4275-4317]"
    }, {
      "left" : "processIDENT(ast);",
      "right" : "processIDENT(ast);",
      "info" : "ExpressionStatement[4289-4307]:ExpressionStatement[4289-4307]"
    } ]
  },
  "interFileMappings" : { }
}