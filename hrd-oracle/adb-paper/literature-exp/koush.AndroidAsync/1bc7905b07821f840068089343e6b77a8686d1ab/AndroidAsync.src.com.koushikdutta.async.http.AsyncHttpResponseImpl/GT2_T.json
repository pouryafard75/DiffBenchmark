{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "AsyncHttpResponseImpl",
      "right" : "AsyncHttpResponseImpl",
      "info" : "TypeDeclaration[516-5976]:TypeDeclaration[516-6122]"
    }, {
      "left" : "public AsyncSocket socket()",
      "right" : "public AsyncSocket socket()",
      "info" : "MethodDeclaration[669-728]:MethodDeclaration[669-728]"
    }, {
      "left" : "public AsyncHttpRequest getRequest()",
      "right" : "public AsyncHttpRequest getRequest()",
      "info" : "MethodDeclaration[734-817]:MethodDeclaration[734-817]"
    }, {
      "left" : "void setSocket(AsyncSocket exchange)",
      "right" : "void setSocket(AsyncSocket exchange)",
      "info" : "MethodDeclaration[823-988]:MethodDeclaration[823-988]"
    }, {
      "left" : "protected void onHeadersSent()",
      "right" : "protected void onHeadersSent()",
      "info" : "MethodDeclaration[994-1449]:MethodDeclaration[994-1449]"
    }, {
      "left" : "public void onCompleted(Exception ex)",
      "right" : "public void onCompleted(Exception ex)",
      "info" : "MethodDeclaration[1235-1362]:MethodDeclaration[1235-1362]"
    }, {
      "left" : "protected void onRequestCompleted(Exception ex)",
      "right" : "protected void onRequestCompleted(Exception ex)",
      "info" : "MethodDeclaration[1455-1510]:MethodDeclaration[1455-1510]"
    }, {
      "left" : "private CompletedCallback mReporter = new CompletedCallback() {\n        @Override\n        public void onCompleted(Exception error) {\n            if (error != null && !mCompleted) {\n                report(new ConnectionClosedException(\"connection closed before response completed.\", error));\n            }\n            else {\n                report(error);\n            }\n        }\n    };",
      "right" : "private CompletedCallback mReporter = new CompletedCallback() {\n        @Override\n        public void onCompleted(Exception error) {\n            if (error != null && !mCompleted) {\n                report(new ConnectionClosedException(\"connection closed before response completed.\", error));\n            }\n            else {\n                report(error);\n            }\n        }\n    };",
      "info" : "FieldDeclaration[1520-1905]:FieldDeclaration[1520-1905]"
    }, {
      "left" : "public void onCompleted(Exception error)",
      "right" : "public void onCompleted(Exception error)",
      "info" : "MethodDeclaration[1592-1898]:MethodDeclaration[1592-1898]"
    }, {
      "left" : "protected void onHeadersReceived()",
      "right" : "protected void onHeadersReceived()",
      "info" : "MethodDeclaration[1911-1953]:MethodDeclaration[1911-1953]"
    }, {
      "left" : "public DataEmitter emitter()",
      "right" : "public DataEmitter emitter()",
      "info" : "MethodDeclaration[1960-2043]:MethodDeclaration[1960-2043]"
    }, {
      "left" : "public AsyncHttpClientMiddleware.ResponseHead emitter(DataEmitter emitter)",
      "right" : "public AsyncHttpClientMiddleware.ResponseHead emitter(DataEmitter emitter)",
      "info" : "MethodDeclaration[2049-2199]:MethodDeclaration[2049-2199]"
    }, {
      "left" : "protected void report(Exception e)",
      "right" : "private void terminate()",
      "info" : "MethodDeclaration[2205-2840]:MethodDeclaration[2205-2640]"
    }, {
      "left" : "public void onDataAvailable(DataEmitter emitter, ByteBufferList bb)",
      "right" : "public void onDataAvailable(DataEmitter emitter, ByteBufferList bb)",
      "info" : "MethodDeclaration[2482-2672]:MethodDeclaration[2432-2622]"
    }, {
      "left" : "private AsyncHttpRequest mRequest;",
      "right" : "private AsyncHttpRequest mRequest;",
      "info" : "FieldDeclaration[2850-2884]:FieldDeclaration[2996-3030]"
    }, {
      "left" : "private AsyncSocket mSocket;",
      "right" : "private AsyncSocket mSocket;",
      "info" : "FieldDeclaration[2889-2917]:FieldDeclaration[3035-3063]"
    }, {
      "left" : "protected Headers mHeaders;",
      "right" : "protected Headers mHeaders;",
      "info" : "FieldDeclaration[2922-2949]:FieldDeclaration[3068-3095]"
    }, {
      "left" : "public AsyncHttpResponseImpl(AsyncHttpRequest request)",
      "right" : "public AsyncHttpResponseImpl(AsyncHttpRequest request)",
      "info" : "MethodDeclaration[2954-3044]:MethodDeclaration[3100-3190]"
    }, {
      "left" : "boolean mCompleted = false;",
      "right" : "boolean mCompleted = false;",
      "info" : "FieldDeclaration[3050-3077]:FieldDeclaration[3196-3223]"
    }, {
      "left" : "public Headers headers()",
      "right" : "public Headers headers()",
      "info" : "MethodDeclaration[3083-3154]:MethodDeclaration[3229-3300]"
    }, {
      "left" : "public AsyncHttpClientMiddleware.ResponseHead headers(Headers headers)",
      "right" : "public AsyncHttpClientMiddleware.ResponseHead headers(Headers headers)",
      "info" : "MethodDeclaration[3160-3301]:MethodDeclaration[3306-3447]"
    }, {
      "left" : "int code;",
      "right" : "int code;",
      "info" : "FieldDeclaration[3307-3316]:FieldDeclaration[3453-3462]"
    }, {
      "left" : "public int code()",
      "right" : "public int code()",
      "info" : "MethodDeclaration[3321-3381]:MethodDeclaration[3467-3527]"
    }, {
      "left" : "public AsyncHttpClientMiddleware.ResponseHead code(int code)",
      "right" : "public AsyncHttpClientMiddleware.ResponseHead code(int code)",
      "info" : "MethodDeclaration[3387-3516]:MethodDeclaration[3533-3662]"
    }, {
      "left" : "public AsyncHttpClientMiddleware.ResponseHead protocol(String protocol)",
      "right" : "public AsyncHttpClientMiddleware.ResponseHead protocol(String protocol)",
      "info" : "MethodDeclaration[3522-3670]:MethodDeclaration[3668-3816]"
    }, {
      "left" : "public AsyncHttpClientMiddleware.ResponseHead message(String message)",
      "right" : "public AsyncHttpClientMiddleware.ResponseHead message(String message)",
      "info" : "MethodDeclaration[3676-3820]:MethodDeclaration[3822-3966]"
    }, {
      "left" : "String protocol;",
      "right" : "String protocol;",
      "info" : "FieldDeclaration[3826-3842]:FieldDeclaration[3972-3988]"
    }, {
      "left" : "public String protocol()",
      "right" : "public String protocol()",
      "info" : "MethodDeclaration[3847-3918]:MethodDeclaration[3993-4064]"
    }, {
      "left" : "String message;",
      "right" : "String message;",
      "info" : "FieldDeclaration[3924-3939]:FieldDeclaration[4070-4085]"
    }, {
      "left" : "public String message()",
      "right" : "public String message()",
      "info" : "MethodDeclaration[3944-4013]:MethodDeclaration[4090-4159]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[4019-4211]:MethodDeclaration[4165-4357]"
    }, {
      "left" : "private boolean mFirstWrite = true;",
      "right" : "private boolean mFirstWrite = true;",
      "info" : "FieldDeclaration[4217-4252]:FieldDeclaration[4363-4398]"
    }, {
      "left" : "private void assertContent()",
      "right" : "private void assertContent()",
      "info" : "MethodDeclaration[4257-4560]:MethodDeclaration[4403-4706]"
    }, {
      "left" : "DataSink mSink;",
      "right" : "DataSink mSink;",
      "info" : "FieldDeclaration[4566-4581]:FieldDeclaration[4712-4727]"
    }, {
      "left" : "public DataSink sink()",
      "right" : "public DataSink sink()",
      "info" : "MethodDeclaration[4587-4653]:MethodDeclaration[4733-4799]"
    }, {
      "left" : "public AsyncHttpClientMiddleware.ResponseHead sink(DataSink sink)",
      "right" : "public AsyncHttpClientMiddleware.ResponseHead sink(DataSink sink)",
      "info" : "MethodDeclaration[4659-4789]:MethodDeclaration[4805-4935]"
    }, {
      "left" : "public void write(ByteBufferList bb)",
      "right" : "public void write(ByteBufferList bb)",
      "info" : "MethodDeclaration[4795-4903]:MethodDeclaration[4941-5049]"
    }, {
      "left" : "public void end()",
      "right" : "public void end()",
      "info" : "MethodDeclaration[4909-4997]:MethodDeclaration[5055-5143]"
    }, {
      "left" : "public void setWriteableCallback(WritableCallback handler)",
      "right" : "public void setWriteableCallback(WritableCallback handler)",
      "info" : "MethodDeclaration[5003-5128]:MethodDeclaration[5149-5274]"
    }, {
      "left" : "public WritableCallback getWriteableCallback()",
      "right" : "public WritableCallback getWriteableCallback()",
      "info" : "MethodDeclaration[5134-5247]:MethodDeclaration[5280-5393]"
    }, {
      "left" : "public boolean isOpen()",
      "right" : "public boolean isOpen()",
      "info" : "MethodDeclaration[5254-5330]:MethodDeclaration[5400-5476]"
    }, {
      "left" : "public void setClosedCallback(CompletedCallback handler)",
      "right" : "public void setClosedCallback(CompletedCallback handler)",
      "info" : "MethodDeclaration[5336-5456]:MethodDeclaration[5482-5602]"
    }, {
      "left" : "public CompletedCallback getClosedCallback()",
      "right" : "public CompletedCallback getClosedCallback()",
      "info" : "MethodDeclaration[5462-5570]:MethodDeclaration[5608-5716]"
    }, {
      "left" : "public AsyncServer getServer()",
      "right" : "public AsyncServer getServer()",
      "info" : "MethodDeclaration[5580-5668]:MethodDeclaration[5726-5814]"
    }, {
      "left" : "public String charset()",
      "right" : "public String charset()",
      "info" : "MethodDeclaration[5674-5974]:MethodDeclaration[5820-6120]"
    } ],
    "mappings" : [
 {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[516-524]:Modifier[516-524]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[525-530]:TYPE_DECLARATION_KIND[525-530]"
    }, {
      "left" : "AsyncHttpResponseImpl",
      "right" : "AsyncHttpResponseImpl",
      "info" : "SimpleName[531-552]:SimpleName[531-552]"
    }, {
      "left" : "FilteredDataEmitter",
      "right" : "FilteredDataEmitter",
      "info" : "SimpleType[561-580]:SimpleType[561-580]"
    }, {
      "left" : "AsyncSocket",
      "right" : "AsyncSocket",
      "info" : "SimpleType[592-603]:SimpleType[592-603]"
    }, {
      "left" : "AsyncHttpResponse",
      "right" : "AsyncHttpResponse",
      "info" : "SimpleType[605-622]:SimpleType[605-622]"
    }, {
      "left" : "AsyncHttpClientMiddleware.ResponseHead",
      "right" : "AsyncHttpClientMiddleware.ResponseHead",
      "info" : "SimpleType[624-662]:SimpleType[624-662]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[669-675]:Modifier[669-675]"
    }, {
      "left" : "AsyncSocket",
      "right" : "AsyncSocket",
      "info" : "SimpleType[676-687]:SimpleType[676-687]"
    }, {
      "left" : "socket",
      "right" : "socket",
      "info" : "SimpleName[688-694]:SimpleName[688-694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[697-728]:Block[697-728]"
    }, {
      "left" : "return mSocket;",
      "right" : "return mSocket;",
      "info" : "ReturnStatement[707-722]:ReturnStatement[707-722]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[734-743]:MarkerAnnotation[734-743]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[748-754]:Modifier[748-754]"
    }, {
      "left" : "AsyncHttpRequest",
      "right" : "AsyncHttpRequest",
      "info" : "SimpleType[755-771]:SimpleType[755-771]"
    }, {
      "left" : "getRequest",
      "right" : "getRequest",
      "info" : "SimpleName[772-782]:SimpleName[772-782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[785-817]:Block[785-817]"
    }, {
      "left" : "return mRequest;",
      "right" : "return mRequest;",
      "info" : "ReturnStatement[795-811]:ReturnStatement[795-811]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[823-827]:PrimitiveType[823-827]"
    }, {
      "left" : "setSocket",
      "right" : "setSocket",
      "info" : "SimpleName[828-837]:SimpleName[828-837]"
    }, {
      "left" : "AsyncSocket exchange",
      "right" : "AsyncSocket exchange",
      "info" : "SingleVariableDeclaration[838-858]:SingleVariableDeclaration[838-858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[860-988]:Block[860-988]"
    }, {
      "left" : "mSocket = exchange;",
      "right" : "mSocket = exchange;",
      "info" : "ExpressionStatement[870-889]:ExpressionStatement[870-889]"
    }, {
      "left" : "if (mSocket == null)",
      "right" : "if (mSocket == null)",
      "info" : "IfStatement[898-938]:IfStatement[898-938]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[931-938]:ReturnStatement[931-938]"
    }, {
      "left" : "mSocket.setEndCallback(mReporter);",
      "right" : "mSocket.setEndCallback(mReporter);",
      "info" : "ExpressionStatement[948-982]:ExpressionStatement[948-982]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[994-1003]:Modifier[994-1003]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1004-1008]:PrimitiveType[1004-1008]"
    }, {
      "left" : "onHeadersSent",
      "right" : "onHeadersSent",
      "info" : "SimpleName[1009-1022]:SimpleName[1009-1022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1025-1449]:Block[1025-1449]"
    }, {
      "left" : "AsyncHttpRequestBody requestBody = mRequest.getBody();",
      "right" : "AsyncHttpRequestBody requestBody = mRequest.getBody();",
      "info" : "VariableDeclarationStatement[1035-1089]:VariableDeclarationStatement[1035-1089]"
    }, {
      "left" : "if (requestBody != null)",
      "right" : "if (requestBody != null)",
      "info" : "IfStatement[1098-1443]:IfStatement[1098-1443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1123-1388]:Block[1123-1388]"
    }, {
      "left" : "requestBody.write(mRequest, AsyncHttpResponseImpl.this, new CompletedCallback() {\n                @Override\n                public void onCompleted(Exception ex) {\n                    onRequestCompleted(ex);\n                }\n            });",
      "right" : "requestBody.write(mRequest, AsyncHttpResponseImpl.this, new CompletedCallback() {\n                @Override\n                public void onCompleted(Exception ex) {\n                    onRequestCompleted(ex);\n                }\n            });",
      "info" : "ExpressionStatement[1137-1378]:ExpressionStatement[1137-1378]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1235-1244]:MarkerAnnotation[1235-1244]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1261-1267]:Modifier[1261-1267]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1268-1272]:PrimitiveType[1268-1272]"
    }, {
      "left" : "onCompleted",
      "right" : "onCompleted",
      "info" : "SimpleName[1273-1284]:SimpleName[1273-1284]"
    }, {
      "left" : "Exception ex",
      "right" : "Exception ex",
      "info" : "SingleVariableDeclaration[1285-1297]:SingleVariableDeclaration[1285-1297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1299-1362]:Block[1299-1362]"
    }, {
      "left" : "onRequestCompleted(ex);",
      "right" : "onRequestCompleted(ex);",
      "info" : "ExpressionStatement[1321-1344]:ExpressionStatement[1321-1344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1394-1443]:Block[1394-1443]"
    }, {
      "left" : "onRequestCompleted(null);",
      "right" : "onRequestCompleted(null);",
      "info" : "ExpressionStatement[1408-1433]:ExpressionStatement[1408-1433]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1455-1464]:Modifier[1455-1464]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1465-1469]:PrimitiveType[1465-1469]"
    }, {
      "left" : "onRequestCompleted",
      "right" : "onRequestCompleted",
      "info" : "SimpleName[1470-1488]:SimpleName[1470-1488]"
    }, {
      "left" : "Exception ex",
      "right" : "Exception ex",
      "info" : "SingleVariableDeclaration[1489-1501]:SingleVariableDeclaration[1489-1501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1503-1510]:Block[1503-1510]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1592-1601]:MarkerAnnotation[1592-1601]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1610-1616]:Modifier[1610-1616]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1617-1621]:PrimitiveType[1617-1621]"
    }, {
      "left" : "onCompleted",
      "right" : "onCompleted",
      "info" : "SimpleName[1622-1633]:SimpleName[1622-1633]"
    }, {
      "left" : "Exception error",
      "right" : "Exception error",
      "info" : "SingleVariableDeclaration[1634-1649]:SingleVariableDeclaration[1634-1649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1651-1898]:Block[1651-1898]"
    }, {
      "left" : "if (error != null && !mCompleted)",
      "right" : "if (error != null && !mCompleted)",
      "info" : "IfStatement[1665-1888]:IfStatement[1665-1888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1699-1824]:Block[1699-1824]"
    }, {
      "left" : "report(new ConnectionClosedException(\"connection closed before response completed.\", error));",
      "right" : "report(new ConnectionClosedException(\"connection closed before response completed.\", error));",
      "info" : "ExpressionStatement[1717-1810]:ExpressionStatement[1717-1810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1842-1888]:Block[1842-1888]"
    }, {
      "left" : "report(error);",
      "right" : "report(error);",
      "info" : "ExpressionStatement[1860-1874]:ExpressionStatement[1860-1874]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1911-1920]:Modifier[1911-1920]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1921-1925]:PrimitiveType[1921-1925]"
    }, {
      "left" : "onHeadersReceived",
      "right" : "onHeadersReceived",
      "info" : "SimpleName[1926-1943]:SimpleName[1926-1943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1946-1953]:Block[1946-1953]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1960-1969]:MarkerAnnotation[1960-1969]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1974-1980]:Modifier[1974-1980]"
    }, {
      "left" : "DataEmitter",
      "right" : "DataEmitter",
      "info" : "SimpleType[1981-1992]:SimpleType[1981-1992]"
    }, {
      "left" : "emitter",
      "right" : "emitter",
      "info" : "SimpleName[1993-2000]:SimpleName[1993-2000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2003-2043]:Block[2003-2043]"
    }, {
      "left" : "return getDataEmitter();",
      "right" : "return getDataEmitter();",
      "info" : "ReturnStatement[2013-2037]:ReturnStatement[2013-2037]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2049-2058]:MarkerAnnotation[2049-2058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2063-2069]:Modifier[2063-2069]"
    }, {
      "left" : "AsyncHttpClientMiddleware.ResponseHead",
      "right" : "AsyncHttpClientMiddleware.ResponseHead",
      "info" : "SimpleType[2070-2108]:SimpleType[2070-2108]"
    }, {
      "left" : "emitter",
      "right" : "emitter",
      "info" : "SimpleName[2109-2116]:SimpleName[2109-2116]"
    }, {
      "left" : "DataEmitter emitter",
      "right" : "DataEmitter emitter",
      "info" : "SingleVariableDeclaration[2117-2136]:SingleVariableDeclaration[2117-2136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2138-2199]:Block[2138-2199]"
    }, {
      "left" : "setDataEmitter(emitter);",
      "right" : "setDataEmitter(emitter);",
      "info" : "ExpressionStatement[2148-2172]:ExpressionStatement[2148-2172]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2181-2193]:ReturnStatement[2181-2193]"
    }, {
      "left" : "protected",
      "right" : "private",
      "info" : "Modifier[2219-2228]:Modifier[2205-2212]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2229-2233]:PrimitiveType[2213-2217]"
    }, {
      "left" : "report",
      "right" : "terminate",
      "info" : "SimpleName[2234-2240]:SimpleName[2218-2227]"
    }, {
      "left" : "Exception e",
      "right" : "Exception e",
      "info" : "SingleVariableDeclaration[2241-2252]:SingleVariableDeclaration[2682-2693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2254-2840]:Block[2230-2640]"
    }, {
      "left" : "super.report(e);",
      "right" : "super.report(e);",
      "info" : "ExpressionStatement[2264-2280]:ExpressionStatement[2705-2721]"
    }, {
      "left" : "mSocket.setDataCallback(new NullDataCallback() {\n            @Override\n            public void onDataAvailable(DataEmitter emitter, ByteBufferList bb) {\n                super.onDataAvailable(emitter, bb);\n                mSocket.close();\n            }\n        });",
      "right" : "mSocket.setDataCallback(new NullDataCallback() {\n            @Override\n            public void onDataAvailable(DataEmitter emitter, ByteBufferList bb) {\n                super.onDataAvailable(emitter, bb);\n                mSocket.close();\n            }\n        });",
      "info" : "ExpressionStatement[2421-2684]:ExpressionStatement[2371-2634]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2482-2491]:MarkerAnnotation[2432-2441]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2504-2510]:Modifier[2454-2460]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2511-2515]:PrimitiveType[2461-2465]"
    }, {
      "left" : "onDataAvailable",
      "right" : "onDataAvailable",
      "info" : "SimpleName[2516-2531]:SimpleName[2466-2481]"
    }, {
      "left" : "DataEmitter emitter",
      "right" : "DataEmitter emitter",
      "info" : "SingleVariableDeclaration[2532-2551]:SingleVariableDeclaration[2482-2501]"
    }, {
      "left" : "ByteBufferList bb",
      "right" : "ByteBufferList bb",
      "info" : "SingleVariableDeclaration[2553-2570]:SingleVariableDeclaration[2503-2520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2572-2672]:Block[2522-2622]"
    }, {
      "left" : "super.onDataAvailable(emitter, bb);",
      "right" : "super.onDataAvailable(emitter, bb);",
      "info" : "ExpressionStatement[2590-2625]:ExpressionStatement[2540-2575]"
    }, {
      "left" : "mSocket.close();",
      "right" : "mSocket.close();",
      "info" : "ExpressionStatement[2642-2658]:ExpressionStatement[2592-2608]"
    }, {
      "left" : "mSocket.setWriteableCallback(null);",
      "right" : "mSocket.setWriteableCallback(null);",
      "info" : "ExpressionStatement[2693-2728]:ExpressionStatement[2752-2787]"
    }, {
      "left" : "mSocket.setClosedCallback(null);",
      "right" : "mSocket.setClosedCallback(null);",
      "info" : "ExpressionStatement[2737-2769]:ExpressionStatement[2796-2828]"
    }, {
      "left" : "mSocket.setEndCallback(null);",
      "right" : "mSocket.setEndCallback(null);",
      "info" : "ExpressionStatement[2778-2807]:ExpressionStatement[2837-2866]"
    }, {
      "left" : "mCompleted = true;",
      "right" : "mCompleted = true;",
      "info" : "ExpressionStatement[2816-2834]:ExpressionStatement[2875-2893]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2954-2960]:Modifier[3100-3106]"
    }, {
      "left" : "AsyncHttpResponseImpl",
      "right" : "AsyncHttpResponseImpl",
      "info" : "SimpleName[2961-2982]:SimpleName[3107-3128]"
    }, {
      "left" : "AsyncHttpRequest request",
      "right" : "AsyncHttpRequest request",
      "info" : "SingleVariableDeclaration[2983-3007]:SingleVariableDeclaration[3129-3153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3009-3044]:Block[3155-3190]"
    }, {
      "left" : "mRequest = request;",
      "right" : "mRequest = request;",
      "info" : "ExpressionStatement[3019-3038]:ExpressionStatement[3165-3184]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3083-3092]:MarkerAnnotation[3229-3238]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3097-3103]:Modifier[3243-3249]"
    }, {
      "left" : "Headers",
      "right" : "Headers",
      "info" : "SimpleType[3104-3111]:SimpleType[3250-3257]"
    }, {
      "left" : "headers",
      "right" : "headers",
      "info" : "SimpleName[3112-3119]:SimpleName[3258-3265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3122-3154]:Block[3268-3300]"
    }, {
      "left" : "return mHeaders;",
      "right" : "return mHeaders;",
      "info" : "ReturnStatement[3132-3148]:ReturnStatement[3278-3294]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3160-3169]:MarkerAnnotation[3306-3315]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3174-3180]:Modifier[3320-3326]"
    }, {
      "left" : "AsyncHttpClientMiddleware.ResponseHead",
      "right" : "AsyncHttpClientMiddleware.ResponseHead",
      "info" : "SimpleType[3181-3219]:SimpleType[3327-3365]"
    }, {
      "left" : "headers",
      "right" : "headers",
      "info" : "SimpleName[3220-3227]:SimpleName[3366-3373]"
    }, {
      "left" : "Headers headers",
      "right" : "Headers headers",
      "info" : "SingleVariableDeclaration[3228-3243]:SingleVariableDeclaration[3374-3389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3245-3301]:Block[3391-3447]"
    }, {
      "left" : "mHeaders = headers;",
      "right" : "mHeaders = headers;",
      "info" : "ExpressionStatement[3255-3274]:ExpressionStatement[3401-3420]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3283-3295]:ReturnStatement[3429-3441]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3321-3330]:MarkerAnnotation[3467-3476]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3335-3341]:Modifier[3481-3487]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3342-3345]:PrimitiveType[3488-3491]"
    }, {
      "left" : "code",
      "right" : "code",
      "info" : "SimpleName[3346-3350]:SimpleName[3492-3496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3353-3381]:Block[3499-3527]"
    }, {
      "left" : "return code;",
      "right" : "return code;",
      "info" : "ReturnStatement[3363-3375]:ReturnStatement[3509-3521]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3387-3396]:MarkerAnnotation[3533-3542]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3401-3407]:Modifier[3547-3553]"
    }, {
      "left" : "AsyncHttpClientMiddleware.ResponseHead",
      "right" : "AsyncHttpClientMiddleware.ResponseHead",
      "info" : "SimpleType[3408-3446]:SimpleType[3554-3592]"
    }, {
      "left" : "code",
      "right" : "code",
      "info" : "SimpleName[3447-3451]:SimpleName[3593-3597]"
    }, {
      "left" : "int code",
      "right" : "int code",
      "info" : "SingleVariableDeclaration[3452-3460]:SingleVariableDeclaration[3598-3606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3462-3516]:Block[3608-3662]"
    }, {
      "left" : "this.code = code;",
      "right" : "this.code = code;",
      "info" : "ExpressionStatement[3472-3489]:ExpressionStatement[3618-3635]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3498-3510]:ReturnStatement[3644-3656]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3522-3531]:MarkerAnnotation[3668-3677]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3536-3542]:Modifier[3682-3688]"
    }, {
      "left" : "AsyncHttpClientMiddleware.ResponseHead",
      "right" : "AsyncHttpClientMiddleware.ResponseHead",
      "info" : "SimpleType[3543-3581]:SimpleType[3689-3727]"
    }, {
      "left" : "protocol",
      "right" : "protocol",
      "info" : "SimpleName[3582-3590]:SimpleName[3728-3736]"
    }, {
      "left" : "String protocol",
      "right" : "String protocol",
      "info" : "SingleVariableDeclaration[3591-3606]:SingleVariableDeclaration[3737-3752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3608-3670]:Block[3754-3816]"
    }, {
      "left" : "this.protocol = protocol;",
      "right" : "this.protocol = protocol;",
      "info" : "ExpressionStatement[3618-3643]:ExpressionStatement[3764-3789]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3652-3664]:ReturnStatement[3798-3810]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3676-3685]:MarkerAnnotation[3822-3831]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3690-3696]:Modifier[3836-3842]"
    }, {
      "left" : "AsyncHttpClientMiddleware.ResponseHead",
      "right" : "AsyncHttpClientMiddleware.ResponseHead",
      "info" : "SimpleType[3697-3735]:SimpleType[3843-3881]"
    }, {
      "left" : "message",
      "right" : "message",
      "info" : "SimpleName[3736-3743]:SimpleName[3882-3889]"
    }, {
      "left" : "String message",
      "right" : "String message",
      "info" : "SingleVariableDeclaration[3744-3758]:SingleVariableDeclaration[3890-3904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3760-3820]:Block[3906-3966]"
    }, {
      "left" : "this.message = message;",
      "right" : "this.message = message;",
      "info" : "ExpressionStatement[3770-3793]:ExpressionStatement[3916-3939]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3802-3814]:ReturnStatement[3948-3960]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3847-3856]:MarkerAnnotation[3993-4002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3861-3867]:Modifier[4007-4013]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3868-3874]:SimpleType[4014-4020]"
    }, {
      "left" : "protocol",
      "right" : "protocol",
      "info" : "SimpleName[3875-3883]:SimpleName[4021-4029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3886-3918]:Block[4032-4064]"
    }, {
      "left" : "return protocol;",
      "right" : "return protocol;",
      "info" : "ReturnStatement[3896-3912]:ReturnStatement[4042-4058]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3944-3953]:MarkerAnnotation[4090-4099]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3958-3964]:Modifier[4104-4110]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3965-3971]:SimpleType[4111-4117]"
    }, {
      "left" : "message",
      "right" : "message",
      "info" : "SimpleName[3972-3979]:SimpleName[4118-4125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3982-4013]:Block[4128-4159]"
    }, {
      "left" : "return message;",
      "right" : "return message;",
      "info" : "ReturnStatement[3992-4007]:ReturnStatement[4138-4153]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4019-4028]:MarkerAnnotation[4165-4174]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4033-4039]:Modifier[4179-4185]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4040-4046]:SimpleType[4186-4192]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[4047-4055]:SimpleName[4193-4201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4058-4211]:Block[4204-4357]"
    }, {
      "left" : "if (mHeaders == null)",
      "right" : "if (mHeaders == null)",
      "info" : "IfStatement[4068-4126]:IfStatement[4214-4272]"
    }, {
      "left" : "return super.toString();",
      "right" : "return super.toString();",
      "info" : "ReturnStatement[4102-4126]:ReturnStatement[4248-4272]"
    }, {
      "left" : "return mHeaders.toPrefixString(protocol + \" \" + code + \" \" + message);",
      "right" : "return mHeaders.toPrefixString(protocol + \" \" + code + \" \" + message);",
      "info" : "ReturnStatement[4135-4205]:ReturnStatement[4281-4351]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4257-4264]:Modifier[4403-4410]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4265-4269]:PrimitiveType[4411-4415]"
    }, {
      "left" : "assertContent",
      "right" : "assertContent",
      "info" : "SimpleName[4270-4283]:SimpleName[4416-4429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4286-4560]:Block[4432-4706]"
    }, {
      "left" : "if (!mFirstWrite)",
      "right" : "if (!mFirstWrite)",
      "info" : "IfStatement[4296-4333]:IfStatement[4442-4479]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4326-4333]:ReturnStatement[4472-4479]"
    }, {
      "left" : "mFirstWrite = false;",
      "right" : "mFirstWrite = false;",
      "info" : "ExpressionStatement[4342-4362]:ExpressionStatement[4488-4508]"
    }, {
      "left" : "assert null != mRequest.getHeaders().get(\"Content-Type\");",
      "right" : "assert null != mRequest.getHeaders().get(\"Content-Type\");",
      "info" : "AssertStatement[4371-4428]:AssertStatement[4517-4574]"
    }, {
      "left" : "assert mRequest.getHeaders().get(\"Transfer-Encoding\") != null || HttpUtil.contentLength(mRequest.getHeaders()) != -1;",
      "right" : "assert mRequest.getHeaders().get(\"Transfer-Encoding\") != null || HttpUtil.contentLength(mRequest.getHeaders()) != -1;",
      "info" : "AssertStatement[4437-4554]:AssertStatement[4583-4700]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4587-4596]:MarkerAnnotation[4733-4742]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4601-4607]:Modifier[4747-4753]"
    }, {
      "left" : "DataSink",
      "right" : "DataSink",
      "info" : "SimpleType[4608-4616]:SimpleType[4754-4762]"
    }, {
      "left" : "sink",
      "right" : "sink",
      "info" : "SimpleName[4617-4621]:SimpleName[4763-4767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4624-4653]:Block[4770-4799]"
    }, {
      "left" : "return mSink;",
      "right" : "return mSink;",
      "info" : "ReturnStatement[4634-4647]:ReturnStatement[4780-4793]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4659-4668]:MarkerAnnotation[4805-4814]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4673-4679]:Modifier[4819-4825]"
    }, {
      "left" : "AsyncHttpClientMiddleware.ResponseHead",
      "right" : "AsyncHttpClientMiddleware.ResponseHead",
      "info" : "SimpleType[4680-4718]:SimpleType[4826-4864]"
    }, {
      "left" : "sink",
      "right" : "sink",
      "info" : "SimpleName[4719-4723]:SimpleName[4865-4869]"
    }, {
      "left" : "DataSink sink",
      "right" : "DataSink sink",
      "info" : "SingleVariableDeclaration[4724-4737]:SingleVariableDeclaration[4870-4883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4739-4789]:Block[4885-4935]"
    }, {
      "left" : "mSink = sink;",
      "right" : "mSink = sink;",
      "info" : "ExpressionStatement[4749-4762]:ExpressionStatement[4895-4908]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4771-4783]:ReturnStatement[4917-4929]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4795-4804]:MarkerAnnotation[4941-4950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4809-4815]:Modifier[4955-4961]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4816-4820]:PrimitiveType[4962-4966]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[4821-4826]:SimpleName[4967-4972]"
    }, {
      "left" : "ByteBufferList bb",
      "right" : "ByteBufferList bb",
      "info" : "SingleVariableDeclaration[4827-4844]:SingleVariableDeclaration[4973-4990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4846-4903]:Block[4992-5049]"
    }, {
      "left" : "assertContent();",
      "right" : "assertContent();",
      "info" : "ExpressionStatement[4856-4872]:ExpressionStatement[5002-5018]"
    }, {
      "left" : "mSink.write(bb);",
      "right" : "mSink.write(bb);",
      "info" : "ExpressionStatement[4881-4897]:ExpressionStatement[5027-5043]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4909-4918]:MarkerAnnotation[5055-5064]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4923-4929]:Modifier[5069-5075]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4930-4934]:PrimitiveType[5076-5080]"
    }, {
      "left" : "end",
      "right" : "end",
      "info" : "SimpleName[4935-4938]:SimpleName[5081-5084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4941-4997]:Block[5087-5143]"
    }, {
      "left" : "throw new AssertionError(\"end called?\");",
      "right" : "throw new AssertionError(\"end called?\");",
      "info" : "ThrowStatement[4951-4991]:ThrowStatement[5097-5137]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5003-5012]:MarkerAnnotation[5149-5158]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5017-5023]:Modifier[5163-5169]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5024-5028]:PrimitiveType[5170-5174]"
    }, {
      "left" : "setWriteableCallback",
      "right" : "setWriteableCallback",
      "info" : "SimpleName[5029-5049]:SimpleName[5175-5195]"
    }, {
      "left" : "WritableCallback handler",
      "right" : "WritableCallback handler",
      "info" : "SingleVariableDeclaration[5050-5074]:SingleVariableDeclaration[5196-5220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5076-5128]:Block[5222-5274]"
    }, {
      "left" : "mSink.setWriteableCallback(handler);",
      "right" : "mSink.setWriteableCallback(handler);",
      "info" : "ExpressionStatement[5086-5122]:ExpressionStatement[5232-5268]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5134-5143]:MarkerAnnotation[5280-5289]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5148-5154]:Modifier[5294-5300]"
    }, {
      "left" : "WritableCallback",
      "right" : "WritableCallback",
      "info" : "SimpleType[5155-5171]:SimpleType[5301-5317]"
    }, {
      "left" : "getWriteableCallback",
      "right" : "getWriteableCallback",
      "info" : "SimpleName[5172-5192]:SimpleName[5318-5338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5195-5247]:Block[5341-5393]"
    }, {
      "left" : "return mSink.getWriteableCallback();",
      "right" : "return mSink.getWriteableCallback();",
      "info" : "ReturnStatement[5205-5241]:ReturnStatement[5351-5387]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5254-5263]:MarkerAnnotation[5400-5409]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5268-5274]:Modifier[5414-5420]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5275-5282]:PrimitiveType[5421-5428]"
    }, {
      "left" : "isOpen",
      "right" : "isOpen",
      "info" : "SimpleName[5283-5289]:SimpleName[5429-5435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5292-5330]:Block[5438-5476]"
    }, {
      "left" : "return mSink.isOpen();",
      "right" : "return mSink.isOpen();",
      "info" : "ReturnStatement[5302-5324]:ReturnStatement[5448-5470]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5336-5345]:MarkerAnnotation[5482-5491]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5350-5356]:Modifier[5496-5502]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5357-5361]:PrimitiveType[5503-5507]"
    }, {
      "left" : "setClosedCallback",
      "right" : "setClosedCallback",
      "info" : "SimpleName[5362-5379]:SimpleName[5508-5525]"
    }, {
      "left" : "CompletedCallback handler",
      "right" : "CompletedCallback handler",
      "info" : "SingleVariableDeclaration[5380-5405]:SingleVariableDeclaration[5526-5551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5407-5456]:Block[5553-5602]"
    }, {
      "left" : "mSink.setClosedCallback(handler);",
      "right" : "mSink.setClosedCallback(handler);",
      "info" : "ExpressionStatement[5417-5450]:ExpressionStatement[5563-5596]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5462-5471]:MarkerAnnotation[5608-5617]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5476-5482]:Modifier[5622-5628]"
    }, {
      "left" : "CompletedCallback",
      "right" : "CompletedCallback",
      "info" : "SimpleType[5483-5500]:SimpleType[5629-5646]"
    }, {
      "left" : "getClosedCallback",
      "right" : "getClosedCallback",
      "info" : "SimpleName[5501-5518]:SimpleName[5647-5664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5521-5570]:Block[5667-5716]"
    }, {
      "left" : "return mSink.getClosedCallback();",
      "right" : "return mSink.getClosedCallback();",
      "info" : "ReturnStatement[5531-5564]:ReturnStatement[5677-5710]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5580-5589]:MarkerAnnotation[5726-5735]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5594-5600]:Modifier[5740-5746]"
    }, {
      "left" : "AsyncServer",
      "right" : "AsyncServer",
      "info" : "SimpleType[5601-5612]:SimpleType[5747-5758]"
    }, {
      "left" : "getServer",
      "right" : "getServer",
      "info" : "SimpleName[5613-5622]:SimpleName[5759-5768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5625-5668]:Block[5771-5814]"
    }, {
      "left" : "return mSocket.getServer();",
      "right" : "return mSocket.getServer();",
      "info" : "ReturnStatement[5635-5662]:ReturnStatement[5781-5808]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5674-5683]:MarkerAnnotation[5820-5829]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5688-5694]:Modifier[5834-5840]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5695-5701]:SimpleType[5841-5847]"
    }, {
      "left" : "charset",
      "right" : "charset",
      "info" : "SimpleName[5702-5709]:SimpleName[5848-5855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5712-5974]:Block[5858-6120]"
    }, {
      "left" : "Multimap mm = Multimap.parseSemicolonDelimited(headers().get(\"Content-Type\"));",
      "right" : "Multimap mm = Multimap.parseSemicolonDelimited(headers().get(\"Content-Type\"));",
      "info" : "VariableDeclarationStatement[5722-5800]:VariableDeclarationStatement[5868-5946]"
    }, {
      "left" : "String cs;",
      "right" : "String cs;",
      "info" : "VariableDeclarationStatement[5809-5819]:VariableDeclarationStatement[5955-5965]"
    }, {
      "left" : "if (mm != null && null != (cs = mm.getString(\"charset\")) && Charset.isSupported(cs))",
      "right" : "if (mm != null && null != (cs = mm.getString(\"charset\")) && Charset.isSupported(cs))",
      "info" : "IfStatement[5828-5947]:IfStatement[5974-6093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5913-5947]:Block[6059-6093]"
    }, {
      "left" : "return cs;",
      "right" : "return cs;",
      "info" : "ReturnStatement[5927-5937]:ReturnStatement[6073-6083]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5956-5968]:ReturnStatement[6102-6114]"
    } ]
  },
  "interFileMappings" : { }
}