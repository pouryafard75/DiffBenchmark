{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SubLine",
      "right" : "SubLine",
      "info" : "TypeDeclaration[1262-6035]:TypeDeclaration[1262-6097]"
    }, {
      "left" : "private final Line line;",
      "right" : "private final Line line;",
      "info" : "FieldDeclaration[1379-1431]:FieldDeclaration[1379-1431]"
    }, {
      "left" : "private final IntervalsSet remainingRegion;",
      "right" : "private final IntervalsSet remainingRegion;",
      "info" : "FieldDeclaration[1437-1527]:FieldDeclaration[1437-1527]"
    }, {
      "left" : "public SubLine(final Line line, final IntervalsSet remainingRegion)",
      "right" : "public SubLine(final Line line, final IntervalsSet remainingRegion)",
      "info" : "MethodDeclaration[1533-1823]:MethodDeclaration[1533-1823]"
    }, {
      "left" : "public SubLine(final Vector3D start, final Vector3D end)\n        throws MathIllegalArgumentException",
      "right" : "public SubLine(final Vector3D start, final Vector3D end)\n        throws MathIllegalArgumentException",
      "info" : "MethodDeclaration[1829-2188]:MethodDeclaration[1829-2188]"
    }, {
      "left" : "public SubLine(final Segment segment) throws MathIllegalArgumentException",
      "right" : "public SubLine(final Segment segment) throws MathIllegalArgumentException",
      "info" : "MethodDeclaration[2194-2554]:MethodDeclaration[2194-2554]"
    }, {
      "left" : "public List<Segment> getSegments()",
      "right" : "public List<Segment> getSegments()",
      "info" : "MethodDeclaration[2560-3924]:MethodDeclaration[2560-3924]"
    }, {
      "left" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
      "right" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
      "info" : "MethodDeclaration[3930-5498]:MethodDeclaration[3930-5560]"
    }, {
      "left" : "private static IntervalsSet buildIntervalSet(final Vector3D start, final Vector3D end)\n        throws MathIllegalArgumentException",
      "right" : "private static IntervalsSet buildIntervalSet(final Vector3D start, final Vector3D end)\n        throws MathIllegalArgumentException",
      "info" : "MethodDeclaration[5504-6032]:MethodDeclaration[5566-6094]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1351-1357]:Modifier[1351-1357]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1358-1363]:TYPE_DECLARATION_KIND[1358-1363]"
    }, {
      "left" : "SubLine",
      "right" : "SubLine",
      "info" : "SimpleName[1364-1371]:SimpleName[1364-1371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1663-1669]:Modifier[1663-1669]"
    }, {
      "left" : "SubLine",
      "right" : "SubLine",
      "info" : "SimpleName[1670-1677]:SimpleName[1670-1677]"
    }, {
      "left" : "final Line line",
      "right" : "final Line line",
      "info" : "SingleVariableDeclaration[1678-1693]:SingleVariableDeclaration[1678-1693]"
    }, {
      "left" : "final IntervalsSet remainingRegion",
      "right" : "final IntervalsSet remainingRegion",
      "info" : "SingleVariableDeclaration[1695-1729]:SingleVariableDeclaration[1695-1729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1731-1823]:Block[1731-1823]"
    }, {
      "left" : "this.line            = line;",
      "right" : "this.line            = line;",
      "info" : "ExpressionStatement[1741-1769]:ExpressionStatement[1741-1769]"
    }, {
      "left" : "this.remainingRegion = remainingRegion;",
      "right" : "this.remainingRegion = remainingRegion;",
      "info" : "ExpressionStatement[1778-1817]:ExpressionStatement[1778-1817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2014-2020]:Modifier[2014-2020]"
    }, {
      "left" : "SubLine",
      "right" : "SubLine",
      "info" : "SimpleName[2021-2028]:SimpleName[2021-2028]"
    }, {
      "left" : "final Vector3D start",
      "right" : "final Vector3D start",
      "info" : "SingleVariableDeclaration[2029-2049]:SingleVariableDeclaration[2029-2049]"
    }, {
      "left" : "final Vector3D end",
      "right" : "final Vector3D end",
      "info" : "SingleVariableDeclaration[2051-2069]:SingleVariableDeclaration[2051-2069]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[2086-2114]:SimpleType[2086-2114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2115-2188]:Block[2115-2188]"
    }, {
      "left" : "this(new Line(start, end), buildIntervalSet(start, end));",
      "right" : "this(new Line(start, end), buildIntervalSet(start, end));",
      "info" : "ConstructorInvocation[2125-2182]:ConstructorInvocation[2125-2182]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2384-2390]:Modifier[2384-2390]"
    }, {
      "left" : "SubLine",
      "right" : "SubLine",
      "info" : "SimpleName[2391-2398]:SimpleName[2391-2398]"
    }, {
      "left" : "final Segment segment",
      "right" : "final Segment segment",
      "info" : "SingleVariableDeclaration[2399-2420]:SingleVariableDeclaration[2399-2420]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[2429-2457]:SimpleType[2429-2457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2458-2554]:Block[2458-2554]"
    }, {
      "left" : "this(segment.getLine(), buildIntervalSet(segment.getStart(), segment.getEnd()));",
      "right" : "this(segment.getLine(), buildIntervalSet(segment.getStart(), segment.getEnd()));",
      "info" : "ConstructorInvocation[2468-2548]:ConstructorInvocation[2468-2548]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3448-3454]:Modifier[3448-3454]"
    }, {
      "left" : "List<Segment>",
      "right" : "List<Segment>",
      "info" : "ParameterizedType[3455-3468]:ParameterizedType[3455-3468]"
    }, {
      "left" : "getSegments",
      "right" : "getSegments",
      "info" : "SimpleName[3469-3480]:SimpleName[3469-3480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3483-3924]:Block[3483-3924]"
    }, {
      "left" : "final List<Interval> list = remainingRegion.asList();",
      "right" : "final List<Interval> list = remainingRegion.asList();",
      "info" : "VariableDeclarationStatement[3494-3547]:VariableDeclarationStatement[3494-3547]"
    }, {
      "left" : "final List<Segment> segments = new ArrayList<Segment>();",
      "right" : "final List<Segment> segments = new ArrayList<Segment>();",
      "info" : "VariableDeclarationStatement[3556-3612]:VariableDeclarationStatement[3556-3612]"
    }, {
      "left" : "for (final Interval interval : list)",
      "right" : "for (final Interval interval : list)",
      "info" : "EnhancedForStatement[3622-3891]:EnhancedForStatement[3622-3891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3659-3891]:Block[3659-3891]"
    }, {
      "left" : "final Vector3D start = line.toSpace(new Vector1D(interval.getInf()));",
      "right" : "final Vector3D start = line.toSpace(new Vector1D(interval.getInf()));",
      "info" : "VariableDeclarationStatement[3673-3742]:VariableDeclarationStatement[3673-3742]"
    }, {
      "left" : "final Vector3D end   = line.toSpace(new Vector1D(interval.getSup()));",
      "right" : "final Vector3D end   = line.toSpace(new Vector1D(interval.getSup()));",
      "info" : "VariableDeclarationStatement[3755-3824]:VariableDeclarationStatement[3755-3824]"
    }, {
      "left" : "segments.add(new Segment(start, end, line));",
      "right" : "segments.add(new Segment(start, end, line));",
      "info" : "ExpressionStatement[3837-3881]:ExpressionStatement[3837-3881]"
    }, {
      "left" : "return segments;",
      "right" : "return segments;",
      "info" : "ReturnStatement[3901-3917]:ReturnStatement[3901-3917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4755-4761]:Modifier[4755-4761]"
    }, {
      "left" : "intersection",
      "right" : "intersection",
      "info" : "SimpleName[4771-4783]:SimpleName[4771-4783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4839-5498]:Block[4839-5560]"
    }, {
      "left" : "Vector3D v1D = line.intersection(subLine.line);",
      "right" : "Vector3D v1D = line.intersection(subLine.line);",
      "info" : "VariableDeclarationStatement[4903-4950]:VariableDeclarationStatement[4903-4950]"
    }, {
      "left" : "Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));",
      "right" : "Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));",
      "info" : "VariableDeclarationStatement[5026-5091]:VariableDeclarationStatement[5088-5153]"
    }, {
      "left" : "Location loc2 = subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));",
      "right" : "Location loc2 = subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));",
      "info" : "VariableDeclarationStatement[5168-5249]:VariableDeclarationStatement[5230-5311]"
    }, {
      "left" : "if (includeEndPoints)",
      "right" : "if (includeEndPoints)",
      "info" : "IfStatement[5259-5491]:IfStatement[5321-5553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5281-5384]:Block[5343-5446]"
    }, {
      "left" : "return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v1D : null;",
      "right" : "return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE)) ? v1D : null;",
      "info" : "ReturnStatement[5295-5374]:ReturnStatement[5357-5436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5390-5491]:Block[5452-5553]"
    }, {
      "left" : "return ((loc1 == Location.INSIDE) && (loc2 == Location.INSIDE)) ? v1D : null;",
      "right" : "return ((loc1 == Location.INSIDE) && (loc2 == Location.INSIDE)) ? v1D : null;",
      "info" : "ReturnStatement[5404-5481]:ReturnStatement[5466-5543]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5721-5728]:Modifier[5783-5790]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5729-5735]:Modifier[5791-5797]"
    }, {
      "left" : "IntervalsSet",
      "right" : "IntervalsSet",
      "info" : "SimpleType[5736-5748]:SimpleType[5798-5810]"
    }, {
      "left" : "buildIntervalSet",
      "right" : "buildIntervalSet",
      "info" : "SimpleName[5749-5765]:SimpleName[5811-5827]"
    }, {
      "left" : "final Vector3D start",
      "right" : "final Vector3D start",
      "info" : "SingleVariableDeclaration[5766-5786]:SingleVariableDeclaration[5828-5848]"
    }, {
      "left" : "final Vector3D end",
      "right" : "final Vector3D end",
      "info" : "SingleVariableDeclaration[5788-5806]:SingleVariableDeclaration[5850-5868]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[5823-5851]:SimpleType[5885-5913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5852-6032]:Block[5914-6094]"
    }, {
      "left" : "final Line line = new Line(start, end);",
      "right" : "final Line line = new Line(start, end);",
      "info" : "VariableDeclarationStatement[5862-5901]:VariableDeclarationStatement[5924-5963]"
    }, {
      "left" : "return new IntervalsSet(line.toSubSpace(start).getX(),\n                                line.toSubSpace(end).getX());",
      "right" : "return new IntervalsSet(line.toSubSpace(start).getX(),\n                                line.toSubSpace(end).getX());",
      "info" : "ReturnStatement[5910-6026]:ReturnStatement[5972-6088]"
    } ]
  },
  "interFileMappings" : { }
}