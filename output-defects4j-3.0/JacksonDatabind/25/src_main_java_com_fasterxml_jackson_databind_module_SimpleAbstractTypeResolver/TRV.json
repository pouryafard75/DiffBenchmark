{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 8635483102371490919L;",
      "right" : "private static final long serialVersionUID = 8635483102371490919L;",
      "info" : "FieldDeclaration[1238-1304]:FieldDeclaration[1238-1304]"
    }, {
      "left" : "protected final HashMap<ClassKey,Class<?>> _mappings = new HashMap<ClassKey,Class<?>>();",
      "right" : "protected final HashMap<ClassKey,Class<?>> _mappings = new HashMap<ClassKey,Class<?>>();",
      "info" : "FieldDeclaration[1310-1459]:FieldDeclaration[1310-1459]"
    }, {
      "left" : "public <T> SimpleAbstractTypeResolver addMapping(Class<T> superType, Class<? extends T> subType)",
      "right" : "public <T> SimpleAbstractTypeResolver addMapping(Class<T> superType, Class<? extends T> subType)",
      "info" : "MethodDeclaration[1465-2910]:MethodDeclaration[1465-2910]"
    }, {
      "left" : "public JavaType resolveAbstractType(DeserializationConfig config, JavaType type)",
      "right" : "public JavaType resolveAbstractType(DeserializationConfig config, JavaType type)",
      "info" : "MethodDeclaration[3368-3538]:MethodDeclaration[3409-3579]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2038-2044]:Modifier[2038-2044]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[2046-2047]:TypeParameter[2046-2047]"
    }, {
      "left" : "SimpleAbstractTypeResolver",
      "right" : "SimpleAbstractTypeResolver",
      "info" : "SimpleType[2049-2075]:SimpleType[2049-2075]"
    }, {
      "left" : "addMapping",
      "right" : "addMapping",
      "info" : "SimpleName[2076-2086]:SimpleName[2076-2086]"
    }, {
      "left" : "Class<T> superType",
      "right" : "Class<T> superType",
      "info" : "SingleVariableDeclaration[2087-2105]:SingleVariableDeclaration[2087-2105]"
    }, {
      "left" : "Class<? extends T> subType",
      "right" : "Class<? extends T> subType",
      "info" : "SingleVariableDeclaration[2107-2133]:SingleVariableDeclaration[2107-2133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2139-2910]:Block[2139-2910]"
    }, {
      "left" : "if (superType == subType)",
      "right" : "if (superType == subType)",
      "info" : "IfStatement[2221-2350]:IfStatement[2221-2350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2247-2350]:Block[2247-2350]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not add mapping from class to itself\");",
      "right" : "throw new IllegalArgumentException(\"Can not add mapping from class to itself\");",
      "info" : "ThrowStatement[2261-2340]:ThrowStatement[2261-2340]"
    }, {
      "left" : "if (!superType.isAssignableFrom(subType))",
      "right" : "if (!superType.isAssignableFrom(subType))",
      "info" : "IfStatement[2359-2602]:IfStatement[2359-2602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2401-2602]:Block[2401-2602]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not add mapping from class \"+superType.getName()\n                    +\" to \"+subType.getName()+\", as latter is not a subtype of former\");",
      "right" : "throw new IllegalArgumentException(\"Can not add mapping from class \"+superType.getName()\n                    +\" to \"+subType.getName()+\", as latter is not a subtype of former\");",
      "info" : "ThrowStatement[2415-2592]:ThrowStatement[2415-2592]"
    }, {
      "left" : "if (!Modifier.isAbstract(superType.getModifiers()))",
      "right" : "if (!Modifier.isAbstract(superType.getModifiers()))",
      "info" : "IfStatement[2611-2826]:IfStatement[2611-2826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2663-2826]:Block[2663-2826]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not add mapping from class \"+superType.getName()\n                    +\" since it is not abstract\");",
      "right" : "throw new IllegalArgumentException(\"Can not add mapping from class \"+superType.getName()\n                    +\" since it is not abstract\");",
      "info" : "ThrowStatement[2677-2816]:ThrowStatement[2677-2816]"
    }, {
      "left" : "_mappings.put(new ClassKey(superType), subType);",
      "right" : "_mappings.put(new ClassKey(superType), subType);",
      "info" : "ExpressionStatement[2835-2883]:ExpressionStatement[2835-2883]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2892-2904]:ReturnStatement[2892-2904]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3368-3377]:MarkerAnnotation[3409-3418]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3382-3388]:Modifier[3423-3429]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[3389-3397]:SimpleType[3430-3438]"
    }, {
      "left" : "resolveAbstractType",
      "right" : "resolveAbstractType",
      "info" : "SimpleName[3398-3417]:SimpleName[3439-3458]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[3418-3446]:SingleVariableDeclaration[3459-3487]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[3448-3461]:SingleVariableDeclaration[3489-3502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3467-3538]:Block[3508-3579]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3520-3532]:ReturnStatement[3561-3573]"
    } ]
  },
  "interFileMappings" : { }
}