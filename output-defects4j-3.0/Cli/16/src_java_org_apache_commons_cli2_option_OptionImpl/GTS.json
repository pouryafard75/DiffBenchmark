{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "OptionImpl",
      "right" : "OptionImpl",
      "info" : "TypeDeclaration[1179-5071]:TypeDeclaration[1179-5238]"
    }, {
      "left" : "private final int id;",
      "right" : "private final int id;",
      "info" : "FieldDeclaration[1348-1369]:FieldDeclaration[1348-1369]"
    }, {
      "left" : "private final boolean required;",
      "right" : "private final boolean required;",
      "info" : "FieldDeclaration[1374-1405]:FieldDeclaration[1374-1405]"
    }, {
      "left" : "public OptionImpl(final int id,\n                      final boolean required)",
      "right" : "public OptionImpl(final int id,\n                      final boolean required)",
      "info" : "MethodDeclaration[1411-1725]:MethodDeclaration[1438-1752]"
    }, {
      "left" : "public boolean canProcess(final WriteableCommandLine commandLine,\n                              final ListIterator arguments)",
      "right" : "public boolean canProcess(final WriteableCommandLine commandLine,\n                              final ListIterator arguments)",
      "info" : "MethodDeclaration[1731-2104]:MethodDeclaration[1758-2131]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[2110-2288]:MethodDeclaration[2137-2315]"
    }, {
      "left" : "public int getId()",
      "right" : "public int getId()",
      "info" : "MethodDeclaration[2294-2339]:MethodDeclaration[2321-2366]"
    }, {
      "left" : "public boolean equals(final Object thatObj)",
      "right" : "public boolean equals(final Object thatObj)",
      "info" : "MethodDeclaration[2345-2871]:MethodDeclaration[2372-2898]"
    }, {
      "left" : "private boolean equals(Object left,\n                           Object right)",
      "right" : "private boolean equals(Object left,\n                           Object right)",
      "info" : "MethodDeclaration[2877-3183]:MethodDeclaration[2904-3210]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[3189-3648]:MethodDeclaration[3216-3675]"
    }, {
      "left" : "public Option findOption(String trigger)",
      "right" : "public Option findOption(String trigger)",
      "info" : "MethodDeclaration[3654-3826]:MethodDeclaration[3681-3853]"
    }, {
      "left" : "public boolean isRequired()",
      "right" : "public boolean isRequired()",
      "info" : "MethodDeclaration[3832-3892]:MethodDeclaration[3859-3919]"
    }, {
      "left" : "public void defaults(final WriteableCommandLine commandLine)",
      "right" : "public void defaults(final WriteableCommandLine commandLine)",
      "info" : "MethodDeclaration[3898-4000]:MethodDeclaration[3925-4027]"
    }, {
      "left" : "protected void checkPrefixes(final Set prefixes)",
      "right" : "protected void checkPrefixes(final Set prefixes)",
      "info" : "MethodDeclaration[4008-4452]:MethodDeclaration[4175-4619]"
    }, {
      "left" : "private void checkPrefix(final Set prefixes,\n                             final String trigger)",
      "right" : "private void checkPrefix(final Set prefixes,\n                             final String trigger)",
      "info" : "MethodDeclaration[4458-5069]:MethodDeclaration[4625-5236]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1291-1297]:Modifier[1291-1297]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1298-1306]:Modifier[1298-1306]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1307-1312]:TYPE_DECLARATION_KIND[1307-1312]"
    }, {
      "left" : "OptionImpl",
      "right" : "OptionImpl",
      "info" : "SimpleName[1313-1323]:SimpleName[1313-1323]"
    }, {
      "left" : "Option",
      "right" : "Option",
      "info" : "SimpleType[1335-1341]:SimpleType[1335-1341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1584-1590]:Modifier[1611-1617]"
    }, {
      "left" : "OptionImpl",
      "right" : "OptionImpl",
      "info" : "SimpleName[1591-1601]:SimpleName[1618-1628]"
    }, {
      "left" : "final int id",
      "right" : "final int id",
      "info" : "SingleVariableDeclaration[1602-1614]:SingleVariableDeclaration[1629-1641]"
    }, {
      "left" : "final boolean required",
      "right" : "final boolean required",
      "info" : "SingleVariableDeclaration[1638-1660]:SingleVariableDeclaration[1665-1687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1662-1725]:Block[1689-1752]"
    }, {
      "left" : "this.id = id;",
      "right" : "this.id = id;",
      "info" : "ExpressionStatement[1672-1685]:ExpressionStatement[1699-1712]"
    }, {
      "left" : "this.required = required;",
      "right" : "this.required = required;",
      "info" : "ExpressionStatement[1694-1719]:ExpressionStatement[1721-1746]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1731-1737]:Modifier[1758-1764]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1738-1745]:PrimitiveType[1765-1772]"
    }, {
      "left" : "canProcess",
      "right" : "canProcess",
      "info" : "SimpleName[1746-1756]:SimpleName[1773-1783]"
    }, {
      "left" : "final WriteableCommandLine commandLine",
      "right" : "final WriteableCommandLine commandLine",
      "info" : "SingleVariableDeclaration[1757-1795]:SingleVariableDeclaration[1784-1822]"
    }, {
      "left" : "final ListIterator arguments",
      "right" : "final ListIterator arguments",
      "info" : "SingleVariableDeclaration[1827-1855]:SingleVariableDeclaration[1854-1882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1857-2104]:Block[1884-2131]"
    }, {
      "left" : "if (arguments.hasNext())",
      "right" : "if (arguments.hasNext())",
      "info" : "IfStatement[1867-2098]:IfStatement[1894-2125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1892-2055]:Block[1919-2082]"
    }, {
      "left" : "final String argument = (String) arguments.next();",
      "right" : "final String argument = (String) arguments.next();",
      "info" : "VariableDeclarationStatement[1906-1956]:VariableDeclarationStatement[1933-1983]"
    }, {
      "left" : "arguments.previous();",
      "right" : "arguments.previous();",
      "info" : "ExpressionStatement[1969-1990]:ExpressionStatement[1996-2017]"
    }, {
      "left" : "return canProcess(commandLine, argument);",
      "right" : "return canProcess(commandLine, argument);",
      "info" : "ReturnStatement[2004-2045]:ReturnStatement[2031-2072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2061-2098]:Block[2088-2125]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2075-2088]:ReturnStatement[2102-2115]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2110-2116]:Modifier[2137-2143]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2117-2123]:SimpleType[2144-2150]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[2124-2132]:SimpleName[2151-2159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2135-2288]:Block[2162-2315]"
    }, {
      "left" : "final StringBuffer buffer = new StringBuffer();",
      "right" : "final StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[2145-2192]:VariableDeclarationStatement[2172-2219]"
    }, {
      "left" : "appendUsage(buffer, DisplaySetting.ALL, null);",
      "right" : "appendUsage(buffer, DisplaySetting.ALL, null);",
      "info" : "ExpressionStatement[2201-2247]:ExpressionStatement[2228-2274]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[2257-2282]:ReturnStatement[2284-2309]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2294-2300]:Modifier[2321-2327]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[2301-2304]:PrimitiveType[2328-2331]"
    }, {
      "left" : "getId",
      "right" : "getId",
      "info" : "SimpleName[2305-2310]:SimpleName[2332-2337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2313-2339]:Block[2340-2366]"
    }, {
      "left" : "return id;",
      "right" : "return id;",
      "info" : "ReturnStatement[2323-2333]:ReturnStatement[2350-2360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2345-2351]:Modifier[2372-2378]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2352-2359]:PrimitiveType[2379-2386]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[2360-2366]:SimpleName[2387-2393]"
    }, {
      "left" : "final Object thatObj",
      "right" : "final Object thatObj",
      "info" : "SingleVariableDeclaration[2367-2387]:SingleVariableDeclaration[2394-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2389-2871]:Block[2416-2898]"
    }, {
      "left" : "if (thatObj instanceof OptionImpl)",
      "right" : "if (thatObj instanceof OptionImpl)",
      "info" : "IfStatement[2399-2865]:IfStatement[2426-2892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2434-2822]:Block[2461-2849]"
    }, {
      "left" : "final OptionImpl that = (OptionImpl) thatObj;",
      "right" : "final OptionImpl that = (OptionImpl) thatObj;",
      "info" : "VariableDeclarationStatement[2448-2493]:VariableDeclarationStatement[2475-2520]"
    }, {
      "left" : "return (getId() == that.getId()) &&\n                   equals(getPreferredName(), that.getPreferredName()) &&\n                   equals(getDescription(), that.getDescription()) &&\n                   equals(getPrefixes(), that.getPrefixes()) &&\n                   equals(getTriggers(), that.getTriggers());",
      "right" : "return (getId() == that.getId()) &&\n                   equals(getPreferredName(), that.getPreferredName()) &&\n                   equals(getDescription(), that.getDescription()) &&\n                   equals(getPrefixes(), that.getPrefixes()) &&\n                   equals(getTriggers(), that.getTriggers());",
      "info" : "ReturnStatement[2507-2812]:ReturnStatement[2534-2839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2828-2865]:Block[2855-2892]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2842-2855]:ReturnStatement[2869-2882]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2877-2884]:Modifier[2904-2911]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2885-2892]:PrimitiveType[2912-2919]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[2893-2899]:SimpleName[2920-2926]"
    }, {
      "left" : "Object left",
      "right" : "Object left",
      "info" : "SingleVariableDeclaration[2900-2911]:SingleVariableDeclaration[2927-2938]"
    }, {
      "left" : "Object right",
      "right" : "Object right",
      "info" : "SingleVariableDeclaration[2940-2952]:SingleVariableDeclaration[2967-2979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2954-3183]:Block[2981-3210]"
    }, {
      "left" : "if ((left == null) && (right == null))",
      "right" : "if ((left == null) && (right == null))",
      "info" : "IfStatement[2964-3177]:IfStatement[2991-3204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3003-3039]:Block[3030-3066]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3017-3029]:ReturnStatement[3044-3056]"
    }, {
      "left" : "if ((left == null) || (right == null))",
      "right" : "if ((left == null) || (right == null))",
      "info" : "IfStatement[3045-3177]:IfStatement[3072-3204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3084-3121]:Block[3111-3148]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3098-3111]:ReturnStatement[3125-3138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3127-3177]:Block[3154-3204]"
    }, {
      "left" : "return left.equals(right);",
      "right" : "return left.equals(right);",
      "info" : "ReturnStatement[3141-3167]:ReturnStatement[3168-3194]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3189-3195]:Modifier[3216-3222]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3196-3199]:PrimitiveType[3223-3226]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[3200-3208]:SimpleName[3227-3235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3211-3648]:Block[3238-3675]"
    }, {
      "left" : "int hashCode = getId();",
      "right" : "int hashCode = getId();",
      "info" : "VariableDeclarationStatement[3221-3244]:VariableDeclarationStatement[3248-3271]"
    }, {
      "left" : "if (getPreferredName() != null)",
      "right" : "if (getPreferredName() != null)",
      "info" : "IfStatement[3253-3368]:IfStatement[3280-3395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3285-3368]:Block[3312-3395]"
    }, {
      "left" : "hashCode = (hashCode * 37) + getPreferredName().hashCode();",
      "right" : "hashCode = (hashCode * 37) + getPreferredName().hashCode();",
      "info" : "ExpressionStatement[3299-3358]:ExpressionStatement[3326-3385]"
    }, {
      "left" : "if (getDescription() != null)",
      "right" : "if (getDescription() != null)",
      "info" : "IfStatement[3378-3489]:IfStatement[3405-3516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3408-3489]:Block[3435-3516]"
    }, {
      "left" : "hashCode = (hashCode * 37) + getDescription().hashCode();",
      "right" : "hashCode = (hashCode * 37) + getDescription().hashCode();",
      "info" : "ExpressionStatement[3422-3479]:ExpressionStatement[3449-3506]"
    }, {
      "left" : "hashCode = (hashCode * 37) + getPrefixes().hashCode();",
      "right" : "hashCode = (hashCode * 37) + getPrefixes().hashCode();",
      "info" : "ExpressionStatement[3499-3553]:ExpressionStatement[3526-3580]"
    }, {
      "left" : "hashCode = (hashCode * 37) + getTriggers().hashCode();",
      "right" : "hashCode = (hashCode * 37) + getTriggers().hashCode();",
      "info" : "ExpressionStatement[3562-3616]:ExpressionStatement[3589-3643]"
    }, {
      "left" : "return hashCode;",
      "right" : "return hashCode;",
      "info" : "ReturnStatement[3626-3642]:ReturnStatement[3653-3669]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3654-3660]:Modifier[3681-3687]"
    }, {
      "left" : "Option",
      "right" : "Option",
      "info" : "SimpleType[3661-3667]:SimpleType[3688-3694]"
    }, {
      "left" : "findOption",
      "right" : "findOption",
      "info" : "SimpleName[3668-3678]:SimpleName[3695-3705]"
    }, {
      "left" : "String trigger",
      "right" : "String trigger",
      "info" : "SingleVariableDeclaration[3679-3693]:SingleVariableDeclaration[3706-3720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3695-3826]:Block[3722-3853]"
    }, {
      "left" : "if (getTriggers().contains(trigger))",
      "right" : "if (getTriggers().contains(trigger))",
      "info" : "IfStatement[3705-3820]:IfStatement[3732-3847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3742-3778]:Block[3769-3805]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3756-3768]:ReturnStatement[3783-3795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3784-3820]:Block[3811-3847]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3798-3810]:ReturnStatement[3825-3837]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3832-3838]:Modifier[3859-3865]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3839-3846]:PrimitiveType[3866-3873]"
    }, {
      "left" : "isRequired",
      "right" : "isRequired",
      "info" : "SimpleName[3847-3857]:SimpleName[3874-3884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3860-3892]:Block[3887-3919]"
    }, {
      "left" : "return required;",
      "right" : "return required;",
      "info" : "ReturnStatement[3870-3886]:ReturnStatement[3897-3913]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3898-3904]:Modifier[3925-3931]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3905-3909]:PrimitiveType[3932-3936]"
    }, {
      "left" : "defaults",
      "right" : "defaults",
      "info" : "SimpleName[3910-3918]:SimpleName[3937-3945]"
    }, {
      "left" : "final WriteableCommandLine commandLine",
      "right" : "final WriteableCommandLine commandLine",
      "info" : "SingleVariableDeclaration[3919-3957]:SingleVariableDeclaration[3946-3984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3959-4000]:Block[3986-4027]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4008-4017]:Modifier[4175-4184]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4018-4022]:PrimitiveType[4185-4189]"
    }, {
      "left" : "checkPrefixes",
      "right" : "checkPrefixes",
      "info" : "SimpleName[4023-4036]:SimpleName[4190-4203]"
    }, {
      "left" : "final Set prefixes",
      "right" : "final Set prefixes",
      "info" : "SingleVariableDeclaration[4037-4055]:SingleVariableDeclaration[4204-4222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4452]:Block[4224-4619]"
    }, {
      "left" : "if (prefixes.isEmpty())",
      "right" : "if (prefixes.isEmpty())",
      "info" : "IfStatement[4113-4168]:IfStatement[4280-4335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4137-4168]:Block[4304-4335]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4151-4158]:ReturnStatement[4318-4325]"
    }, {
      "left" : "checkPrefix(prefixes, getPreferredName());",
      "right" : "checkPrefix(prefixes, getPreferredName());",
      "info" : "ExpressionStatement[4210-4252]:ExpressionStatement[4377-4419]"
    }, {
      "left" : "this.getTriggers();",
      "right" : "this.getTriggers();",
      "info" : "ExpressionStatement[4288-4307]:ExpressionStatement[4455-4474]"
    }, {
      "left" : "for (final Iterator i = getTriggers().iterator(); i.hasNext())",
      "right" : "for (final Iterator i = getTriggers().iterator(); i.hasNext())",
      "info" : "ForStatement[4317-4446]:ForStatement[4484-4613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4381-4446]:Block[4548-4613]"
    }, {
      "left" : "checkPrefix(prefixes, (String) i.next());",
      "right" : "checkPrefix(prefixes, (String) i.next());",
      "info" : "ExpressionStatement[4395-4436]:ExpressionStatement[4562-4603]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4458-4465]:Modifier[4625-4632]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4466-4470]:PrimitiveType[4633-4637]"
    }, {
      "left" : "checkPrefix",
      "right" : "checkPrefix",
      "info" : "SimpleName[4471-4482]:SimpleName[4638-4649]"
    }, {
      "left" : "final Set prefixes",
      "right" : "final Set prefixes",
      "info" : "SingleVariableDeclaration[4483-4501]:SingleVariableDeclaration[4650-4668]"
    }, {
      "left" : "final String trigger",
      "right" : "final String trigger",
      "info" : "SingleVariableDeclaration[4532-4552]:SingleVariableDeclaration[4699-4719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4554-5069]:Block[4721-5236]"
    }, {
      "left" : "for (final Iterator i = prefixes.iterator(); i.hasNext())",
      "right" : "for (final Iterator i = prefixes.iterator(); i.hasNext())",
      "info" : "ForStatement[4564-4766]:ForStatement[4731-4933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4623-4766]:Block[4790-4933]"
    }, {
      "left" : "String prefix = (String) i.next();",
      "right" : "String prefix = (String) i.next();",
      "info" : "VariableDeclarationStatement[4637-4671]:VariableDeclarationStatement[4804-4838]"
    }, {
      "left" : "if (trigger.startsWith(prefix))",
      "right" : "if (trigger.startsWith(prefix))",
      "info" : "IfStatement[4685-4756]:IfStatement[4852-4923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4717-4756]:Block[4884-4923]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4735-4742]:ReturnStatement[4902-4909]"
    }, {
      "left" : "final ResourceHelper helper = ResourceHelper.getResourceHelper();",
      "right" : "final ResourceHelper helper = ResourceHelper.getResourceHelper();",
      "info" : "VariableDeclarationStatement[4776-4841]:VariableDeclarationStatement[4943-5008]"
    }, {
      "left" : "final String message =\n            helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger,\n                              prefixes.toString());",
      "right" : "final String message =\n            helper.getMessage(ResourceConstants.OPTION_TRIGGER_NEEDS_PREFIX, trigger,\n                              prefixes.toString());",
      "info" : "VariableDeclarationStatement[4850-5010]:VariableDeclarationStatement[5017-5177]"
    }, {
      "left" : "throw new IllegalArgumentException(message);",
      "right" : "throw new IllegalArgumentException(message);",
      "info" : "ThrowStatement[5019-5063]:ThrowStatement[5186-5230]"
    } ]
  },
  "interFileMappings" : { }
}