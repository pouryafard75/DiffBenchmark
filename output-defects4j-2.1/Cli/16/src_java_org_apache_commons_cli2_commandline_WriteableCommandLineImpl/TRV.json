{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final Map optionToProperties = new HashMap();",
      "right" : "private final Map optionToProperties = new HashMap();",
      "info" : "FieldDeclaration[1587-1640]:FieldDeclaration[1587-1640]"
    }, {
      "left" : "private final List options = new ArrayList();",
      "right" : "private final List options = new ArrayList();",
      "info" : "FieldDeclaration[1707-1752]:FieldDeclaration[1707-1752]"
    }, {
      "left" : "private final Map nameToOption = new HashMap();",
      "right" : "private final Map nameToOption = new HashMap();",
      "info" : "FieldDeclaration[1757-1804]:FieldDeclaration[1757-1804]"
    }, {
      "left" : "private final Map values = new HashMap();",
      "right" : "private final Map values = new HashMap();",
      "info" : "FieldDeclaration[1809-1850]:FieldDeclaration[1809-1850]"
    }, {
      "left" : "private final Map switches = new HashMap();",
      "right" : "private final Map switches = new HashMap();",
      "info" : "FieldDeclaration[1855-1898]:FieldDeclaration[1855-1898]"
    }, {
      "left" : "private final Map defaultValues = new HashMap();",
      "right" : "private final Map defaultValues = new HashMap();",
      "info" : "FieldDeclaration[1903-1951]:FieldDeclaration[1903-1951]"
    }, {
      "left" : "private final Map defaultSwitches = new HashMap();",
      "right" : "private final Map defaultSwitches = new HashMap();",
      "info" : "FieldDeclaration[1956-2006]:FieldDeclaration[1956-2006]"
    }, {
      "left" : "private final List normalised;",
      "right" : "private final List normalised;",
      "info" : "FieldDeclaration[2011-2041]:FieldDeclaration[2011-2041]"
    }, {
      "left" : "private final Set prefixes;",
      "right" : "private final Set prefixes;",
      "info" : "FieldDeclaration[2046-2073]:FieldDeclaration[2046-2073]"
    }, {
      "left" : "public WriteableCommandLineImpl(final Option rootOption,\n                                    final List arguments)",
      "right" : "public WriteableCommandLineImpl(final Option rootOption,\n                                    final List arguments)",
      "info" : "MethodDeclaration[2079-2547]:MethodDeclaration[2079-2547]"
    }, {
      "left" : "public void addValue(final Option option,\n                         final Object value)",
      "right" : "public void addValue(final Option option,\n                         final Object value)",
      "info" : "MethodDeclaration[2885-3274]:MethodDeclaration[3075-3464]"
    }, {
      "left" : "public void addSwitch(final Option option,\n                          final boolean value)",
      "right" : "public void addSwitch(final Option option,\n                          final boolean value)",
      "info" : "MethodDeclaration[3280-3678]:MethodDeclaration[3470-3868]"
    }, {
      "left" : "public boolean hasOption(final Option option)",
      "right" : "public boolean hasOption(final Option option)",
      "info" : "MethodDeclaration[3684-3820]:MethodDeclaration[3874-4010]"
    }, {
      "left" : "public Option getOption(final String trigger)",
      "right" : "public Option getOption(final String trigger)",
      "info" : "MethodDeclaration[3826-3930]:MethodDeclaration[4016-4120]"
    }, {
      "left" : "public List getValues(final Option option,\n                          List defaultValues)",
      "right" : "public List getValues(final Option option,\n                          List defaultValues)",
      "info" : "MethodDeclaration[3936-5105]:MethodDeclaration[4126-5295]"
    }, {
      "left" : "public List getUndefaultedValues(Option option)",
      "right" : "public List getUndefaultedValues(Option option)",
      "info" : "MethodDeclaration[5111-5404]:MethodDeclaration[5301-5594]"
    }, {
      "left" : "public Boolean getSwitch(final Option option,\n                             final Boolean defaultValue)",
      "right" : "public Boolean getSwitch(final Option option,\n                             final Boolean defaultValue)",
      "info" : "MethodDeclaration[5410-5928]:MethodDeclaration[5600-6118]"
    }, {
      "left" : "public String getProperty(final String property)",
      "right" : "public String getProperty(final String property)",
      "info" : "MethodDeclaration[5934-6050]:MethodDeclaration[6124-6240]"
    }, {
      "left" : "public void addProperty(final Option option,\n                            final String property,\n                            final String value)",
      "right" : "public void addProperty(final Option option,\n                            final String property,\n                            final String value)",
      "info" : "MethodDeclaration[6056-6476]:MethodDeclaration[6246-6666]"
    }, {
      "left" : "public void addProperty(final String property, final String value)",
      "right" : "public void addProperty(final String property, final String value)",
      "info" : "MethodDeclaration[6482-6616]:MethodDeclaration[6672-6806]"
    }, {
      "left" : "public String getProperty(final Option option,\n                              final String property,\n                              final String defaultValue)",
      "right" : "public String getProperty(final Option option,\n                              final String property,\n                              final String defaultValue)",
      "info" : "MethodDeclaration[6622-7003]:MethodDeclaration[6812-7193]"
    }, {
      "left" : "public Set getProperties(final Option option)",
      "right" : "public Set getProperties(final Option option)",
      "info" : "MethodDeclaration[7009-7290]:MethodDeclaration[7199-7480]"
    }, {
      "left" : "public Set getProperties()",
      "right" : "public Set getProperties()",
      "info" : "MethodDeclaration[7296-7382]:MethodDeclaration[7486-7572]"
    }, {
      "left" : "public boolean looksLikeOption(final String trigger)",
      "right" : "public boolean looksLikeOption(final String trigger)",
      "info" : "MethodDeclaration[7388-7693]:MethodDeclaration[7578-7883]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[7699-8247]:MethodDeclaration[7889-8437]"
    }, {
      "left" : "public List getOptions()",
      "right" : "public List getOptions()",
      "info" : "MethodDeclaration[8253-8339]:MethodDeclaration[8443-8529]"
    }, {
      "left" : "public Set getOptionTriggers()",
      "right" : "public Set getOptionTriggers()",
      "info" : "MethodDeclaration[8345-8450]:MethodDeclaration[8535-8640]"
    }, {
      "left" : "public void setDefaultValues(final Option option,\n                                 final List defaults)",
      "right" : "public void setDefaultValues(final Option option,\n                                 final List defaults)",
      "info" : "MethodDeclaration[8456-8717]:MethodDeclaration[8646-8907]"
    }, {
      "left" : "public void setDefaultSwitch(final Option option,\n                                 final Boolean defaultSwitch)",
      "right" : "public void setDefaultSwitch(final Option option,\n                                 final Boolean defaultSwitch)",
      "info" : "MethodDeclaration[8723-9006]:MethodDeclaration[8913-9196]"
    }, {
      "left" : "public List getNormalised()",
      "right" : "public List getNormalised()",
      "info" : "MethodDeclaration[9012-9104]:MethodDeclaration[9202-9294]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2453-2547]:Block[2453-2547]"
    }, {
      "left" : "this.prefixes = rootOption.getPrefixes();",
      "right" : "this.prefixes = rootOption.getPrefixes();",
      "info" : "ExpressionStatement[2463-2504]:ExpressionStatement[2463-2504]"
    }, {
      "left" : "this.normalised = arguments;",
      "right" : "this.normalised = arguments;",
      "info" : "ExpressionStatement[2513-2541]:ExpressionStatement[2513-2541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2972-3274]:Block[3162-3464]"
    }, {
      "left" : "if (option instanceof Argument)",
      "right" : "if (option instanceof Argument)",
      "info" : "IfStatement[2982-3056]:IfStatement[3172-3246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3014-3056]:Block[3204-3246]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[3028-3046]:ExpressionStatement[3218-3236]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[3066-3109]:VariableDeclarationStatement[3256-3299]"
    }, {
      "left" : "if (valueList == null)",
      "right" : "if (valueList == null)",
      "info" : "IfStatement[3119-3237]:IfStatement[3309-3427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3142-3237]:Block[3332-3427]"
    }, {
      "left" : "valueList = new ArrayList();",
      "right" : "valueList = new ArrayList();",
      "info" : "ExpressionStatement[3156-3184]:ExpressionStatement[3346-3374]"
    }, {
      "left" : "values.put(option, valueList);",
      "right" : "values.put(option, valueList);",
      "info" : "ExpressionStatement[3197-3227]:ExpressionStatement[3387-3417]"
    }, {
      "left" : "valueList.add(value);",
      "right" : "valueList.add(value);",
      "info" : "ExpressionStatement[3247-3268]:ExpressionStatement[3437-3458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3370-3678]:Block[3560-3868]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[3380-3398]:ExpressionStatement[3570-3588]"
    }, {
      "left" : "if (switches.containsKey(option))",
      "right" : "if (switches.containsKey(option))",
      "info" : "IfStatement[3408-3672]:IfStatement[3598-3862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3442-3583]:Block[3632-3773]"
    }, {
      "left" : "throw new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ALREADY_SET));",
      "right" : "throw new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ALREADY_SET));",
      "info" : "ThrowStatement[3456-3573]:ThrowStatement[3646-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3589-3672]:Block[3779-3862]"
    }, {
      "left" : "switches.put(option, value ? Boolean.TRUE : Boolean.FALSE);",
      "right" : "switches.put(option, value ? Boolean.TRUE : Boolean.FALSE);",
      "info" : "ExpressionStatement[3603-3662]:ExpressionStatement[3793-3852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3730-3820]:Block[3920-4010]"
    }, {
      "left" : "final boolean present = options.contains(option);",
      "right" : "final boolean present = options.contains(option);",
      "info" : "VariableDeclarationStatement[3740-3789]:VariableDeclarationStatement[3930-3979]"
    }, {
      "left" : "return present;",
      "right" : "return present;",
      "info" : "ReturnStatement[3799-3814]:ReturnStatement[3989-4004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3872-3930]:Block[4062-4120]"
    }, {
      "left" : "return (Option) nameToOption.get(trigger);",
      "right" : "return (Option) nameToOption.get(trigger);",
      "info" : "ReturnStatement[3882-3924]:ReturnStatement[4072-4114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4025-5105]:Block[4215-5295]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[4073-4116]:VariableDeclarationStatement[4263-4306]"
    }, {
      "left" : "if (defaultValues == null || defaultValues.isEmpty())",
      "right" : "if (defaultValues == null || defaultValues.isEmpty())",
      "info" : "IfStatement[4169-4301]:IfStatement[4359-4491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4223-4301]:Block[4413-4491]"
    }, {
      "left" : "defaultValues = (List) this.defaultValues.get(option);",
      "right" : "defaultValues = (List) this.defaultValues.get(option);",
      "info" : "ExpressionStatement[4237-4291]:ExpressionStatement[4427-4481]"
    }, {
      "left" : "if (defaultValues != null && !defaultValues.isEmpty())",
      "right" : "if (defaultValues != null && !defaultValues.isEmpty())",
      "info" : "IfStatement[4363-5019]:IfStatement[4553-5209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4418-5019]:Block[4608-5209]"
    }, {
      "left" : "if (valueList == null || valueList.isEmpty())",
      "right" : "if (valueList == null || valueList.isEmpty())",
      "info" : "IfStatement[4432-5009]:IfStatement[4622-5199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4478-4536]:Block[4668-4726]"
    }, {
      "left" : "valueList = defaultValues;",
      "right" : "valueList = defaultValues;",
      "info" : "ExpressionStatement[4496-4522]:ExpressionStatement[4686-4712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4542-5009]:Block[4732-5199]"
    }, {
      "left" : "if (defaultValues.size() > valueList.size())",
      "right" : "if (defaultValues.size() > valueList.size())",
      "info" : "IfStatement[4667-4995]:IfStatement[4857-5185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4712-4995]:Block[4902-5185]"
    }, {
      "left" : "valueList = new ArrayList(valueList);",
      "right" : "valueList = new ArrayList(valueList);",
      "info" : "ExpressionStatement[4777-4814]:ExpressionStatement[4967-5004]"
    }, {
      "left" : "for (int i=valueList.size(); i<defaultValues.size(); i++)",
      "right" : "for (int i=valueList.size(); i<defaultValues.size(); i++)",
      "info" : "ForStatement[4835-4977]:ForStatement[5025-5167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4893-4977]:Block[5083-5167]"
    }, {
      "left" : "valueList.add(defaultValues.get(i));",
      "right" : "valueList.add(defaultValues.get(i));",
      "info" : "ExpressionStatement[4919-4955]:ExpressionStatement[5109-5145]"
    }, {
      "left" : "return valueList == null ? Collections.EMPTY_LIST : valueList;",
      "right" : "return valueList == null ? Collections.EMPTY_LIST : valueList;",
      "info" : "ReturnStatement[5037-5099]:ReturnStatement[5227-5289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5159-5404]:Block[5349-5594]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[5211-5254]:VariableDeclarationStatement[5401-5444]"
    }, {
      "left" : "if (valueList == null)",
      "right" : "if (valueList == null)",
      "info" : "IfStatement[5297-5373]:IfStatement[5487-5563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5320-5373]:Block[5510-5563]"
    }, {
      "left" : "valueList = Collections.EMPTY_LIST;",
      "right" : "valueList = Collections.EMPTY_LIST;",
      "info" : "ExpressionStatement[5330-5365]:ExpressionStatement[5520-5555]"
    }, {
      "left" : "return valueList;",
      "right" : "return valueList;",
      "info" : "ReturnStatement[5381-5398]:ReturnStatement[5571-5588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5513-5928]:Block[5703-6118]"
    }, {
      "left" : "Boolean bool = (Boolean) switches.get(option);",
      "right" : "Boolean bool = (Boolean) switches.get(option);",
      "info" : "VariableDeclarationStatement[5569-5615]:VariableDeclarationStatement[5759-5805]"
    }, {
      "left" : "if (bool == null)",
      "right" : "if (bool == null)",
      "info" : "IfStatement[5685-5747]:IfStatement[5875-5937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5703-5747]:Block[5893-5937]"
    }, {
      "left" : "bool = defaultValue;",
      "right" : "bool = defaultValue;",
      "info" : "ExpressionStatement[5717-5737]:ExpressionStatement[5907-5927]"
    }, {
      "left" : "if (bool == null)",
      "right" : "if (bool == null)",
      "info" : "IfStatement[5808-5900]:IfStatement[5998-6090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5826-5900]:Block[6016-6090]"
    }, {
      "left" : "bool = (Boolean) this.defaultSwitches.get(option);",
      "right" : "bool = (Boolean) this.defaultSwitches.get(option);",
      "info" : "ExpressionStatement[5840-5890]:ExpressionStatement[6030-6080]"
    }, {
      "left" : "return bool;",
      "right" : "return bool;",
      "info" : "ReturnStatement[5910-5922]:ReturnStatement[6100-6112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5983-6050]:Block[6173-6240]"
    }, {
      "left" : "return getProperty(new PropertyOption(), property);",
      "right" : "return getProperty(new PropertyOption(), property);",
      "info" : "ReturnStatement[5993-6044]:ReturnStatement[6183-6234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6200-6476]:Block[6390-6666]"
    }, {
      "left" : "Properties properties = (Properties) optionToProperties.get(option);",
      "right" : "Properties properties = (Properties) optionToProperties.get(option);",
      "info" : "VariableDeclarationStatement[6210-6278]:VariableDeclarationStatement[6400-6468]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[6287-6421]:IfStatement[6477-6611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6311-6421]:Block[6501-6611]"
    }, {
      "left" : "properties = new Properties();",
      "right" : "properties = new Properties();",
      "info" : "ExpressionStatement[6325-6355]:ExpressionStatement[6515-6545]"
    }, {
      "left" : "optionToProperties.put(option, properties);",
      "right" : "optionToProperties.put(option, properties);",
      "info" : "ExpressionStatement[6368-6411]:ExpressionStatement[6558-6601]"
    }, {
      "left" : "properties.setProperty(property, value);",
      "right" : "properties.setProperty(property, value);",
      "info" : "ExpressionStatement[6430-6470]:ExpressionStatement[6620-6660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6549-6616]:Block[6739-6806]"
    }, {
      "left" : "addProperty(new PropertyOption(), property, value);",
      "right" : "addProperty(new PropertyOption(), property, value);",
      "info" : "ExpressionStatement[6559-6610]:ExpressionStatement[6749-6800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6779-7003]:Block[6969-7193]"
    }, {
      "left" : "Properties properties = (Properties) optionToProperties.get(option);",
      "right" : "Properties properties = (Properties) optionToProperties.get(option);",
      "info" : "VariableDeclarationStatement[6789-6857]:VariableDeclarationStatement[6979-7047]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[6866-6934]:IfStatement[7056-7124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6890-6934]:Block[7080-7124]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[6904-6924]:ReturnStatement[7094-7114]"
    }, {
      "left" : "return properties.getProperty(property, defaultValue);",
      "right" : "return properties.getProperty(property, defaultValue);",
      "info" : "ReturnStatement[6943-6997]:ReturnStatement[7133-7187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7055-7290]:Block[7245-7480]"
    }, {
      "left" : "Properties properties = (Properties) optionToProperties.get(option);",
      "right" : "Properties properties = (Properties) optionToProperties.get(option);",
      "info" : "VariableDeclarationStatement[7065-7133]:VariableDeclarationStatement[7255-7323]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[7142-7219]:IfStatement[7332-7409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7166-7219]:Block[7356-7409]"
    }, {
      "left" : "return Collections.EMPTY_SET;",
      "right" : "return Collections.EMPTY_SET;",
      "info" : "ReturnStatement[7180-7209]:ReturnStatement[7370-7399]"
    }, {
      "left" : "return Collections.unmodifiableSet(properties.keySet());",
      "right" : "return Collections.unmodifiableSet(properties.keySet());",
      "info" : "ReturnStatement[7228-7284]:ReturnStatement[7418-7474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7323-7382]:Block[7513-7572]"
    }, {
      "left" : "return getProperties(new PropertyOption());",
      "right" : "return getProperties(new PropertyOption());",
      "info" : "ReturnStatement[7333-7376]:ReturnStatement[7523-7566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7441-7693]:Block[7631-7883]"
    }, {
      "left" : "for (final Iterator i = prefixes.iterator(); i.hasNext())",
      "right" : "for (final Iterator i = prefixes.iterator(); i.hasNext())",
      "info" : "ForStatement[7451-7664]:ForStatement[7641-7854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7510-7664]:Block[7700-7854]"
    }, {
      "left" : "final String prefix = (String) i.next();",
      "right" : "final String prefix = (String) i.next();",
      "info" : "VariableDeclarationStatement[7524-7564]:VariableDeclarationStatement[7714-7754]"
    }, {
      "left" : "if (trigger.startsWith(prefix))",
      "right" : "if (trigger.startsWith(prefix))",
      "info" : "IfStatement[7578-7654]:IfStatement[7768-7844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7610-7654]:Block[7800-7844]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[7628-7640]:ReturnStatement[7818-7830]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7674-7687]:ReturnStatement[7864-7877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7724-8247]:Block[7914-8437]"
    }, {
      "left" : "final StringBuffer buffer = new StringBuffer();",
      "right" : "final StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[7734-7781]:VariableDeclarationStatement[7924-7971]"
    }, {
      "left" : "for (final Iterator i = normalised.iterator(); i.hasNext())",
      "right" : "for (final Iterator i = normalised.iterator(); i.hasNext())",
      "info" : "ForStatement[7827-8206]:ForStatement[8017-8396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7888-8206]:Block[8078-8396]"
    }, {
      "left" : "final String arg = (String) i.next();",
      "right" : "final String arg = (String) i.next();",
      "info" : "VariableDeclarationStatement[7902-7939]:VariableDeclarationStatement[8092-8129]"
    }, {
      "left" : "if (arg.indexOf(' ') >= 0)",
      "right" : "if (arg.indexOf(' ') >= 0)",
      "info" : "IfStatement[7953-8114]:IfStatement[8143-8304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7980-8057]:Block[8170-8247]"
    }, {
      "left" : "buffer.append(\"\\\"\").append(arg).append(\"\\\"\");",
      "right" : "buffer.append(\"\\\"\").append(arg).append(\"\\\"\");",
      "info" : "ExpressionStatement[7998-8043]:ExpressionStatement[8188-8233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8063-8114]:Block[8253-8304]"
    }, {
      "left" : "buffer.append(arg);",
      "right" : "buffer.append(arg);",
      "info" : "ExpressionStatement[8081-8100]:ExpressionStatement[8271-8290]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[8128-8196]:IfStatement[8318-8386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8145-8196]:Block[8335-8386]"
    }, {
      "left" : "buffer.append(' ');",
      "right" : "buffer.append(' ');",
      "info" : "ExpressionStatement[8163-8182]:ExpressionStatement[8353-8372]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[8216-8241]:ReturnStatement[8406-8431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8278-8339]:Block[8468-8529]"
    }, {
      "left" : "return Collections.unmodifiableList(options);",
      "right" : "return Collections.unmodifiableList(options);",
      "info" : "ReturnStatement[8288-8333]:ReturnStatement[8478-8523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8376-8450]:Block[8566-8640]"
    }, {
      "left" : "return Collections.unmodifiableSet(nameToOption.keySet());",
      "right" : "return Collections.unmodifiableSet(nameToOption.keySet());",
      "info" : "ReturnStatement[8386-8444]:ReturnStatement[8576-8634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8560-8717]:Block[8750-8907]"
    }, {
      "left" : "if (defaults == null)",
      "right" : "if (defaults == null)",
      "info" : "IfStatement[8570-8711]:IfStatement[8760-8901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8592-8645]:Block[8782-8835]"
    }, {
      "left" : "defaultValues.remove(option);",
      "right" : "defaultValues.remove(option);",
      "info" : "ExpressionStatement[8606-8635]:ExpressionStatement[8796-8825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8651-8711]:Block[8841-8901]"
    }, {
      "left" : "defaultValues.put(option, defaults);",
      "right" : "defaultValues.put(option, defaults);",
      "info" : "ExpressionStatement[8665-8701]:ExpressionStatement[8855-8891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8835-9006]:Block[9025-9196]"
    }, {
      "left" : "if (defaultSwitch == null)",
      "right" : "if (defaultSwitch == null)",
      "info" : "IfStatement[8845-9000]:IfStatement[9035-9190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8872-8927]:Block[9062-9117]"
    }, {
      "left" : "defaultSwitches.remove(option);",
      "right" : "defaultSwitches.remove(option);",
      "info" : "ExpressionStatement[8886-8917]:ExpressionStatement[9076-9107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8933-9000]:Block[9123-9190]"
    }, {
      "left" : "defaultSwitches.put(option, defaultSwitch);",
      "right" : "defaultSwitches.put(option, defaultSwitch);",
      "info" : "ExpressionStatement[8947-8990]:ExpressionStatement[9137-9180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9040-9104]:Block[9230-9294]"
    }, {
      "left" : "return Collections.unmodifiableList(normalised);",
      "right" : "return Collections.unmodifiableList(normalised);",
      "info" : "ReturnStatement[9050-9098]:ReturnStatement[9240-9288]"
    } ]
  },
  "interFileMappings" : { }
}