{
  "matchedElements" : [
 {
    "left" : "",
    "right" : "",
    "info" : "TypeDeclaration[1176-5763]:TypeDeclaration[1220-5847]"
  }, {
    "left" : "",
    "right" : "",
    "info" : "FieldDeclaration[1389-1476]:FieldDeclaration[1433-1520]"
  }, {
    "left" : "private final AtomicLong m_failedCount = new AtomicLong();",
    "right" : "private final AtomicLong m_failedCount = new AtomicLong();",
    "info" : "FieldDeclaration[1554-1612]:FieldDeclaration[1598-1656]"
  }, {
    "left" : "",
    "right" : "",
    "info" : "FieldDeclaration[1617-1682]:FieldDeclaration[1661-1726]"
  }, {
    "left" : "",
    "right" : "",
    "info" : "FieldDeclaration[1687-1741]:FieldDeclaration[1731-1785]"
  }, {
    "left" : "",
    "right" : "",
    "info" : "FieldDeclaration[1747-1862]:FieldDeclaration[1791-1906]"
  }, {
    "left" : "public adapter InternalClientResponseAdapter)",
    "right" : "public adapter InternalClientResponseAdapter)",
    "info" : "MethodDeclaration[1868-1976]:MethodDeclaration[1912-2020]"
  }, {
    "left" : "private BBContainer getBuffer(int sz) {\n        return DBBPool.allocateDirectAndPool(sz);\n    }",
    "right" : "private BBContainer getBuffer(int sz) {\n        return DBBPool.allocateDirectAndPool(sz);\n    }",
    "info" : "MethodDeclaration[2048-2143]:MethodDeclaration[2092-2187]"
  }, {
    "left" : "/**\n     * Returns true if a table with the given name exists in the server catalog.\n     */\n    public boolean hasTable(String name) {\n        Table table = VoltDB.instance().getCatalogContext().tables.get(name);\n        return (table!=null);\n    }",
    "right" : "/**\n     * Returns true if a table with the given name exists in the server catalog.\n     */\n    public boolean hasTable(String name) {\n        Table table = VoltDB.instance().getCatalogContext().tables.get(name);\n        return (table!=null);\n    }",
    "info" : "MethodDeclaration[2149-2398]:MethodDeclaration[2193-2442]"
  }, {
    "left" : "public backPressureTimeout long, proc String, fieldList Object...) : boolean",
    "right" : "public backPressureTimeout long, procCallback ProcedureCallback, proc String, fieldList Object...) : boolean",
    "info" : "MethodDeclaration[2476-5701]:MethodDeclaration[2520-5785]"
  }, {
    "left" : "public ) : void",
    "right" : "public ) : void",
    "info" : "MethodDeclaration[5707-5761]:MethodDeclaration[5791-5845]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1343-1349]:Modifier[1387-1393]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1868-1874]:Modifier[1912-1918]"
  }, {
    "left" : "InternalClientResponseAdapter adapter",
    "right" : "InternalClientResponseAdapter adapter",
    "info" : "SingleVariableDeclaration[1901-1938]:SingleVariableDeclaration[1945-1982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1940-1976]:Block[1984-2020]"
  }, {
    "left" : "m_adapter = adapter;",
    "right" : "m_adapter = adapter;",
    "info" : "ExpressionStatement[1950-1970]:ExpressionStatement[1994-2014]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[2048-2055]:Modifier[2092-2099]"
  }, {
    "left" : "BBContainer",
    "right" : "BBContainer",
    "info" : "SimpleType[2056-2067]:SimpleType[2100-2111]"
  }, {
    "left" : "int sz",
    "right" : "int sz",
    "info" : "SingleVariableDeclaration[2078-2084]:SingleVariableDeclaration[2122-2128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2086-2143]:Block[2130-2187]"
  }, {
    "left" : "return DBBPool.allocateDirectAndPool(sz);",
    "right" : "return DBBPool.allocateDirectAndPool(sz);",
    "info" : "ReturnStatement[2096-2137]:ReturnStatement[2140-2181]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2246-2252]:Modifier[2290-2296]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[2253-2260]:PrimitiveType[2297-2304]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[2270-2281]:SingleVariableDeclaration[2314-2325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2283-2398]:Block[2327-2442]"
  }, {
    "left" : "Table table = VoltDB.instance().getCatalogContext().tables.get(name);",
    "right" : "Table table = VoltDB.instance().getCatalogContext().tables.get(name);",
    "info" : "VariableDeclarationStatement[2293-2362]:VariableDeclarationStatement[2337-2406]"
  }, {
    "left" : "return (table!=null);",
    "right" : "return (table!=null);",
    "info" : "ReturnStatement[2371-2392]:ReturnStatement[2415-2436]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2476-2482]:Modifier[2520-2526]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[2483-2490]:PrimitiveType[2527-2534]"
  }, {
    "left" : "long backPressureTimeout",
    "right" : "long backPressureTimeout",
    "info" : "SingleVariableDeclaration[2505-2529]:SingleVariableDeclaration[2549-2573]"
  }, {
    "left" : "String proc",
    "right" : "String proc",
    "info" : "SingleVariableDeclaration[2531-2542]:SingleVariableDeclaration[2607-2618]"
  }, {
    "left" : "Object... fieldList",
    "right" : "Object... fieldList",
    "info" : "SingleVariableDeclaration[2544-2563]:SingleVariableDeclaration[2620-2639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2565-5701]:Block[2641-5785]"
  }, {
    "left" : "if (VoltDB.instance().getMode() == OperationMode.PAUSED)",
    "right" : "if (VoltDB.instance().getMode() == OperationMode.PAUSED)",
    "info" : "IfStatement[2650-2891]:IfStatement[2726-2967]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2707-2891]:Block[2783-2967]"
  }, {
    "left" : "m_logger.warn(\"Server is paused and is currently unavailable - please try again later.\");",
    "right" : "m_logger.warn(\"Server is paused and is currently unavailable - please try again later.\");",
    "info" : "ExpressionStatement[2721-2810]:ExpressionStatement[2797-2886]"
  }, {
    "left" : "m_failedCount.incrementAndGet();",
    "right" : "m_failedCount.incrementAndGet();",
    "info" : "ExpressionStatement[2823-2855]:ExpressionStatement[2899-2931]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[2868-2881]:ReturnStatement[2944-2957]"
  }, {
    "left" : "Procedure catProc = VoltDB.instance().getClientInterface().getProcedureFromName(proc, VoltDB.instance().getCatalogContext());",
    "right" : "Procedure catProc = VoltDB.instance().getClientInterface().getProcedureFromName(proc, VoltDB.instance().getCatalogContext());",
    "info" : "VariableDeclarationStatement[2900-3025]:VariableDeclarationStatement[2976-3101]"
  }, {
    "left" : "if (catProc == null)",
    "right" : "if (catProc == null)",
    "info" : "IfStatement[3034-3239]:IfStatement[3110-3315]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3055-3239]:Block[3131-3315]"
  }, {
    "left" : "m_logger.error(\"Can not invoke procedure from streaming interface procedure not found.\");",
    "right" : "m_logger.error(\"Can not invoke procedure from streaming interface procedure not found.\");",
    "info" : "ExpressionStatement[3069-3158]:ExpressionStatement[3145-3234]"
  }, {
    "left" : "m_failedCount.incrementAndGet();",
    "right" : "m_failedCount.incrementAndGet();",
    "info" : "ExpressionStatement[3171-3203]:ExpressionStatement[3247-3279]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[3216-3229]:ReturnStatement[3292-3305]"
  }, {
    "left" : "int counter = 1;",
    "right" : "int counter = 1;",
    "info" : "VariableDeclarationStatement[3249-3265]:VariableDeclarationStatement[3325-3341]"
  }, {
    "left" : "int maxSleepNano = 100000;",
    "right" : "int maxSleepNano = 100000;",
    "info" : "VariableDeclarationStatement[3274-3300]:VariableDeclarationStatement[3350-3376]"
  }, {
    "left" : "long start = System.nanoTime();",
    "right" : "long start = System.nanoTime();",
    "info" : "VariableDeclarationStatement[3309-3340]:VariableDeclarationStatement[3385-3416]"
  }, {
    "left" : "long currNanos = start;",
    "right" : "long currNanos = start;",
    "info" : "VariableDeclarationStatement[3349-3372]:VariableDeclarationStatement[3425-3448]"
  }, {
    "left" : "while ((backPressureTimeout > 0) && (m_adapter.getPendingCount() > MAX_PENDING_TRANSACTIONS))",
    "right" : "while ((backPressureTimeout > 0) && (m_adapter.getPendingCount() > MAX_PENDING_TRANSACTIONS))",
    "info" : "WhileStatement[3381-3978]:WhileStatement[3457-4054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3475-3978]:Block[3551-4054]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[3489-3968]:TryStatement[3565-4044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3493-3932]:Block[3569-4008]"
  }, {
    "left" : "int nanos = 500 * counter++;",
    "right" : "int nanos = 500 * counter++;",
    "info" : "VariableDeclarationStatement[3511-3539]:VariableDeclarationStatement[3587-3615]"
  }, {
    "left" : "int sleepNanos = nanos > maxSleepNano ? maxSleepNano : nanos;",
    "right" : "int sleepNanos = nanos > maxSleepNano ? maxSleepNano : nanos;",
    "info" : "VariableDeclarationStatement[3556-3617]:VariableDeclarationStatement[3632-3693]"
  }, {
    "left" : "Thread.sleep(0, sleepNanos);",
    "right" : "Thread.sleep(0, sleepNanos);",
    "info" : "ExpressionStatement[3634-3662]:ExpressionStatement[3710-3738]"
  }, {
    "left" : "currNanos += sleepNanos;",
    "right" : "currNanos += sleepNanos;",
    "info" : "ExpressionStatement[3779-3803]:ExpressionStatement[3855-3879]"
  }, {
    "left" : "if (currNanos > start + backPressureTimeout)",
    "right" : "if (currNanos > start + backPressureTimeout)",
    "info" : "IfStatement[3820-3918]:IfStatement[3896-3994]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3865-3918]:Block[3941-3994]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[3887-3900]:ReturnStatement[3963-3976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3965-3968]:Block[4041-4044]"
  }, {
    "left" : "final long nowNanos = System.nanoTime();",
    "right" : "final long nowNanos = System.nanoTime();",
    "info" : "VariableDeclarationStatement[3987-4027]:VariableDeclarationStatement[4063-4103]"
  }, {
    "left" : "StoredProcedureInvocation task = new StoredProcedureInvocation();",
    "right" : "StoredProcedureInvocation task = new StoredProcedureInvocation();",
    "info" : "VariableDeclarationStatement[4036-4101]:VariableDeclarationStatement[4112-4177]"
  }, {
    "left" : "ParameterSet pset = ParameterSet.fromArrayWithCopy(fieldList);",
    "right" : "ParameterSet pset = ParameterSet.fromArrayWithCopy(fieldList);",
    "info" : "VariableDeclarationStatement[4110-4172]:VariableDeclarationStatement[4186-4248]"
  }, {
    "left" : "int sz = 1 + 4 + proc.length() + 8 + pset.getSerializedSize();",
    "right" : "int sz = 1 + 4 + proc.length() + 8 + pset.getSerializedSize();",
    "info" : "VariableDeclarationStatement[4250-4312]:VariableDeclarationStatement[4326-4388]"
  }, {
    "left" : "final BBContainer tcont = getBuffer(sz);",
    "right" : "final BBContainer tcont = getBuffer(sz);",
    "info" : "VariableDeclarationStatement[4379-4419]:VariableDeclarationStatement[4455-4495]"
  }, {
    "left" : "final ByteBuffer taskbuf = tcont.b();",
    "right" : "final ByteBuffer taskbuf = tcont.b();",
    "info" : "VariableDeclarationStatement[4428-4465]:VariableDeclarationStatement[4504-4541]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[4474-5033]:TryStatement[4550-5109]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4478-4812]:Block[4554-4888]"
  }, {
    "left" : "taskbuf.put(ProcedureInvocationType.ORIGINAL.getValue());",
    "right" : "taskbuf.put(ProcedureInvocationType.ORIGINAL.getValue());",
    "info" : "ExpressionStatement[4492-4549]:ExpressionStatement[4568-4625]"
  }, {
    "left" : "taskbuf.putInt(proc.length());",
    "right" : "taskbuf.putInt(proc.length());",
    "info" : "ExpressionStatement[4562-4592]:ExpressionStatement[4638-4668]"
  }, {
    "left" : "taskbuf.put(proc.getBytes());",
    "right" : "taskbuf.put(proc.getBytes());",
    "info" : "ExpressionStatement[4605-4634]:ExpressionStatement[4681-4710]"
  }, {
    "left" : "taskbuf.putLong(m_adapter.connectionId());",
    "right" : "taskbuf.putLong(m_adapter.connectionId());",
    "info" : "ExpressionStatement[4647-4689]:ExpressionStatement[4723-4765]"
  }, {
    "left" : "pset.flattenToBuffer(taskbuf);",
    "right" : "pset.flattenToBuffer(taskbuf);",
    "info" : "ExpressionStatement[4702-4732]:ExpressionStatement[4778-4808]"
  }, {
    "left" : "taskbuf.flip();",
    "right" : "taskbuf.flip();",
    "info" : "ExpressionStatement[4745-4760]:ExpressionStatement[4821-4836]"
  }, {
    "left" : "task.initFromBuffer(taskbuf);",
    "right" : "task.initFromBuffer(taskbuf);",
    "info" : "ExpressionStatement[4773-4802]:ExpressionStatement[4849-4878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4836-5033]:Block[4912-5109]"
  }, {
    "left" : "m_failedCount.incrementAndGet();",
    "right" : "m_failedCount.incrementAndGet();",
    "info" : "ExpressionStatement[4850-4882]:ExpressionStatement[4926-4958]"
  }, {
    "left" : "m_logger.error(\"Failed to serialize parameters for stream: \" + proc, ex);",
    "right" : "m_logger.error(\"Failed to serialize parameters for stream: \" + proc, ex);",
    "info" : "ExpressionStatement[4895-4968]:ExpressionStatement[4971-5044]"
  }, {
    "left" : "tcont.discard();",
    "right" : "tcont.discard();",
    "info" : "ExpressionStatement[4981-4997]:ExpressionStatement[5057-5073]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[5010-5023]:ReturnStatement[5086-5099]"
  }, {
    "left" : "int partition = -1;",
    "right" : "int partition = -1;",
    "info" : "VariableDeclarationStatement[5043-5062]:VariableDeclarationStatement[5119-5138]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[5071-5388]:TryStatement[5147-5464]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5075-5151]:Block[5151-5227]"
  }, {
    "left" : "partition = getPartitionForProcedure(catProc, task);",
    "right" : "partition = getPartitionForProcedure(catProc, task);",
    "info" : "ExpressionStatement[5089-5141]:ExpressionStatement[5165-5217]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5172-5388]:Block[5248-5464]"
  }, {
    "left" : "m_logger.error(\"Can not invoke SP procedure from streaming interface partition not found.\");",
    "right" : "m_logger.error(\"Can not invoke SP procedure from streaming interface partition not found.\");",
    "info" : "ExpressionStatement[5186-5278]:ExpressionStatement[5262-5354]"
  }, {
    "left" : "m_failedCount.incrementAndGet();",
    "right" : "m_failedCount.incrementAndGet();",
    "info" : "ExpressionStatement[5291-5323]:ExpressionStatement[5367-5399]"
  }, {
    "left" : "tcont.discard();",
    "right" : "tcont.discard();",
    "info" : "ExpressionStatement[5336-5352]:ExpressionStatement[5412-5428]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[5365-5378]:ReturnStatement[5441-5454]"
  }, {
    "left" : "boolean success = m_adapter.createTransaction(catProc, null, task, tcont, partition, nowNanos);",
    "right" : "boolean success = m_adapter.createTransaction(catProc, procCallback, task, tcont, partition, nowNanos);",
    "info" : "VariableDeclarationStatement[5398-5493]:VariableDeclarationStatement[5474-5577]"
  }, {
    "left" : "if (!success)",
    "right" : "if (!success)",
    "info" : "IfStatement[5502-5670]:IfStatement[5586-5754]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5516-5601]:Block[5600-5685]"
  }, {
    "left" : "tcont.discard();",
    "right" : "tcont.discard();",
    "info" : "ExpressionStatement[5530-5546]:ExpressionStatement[5614-5630]"
  }, {
    "left" : "m_failedCount.incrementAndGet();",
    "right" : "m_failedCount.incrementAndGet();",
    "info" : "ExpressionStatement[5559-5591]:ExpressionStatement[5643-5675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5607-5670]:Block[5691-5754]"
  }, {
    "left" : "m_submitSuccessCount.incrementAndGet();",
    "right" : "m_submitSuccessCount.incrementAndGet();",
    "info" : "ExpressionStatement[5621-5660]:ExpressionStatement[5705-5744]"
  }, {
    "left" : "return success;",
    "right" : "return success;",
    "info" : "ReturnStatement[5680-5695]:ReturnStatement[5764-5779]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5707-5713]:Modifier[5791-5797]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5714-5718]:PrimitiveType[5798-5802]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5727-5761]:Block[5811-5845]"
  }, {
    "left" : "m_adapter.drain();",
    "right" : "m_adapter.drain();",
    "info" : "ExpressionStatement[5737-5755]:ExpressionStatement[5821-5839]"
  } ]
}