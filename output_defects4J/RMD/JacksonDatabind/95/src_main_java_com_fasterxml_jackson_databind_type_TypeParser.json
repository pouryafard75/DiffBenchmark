{
  "matchedElements" : [
 {
    "left" : "class : TypeParser",
    "right" : "class : TypeParser",
    "info" : "TypeDeclaration[116-4389]:TypeDeclaration[116-4413]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[316-364]:FieldDeclaration[316-364]"
  }, {
    "left" : "_factory",
    "right" : "_factory",
    "info" : "FieldDeclaration[370-407]:FieldDeclaration[370-407]"
  }, {
    "left" : "public TypeParser(f )",
    "right" : "public TypeParser(f )",
    "info" : "MethodDeclaration[421-483]:MethodDeclaration[421-483]"
  }, {
    "left" : "public withFactory(f ) : ",
    "right" : "public withFactory(f ) : ",
    "info" : "MethodDeclaration[489-636]:MethodDeclaration[489-636]"
  }, {
    "left" : "public parse(canonical ) : ",
    "right" : "public parse(canonical ) : ",
    "info" : "MethodDeclaration[642-1006]:MethodDeclaration[642-1006]"
  }, {
    "left" : "protected parseType(tokens ) : ",
    "right" : "protected parseType(tokens ) : ",
    "info" : "MethodDeclaration[1012-1851]:MethodDeclaration[1012-1875]"
  }, {
    "left" : "protected parseTypes(tokens ) : ",
    "right" : "protected parseTypes(tokens ) : ",
    "info" : "MethodDeclaration[1857-2470]:MethodDeclaration[1881-2494]"
  }, {
    "left" : "protected findClass(className , tokens ...) : ",
    "right" : "protected findClass(className , tokens ...) : ",
    "info" : "MethodDeclaration[2476-2869]:MethodDeclaration[2500-2893]"
  }, {
    "left" : "protected _problem(tokens , msg ) : ",
    "right" : "protected _problem(tokens , msg ) : ",
    "info" : "MethodDeclaration[2875-3144]:MethodDeclaration[2899-3168]"
  }, {
    "left" : "class : MyTokenizer",
    "right" : "class : MyTokenizer",
    "info" : "TypeDeclaration[3150-4387]:TypeDeclaration[3174-4411]"
  }, {
    "left" : "_input",
    "right" : "_input",
    "info" : "FieldDeclaration[3219-3249]:FieldDeclaration[3243-3273]"
  }, {
    "left" : "_index",
    "right" : "_index",
    "info" : "FieldDeclaration[3259-3280]:FieldDeclaration[3283-3304]"
  }, {
    "left" : "_pushbackToken",
    "right" : "_pushbackToken",
    "info" : "FieldDeclaration[3290-3322]:FieldDeclaration[3314-3346]"
  }, {
    "left" : "public MyTokenizer(str )",
    "right" : "public MyTokenizer(str )",
    "info" : "MethodDeclaration[3332-3449]:MethodDeclaration[3356-3473]"
  }, {
    "left" : "public hasMoreTokens() : boolean",
    "right" : "public hasMoreTokens() : boolean",
    "info" : "MethodDeclaration[3459-3589]:MethodDeclaration[3483-3613]"
  }, {
    "left" : "public nextToken() : ",
    "right" : "public nextToken() : ",
    "info" : "MethodDeclaration[3607-3993]:MethodDeclaration[3631-4017]"
  }, {
    "left" : "public pushBack(token ) : void",
    "right" : "public pushBack(token ) : void",
    "info" : "MethodDeclaration[4003-4167]:MethodDeclaration[4027-4191]"
  }, {
    "left" : "public getAllInput() : ",
    "right" : "public getAllInput() : ",
    "info" : "MethodDeclaration[4177-4223]:MethodDeclaration[4201-4247]"
  }, {
    "left" : "public getRemainingInput() : ",
    "right" : "public getRemainingInput() : ",
    "info" : "MethodDeclaration[4311-4381]:MethodDeclaration[4335-4405]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[250-256]:Modifier[250-256]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[257-262]:TYPE_DECLARATION_KIND[257-262]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[421-427]:Modifier[421-427]"
  }, {
    "left" : "TypeParser",
    "right" : "TypeParser",
    "info" : "SimpleName[428-438]:SimpleName[428-438]"
  }, {
    "left" : "TypeFactory f",
    "right" : "TypeFactory f",
    "info" : "SingleVariableDeclaration[439-452]:SingleVariableDeclaration[439-452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[454-483]:Block[454-483]"
  }, {
    "left" : "_factory = f;",
    "right" : "_factory = f;",
    "info" : "ExpressionStatement[464-477]:ExpressionStatement[464-477]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[525-531]:Modifier[525-531]"
  }, {
    "left" : "TypeParser",
    "right" : "TypeParser",
    "info" : "SimpleType[532-542]:SimpleType[532-542]"
  }, {
    "left" : "withFactory",
    "right" : "withFactory",
    "info" : "SimpleName[543-554]:SimpleName[543-554]"
  }, {
    "left" : "TypeFactory f",
    "right" : "TypeFactory f",
    "info" : "SingleVariableDeclaration[555-568]:SingleVariableDeclaration[555-568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[570-636]:Block[570-636]"
  }, {
    "left" : "return (f == _factory) ? this : new TypeParser(f);",
    "right" : "return (f == _factory) ? this : new TypeParser(f);",
    "info" : "ReturnStatement[580-630]:ReturnStatement[580-630]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[642-648]:Modifier[642-648]"
  }, {
    "left" : "JavaType",
    "right" : "JavaType",
    "info" : "SimpleType[649-657]:SimpleType[649-657]"
  }, {
    "left" : "parse",
    "right" : "parse",
    "info" : "SimpleName[658-663]:SimpleName[658-663]"
  }, {
    "left" : "String canonical",
    "right" : "String canonical",
    "info" : "SingleVariableDeclaration[664-680]:SingleVariableDeclaration[664-680]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[689-713]:SimpleType[689-713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[718-1006]:Block[718-1006]"
  }, {
    "left" : "MyTokenizer tokens = new MyTokenizer(canonical.trim());",
    "right" : "MyTokenizer tokens = new MyTokenizer(canonical.trim());",
    "info" : "VariableDeclarationStatement[728-783]:VariableDeclarationStatement[728-783]"
  }, {
    "left" : "JavaType type = parseType(tokens);",
    "right" : "JavaType type = parseType(tokens);",
    "info" : "VariableDeclarationStatement[792-826]:VariableDeclarationStatement[792-826]"
  }, {
    "left" : "if (tokens.hasMoreTokens())",
    "right" : "if (tokens.hasMoreTokens())",
    "info" : "IfStatement[863-979]:IfStatement[863-979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[891-979]:Block[891-979]"
  }, {
    "left" : "throw _problem(tokens, \"Unexpected tokens after complete type\");",
    "right" : "throw _problem(tokens, \"Unexpected tokens after complete type\");",
    "info" : "ThrowStatement[905-969]:ThrowStatement[905-969]"
  }, {
    "left" : "return type;",
    "right" : "return type;",
    "info" : "ReturnStatement[988-1000]:ReturnStatement[988-1000]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[1012-1021]:Modifier[1012-1021]"
  }, {
    "left" : "JavaType",
    "right" : "JavaType",
    "info" : "SimpleType[1022-1030]:SimpleType[1022-1030]"
  }, {
    "left" : "parseType",
    "right" : "parseType",
    "info" : "SimpleName[1031-1040]:SimpleName[1031-1040]"
  }, {
    "left" : "MyTokenizer tokens",
    "right" : "MyTokenizer tokens",
    "info" : "SingleVariableDeclaration[1041-1059]:SingleVariableDeclaration[1041-1059]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[1076-1100]:SimpleType[1076-1100]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1105-1851]:Block[1105-1875]"
  }, {
    "left" : "if (!tokens.hasMoreTokens())",
    "right" : "if (!tokens.hasMoreTokens())",
    "info" : "IfStatement[1115-1219]:IfStatement[1115-1219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1144-1219]:Block[1144-1219]"
  }, {
    "left" : "throw _problem(tokens, \"Unexpected end-of-string\");",
    "right" : "throw _problem(tokens, \"Unexpected end-of-string\");",
    "info" : "ThrowStatement[1158-1209]:ThrowStatement[1158-1209]"
  }, {
    "left" : "Class<?> base = findClass(tokens.nextToken(), tokens);",
    "right" : "Class<?> base = findClass(tokens.nextToken(), tokens);",
    "info" : "VariableDeclarationStatement[1228-1282]:VariableDeclarationStatement[1228-1282]"
  }, {
    "left" : "if (tokens.hasMoreTokens())",
    "right" : "if (tokens.hasMoreTokens())",
    "info" : "IfStatement[1350-1791]:IfStatement[1350-1791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1378-1791]:Block[1378-1791]"
  }, {
    "left" : "String token = tokens.nextToken();",
    "right" : "String token = tokens.nextToken();",
    "info" : "VariableDeclarationStatement[1392-1426]:VariableDeclarationStatement[1392-1426]"
  }, {
    "left" : "if (\"<\".equals(token))",
    "right" : "if (\"<\".equals(token))",
    "info" : "IfStatement[1439-1680]:IfStatement[1439-1680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1462-1680]:Block[1462-1680]"
  }, {
    "left" : "List<JavaType> parameterTypes = parseTypes(tokens);",
    "right" : "List<JavaType> parameterTypes = parseTypes(tokens);",
    "info" : "VariableDeclarationStatement[1480-1531]:VariableDeclarationStatement[1480-1531]"
  }, {
    "left" : "TypeBindings b = TypeBindings.create(base, parameterTypes);",
    "right" : "TypeBindings b = TypeBindings.create(base, parameterTypes);",
    "info" : "VariableDeclarationStatement[1548-1607]:VariableDeclarationStatement[1548-1607]"
  }, {
    "left" : "return _factory._fromClass(null, base, b);",
    "right" : "return _factory._fromClass(null, base, b);",
    "info" : "ReturnStatement[1624-1666]:ReturnStatement[1624-1666]"
  }, {
    "left" : "tokens.pushBack(token);",
    "right" : "tokens.pushBack(token);",
    "info" : "ExpressionStatement[1758-1781]:ExpressionStatement[1758-1781]"
  }, {
    "left" : "return _factory._fromClass(null, base, null);",
    "right" : "return _factory._fromClass(null, base, TypeBindings.emptyBindings());",
    "info" : "ReturnStatement[1800-1845]:ReturnStatement[1800-1869]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[1857-1866]:Modifier[1881-1890]"
  }, {
    "left" : "List<JavaType>",
    "right" : "List<JavaType>",
    "info" : "ParameterizedType[1867-1881]:ParameterizedType[1891-1905]"
  }, {
    "left" : "parseTypes",
    "right" : "parseTypes",
    "info" : "SimpleName[1882-1892]:SimpleName[1906-1916]"
  }, {
    "left" : "MyTokenizer tokens",
    "right" : "MyTokenizer tokens",
    "info" : "SingleVariableDeclaration[1893-1911]:SingleVariableDeclaration[1917-1935]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[1928-1952]:SimpleType[1952-1976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1957-2470]:Block[1981-2494]"
  }, {
    "left" : "ArrayList<JavaType> types = new ArrayList<JavaType>();",
    "right" : "ArrayList<JavaType> types = new ArrayList<JavaType>();",
    "info" : "VariableDeclarationStatement[1967-2021]:VariableDeclarationStatement[1991-2045]"
  }, {
    "left" : "while (tokens.hasMoreTokens())",
    "right" : "while (tokens.hasMoreTokens())",
    "info" : "WhileStatement[2030-2404]:WhileStatement[2054-2428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2061-2404]:Block[2085-2428]"
  }, {
    "left" : "types.add(parseType(tokens));",
    "right" : "types.add(parseType(tokens));",
    "info" : "ExpressionStatement[2075-2104]:ExpressionStatement[2099-2128]"
  }, {
    "left" : "if (!tokens.hasMoreTokens())",
    "right" : "if (!tokens.hasMoreTokens())",
    "info" : "IfStatement[2117-2152]:IfStatement[2141-2176]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[2146-2152]:BreakStatement[2170-2176]"
  }, {
    "left" : "String token = tokens.nextToken();",
    "right" : "String token = tokens.nextToken();",
    "info" : "VariableDeclarationStatement[2165-2199]:VariableDeclarationStatement[2189-2223]"
  }, {
    "left" : "if (\">\".equals(token))",
    "right" : "if (\">\".equals(token))",
    "info" : "IfStatement[2212-2248]:IfStatement[2236-2272]"
  }, {
    "left" : "return types;",
    "right" : "return types;",
    "info" : "ReturnStatement[2235-2248]:ReturnStatement[2259-2272]"
  }, {
    "left" : "if (!\",\".equals(token))",
    "right" : "if (!\",\".equals(token))",
    "info" : "IfStatement[2261-2394]:IfStatement[2285-2418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2285-2394]:Block[2309-2418]"
  }, {
    "left" : "throw _problem(tokens, \"Unexpected token '\"+token+\"', expected ',' or '>')\");",
    "right" : "throw _problem(tokens, \"Unexpected token '\"+token+\"', expected ',' or '>')\");",
    "info" : "ThrowStatement[2303-2380]:ThrowStatement[2327-2404]"
  }, {
    "left" : "throw _problem(tokens, \"Unexpected end-of-string\");",
    "right" : "throw _problem(tokens, \"Unexpected end-of-string\");",
    "info" : "ThrowStatement[2413-2464]:ThrowStatement[2437-2488]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[2476-2485]:Modifier[2500-2509]"
  }, {
    "left" : "Class<?>",
    "right" : "Class<?>",
    "info" : "ParameterizedType[2486-2494]:ParameterizedType[2510-2518]"
  }, {
    "left" : "findClass",
    "right" : "findClass",
    "info" : "SimpleName[2495-2504]:SimpleName[2519-2528]"
  }, {
    "left" : "String className",
    "right" : "String className",
    "info" : "SingleVariableDeclaration[2505-2521]:SingleVariableDeclaration[2529-2545]"
  }, {
    "left" : "MyTokenizer tokens",
    "right" : "MyTokenizer tokens",
    "info" : "SingleVariableDeclaration[2523-2541]:SingleVariableDeclaration[2547-2565]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2547-2869]:Block[2571-2893]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[2557-2863]:TryStatement[2581-2887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2561-2622]:Block[2585-2646]"
  }, {
    "left" : "return _factory.findClass(className);",
    "right" : "return _factory.findClass(className);",
    "info" : "ReturnStatement[2575-2612]:ReturnStatement[2599-2636]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2643-2863]:Block[2667-2887]"
  }, {
    "left" : "if (e instanceof RuntimeException)",
    "right" : "if (e instanceof RuntimeException)",
    "info" : "IfStatement[2657-2751]:IfStatement[2681-2775]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2692-2751]:Block[2716-2775]"
  }, {
    "left" : "throw (RuntimeException) e;",
    "right" : "throw (RuntimeException) e;",
    "info" : "ThrowStatement[2710-2737]:ThrowStatement[2734-2761]"
  }, {
    "left" : "throw _problem(tokens, \"Can not locate class '\"+className+\"', problem: \"+e.getMessage());",
    "right" : "throw _problem(tokens, \"Can not locate class '\"+className+\"', problem: \"+e.getMessage());",
    "info" : "ThrowStatement[2764-2853]:ThrowStatement[2788-2877]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[2875-2884]:Modifier[2899-2908]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[2885-2909]:SimpleType[2909-2933]"
  }, {
    "left" : "_problem",
    "right" : "_problem",
    "info" : "SimpleName[2910-2918]:SimpleName[2934-2942]"
  }, {
    "left" : "MyTokenizer tokens",
    "right" : "MyTokenizer tokens",
    "info" : "SingleVariableDeclaration[2919-2937]:SingleVariableDeclaration[2943-2961]"
  }, {
    "left" : "String msg",
    "right" : "String msg",
    "info" : "SingleVariableDeclaration[2939-2949]:SingleVariableDeclaration[2963-2973]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2955-3144]:Block[2979-3168]"
  }, {
    "left" : "return new IllegalArgumentException(String.format(\"Failed to parse type '%s' (remaining: '%s'): %s\",\n                tokens.getAllInput(), tokens.getRemainingInput(), msg));",
    "right" : "return new IllegalArgumentException(String.format(\"Failed to parse type '%s' (remaining: '%s'): %s\",\n                tokens.getAllInput(), tokens.getRemainingInput(), msg));",
    "info" : "ReturnStatement[2965-3138]:ReturnStatement[2989-3162]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[3150-3155]:Modifier[3174-3179]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3156-3162]:Modifier[3180-3186]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3163-3168]:TYPE_DECLARATION_KIND[3187-3192]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3332-3338]:Modifier[3356-3362]"
  }, {
    "left" : "MyTokenizer",
    "right" : "MyTokenizer",
    "info" : "SimpleName[3339-3350]:SimpleName[3363-3374]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[3351-3361]:SingleVariableDeclaration[3375-3385]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3363-3449]:Block[3387-3473]"
  }, {
    "left" : "super(str, \"<,>\", true);",
    "right" : "super(str, \"<,>\", true);",
    "info" : "SuperConstructorInvocation[3389-3413]:SuperConstructorInvocation[3413-3437]"
  }, {
    "left" : "_input = str;",
    "right" : "_input = str;",
    "info" : "ExpressionStatement[3426-3439]:ExpressionStatement[3450-3463]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3459-3468]:MarkerAnnotation[3483-3492]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3477-3483]:Modifier[3501-3507]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3484-3491]:PrimitiveType[3508-3515]"
  }, {
    "left" : "hasMoreTokens",
    "right" : "hasMoreTokens",
    "info" : "SimpleName[3492-3505]:SimpleName[3516-3529]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3508-3589]:Block[3532-3613]"
  }, {
    "left" : "return (_pushbackToken != null) || super.hasMoreTokens();",
    "right" : "return (_pushbackToken != null) || super.hasMoreTokens();",
    "info" : "ReturnStatement[3522-3579]:ReturnStatement[3546-3603]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3607-3616]:MarkerAnnotation[3631-3640]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3625-3631]:Modifier[3649-3655]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3632-3638]:SimpleType[3656-3662]"
  }, {
    "left" : "nextToken",
    "right" : "nextToken",
    "info" : "SimpleName[3639-3648]:SimpleName[3663-3672]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3651-3993]:Block[3675-4017]"
  }, {
    "left" : "String token;",
    "right" : "String token;",
    "info" : "VariableDeclarationStatement[3665-3678]:VariableDeclarationStatement[3689-3702]"
  }, {
    "left" : "if (_pushbackToken != null)",
    "right" : "if (_pushbackToken != null)",
    "info" : "IfStatement[3691-3957]:IfStatement[3715-3981]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3719-3813]:Block[3743-3837]"
  }, {
    "left" : "token = _pushbackToken;",
    "right" : "token = _pushbackToken;",
    "info" : "ExpressionStatement[3737-3760]:ExpressionStatement[3761-3784]"
  }, {
    "left" : "_pushbackToken = null;",
    "right" : "_pushbackToken = null;",
    "info" : "ExpressionStatement[3777-3799]:ExpressionStatement[3801-3823]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3819-3957]:Block[3843-3981]"
  }, {
    "left" : "token = super.nextToken();",
    "right" : "token = super.nextToken();",
    "info" : "ExpressionStatement[3837-3863]:ExpressionStatement[3861-3887]"
  }, {
    "left" : "_index += token.length();",
    "right" : "_index += token.length();",
    "info" : "ExpressionStatement[3880-3905]:ExpressionStatement[3904-3929]"
  }, {
    "left" : "token = token.trim();",
    "right" : "token = token.trim();",
    "info" : "ExpressionStatement[3922-3943]:ExpressionStatement[3946-3967]"
  }, {
    "left" : "return token;",
    "right" : "return token;",
    "info" : "ReturnStatement[3970-3983]:ReturnStatement[3994-4007]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4003-4009]:Modifier[4027-4033]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4010-4014]:PrimitiveType[4034-4038]"
  }, {
    "left" : "pushBack",
    "right" : "pushBack",
    "info" : "SimpleName[4015-4023]:SimpleName[4039-4047]"
  }, {
    "left" : "String token",
    "right" : "String token",
    "info" : "SingleVariableDeclaration[4024-4036]:SingleVariableDeclaration[4048-4060]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4038-4167]:Block[4062-4191]"
  }, {
    "left" : "_pushbackToken = token;",
    "right" : "_pushbackToken = token;",
    "info" : "ExpressionStatement[4052-4075]:ExpressionStatement[4076-4099]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4177-4183]:Modifier[4201-4207]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4184-4190]:SimpleType[4208-4214]"
  }, {
    "left" : "getAllInput",
    "right" : "getAllInput",
    "info" : "SimpleName[4191-4202]:SimpleName[4215-4226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4205-4223]:Block[4229-4247]"
  }, {
    "left" : "return _input;",
    "right" : "return _input;",
    "info" : "ReturnStatement[4207-4221]:ReturnStatement[4231-4245]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4311-4317]:Modifier[4335-4341]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4318-4324]:SimpleType[4342-4348]"
  }, {
    "left" : "getRemainingInput",
    "right" : "getRemainingInput",
    "info" : "SimpleName[4325-4342]:SimpleName[4349-4366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4345-4381]:Block[4369-4405]"
  }, {
    "left" : "return _input.substring(_index);",
    "right" : "return _input.substring(_index);",
    "info" : "ReturnStatement[4347-4379]:ReturnStatement[4371-4403]"
  } ]
}