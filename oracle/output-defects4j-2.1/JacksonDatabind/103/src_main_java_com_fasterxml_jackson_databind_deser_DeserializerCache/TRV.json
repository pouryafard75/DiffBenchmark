{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[895-943]:FieldDeclaration[895-943]"
    }, {
      "left" : "final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _cachedDeserializers\n        = new ConcurrentHashMap<JavaType, JsonDeserializer<Object>>(64, 0.75f, 4);",
      "right" : "final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _cachedDeserializers\n        = new ConcurrentHashMap<JavaType, JsonDeserializer<Object>>(64, 0.75f, 4);",
      "info" : "FieldDeclaration[1108-1748]:FieldDeclaration[1108-1748]"
    }, {
      "left" : "final protected HashMap<JavaType, JsonDeserializer<Object>> _incompleteDeserializers\n        = new HashMap<JavaType, JsonDeserializer<Object>>(8);",
      "right" : "final protected HashMap<JavaType, JsonDeserializer<Object>> _incompleteDeserializers\n        = new HashMap<JavaType, JsonDeserializer<Object>>(8);",
      "info" : "FieldDeclaration[1754-2153]:FieldDeclaration[1754-2153]"
    }, {
      "left" : "public DeserializerCache()",
      "right" : "public DeserializerCache()",
      "info" : "MethodDeclaration[2321-2351]:MethodDeclaration[2321-2351]"
    }, {
      "left" : "Object writeReplace()",
      "right" : "Object writeReplace()",
      "info" : "MethodDeclaration[2535-2744]:MethodDeclaration[2535-2744]"
    }, {
      "left" : "public int cachedDeserializersCount()",
      "right" : "public int cachedDeserializersCount()",
      "info" : "MethodDeclaration[2931-3630]:MethodDeclaration[2931-3630]"
    }, {
      "left" : "public void flushCachedDeserializers()",
      "right" : "public void flushCachedDeserializers()",
      "info" : "MethodDeclaration[3636-4124]:MethodDeclaration[3636-4124]"
    }, {
      "left" : "public JsonDeserializer<Object> findValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType propertyType)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> findValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType propertyType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4318-6191]:MethodDeclaration[4318-6191]"
    }, {
      "left" : "public KeyDeserializer findKeyDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "public KeyDeserializer findKeyDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[6197-7079]:MethodDeclaration[6197-7079]"
    }, {
      "left" : "public boolean hasValueDeserializerFor(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "public boolean hasValueDeserializerFor(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7085-7815]:MethodDeclaration[7085-7815]"
    }, {
      "left" : "protected JsonDeserializer<Object> _findCachedDeserializer(JavaType type)",
      "right" : "protected JsonDeserializer<Object> _findCachedDeserializer(JavaType type)",
      "info" : "MethodDeclaration[8013-8330]:MethodDeclaration[8013-8330]"
    }, {
      "left" : "protected JsonDeserializer<Object> _createAndCacheValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _createAndCacheValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8336-10009]:MethodDeclaration[8336-10009]"
    }, {
      "left" : "protected JsonDeserializer<Object> _createDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _createDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12283-14661]:MethodDeclaration[12298-14676]"
    }, {
      "left" : "protected JsonDeserializer<?> _createDeserializer2(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _createDeserializer2(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[14667-17475]:MethodDeclaration[14682-17490]"
    }, {
      "left" : "protected JsonDeserializer<Object> findDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> findDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[17481-18210]:MethodDeclaration[17496-18225]"
    }, {
      "left" : "protected JsonDeserializer<Object> findConvertingDeserializer(DeserializationContext ctxt,\n            Annotated a, JsonDeserializer<Object> deser)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> findConvertingDeserializer(DeserializationContext ctxt,\n            Annotated a, JsonDeserializer<Object> deser)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[18216-19043]:MethodDeclaration[18231-19058]"
    }, {
      "left" : "protected Converter<Object,Object> findConverter(DeserializationContext ctxt,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected Converter<Object,Object> findConverter(DeserializationContext ctxt,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[19049-19407]:MethodDeclaration[19064-19422]"
    }, {
      "left" : "private JavaType modifyTypeByAnnotation(DeserializationContext ctxt,\n            Annotated a, JavaType type)\n        throws JsonMappingException",
      "right" : "private JavaType modifyTypeByAnnotation(DeserializationContext ctxt,\n            Annotated a, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[19416-22718]:MethodDeclaration[19431-22733]"
    }, {
      "left" : "private boolean _hasCustomHandlers(JavaType t)",
      "right" : "private boolean _hasCustomHandlers(JavaType t)",
      "info" : "MethodDeclaration[22897-23794]:MethodDeclaration[22912-23809]"
    }, {
      "left" : "private Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "right" : "private Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "info" : "MethodDeclaration[23800-24365]:MethodDeclaration[23815-24380]"
    }, {
      "left" : "protected JsonDeserializer<Object> _handleUnknownValueDeserializer(DeserializationContext ctxt, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _handleUnknownValueDeserializer(DeserializationContext ctxt, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[24558-25107]:MethodDeclaration[24573-25122]"
    }, {
      "left" : "protected KeyDeserializer _handleUnknownKeyDeserializer(DeserializationContext ctxt, JavaType type)\n        throws JsonMappingException",
      "right" : "protected KeyDeserializer _handleUnknownKeyDeserializer(DeserializationContext ctxt, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[25113-25362]:MethodDeclaration[25128-25377]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2348-2351]:Block[2348-2351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2557-2744]:Block[2557-2744]"
    }, {
      "left" : "_incompleteDeserializers.clear();",
      "right" : "_incompleteDeserializers.clear();",
      "info" : "ExpressionStatement[2627-2660]:ExpressionStatement[2627-2660]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2726-2738]:ReturnStatement[2726-2738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3579-3630]:Block[3579-3630]"
    }, {
      "left" : "return _cachedDeserializers.size();",
      "right" : "return _cachedDeserializers.size();",
      "info" : "ReturnStatement[3589-3624]:ReturnStatement[3589-3624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4072-4124]:Block[4072-4124]"
    }, {
      "left" : "_cachedDeserializers.clear();",
      "right" : "_cachedDeserializers.clear();",
      "info" : "ExpressionStatement[4082-4111]:ExpressionStatement[4082-4111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5561-6191]:Block[5561-6191]"
    }, {
      "left" : "JsonDeserializer<Object> deser = _findCachedDeserializer(propertyType);",
      "right" : "JsonDeserializer<Object> deser = _findCachedDeserializer(propertyType);",
      "info" : "VariableDeclarationStatement[5571-5642]:VariableDeclarationStatement[5571-5642]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[5651-6163]:IfStatement[5651-6163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5670-6163]:Block[5670-6163]"
    }, {
      "left" : "deser = _createAndCacheValueDeserializer(ctxt, factory, propertyType);",
      "right" : "deser = _createAndCacheValueDeserializer(ctxt, factory, propertyType);",
      "info" : "ExpressionStatement[5757-5827]:ExpressionStatement[5757-5827]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[5840-6153]:IfStatement[5840-6153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5859-6153]:Block[5859-6153]"
    }, {
      "left" : "deser = _handleUnknownValueDeserializer(ctxt, propertyType);",
      "right" : "deser = _handleUnknownValueDeserializer(ctxt, propertyType);",
      "info" : "ExpressionStatement[6079-6139]:ExpressionStatement[6079-6139]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[6172-6185]:ReturnStatement[6172-6185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6672-7079]:Block[6672-7079]"
    }, {
      "left" : "KeyDeserializer kd = factory.createKeyDeserializer(ctxt, type);",
      "right" : "KeyDeserializer kd = factory.createKeyDeserializer(ctxt, type);",
      "info" : "VariableDeclarationStatement[6682-6745]:VariableDeclarationStatement[6682-6745]"
    }, {
      "left" : "if (kd == null)",
      "right" : "if (kd == null)",
      "info" : "IfStatement[6754-6900]:IfStatement[6754-6900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6770-6900]:Block[6770-6900]"
    }, {
      "left" : "return _handleUnknownKeyDeserializer(ctxt, type);",
      "right" : "return _handleUnknownKeyDeserializer(ctxt, type);",
      "info" : "ReturnStatement[6841-6890]:ReturnStatement[6841-6890]"
    }, {
      "left" : "if (kd instanceof ResolvableDeserializer)",
      "right" : "if (kd instanceof ResolvableDeserializer)",
      "info" : "IfStatement[6944-7054]:IfStatement[6944-7054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6986-7054]:Block[6986-7054]"
    }, {
      "left" : "((ResolvableDeserializer) kd).resolve(ctxt);",
      "right" : "((ResolvableDeserializer) kd).resolve(ctxt);",
      "info" : "ExpressionStatement[7000-7044]:ExpressionStatement[7000-7044]"
    }, {
      "left" : "return kd;",
      "right" : "return kd;",
      "info" : "ReturnStatement[7063-7073]:ReturnStatement[7063-7073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7471-7815]:Block[7471-7815]"
    }, {
      "left" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "right" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "info" : "VariableDeclarationStatement[7600-7663]:VariableDeclarationStatement[7600-7663]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[7672-7777]:IfStatement[7672-7777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7691-7777]:Block[7691-7777]"
    }, {
      "left" : "deser = _createAndCacheValueDeserializer(ctxt, factory, type);",
      "right" : "deser = _createAndCacheValueDeserializer(ctxt, factory, type);",
      "info" : "ExpressionStatement[7705-7767]:ExpressionStatement[7705-7767]"
    }, {
      "left" : "return (deser != null);",
      "right" : "return (deser != null);",
      "info" : "ReturnStatement[7786-7809]:ReturnStatement[7786-7809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8091-8330]:Block[8091-8330]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[8101-8202]:IfStatement[8101-8202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8119-8202]:Block[8119-8202]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null JavaType passed\");",
      "right" : "throw new IllegalArgumentException(\"Null JavaType passed\");",
      "info" : "ThrowStatement[8133-8192]:ThrowStatement[8133-8192]"
    }, {
      "left" : "if (_hasCustomHandlers(type))",
      "right" : "if (_hasCustomHandlers(type))",
      "info" : "IfStatement[8211-8277]:IfStatement[8211-8277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8241-8277]:Block[8241-8277]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8255-8267]:ReturnStatement[8255-8267]"
    }, {
      "left" : "return _cachedDeserializers.get(type);",
      "right" : "return _cachedDeserializers.get(type);",
      "info" : "ReturnStatement[8286-8324]:ReturnStatement[8286-8324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8778-10009]:Block[8778-10009]"
    }, {
      "left" : "synchronized (_incompleteDeserializers) {\n            // Ok, then: could it be that due to a race condition, deserializer can now be found?\n            JsonDeserializer<Object> deser = _findCachedDeserializer(type);\n            if (deser != null) {\n                return deser;\n            }\n            int count = _incompleteDeserializers.size();\n            // Or perhaps being resolved right now?\n            if (count > 0) {\n                deser = _incompleteDeserializers.get(type);\n                if (deser != null) {\n                    return deser;\n                }\n            }\n            // Nope: need to create and possibly cache\n            try {\n                return _createAndCache2(ctxt, factory, type);\n            } finally {\n                // also: any deserializers that have been created are complete by now\n                if (count == 0 && _incompleteDeserializers.size() > 0) {\n                    _incompleteDeserializers.clear();\n                }\n            }\n        }",
      "right" : "synchronized (_incompleteDeserializers) {\n            // Ok, then: could it be that due to a race condition, deserializer can now be found?\n            JsonDeserializer<Object> deser = _findCachedDeserializer(type);\n            if (deser != null) {\n                return deser;\n            }\n            int count = _incompleteDeserializers.size();\n            // Or perhaps being resolved right now?\n            if (count > 0) {\n                deser = _incompleteDeserializers.get(type);\n                if (deser != null) {\n                    return deser;\n                }\n            }\n            // Nope: need to create and possibly cache\n            try {\n                return _createAndCache2(ctxt, factory, type);\n            } finally {\n                // also: any deserializers that have been created are complete by now\n                if (count == 0 && _incompleteDeserializers.size() > 0) {\n                    _incompleteDeserializers.clear();\n                }\n            }\n        }",
      "info" : "SynchronizedStatement[8996-10003]:SynchronizedStatement[8996-10003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9036-10003]:Block[9036-10003]"
    }, {
      "left" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "right" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "info" : "VariableDeclarationStatement[9148-9211]:VariableDeclarationStatement[9148-9211]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[9224-9288]:IfStatement[9224-9288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9243-9288]:Block[9243-9288]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[9261-9274]:ReturnStatement[9261-9274]"
    }, {
      "left" : "int count = _incompleteDeserializers.size();",
      "right" : "int count = _incompleteDeserializers.size();",
      "info" : "VariableDeclarationStatement[9301-9345]:VariableDeclarationStatement[9301-9345]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[9410-9589]:IfStatement[9410-9589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9425-9589]:Block[9425-9589]"
    }, {
      "left" : "deser = _incompleteDeserializers.get(type);",
      "right" : "deser = _incompleteDeserializers.get(type);",
      "info" : "ExpressionStatement[9443-9486]:ExpressionStatement[9443-9486]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[9503-9575]:IfStatement[9503-9575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9522-9575]:Block[9522-9575]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[9544-9557]:ReturnStatement[9544-9557]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9657-9993]:TryStatement[9657-9993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9661-9738]:Block[9661-9738]"
    }, {
      "left" : "return _createAndCache2(ctxt, factory, type);",
      "right" : "return _createAndCache2(ctxt, factory, type);",
      "info" : "ReturnStatement[9679-9724]:ReturnStatement[9679-9724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9747-9993]:Block[9747-9993]"
    }, {
      "left" : "if (count == 0 && _incompleteDeserializers.size() > 0)",
      "right" : "if (count == 0 && _incompleteDeserializers.size() > 0)",
      "info" : "IfStatement[9851-9979]:IfStatement[9851-9979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9906-9979]:Block[9906-9979]"
    }, {
      "left" : "_incompleteDeserializers.clear();",
      "right" : "_incompleteDeserializers.clear();",
      "info" : "ExpressionStatement[9928-9961]:ExpressionStatement[9928-9961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12680-14661]:Block[12695-14676]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[12690-12744]:VariableDeclarationStatement[12705-12759]"
    }, {
      "left" : "if (type.isAbstract() || type.isMapLikeType() || type.isCollectionLikeType())",
      "right" : "if (type.isAbstract() || type.isMapLikeType() || type.isCollectionLikeType())",
      "info" : "IfStatement[12826-12973]:IfStatement[12841-12988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12904-12973]:Block[12919-12988]"
    }, {
      "left" : "type = factory.mapAbstractType(config, type);",
      "right" : "type = factory.mapAbstractType(config, type);",
      "info" : "ExpressionStatement[12918-12963]:ExpressionStatement[12933-12978]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspect(type);",
      "right" : "BeanDescription beanDesc = config.introspect(type);",
      "info" : "VariableDeclarationStatement[12982-13033]:VariableDeclarationStatement[12997-13048]"
    }, {
      "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt,\n                beanDesc.getClassInfo());",
      "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt,\n                beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[13126-13237]:VariableDeclarationStatement[13141-13252]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[13246-13302]:IfStatement[13261-13317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13265-13302]:Block[13280-13317]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[13279-13292]:ReturnStatement[13294-13307]"
    }, {
      "left" : "JavaType newType = modifyTypeByAnnotation(ctxt, beanDesc.getClassInfo(), type);",
      "right" : "JavaType newType = modifyTypeByAnnotation(ctxt, beanDesc.getClassInfo(), type);",
      "info" : "VariableDeclarationStatement[13388-13467]:VariableDeclarationStatement[13403-13482]"
    }, {
      "left" : "if (newType != type)",
      "right" : "if (newType != type)",
      "info" : "IfStatement[13476-13587]:IfStatement[13491-13602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13497-13587]:Block[13512-13602]"
    }, {
      "left" : "type = newType;",
      "right" : "type = newType;",
      "info" : "ExpressionStatement[13511-13526]:ExpressionStatement[13526-13541]"
    }, {
      "left" : "beanDesc = config.introspect(newType);",
      "right" : "beanDesc = config.introspect(newType);",
      "info" : "ExpressionStatement[13539-13577]:ExpressionStatement[13554-13592]"
    }, {
      "left" : "Class<?> builder = beanDesc.findPOJOBuilder();",
      "right" : "Class<?> builder = beanDesc.findPOJOBuilder();",
      "info" : "VariableDeclarationStatement[13655-13701]:VariableDeclarationStatement[13670-13716]"
    }, {
      "left" : "if (builder != null)",
      "right" : "if (builder != null)",
      "info" : "IfStatement[13710-13874]:IfStatement[13725-13889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13731-13874]:Block[13746-13889]"
    }, {
      "left" : "return (JsonDeserializer<Object>) factory.createBuilderBasedDeserializer(\n            \t\tctxt, type, beanDesc, builder);",
      "right" : "return (JsonDeserializer<Object>) factory.createBuilderBasedDeserializer(\n            \t\tctxt, type, beanDesc, builder);",
      "info" : "ReturnStatement[13745-13864]:ReturnStatement[13760-13879]"
    }, {
      "left" : "Converter<Object,Object> conv = beanDesc.findDeserializationConverter();",
      "right" : "Converter<Object,Object> conv = beanDesc.findDeserializationConverter();",
      "info" : "VariableDeclarationStatement[13919-13991]:VariableDeclarationStatement[13934-14006]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[14000-14166]:IfStatement[14015-14181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14018-14166]:Block[14033-14181]"
    }, {
      "left" : "return (JsonDeserializer<Object>) _createDeserializer2(ctxt, factory, type, beanDesc);",
      "right" : "return (JsonDeserializer<Object>) _createDeserializer2(ctxt, factory, type, beanDesc);",
      "info" : "ReturnStatement[14070-14156]:ReturnStatement[14085-14171]"
    }, {
      "left" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "info" : "VariableDeclarationStatement[14228-14293]:VariableDeclarationStatement[14243-14308]"
    }, {
      "left" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "right" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "info" : "IfStatement[14386-14504]:IfStatement[14401-14519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14437-14504]:Block[14452-14519]"
    }, {
      "left" : "beanDesc = config.introspect(delegateType);",
      "right" : "beanDesc = config.introspect(delegateType);",
      "info" : "ExpressionStatement[14451-14494]:ExpressionStatement[14466-14509]"
    }, {
      "left" : "return new StdDelegatingDeserializer<Object>(conv, delegateType,\n                _createDeserializer2(ctxt, factory, delegateType, beanDesc));",
      "right" : "return new StdDelegatingDeserializer<Object>(conv, delegateType,\n                _createDeserializer2(ctxt, factory, delegateType, beanDesc));",
      "info" : "ReturnStatement[14513-14655]:ReturnStatement[14528-14670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14869-17475]:Block[14884-17490]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[14879-14933]:VariableDeclarationStatement[14894-14948]"
    }, {
      "left" : "if (type.isEnumType())",
      "right" : "if (type.isEnumType())",
      "info" : "IfStatement[15000-15107]:IfStatement[15015-15122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15023-15107]:Block[15038-15122]"
    }, {
      "left" : "return factory.createEnumDeserializer(ctxt, type, beanDesc);",
      "right" : "return factory.createEnumDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[15037-15097]:ReturnStatement[15052-15112]"
    }, {
      "left" : "if (type.isContainerType())",
      "right" : "if (type.isContainerType())",
      "info" : "IfStatement[15116-17106]:IfStatement[15131-17121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15144-17106]:Block[15159-17121]"
    }, {
      "left" : "if (type.isArrayType())",
      "right" : "if (type.isArrayType())",
      "info" : "IfStatement[15158-15287]:IfStatement[15173-15302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15182-15287]:Block[15197-15302]"
    }, {
      "left" : "return factory.createArrayDeserializer(ctxt, (ArrayType) type, beanDesc);",
      "right" : "return factory.createArrayDeserializer(ctxt, (ArrayType) type, beanDesc);",
      "info" : "ReturnStatement[15200-15273]:ReturnStatement[15215-15288]"
    }, {
      "left" : "if (type.isMapLikeType())",
      "right" : "if (type.isMapLikeType())",
      "info" : "IfStatement[15300-16188]:IfStatement[15315-16203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15326-16188]:Block[15341-16203]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[15706-15766]:VariableDeclarationStatement[15721-15781]"
    }, {
      "left" : "if ((format == null) || format.getShape() != JsonFormat.Shape.OBJECT)",
      "right" : "if ((format == null) || format.getShape() != JsonFormat.Shape.OBJECT)",
      "info" : "IfStatement[15783-16174]:IfStatement[15798-16189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15853-16174]:Block[15868-16189]"
    }, {
      "left" : "MapLikeType mlt = (MapLikeType) type;",
      "right" : "MapLikeType mlt = (MapLikeType) type;",
      "info" : "VariableDeclarationStatement[15875-15912]:VariableDeclarationStatement[15890-15927]"
    }, {
      "left" : "if (mlt.isTrueMapType())",
      "right" : "if (mlt.isTrueMapType())",
      "info" : "IfStatement[15933-16073]:IfStatement[15948-16088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15958-16073]:Block[15973-16088]"
    }, {
      "left" : "return factory.createMapDeserializer(ctxt,(MapType) mlt, beanDesc);",
      "right" : "return factory.createMapDeserializer(ctxt,(MapType) mlt, beanDesc);",
      "info" : "ReturnStatement[15984-16051]:ReturnStatement[15999-16066]"
    }, {
      "left" : "return factory.createMapLikeDeserializer(ctxt, mlt, beanDesc);",
      "right" : "return factory.createMapLikeDeserializer(ctxt, mlt, beanDesc);",
      "info" : "ReturnStatement[16094-16156]:ReturnStatement[16109-16171]"
    }, {
      "left" : "if (type.isCollectionLikeType())",
      "right" : "if (type.isCollectionLikeType())",
      "info" : "IfStatement[16201-17096]:IfStatement[16216-17111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16234-17096]:Block[16249-17111]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[16571-16631]:VariableDeclarationStatement[16586-16646]"
    }, {
      "left" : "if ((format == null) || format.getShape() != JsonFormat.Shape.OBJECT)",
      "right" : "if ((format == null) || format.getShape() != JsonFormat.Shape.OBJECT)",
      "info" : "IfStatement[16648-17082]:IfStatement[16663-17097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16718-17082]:Block[16733-17097]"
    }, {
      "left" : "CollectionLikeType clt = (CollectionLikeType) type;",
      "right" : "CollectionLikeType clt = (CollectionLikeType) type;",
      "info" : "VariableDeclarationStatement[16740-16791]:VariableDeclarationStatement[16755-16806]"
    }, {
      "left" : "if (clt.isTrueCollectionType())",
      "right" : "if (clt.isTrueCollectionType())",
      "info" : "IfStatement[16812-16974]:IfStatement[16827-16989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16844-16974]:Block[16859-16989]"
    }, {
      "left" : "return factory.createCollectionDeserializer(ctxt, (CollectionType) clt, beanDesc);",
      "right" : "return factory.createCollectionDeserializer(ctxt, (CollectionType) clt, beanDesc);",
      "info" : "ReturnStatement[16870-16952]:ReturnStatement[16885-16967]"
    }, {
      "left" : "return factory.createCollectionLikeDeserializer(ctxt, clt, beanDesc);",
      "right" : "return factory.createCollectionLikeDeserializer(ctxt, clt, beanDesc);",
      "info" : "ReturnStatement[16995-17064]:ReturnStatement[17010-17079]"
    }, {
      "left" : "if (type.isReferenceType())",
      "right" : "if (type.isReferenceType())",
      "info" : "IfStatement[17115-17248]:IfStatement[17130-17263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17143-17248]:Block[17158-17263]"
    }, {
      "left" : "return factory.createReferenceDeserializer(ctxt, (ReferenceType) type, beanDesc);",
      "right" : "return factory.createReferenceDeserializer(ctxt, (ReferenceType) type, beanDesc);",
      "info" : "ReturnStatement[17157-17238]:ReturnStatement[17172-17253]"
    }, {
      "left" : "if (JsonNode.class.isAssignableFrom(type.getRawClass()))",
      "right" : "if (JsonNode.class.isAssignableFrom(type.getRawClass()))",
      "info" : "IfStatement[17257-17400]:IfStatement[17272-17415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17314-17400]:Block[17329-17415]"
    }, {
      "left" : "return factory.createTreeDeserializer(config, type, beanDesc);",
      "right" : "return factory.createTreeDeserializer(config, type, beanDesc);",
      "info" : "ReturnStatement[17328-17390]:ReturnStatement[17343-17405]"
    }, {
      "left" : "return factory.createBeanDeserializer(ctxt, type, beanDesc);",
      "right" : "return factory.createBeanDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[17409-17469]:ReturnStatement[17424-17484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17839-18210]:Block[17854-18225]"
    }, {
      "left" : "Object deserDef = ctxt.getAnnotationIntrospector().findDeserializer(ann);",
      "right" : "Object deserDef = ctxt.getAnnotationIntrospector().findDeserializer(ann);",
      "info" : "VariableDeclarationStatement[17849-17922]:VariableDeclarationStatement[17864-17937]"
    }, {
      "left" : "if (deserDef == null)",
      "right" : "if (deserDef == null)",
      "info" : "IfStatement[17931-17989]:IfStatement[17946-18004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17953-17989]:Block[17968-18004]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17967-17979]:ReturnStatement[17982-17994]"
    }, {
      "left" : "JsonDeserializer<Object> deser = ctxt.deserializerInstance(ann, deserDef);",
      "right" : "JsonDeserializer<Object> deser = ctxt.deserializerInstance(ann, deserDef);",
      "info" : "VariableDeclarationStatement[17998-18072]:VariableDeclarationStatement[18013-18087]"
    }, {
      "left" : "return findConvertingDeserializer(ctxt, ann, deser);",
      "right" : "return findConvertingDeserializer(ctxt, ann, deser);",
      "info" : "ReturnStatement[18152-18204]:ReturnStatement[18167-18219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18726-19043]:Block[18741-19058]"
    }, {
      "left" : "Converter<Object,Object> conv = findConverter(ctxt, a);",
      "right" : "Converter<Object,Object> conv = findConverter(ctxt, a);",
      "info" : "VariableDeclarationStatement[18736-18791]:VariableDeclarationStatement[18751-18806]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[18800-18855]:IfStatement[18815-18870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18818-18855]:Block[18833-18870]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[18832-18845]:ReturnStatement[18847-18860]"
    }, {
      "left" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "info" : "VariableDeclarationStatement[18864-18929]:VariableDeclarationStatement[18879-18944]"
    }, {
      "left" : "return (JsonDeserializer<Object>) new StdDelegatingDeserializer<Object>(conv, delegateType, deser);",
      "right" : "return (JsonDeserializer<Object>) new StdDelegatingDeserializer<Object>(conv, delegateType, deser);",
      "info" : "ReturnStatement[18938-19037]:ReturnStatement[18953-19052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19192-19407]:Block[19207-19422]"
    }, {
      "left" : "Object convDef = ctxt.getAnnotationIntrospector().findDeserializationConverter(a);",
      "right" : "Object convDef = ctxt.getAnnotationIntrospector().findDeserializationConverter(a);",
      "info" : "VariableDeclarationStatement[19202-19284]:VariableDeclarationStatement[19217-19299]"
    }, {
      "left" : "if (convDef == null)",
      "right" : "if (convDef == null)",
      "info" : "IfStatement[19293-19350]:IfStatement[19308-19365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19314-19350]:Block[19329-19365]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19328-19340]:ReturnStatement[19343-19355]"
    }, {
      "left" : "return ctxt.converterInstance(a, convDef);",
      "right" : "return ctxt.converterInstance(a, convDef);",
      "info" : "ReturnStatement[19359-19401]:ReturnStatement[19374-19416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20353-22718]:Block[20368-22733]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[20363-20426]:VariableDeclarationStatement[20378-20441]"
    }, {
      "left" : "if (intr == null)",
      "right" : "if (intr == null)",
      "info" : "IfStatement[20435-20489]:IfStatement[20450-20504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20453-20489]:Block[20468-20504]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[20467-20479]:ReturnStatement[20482-20494]"
    }, {
      "left" : "if (type.isMapLikeType())",
      "right" : "if (type.isMapLikeType())",
      "info" : "IfStatement[20636-21493]:IfStatement[20651-21508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20662-21493]:Block[20677-21508]"
    }, {
      "left" : "JavaType keyType = type.getKeyType();",
      "right" : "JavaType keyType = type.getKeyType();",
      "info" : "VariableDeclarationStatement[20676-20713]:VariableDeclarationStatement[20691-20728]"
    }, {
      "left" : "if (keyType != null && keyType.getValueHandler() == null)",
      "right" : "if (keyType != null && keyType.getValueHandler() == null)",
      "info" : "IfStatement[20980-21471]:IfStatement[20995-21486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21038-21471]:Block[21053-21486]"
    }, {
      "left" : "Object kdDef = intr.findKeyDeserializer(a);",
      "right" : "Object kdDef = intr.findKeyDeserializer(a);",
      "info" : "VariableDeclarationStatement[21056-21099]:VariableDeclarationStatement[21071-21114]"
    }, {
      "left" : "if (kdDef != null)",
      "right" : "if (kdDef != null)",
      "info" : "IfStatement[21116-21457]:IfStatement[21131-21472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21135-21457]:Block[21150-21472]"
    }, {
      "left" : "KeyDeserializer kd = ctxt.keyDeserializerInstance(a, kdDef);",
      "right" : "KeyDeserializer kd = ctxt.keyDeserializerInstance(a, kdDef);",
      "info" : "VariableDeclarationStatement[21157-21217]:VariableDeclarationStatement[21172-21232]"
    }, {
      "left" : "if (kd != null)",
      "right" : "if (kd != null)",
      "info" : "IfStatement[21238-21439]:IfStatement[21253-21454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21254-21439]:Block[21269-21454]"
    }, {
      "left" : "type = ((MapLikeType) type).withKeyValueHandler(kd);",
      "right" : "type = ((MapLikeType) type).withKeyValueHandler(kd);",
      "info" : "ExpressionStatement[21280-21332]:ExpressionStatement[21295-21347]"
    }, {
      "left" : "keyType = type.getKeyType();",
      "right" : "keyType = type.getKeyType();",
      "info" : "ExpressionStatement[21357-21385]:ExpressionStatement[21372-21400]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[21502-21547]:VariableDeclarationStatement[21517-21562]"
    }, {
      "left" : "if (contentType != null)",
      "right" : "if (contentType != null)",
      "info" : "IfStatement[21556-22467]:IfStatement[21571-22482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21581-22467]:Block[21596-22482]"
    }, {
      "left" : "if (contentType.getValueHandler() == null)",
      "right" : "if (contentType.getValueHandler() == null)",
      "info" : "IfStatement[21595-22457]:IfStatement[21610-22472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21638-22457]:Block[21653-22472]"
    }, {
      "left" : "Object cdDef = intr.findContentDeserializer(a);",
      "right" : "Object cdDef = intr.findContentDeserializer(a);",
      "info" : "VariableDeclarationStatement[21722-21769]:VariableDeclarationStatement[21737-21784]"
    }, {
      "left" : "if (cdDef != null)",
      "right" : "if (cdDef != null)",
      "info" : "IfStatement[21786-22443]:IfStatement[21801-22458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21805-22443]:Block[21820-22458]"
    }, {
      "left" : "JsonDeserializer<?> cd = null;",
      "right" : "JsonDeserializer<?> cd = null;",
      "info" : "VariableDeclarationStatement[21827-21857]:VariableDeclarationStatement[21842-21872]"
    }, {
      "left" : "if (cdDef instanceof JsonDeserializer<?>)",
      "right" : "if (cdDef instanceof JsonDeserializer<?>)",
      "info" : "IfStatement[21878-22300]:IfStatement[21893-22315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21920-22004]:Block[21935-22019]"
    }, {
      "left" : "cdDef = (JsonDeserializer<?>) cdDef;",
      "right" : "cdDef = (JsonDeserializer<?>) cdDef;",
      "info" : "ExpressionStatement[21946-21982]:ExpressionStatement[21961-21997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22010-22300]:Block[22025-22315]"
    }, {
      "left" : "Class<?> cdClass = _verifyAsClass(cdDef, \"findContentDeserializer\", JsonDeserializer.None.class);",
      "right" : "Class<?> cdClass = _verifyAsClass(cdDef, \"findContentDeserializer\", JsonDeserializer.None.class);",
      "info" : "VariableDeclarationStatement[22036-22133]:VariableDeclarationStatement[22051-22148]"
    }, {
      "left" : "if (cdClass != null)",
      "right" : "if (cdClass != null)",
      "info" : "IfStatement[22158-22278]:IfStatement[22173-22293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22179-22278]:Block[22194-22293]"
    }, {
      "left" : "cd = ctxt.deserializerInstance(a, cdClass);",
      "right" : "cd = ctxt.deserializerInstance(a, cdClass);",
      "info" : "ExpressionStatement[22209-22252]:ExpressionStatement[22224-22267]"
    }, {
      "left" : "if (cd != null)",
      "right" : "if (cd != null)",
      "info" : "IfStatement[22321-22425]:IfStatement[22336-22440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22337-22425]:Block[22352-22440]"
    }, {
      "left" : "type = type.withContentValueHandler(cd);",
      "right" : "type = type.withContentValueHandler(cd);",
      "info" : "ExpressionStatement[22363-22403]:ExpressionStatement[22378-22418]"
    }, {
      "left" : "type = intr.refineDeserializationType(ctxt.getConfig(), a, type);",
      "right" : "type = intr.refineDeserializationType(ctxt.getConfig(), a, type);",
      "info" : "ExpressionStatement[22617-22682]:ExpressionStatement[22632-22697]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[22700-22712]:ReturnStatement[22715-22727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23116-23794]:Block[23131-23809]"
    }, {
      "left" : "if (t.isContainerType())",
      "right" : "if (t.isContainerType())",
      "info" : "IfStatement[23126-23766]:IfStatement[23141-23781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23151-23766]:Block[23166-23781]"
    }, {
      "left" : "JavaType ct = t.getContentType();",
      "right" : "JavaType ct = t.getContentType();",
      "info" : "VariableDeclarationStatement[23237-23270]:VariableDeclarationStatement[23252-23285]"
    }, {
      "left" : "if (ct != null)",
      "right" : "if (ct != null)",
      "info" : "IfStatement[23283-23452]:IfStatement[23298-23467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23299-23452]:Block[23314-23467]"
    }, {
      "left" : "if ((ct.getValueHandler() != null) || (ct.getTypeHandler() != null))",
      "right" : "if ((ct.getValueHandler() != null) || (ct.getTypeHandler() != null))",
      "info" : "IfStatement[23317-23438]:IfStatement[23332-23453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23386-23438]:Block[23401-23453]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[23408-23420]:ReturnStatement[23423-23435]"
    }, {
      "left" : "if (t.isMapLikeType())",
      "right" : "if (t.isMapLikeType())",
      "info" : "IfStatement[23569-23756]:IfStatement[23584-23771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23592-23756]:Block[23607-23771]"
    }, {
      "left" : "JavaType kt = t.getKeyType();",
      "right" : "JavaType kt = t.getKeyType();",
      "info" : "VariableDeclarationStatement[23610-23639]:VariableDeclarationStatement[23625-23654]"
    }, {
      "left" : "if (kt.getValueHandler() != null)",
      "right" : "if (kt.getValueHandler() != null)",
      "info" : "IfStatement[23656-23742]:IfStatement[23671-23757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23690-23742]:Block[23705-23757]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[23712-23724]:ReturnStatement[23727-23739]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[23775-23788]:ReturnStatement[23790-23803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23887-24365]:Block[23902-24380]"
    }, {
      "left" : "if (src == null)",
      "right" : "if (src == null)",
      "info" : "IfStatement[23897-23950]:IfStatement[23912-23965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23914-23950]:Block[23929-23965]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23928-23940]:ReturnStatement[23943-23955]"
    }, {
      "left" : "if (!(src instanceof Class))",
      "right" : "if (!(src instanceof Class))",
      "info" : "IfStatement[23959-24202]:IfStatement[23974-24217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23988-24202]:Block[24003-24217]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "info" : "ThrowStatement[24002-24192]:ThrowStatement[24017-24207]"
    }, {
      "left" : "Class<?> cls = (Class<?>) src;",
      "right" : "Class<?> cls = (Class<?>) src;",
      "info" : "VariableDeclarationStatement[24211-24241]:VariableDeclarationStatement[24226-24256]"
    }, {
      "left" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "right" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "info" : "IfStatement[24250-24339]:IfStatement[24265-24354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24303-24339]:Block[24318-24354]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24317-24329]:ReturnStatement[24332-24344]"
    }, {
      "left" : "return cls;",
      "right" : "return cls;",
      "info" : "ReturnStatement[24348-24359]:ReturnStatement[24363-24374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24709-25107]:Block[24724-25122]"
    }, {
      "left" : "Class<?> rawClass = type.getRawClass();",
      "right" : "Class<?> rawClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[24796-24835]:VariableDeclarationStatement[24811-24850]"
    }, {
      "left" : "if (!ClassUtil.isConcrete(rawClass))",
      "right" : "if (!ClassUtil.isConcrete(rawClass))",
      "info" : "IfStatement[24844-25003]:IfStatement[24859-25018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24881-25003]:Block[24896-25018]"
    }, {
      "left" : "return ctxt.reportBadDefinition(type, \"Cannot find a Value deserializer for abstract type \"+type);",
      "right" : "return ctxt.reportBadDefinition(type, \"Cannot find a Value deserializer for abstract type \"+type);",
      "info" : "ReturnStatement[24895-24993]:ReturnStatement[24910-25008]"
    }, {
      "left" : "return ctxt.reportBadDefinition(type, \"Cannot find a Value deserializer for type \"+type);",
      "right" : "return ctxt.reportBadDefinition(type, \"Cannot find a Value deserializer for type \"+type);",
      "info" : "ReturnStatement[25012-25101]:ReturnStatement[25027-25116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25253-25362]:Block[25268-25377]"
    }, {
      "left" : "return ctxt.reportBadDefinition(type, \"Cannot find a (Map) Key deserializer for type \"+type);",
      "right" : "return ctxt.reportBadDefinition(type, \"Cannot find a (Map) Key deserializer for type \"+type);",
      "info" : "ReturnStatement[25263-25356]:ReturnStatement[25278-25371]"
    } ]
  },
  "interFileMappings" : { }
}