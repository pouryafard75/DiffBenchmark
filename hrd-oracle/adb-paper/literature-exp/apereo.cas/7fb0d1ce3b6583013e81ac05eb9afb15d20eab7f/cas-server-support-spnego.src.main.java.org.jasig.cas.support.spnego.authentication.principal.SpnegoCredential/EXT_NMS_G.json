{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SpnegoCredential",
      "right" : "SpnegoCredential",
      "info" : "TypeDeclaration[1304-5189]:TypeDeclaration[1304-5551]"
    }, {
      "left" : "private static final long serialVersionUID = 84084596791289548L;",
      "right" : "private static final long serialVersionUID = 84084596791289548L;",
      "info" : "FieldDeclaration[1522-1638]:FieldDeclaration[1522-1638]"
    }, {
      "left" : "private static final int NTLM_TOKEN_MAX_LENGTH = 8;",
      "right" : "private static final int NTLM_TOKEN_MAX_LENGTH = 8;",
      "info" : "FieldDeclaration[1644-1695]:FieldDeclaration[1644-1695]"
    }, {
      "left" : "private final Logger logger = LoggerFactory.getLogger(this.getClass());",
      "right" : "private final Logger logger = LoggerFactory.getLogger(this.getClass());",
      "info" : "FieldDeclaration[1701-1772]:FieldDeclaration[2077-2148]"
    }, {
      "left" : "private final ByteSource initToken;",
      "right" : "private final ByteSource initToken;",
      "info" : "FieldDeclaration[1778-1859]:FieldDeclaration[2154-2235]"
    }, {
      "left" : "private ByteSource nextToken;",
      "right" : "private ByteSource nextToken;",
      "info" : "FieldDeclaration[1865-1940]:FieldDeclaration[2241-2316]"
    }, {
      "left" : "private Principal principal;",
      "right" : "private Principal principal;",
      "info" : "FieldDeclaration[1946-2012]:FieldDeclaration[2322-2388]"
    }, {
      "left" : "private final boolean isNtlm;",
      "right" : "private final boolean isNtlm;",
      "info" : "FieldDeclaration[2018-2122]:FieldDeclaration[2394-2498]"
    }, {
      "left" : "public SpnegoCredential(final byte[] initToken)",
      "right" : "public SpnegoCredential(final byte[] initToken)",
      "info" : "MethodDeclaration[2128-2462]:MethodDeclaration[2504-2838]"
    }, {
      "left" : "public byte[] getInitToken()",
      "right" : "public byte[] getInitToken()",
      "info" : "MethodDeclaration[2468-2560]:MethodDeclaration[2844-2936]"
    }, {
      "left" : "public byte[] getNextToken()",
      "right" : "public byte[] getNextToken()",
      "info" : "MethodDeclaration[2566-2658]:MethodDeclaration[2942-3034]"
    }, {
      "left" : "public void setNextToken(final byte[] nextToken)",
      "right" : "public void setNextToken(final byte[] nextToken)",
      "info" : "MethodDeclaration[2664-2859]:MethodDeclaration[3040-3235]"
    }, {
      "left" : "public Principal getPrincipal()",
      "right" : "public Principal getPrincipal()",
      "info" : "MethodDeclaration[2865-2935]:MethodDeclaration[3241-3311]"
    }, {
      "left" : "public void setPrincipal(final Principal principal)",
      "right" : "public void setPrincipal(final Principal principal)",
      "info" : "MethodDeclaration[2941-3036]:MethodDeclaration[3317-3412]"
    }, {
      "left" : "public boolean isNtlm()",
      "right" : "public boolean isNtlm()",
      "info" : "MethodDeclaration[3042-3101]:MethodDeclaration[3418-3477]"
    }, {
      "left" : "public String getId()",
      "right" : "public String getId()",
      "info" : "MethodDeclaration[3107-3227]:MethodDeclaration[3483-3603]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[3233-3303]:MethodDeclaration[3609-3679]"
    }, {
      "left" : "private boolean isTokenNtlm(final ByteSource tokenSource)",
      "right" : "private boolean isTokenNtlm(final ByteSource tokenSource)",
      "info" : "MethodDeclaration[3309-3886]:MethodDeclaration[3685-4248]"
    }, {
      "left" : "public boolean equals(final Object obj)",
      "right" : "public boolean equals(final Object obj)",
      "info" : "MethodDeclaration[3892-4320]:MethodDeclaration[4254-4682]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[4326-4646]:MethodDeclaration[4688-5008]"
    }, {
      "left" : "private byte[] consumeByteSourceOrNull(final ByteSource source)",
      "right" : "private byte[] consumeByteSourceOrNull(final ByteSource source)",
      "info" : "MethodDeclaration[4652-5187]:MethodDeclaration[5014-5549]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1443-1449]:Modifier[1443-1449]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1450-1455]:Modifier[1450-1455]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1456-1461]:TYPE_DECLARATION_KIND[1456-1461]"
    }, {
      "left" : "SpnegoCredential",
      "right" : "SpnegoCredential",
      "info" : "SimpleName[1462-1478]:SimpleName[1462-1478]"
    }, {
      "left" : "Credential",
      "right" : "Credential",
      "info" : "SimpleType[1490-1500]:SimpleType[1490-1500]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[1502-1514]:SimpleType[1502-1514]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1574-1581]:Modifier[1701-1708]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1574-1581]:Modifier[1806-1813]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1582-1588]:Modifier[1709-1715]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1582-1588]:Modifier[1814-1820]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1589-1594]:Modifier[1716-1721]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1589-1594]:Modifier[1821-1826]"
    }, {
      "left" : "ByteSource",
      "right" : "Byte",
      "info" : "SimpleName[1838-1848]:SimpleName[1722-1726]"
    }, {
      "left" : "ByteSource",
      "right" : "Byte",
      "info" : "SimpleType[1838-1848]:SimpleType[1827-1831]"
    }, {
      "left" : "initToken",
      "right" : "CHAR_S_BYTE",
      "info" : "SimpleName[1849-1858]:SimpleName[1727-1738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2235-2241]:Modifier[2611-2617]"
    }, {
      "left" : "SpnegoCredential",
      "right" : "SpnegoCredential",
      "info" : "SimpleName[2242-2258]:SimpleName[2618-2634]"
    }, {
      "left" : "final byte[] initToken",
      "right" : "final byte[] initToken",
      "info" : "SingleVariableDeclaration[2259-2281]:SingleVariableDeclaration[2635-2657]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[2269-2271]:Dimension[1831-1833]"
    }, {
      "left" : "initToken",
      "right" : "NTLMSSP_SIGNATURE",
      "info" : "SimpleName[2272-2281]:SimpleName[1834-1851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2283-2462]:Block[2659-2838]"
    }, {
      "left" : "Assert",
      "right" : "Byte",
      "info" : "SimpleName[2293-2299]:SimpleName[1855-1859]"
    }, {
      "left" : "Assert.notNull(initToken, \"The initToken cannot be null.\")",
      "right" : "Byte.valueOf((byte) 'N')",
      "info" : "MethodInvocation[2293-2351]:MethodInvocation[1855-1879]"
    }, {
      "left" : "Assert.notNull(initToken, \"The initToken cannot be null.\");",
      "right" : "Assert.notNull(initToken, \"The initToken cannot be null.\");",
      "info" : "ExpressionStatement[2293-2352]:ExpressionStatement[2669-2728]"
    }, {
      "left" : "notNull",
      "right" : "valueOf",
      "info" : "SimpleName[2300-2307]:SimpleName[1860-1867]"
    }, {
      "left" : "this.initToken = ByteSource.wrap(initToken);",
      "right" : "this.initToken = ByteSource.wrap(initToken);",
      "info" : "ExpressionStatement[2361-2405]:ExpressionStatement[2737-2781]"
    }, {
      "left" : "ByteSource",
      "right" : "Byte",
      "info" : "METHOD_INVOCATION_RECEIVER[2378-2388]:METHOD_INVOCATION_RECEIVER[1741-1745]"
    }, {
      "left" : "ByteSource",
      "right" : "Byte",
      "info" : "SimpleName[2378-2388]:SimpleName[1893-1897]"
    }, {
      "left" : "ByteSource.wrap(initToken)",
      "right" : "Byte.valueOf((byte) 'T')",
      "info" : "MethodInvocation[2378-2404]:MethodInvocation[1893-1917]"
    }, {
      "left" : "wrap",
      "right" : "valueOf",
      "info" : "SimpleName[2389-2393]:SimpleName[1898-1905]"
    }, {
      "left" : "this.isNtlm = isTokenNtlm(this.initToken);",
      "right" : "this.isNtlm = isTokenNtlm(this.initToken);",
      "info" : "ExpressionStatement[2414-2456]:ExpressionStatement[2790-2832]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2468-2474]:Modifier[2844-2850]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[2475-2481]:ArrayType[2851-2857]"
    }, {
      "left" : "getInitToken",
      "right" : "getInitToken",
      "info" : "SimpleName[2482-2494]:SimpleName[2858-2870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2497-2560]:Block[2873-2936]"
    }, {
      "left" : "return consumeByteSourceOrNull(this.initToken);",
      "right" : "return consumeByteSourceOrNull(this.initToken);",
      "info" : "ReturnStatement[2507-2554]:ReturnStatement[2883-2930]"
    }, {
      "left" : "consumeByteSourceOrNull",
      "right" : "Byte",
      "info" : "SimpleName[2514-2537]:SimpleName[1919-1923]"
    }, {
      "left" : "initToken",
      "right" : "valueOf",
      "info" : "SimpleName[2543-2552]:SimpleName[1924-1931]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2566-2572]:Modifier[2942-2948]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[2573-2577]:PrimitiveType[1933-1937]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[2573-2579]:ArrayType[2949-2955]"
    }, {
      "left" : "getNextToken",
      "right" : "getNextToken",
      "info" : "SimpleName[2580-2592]:SimpleName[2956-2968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2595-2658]:Block[2971-3034]"
    }, {
      "left" : "return consumeByteSourceOrNull(this.nextToken);",
      "right" : "return consumeByteSourceOrNull(this.nextToken);",
      "info" : "ReturnStatement[2605-2652]:ReturnStatement[2981-3028]"
    }, {
      "left" : "consumeByteSourceOrNull",
      "right" : "Byte",
      "info" : "SimpleName[2612-2635]:SimpleName[1957-1961]"
    }, {
      "left" : "nextToken",
      "right" : "valueOf",
      "info" : "SimpleName[2641-2650]:SimpleName[1962-1969]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2750-2756]:Modifier[3126-3132]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2757-2761]:PrimitiveType[3133-3137]"
    }, {
      "left" : "setNextToken",
      "right" : "setNextToken",
      "info" : "SimpleName[2762-2774]:SimpleName[3138-3150]"
    }, {
      "left" : "final byte[] nextToken",
      "right" : "final byte[] nextToken",
      "info" : "SingleVariableDeclaration[2775-2797]:SingleVariableDeclaration[3151-3173]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[2781-2785]:PrimitiveType[1971-1975]"
    }, {
      "left" : "nextToken",
      "right" : "CHAR_S_BYTE",
      "info" : "SimpleName[2788-2797]:SimpleName[1983-1994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2799-2859]:Block[3175-3235]"
    }, {
      "left" : "this.nextToken = ByteSource.wrap(nextToken);",
      "right" : "this.nextToken = ByteSource.wrap(nextToken);",
      "info" : "ExpressionStatement[2809-2853]:ExpressionStatement[3185-3229]"
    }, {
      "left" : "nextToken",
      "right" : "CHAR_S_BYTE",
      "info" : "SimpleName[2814-2823]:SimpleName[1996-2007]"
    }, {
      "left" : "ByteSource",
      "right" : "Byte",
      "info" : "SimpleName[2826-2836]:SimpleName[2021-2025]"
    }, {
      "left" : "ByteSource.wrap(nextToken)",
      "right" : "Byte.valueOf((byte) 'P')",
      "info" : "MethodInvocation[2826-2852]:MethodInvocation[2021-2045]"
    }, {
      "left" : "wrap",
      "right" : "valueOf",
      "info" : "SimpleName[2837-2841]:SimpleName[2026-2033]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2865-2871]:Modifier[3241-3247]"
    }, {
      "left" : "Principal",
      "right" : "Principal",
      "info" : "SimpleType[2872-2881]:SimpleType[3248-3257]"
    }, {
      "left" : "getPrincipal",
      "right" : "getPrincipal",
      "info" : "SimpleName[2882-2894]:SimpleName[3258-3270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2897-2935]:Block[3273-3311]"
    }, {
      "left" : "return this.principal;",
      "right" : "return this.principal;",
      "info" : "ReturnStatement[2907-2929]:ReturnStatement[3283-3305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2941-2947]:Modifier[3317-3323]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2948-2952]:PrimitiveType[3324-3328]"
    }, {
      "left" : "setPrincipal",
      "right" : "setPrincipal",
      "info" : "SimpleName[2953-2965]:SimpleName[3329-3341]"
    }, {
      "left" : "final Principal principal",
      "right" : "final Principal principal",
      "info" : "SingleVariableDeclaration[2966-2991]:SingleVariableDeclaration[3342-3367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2993-3036]:Block[3369-3412]"
    }, {
      "left" : "this.principal = principal;",
      "right" : "this.principal = principal;",
      "info" : "ExpressionStatement[3003-3030]:ExpressionStatement[3379-3406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3042-3048]:Modifier[3418-3424]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3049-3056]:PrimitiveType[3425-3432]"
    }, {
      "left" : "isNtlm",
      "right" : "isNtlm",
      "info" : "SimpleName[3057-3063]:SimpleName[3433-3439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3066-3101]:Block[3442-3477]"
    }, {
      "left" : "return this.isNtlm;",
      "right" : "return this.isNtlm;",
      "info" : "ReturnStatement[3076-3095]:ReturnStatement[3452-3471]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3107-3116]:MarkerAnnotation[3483-3492]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3121-3127]:Modifier[3497-3503]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3128-3134]:SimpleType[3504-3510]"
    }, {
      "left" : "getId",
      "right" : "getId",
      "info" : "SimpleName[3135-3140]:SimpleName[3511-3516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3143-3227]:Block[3519-3603]"
    }, {
      "left" : "return this.principal != null ? this.principal.getId() : UNKNOWN_ID;",
      "right" : "return this.principal != null ? this.principal.getId() : UNKNOWN_ID;",
      "info" : "ReturnStatement[3153-3221]:ReturnStatement[3529-3597]"
    }, {
      "left" : "this.principal",
      "right" : "Byte",
      "info" : "METHOD_INVOCATION_RECEIVER[3185-3199]:METHOD_INVOCATION_RECEIVER[2047-2051]"
    }, {
      "left" : "principal",
      "right" : "Byte",
      "info" : "SimpleName[3190-3199]:SimpleName[2047-2051]"
    }, {
      "left" : "getId",
      "right" : "valueOf",
      "info" : "SimpleName[3200-3205]:SimpleName[2052-2059]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3233-3242]:MarkerAnnotation[3609-3618]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3247-3253]:Modifier[3623-3629]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3254-3260]:SimpleType[3630-3636]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[3261-3269]:SimpleName[3637-3645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3272-3303]:Block[3648-3679]"
    }, {
      "left" : "return getId();",
      "right" : "return getId();",
      "info" : "ReturnStatement[3282-3297]:ReturnStatement[3658-3673]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3436-3443]:Modifier[3812-3819]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3444-3451]:PrimitiveType[3820-3827]"
    }, {
      "left" : "isTokenNtlm",
      "right" : "isTokenNtlm",
      "info" : "SimpleName[3452-3463]:SimpleName[3828-3839]"
    }, {
      "left" : "final ByteSource tokenSource",
      "right" : "final ByteSource tokenSource",
      "info" : "SingleVariableDeclaration[3464-3492]:SingleVariableDeclaration[3840-3868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3494-3886]:Block[3870-4248]"
    }, {
      "left" : "final byte[] token = consumeByteSourceOrNull(tokenSource);",
      "right" : "final byte[] token = consumeByteSourceOrNull(tokenSource);",
      "info" : "VariableDeclarationStatement[3504-3562]:VariableDeclarationStatement[3882-3940]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[3510-3514]:PrimitiveType[2061-2065]"
    }, {
      "left" : "if (token == null || token.length < NTLM_TOKEN_MAX_LENGTH)",
      "right" : "if (token == null || token.length < NTLM_TOKEN_MAX_LENGTH)",
      "info" : "IfStatement[3571-3667]:IfStatement[3949-4045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3630-3667]:Block[4008-4045]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3644-3657]:ReturnStatement[4022-4035]"
    }, {
      "left" : "for (int i = 0; i < NTLM_TOKEN_MAX_LENGTH; i++)",
      "right" : "for (int i = 0; i < NTLM_TOKEN_MAX_LENGTH; i++)",
      "info" : "ForStatement[3676-3859]:ForStatement[4054-4221]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[3689-3690]:NumberLiteral[2067-2068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3724-3859]:Block[4102-4221]"
    }, {
      "left" : "if (SpnegoConstants.NTLMSSP_SIGNATURE[i].byteValue() != token[i])",
      "right" : "if (NTLMSSP_SIGNATURE[i].byteValue() != token[i])",
      "info" : "IfStatement[3738-3849]:IfStatement[4116-4211]"
    }, {
      "left" : "byteValue",
      "right" : "valueOf",
      "info" : "SimpleName[3779-3788]:SimpleName[1746-1753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3804-3849]:Block[4166-4211]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3822-3835]:ReturnStatement[4184-4197]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3868-3880]:ReturnStatement[4230-4242]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3892-3901]:MarkerAnnotation[4254-4263]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3906-3912]:Modifier[4268-4274]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3913-3920]:PrimitiveType[4275-4282]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[3921-3927]:SimpleName[4283-4289]"
    }, {
      "left" : "final Object obj",
      "right" : "final Object obj",
      "info" : "SingleVariableDeclaration[3928-3944]:SingleVariableDeclaration[4290-4306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3946-4320]:Block[4308-4682]"
    }, {
      "left" : "if (obj == null || !obj.getClass().equals(this.getClass()))",
      "right" : "if (obj == null || !obj.getClass().equals(this.getClass()))",
      "info" : "IfStatement[3956-4053]:IfStatement[4318-4415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4016-4053]:Block[4378-4415]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4030-4043]:ReturnStatement[4392-4405]"
    }, {
      "left" : "final SpnegoCredential c = (SpnegoCredential) obj;",
      "right" : "final SpnegoCredential c = (SpnegoCredential) obj;",
      "info" : "VariableDeclarationStatement[4063-4113]:VariableDeclarationStatement[4425-4475]"
    }, {
      "left" : "return Arrays.equals(this.getInitToken(), c.getInitToken())\n                && this.principal.equals(c.getPrincipal())\n                && Arrays.equals(this.getNextToken(), c.getNextToken());",
      "right" : "return Arrays.equals(this.getInitToken(), c.getInitToken())\n                && this.principal.equals(c.getPrincipal())\n                && Arrays.equals(this.getNextToken(), c.getNextToken());",
      "info" : "ReturnStatement[4123-4314]:ReturnStatement[4485-4676]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4326-4335]:MarkerAnnotation[4688-4697]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4340-4346]:Modifier[4702-4708]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4347-4350]:PrimitiveType[4709-4712]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[4351-4359]:SimpleName[4713-4721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4362-4646]:Block[4724-5008]"
    }, {
      "left" : "int hash = super.hashCode();",
      "right" : "int hash = super.hashCode();",
      "info" : "VariableDeclarationStatement[4372-4400]:VariableDeclarationStatement[4734-4762]"
    }, {
      "left" : "if (this.principal != null)",
      "right" : "if (this.principal != null)",
      "info" : "IfStatement[4409-4494]:IfStatement[4771-4856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4437-4494]:Block[4799-4856]"
    }, {
      "left" : "hash = this.principal.hashCode();",
      "right" : "hash = this.principal.hashCode();",
      "info" : "ExpressionStatement[4451-4484]:ExpressionStatement[4813-4846]"
    }, {
      "left" : "return new HashCodeBuilder().append(this.getInitToken())\n            .append(this.getNextToken())\n            .append(hash).toHashCode();",
      "right" : "return new HashCodeBuilder().append(this.getInitToken())\n            .append(this.getNextToken())\n            .append(hash).toHashCode();",
      "info" : "ReturnStatement[4503-4640]:ReturnStatement[4865-5002]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4825-4832]:Modifier[5187-5194]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[4833-4837]:PrimitiveType[1755-1759]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[4833-4839]:ArrayType[5195-5201]"
    }, {
      "left" : "consumeByteSourceOrNull",
      "right" : "consumeByteSourceOrNull",
      "info" : "SimpleName[4840-4863]:SimpleName[5202-5225]"
    }, {
      "left" : "final ByteSource source",
      "right" : "final ByteSource source",
      "info" : "SingleVariableDeclaration[4864-4887]:SingleVariableDeclaration[5226-5249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4889-5187]:Block[5251-5549]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4899-5181]:TryStatement[5261-5543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4903-5045]:Block[5265-5407]"
    }, {
      "left" : "if (source == null || source.isEmpty())",
      "right" : "if (source == null || source.isEmpty())",
      "info" : "IfStatement[4917-5001]:IfStatement[5279-5363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4957-5001]:Block[5319-5363]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4975-4987]:ReturnStatement[5337-5349]"
    }, {
      "left" : "return source.read();",
      "right" : "return source.read();",
      "info" : "ReturnStatement[5014-5035]:ReturnStatement[5376-5397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5074-5181]:Block[5436-5543]"
    }, {
      "left" : "logger.warn(\"Could not consume the byte array source\", e);",
      "right" : "logger.warn(\"Could not consume the byte array source\", e);",
      "info" : "ExpressionStatement[5088-5146]:ExpressionStatement[5450-5508]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5159-5171]:ReturnStatement[5521-5533]"
    } ]
  },
  "interFileMappings" : { }
}