{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "RouteLayer",
      "right" : "RouteLayer",
      "info" : "TypeDeclaration[1137-15844]:TypeDeclaration[1137-16184]"
    }, {
      "left" : "private OsmandMapTileView view;",
      "right" : "private OsmandMapTileView view;",
      "info" : "FieldDeclaration[1189-1220]:FieldDeclaration[1189-1220]"
    }, {
      "left" : "private final RoutingHelper helper;",
      "right" : "private final RoutingHelper helper;",
      "info" : "FieldDeclaration[1224-1259]:FieldDeclaration[1224-1259]"
    }, {
      "left" : "private List<Location> points = new ArrayList<Location>();",
      "right" : "private List<Location> points = new ArrayList<Location>();",
      "info" : "FieldDeclaration[1261-1319]:FieldDeclaration[1261-1319]"
    }, {
      "left" : "private List<Location> actionPoints = new ArrayList<Location>();",
      "right" : "private List<Location> actionPoints = new ArrayList<Location>();",
      "info" : "FieldDeclaration[1321-1385]:FieldDeclaration[1321-1385]"
    }, {
      "left" : "private Paint paint;",
      "right" : "private Paint paint;",
      "info" : "FieldDeclaration[1387-1407]:FieldDeclaration[1387-1407]"
    }, {
      "left" : "private Paint actionPaint;",
      "right" : "private Paint actionPaint;",
      "info" : "FieldDeclaration[1409-1435]:FieldDeclaration[1409-1435]"
    }, {
      "left" : "private Paint paint2;",
      "right" : "private Paint paint2;",
      "info" : "FieldDeclaration[1437-1458]:FieldDeclaration[1437-1458]"
    }, {
      "left" : "private boolean isPaint2;",
      "right" : "private boolean isPaint2;",
      "info" : "FieldDeclaration[1460-1485]:FieldDeclaration[1460-1485]"
    }, {
      "left" : "private Paint shadowPaint;",
      "right" : "private Paint shadowPaint;",
      "info" : "FieldDeclaration[1487-1513]:FieldDeclaration[1487-1513]"
    }, {
      "left" : "private boolean isShadowPaint;",
      "right" : "private boolean isShadowPaint;",
      "info" : "FieldDeclaration[1515-1545]:FieldDeclaration[1515-1545]"
    }, {
      "left" : "private Paint paint_1;",
      "right" : "private Paint paint_1;",
      "info" : "FieldDeclaration[1547-1569]:FieldDeclaration[1547-1569]"
    }, {
      "left" : "private boolean isPaint_1;",
      "right" : "private boolean isPaint_1;",
      "info" : "FieldDeclaration[1571-1597]:FieldDeclaration[1571-1597]"
    }, {
      "left" : "private int cachedHash;",
      "right" : "private int cachedHash;",
      "info" : "FieldDeclaration[1599-1622]:FieldDeclaration[1599-1622]"
    }, {
      "left" : "private Path path;",
      "right" : "private Path path;",
      "info" : "FieldDeclaration[1625-1643]:FieldDeclaration[1625-1643]"
    }, {
      "left" : "private Bitmap coloredArrowUp;",
      "right" : "private Bitmap coloredArrowUp;",
      "info" : "FieldDeclaration[1656-1686]:FieldDeclaration[1656-1686]"
    }, {
      "left" : "private Bitmap actionArrow;",
      "right" : "private Bitmap actionArrow;",
      "info" : "FieldDeclaration[1688-1715]:FieldDeclaration[1688-1715]"
    }, {
      "left" : "private Paint paintIcon;",
      "right" : "private Paint paintIcon;",
      "info" : "FieldDeclaration[1718-1742]:FieldDeclaration[1718-1742]"
    }, {
      "left" : "private Paint paintIconAction;",
      "right" : "private Paint paintIconAction;",
      "info" : "FieldDeclaration[1744-1774]:FieldDeclaration[1744-1774]"
    }, {
      "left" : "private OsmandRenderer osmandRenderer;",
      "right" : "private OsmandRenderer osmandRenderer;",
      "info" : "FieldDeclaration[1777-1815]:FieldDeclaration[1777-1815]"
    }, {
      "left" : "public RouteLayer(RoutingHelper helper",
      "right" : "public RouteLayer(RoutingHelper helper",
      "info" : "MethodDeclaration[1819-1886]:MethodDeclaration[1819-1886]"
    }, {
      "left" : "private void initUI()",
      "right" : "private void initUI()",
      "info" : "MethodDeclaration[1891-2755]:MethodDeclaration[1891-2755]"
    }, {
      "left" : "public void initLayer(OsmandMapTileView view)",
      "right" : "public void initLayer(OsmandMapTileView view)",
      "info" : "MethodDeclaration[2759-2943]:MethodDeclaration[2759-2943]"
    }, {
      "left" : "private void updatePaints(DrawSettings nightMode, RotatedTileBox tileBox",
      "right" : "private void updatePaints(DrawSettings nightMode, RotatedTileBox tileBox",
      "info" : "MethodDeclaration[2948-4846]:MethodDeclaration[2948-4846]"
    }, {
      "left" : "private int calculateHash(Object... o)",
      "right" : "private int calculateHash(Object... o)",
      "info" : "MethodDeclaration[4852-4924]:MethodDeclaration[4852-4924]"
    }, {
      "left" : "public void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings)",
      "right" : "public void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings)",
      "info" : "MethodDeclaration[4928-6343]:MethodDeclaration[4928-6343]"
    }, {
      "left" : "public void onDraw(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings)",
      "right" : "public void onDraw(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings)",
      "info" : "MethodDeclaration[6347-6441]:MethodDeclaration[6347-6441]"
    }, {
      "left" : "private void drawAction(RotatedTileBox tb, Canvas canvas)",
      "right" : "private void drawAction(RotatedTileBox tb, Canvas canvas)",
      "info" : "MethodDeclaration[6444-8008]:MethodDeclaration[6444-8008]"
    }, {
      "left" : "private void drawSegment(RotatedTileBox tb, Canvas canvas)",
      "right" : "private void drawSegment(RotatedTileBox tb, Canvas canvas)",
      "info" : "MethodDeclaration[8011-9108]:MethodDeclaration[8011-9108]"
    }, {
      "left" : "private void drawArrowsOverPath(Canvas canvas, TIntArrayList lst, Bitmap arrow)",
      "right" : "private void drawArrowsOverPath(Canvas canvas, TIntArrayList lst, Bitmap arrow)",
      "info" : "MethodDeclaration[9112-10499]:MethodDeclaration[9112-10499]"
    }, {
      "left" : "public void drawLocations(RotatedTileBox tb, Canvas canvas, double topLatitude, double leftLongitude, double bottomLatitude, double rightLongitude)",
      "right" : "public void drawLocations(RotatedTileBox tb, Canvas canvas, double topLatitude, double leftLongitude, double bottomLatitude, double rightLongitude)",
      "info" : "MethodDeclaration[10503-12176]:MethodDeclaration[10503-12176]"
    }, {
      "left" : "private void calculateActionPoints(double topLatitude, double leftLongitude, double bottomLatitude,\n\t\t\tdouble rightLongitude, Location lastProjection, List<Location> routeNodes, int cd,\n\t\t\tIterator<RouteDirectionInfo> it, int zoom)",
      "right" : "private void calculateActionPoints(double topLatitude, double leftLongitude, double bottomLatitude,\n\t\t\tdouble rightLongitude, Location lastProjection, List<Location> routeNodes, int cd,\n\t\t\tIterator<RouteDirectionInfo> it, int zoom)",
      "info" : "MethodDeclaration[12180-15089]:MethodDeclaration[12180-14572]"
    }, {
      "left" : "private Location calculateProjection(double part, Location lp, Location l)",
      "right" : "private Location calculateProjection(double part, Location lp, Location l)",
      "info" : "MethodDeclaration[15093-15382]:MethodDeclaration[15433-15722]"
    }, {
      "left" : "public RoutingHelper getHelper()",
      "right" : "public RoutingHelper getHelper()",
      "info" : "MethodDeclaration[15386-15440]:MethodDeclaration[15726-15780]"
    }, {
      "left" : "public Path getPath()",
      "right" : "public Path getPath()",
      "info" : "MethodDeclaration[15475-15516]:MethodDeclaration[15815-15856]"
    }, {
      "left" : "public void destroyLayer()",
      "right" : "public void destroyLayer()",
      "info" : "MethodDeclaration[15521-15566]:MethodDeclaration[15861-15906]"
    }, {
      "left" : "public boolean drawInScreenPixels()",
      "right" : "public boolean drawInScreenPixels()",
      "info" : "MethodDeclaration[15568-15635]:MethodDeclaration[15908-15975]"
    }, {
      "left" : "public boolean onLongPressEvent(PointF point, RotatedTileBox tileBox)",
      "right" : "public boolean onLongPressEvent(PointF point, RotatedTileBox tileBox)",
      "info" : "MethodDeclaration[15638-15739]:MethodDeclaration[15978-16079]"
    }, {
      "left" : "public boolean onSingleTap(PointF point, RotatedTileBox tileBox)",
      "right" : "public boolean onSingleTap(PointF point, RotatedTileBox tileBox)",
      "info" : "MethodDeclaration[15742-15838]:MethodDeclaration[16082-16178]"
    } ],
    "mappings" : [
 {
      "left" : "OsmandMapLayer",
      "right" : "OsmandMapLayer",
      "info" : "SimpleType[1169-1183]:SimpleType[1169-1183]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1819-1825]:Modifier[1819-1825]"
    }, {
      "left" : "RouteLayer",
      "right" : "RouteLayer",
      "info" : "SimpleName[1826-1836]:SimpleName[1826-1836]"
    }, {
      "left" : "RoutingHelper helper",
      "right" : "RoutingHelper helper",
      "info" : "SingleVariableDeclaration[1837-1857]:SingleVariableDeclaration[1837-1857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1858-1886]:Block[1858-1886]"
    }, {
      "left" : "this.helper = helper;",
      "right" : "this.helper = helper;",
      "info" : "ExpressionStatement[1862-1883]:ExpressionStatement[1862-1883]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1891-1898]:Modifier[1891-1898]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1899-1903]:PrimitiveType[1899-1903]"
    }, {
      "left" : "initUI",
      "right" : "initUI",
      "info" : "SimpleName[1904-1910]:SimpleName[1904-1910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1913-2755]:Block[1913-2755]"
    }, {
      "left" : "paint = new Paint();",
      "right" : "paint = new Paint();",
      "info" : "ExpressionStatement[1917-1937]:ExpressionStatement[1917-1937]"
    }, {
      "left" : "paint.setStyle(Style.STROKE);",
      "right" : "paint.setStyle(Style.STROKE);",
      "info" : "ExpressionStatement[1940-1969]:ExpressionStatement[1940-1969]"
    }, {
      "left" : "paint.setAntiAlias(true);",
      "right" : "paint.setAntiAlias(true);",
      "info" : "ExpressionStatement[1972-1997]:ExpressionStatement[1972-1997]"
    }, {
      "left" : "paint.setStrokeCap(Cap.ROUND);",
      "right" : "paint.setStrokeCap(Cap.ROUND);",
      "info" : "ExpressionStatement[2000-2030]:ExpressionStatement[2000-2030]"
    }, {
      "left" : "paint.setStrokeJoin(Join.ROUND);",
      "right" : "paint.setStrokeJoin(Join.ROUND);",
      "info" : "ExpressionStatement[2033-2065]:ExpressionStatement[2033-2065]"
    }, {
      "left" : "actionArrow = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_action_arrow, null);",
      "right" : "actionArrow = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_action_arrow, null);",
      "info" : "ExpressionStatement[2068-2167]:ExpressionStatement[2068-2167]"
    }, {
      "left" : "actionPaint = new Paint();",
      "right" : "actionPaint = new Paint();",
      "info" : "ExpressionStatement[2173-2199]:ExpressionStatement[2173-2199]"
    }, {
      "left" : "actionPaint.setStyle(Style.STROKE);",
      "right" : "actionPaint.setStyle(Style.STROKE);",
      "info" : "ExpressionStatement[2202-2237]:ExpressionStatement[2202-2237]"
    }, {
      "left" : "actionPaint.setAntiAlias(true);",
      "right" : "actionPaint.setAntiAlias(true);",
      "info" : "ExpressionStatement[2240-2271]:ExpressionStatement[2240-2271]"
    }, {
      "left" : "actionPaint.setStrokeCap(Cap.BUTT);",
      "right" : "actionPaint.setStrokeCap(Cap.BUTT);",
      "info" : "ExpressionStatement[2274-2309]:ExpressionStatement[2274-2309]"
    }, {
      "left" : "actionPaint.setStrokeJoin(Join.ROUND);",
      "right" : "actionPaint.setStrokeJoin(Join.ROUND);",
      "info" : "ExpressionStatement[2312-2350]:ExpressionStatement[2312-2350]"
    }, {
      "left" : "actionPaint.setStrokeWidth(7 * view.getScaleCoefficient());",
      "right" : "actionPaint.setStrokeWidth(7 * view.getScaleCoefficient());",
      "info" : "ExpressionStatement[2353-2412]:ExpressionStatement[2353-2412]"
    }, {
      "left" : "actionPaint.setColor(Color.WHITE);",
      "right" : "actionPaint.setColor(Color.WHITE);",
      "info" : "ExpressionStatement[2415-2449]:ExpressionStatement[2415-2449]"
    }, {
      "left" : "path = new Path();",
      "right" : "path = new Path();",
      "info" : "ExpressionStatement[2452-2470]:ExpressionStatement[2452-2470]"
    }, {
      "left" : "paintIcon = new Paint();",
      "right" : "paintIcon = new Paint();",
      "info" : "ExpressionStatement[2476-2500]:ExpressionStatement[2476-2500]"
    }, {
      "left" : "paintIcon.setFilterBitmap(true);",
      "right" : "paintIcon.setFilterBitmap(true);",
      "info" : "ExpressionStatement[2503-2535]:ExpressionStatement[2503-2535]"
    }, {
      "left" : "paintIcon.setAntiAlias(true);",
      "right" : "paintIcon.setAntiAlias(true);",
      "info" : "ExpressionStatement[2538-2567]:ExpressionStatement[2538-2567]"
    }, {
      "left" : "paintIcon.setColor(Color.BLACK);",
      "right" : "paintIcon.setColor(Color.BLACK);",
      "info" : "ExpressionStatement[2570-2602]:ExpressionStatement[2570-2602]"
    }, {
      "left" : "paintIcon.setStrokeWidth(3);",
      "right" : "paintIcon.setStrokeWidth(3);",
      "info" : "ExpressionStatement[2605-2633]:ExpressionStatement[2605-2633]"
    }, {
      "left" : "paintIconAction = new Paint();",
      "right" : "paintIconAction = new Paint();",
      "info" : "ExpressionStatement[2640-2670]:ExpressionStatement[2640-2670]"
    }, {
      "left" : "paintIconAction.setFilterBitmap(true);",
      "right" : "paintIconAction.setFilterBitmap(true);",
      "info" : "ExpressionStatement[2673-2711]:ExpressionStatement[2673-2711]"
    }, {
      "left" : "paintIconAction.setAntiAlias(true);",
      "right" : "paintIconAction.setAntiAlias(true);",
      "info" : "ExpressionStatement[2714-2749]:ExpressionStatement[2714-2749]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2759-2768]:MarkerAnnotation[2759-2768]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2770-2776]:Modifier[2770-2776]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2777-2781]:PrimitiveType[2777-2781]"
    }, {
      "left" : "initLayer",
      "right" : "initLayer",
      "info" : "SimpleName[2782-2791]:SimpleName[2782-2791]"
    }, {
      "left" : "OsmandMapTileView view",
      "right" : "OsmandMapTileView view",
      "info" : "SingleVariableDeclaration[2792-2814]:SingleVariableDeclaration[2792-2814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2816-2943]:Block[2816-2943]"
    }, {
      "left" : "this.view = view;",
      "right" : "this.view = view;",
      "info" : "ExpressionStatement[2820-2837]:ExpressionStatement[2820-2837]"
    }, {
      "left" : "osmandRenderer = view.getApplication().getResourceManager().getRenderer().getRenderer();",
      "right" : "osmandRenderer = view.getApplication().getResourceManager().getRenderer().getRenderer();",
      "info" : "ExpressionStatement[2840-2928]:ExpressionStatement[2840-2928]"
    }, {
      "left" : "initUI();",
      "right" : "initUI();",
      "info" : "ExpressionStatement[2931-2940]:ExpressionStatement[2931-2940]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2948-2955]:Modifier[2948-2955]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2956-2960]:PrimitiveType[2956-2960]"
    }, {
      "left" : "updatePaints",
      "right" : "updatePaints",
      "info" : "SimpleName[2961-2973]:SimpleName[2961-2973]"
    }, {
      "left" : "DrawSettings nightMode",
      "right" : "DrawSettings nightMode",
      "info" : "SingleVariableDeclaration[2974-2996]:SingleVariableDeclaration[2974-2996]"
    }, {
      "left" : "RotatedTileBox tileBox",
      "right" : "RotatedTileBox tileBox",
      "info" : "SingleVariableDeclaration[2998-3020]:SingleVariableDeclaration[2998-3020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3021-4846]:Block[3021-4846]"
    }, {
      "left" : "RenderingRulesStorage rrs = view.getApplication().getRendererRegistry().getCurrentSelectedRenderer();",
      "right" : "RenderingRulesStorage rrs = view.getApplication().getRendererRegistry().getCurrentSelectedRenderer();",
      "info" : "VariableDeclarationStatement[3025-3126]:VariableDeclarationStatement[3025-3126]"
    }, {
      "left" : "final boolean isNight = nightMode != null && nightMode.isNightMode();",
      "right" : "final boolean isNight = nightMode != null && nightMode.isNightMode();",
      "info" : "VariableDeclarationStatement[3129-3198]:VariableDeclarationStatement[3129-3198]"
    }, {
      "left" : "int hsh = calculateHash(rrs, isNight, tileBox.getMapDensity());",
      "right" : "int hsh = calculateHash(rrs, isNight, tileBox.getMapDensity());",
      "info" : "VariableDeclarationStatement[3201-3264]:VariableDeclarationStatement[3201-3264]"
    }, {
      "left" : "if (hsh != cachedHash)",
      "right" : "if (hsh != cachedHash)",
      "info" : "IfStatement[3267-4843]:IfStatement[3267-4843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3290-4843]:Block[3290-4843]"
    }, {
      "left" : "cachedHash = hsh;",
      "right" : "cachedHash = hsh;",
      "info" : "ExpressionStatement[3295-3312]:ExpressionStatement[3295-3312]"
    }, {
      "left" : "if (rrs != null)",
      "right" : "if (rrs != null)",
      "info" : "IfStatement[3385-4839]:IfStatement[3385-4839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3402-4839]:Block[3402-4839]"
    }, {
      "left" : "RenderingRuleSearchRequest req = new RenderingRuleSearchRequest(rrs);",
      "right" : "RenderingRuleSearchRequest req = new RenderingRuleSearchRequest(rrs);",
      "info" : "VariableDeclarationStatement[3408-3477]:VariableDeclarationStatement[3408-3477]"
    }, {
      "left" : "req.setBooleanFilter(rrs.PROPS.R_NIGHT_MODE, isNight);",
      "right" : "req.setBooleanFilter(rrs.PROPS.R_NIGHT_MODE, isNight);",
      "info" : "ExpressionStatement[3482-3536]:ExpressionStatement[3482-3536]"
    }, {
      "left" : "if (req.searchRenderingAttribute(\"route\"))",
      "right" : "if (req.searchRenderingAttribute(\"route\"))",
      "info" : "IfStatement[3541-4770]:IfStatement[3541-4770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3584-4637]:Block[3584-4637]"
    }, {
      "left" : "RenderingContext rc = new OsmandRenderer.RenderingContext(view.getContext());",
      "right" : "RenderingContext rc = new OsmandRenderer.RenderingContext(view.getContext());",
      "info" : "VariableDeclarationStatement[3591-3668]:VariableDeclarationStatement[3591-3668]"
    }, {
      "left" : "rc.setDensityValue((float) tileBox.getMapDensity());",
      "right" : "rc.setDensityValue((float) tileBox.getMapDensity());",
      "info" : "ExpressionStatement[3674-3726]:ExpressionStatement[3674-3726]"
    }, {
      "left" : "osmandRenderer.updatePaint(req, paint, 0, false, rc);",
      "right" : "osmandRenderer.updatePaint(req, paint, 0, false, rc);",
      "info" : "ExpressionStatement[3797-3850]:ExpressionStatement[3797-3850]"
    }, {
      "left" : "if(paint.getStrokeWidth() == 0)",
      "right" : "if(paint.getStrokeWidth() == 0)",
      "info" : "IfStatement[3856-3948]:IfStatement[3856-3948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3888-3948]:Block[3888-3948]"
    }, {
      "left" : "paint.setStrokeWidth(12 * view.getDensity());",
      "right" : "paint.setStrokeWidth(12 * view.getDensity());",
      "info" : "ExpressionStatement[3896-3941]:ExpressionStatement[3896-3941]"
    }, {
      "left" : "osmandRenderer.updatePaint(req, actionPaint, 2, false, rc);",
      "right" : "osmandRenderer.updatePaint(req, actionPaint, 2, false, rc);",
      "info" : "ExpressionStatement[3954-4013]:ExpressionStatement[3954-4013]"
    }, {
      "left" : "paintIconAction.setColorFilter(new PorterDuffColorFilter(actionPaint.getColor(), Mode.MULTIPLY));",
      "right" : "paintIconAction.setColorFilter(new PorterDuffColorFilter(actionPaint.getColor(), Mode.MULTIPLY));",
      "info" : "ExpressionStatement[4019-4116]:ExpressionStatement[4019-4116]"
    }, {
      "left" : "isPaint2 = osmandRenderer.updatePaint(req, paint2, 1, false, rc);",
      "right" : "isPaint2 = osmandRenderer.updatePaint(req, paint2, 1, false, rc);",
      "info" : "ExpressionStatement[4128-4193]:ExpressionStatement[4128-4193]"
    }, {
      "left" : "isPaint_1 = osmandRenderer.updatePaint(req, paint_1, -1, false, rc);",
      "right" : "isPaint_1 = osmandRenderer.updatePaint(req, paint_1, -1, false, rc);",
      "info" : "ExpressionStatement[4199-4267]:ExpressionStatement[4199-4267]"
    }, {
      "left" : "isShadowPaint = req.isSpecified(rrs.PROPS.R_SHADOW_RADIUS);",
      "right" : "isShadowPaint = req.isSpecified(rrs.PROPS.R_SHADOW_RADIUS);",
      "info" : "ExpressionStatement[4273-4332]:ExpressionStatement[4273-4332]"
    }, {
      "left" : "if(isShadowPaint)",
      "right" : "if(isShadowPaint)",
      "info" : "IfStatement[4338-4631]:IfStatement[4338-4631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4356-4631]:Block[4356-4631]"
    }, {
      "left" : "ColorFilter cf = new PorterDuffColorFilter(req.getIntPropertyValue(rrs.PROPS.R_SHADOW_COLOR), Mode.SRC_IN);",
      "right" : "ColorFilter cf = new PorterDuffColorFilter(req.getIntPropertyValue(rrs.PROPS.R_SHADOW_COLOR), Mode.SRC_IN);",
      "info" : "VariableDeclarationStatement[4364-4471]:VariableDeclarationStatement[4364-4471]"
    }, {
      "left" : "shadowPaint.setColorFilter(cf);",
      "right" : "shadowPaint.setColorFilter(cf);",
      "info" : "ExpressionStatement[4478-4509]:ExpressionStatement[4478-4509]"
    }, {
      "left" : "shadowPaint.setStrokeWidth(paint.getStrokeWidth() + 2 * rc.getComplexValue(req, rrs.PROPS.R_SHADOW_RADIUS));",
      "right" : "shadowPaint.setStrokeWidth(paint.getStrokeWidth() + 2 * rc.getComplexValue(req, rrs.PROPS.R_SHADOW_RADIUS));",
      "info" : "ExpressionStatement[4516-4624]:ExpressionStatement[4516-4624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4643-4770]:Block[4643-4770]"
    }, {
      "left" : "System.err.println(\"Rendering attribute route is not found !\");",
      "right" : "System.err.println(\"Rendering attribute route is not found !\");",
      "info" : "ExpressionStatement[4650-4713]:ExpressionStatement[4650-4713]"
    }, {
      "left" : "paint.setStrokeWidth(12 * view.getDensity());",
      "right" : "paint.setStrokeWidth(12 * view.getDensity());",
      "info" : "ExpressionStatement[4719-4764]:ExpressionStatement[4719-4764]"
    }, {
      "left" : "actionPaint.setStrokeWidth(7 * view.getScaleCoefficient());",
      "right" : "actionPaint.setStrokeWidth(7 * view.getScaleCoefficient());",
      "info" : "ExpressionStatement[4775-4834]:ExpressionStatement[4775-4834]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4852-4859]:Modifier[4852-4859]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4860-4863]:PrimitiveType[4860-4863]"
    }, {
      "left" : "calculateHash",
      "right" : "calculateHash",
      "info" : "SimpleName[4864-4877]:SimpleName[4864-4877]"
    }, {
      "left" : "Object... o",
      "right" : "Object... o",
      "info" : "SingleVariableDeclaration[4878-4889]:SingleVariableDeclaration[4878-4889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4891-4924]:Block[4891-4924]"
    }, {
      "left" : "return Arrays.hashCode(o);",
      "right" : "return Arrays.hashCode(o);",
      "info" : "ReturnStatement[4895-4921]:ReturnStatement[4895-4921]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4928-4937]:MarkerAnnotation[4928-4937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4939-4945]:Modifier[4939-4945]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4946-4950]:PrimitiveType[4946-4950]"
    }, {
      "left" : "onPrepareBufferImage",
      "right" : "onPrepareBufferImage",
      "info" : "SimpleName[4951-4971]:SimpleName[4951-4971]"
    }, {
      "left" : "Canvas canvas",
      "right" : "Canvas canvas",
      "info" : "SingleVariableDeclaration[4972-4985]:SingleVariableDeclaration[4972-4985]"
    }, {
      "left" : "RotatedTileBox tileBox",
      "right" : "RotatedTileBox tileBox",
      "info" : "SingleVariableDeclaration[4987-5009]:SingleVariableDeclaration[4987-5009]"
    }, {
      "left" : "DrawSettings settings",
      "right" : "DrawSettings settings",
      "info" : "SingleVariableDeclaration[5011-5032]:SingleVariableDeclaration[5011-5032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5034-6343]:Block[5034-6343]"
    }, {
      "left" : "path.reset();",
      "right" : "path.reset();",
      "info" : "ExpressionStatement[5038-5051]:ExpressionStatement[5038-5051]"
    }, {
      "left" : "if (helper.getFinalLocation() != null && helper.getRoute().isCalculated())",
      "right" : "if (helper.getFinalLocation() != null && helper.getRoute().isCalculated())",
      "info" : "IfStatement[5054-6338]:IfStatement[5054-6338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5129-6338]:Block[5129-6338]"
    }, {
      "left" : "updatePaints(settings, tileBox);",
      "right" : "updatePaints(settings, tileBox);",
      "info" : "ExpressionStatement[5134-5166]:ExpressionStatement[5134-5166]"
    }, {
      "left" : "if(coloredArrowUp == null)",
      "right" : "if(coloredArrowUp == null)",
      "info" : "IfStatement[5170-5502]:IfStatement[5170-5502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5197-5502]:Block[5197-5502]"
    }, {
      "left" : "Bitmap originalArrowUp = BitmapFactory.decodeResource(view.getResources(), R.drawable.h_arrow, null);",
      "right" : "Bitmap originalArrowUp = BitmapFactory.decodeResource(view.getResources(), R.drawable.h_arrow, null);",
      "info" : "VariableDeclarationStatement[5203-5304]:VariableDeclarationStatement[5203-5304]"
    }, {
      "left" : "coloredArrowUp = originalArrowUp;",
      "right" : "coloredArrowUp = originalArrowUp;",
      "info" : "ExpressionStatement[5309-5342]:ExpressionStatement[5309-5342]"
    }, {
      "left" : "int w = tileBox.getPixWidth();",
      "right" : "int w = tileBox.getPixWidth();",
      "info" : "VariableDeclarationStatement[5506-5536]:VariableDeclarationStatement[5506-5536]"
    }, {
      "left" : "int h = tileBox.getPixHeight();",
      "right" : "int h = tileBox.getPixHeight();",
      "info" : "VariableDeclarationStatement[5540-5571]:VariableDeclarationStatement[5540-5571]"
    }, {
      "left" : "Location lastProjection = helper.getLastProjection();",
      "right" : "Location lastProjection = helper.getLastProjection();",
      "info" : "VariableDeclarationStatement[5575-5628]:VariableDeclarationStatement[5575-5628]"
    }, {
      "left" : "final RotatedTileBox cp ;",
      "right" : "final RotatedTileBox cp ;",
      "info" : "VariableDeclarationStatement[5632-5657]:VariableDeclarationStatement[5632-5657]"
    }, {
      "left" : "if(lastProjection != null &&\n\t\t\t\t\ttileBox.containsLatLon(lastProjection.getLatitude(), lastProjection.getLongitude()))",
      "right" : "if(lastProjection != null &&\n\t\t\t\t\ttileBox.containsLatLon(lastProjection.getLatitude(), lastProjection.getLongitude()))",
      "info" : "IfStatement[5661-5881]:IfStatement[5661-5881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5779-5851]:Block[5779-5851]"
    }, {
      "left" : "cp = tileBox.copy();",
      "right" : "cp = tileBox.copy();",
      "info" : "ExpressionStatement[5785-5805]:ExpressionStatement[5785-5805]"
    }, {
      "left" : "cp.increasePixelDimensions(w /2, h);",
      "right" : "cp.increasePixelDimensions(w /2, h);",
      "info" : "ExpressionStatement[5810-5846]:ExpressionStatement[5810-5846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5857-5881]:Block[5857-5881]"
    }, {
      "left" : "cp = tileBox;",
      "right" : "cp = tileBox;",
      "info" : "ExpressionStatement[5863-5876]:ExpressionStatement[5863-5876]"
    }, {
      "left" : "final QuadRect latlonRect = cp.getLatLonBounds();",
      "right" : "final QuadRect latlonRect = cp.getLatLonBounds();",
      "info" : "VariableDeclarationStatement[5886-5935]:VariableDeclarationStatement[5886-5935]"
    }, {
      "left" : "double topLatitude = latlonRect.top;",
      "right" : "double topLatitude = latlonRect.top;",
      "info" : "VariableDeclarationStatement[5939-5975]:VariableDeclarationStatement[5939-5975]"
    }, {
      "left" : "double leftLongitude = latlonRect.left;",
      "right" : "double leftLongitude = latlonRect.left;",
      "info" : "VariableDeclarationStatement[5979-6018]:VariableDeclarationStatement[5979-6018]"
    }, {
      "left" : "double bottomLatitude = latlonRect.bottom;",
      "right" : "double bottomLatitude = latlonRect.bottom;",
      "info" : "VariableDeclarationStatement[6022-6064]:VariableDeclarationStatement[6022-6064]"
    }, {
      "left" : "double rightLongitude = latlonRect.right;",
      "right" : "double rightLongitude = latlonRect.right;",
      "info" : "VariableDeclarationStatement[6068-6109]:VariableDeclarationStatement[6068-6109]"
    }, {
      "left" : "double lat = topLatitude - bottomLatitude + 0.1;",
      "right" : "double lat = topLatitude - bottomLatitude + 0.1;",
      "info" : "VariableDeclarationStatement[6113-6161]:VariableDeclarationStatement[6113-6161]"
    }, {
      "left" : "double lon = rightLongitude - leftLongitude + 0.1;",
      "right" : "double lon = rightLongitude - leftLongitude + 0.1;",
      "info" : "VariableDeclarationStatement[6165-6215]:VariableDeclarationStatement[6165-6215]"
    }, {
      "left" : "drawLocations(tileBox, canvas, topLatitude + lat, leftLongitude - lon, bottomLatitude - lat, rightLongitude + lon);",
      "right" : "drawLocations(tileBox, canvas, topLatitude + lat, leftLongitude - lon, bottomLatitude - lat, rightLongitude + lon);",
      "info" : "ExpressionStatement[6219-6334]:ExpressionStatement[6219-6334]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6347-6356]:MarkerAnnotation[6347-6356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6358-6364]:Modifier[6358-6364]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6365-6369]:PrimitiveType[6365-6369]"
    }, {
      "left" : "onDraw",
      "right" : "onDraw",
      "info" : "SimpleName[6370-6376]:SimpleName[6370-6376]"
    }, {
      "left" : "Canvas canvas",
      "right" : "Canvas canvas",
      "info" : "SingleVariableDeclaration[6377-6390]:SingleVariableDeclaration[6377-6390]"
    }, {
      "left" : "RotatedTileBox tileBox",
      "right" : "RotatedTileBox tileBox",
      "info" : "SingleVariableDeclaration[6392-6414]:SingleVariableDeclaration[6392-6414]"
    }, {
      "left" : "DrawSettings settings",
      "right" : "DrawSettings settings",
      "info" : "SingleVariableDeclaration[6416-6437]:SingleVariableDeclaration[6416-6437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6439-6441]:Block[6439-6441]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6444-6451]:Modifier[6444-6451]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6452-6456]:PrimitiveType[6452-6456]"
    }, {
      "left" : "drawAction",
      "right" : "drawAction",
      "info" : "SimpleName[6457-6467]:SimpleName[6457-6467]"
    }, {
      "left" : "RotatedTileBox tb",
      "right" : "RotatedTileBox tb",
      "info" : "SingleVariableDeclaration[6468-6485]:SingleVariableDeclaration[6468-6485]"
    }, {
      "left" : "Canvas canvas",
      "right" : "Canvas canvas",
      "info" : "SingleVariableDeclaration[6487-6500]:SingleVariableDeclaration[6487-6500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6502-8008]:Block[6502-8008]"
    }, {
      "left" : "if (actionPoints.size() > 0)",
      "right" : "if (actionPoints.size() > 0)",
      "info" : "IfStatement[6506-8005]:IfStatement[6506-8005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6535-8005]:Block[6535-8005]"
    }, {
      "left" : "canvas.rotate(-tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "right" : "canvas.rotate(-tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "info" : "ExpressionStatement[6540-6615]:ExpressionStatement[6540-6615]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6619-8001]:TryStatement[6619-8001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6623-7907]:Block[6623-7907]"
    }, {
      "left" : "Path pth = new Path();",
      "right" : "Path pth = new Path();",
      "info" : "VariableDeclarationStatement[6629-6651]:VariableDeclarationStatement[6629-6651]"
    }, {
      "left" : "Matrix matrix = new Matrix();",
      "right" : "Matrix matrix = new Matrix();",
      "info" : "VariableDeclarationStatement[6656-6685]:VariableDeclarationStatement[6656-6685]"
    }, {
      "left" : "boolean first = true;",
      "right" : "boolean first = true;",
      "info" : "VariableDeclarationStatement[6690-6711]:VariableDeclarationStatement[6690-6711]"
    }, {
      "left" : "int x = 0, px = 0, py = 0, y = 0;",
      "right" : "int x = 0, px = 0, py = 0, y = 0;",
      "info" : "VariableDeclarationStatement[6716-6749]:VariableDeclarationStatement[6716-6749]"
    }, {
      "left" : "for (int i = 0; i < actionPoints.size(); i++)",
      "right" : "for (int i = 0; i < actionPoints.size(); i++)",
      "info" : "ForStatement[6754-7901]:ForStatement[6754-7901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6800-7901]:Block[6800-7901]"
    }, {
      "left" : "Location o = actionPoints.get(i);",
      "right" : "Location o = actionPoints.get(i);",
      "info" : "VariableDeclarationStatement[6807-6840]:VariableDeclarationStatement[6807-6840]"
    }, {
      "left" : "if (o == null)",
      "right" : "if (o == null)",
      "info" : "IfStatement[6846-7895]:IfStatement[6846-7895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6861-7573]:Block[6861-7573]"
    }, {
      "left" : "canvas.drawPath(pth, actionPaint);",
      "right" : "canvas.drawPath(pth, actionPaint);",
      "info" : "ExpressionStatement[6869-6903]:ExpressionStatement[6889-6923]"
    }, {
      "left" : "double angleRad = Math.atan2(y - py, x - px);",
      "right" : "double angleRad = Math.atan2(y - py, x - px);",
      "info" : "VariableDeclarationStatement[6910-6955]:VariableDeclarationStatement[6930-6975]"
    }, {
      "left" : "double angle = (angleRad * 180 / Math.PI) + 90f;",
      "right" : "double angle = (angleRad * 180 / Math.PI) + 90f;",
      "info" : "VariableDeclarationStatement[6962-7010]:VariableDeclarationStatement[6982-7030]"
    }, {
      "left" : "double distSegment = FloatMath.sqrt((y - py) * (y - py) + (x - px) * (x - px));",
      "right" : "double distSegment = FloatMath.sqrt((y - py) * (y - py) + (x - px) * (x - px));",
      "info" : "VariableDeclarationStatement[7017-7096]:VariableDeclarationStatement[7037-7116]"
    }, {
      "left" : "if (distSegment == 0)",
      "right" : "if (distSegment == 0)",
      "info" : "IfStatement[7103-7151]:IfStatement[7123-7171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7125-7151]:Block[7145-7171]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[7134-7143]:ContinueStatement[7154-7163]"
    }, {
      "left" : "float pdx = x - px;",
      "right" : "float pdx = x - px;",
      "info" : "VariableDeclarationStatement[7207-7226]:VariableDeclarationStatement[7227-7246]"
    }, {
      "left" : "float pdy = y - py;",
      "right" : "float pdy = y - py;",
      "info" : "VariableDeclarationStatement[7233-7252]:VariableDeclarationStatement[7253-7272]"
    }, {
      "left" : "matrix.reset();",
      "right" : "matrix.reset();",
      "info" : "ExpressionStatement[7259-7274]:ExpressionStatement[7279-7294]"
    }, {
      "left" : "matrix.postTranslate(0, -actionArrow.getHeight() / 2);",
      "right" : "matrix.postTranslate(0, -actionArrow.getHeight() / 2);",
      "info" : "ExpressionStatement[7281-7335]:ExpressionStatement[7301-7355]"
    }, {
      "left" : "matrix.postRotate((float) angle, actionArrow.getWidth() / 2, 0);",
      "right" : "matrix.postRotate((float) angle, actionArrow.getWidth() / 2, 0);",
      "info" : "ExpressionStatement[7342-7406]:ExpressionStatement[7362-7426]"
    }, {
      "left" : "matrix.postTranslate(px + pdx - actionArrow.getWidth() / 2, py + pdy);",
      "right" : "matrix.postTranslate(px + pdx - actionArrow.getWidth() / 2, py + pdy);",
      "info" : "ExpressionStatement[7413-7483]:ExpressionStatement[7433-7503]"
    }, {
      "left" : "canvas.drawBitmap(actionArrow, matrix, paintIconAction);",
      "right" : "canvas.drawBitmap(actionArrow, matrix, paintIconAction);",
      "info" : "ExpressionStatement[7490-7546]:ExpressionStatement[7510-7566]"
    }, {
      "left" : "first = true;",
      "right" : "first = true;",
      "info" : "ExpressionStatement[7553-7566]:ExpressionStatement[6869-6882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7579-7895]:Block[7579-7895]"
    }, {
      "left" : "px = x;",
      "right" : "px = x;",
      "info" : "ExpressionStatement[7587-7594]:ExpressionStatement[7587-7594]"
    }, {
      "left" : "py = y;",
      "right" : "py = y;",
      "info" : "ExpressionStatement[7601-7608]:ExpressionStatement[7601-7608]"
    }, {
      "left" : "x = (int) tb.getPixXFromLatLon(o.getLatitude(), o.getLongitude());",
      "right" : "x = (int) tb.getPixXFromLatLon(o.getLatitude(), o.getLongitude());",
      "info" : "ExpressionStatement[7615-7681]:ExpressionStatement[7615-7681]"
    }, {
      "left" : "y = (int) tb.getPixYFromLatLon(o.getLatitude(), o.getLongitude());",
      "right" : "y = (int) tb.getPixYFromLatLon(o.getLatitude(), o.getLongitude());",
      "info" : "ExpressionStatement[7688-7754]:ExpressionStatement[7688-7754]"
    }, {
      "left" : "if (first)",
      "right" : "if (first)",
      "info" : "IfStatement[7761-7888]:IfStatement[7761-7888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7772-7848]:Block[7772-7848]"
    }, {
      "left" : "pth.reset();",
      "right" : "pth.reset();",
      "info" : "ExpressionStatement[7781-7793]:ExpressionStatement[7781-7793]"
    }, {
      "left" : "pth.moveTo(x, y);",
      "right" : "pth.moveTo(x, y);",
      "info" : "ExpressionStatement[7801-7818]:ExpressionStatement[7801-7818]"
    }, {
      "left" : "first = false;",
      "right" : "first = false;",
      "info" : "ExpressionStatement[7826-7840]:ExpressionStatement[7826-7840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7854-7888]:Block[7854-7888]"
    }, {
      "left" : "pth.lineTo(x, y);",
      "right" : "pth.lineTo(x, y);",
      "info" : "ExpressionStatement[7863-7880]:ExpressionStatement[7863-7880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7916-8001]:Block[7916-8001]"
    }, {
      "left" : "canvas.rotate(tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "right" : "canvas.rotate(tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "info" : "ExpressionStatement[7922-7996]:ExpressionStatement[7922-7996]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8011-8018]:Modifier[8011-8018]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8019-8023]:PrimitiveType[8019-8023]"
    }, {
      "left" : "drawSegment",
      "right" : "drawSegment",
      "info" : "SimpleName[8024-8035]:SimpleName[8024-8035]"
    }, {
      "left" : "RotatedTileBox tb",
      "right" : "RotatedTileBox tb",
      "info" : "SingleVariableDeclaration[8036-8053]:SingleVariableDeclaration[8036-8053]"
    }, {
      "left" : "Canvas canvas",
      "right" : "Canvas canvas",
      "info" : "SingleVariableDeclaration[8055-8068]:SingleVariableDeclaration[8055-8068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8070-9108]:Block[8070-9108]"
    }, {
      "left" : "if (points.size() > 0)",
      "right" : "if (points.size() > 0)",
      "info" : "IfStatement[8074-9105]:IfStatement[8074-9105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8097-9105]:Block[8097-9105]"
    }, {
      "left" : "canvas.rotate(-tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "right" : "canvas.rotate(-tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "info" : "ExpressionStatement[8102-8177]:ExpressionStatement[8102-8177]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8181-9101]:TryStatement[8181-9101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8185-9007]:Block[8185-9007]"
    }, {
      "left" : "TIntArrayList tx = new TIntArrayList();",
      "right" : "TIntArrayList tx = new TIntArrayList();",
      "info" : "VariableDeclarationStatement[8191-8230]:VariableDeclarationStatement[8191-8230]"
    }, {
      "left" : "TIntArrayList ty = new TIntArrayList();",
      "right" : "TIntArrayList ty = new TIntArrayList();",
      "info" : "VariableDeclarationStatement[8235-8274]:VariableDeclarationStatement[8235-8274]"
    }, {
      "left" : "for (int i = 0; i < points.size(); i++)",
      "right" : "for (int i = 0; i < points.size(); i++)",
      "info" : "ForStatement[8279-8543]:ForStatement[8279-8543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8319-8543]:Block[8319-8543]"
    }, {
      "left" : "Location o = points.get(i);",
      "right" : "Location o = points.get(i);",
      "info" : "VariableDeclarationStatement[8326-8353]:VariableDeclarationStatement[8326-8353]"
    }, {
      "left" : "int x = (int) tb.getPixXFromLatLon(o.getLatitude(), o.getLongitude());",
      "right" : "int x = (int) tb.getPixXFromLatLon(o.getLatitude(), o.getLongitude());",
      "info" : "VariableDeclarationStatement[8359-8429]:VariableDeclarationStatement[8359-8429]"
    }, {
      "left" : "int y = (int) tb.getPixYFromLatLon(o.getLatitude(), o.getLongitude());",
      "right" : "int y = (int) tb.getPixYFromLatLon(o.getLatitude(), o.getLongitude());",
      "info" : "VariableDeclarationStatement[8435-8505]:VariableDeclarationStatement[8435-8505]"
    }, {
      "left" : "tx.add(x);",
      "right" : "tx.add(x);",
      "info" : "ExpressionStatement[8511-8521]:ExpressionStatement[8511-8521]"
    }, {
      "left" : "ty.add(y);",
      "right" : "ty.add(y);",
      "info" : "ExpressionStatement[8527-8537]:ExpressionStatement[8527-8537]"
    }, {
      "left" : "calculatePath(tb, tx, ty, path);",
      "right" : "calculatePath(tb, tx, ty, path);",
      "info" : "ExpressionStatement[8548-8580]:ExpressionStatement[8548-8580]"
    }, {
      "left" : "if (isPaint_1)",
      "right" : "if (isPaint_1)",
      "info" : "IfStatement[8586-8645]:IfStatement[8586-8645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8601-8645]:Block[8601-8645]"
    }, {
      "left" : "canvas.drawPath(path, paint_1);",
      "right" : "canvas.drawPath(path, paint_1);",
      "info" : "ExpressionStatement[8608-8639]:ExpressionStatement[8608-8639]"
    }, {
      "left" : "if (isShadowPaint)",
      "right" : "if (isShadowPaint)",
      "info" : "IfStatement[8650-8717]:IfStatement[8650-8717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8669-8717]:Block[8669-8717]"
    }, {
      "left" : "canvas.drawPath(path, shadowPaint);",
      "right" : "canvas.drawPath(path, shadowPaint);",
      "info" : "ExpressionStatement[8676-8711]:ExpressionStatement[8676-8711]"
    }, {
      "left" : "canvas.drawPath(path, paint);",
      "right" : "canvas.drawPath(path, paint);",
      "info" : "ExpressionStatement[8722-8751]:ExpressionStatement[8722-8751]"
    }, {
      "left" : "if (isPaint2)",
      "right" : "if (isPaint2)",
      "info" : "IfStatement[8756-8813]:IfStatement[8756-8813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8770-8813]:Block[8770-8813]"
    }, {
      "left" : "canvas.drawPath(path, paint2);",
      "right" : "canvas.drawPath(path, paint2);",
      "info" : "ExpressionStatement[8777-8807]:ExpressionStatement[8777-8807]"
    }, {
      "left" : "if (tb.getZoomAnimation() == 0)",
      "right" : "if (tb.getZoomAnimation() == 0)",
      "info" : "IfStatement[8818-9002]:IfStatement[8818-9002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8850-9002]:Block[8850-9002]"
    }, {
      "left" : "TIntArrayList lst = new TIntArrayList(50);",
      "right" : "TIntArrayList lst = new TIntArrayList(50);",
      "info" : "VariableDeclarationStatement[8857-8899]:VariableDeclarationStatement[8857-8899]"
    }, {
      "left" : "calculateSplitPaths(tb, tx, ty, lst);",
      "right" : "calculateSplitPaths(tb, tx, ty, lst);",
      "info" : "ExpressionStatement[8905-8942]:ExpressionStatement[8905-8942]"
    }, {
      "left" : "drawArrowsOverPath(canvas, lst, coloredArrowUp);",
      "right" : "drawArrowsOverPath(canvas, lst, coloredArrowUp);",
      "info" : "ExpressionStatement[8948-8996]:ExpressionStatement[8948-8996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9016-9101]:Block[9016-9101]"
    }, {
      "left" : "canvas.rotate(tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "right" : "canvas.rotate(tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());",
      "info" : "ExpressionStatement[9022-9096]:ExpressionStatement[9022-9096]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9112-9119]:Modifier[9112-9119]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9120-9124]:PrimitiveType[9120-9124]"
    }, {
      "left" : "drawArrowsOverPath",
      "right" : "drawArrowsOverPath",
      "info" : "SimpleName[9125-9143]:SimpleName[9125-9143]"
    }, {
      "left" : "Canvas canvas",
      "right" : "Canvas canvas",
      "info" : "SingleVariableDeclaration[9144-9157]:SingleVariableDeclaration[9144-9157]"
    }, {
      "left" : "TIntArrayList lst",
      "right" : "TIntArrayList lst",
      "info" : "SingleVariableDeclaration[9159-9176]:SingleVariableDeclaration[9159-9176]"
    }, {
      "left" : "Bitmap arrow",
      "right" : "Bitmap arrow",
      "info" : "SingleVariableDeclaration[9178-9190]:SingleVariableDeclaration[9178-9190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9192-10499]:Block[9192-10499]"
    }, {
      "left" : "float pxStep = arrow.getHeight() * 4f;",
      "right" : "float pxStep = arrow.getHeight() * 4f;",
      "info" : "VariableDeclarationStatement[9196-9234]:VariableDeclarationStatement[9196-9234]"
    }, {
      "left" : "Matrix matrix = new Matrix();",
      "right" : "Matrix matrix = new Matrix();",
      "info" : "VariableDeclarationStatement[9237-9266]:VariableDeclarationStatement[9237-9266]"
    }, {
      "left" : "float dist = 0;",
      "right" : "float dist = 0;",
      "info" : "VariableDeclarationStatement[9269-9284]:VariableDeclarationStatement[9269-9284]"
    }, {
      "left" : "for (int i = 0; i < lst.size(); i += 4)",
      "right" : "for (int i = 0; i < lst.size(); i += 4)",
      "info" : "ForStatement[9287-10496]:ForStatement[9287-10496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9327-10496]:Block[9327-10496]"
    }, {
      "left" : "int px = lst.get(i);",
      "right" : "int px = lst.get(i);",
      "info" : "VariableDeclarationStatement[9332-9352]:VariableDeclarationStatement[9332-9352]"
    }, {
      "left" : "int py = lst.get(i + 1);",
      "right" : "int py = lst.get(i + 1);",
      "info" : "VariableDeclarationStatement[9356-9380]:VariableDeclarationStatement[9356-9380]"
    }, {
      "left" : "int x = lst.get(i + 2);",
      "right" : "int x = lst.get(i + 2);",
      "info" : "VariableDeclarationStatement[9384-9407]:VariableDeclarationStatement[9384-9407]"
    }, {
      "left" : "int y = lst.get(i + 3);",
      "right" : "int y = lst.get(i + 3);",
      "info" : "VariableDeclarationStatement[9411-9434]:VariableDeclarationStatement[9411-9434]"
    }, {
      "left" : "float angleRad = (float) Math.atan2(y - py, x - px);",
      "right" : "float angleRad = (float) Math.atan2(y - py, x - px);",
      "info" : "VariableDeclarationStatement[9438-9490]:VariableDeclarationStatement[9438-9490]"
    }, {
      "left" : "float angle = (float) (angleRad * 180 / Math.PI) + 90f;",
      "right" : "float angle = (float) (angleRad * 180 / Math.PI) + 90f;",
      "info" : "VariableDeclarationStatement[9494-9549]:VariableDeclarationStatement[9494-9549]"
    }, {
      "left" : "float distSegment = FloatMath.sqrt((y - py) * (y - py) + (x - px) * (x - px));",
      "right" : "float distSegment = FloatMath.sqrt((y - py) * (y - py) + (x - px) * (x - px));",
      "info" : "VariableDeclarationStatement[9553-9631]:VariableDeclarationStatement[9553-9631]"
    }, {
      "left" : "if(distSegment == 0)",
      "right" : "if(distSegment == 0)",
      "info" : "IfStatement[9635-9676]:IfStatement[9635-9676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9656-9676]:Block[9656-9676]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[9662-9671]:ContinueStatement[9662-9671]"
    }, {
      "left" : "int len = (int) (distSegment / pxStep);",
      "right" : "int len = (int) (distSegment / pxStep);",
      "info" : "VariableDeclarationStatement[9680-9719]:VariableDeclarationStatement[9680-9719]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[9723-10492]:IfStatement[9723-10492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9736-10127]:Block[9736-10127]"
    }, {
      "left" : "float pdx = ((x - px) / len);",
      "right" : "float pdx = ((x - px) / len);",
      "info" : "VariableDeclarationStatement[9742-9771]:VariableDeclarationStatement[9742-9771]"
    }, {
      "left" : "float pdy = ((y - py) / len);",
      "right" : "float pdy = ((y - py) / len);",
      "info" : "VariableDeclarationStatement[9776-9805]:VariableDeclarationStatement[9776-9805]"
    }, {
      "left" : "for (int k = 1; k <= len; k++)",
      "right" : "for (int k = 1; k <= len; k++)",
      "info" : "ForStatement[9810-10122]:ForStatement[9810-10122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9841-10122]:Block[9841-10122]"
    }, {
      "left" : "matrix.reset();",
      "right" : "matrix.reset();",
      "info" : "ExpressionStatement[9848-9863]:ExpressionStatement[9848-9863]"
    }, {
      "left" : "matrix.postTranslate(0, -arrow.getHeight() / 2);",
      "right" : "matrix.postTranslate(0, -arrow.getHeight() / 2);",
      "info" : "ExpressionStatement[9869-9917]:ExpressionStatement[9869-9917]"
    }, {
      "left" : "matrix.postRotate(angle, arrow.getWidth() / 2, 0);",
      "right" : "matrix.postRotate(angle, arrow.getWidth() / 2, 0);",
      "info" : "ExpressionStatement[9923-9973]:ExpressionStatement[9923-9973]"
    }, {
      "left" : "matrix.postTranslate(px + k * pdx- arrow.getWidth() / 2 , py + pdy * k);",
      "right" : "matrix.postTranslate(px + k * pdx- arrow.getWidth() / 2 , py + pdy * k);",
      "info" : "ExpressionStatement[9979-10051]:ExpressionStatement[9979-10051]"
    }, {
      "left" : "canvas.drawBitmap(arrow, matrix, paintIcon);",
      "right" : "canvas.drawBitmap(arrow, matrix, paintIcon);",
      "info" : "ExpressionStatement[10057-10101]:ExpressionStatement[10057-10101]"
    }, {
      "left" : "dist = 0;",
      "right" : "dist = 0;",
      "info" : "ExpressionStatement[10107-10116]:ExpressionStatement[10107-10116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10133-10492]:Block[10133-10492]"
    }, {
      "left" : "if(dist > pxStep)",
      "right" : "if(dist > pxStep)",
      "info" : "IfStatement[10139-10487]:IfStatement[10139-10487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10157-10448]:Block[10157-10448]"
    }, {
      "left" : "matrix.reset();",
      "right" : "matrix.reset();",
      "info" : "ExpressionStatement[10164-10179]:ExpressionStatement[10164-10179]"
    }, {
      "left" : "matrix.postTranslate(0, -arrow.getHeight() / 2);",
      "right" : "matrix.postTranslate(0, -arrow.getHeight() / 2);",
      "info" : "ExpressionStatement[10185-10233]:ExpressionStatement[10185-10233]"
    }, {
      "left" : "matrix.postRotate(angle, arrow.getWidth() / 2, 0);",
      "right" : "matrix.postRotate(angle, arrow.getWidth() / 2, 0);",
      "info" : "ExpressionStatement[10239-10289]:ExpressionStatement[10239-10289]"
    }, {
      "left" : "matrix.postTranslate(px + (x - px) / 2 - arrow.getWidth() / 2, py + (y - py) / 2);",
      "right" : "matrix.postTranslate(px + (x - px) / 2 - arrow.getWidth() / 2, py + (y - py) / 2);",
      "info" : "ExpressionStatement[10295-10377]:ExpressionStatement[10295-10377]"
    }, {
      "left" : "canvas.drawBitmap(arrow, matrix, paintIcon);",
      "right" : "canvas.drawBitmap(arrow, matrix, paintIcon);",
      "info" : "ExpressionStatement[10383-10427]:ExpressionStatement[10383-10427]"
    }, {
      "left" : "dist = 0;",
      "right" : "dist = 0;",
      "info" : "ExpressionStatement[10433-10442]:ExpressionStatement[10433-10442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10454-10487]:Block[10454-10487]"
    }, {
      "left" : "dist += distSegment;",
      "right" : "dist += distSegment;",
      "info" : "ExpressionStatement[10461-10481]:ExpressionStatement[10461-10481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10503-10509]:Modifier[10503-10509]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10510-10514]:PrimitiveType[10510-10514]"
    }, {
      "left" : "drawLocations",
      "right" : "drawLocations",
      "info" : "SimpleName[10515-10528]:SimpleName[10515-10528]"
    }, {
      "left" : "RotatedTileBox tb",
      "right" : "RotatedTileBox tb",
      "info" : "SingleVariableDeclaration[10529-10546]:SingleVariableDeclaration[10529-10546]"
    }, {
      "left" : "Canvas canvas",
      "right" : "Canvas canvas",
      "info" : "SingleVariableDeclaration[10548-10561]:SingleVariableDeclaration[10548-10561]"
    }, {
      "left" : "double topLatitude",
      "right" : "double topLatitude",
      "info" : "SingleVariableDeclaration[10563-10581]:SingleVariableDeclaration[10563-10581]"
    }, {
      "left" : "double leftLongitude",
      "right" : "double leftLongitude",
      "info" : "SingleVariableDeclaration[10583-10603]:SingleVariableDeclaration[10583-10603]"
    }, {
      "left" : "double bottomLatitude",
      "right" : "double bottomLatitude",
      "info" : "SingleVariableDeclaration[10605-10626]:SingleVariableDeclaration[10605-10626]"
    }, {
      "left" : "double rightLongitude",
      "right" : "double rightLongitude",
      "info" : "SingleVariableDeclaration[10628-10649]:SingleVariableDeclaration[10628-10649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10651-12176]:Block[10651-12176]"
    }, {
      "left" : "points.clear();",
      "right" : "points.clear();",
      "info" : "ExpressionStatement[10655-10670]:ExpressionStatement[10655-10670]"
    }, {
      "left" : "actionPoints.clear();",
      "right" : "actionPoints.clear();",
      "info" : "ExpressionStatement[10673-10694]:ExpressionStatement[10673-10694]"
    }, {
      "left" : "boolean previousVisible = false;",
      "right" : "boolean previousVisible = false;",
      "info" : "VariableDeclarationStatement[10697-10729]:VariableDeclarationStatement[10697-10729]"
    }, {
      "left" : "Location lastProjection = helper.getLastProjection();",
      "right" : "Location lastProjection = helper.getLastProjection();",
      "info" : "VariableDeclarationStatement[10732-10785]:VariableDeclarationStatement[10732-10785]"
    }, {
      "left" : "if (lastProjection != null)",
      "right" : "if (lastProjection != null)",
      "info" : "IfStatement[10788-11096]:IfStatement[10788-11096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10816-11096]:Block[10816-11096]"
    }, {
      "left" : "if (leftLongitude <= lastProjection.getLongitude() && lastProjection.getLongitude() <= rightLongitude\n\t\t\t\t\t&& bottomLatitude <= lastProjection.getLatitude() && lastProjection.getLatitude() <= topLatitude)",
      "right" : "if (leftLongitude <= lastProjection.getLongitude() && lastProjection.getLongitude() <= rightLongitude\n\t\t\t\t\t&& bottomLatitude <= lastProjection.getLatitude() && lastProjection.getLatitude() <= topLatitude)",
      "info" : "IfStatement[10821-11092]:IfStatement[10821-11092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11026-11092]:Block[11026-11092]"
    }, {
      "left" : "points.add(lastProjection);",
      "right" : "points.add(lastProjection);",
      "info" : "ExpressionStatement[11032-11059]:ExpressionStatement[11032-11059]"
    }, {
      "left" : "previousVisible = true;",
      "right" : "previousVisible = true;",
      "info" : "ExpressionStatement[11064-11087]:ExpressionStatement[11064-11087]"
    }, {
      "left" : "List<Location> routeNodes = helper.getRoute().getRouteLocations();",
      "right" : "List<Location> routeNodes = helper.getRoute().getRouteLocations();",
      "info" : "VariableDeclarationStatement[11099-11165]:VariableDeclarationStatement[11099-11165]"
    }, {
      "left" : "int cd = helper.getRoute().getCurrentRoute();",
      "right" : "int cd = helper.getRoute().getCurrentRoute();",
      "info" : "VariableDeclarationStatement[11168-11213]:VariableDeclarationStatement[11168-11213]"
    }, {
      "left" : "List<RouteDirectionInfo> rd = helper.getRouteDirections();",
      "right" : "List<RouteDirectionInfo> rd = helper.getRouteDirections();",
      "info" : "VariableDeclarationStatement[11216-11274]:VariableDeclarationStatement[11216-11274]"
    }, {
      "left" : "Iterator<RouteDirectionInfo> it = rd.iterator();",
      "right" : "Iterator<RouteDirectionInfo> it = rd.iterator();",
      "info" : "VariableDeclarationStatement[11277-11325]:VariableDeclarationStatement[11277-11325]"
    }, {
      "left" : "for (int i = 0; i < routeNodes.size(); i++)",
      "right" : "for (int i = 0; i < routeNodes.size(); i++)",
      "info" : "ForStatement[11328-11946]:ForStatement[11328-11946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11372-11946]:Block[11372-11946]"
    }, {
      "left" : "Location ls = routeNodes.get(i);",
      "right" : "Location ls = routeNodes.get(i);",
      "info" : "VariableDeclarationStatement[11377-11409]:VariableDeclarationStatement[11377-11409]"
    }, {
      "left" : "if (leftLongitude <= ls.getLongitude() && ls.getLongitude() <= rightLongitude && bottomLatitude <= ls.getLatitude()\n\t\t\t\t\t&& ls.getLatitude() <= topLatitude)",
      "right" : "if (leftLongitude <= ls.getLongitude() && ls.getLongitude() <= rightLongitude && bottomLatitude <= ls.getLatitude()\n\t\t\t\t\t&& ls.getLatitude() <= topLatitude)",
      "info" : "IfStatement[11413-11942]:IfStatement[11413-11942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11570-11811]:Block[11570-11811]"
    }, {
      "left" : "points.add(ls);",
      "right" : "points.add(ls);",
      "info" : "ExpressionStatement[11576-11591]:ExpressionStatement[11576-11591]"
    }, {
      "left" : "if (!previousVisible)",
      "right" : "if (!previousVisible)",
      "info" : "IfStatement[11601-11778]:IfStatement[11601-11778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11623-11778]:Block[11623-11778]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[11630-11772]:IfStatement[11630-11772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11641-11693]:Block[11641-11693]"
    }, {
      "left" : "points.add(0, routeNodes.get(i - 1));",
      "right" : "points.add(0, routeNodes.get(i - 1));",
      "info" : "ExpressionStatement[11649-11686]:ExpressionStatement[11649-11686]"
    }, {
      "left" : "if (lastProjection != null)",
      "right" : "if (lastProjection != null)",
      "info" : "IfStatement[11699-11772]:IfStatement[11699-11772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11727-11772]:Block[11727-11772]"
    }, {
      "left" : "points.add(0, lastProjection);",
      "right" : "points.add(0, lastProjection);",
      "info" : "ExpressionStatement[11735-11765]:ExpressionStatement[11735-11765]"
    }, {
      "left" : "previousVisible = true;",
      "right" : "previousVisible = true;",
      "info" : "ExpressionStatement[11783-11806]:ExpressionStatement[11783-11806]"
    }, {
      "left" : "if (previousVisible)",
      "right" : "if (previousVisible)",
      "info" : "IfStatement[11817-11942]:IfStatement[11817-11942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11838-11942]:Block[11838-11942]"
    }, {
      "left" : "points.add(ls);",
      "right" : "points.add(ls);",
      "info" : "ExpressionStatement[11844-11859]:ExpressionStatement[11844-11859]"
    }, {
      "left" : "drawSegment(tb, canvas);",
      "right" : "drawSegment(tb, canvas);",
      "info" : "ExpressionStatement[11864-11888]:ExpressionStatement[11864-11888]"
    }, {
      "left" : "previousVisible = false;",
      "right" : "previousVisible = false;",
      "info" : "ExpressionStatement[11893-11917]:ExpressionStatement[11893-11917]"
    }, {
      "left" : "points.clear();",
      "right" : "points.clear();",
      "info" : "ExpressionStatement[11922-11937]:ExpressionStatement[11922-11937]"
    }, {
      "left" : "drawSegment(tb, canvas);",
      "right" : "drawSegment(tb, canvas);",
      "info" : "ExpressionStatement[11949-11973]:ExpressionStatement[11949-11973]"
    }, {
      "left" : "if (tb.getZoom() >= 14)",
      "right" : "if (tb.getZoom() >= 14)",
      "info" : "IfStatement[11976-12173]:IfStatement[11976-12173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12000-12173]:Block[12000-12173]"
    }, {
      "left" : "calculateActionPoints(topLatitude, leftLongitude, bottomLatitude, rightLongitude, lastProjection,\n\t\t\t\t\trouteNodes, cd, it, tb.getZoom());",
      "right" : "calculateActionPoints(topLatitude, leftLongitude, bottomLatitude, rightLongitude, lastProjection,\n\t\t\t\t\trouteNodes, cd, it, tb.getZoom());",
      "info" : "ExpressionStatement[12005-12142]:ExpressionStatement[12005-12142]"
    }, {
      "left" : "drawAction(tb, canvas);",
      "right" : "drawAction(tb, canvas);",
      "info" : "ExpressionStatement[12146-12169]:ExpressionStatement[12146-12169]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12180-12187]:Modifier[12180-12187]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12188-12192]:PrimitiveType[12188-12192]"
    }, {
      "left" : "calculateActionPoints",
      "right" : "calculateActionPoints",
      "info" : "SimpleName[12193-12214]:SimpleName[12193-12214]"
    }, {
      "left" : "double topLatitude",
      "right" : "double topLatitude",
      "info" : "SingleVariableDeclaration[12215-12233]:SingleVariableDeclaration[12215-12233]"
    }, {
      "left" : "double leftLongitude",
      "right" : "double leftLongitude",
      "info" : "SingleVariableDeclaration[12235-12255]:SingleVariableDeclaration[12235-12255]"
    }, {
      "left" : "double bottomLatitude",
      "right" : "double bottomLatitude",
      "info" : "SingleVariableDeclaration[12257-12278]:SingleVariableDeclaration[12257-12278]"
    }, {
      "left" : "double rightLongitude",
      "right" : "double rightLongitude",
      "info" : "SingleVariableDeclaration[12283-12304]:SingleVariableDeclaration[12283-12304]"
    }, {
      "left" : "Location lastProjection",
      "right" : "Location lastProjection",
      "info" : "SingleVariableDeclaration[12306-12329]:SingleVariableDeclaration[12306-12329]"
    }, {
      "left" : "List<Location> routeNodes",
      "right" : "List<Location> routeNodes",
      "info" : "SingleVariableDeclaration[12331-12356]:SingleVariableDeclaration[12331-12356]"
    }, {
      "left" : "int cd",
      "right" : "int cd",
      "info" : "SingleVariableDeclaration[12358-12364]:SingleVariableDeclaration[12358-12364]"
    }, {
      "left" : "Iterator<RouteDirectionInfo> it",
      "right" : "Iterator<RouteDirectionInfo> it",
      "info" : "SingleVariableDeclaration[12369-12400]:SingleVariableDeclaration[12369-12400]"
    }, {
      "left" : "int zoom",
      "right" : "int zoom",
      "info" : "SingleVariableDeclaration[12402-12410]:SingleVariableDeclaration[12402-12410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12412-15089]:Block[12412-14572]"
    }, {
      "left" : "RouteDirectionInfo nf = null;",
      "right" : "RouteDirectionInfo nf = null;",
      "info" : "VariableDeclarationStatement[12416-12445]:VariableDeclarationStatement[12416-12445]"
    }, {
      "left" : "double DISTANCE_ACTION = 35;",
      "right" : "double DISTANCE_ACTION = 35;",
      "info" : "VariableDeclarationStatement[12451-12479]:VariableDeclarationStatement[12451-12479]"
    }, {
      "left" : "if(zoom >= 17)",
      "right" : "if(zoom >= 17)",
      "info" : "IfStatement[12482-12631]:IfStatement[12482-12631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12497-12527]:Block[12497-12527]"
    }, {
      "left" : "DISTANCE_ACTION = 15;",
      "right" : "DISTANCE_ACTION = 15;",
      "info" : "ExpressionStatement[12502-12523]:ExpressionStatement[12502-12523]"
    }, {
      "left" : "if (zoom == 15)",
      "right" : "if (zoom == 15)",
      "info" : "IfStatement[12533-12631]:IfStatement[12533-12631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12549-12579]:Block[12549-12579]"
    }, {
      "left" : "DISTANCE_ACTION = 70;",
      "right" : "DISTANCE_ACTION = 70;",
      "info" : "ExpressionStatement[12554-12575]:ExpressionStatement[12554-12575]"
    }, {
      "left" : "if (zoom < 15)",
      "right" : "if (zoom < 15)",
      "info" : "IfStatement[12585-12631]:IfStatement[12585-12631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12600-12631]:Block[12600-12631]"
    }, {
      "left" : "DISTANCE_ACTION = 110;",
      "right" : "DISTANCE_ACTION = 110;",
      "info" : "ExpressionStatement[12605-12627]:ExpressionStatement[12605-12627]"
    }, {
      "left" : "double actionDist = 0;",
      "right" : "double actionDist = 0;",
      "info" : "VariableDeclarationStatement[12634-12656]:VariableDeclarationStatement[12634-12656]"
    }, {
      "left" : "Location previousAction = null;",
      "right" : "Location previousAction = null;",
      "info" : "VariableDeclarationStatement[12659-12690]:VariableDeclarationStatement[12659-12690]"
    }, {
      "left" : "actionPoints.clear();",
      "right" : "actionPoints.clear();",
      "info" : "ExpressionStatement[12694-12715]:ExpressionStatement[12694-12715]"
    }, {
      "left" : "int prevFinishPoint = -2;",
      "right" : "int prevFinishPoint = -1;",
      "info" : "VariableDeclarationStatement[12718-12743]:VariableDeclarationStatement[12718-12743]"
    }, {
      "left" : "2",
      "right" : "1",
      "info" : "NumberLiteral[12741-12742]:NumberLiteral[12741-12742]"
    }, {
      "left" : "for (int i = 0; i < routeNodes.size(); i++)",
      "right" : "for (int routePoint = 0; routePoint < routeNodes.size(); routePoint++)",
      "info" : "ForStatement[12746-15024]:ForStatement[12746-14507]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[12755-12756]:SimpleName[12755-12765]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[12762-12763]:SimpleName[12771-12781]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[12785-12786]:SimpleName[12803-12813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12790-15024]:Block[12817-14507]"
    }, {
      "left" : "Location ls = routeNodes.get(i);",
      "right" : "Location loc = routeNodes.get(routePoint);",
      "info" : "VariableDeclarationStatement[12795-12827]:VariableDeclarationStatement[12822-12864]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[12804-12806]:SimpleName[12831-12834]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[12824-12825]:SimpleName[12852-12862]"
    }, {
      "left" : "if(nf != null)",
      "right" : "if(nf != null)",
      "info" : "IfStatement[12831-12988]:IfStatement[12868-13034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12846-12988]:Block[12883-13034]"
    }, {
      "left" : "int pnt = nf.routeEndPointOffset == 0 ? nf.routePointOffset : nf.routeEndPointOffset;",
      "right" : "int pnt = nf.routeEndPointOffset == 0 ? nf.routePointOffset : nf.routeEndPointOffset;",
      "info" : "VariableDeclarationStatement[12852-12937]:VariableDeclarationStatement[12889-12974]"
    }, {
      "left" : "if(pnt < i + cd)",
      "right" : "if(pnt < routePoint + cd)",
      "info" : "IfStatement[12942-12983]:IfStatement[12979-13029]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[12951-12952]:SimpleName[12988-12998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12960-12983]:Block[13006-13029]"
    }, {
      "left" : "nf = null;",
      "right" : "nf = null;",
      "info" : "ExpressionStatement[12967-12977]:ExpressionStatement[13013-13023]"
    }, {
      "left" : "while (nf == null && it.hasNext())",
      "right" : "while (nf == null && it.hasNext())",
      "info" : "WhileStatement[12992-13189]:WhileStatement[13038-13244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13027-13189]:Block[13073-13244]"
    }, {
      "left" : "nf = it.next();",
      "right" : "nf = it.next();",
      "info" : "ExpressionStatement[13033-13048]:ExpressionStatement[13079-13094]"
    }, {
      "left" : "int pnt = nf.routeEndPointOffset == 0 ? nf.routePointOffset : nf.routeEndPointOffset;",
      "right" : "int pnt = nf.routeEndPointOffset == 0 ? nf.routePointOffset : nf.routeEndPointOffset;",
      "info" : "VariableDeclarationStatement[13053-13138]:VariableDeclarationStatement[13099-13184]"
    }, {
      "left" : "if (pnt < i + cd)",
      "right" : "if (pnt < routePoint + cd)",
      "info" : "IfStatement[13143-13184]:IfStatement[13189-13239]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[13153-13154]:SimpleName[13199-13209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13161-13184]:Block[13216-13239]"
    }, {
      "left" : "nf = null;",
      "right" : "nf = null;",
      "info" : "ExpressionStatement[13168-13178]:ExpressionStatement[13223-13233]"
    }, {
      "left" : "boolean action = nf != null && (nf.routePointOffset == i + cd ||\n\t\t\t\t\t(nf.routePointOffset <= i + cd && i + cd  <= nf.routeEndPointOffset));",
      "right" : "boolean action = nf != null && (nf.routePointOffset == routePoint + cd ||\n\t\t\t\t\t(nf.routePointOffset <= routePoint + cd && routePoint + cd  <= nf.routeEndPointOffset));",
      "info" : "VariableDeclarationStatement[13193-13333]:VariableDeclarationStatement[13248-13415]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[13248-13249]:SimpleName[13303-13313]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[13287-13288]:SimpleName[13351-13361]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[13297-13298]:SimpleName[13370-13380]"
    }, {
      "left" : "if(!action && previousAction == null)",
      "right" : "if(!action && previousAction == null)",
      "info" : "IfStatement[13337-13395]:IfStatement[13419-13501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13375-13395]:Block[13732-13752]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[13381-13390]:ContinueStatement[13738-13747]"
    }, {
      "left" : "boolean visible = leftLongitude <= ls.getLongitude() && ls.getLongitude() <= rightLongitude && bottomLatitude <= ls.getLatitude()\n\t\t\t\t\t&& ls.getLatitude() <= topLatitude;",
      "right" : "boolean visible = leftLongitude <= loc.getLongitude() && loc.getLongitude() <= rightLongitude && bottomLatitude <= loc.getLatitude()\n\t\t\t\t\t&& loc.getLatitude() <= topLatitude;",
      "info" : "VariableDeclarationStatement[13399-13569]:VariableDeclarationStatement[13505-13679]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[13434-13436]:SimpleName[13540-13543]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[13455-13457]:SimpleName[13562-13565]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[13512-13514]:SimpleName[13620-13623]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[13537-13539]:SimpleName[13646-13649]"
    }, {
      "left" : "!action",
      "right" : "!action",
      "info" : "PrefixExpression[13576-13583]:PrefixExpression[13760-13767]"
    }, {
      "left" : "if(previousAction != null)",
      "right" : "if (!action)",
      "info" : "IfStatement[13591-14032]:IfStatement[13756-14503]"
    }, {
      "left" : "previousAction != null",
      "right" : "previousAction == null",
      "info" : "InfixExpression[13594-13616]:InfixExpression[13708-13730]"
    }, {
      "left" : "!=",
      "right" : "==",
      "info" : "INFIX_EXPRESSION_OPERATOR[13609-13611]:INFIX_EXPRESSION_OPERATOR[13723-13725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13618-14032]:Block[13769-14214]"
    }, {
      "left" : "float dist = ls.distanceTo(previousAction);",
      "right" : "float dist = loc.distanceTo(previousAction);",
      "info" : "VariableDeclarationStatement[13625-13668]:VariableDeclarationStatement[13805-13849]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[13638-13640]:SimpleName[13818-13821]"
    }, {
      "left" : "actionDist += dist;",
      "right" : "actionDist += dist;",
      "info" : "ExpressionStatement[13674-13693]:ExpressionStatement[13854-13873]"
    }, {
      "left" : "if(actionDist >= DISTANCE_ACTION)",
      "right" : "if (actionDist >= DISTANCE_ACTION)",
      "info" : "IfStatement[13699-14026]:IfStatement[13878-14209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13733-13957]:Block[13913-14141]"
    }, {
      "left" : "actionPoints.add(calculateProjection(1 - (actionDist - DISTANCE_ACTION) / dist, previousAction, ls));",
      "right" : "actionPoints.add(calculateProjection(1 - (actionDist - DISTANCE_ACTION) / dist, previousAction, loc));",
      "info" : "ExpressionStatement[13741-13842]:ExpressionStatement[13920-14022]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[13837-13839]:SimpleName[14016-14019]"
    }, {
      "left" : "actionPoints.add(null);",
      "right" : "actionPoints.add(null);",
      "info" : "ExpressionStatement[13849-13872]:ExpressionStatement[14028-14051]"
    }, {
      "left" : "prevFinishPoint = i;",
      "right" : "prevFinishPoint = routePoint;",
      "info" : "ExpressionStatement[13879-13899]:ExpressionStatement[14057-14086]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[13897-13898]:SimpleName[14075-14085]"
    }, {
      "left" : "previousAction = null;",
      "right" : "previousAction = null;",
      "info" : "ExpressionStatement[13906-13928]:ExpressionStatement[14092-14114]"
    }, {
      "left" : "actionDist = 0;",
      "right" : "actionDist = 0;",
      "info" : "ExpressionStatement[13935-13950]:ExpressionStatement[14120-14135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13963-14026]:Block[14147-14209]"
    }, {
      "left" : "actionPoints.add(ls);",
      "right" : "actionPoints.add(loc);",
      "info" : "ExpressionStatement[13971-13992]:ExpressionStatement[14154-14176]"
    }, {
      "left" : "actionPoints",
      "right" : "actionPoints",
      "info" : "METHOD_INVOCATION_RECEIVER[13971-13983]:METHOD_INVOCATION_RECEIVER[14404-14416]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[13988-13990]:SimpleName[14171-14174]"
    }, {
      "left" : "previousAction = ls;",
      "right" : "previousAction = loc;",
      "info" : "ExpressionStatement[13999-14019]:ExpressionStatement[14182-14203]"
    }, {
      "left" : "ls",
      "right" : "loc",
      "info" : "SimpleName[14016-14018]:SimpleName[14199-14202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14043-15020]:Block[14220-14503]"
    }, {
      "left" : "previousAction == null",
      "right" : "previousAction == null",
      "info" : "InfixExpression[14121-14143]:InfixExpression[14250-14272]"
    }, {
      "left" : "int ind = actionPoints.size();",
      "right" : "int ind = actionPoints.size();",
      "info" : "VariableDeclarationStatement[14187-14217]:VariableDeclarationStatement[14779-14809]"
    }, {
      "left" : "Location",
      "right" : "Location",
      "info" : "SimpleType[14224-14232]:SimpleType[14812-14820]"
    }, {
      "left" : "double dist = 0;",
      "right" : "double dist = 0;",
      "info" : "VariableDeclarationStatement[14255-14271]:VariableDeclarationStatement[14840-14856]"
    }, {
      "left" : "for (int k = i - 1; k >= -1; k--)",
      "right" : "for (int k = routePoint - 1; k >= -1; k--)",
      "info" : "ForStatement[14278-14928]:ForStatement[14859-15426]"
    }, {
      "left" : "i",
      "right" : "routePoint",
      "info" : "SimpleName[14291-14292]:SimpleName[14872-14882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14312-14928]:Block[14902-15426]"
    }, {
      "left" : "Location l = k == -1 ? lastProjection : routeNodes.get(k);",
      "right" : "Location l = k == -1 ? lastProjection : routeNodes.get(k);",
      "info" : "VariableDeclarationStatement[14321-14379]:VariableDeclarationStatement[14907-14965]"
    }, {
      "left" : "float loc = lprevious.distanceTo(l);",
      "right" : "float locDist = lprevious.distanceTo(l);",
      "info" : "VariableDeclarationStatement[14387-14423]:VariableDeclarationStatement[14969-15009]"
    }, {
      "left" : "loc",
      "right" : "locDist",
      "info" : "SimpleName[14393-14396]:SimpleName[14975-14982]"
    }, {
      "left" : "if(prevFinishPoint == k)",
      "right" : "if (prevFinishPoint == k)",
      "info" : "IfStatement[14431-14622]:IfStatement[15283-15422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14456-14622]:Block[15309-15422]"
    }, {
      "left" : "if(ind >= 2)",
      "right" : "if (ind >= 2)",
      "info" : "IfStatement[14466-14568]:IfStatement[15315-15406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14479-14568]:Block[15329-15406]"
    }, {
      "left" : "actionPoints.remove(ind - 2);",
      "right" : "actionPoints.remove(ind - 2);",
      "info" : "ExpressionStatement[14490-14519]:ExpressionStatement[15336-15365]"
    }, {
      "left" : "actionPoints.remove(ind - 2);",
      "right" : "actionPoints.remove(ind - 2);",
      "info" : "ExpressionStatement[14529-14558]:ExpressionStatement[15371-15400]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[14607-14613]:BreakStatement[15411-15417]"
    }, {
      "left" : "dist += loc;",
      "right" : "dist += locDist;",
      "info" : "ExpressionStatement[14630-14642]:ExpressionStatement[15013-15029]"
    }, {
      "left" : "loc",
      "right" : "locDist",
      "info" : "SimpleName[14638-14641]:SimpleName[15021-15028]"
    }, {
      "left" : "if (dist >= DISTANCE_ACTION)",
      "right" : "if (dist >= DISTANCE_ACTION)",
      "info" : "IfStatement[14650-14912]:IfStatement[15033-15279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14679-14839]:Block[15062-15218]"
    }, {
      "left" : "if(loc > 1)",
      "right" : "if (locDist > 1)",
      "info" : "IfStatement[14689-14815]:IfStatement[15068-15202]"
    }, {
      "left" : "loc",
      "right" : "locDist",
      "info" : "SimpleName[14692-14695]:SimpleName[15072-15079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14701-14815]:Block[15085-15202]"
    }, {
      "left" : "actionPoints.add(ind, calculateProjection(1 - (dist - DISTANCE_ACTION) / loc, lprevious, l));",
      "right" : "actionPoints.add(ind,\n\t\t\t\t\t\t\tcalculateProjection(1 - (dist - DISTANCE_ACTION) / locDist, lprevious, l));",
      "info" : "ExpressionStatement[14712-14805]:ExpressionStatement[15092-15196]"
    }, {
      "left" : "loc",
      "right" : "locDist",
      "info" : "SimpleName[14785-14788]:SimpleName[15172-15179]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[14824-14830]:BreakStatement[15207-15213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14845-14912]:Block[15224-15279]"
    }, {
      "left" : "actionPoints.add(ind, l);",
      "right" : "actionPoints.add(ind, l);",
      "info" : "ExpressionStatement[14855-14880]:ExpressionStatement[15230-15255]"
    }, {
      "left" : "lprevious = l;",
      "right" : "lprevious = l;",
      "info" : "ExpressionStatement[14889-14903]:ExpressionStatement[15260-15274]"
    }, {
      "left" : "actionPoints",
      "right" : "actionPoints",
      "info" : "METHOD_INVOCATION_RECEIVER[14941-14953]:METHOD_INVOCATION_RECEIVER[14154-14166]"
    }, {
      "left" : "previousAction",
      "right" : "prevFinishPoint",
      "info" : "SimpleName[14968-14982]:SimpleName[14457-14472]"
    }, {
      "left" : "previousAction = ls;",
      "right" : "prevFinishPoint = -1;",
      "info" : "ExpressionStatement[14968-14988]:ExpressionStatement[14457-14478]"
    }, {
      "left" : "actionDist = 0;",
      "right" : "actionDist = 0;",
      "info" : "ExpressionStatement[14994-15009]:ExpressionStatement[14483-14498]"
    }, {
      "left" : "if(previousAction != null)",
      "right" : "if(previousAction != null)",
      "info" : "IfStatement[15027-15086]:IfStatement[14510-14569]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15054-15086]:Block[14537-14569]"
    }, {
      "left" : "actionPoints.add(null);",
      "right" : "actionPoints.add(null);",
      "info" : "ExpressionStatement[15059-15082]:ExpressionStatement[14542-14565]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15093-15100]:Modifier[15433-15440]"
    }, {
      "left" : "Location",
      "right" : "Location",
      "info" : "SimpleType[15101-15109]:SimpleType[15441-15449]"
    }, {
      "left" : "calculateProjection",
      "right" : "calculateProjection",
      "info" : "SimpleName[15110-15129]:SimpleName[15450-15469]"
    }, {
      "left" : "double part",
      "right" : "double part",
      "info" : "SingleVariableDeclaration[15130-15141]:SingleVariableDeclaration[15470-15481]"
    }, {
      "left" : "Location lp",
      "right" : "Location lp",
      "info" : "SingleVariableDeclaration[15143-15154]:SingleVariableDeclaration[15483-15494]"
    }, {
      "left" : "Location l",
      "right" : "Location l",
      "info" : "SingleVariableDeclaration[15156-15166]:SingleVariableDeclaration[15496-15506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15168-15382]:Block[15508-15722]"
    }, {
      "left" : "Location p = new Location(l);",
      "right" : "Location p = new Location(l);",
      "info" : "VariableDeclarationStatement[15172-15201]:VariableDeclarationStatement[15512-15541]"
    }, {
      "left" : "p.setLatitude(lp.getLatitude() + part * (l.getLatitude() - lp.getLatitude()));",
      "right" : "p.setLatitude(lp.getLatitude() + part * (l.getLatitude() - lp.getLatitude()));",
      "info" : "ExpressionStatement[15204-15282]:ExpressionStatement[15544-15622]"
    }, {
      "left" : "p.setLongitude(lp.getLongitude() + part * (l.getLongitude() - lp.getLongitude()));",
      "right" : "p.setLongitude(lp.getLongitude() + part * (l.getLongitude() - lp.getLongitude()));",
      "info" : "ExpressionStatement[15285-15367]:ExpressionStatement[15625-15707]"
    }, {
      "left" : "return p;",
      "right" : "return p;",
      "info" : "ReturnStatement[15370-15379]:ReturnStatement[15710-15719]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15386-15392]:Modifier[15726-15732]"
    }, {
      "left" : "RoutingHelper",
      "right" : "RoutingHelper",
      "info" : "SimpleType[15393-15406]:SimpleType[15733-15746]"
    }, {
      "left" : "getHelper",
      "right" : "getHelper",
      "info" : "SimpleName[15407-15416]:SimpleName[15747-15756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15419-15440]:Block[15759-15780]"
    }, {
      "left" : "return helper;",
      "right" : "return helper;",
      "info" : "ReturnStatement[15423-15437]:ReturnStatement[15763-15777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15475-15481]:Modifier[15815-15821]"
    }, {
      "left" : "Path",
      "right" : "Path",
      "info" : "SimpleType[15482-15486]:SimpleType[15822-15826]"
    }, {
      "left" : "getPath",
      "right" : "getPath",
      "info" : "SimpleName[15487-15494]:SimpleName[15827-15834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15497-15516]:Block[15837-15856]"
    }, {
      "left" : "return path;",
      "right" : "return path;",
      "info" : "ReturnStatement[15501-15513]:ReturnStatement[15841-15853]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15521-15530]:MarkerAnnotation[15861-15870]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15532-15538]:Modifier[15872-15878]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15539-15543]:PrimitiveType[15879-15883]"
    }, {
      "left" : "destroyLayer",
      "right" : "destroyLayer",
      "info" : "SimpleName[15544-15556]:SimpleName[15884-15896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15559-15566]:Block[15899-15906]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15568-15577]:MarkerAnnotation[15908-15917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15579-15585]:Modifier[15919-15925]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[15586-15593]:PrimitiveType[15926-15933]"
    }, {
      "left" : "drawInScreenPixels",
      "right" : "drawInScreenPixels",
      "info" : "SimpleName[15594-15612]:SimpleName[15934-15952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15615-15635]:Block[15955-15975]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15619-15632]:ReturnStatement[15959-15972]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15638-15647]:MarkerAnnotation[15978-15987]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15649-15655]:Modifier[15989-15995]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[15656-15663]:PrimitiveType[15996-16003]"
    }, {
      "left" : "onLongPressEvent",
      "right" : "onLongPressEvent",
      "info" : "SimpleName[15664-15680]:SimpleName[16004-16020]"
    }, {
      "left" : "PointF point",
      "right" : "PointF point",
      "info" : "SingleVariableDeclaration[15681-15693]:SingleVariableDeclaration[16021-16033]"
    }, {
      "left" : "RotatedTileBox tileBox",
      "right" : "RotatedTileBox tileBox",
      "info" : "SingleVariableDeclaration[15695-15717]:SingleVariableDeclaration[16035-16057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15719-15739]:Block[16059-16079]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15723-15736]:ReturnStatement[16063-16076]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15742-15751]:MarkerAnnotation[16082-16091]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15753-15759]:Modifier[16093-16099]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[15760-15767]:PrimitiveType[16100-16107]"
    }, {
      "left" : "onSingleTap",
      "right" : "onSingleTap",
      "info" : "SimpleName[15768-15779]:SimpleName[16108-16119]"
    }, {
      "left" : "PointF point",
      "right" : "PointF point",
      "info" : "SingleVariableDeclaration[15780-15792]:SingleVariableDeclaration[16120-16132]"
    }, {
      "left" : "RotatedTileBox tileBox",
      "right" : "RotatedTileBox tileBox",
      "info" : "SingleVariableDeclaration[15794-15816]:SingleVariableDeclaration[16134-16156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15818-15838]:Block[16158-16178]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15822-15835]:ReturnStatement[16162-16175]"
    } ]
  },
  "interFileMappings" : { }
}