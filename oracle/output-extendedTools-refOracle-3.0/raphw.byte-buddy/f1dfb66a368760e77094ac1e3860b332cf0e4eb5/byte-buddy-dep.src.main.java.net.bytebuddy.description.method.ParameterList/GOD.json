{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "TypeDeclaration[682-12483]:TypeDeclaration[682-12019]"
    }, {
      "left" : "GenericTypeList asTypeList();",
      "right" : "GenericTypeList asTypeList();",
      "info" : "MethodDeclaration[853-882]:MethodDeclaration[853-882]"
    }, {
      "left" : "boolean hasExplicitMetaData();",
      "right" : "boolean hasExplicitMetaData();",
      "info" : "MethodDeclaration[888-1155]:MethodDeclaration[888-1155]"
    }, {
      "left" : "AbstractBase",
      "right" : "AbstractBase",
      "info" : "TypeDeclaration[1161-1700]:TypeDeclaration[1161-1844]"
    }, {
      "left" : "public boolean hasExplicitMetaData()",
      "right" : "public boolean hasExplicitMetaData()",
      "info" : "MethodDeclaration[1373-1694]:MethodDeclaration[1373-1694]"
    }, {
      "left" : "ForLoadedExecutable",
      "right" : "ForLoadedExecutable",
      "info" : "TypeDeclaration[1706-9345]:TypeDeclaration[1850-9025]"
    }, {
      "left" : "private static final JavaMethod GET_PARAMETERS;",
      "right" : "private static final JavaMethod GET_PARAMETERS;",
      "info" : "FieldDeclaration[1927-2093]:FieldDeclaration[2071-2237]"
    }, {
      "left" : "private final Object[] parameter;",
      "right" : "private final Object[] parameter;",
      "info" : "FieldDeclaration[2732-2875]:FieldDeclaration[2876-3019]"
    }, {
      "left" : "protected ForLoadedExecutable(Object[] parameter)",
      "right" : "protected ForLoadedExecutable(Object[] parameter)",
      "info" : "MethodDeclaration[2885-3201]:MethodDeclaration[3029-3345]"
    }, {
      "left" : "public static ParameterList of(Method method)",
      "right" : "public static ParameterList of(Method method)",
      "info" : "MethodDeclaration[3211-3655]:MethodDeclaration[3355-3799]"
    }, {
      "left" : "public static ParameterList of(Constructor<?> constructor)",
      "right" : "public static ParameterList of(Constructor<?> constructor)",
      "info" : "MethodDeclaration[3665-4157]:MethodDeclaration[3809-4301]"
    }, {
      "left" : "public ParameterDescription get(int index)",
      "right" : "public ParameterDescription get(int index)",
      "info" : "MethodDeclaration[4167-4328]:MethodDeclaration[4311-4472]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[4338-4422]:MethodDeclaration[4482-4566]"
    }, {
      "left" : "public GenericTypeList asTypeList()",
      "right" : "public GenericTypeList asTypeList()",
      "info" : "MethodDeclaration[4432-4823]:MethodDeclaration[4576-4967]"
    }, {
      "left" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "right" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "info" : "MethodDeclaration[4833-4967]:MethodDeclaration[1704-1838]"
    }, {
      "left" : "OfLegacyVmMethod",
      "right" : "OfLegacyVmMethod",
      "info" : "TypeDeclaration[4977-7104]:TypeDeclaration[4977-6944]"
    }, {
      "left" : "private final Method method;",
      "right" : "private final Method method;",
      "info" : "FieldDeclaration[5241-5340]:FieldDeclaration[5241-5340]"
    }, {
      "left" : "private final Class<?>[] parameterType;",
      "right" : "private final Class<?>[] parameterType;",
      "info" : "FieldDeclaration[5354-5483]:FieldDeclaration[5354-5483]"
    }, {
      "left" : "private final Annotation[][] parameterAnnotation;",
      "right" : "private final Annotation[][] parameterAnnotation;",
      "info" : "FieldDeclaration[5497-5658]:FieldDeclaration[5497-5658]"
    }, {
      "left" : "protected OfLegacyVmMethod(Method method)",
      "right" : "protected OfLegacyVmMethod(Method method)",
      "info" : "MethodDeclaration[5672-6083]:MethodDeclaration[5672-6083]"
    }, {
      "left" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "right" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "info" : "MethodDeclaration[6097-6243]:MethodDeclaration[1704-1838]"
    }, {
      "left" : "public ParameterDescription get(int index)",
      "right" : "public ParameterDescription get(int index)",
      "info" : "MethodDeclaration[6257-6487]:MethodDeclaration[6097-6327]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[6501-6601]:MethodDeclaration[6341-6441]"
    }, {
      "left" : "public GenericTypeList asTypeList()",
      "right" : "public GenericTypeList asTypeList()",
      "info" : "MethodDeclaration[6615-7094]:MethodDeclaration[6455-6934]"
    }, {
      "left" : "OfLegacyVmConstructor",
      "right" : "OfLegacyVmConstructor",
      "info" : "TypeDeclaration[7114-9339]:TypeDeclaration[6954-9019]"
    }, {
      "left" : "private final Constructor<?> constructor;",
      "right" : "private final Constructor<?> constructor;",
      "info" : "FieldDeclaration[7388-7505]:FieldDeclaration[7228-7345]"
    }, {
      "left" : "private final Class<?>[] parameterType;",
      "right" : "private final Class<?>[] parameterType;",
      "info" : "FieldDeclaration[7519-7648]:FieldDeclaration[7359-7488]"
    }, {
      "left" : "private final Annotation[][] parameterAnnotation;",
      "right" : "private final Annotation[][] parameterAnnotation;",
      "info" : "FieldDeclaration[7662-7823]:FieldDeclaration[7502-7663]"
    }, {
      "left" : "public OfLegacyVmConstructor(Constructor<?> constructor)",
      "right" : "public OfLegacyVmConstructor(Constructor<?> constructor)",
      "info" : "MethodDeclaration[7837-8298]:MethodDeclaration[7677-8138]"
    }, {
      "left" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "right" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "info" : "MethodDeclaration[8312-8458]:MethodDeclaration[1704-1838]"
    }, {
      "left" : "public ParameterDescription get(int index)",
      "right" : "public ParameterDescription get(int index)",
      "info" : "MethodDeclaration[8472-8712]:MethodDeclaration[8152-8392]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[8726-8826]:MethodDeclaration[8406-8506]"
    }, {
      "left" : "public GenericTypeList asTypeList()",
      "right" : "public GenericTypeList asTypeList()",
      "info" : "MethodDeclaration[8840-9329]:MethodDeclaration[8520-9009]"
    }, {
      "left" : "Explicit",
      "right" : "Explicit",
      "info" : "TypeDeclaration[9351-12089]:TypeDeclaration[9031-11625]"
    }, {
      "left" : "private final List<? extends ParameterDescription> parameterDescriptions;",
      "right" : "private final List<? extends ParameterDescription> parameterDescriptions;",
      "info" : "FieldDeclaration[9475-9653]:FieldDeclaration[9155-9333]"
    }, {
      "left" : "public Explicit(List<? extends ParameterDescription> parameterDescriptions)",
      "right" : "public Explicit(List<? extends ParameterDescription> parameterDescriptions)",
      "info" : "MethodDeclaration[9663-10055]:MethodDeclaration[9343-9735]"
    }, {
      "left" : "public static ParameterList latent(MethodDescription declaringMethod, List<? extends GenericTypeDescription> parameterTypes)",
      "right" : "public static ParameterList latent(MethodDescription declaringMethod, List<? extends GenericTypeDescription> parameterTypes)",
      "info" : "MethodDeclaration[10065-11290]:MethodDeclaration[9745-10970]"
    }, {
      "left" : "public ParameterDescription get(int index)",
      "right" : "public ParameterDescription get(int index)",
      "info" : "MethodDeclaration[11300-11425]:MethodDeclaration[10980-11105]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[11435-11531]:MethodDeclaration[11115-11211]"
    }, {
      "left" : "public GenericTypeList asTypeList()",
      "right" : "public GenericTypeList asTypeList()",
      "info" : "MethodDeclaration[11541-11939]:MethodDeclaration[11221-11619]"
    }, {
      "left" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "right" : "protected ParameterList wrap(List<ParameterDescription> values)",
      "info" : "MethodDeclaration[11949-12083]:MethodDeclaration[1704-1838]"
    }, {
      "left" : "Empty",
      "right" : "Empty",
      "info" : "TypeDeclaration[12095-12481]:TypeDeclaration[11631-12017]"
    }, {
      "left" : "public boolean hasExplicitMetaData()",
      "right" : "public boolean hasExplicitMetaData()",
      "info" : "MethodDeclaration[12261-12352]:MethodDeclaration[11797-11888]"
    }, {
      "left" : "public GenericTypeList asTypeList()",
      "right" : "public GenericTypeList asTypeList()",
      "info" : "MethodDeclaration[12362-12475]:MethodDeclaration[11898-12011]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[755-761]:Modifier[755-761]"
    }, {
      "left" : "interface",
      "right" : "interface",
      "info" : "TYPE_DECLARATION_KIND[762-771]:TYPE_DECLARATION_KIND[762-771]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleName[772-785]:SimpleName[772-785]"
    }, {
      "left" : "GenericTypeList",
      "right" : "GenericTypeList",
      "info" : "SimpleType[853-868]:SimpleType[853-868]"
    }, {
      "left" : "asTypeList",
      "right" : "asTypeList",
      "info" : "SimpleName[869-879]:SimpleName[869-879]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1125-1132]:PrimitiveType[1125-1132]"
    }, {
      "left" : "hasExplicitMetaData",
      "right" : "hasExplicitMetaData",
      "info" : "SimpleName[1133-1152]:SimpleName[1133-1152]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1236-1244]:Modifier[1236-1244]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1245-1250]:TYPE_DECLARATION_KIND[1245-1250]"
    }, {
      "left" : "AbstractBase",
      "right" : "AbstractBase",
      "info" : "SimpleName[1251-1263]:SimpleName[1251-1263]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1373-1382]:MarkerAnnotation[1373-1382]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1391-1397]:Modifier[1391-1397]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1398-1405]:PrimitiveType[1398-1405]"
    }, {
      "left" : "hasExplicitMetaData",
      "right" : "hasExplicitMetaData",
      "info" : "SimpleName[1406-1425]:SimpleName[1406-1425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1428-1694]:Block[1428-1694]"
    }, {
      "left" : "for (ParameterDescription parameterDescription : this)",
      "right" : "for (ParameterDescription parameterDescription : this)",
      "info" : "EnhancedForStatement[1442-1659]:EnhancedForStatement[1442-1659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1497-1659]:Block[1497-1659]"
    }, {
      "left" : "if (!parameterDescription.isNamed() || !parameterDescription.hasModifiers())",
      "right" : "if (!parameterDescription.isNamed() || !parameterDescription.hasModifiers())",
      "info" : "IfStatement[1515-1645]:IfStatement[1515-1645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1592-1645]:Block[1592-1645]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1614-1627]:ReturnStatement[1614-1627]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1672-1684]:ReturnStatement[1672-1684]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1869-1874]:TYPE_DECLARATION_KIND[2013-2018]"
    }, {
      "left" : "ForLoadedExecutable",
      "right" : "ForLoadedExecutable",
      "info" : "SimpleName[1875-1894]:SimpleName[2019-2038]"
    }, {
      "left" : "AbstractBase",
      "right" : "AbstractBase",
      "info" : "SimpleType[1903-1915]:SimpleType[2047-2059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2277-2722]:Block[2421-2866]"
    }, {
      "left" : "JavaMethod getParameters;",
      "right" : "JavaMethod getParameters;",
      "info" : "VariableDeclarationStatement[2291-2316]:VariableDeclarationStatement[2435-2460]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[2329-2668]:TryStatement[2473-2812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2333-2552]:Block[2477-2696]"
    }, {
      "left" : "Class<?> executableType = Class.forName(\"java.lang.reflect.Executable\");",
      "right" : "Class<?> executableType = Class.forName(\"java.lang.reflect.Executable\");",
      "info" : "VariableDeclarationStatement[2351-2423]:VariableDeclarationStatement[2495-2567]"
    }, {
      "left" : "getParameters = new JavaMethod.ForLoadedMethod(executableType.getDeclaredMethod(\"getParameters\"));",
      "right" : "getParameters = new JavaMethod.ForLoadedMethod(executableType.getDeclaredMethod(\"getParameters\"));",
      "info" : "ExpressionStatement[2440-2538]:ExpressionStatement[2584-2682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2579-2668]:Block[2723-2812]"
    }, {
      "left" : "getParameters = JavaMethod.ForUnavailableMethod.INSTANCE;",
      "right" : "getParameters = JavaMethod.ForUnavailableMethod.INSTANCE;",
      "info" : "ExpressionStatement[2597-2654]:ExpressionStatement[2741-2798]"
    }, {
      "left" : "GET_PARAMETERS = getParameters;",
      "right" : "GET_PARAMETERS = getParameters;",
      "info" : "ExpressionStatement[2681-2712]:ExpressionStatement[2825-2856]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3100-3109]:Modifier[3244-3253]"
    }, {
      "left" : "ForLoadedExecutable",
      "right" : "ForLoadedExecutable",
      "info" : "SimpleName[3110-3129]:SimpleName[3254-3273]"
    }, {
      "left" : "Object[] parameter",
      "right" : "Object[] parameter",
      "info" : "SingleVariableDeclaration[3130-3148]:SingleVariableDeclaration[3274-3292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3150-3201]:Block[3294-3345]"
    }, {
      "left" : "this.parameter = parameter;",
      "right" : "this.parameter = parameter;",
      "info" : "ExpressionStatement[3164-3191]:ExpressionStatement[3308-3335]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3410-3416]:Modifier[3554-3560]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3417-3423]:Modifier[3561-3567]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleType[3424-3437]:SimpleType[3568-3581]"
    }, {
      "left" : "of",
      "right" : "of",
      "info" : "SimpleName[3438-3440]:SimpleName[3582-3584]"
    }, {
      "left" : "Method method",
      "right" : "Method method",
      "info" : "SingleVariableDeclaration[3441-3454]:SingleVariableDeclaration[3585-3598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3456-3655]:Block[3600-3799]"
    }, {
      "left" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(method))\n                    : new OfLegacyVmMethod(method);",
      "right" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(method))\n                    : new OfLegacyVmMethod(method);",
      "info" : "ReturnStatement[3470-3645]:ReturnStatement[3614-3789]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3884-3890]:Modifier[4028-4034]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3891-3897]:Modifier[4035-4041]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleType[3898-3911]:SimpleType[4042-4055]"
    }, {
      "left" : "of",
      "right" : "of",
      "info" : "SimpleName[3912-3914]:SimpleName[4056-4058]"
    }, {
      "left" : "Constructor<?> constructor",
      "right" : "Constructor<?> constructor",
      "info" : "SingleVariableDeclaration[3915-3941]:SingleVariableDeclaration[4059-4085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3943-4157]:Block[4087-4301]"
    }, {
      "left" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(constructor))\n                    : new OfLegacyVmConstructor(constructor);",
      "right" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(constructor))\n                    : new OfLegacyVmConstructor(constructor);",
      "info" : "ReturnStatement[3957-4147]:ReturnStatement[4101-4291]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4167-4176]:MarkerAnnotation[4311-4320]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4185-4191]:Modifier[4329-4335]"
    }, {
      "left" : "ParameterDescription",
      "right" : "ParameterDescription",
      "info" : "SimpleType[4192-4212]:SimpleType[4336-4356]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[4213-4216]:SimpleName[4357-4360]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[4217-4226]:SingleVariableDeclaration[4361-4370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4228-4328]:Block[4372-4472]"
    }, {
      "left" : "return new ParameterDescription.ForLoadedParameter(parameter[index], index);",
      "right" : "return new ParameterDescription.ForLoadedParameter(parameter[index], index);",
      "info" : "ReturnStatement[4242-4318]:ReturnStatement[4386-4462]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4338-4347]:MarkerAnnotation[4482-4491]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4356-4362]:Modifier[4500-4506]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4363-4366]:PrimitiveType[4507-4510]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[4367-4371]:SimpleName[4511-4515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4374-4422]:Block[4518-4566]"
    }, {
      "left" : "return parameter.length;",
      "right" : "return parameter.length;",
      "info" : "ReturnStatement[4388-4412]:ReturnStatement[4532-4556]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4432-4441]:MarkerAnnotation[4576-4585]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4450-4456]:Modifier[4594-4600]"
    }, {
      "left" : "GenericTypeList",
      "right" : "GenericTypeList",
      "info" : "SimpleType[4457-4472]:SimpleType[4601-4616]"
    }, {
      "left" : "asTypeList",
      "right" : "asTypeList",
      "info" : "SimpleName[4473-4483]:SimpleName[4617-4627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4486-4823]:Block[4630-4967]"
    }, {
      "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameter.length);",
      "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameter.length);",
      "info" : "VariableDeclarationStatement[4500-4593]:VariableDeclarationStatement[4644-4737]"
    }, {
      "left" : "for (Object aParameter : parameter)",
      "right" : "for (Object aParameter : parameter)",
      "info" : "EnhancedForStatement[4606-4757]:EnhancedForStatement[4750-4901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4642-4757]:Block[4786-4901]"
    }, {
      "left" : "types.add(new GenericTypeDescription.LazyProjection.OfLoadedParameter(aParameter));",
      "right" : "types.add(new GenericTypeDescription.LazyProjection.OfLoadedParameter(aParameter));",
      "info" : "ExpressionStatement[4660-4743]:ExpressionStatement[4804-4887]"
    }, {
      "left" : "return new GenericTypeList.Explicit(types);",
      "right" : "return new GenericTypeList.Explicit(types);",
      "info" : "ReturnStatement[4770-4813]:ReturnStatement[4914-4957]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4833-4842]:MarkerAnnotation[1704-1713]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4851-4860]:Modifier[1722-1731]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleType[4861-4874]:SimpleType[1732-1745]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[4875-4879]:SimpleName[1746-1750]"
    }, {
      "left" : "List<ParameterDescription> values",
      "right" : "List<ParameterDescription> values",
      "info" : "SingleVariableDeclaration[4880-4913]:SingleVariableDeclaration[1751-1784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4915-4967]:Block[1786-1838]"
    }, {
      "left" : "return new Explicit(values);",
      "right" : "return new Explicit(values);",
      "info" : "ReturnStatement[4929-4957]:ReturnStatement[1800-1828]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5151-5160]:Modifier[5151-5160]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5161-5167]:Modifier[5161-5167]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[5168-5173]:TYPE_DECLARATION_KIND[5168-5173]"
    }, {
      "left" : "OfLegacyVmMethod",
      "right" : "OfLegacyVmMethod",
      "info" : "SimpleName[5174-5190]:SimpleName[5174-5190]"
    }, {
      "left" : "ParameterList.AbstractBase",
      "right" : "ParameterList.AbstractBase",
      "info" : "SimpleType[5199-5225]:SimpleType[5199-5225]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5846-5855]:Modifier[5846-5855]"
    }, {
      "left" : "OfLegacyVmMethod",
      "right" : "OfLegacyVmMethod",
      "info" : "SimpleName[5856-5872]:SimpleName[5856-5872]"
    }, {
      "left" : "Method method",
      "right" : "Method method",
      "info" : "SingleVariableDeclaration[5873-5886]:SingleVariableDeclaration[5873-5886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5888-6083]:Block[5888-6083]"
    }, {
      "left" : "this.method = method;",
      "right" : "this.method = method;",
      "info" : "ExpressionStatement[5906-5927]:ExpressionStatement[5906-5927]"
    }, {
      "left" : "this.parameterType = method.getParameterTypes();",
      "right" : "this.parameterType = method.getParameterTypes();",
      "info" : "ExpressionStatement[5944-5992]:ExpressionStatement[5944-5992]"
    }, {
      "left" : "this.parameterAnnotation = method.getParameterAnnotations();",
      "right" : "this.parameterAnnotation = method.getParameterAnnotations();",
      "info" : "ExpressionStatement[6009-6069]:ExpressionStatement[6009-6069]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6097-6106]:MarkerAnnotation[1704-1713]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6119-6128]:Modifier[1722-1731]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleType[6129-6142]:SimpleType[1732-1745]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[6143-6147]:SimpleName[1746-1750]"
    }, {
      "left" : "List<ParameterDescription> values",
      "right" : "List<ParameterDescription> values",
      "info" : "SingleVariableDeclaration[6148-6181]:SingleVariableDeclaration[1751-1784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6183-6243]:Block[1786-1838]"
    }, {
      "left" : "return new Explicit(values);",
      "right" : "return new Explicit(values);",
      "info" : "ReturnStatement[6201-6229]:ReturnStatement[1800-1828]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6257-6266]:MarkerAnnotation[6097-6106]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6279-6285]:Modifier[6119-6125]"
    }, {
      "left" : "ParameterDescription",
      "right" : "ParameterDescription",
      "info" : "SimpleType[6286-6306]:SimpleType[6126-6146]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[6307-6310]:SimpleName[6147-6150]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[6311-6320]:SingleVariableDeclaration[6151-6160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6322-6487]:Block[6162-6327]"
    }, {
      "left" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmMethod(method, index, parameterType[index], parameterAnnotation[index]);",
      "right" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmMethod(method, index, parameterType[index], parameterAnnotation[index]);",
      "info" : "ReturnStatement[6340-6473]:ReturnStatement[6180-6313]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6501-6510]:MarkerAnnotation[6341-6350]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6523-6529]:Modifier[6363-6369]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6530-6533]:PrimitiveType[6370-6373]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[6534-6538]:SimpleName[6374-6378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6541-6601]:Block[6381-6441]"
    }, {
      "left" : "return parameterType.length;",
      "right" : "return parameterType.length;",
      "info" : "ReturnStatement[6559-6587]:ReturnStatement[6399-6427]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6615-6624]:MarkerAnnotation[6455-6464]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6637-6643]:Modifier[6477-6483]"
    }, {
      "left" : "GenericTypeList",
      "right" : "GenericTypeList",
      "info" : "SimpleType[6644-6659]:SimpleType[6484-6499]"
    }, {
      "left" : "asTypeList",
      "right" : "asTypeList",
      "info" : "SimpleName[6660-6670]:SimpleName[6500-6510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6673-7094]:Block[6513-6934]"
    }, {
      "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
      "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
      "info" : "VariableDeclarationStatement[6691-6788]:VariableDeclarationStatement[6531-6628]"
    }, {
      "left" : "for (int index = 0; index < parameterType.length; index++)",
      "right" : "for (int index = 0; index < parameterType.length; index++)",
      "info" : "ForStatement[6805-7020]:ForStatement[6645-6860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6864-7020]:Block[6704-6860]"
    }, {
      "left" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmMethodParameter(method, index, parameterType[index]));",
      "right" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmMethodParameter(method, index, parameterType[index]));",
      "info" : "ExpressionStatement[6886-7002]:ExpressionStatement[6726-6842]"
    }, {
      "left" : "return new GenericTypeList.Explicit(types);",
      "right" : "return new GenericTypeList.Explicit(types);",
      "info" : "ReturnStatement[7037-7080]:ReturnStatement[6877-6920]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7293-7302]:Modifier[7133-7142]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7303-7309]:Modifier[7143-7149]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[7310-7315]:TYPE_DECLARATION_KIND[7150-7155]"
    }, {
      "left" : "OfLegacyVmConstructor",
      "right" : "OfLegacyVmConstructor",
      "info" : "SimpleName[7316-7337]:SimpleName[7156-7177]"
    }, {
      "left" : "ParameterList.AbstractBase",
      "right" : "ParameterList.AbstractBase",
      "info" : "SimpleType[7346-7372]:SimpleType[7186-7212]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8026-8032]:Modifier[7866-7872]"
    }, {
      "left" : "OfLegacyVmConstructor",
      "right" : "OfLegacyVmConstructor",
      "info" : "SimpleName[8033-8054]:SimpleName[7873-7894]"
    }, {
      "left" : "Constructor<?> constructor",
      "right" : "Constructor<?> constructor",
      "info" : "SingleVariableDeclaration[8055-8081]:SingleVariableDeclaration[7895-7921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8083-8298]:Block[7923-8138]"
    }, {
      "left" : "this.constructor = constructor;",
      "right" : "this.constructor = constructor;",
      "info" : "ExpressionStatement[8101-8132]:ExpressionStatement[7941-7972]"
    }, {
      "left" : "this.parameterType = constructor.getParameterTypes();",
      "right" : "this.parameterType = constructor.getParameterTypes();",
      "info" : "ExpressionStatement[8149-8202]:ExpressionStatement[7989-8042]"
    }, {
      "left" : "this.parameterAnnotation = constructor.getParameterAnnotations();",
      "right" : "this.parameterAnnotation = constructor.getParameterAnnotations();",
      "info" : "ExpressionStatement[8219-8284]:ExpressionStatement[8059-8124]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8312-8321]:MarkerAnnotation[1704-1713]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8334-8343]:Modifier[1722-1731]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleType[8344-8357]:SimpleType[1732-1745]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[8358-8362]:SimpleName[1746-1750]"
    }, {
      "left" : "List<ParameterDescription> values",
      "right" : "List<ParameterDescription> values",
      "info" : "SingleVariableDeclaration[8363-8396]:SingleVariableDeclaration[1751-1784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8398-8458]:Block[1786-1838]"
    }, {
      "left" : "return new Explicit(values);",
      "right" : "return new Explicit(values);",
      "info" : "ReturnStatement[8416-8444]:ReturnStatement[1800-1828]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8472-8481]:MarkerAnnotation[8152-8161]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8494-8500]:Modifier[8174-8180]"
    }, {
      "left" : "ParameterDescription",
      "right" : "ParameterDescription",
      "info" : "SimpleType[8501-8521]:SimpleType[8181-8201]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[8522-8525]:SimpleName[8202-8205]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8526-8535]:SingleVariableDeclaration[8206-8215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8537-8712]:Block[8217-8392]"
    }, {
      "left" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmConstructor(constructor, index, parameterType[index], parameterAnnotation[index]);",
      "right" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmConstructor(constructor, index, parameterType[index], parameterAnnotation[index]);",
      "info" : "ReturnStatement[8555-8698]:ReturnStatement[8235-8378]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8726-8735]:MarkerAnnotation[8406-8415]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8748-8754]:Modifier[8428-8434]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8755-8758]:PrimitiveType[8435-8438]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[8759-8763]:SimpleName[8439-8443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8766-8826]:Block[8446-8506]"
    }, {
      "left" : "return parameterType.length;",
      "right" : "return parameterType.length;",
      "info" : "ReturnStatement[8784-8812]:ReturnStatement[8464-8492]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8840-8849]:MarkerAnnotation[8520-8529]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8862-8868]:Modifier[8542-8548]"
    }, {
      "left" : "GenericTypeList",
      "right" : "GenericTypeList",
      "info" : "SimpleType[8869-8884]:SimpleType[8549-8564]"
    }, {
      "left" : "asTypeList",
      "right" : "asTypeList",
      "info" : "SimpleName[8885-8895]:SimpleName[8565-8575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8898-9329]:Block[8578-9009]"
    }, {
      "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
      "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
      "info" : "VariableDeclarationStatement[8916-9013]:VariableDeclarationStatement[8596-8693]"
    }, {
      "left" : "for (int index = 0; index < parameterType.length; index++)",
      "right" : "for (int index = 0; index < parameterType.length; index++)",
      "info" : "ForStatement[9030-9255]:ForStatement[8710-8935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9089-9255]:Block[8769-8935]"
    }, {
      "left" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmConstructorParameter(constructor, index, parameterType[index]));",
      "right" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmConstructorParameter(constructor, index, parameterType[index]));",
      "info" : "ExpressionStatement[9111-9237]:ExpressionStatement[8791-8917]"
    }, {
      "left" : "return new GenericTypeList.Explicit(types);",
      "right" : "return new GenericTypeList.Explicit(types);",
      "info" : "ReturnStatement[9272-9315]:ReturnStatement[8952-8995]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[9428-9433]:TYPE_DECLARATION_KIND[9108-9113]"
    }, {
      "left" : "Explicit",
      "right" : "Explicit",
      "info" : "SimpleName[9434-9442]:SimpleName[9114-9122]"
    }, {
      "left" : "AbstractBase",
      "right" : "AbstractBase",
      "info" : "SimpleType[9451-9463]:SimpleType[9131-9143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9874-9880]:Modifier[9554-9560]"
    }, {
      "left" : "Explicit",
      "right" : "Explicit",
      "info" : "SimpleName[9881-9889]:SimpleName[9561-9569]"
    }, {
      "left" : "List<? extends ParameterDescription> parameterDescriptions",
      "right" : "List<? extends ParameterDescription> parameterDescriptions",
      "info" : "SingleVariableDeclaration[9890-9948]:SingleVariableDeclaration[9570-9628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9950-10055]:Block[9630-9735]"
    }, {
      "left" : "this.parameterDescriptions = Collections.unmodifiableList(parameterDescriptions);",
      "right" : "this.parameterDescriptions = Collections.unmodifiableList(parameterDescriptions);",
      "info" : "ExpressionStatement[9964-10045]:ExpressionStatement[9644-9725]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10392-10398]:Modifier[10072-10078]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10399-10405]:Modifier[10079-10085]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleType[10406-10419]:SimpleType[10086-10099]"
    }, {
      "left" : "latent",
      "right" : "latent",
      "info" : "SimpleName[10420-10426]:SimpleName[10100-10106]"
    }, {
      "left" : "MethodDescription declaringMethod",
      "right" : "MethodDescription declaringMethod",
      "info" : "SingleVariableDeclaration[10427-10460]:SingleVariableDeclaration[10107-10140]"
    }, {
      "left" : "List<? extends GenericTypeDescription> parameterTypes",
      "right" : "List<? extends GenericTypeDescription> parameterTypes",
      "info" : "SingleVariableDeclaration[10462-10515]:SingleVariableDeclaration[10142-10195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10517-11290]:Block[10197-10970]"
    }, {
      "left" : "List<ParameterDescription> parameterDescriptions = new ArrayList<ParameterDescription>(parameterTypes.size());",
      "right" : "List<ParameterDescription> parameterDescriptions = new ArrayList<ParameterDescription>(parameterTypes.size());",
      "info" : "VariableDeclarationStatement[10531-10641]:VariableDeclarationStatement[10211-10321]"
    }, {
      "left" : "int index = 0, offset = declaringMethod.isStatic()\n                    ? StackSize.ZERO.getSize()\n                    : StackSize.SINGLE.getSize();",
      "right" : "int index = 0, offset = declaringMethod.isStatic()\n                    ? StackSize.ZERO.getSize()\n                    : StackSize.SINGLE.getSize();",
      "info" : "VariableDeclarationStatement[10654-10801]:VariableDeclarationStatement[10334-10481]"
    }, {
      "left" : "for (GenericTypeDescription parameterType : parameterTypes)",
      "right" : "for (GenericTypeDescription parameterType : parameterTypes)",
      "info" : "EnhancedForStatement[10814-11224]:EnhancedForStatement[10494-10904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10874-11224]:Block[10554-10904]"
    }, {
      "left" : "parameterDescriptions.add(new ParameterDescription.Latent(declaringMethod,\n                        parameterType,\n                        Collections.<AnnotationDescription>emptyList(),\n                        index++,\n                        offset));",
      "right" : "parameterDescriptions.add(new ParameterDescription.Latent(declaringMethod,\n                        parameterType,\n                        Collections.<AnnotationDescription>emptyList(),\n                        index++,\n                        offset));",
      "info" : "ExpressionStatement[10892-11144]:ExpressionStatement[10572-10824]"
    }, {
      "left" : "offset += parameterType.getStackSize().getSize();",
      "right" : "offset += parameterType.getStackSize().getSize();",
      "info" : "ExpressionStatement[11161-11210]:ExpressionStatement[10841-10890]"
    }, {
      "left" : "return new Explicit(parameterDescriptions);",
      "right" : "return new Explicit(parameterDescriptions);",
      "info" : "ReturnStatement[11237-11280]:ReturnStatement[10917-10960]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11300-11309]:MarkerAnnotation[10980-10989]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11318-11324]:Modifier[10998-11004]"
    }, {
      "left" : "ParameterDescription",
      "right" : "ParameterDescription",
      "info" : "SimpleType[11325-11345]:SimpleType[11005-11025]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[11346-11349]:SimpleName[11026-11029]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[11350-11359]:SingleVariableDeclaration[11030-11039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11361-11425]:Block[11041-11105]"
    }, {
      "left" : "return parameterDescriptions.get(index);",
      "right" : "return parameterDescriptions.get(index);",
      "info" : "ReturnStatement[11375-11415]:ReturnStatement[11055-11095]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11435-11444]:MarkerAnnotation[11115-11124]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11453-11459]:Modifier[11133-11139]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11460-11463]:PrimitiveType[11140-11143]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[11464-11468]:SimpleName[11144-11148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11471-11531]:Block[11151-11211]"
    }, {
      "left" : "return parameterDescriptions.size();",
      "right" : "return parameterDescriptions.size();",
      "info" : "ReturnStatement[11485-11521]:ReturnStatement[11165-11201]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11541-11550]:MarkerAnnotation[11221-11230]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11559-11565]:Modifier[11239-11245]"
    }, {
      "left" : "GenericTypeList",
      "right" : "GenericTypeList",
      "info" : "SimpleType[11566-11581]:SimpleType[11246-11261]"
    }, {
      "left" : "asTypeList",
      "right" : "asTypeList",
      "info" : "SimpleName[11582-11592]:SimpleName[11262-11272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11595-11939]:Block[11275-11619]"
    }, {
      "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterDescriptions.size());",
      "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterDescriptions.size());",
      "info" : "VariableDeclarationStatement[11609-11714]:VariableDeclarationStatement[11289-11394]"
    }, {
      "left" : "for (ParameterDescription parameterDescription : parameterDescriptions)",
      "right" : "for (ParameterDescription parameterDescription : parameterDescriptions)",
      "info" : "EnhancedForStatement[11727-11873]:EnhancedForStatement[11407-11553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11799-11873]:Block[11479-11553]"
    }, {
      "left" : "types.add(parameterDescription.getType());",
      "right" : "types.add(parameterDescription.getType());",
      "info" : "ExpressionStatement[11817-11859]:ExpressionStatement[11497-11539]"
    }, {
      "left" : "return new GenericTypeList.Explicit(types);",
      "right" : "return new GenericTypeList.Explicit(types);",
      "info" : "ReturnStatement[11886-11929]:ReturnStatement[11566-11609]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11949-11958]:MarkerAnnotation[1704-1713]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11967-11976]:Modifier[1722-1731]"
    }, {
      "left" : "ParameterList",
      "right" : "ParameterList",
      "info" : "SimpleType[11977-11990]:SimpleType[1732-1745]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[11991-11995]:SimpleName[1746-1750]"
    }, {
      "left" : "List<ParameterDescription> values",
      "right" : "List<ParameterDescription> values",
      "info" : "SingleVariableDeclaration[11996-12029]:SingleVariableDeclaration[1751-1784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12031-12083]:Block[1786-1838]"
    }, {
      "left" : "return new Explicit(values);",
      "right" : "return new Explicit(values);",
      "info" : "ReturnStatement[12045-12073]:ReturnStatement[1800-1828]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[12147-12152]:TYPE_DECLARATION_KIND[11683-11688]"
    }, {
      "left" : "Empty",
      "right" : "Empty",
      "info" : "SimpleName[12153-12158]:SimpleName[11689-11694]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12261-12270]:MarkerAnnotation[11797-11806]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12279-12285]:Modifier[11815-11821]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[12286-12293]:PrimitiveType[11822-11829]"
    }, {
      "left" : "hasExplicitMetaData",
      "right" : "hasExplicitMetaData",
      "info" : "SimpleName[12294-12313]:SimpleName[11830-11849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12316-12352]:Block[11852-11888]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12330-12342]:ReturnStatement[11866-11878]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12362-12371]:MarkerAnnotation[11898-11907]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12380-12386]:Modifier[11916-11922]"
    }, {
      "left" : "GenericTypeList",
      "right" : "GenericTypeList",
      "info" : "SimpleType[12387-12402]:SimpleType[11923-11938]"
    }, {
      "left" : "asTypeList",
      "right" : "asTypeList",
      "info" : "SimpleName[12403-12413]:SimpleName[11939-11949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12416-12475]:Block[11952-12011]"
    }, {
      "left" : "return new GenericTypeList.Empty();",
      "right" : "return new GenericTypeList.Empty();",
      "info" : "ReturnStatement[12430-12465]:ReturnStatement[11966-12001]"
    } ]
  },
  "interFileMappings" : { }
}