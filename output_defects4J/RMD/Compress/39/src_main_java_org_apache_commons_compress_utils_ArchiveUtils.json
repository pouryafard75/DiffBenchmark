{
  "matchedElements" : [
 {
    "left" : "class : ArchiveUtils",
    "right" : "class : ArchiveUtils",
    "info" : "TypeDeclaration[980-10239]:TypeDeclaration[980-10622]"
  }, {
    "left" : "private ArchiveUtils()",
    "right" : "private ArchiveUtils()",
    "info" : "MethodDeclaration[1051-1159]:MethodDeclaration[1113-1221]"
  }, {
    "left" : "public toString(entry ) : ",
    "right" : "public toString(entry ) : ",
    "info" : "MethodDeclaration[1165-1974]:MethodDeclaration[1227-2036]"
  }, {
    "left" : "public matchAsciiBuffer(expected , buffer , offset int, length int) : boolean",
    "right" : "public matchAsciiBuffer(expected , buffer , offset int, length int) : boolean",
    "info" : "MethodDeclaration[1980-2739]:MethodDeclaration[2042-2801]"
  }, {
    "left" : "public matchAsciiBuffer(expected , buffer ) : boolean",
    "right" : "public matchAsciiBuffer(expected , buffer ) : boolean",
    "info" : "MethodDeclaration[2745-3128]:MethodDeclaration[2807-3190]"
  }, {
    "left" : "public toAsciiBytes(inputString ) : ",
    "right" : "public toAsciiBytes(inputString ) : ",
    "info" : "MethodDeclaration[3134-3637]:MethodDeclaration[3196-3699]"
  }, {
    "left" : "public toAsciiString(inputBytes ...) : ",
    "right" : "public toAsciiString(inputBytes ...) : ",
    "info" : "MethodDeclaration[3643-4123]:MethodDeclaration[3705-4185]"
  }, {
    "left" : "public toAsciiString(inputBytes , offset int, length int) : ",
    "right" : "public toAsciiString(inputBytes , offset int, length int) : ",
    "info" : "MethodDeclaration[4129-4739]:MethodDeclaration[4191-4801]"
  }, {
    "left" : "public isEqual(buffer1 , offset1 int, length1 int, buffer2 , offset2 int, length2 int, ignoreTrailingNulls boolean) : boolean",
    "right" : "public isEqual(buffer1 , offset1 int, length1 int, buffer2 , offset2 int, length2 int, ignoreTrailingNulls boolean) : boolean",
    "info" : "MethodDeclaration[4745-6259]:MethodDeclaration[4807-6321]"
  }, {
    "left" : "public isEqual(buffer1 , offset1 int, length1 int, buffer2 , offset2 int, length2 int) : boolean",
    "right" : "public isEqual(buffer1 , offset1 int, length1 int, buffer2 , offset2 int, length2 int) : boolean",
    "info" : "MethodDeclaration[6265-6890]:MethodDeclaration[6327-6952]"
  }, {
    "left" : "public isEqual(buffer1 , buffer2 ) : boolean",
    "right" : "public isEqual(buffer1 , buffer2 ) : boolean",
    "info" : "MethodDeclaration[6896-7265]:MethodDeclaration[6958-7327]"
  }, {
    "left" : "public isEqual(buffer1 , buffer2 , ignoreTrailingNulls boolean) : boolean",
    "right" : "public isEqual(buffer1 , buffer2 , ignoreTrailingNulls boolean) : boolean",
    "info" : "MethodDeclaration[7271-7792]:MethodDeclaration[7333-7854]"
  }, {
    "left" : "public isEqualWithNull(buffer1 , offset1 int, length1 int, buffer2 , offset2 int, length2 int) : boolean",
    "right" : "public isEqualWithNull(buffer1 , offset1 int, length1 int, buffer2 , offset2 int, length2 int) : boolean",
    "info" : "MethodDeclaration[7798-8488]:MethodDeclaration[7860-8550]"
  }, {
    "left" : "public isArrayZero(a , size int) : boolean",
    "right" : "public isArrayZero(a , size int) : boolean",
    "info" : "MethodDeclaration[8498-9008]:MethodDeclaration[8560-9070]"
  }, {
    "left" : "public sanitize(s ...) : ",
    "right" : "public sanitize(s ...) : ",
    "info" : "MethodDeclaration[9014-10236]:MethodDeclaration[9076-10619]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1017-1023]:Modifier[1017-1023]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1024-1029]:TYPE_DECLARATION_KIND[1024-1029]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1130-1137]:Modifier[1192-1199]"
  }, {
    "left" : "ArchiveUtils",
    "right" : "ArchiveUtils",
    "info" : "SimpleName[1138-1150]:SimpleName[1200-1212]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1152-1159]:Block[1214-1221]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1464-1470]:Modifier[1526-1532]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1471-1477]:Modifier[1533-1539]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[1478-1484]:SimpleType[1540-1546]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[1485-1493]:SimpleName[1547-1555]"
  }, {
    "left" : "final ArchiveEntry entry",
    "right" : "final ArchiveEntry entry",
    "info" : "SingleVariableDeclaration[1494-1518]:SingleVariableDeclaration[1556-1580]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1519-1974]:Block[1581-2036]"
  }, {
    "left" : "final StringBuilder sb = new StringBuilder();",
    "right" : "final StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[1529-1574]:VariableDeclarationStatement[1591-1636]"
  }, {
    "left" : "sb.append(entry.isDirectory()? 'd' : '-');",
    "right" : "sb.append(entry.isDirectory()? 'd' : '-');",
    "info" : "ExpressionStatement[1583-1625]:ExpressionStatement[1645-1687]"
  }, {
    "left" : "final String size = Long.toString(entry.getSize());",
    "right" : "final String size = Long.toString(entry.getSize());",
    "info" : "VariableDeclarationStatement[1656-1707]:VariableDeclarationStatement[1718-1769]"
  }, {
    "left" : "sb.append(' ');",
    "right" : "sb.append(' ');",
    "info" : "ExpressionStatement[1716-1731]:ExpressionStatement[1778-1793]"
  }, {
    "left" : "for(int i=7; i > size.length(); i--)",
    "right" : "for(int i=7; i > size.length(); i--)",
    "info" : "ForStatement[1790-1865]:ForStatement[1852-1927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1826-1865]:Block[1888-1927]"
  }, {
    "left" : "sb.append(' ');",
    "right" : "sb.append(' ');",
    "info" : "ExpressionStatement[1840-1855]:ExpressionStatement[1902-1917]"
  }, {
    "left" : "sb.append(size);",
    "right" : "sb.append(size);",
    "info" : "ExpressionStatement[1874-1890]:ExpressionStatement[1936-1952]"
  }, {
    "left" : "sb.append(' ').append(entry.getName());",
    "right" : "sb.append(' ').append(entry.getName());",
    "info" : "ExpressionStatement[1899-1938]:ExpressionStatement[1961-2000]"
  }, {
    "left" : "return sb.toString();",
    "right" : "return sb.toString();",
    "info" : "ReturnStatement[1947-1968]:ReturnStatement[2009-2030]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2285-2291]:Modifier[2347-2353]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2292-2298]:Modifier[2354-2360]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[2299-2306]:PrimitiveType[2361-2368]"
  }, {
    "left" : "matchAsciiBuffer",
    "right" : "matchAsciiBuffer",
    "info" : "SimpleName[2307-2323]:SimpleName[2369-2385]"
  }, {
    "left" : "final String expected",
    "right" : "final String expected",
    "info" : "SingleVariableDeclaration[2337-2358]:SingleVariableDeclaration[2399-2420]"
  }, {
    "left" : "final byte[] buffer",
    "right" : "final byte[] buffer",
    "info" : "SingleVariableDeclaration[2360-2379]:SingleVariableDeclaration[2422-2441]"
  }, {
    "left" : "final int offset",
    "right" : "final int offset",
    "info" : "SingleVariableDeclaration[2381-2397]:SingleVariableDeclaration[2443-2459]"
  }, {
    "left" : "final int length",
    "right" : "final int length",
    "info" : "SingleVariableDeclaration[2399-2415]:SingleVariableDeclaration[2461-2477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2416-2739]:Block[2478-2801]"
  }, {
    "left" : "byte[] buffer1;",
    "right" : "byte[] buffer1;",
    "info" : "VariableDeclarationStatement[2426-2441]:VariableDeclarationStatement[2488-2503]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[2450-2650]:TryStatement[2512-2712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2454-2529]:Block[2516-2591]"
  }, {
    "left" : "buffer1 = expected.getBytes(CharsetNames.US_ASCII);",
    "right" : "buffer1 = expected.getBytes(CharsetNames.US_ASCII);",
    "info" : "ExpressionStatement[2468-2519]:ExpressionStatement[2530-2581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2575-2650]:Block[2637-2712]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[2589-2619]:ThrowStatement[2651-2681]"
  }, {
    "left" : "return isEqual(buffer1, 0, buffer1.length, buffer, offset, length, false);",
    "right" : "return isEqual(buffer1, 0, buffer1.length, buffer, offset, length, false);",
    "info" : "ReturnStatement[2659-2733]:ReturnStatement[2721-2795]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2970-2976]:Modifier[3032-3038]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2977-2983]:Modifier[3039-3045]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[2984-2991]:PrimitiveType[3046-3053]"
  }, {
    "left" : "matchAsciiBuffer",
    "right" : "matchAsciiBuffer",
    "info" : "SimpleName[2992-3008]:SimpleName[3054-3070]"
  }, {
    "left" : "final String expected",
    "right" : "final String expected",
    "info" : "SingleVariableDeclaration[3009-3030]:SingleVariableDeclaration[3071-3092]"
  }, {
    "left" : "final byte[] buffer",
    "right" : "final byte[] buffer",
    "info" : "SingleVariableDeclaration[3032-3051]:SingleVariableDeclaration[3094-3113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3052-3128]:Block[3114-3190]"
  }, {
    "left" : "return matchAsciiBuffer(expected, buffer, 0, buffer.length);",
    "right" : "return matchAsciiBuffer(expected, buffer, 0, buffer.length);",
    "info" : "ReturnStatement[3062-3122]:ReturnStatement[3124-3184]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3361-3367]:Modifier[3423-3429]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3368-3374]:Modifier[3430-3436]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[3375-3381]:ArrayType[3437-3443]"
  }, {
    "left" : "toAsciiBytes",
    "right" : "toAsciiBytes",
    "info" : "SimpleName[3382-3394]:SimpleName[3444-3456]"
  }, {
    "left" : "final String inputString",
    "right" : "final String inputString",
    "info" : "SingleVariableDeclaration[3395-3419]:SingleVariableDeclaration[3457-3481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3420-3637]:Block[3482-3699]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[3430-3631]:TryStatement[3492-3693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3434-3509]:Block[3496-3571]"
  }, {
    "left" : "return inputString.getBytes(CharsetNames.US_ASCII);",
    "right" : "return inputString.getBytes(CharsetNames.US_ASCII);",
    "info" : "ReturnStatement[3448-3499]:ReturnStatement[3510-3561]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3555-3631]:Block[3617-3693]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[3568-3598]:ThrowStatement[3630-3660]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3844-3850]:Modifier[3906-3912]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3851-3857]:Modifier[3913-3919]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3858-3864]:SimpleType[3920-3926]"
  }, {
    "left" : "toAsciiString",
    "right" : "toAsciiString",
    "info" : "SimpleName[3865-3878]:SimpleName[3927-3940]"
  }, {
    "left" : "final byte[] inputBytes",
    "right" : "final byte[] inputBytes",
    "info" : "SingleVariableDeclaration[3879-3902]:SingleVariableDeclaration[3941-3964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3903-4123]:Block[3965-4185]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[3913-4117]:TryStatement[3975-4179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3917-3994]:Block[3979-4056]"
  }, {
    "left" : "return new String(inputBytes, CharsetNames.US_ASCII);",
    "right" : "return new String(inputBytes, CharsetNames.US_ASCII);",
    "info" : "ReturnStatement[3931-3984]:ReturnStatement[3993-4046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4040-4117]:Block[4102-4179]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[4054-4084]:ThrowStatement[4116-4146]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4408-4414]:Modifier[4470-4476]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4415-4421]:Modifier[4477-4483]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4422-4428]:SimpleType[4484-4490]"
  }, {
    "left" : "toAsciiString",
    "right" : "toAsciiString",
    "info" : "SimpleName[4429-4442]:SimpleName[4491-4504]"
  }, {
    "left" : "final byte[] inputBytes",
    "right" : "final byte[] inputBytes",
    "info" : "SingleVariableDeclaration[4443-4466]:SingleVariableDeclaration[4505-4528]"
  }, {
    "left" : "final int offset",
    "right" : "final int offset",
    "info" : "SingleVariableDeclaration[4468-4484]:SingleVariableDeclaration[4530-4546]"
  }, {
    "left" : "final int length",
    "right" : "final int length",
    "info" : "SingleVariableDeclaration[4486-4502]:SingleVariableDeclaration[4548-4564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4503-4739]:Block[4565-4801]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[4513-4733]:TryStatement[4575-4795]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4517-4610]:Block[4579-4672]"
  }, {
    "left" : "return new String(inputBytes, offset, length, CharsetNames.US_ASCII);",
    "right" : "return new String(inputBytes, offset, length, CharsetNames.US_ASCII);",
    "info" : "ReturnStatement[4531-4600]:ReturnStatement[4593-4662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4656-4733]:Block[4718-4795]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[4670-4700]:ThrowStatement[4732-4762]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5216-5222]:Modifier[5278-5284]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5223-5229]:Modifier[5285-5291]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5230-5237]:PrimitiveType[5292-5299]"
  }, {
    "left" : "isEqual",
    "right" : "isEqual",
    "info" : "SimpleName[5238-5245]:SimpleName[5300-5307]"
  }, {
    "left" : "final byte[] buffer1",
    "right" : "final byte[] buffer1",
    "info" : "SingleVariableDeclaration[5259-5279]:SingleVariableDeclaration[5321-5341]"
  }, {
    "left" : "final int offset1",
    "right" : "final int offset1",
    "info" : "SingleVariableDeclaration[5281-5298]:SingleVariableDeclaration[5343-5360]"
  }, {
    "left" : "final int length1",
    "right" : "final int length1",
    "info" : "SingleVariableDeclaration[5300-5317]:SingleVariableDeclaration[5362-5379]"
  }, {
    "left" : "final byte[] buffer2",
    "right" : "final byte[] buffer2",
    "info" : "SingleVariableDeclaration[5331-5351]:SingleVariableDeclaration[5393-5413]"
  }, {
    "left" : "final int offset2",
    "right" : "final int offset2",
    "info" : "SingleVariableDeclaration[5353-5370]:SingleVariableDeclaration[5415-5432]"
  }, {
    "left" : "final int length2",
    "right" : "final int length2",
    "info" : "SingleVariableDeclaration[5372-5389]:SingleVariableDeclaration[5434-5451]"
  }, {
    "left" : "final boolean ignoreTrailingNulls",
    "right" : "final boolean ignoreTrailingNulls",
    "info" : "SingleVariableDeclaration[5403-5436]:SingleVariableDeclaration[5465-5498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5437-6259]:Block[5499-6321]"
  }, {
    "left" : "final int minLen=length1 < length2 ? length1 : length2;",
    "right" : "final int minLen=length1 < length2 ? length1 : length2;",
    "info" : "VariableDeclarationStatement[5447-5502]:VariableDeclarationStatement[5509-5564]"
  }, {
    "left" : "for (int i=0; i < minLen; i++)",
    "right" : "for (int i=0; i < minLen; i++)",
    "info" : "ForStatement[5511-5655]:ForStatement[5573-5717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5541-5655]:Block[5603-5717]"
  }, {
    "left" : "if (buffer1[offset1+i] != buffer2[offset2+i])",
    "right" : "if (buffer1[offset1+i] != buffer2[offset2+i])",
    "info" : "IfStatement[5555-5645]:IfStatement[5617-5707]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5600-5645]:Block[5662-5707]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[5618-5631]:ReturnStatement[5680-5693]"
  }, {
    "left" : "if (length1 == length2)",
    "right" : "if (length1 == length2)",
    "info" : "IfStatement[5664-5723]:IfStatement[5726-5785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5687-5723]:Block[5749-5785]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[5701-5713]:ReturnStatement[5763-5775]"
  }, {
    "left" : "if (ignoreTrailingNulls)",
    "right" : "if (ignoreTrailingNulls)",
    "info" : "IfStatement[5732-6231]:IfStatement[5794-6293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5756-6231]:Block[5818-6293]"
  }, {
    "left" : "if (length1 > length2)",
    "right" : "if (length1 > length2)",
    "info" : "IfStatement[5770-6196]:IfStatement[5832-6258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5792-5991]:Block[5854-6053]"
  }, {
    "left" : "for(int i = length2; i < length1; i++)",
    "right" : "for(int i = length2; i < length1; i++)",
    "info" : "ForStatement[5810-5977]:ForStatement[5872-6039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5848-5977]:Block[5910-6039]"
  }, {
    "left" : "if (buffer1[offset1+i] != 0)",
    "right" : "if (buffer1[offset1+i] != 0)",
    "info" : "IfStatement[5870-5959]:IfStatement[5932-6021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5898-5959]:Block[5960-6021]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[5924-5937]:ReturnStatement[5986-5999]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5997-6196]:Block[6059-6258]"
  }, {
    "left" : "for(int i = length1; i < length2; i++)",
    "right" : "for(int i = length1; i < length2; i++)",
    "info" : "ForStatement[6015-6182]:ForStatement[6077-6244]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6053-6182]:Block[6115-6244]"
  }, {
    "left" : "if (buffer2[offset2+i] != 0)",
    "right" : "if (buffer2[offset2+i] != 0)",
    "info" : "IfStatement[6075-6164]:IfStatement[6137-6226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6103-6164]:Block[6165-6226]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6129-6142]:ReturnStatement[6191-6204]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[6209-6221]:ReturnStatement[6271-6283]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6240-6253]:ReturnStatement[6302-6315]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6624-6630]:Modifier[6686-6692]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6631-6637]:Modifier[6693-6699]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6638-6645]:PrimitiveType[6700-6707]"
  }, {
    "left" : "isEqual",
    "right" : "isEqual",
    "info" : "SimpleName[6646-6653]:SimpleName[6708-6715]"
  }, {
    "left" : "final byte[] buffer1",
    "right" : "final byte[] buffer1",
    "info" : "SingleVariableDeclaration[6667-6687]:SingleVariableDeclaration[6729-6749]"
  }, {
    "left" : "final int offset1",
    "right" : "final int offset1",
    "info" : "SingleVariableDeclaration[6689-6706]:SingleVariableDeclaration[6751-6768]"
  }, {
    "left" : "final int length1",
    "right" : "final int length1",
    "info" : "SingleVariableDeclaration[6708-6725]:SingleVariableDeclaration[6770-6787]"
  }, {
    "left" : "final byte[] buffer2",
    "right" : "final byte[] buffer2",
    "info" : "SingleVariableDeclaration[6739-6759]:SingleVariableDeclaration[6801-6821]"
  }, {
    "left" : "final int offset2",
    "right" : "final int offset2",
    "info" : "SingleVariableDeclaration[6761-6778]:SingleVariableDeclaration[6823-6840]"
  }, {
    "left" : "final int length2",
    "right" : "final int length2",
    "info" : "SingleVariableDeclaration[6780-6797]:SingleVariableDeclaration[6842-6859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6798-6890]:Block[6860-6952]"
  }, {
    "left" : "return isEqual(buffer1, offset1, length1, buffer2, offset2, length2, false);",
    "right" : "return isEqual(buffer1, offset1, length1, buffer2, offset2, length2, false);",
    "info" : "ReturnStatement[6808-6884]:ReturnStatement[6870-6946]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7097-7103]:Modifier[7159-7165]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7104-7110]:Modifier[7166-7172]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7111-7118]:PrimitiveType[7173-7180]"
  }, {
    "left" : "isEqual",
    "right" : "isEqual",
    "info" : "SimpleName[7119-7126]:SimpleName[7181-7188]"
  }, {
    "left" : "final byte[] buffer1",
    "right" : "final byte[] buffer1",
    "info" : "SingleVariableDeclaration[7127-7147]:SingleVariableDeclaration[7189-7209]"
  }, {
    "left" : "final byte[] buffer2",
    "right" : "final byte[] buffer2",
    "info" : "SingleVariableDeclaration[7149-7169]:SingleVariableDeclaration[7211-7231]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7171-7265]:Block[7233-7327]"
  }, {
    "left" : "return isEqual(buffer1, 0, buffer1.length, buffer2, 0, buffer2.length, false);",
    "right" : "return isEqual(buffer1, 0, buffer1.length, buffer2, 0, buffer2.length, false);",
    "info" : "ReturnStatement[7181-7259]:ReturnStatement[7243-7321]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7576-7582]:Modifier[7638-7644]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7583-7589]:Modifier[7645-7651]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7590-7597]:PrimitiveType[7652-7659]"
  }, {
    "left" : "isEqual",
    "right" : "isEqual",
    "info" : "SimpleName[7598-7605]:SimpleName[7660-7667]"
  }, {
    "left" : "final byte[] buffer1",
    "right" : "final byte[] buffer1",
    "info" : "SingleVariableDeclaration[7606-7626]:SingleVariableDeclaration[7668-7688]"
  }, {
    "left" : "final byte[] buffer2",
    "right" : "final byte[] buffer2",
    "info" : "SingleVariableDeclaration[7628-7648]:SingleVariableDeclaration[7690-7710]"
  }, {
    "left" : "final boolean ignoreTrailingNulls",
    "right" : "final boolean ignoreTrailingNulls",
    "info" : "SingleVariableDeclaration[7650-7683]:SingleVariableDeclaration[7712-7745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7684-7792]:Block[7746-7854]"
  }, {
    "left" : "return isEqual(buffer1, 0, buffer1.length, buffer2, 0, buffer2.length, ignoreTrailingNulls);",
    "right" : "return isEqual(buffer1, 0, buffer1.length, buffer2, 0, buffer2.length, ignoreTrailingNulls);",
    "info" : "ReturnStatement[7694-7786]:ReturnStatement[7756-7848]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8215-8221]:Modifier[8277-8283]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8222-8228]:Modifier[8284-8290]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[8229-8236]:PrimitiveType[8291-8298]"
  }, {
    "left" : "isEqualWithNull",
    "right" : "isEqualWithNull",
    "info" : "SimpleName[8237-8252]:SimpleName[8299-8314]"
  }, {
    "left" : "final byte[] buffer1",
    "right" : "final byte[] buffer1",
    "info" : "SingleVariableDeclaration[8266-8286]:SingleVariableDeclaration[8328-8348]"
  }, {
    "left" : "final int offset1",
    "right" : "final int offset1",
    "info" : "SingleVariableDeclaration[8288-8305]:SingleVariableDeclaration[8350-8367]"
  }, {
    "left" : "final int length1",
    "right" : "final int length1",
    "info" : "SingleVariableDeclaration[8307-8324]:SingleVariableDeclaration[8369-8386]"
  }, {
    "left" : "final byte[] buffer2",
    "right" : "final byte[] buffer2",
    "info" : "SingleVariableDeclaration[8338-8358]:SingleVariableDeclaration[8400-8420]"
  }, {
    "left" : "final int offset2",
    "right" : "final int offset2",
    "info" : "SingleVariableDeclaration[8360-8377]:SingleVariableDeclaration[8422-8439]"
  }, {
    "left" : "final int length2",
    "right" : "final int length2",
    "info" : "SingleVariableDeclaration[8379-8396]:SingleVariableDeclaration[8441-8458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8397-8488]:Block[8459-8550]"
  }, {
    "left" : "return isEqual(buffer1, offset1, length1, buffer2, offset2, length2, true);",
    "right" : "return isEqual(buffer1, offset1, length1, buffer2, offset2, length2, true);",
    "info" : "ReturnStatement[8407-8482]:ReturnStatement[8469-8544]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8790-8796]:Modifier[8852-8858]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8797-8803]:Modifier[8859-8865]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[8804-8811]:PrimitiveType[8866-8873]"
  }, {
    "left" : "isArrayZero",
    "right" : "isArrayZero",
    "info" : "SimpleName[8812-8823]:SimpleName[8874-8885]"
  }, {
    "left" : "final byte[] a",
    "right" : "final byte[] a",
    "info" : "SingleVariableDeclaration[8824-8838]:SingleVariableDeclaration[8886-8900]"
  }, {
    "left" : "final int size",
    "right" : "final int size",
    "info" : "SingleVariableDeclaration[8840-8854]:SingleVariableDeclaration[8902-8916]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8856-9008]:Block[8918-9070]"
  }, {
    "left" : "for (int i = 0; i < size; i++)",
    "right" : "for (int i = 0; i < size; i++)",
    "info" : "ForStatement[8866-8981]:ForStatement[8928-9043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8897-8981]:Block[8959-9043]"
  }, {
    "left" : "if (a[i] != 0)",
    "right" : "if (a[i] != 0)",
    "info" : "IfStatement[8911-8971]:IfStatement[8973-9033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8926-8971]:Block[8988-9033]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[8944-8957]:ReturnStatement[9006-9019]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[8990-9002]:ReturnStatement[9052-9064]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9606-9612]:Modifier[9668-9674]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9613-9619]:Modifier[9675-9681]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[9620-9626]:SimpleType[9682-9688]"
  }, {
    "left" : "sanitize",
    "right" : "sanitize",
    "info" : "SimpleName[9627-9635]:SimpleName[9689-9697]"
  }, {
    "left" : "String s",
    "right" : "String s",
    "info" : "SingleVariableDeclaration[9636-9644]:SingleVariableDeclaration[9698-9706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9646-10236]:Block[9708-10619]"
  }, {
    "left" : "final char[] chars = s.toCharArray();",
    "right" : "final char[] cs = s.toCharArray();",
    "info" : "VariableDeclarationStatement[9656-9693]:VariableDeclarationStatement[9718-9752]"
  }, {
    "left" : "chars",
    "right" : "cs",
    "info" : "SimpleName[9669-9674]:SimpleName[9731-9733]"
  }, {
    "left" : "final int len = chars.length;",
    "right" : "final int len = chars.length;",
    "info" : "VariableDeclarationStatement[9702-9731]:VariableDeclarationStatement[10085-10114]"
  }, {
    "left" : "final StringBuilder sb = new StringBuilder();",
    "right" : "final StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[9740-9785]:VariableDeclarationStatement[10123-10168]"
  }, {
    "left" : "for (int i = 0; i < len; i++)",
    "right" : "for (int i = 0; i < len; i++)",
    "info" : "ForStatement[9794-10200]:ForStatement[10177-10583]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9824-10200]:Block[10207-10583]"
  }, {
    "left" : "final char c = chars[i];",
    "right" : "final char c = chars[i];",
    "info" : "VariableDeclarationStatement[9838-9862]:VariableDeclarationStatement[10221-10245]"
  }, {
    "left" : "if (!Character.isISOControl(c))",
    "right" : "if (!Character.isISOControl(c))",
    "info" : "IfStatement[9875-10162]:IfStatement[10258-10545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9907-10162]:Block[10290-10545]"
  }, {
    "left" : "Character.UnicodeBlock block = Character.UnicodeBlock.of(c);",
    "right" : "Character.UnicodeBlock block = Character.UnicodeBlock.of(c);",
    "info" : "VariableDeclarationStatement[9925-9985]:VariableDeclarationStatement[10308-10368]"
  }, {
    "left" : "if (block != null && block != Character.UnicodeBlock.SPECIALS)",
    "right" : "if (block != null && block != Character.UnicodeBlock.SPECIALS)",
    "info" : "IfStatement[10002-10148]:IfStatement[10385-10531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10065-10148]:Block[10448-10531]"
  }, {
    "left" : "sb.append(c);",
    "right" : "sb.append(c);",
    "info" : "ExpressionStatement[10087-10100]:ExpressionStatement[10470-10483]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[10121-10130]:ContinueStatement[10504-10513]"
  }, {
    "left" : "sb.append('?');",
    "right" : "sb.append('?');",
    "info" : "ExpressionStatement[10175-10190]:ExpressionStatement[10558-10573]"
  }, {
    "left" : "return sb.toString();",
    "right" : "return sb.toString();",
    "info" : "ReturnStatement[10209-10230]:ReturnStatement[10592-10613]"
  } ]
}