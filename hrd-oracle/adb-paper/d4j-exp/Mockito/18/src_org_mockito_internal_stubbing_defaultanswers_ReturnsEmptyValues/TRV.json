{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1998191268711234347L;",
      "right" : "private static final long serialVersionUID = 1998191268711234347L;",
      "info" : "FieldDeclaration[1626-1692]:FieldDeclaration[1626-1692]"
    }, {
      "left" : "ObjectMethodsGuru methodsGuru = new ObjectMethodsGuru();",
      "right" : "ObjectMethodsGuru methodsGuru = new ObjectMethodsGuru();",
      "info" : "FieldDeclaration[1697-1753]:FieldDeclaration[1697-1753]"
    }, {
      "left" : "MockUtil mockUtil = new MockUtil();",
      "right" : "MockUtil mockUtil = new MockUtil();",
      "info" : "FieldDeclaration[1758-1793]:FieldDeclaration[1758-1793]"
    }, {
      "left" : "public Object answer(InvocationOnMock invocation)",
      "right" : "public Object answer(InvocationOnMock invocation)",
      "info" : "MethodDeclaration[1916-2951]:MethodDeclaration[1916-2951]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1916-1922]:Modifier[1916-1922]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[1923-1929]:SimpleType[1923-1929]"
    }, {
      "left" : "answer",
      "right" : "answer",
      "info" : "SimpleName[1930-1936]:SimpleName[1930-1936]"
    }, {
      "left" : "InvocationOnMock invocation",
      "right" : "InvocationOnMock invocation",
      "info" : "SingleVariableDeclaration[1937-1964]:SingleVariableDeclaration[1937-1964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1966-2951]:Block[1966-2951]"
    }, {
      "left" : "if (methodsGuru.isToString(invocation.getMethod()))",
      "right" : "if (methodsGuru.isToString(invocation.getMethod()))",
      "info" : "IfStatement[1976-2823]:IfStatement[1976-2823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2028-2390]:Block[2028-2390]"
    }, {
      "left" : "Object mock = invocation.getMock();",
      "right" : "Object mock = invocation.getMock();",
      "info" : "VariableDeclarationStatement[2042-2077]:VariableDeclarationStatement[2042-2077]"
    }, {
      "left" : "MockName name = mockUtil.getMockName(mock);",
      "right" : "MockName name = mockUtil.getMockName(mock);",
      "info" : "VariableDeclarationStatement[2090-2133]:VariableDeclarationStatement[2090-2133]"
    }, {
      "left" : "if (name.isDefault())",
      "right" : "if (name.isDefault())",
      "info" : "IfStatement[2146-2380]:IfStatement[2146-2380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2168-2319]:Block[2168-2319]"
    }, {
      "left" : "return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();",
      "right" : "return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();",
      "info" : "ReturnStatement[2186-2305]:ReturnStatement[2186-2305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2325-2380]:Block[2325-2380]"
    }, {
      "left" : "return name.toString();",
      "right" : "return name.toString();",
      "info" : "ReturnStatement[2343-2366]:ReturnStatement[2343-2366]"
    }, {
      "left" : "if (methodsGuru.isCompareToMethod(invocation.getMethod()))",
      "right" : "if (methodsGuru.isCompareToMethod(invocation.getMethod()))",
      "info" : "IfStatement[2396-2823]:IfStatement[2396-2823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2455-2823]:Block[2455-2823]"
    }, {
      "left" : "return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;",
      "right" : "return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;",
      "info" : "ReturnStatement[2745-2813]:ReturnStatement[2745-2813]"
    }, {
      "left" : "Class<?> returnType = invocation.getMethod().getReturnType();",
      "right" : "Class<?> returnType = invocation.getMethod().getReturnType();",
      "info" : "VariableDeclarationStatement[2841-2902]:VariableDeclarationStatement[2841-2902]"
    }, {
      "left" : "return returnValueFor(returnType);",
      "right" : "return returnValueFor(returnType);",
      "info" : "ReturnStatement[2911-2945]:ReturnStatement[2911-2945]"
    } ]
  },
  "interFileMappings" : { }
}