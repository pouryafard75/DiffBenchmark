{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "TypeDeclaration[1381-37632]:TypeDeclaration[1381-38247]"
    }, {
      "left" : "public static final BigFraction TWO = new BigFraction(2);",
      "right" : "public static final BigFraction TWO = new BigFraction(2);",
      "info" : "FieldDeclaration[1643-1744]:FieldDeclaration[1643-1744]"
    }, {
      "left" : "public static final BigFraction ONE = new BigFraction(1);",
      "right" : "public static final BigFraction ONE = new BigFraction(1);",
      "info" : "FieldDeclaration[1750-1847]:FieldDeclaration[1750-1847]"
    }, {
      "left" : "public static final BigFraction ZERO = new BigFraction(0);",
      "right" : "public static final BigFraction ZERO = new BigFraction(0);",
      "info" : "FieldDeclaration[1853-1951]:FieldDeclaration[1853-1951]"
    }, {
      "left" : "public static final BigFraction MINUS_ONE = new BigFraction(-1);",
      "right" : "public static final BigFraction MINUS_ONE = new BigFraction(-1);",
      "info" : "FieldDeclaration[1957-2066]:FieldDeclaration[1957-2066]"
    }, {
      "left" : "public static final BigFraction FOUR_FIFTHS = new BigFraction(4, 5);",
      "right" : "public static final BigFraction FOUR_FIFTHS = new BigFraction(4, 5);",
      "info" : "FieldDeclaration[2072-2182]:FieldDeclaration[2072-2182]"
    }, {
      "left" : "public static final BigFraction ONE_FIFTH = new BigFraction(1, 5);",
      "right" : "public static final BigFraction ONE_FIFTH = new BigFraction(1, 5);",
      "info" : "FieldDeclaration[2188-2296]:FieldDeclaration[2188-2296]"
    }, {
      "left" : "public static final BigFraction ONE_HALF = new BigFraction(1, 2);",
      "right" : "public static final BigFraction ONE_HALF = new BigFraction(1, 2);",
      "info" : "FieldDeclaration[2302-2409]:FieldDeclaration[2302-2409]"
    }, {
      "left" : "public static final BigFraction ONE_QUARTER = new BigFraction(1, 4);",
      "right" : "public static final BigFraction ONE_QUARTER = new BigFraction(1, 4);",
      "info" : "FieldDeclaration[2415-2525]:FieldDeclaration[2415-2525]"
    }, {
      "left" : "public static final BigFraction ONE_THIRD = new BigFraction(1, 3);",
      "right" : "public static final BigFraction ONE_THIRD = new BigFraction(1, 3);",
      "info" : "FieldDeclaration[2531-2639]:FieldDeclaration[2531-2639]"
    }, {
      "left" : "public static final BigFraction THREE_FIFTHS = new BigFraction(3, 5);",
      "right" : "public static final BigFraction THREE_FIFTHS = new BigFraction(3, 5);",
      "info" : "FieldDeclaration[2645-2756]:FieldDeclaration[2645-2756]"
    }, {
      "left" : "public static final BigFraction THREE_QUARTERS = new BigFraction(3, 4);",
      "right" : "public static final BigFraction THREE_QUARTERS = new BigFraction(3, 4);",
      "info" : "FieldDeclaration[2762-2875]:FieldDeclaration[2762-2875]"
    }, {
      "left" : "public static final BigFraction TWO_FIFTHS = new BigFraction(2, 5);",
      "right" : "public static final BigFraction TWO_FIFTHS = new BigFraction(2, 5);",
      "info" : "FieldDeclaration[2881-2990]:FieldDeclaration[2881-2990]"
    }, {
      "left" : "public static final BigFraction TWO_QUARTERS = new BigFraction(2, 4);",
      "right" : "public static final BigFraction TWO_QUARTERS = new BigFraction(2, 4);",
      "info" : "FieldDeclaration[2996-3107]:FieldDeclaration[2996-3107]"
    }, {
      "left" : "public static final BigFraction TWO_THIRDS = new BigFraction(2, 3);",
      "right" : "public static final BigFraction TWO_THIRDS = new BigFraction(2, 3);",
      "info" : "FieldDeclaration[3113-3222]:FieldDeclaration[3113-3222]"
    }, {
      "left" : "private static final long serialVersionUID = -5630213147331578515L;",
      "right" : "private static final long serialVersionUID = -5630213147331578515L;",
      "info" : "FieldDeclaration[3228-3339]:FieldDeclaration[3228-3339]"
    }, {
      "left" : "private static final BigInteger ONE_HUNDRED = BigInteger.valueOf(100);",
      "right" : "private static final BigInteger ONE_HUNDRED = BigInteger.valueOf(100);",
      "info" : "FieldDeclaration[3345-3473]:FieldDeclaration[3345-3473]"
    }, {
      "left" : "private final BigInteger numerator;",
      "right" : "private final BigInteger numerator;",
      "info" : "FieldDeclaration[3479-3540]:FieldDeclaration[3479-3540]"
    }, {
      "left" : "private final BigInteger denominator;",
      "right" : "private final BigInteger denominator;",
      "info" : "FieldDeclaration[3546-3611]:FieldDeclaration[3546-3611]"
    }, {
      "left" : "public BigFraction(final BigInteger num)",
      "right" : "public BigFraction(final BigInteger num)",
      "info" : "MethodDeclaration[3617-3900]:MethodDeclaration[3617-3900]"
    }, {
      "left" : "public BigFraction(BigInteger num, BigInteger den)",
      "right" : "public BigFraction(BigInteger num, BigInteger den)",
      "info" : "MethodDeclaration[3906-5371]:MethodDeclaration[3906-5371]"
    }, {
      "left" : "public BigFraction(final double value) throws MathIllegalArgumentException",
      "right" : "public BigFraction(final double value) throws MathIllegalArgumentException",
      "info" : "MethodDeclaration[5377-7775]:MethodDeclaration[5377-7775]"
    }, {
      "left" : "public BigFraction(final double value, final double epsilon,\n                       final int maxIterations)\n        throws FractionConversionException",
      "right" : "public BigFraction(final double value, final double epsilon,\n                       final int maxIterations)\n        throws FractionConversionException",
      "info" : "MethodDeclaration[7781-8783]:MethodDeclaration[7781-8783]"
    }, {
      "left" : "private BigFraction(final double value, final double epsilon,\n                        final int maxDenominator, int maxIterations)\n        throws FractionConversionException",
      "right" : "private BigFraction(final double value, final double epsilon,\n                        final int maxDenominator, int maxIterations)\n        throws FractionConversionException",
      "info" : "MethodDeclaration[8789-12275]:MethodDeclaration[8789-12275]"
    }, {
      "left" : "public BigFraction(final double value, final int maxDenominator)\n        throws FractionConversionException",
      "right" : "public BigFraction(final double value, final int maxDenominator)\n        throws FractionConversionException",
      "info" : "MethodDeclaration[12281-13021]:MethodDeclaration[12281-13021]"
    }, {
      "left" : "public BigFraction(final int num)",
      "right" : "public BigFraction(final int num)",
      "info" : "MethodDeclaration[13027-13316]:MethodDeclaration[13027-13316]"
    }, {
      "left" : "public BigFraction(final int num, final int den)",
      "right" : "public BigFraction(final int num, final int den)",
      "info" : "MethodDeclaration[13322-13747]:MethodDeclaration[13322-13747]"
    }, {
      "left" : "public BigFraction(final long num)",
      "right" : "public BigFraction(final long num)",
      "info" : "MethodDeclaration[13753-14028]:MethodDeclaration[13753-14028]"
    }, {
      "left" : "public BigFraction(final long num, final long den)",
      "right" : "public BigFraction(final long num, final long den)",
      "info" : "MethodDeclaration[14034-14462]:MethodDeclaration[14034-14462]"
    }, {
      "left" : "public static BigFraction getReducedFraction(final int numerator,\n                                                 final int denominator)",
      "right" : "public static BigFraction getReducedFraction(final int numerator,\n                                                 final int denominator)",
      "info" : "MethodDeclaration[14468-15385]:MethodDeclaration[14468-15385]"
    }, {
      "left" : "public BigFraction abs()",
      "right" : "public BigFraction abs()",
      "info" : "MethodDeclaration[15391-15670]:MethodDeclaration[15391-15670]"
    }, {
      "left" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
      "right" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
      "info" : "MethodDeclaration[15676-16320]:MethodDeclaration[15676-16320]"
    }, {
      "left" : "public BigFraction add(final int i)",
      "right" : "public BigFraction add(final int i)",
      "info" : "MethodDeclaration[16326-16715]:MethodDeclaration[16326-16715]"
    }, {
      "left" : "public BigFraction add(final long l)",
      "right" : "public BigFraction add(final long l)",
      "info" : "MethodDeclaration[16721-17105]:MethodDeclaration[16721-17105]"
    }, {
      "left" : "public BigFraction add(final BigFraction fraction)",
      "right" : "public BigFraction add(final BigFraction fraction)",
      "info" : "MethodDeclaration[17111-18201]:MethodDeclaration[17111-18201]"
    }, {
      "left" : "public BigDecimal bigDecimalValue()",
      "right" : "public BigDecimal bigDecimalValue()",
      "info" : "MethodDeclaration[18207-18729]:MethodDeclaration[18207-18729]"
    }, {
      "left" : "public BigDecimal bigDecimalValue(final int roundingMode)",
      "right" : "public BigDecimal bigDecimalValue(final int roundingMode)",
      "info" : "MethodDeclaration[18735-19441]:MethodDeclaration[18735-19441]"
    }, {
      "left" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
      "right" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
      "info" : "MethodDeclaration[19447-20205]:MethodDeclaration[19447-20205]"
    }, {
      "left" : "public int compareTo(final BigFraction object)",
      "right" : "public int compareTo(final BigFraction object)",
      "info" : "MethodDeclaration[20211-20823]:MethodDeclaration[20211-20823]"
    }, {
      "left" : "public BigFraction divide(final BigInteger bg)",
      "right" : "public BigFraction divide(final BigInteger bg)",
      "info" : "MethodDeclaration[20829-21632]:MethodDeclaration[20829-21632]"
    }, {
      "left" : "public BigFraction divide(final int i)",
      "right" : "public BigFraction divide(final int i)",
      "info" : "MethodDeclaration[21638-22139]:MethodDeclaration[21638-22139]"
    }, {
      "left" : "public BigFraction divide(final long l)",
      "right" : "public BigFraction divide(final long l)",
      "info" : "MethodDeclaration[22145-22649]:MethodDeclaration[22145-22649]"
    }, {
      "left" : "public BigFraction divide(final BigFraction fraction)",
      "right" : "public BigFraction divide(final BigFraction fraction)",
      "info" : "MethodDeclaration[22655-23453]:MethodDeclaration[22655-23453]"
    }, {
      "left" : "public double doubleValue()",
      "right" : "public double doubleValue()",
      "info" : "MethodDeclaration[23459-24005]:MethodDeclaration[23459-24314]"
    }, {
      "left" : "public boolean equals(final Object other)",
      "right" : "public boolean equals(final Object other)",
      "info" : "MethodDeclaration[24011-25068]:MethodDeclaration[24320-25377]"
    }, {
      "left" : "public float floatValue()",
      "right" : "public float floatValue()",
      "info" : "MethodDeclaration[25074-25613]:MethodDeclaration[25383-26228]"
    }, {
      "left" : "public BigInteger getDenominator()",
      "right" : "public BigInteger getDenominator()",
      "info" : "MethodDeclaration[25619-25856]:MethodDeclaration[26234-26471]"
    }, {
      "left" : "public int getDenominatorAsInt()",
      "right" : "public int getDenominatorAsInt()",
      "info" : "MethodDeclaration[25862-26086]:MethodDeclaration[26477-26701]"
    }, {
      "left" : "public long getDenominatorAsLong()",
      "right" : "public long getDenominatorAsLong()",
      "info" : "MethodDeclaration[26092-26321]:MethodDeclaration[26707-26936]"
    }, {
      "left" : "public BigInteger getNumerator()",
      "right" : "public BigInteger getNumerator()",
      "info" : "MethodDeclaration[26327-26556]:MethodDeclaration[26942-27171]"
    }, {
      "left" : "public int getNumeratorAsInt()",
      "right" : "public int getNumeratorAsInt()",
      "info" : "MethodDeclaration[26562-26778]:MethodDeclaration[27177-27393]"
    }, {
      "left" : "public long getNumeratorAsLong()",
      "right" : "public long getNumeratorAsLong()",
      "info" : "MethodDeclaration[26784-27005]:MethodDeclaration[27399-27620]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[27011-27310]:MethodDeclaration[27626-27925]"
    }, {
      "left" : "public int intValue()",
      "right" : "public int intValue()",
      "info" : "MethodDeclaration[27316-27653]:MethodDeclaration[27931-28268]"
    }, {
      "left" : "public long longValue()",
      "right" : "public long longValue()",
      "info" : "MethodDeclaration[27659-28000]:MethodDeclaration[28274-28615]"
    }, {
      "left" : "public BigFraction multiply(final BigInteger bg)",
      "right" : "public BigFraction multiply(final BigInteger bg)",
      "info" : "MethodDeclaration[28006-28586]:MethodDeclaration[28621-29201]"
    }, {
      "left" : "public BigFraction multiply(final int i)",
      "right" : "public BigFraction multiply(final int i)",
      "info" : "MethodDeclaration[28592-28990]:MethodDeclaration[29207-29605]"
    }, {
      "left" : "public BigFraction multiply(final long l)",
      "right" : "public BigFraction multiply(final long l)",
      "info" : "MethodDeclaration[28996-29397]:MethodDeclaration[29611-30012]"
    }, {
      "left" : "public BigFraction multiply(final BigFraction fraction)",
      "right" : "public BigFraction multiply(final BigFraction fraction)",
      "info" : "MethodDeclaration[29403-30238]:MethodDeclaration[30018-30853]"
    }, {
      "left" : "public BigFraction negate()",
      "right" : "public BigFraction negate()",
      "info" : "MethodDeclaration[30244-30534]:MethodDeclaration[30859-31149]"
    }, {
      "left" : "public double percentageValue()",
      "right" : "public double percentageValue()",
      "info" : "MethodDeclaration[30540-30891]:MethodDeclaration[31155-31506]"
    }, {
      "left" : "public BigFraction pow(final int exponent)",
      "right" : "public BigFraction pow(final int exponent)",
      "info" : "MethodDeclaration[30897-31505]:MethodDeclaration[31512-32120]"
    }, {
      "left" : "public BigFraction pow(final long exponent)",
      "right" : "public BigFraction pow(final long exponent)",
      "info" : "MethodDeclaration[31511-32281]:MethodDeclaration[32126-32896]"
    }, {
      "left" : "public BigFraction pow(final BigInteger exponent)",
      "right" : "public BigFraction pow(final BigInteger exponent)",
      "info" : "MethodDeclaration[32287-33135]:MethodDeclaration[32902-33750]"
    }, {
      "left" : "public double pow(final double exponent)",
      "right" : "public double pow(final double exponent)",
      "info" : "MethodDeclaration[33141-33656]:MethodDeclaration[33756-34271]"
    }, {
      "left" : "public BigFraction reciprocal()",
      "right" : "public BigFraction reciprocal()",
      "info" : "MethodDeclaration[33662-33902]:MethodDeclaration[34277-34517]"
    }, {
      "left" : "public BigFraction reduce()",
      "right" : "public BigFraction reduce()",
      "info" : "MethodDeclaration[33908-34320]:MethodDeclaration[34523-34935]"
    }, {
      "left" : "public BigFraction subtract(final BigInteger bg)",
      "right" : "public BigFraction subtract(final BigInteger bg)",
      "info" : "MethodDeclaration[34326-34973]:MethodDeclaration[34941-35588]"
    }, {
      "left" : "public BigFraction subtract(final int i)",
      "right" : "public BigFraction subtract(final int i)",
      "info" : "MethodDeclaration[34979-35381]:MethodDeclaration[35594-35996]"
    }, {
      "left" : "public BigFraction subtract(final long l)",
      "right" : "public BigFraction subtract(final long l)",
      "info" : "MethodDeclaration[35387-35783]:MethodDeclaration[36002-36398]"
    }, {
      "left" : "public BigFraction subtract(final BigFraction fraction)",
      "right" : "public BigFraction subtract(final BigFraction fraction)",
      "info" : "MethodDeclaration[35789-36891]:MethodDeclaration[36404-37506]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[36897-37509]:MethodDeclaration[37512-38124]"
    }, {
      "left" : "public BigFractionField getField()",
      "right" : "public BigFractionField getField()",
      "info" : "MethodDeclaration[37515-37629]:MethodDeclaration[38130-38244]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1512-1518]:Modifier[1512-1518]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1519-1524]:TYPE_DECLARATION_KIND[1519-1524]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[1525-1536]:SimpleName[1525-1536]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[1549-1555]:SimpleType[1549-1555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3817-3823]:Modifier[3817-3823]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[3824-3835]:SimpleName[3824-3835]"
    }, {
      "left" : "final BigInteger num",
      "right" : "final BigInteger num",
      "info" : "SingleVariableDeclaration[3836-3856]:SingleVariableDeclaration[3836-3856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3858-3900]:Block[3858-3900]"
    }, {
      "left" : "this(num, BigInteger.ONE);",
      "right" : "this(num, BigInteger.ONE);",
      "info" : "ConstructorInvocation[3868-3894]:ConstructorInvocation[3868-3894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4332-4338]:Modifier[4332-4338]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[4339-4350]:SimpleName[4339-4350]"
    }, {
      "left" : "BigInteger num",
      "right" : "BigInteger num",
      "info" : "SingleVariableDeclaration[4351-4365]:SingleVariableDeclaration[4351-4365]"
    }, {
      "left" : "BigInteger den",
      "right" : "BigInteger den",
      "info" : "SingleVariableDeclaration[4367-4381]:SingleVariableDeclaration[4367-4381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4383-5371]:Block[4383-5371]"
    }, {
      "left" : "MathUtils.checkNotNull(num, LocalizedFormats.NUMERATOR);",
      "right" : "MathUtils.checkNotNull(num, LocalizedFormats.NUMERATOR);",
      "info" : "ExpressionStatement[4393-4449]:ExpressionStatement[4393-4449]"
    }, {
      "left" : "MathUtils.checkNotNull(den, LocalizedFormats.DENOMINATOR);",
      "right" : "MathUtils.checkNotNull(den, LocalizedFormats.DENOMINATOR);",
      "info" : "ExpressionStatement[4458-4516]:ExpressionStatement[4458-4516]"
    }, {
      "left" : "if (BigInteger.ZERO.equals(den))",
      "right" : "if (BigInteger.ZERO.equals(den))",
      "info" : "IfStatement[4525-4641]:IfStatement[4525-4641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4558-4641]:Block[4558-4641]"
    }, {
      "left" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
      "right" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
      "info" : "ThrowStatement[4572-4631]:ThrowStatement[4572-4631]"
    }, {
      "left" : "if (BigInteger.ZERO.equals(num))",
      "right" : "if (BigInteger.ZERO.equals(num))",
      "info" : "IfStatement[4650-5365]:IfStatement[4650-5365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4683-4779]:Block[4683-4779]"
    }, {
      "left" : "numerator   = BigInteger.ZERO;",
      "right" : "numerator   = BigInteger.ZERO;",
      "info" : "ExpressionStatement[4697-4727]:ExpressionStatement[4697-4727]"
    }, {
      "left" : "denominator = BigInteger.ONE;",
      "right" : "denominator = BigInteger.ONE;",
      "info" : "ExpressionStatement[4740-4769]:ExpressionStatement[4740-4769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4785-5365]:Block[4785-5365]"
    }, {
      "left" : "final BigInteger gcd = num.gcd(den);",
      "right" : "final BigInteger gcd = num.gcd(den);",
      "info" : "VariableDeclarationStatement[4879-4915]:VariableDeclarationStatement[4879-4915]"
    }, {
      "left" : "if (BigInteger.ONE.compareTo(gcd) < 0)",
      "right" : "if (BigInteger.ONE.compareTo(gcd) < 0)",
      "info" : "IfStatement[4928-5060]:IfStatement[4928-5060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4967-5060]:Block[4967-5060]"
    }, {
      "left" : "num = num.divide(gcd);",
      "right" : "num = num.divide(gcd);",
      "info" : "ExpressionStatement[4985-5007]:ExpressionStatement[4985-5007]"
    }, {
      "left" : "den = den.divide(gcd);",
      "right" : "den = den.divide(gcd);",
      "info" : "ExpressionStatement[5024-5046]:ExpressionStatement[5024-5046]"
    }, {
      "left" : "if (BigInteger.ZERO.compareTo(den) > 0)",
      "right" : "if (BigInteger.ZERO.compareTo(den) > 0)",
      "info" : "IfStatement[5112-5239]:IfStatement[5112-5239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5152-5239]:Block[5152-5239]"
    }, {
      "left" : "num = num.negate();",
      "right" : "num = num.negate();",
      "info" : "ExpressionStatement[5170-5189]:ExpressionStatement[5170-5189]"
    }, {
      "left" : "den = den.negate();",
      "right" : "den = den.negate();",
      "info" : "ExpressionStatement[5206-5225]:ExpressionStatement[5206-5225]"
    }, {
      "left" : "numerator   = num;",
      "right" : "numerator   = num;",
      "info" : "ExpressionStatement[5305-5323]:ExpressionStatement[5305-5323]"
    }, {
      "left" : "denominator = den;",
      "right" : "denominator = den;",
      "info" : "ExpressionStatement[5336-5354]:ExpressionStatement[5336-5354]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6453-6459]:Modifier[6453-6459]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[6460-6471]:SimpleName[6460-6471]"
    }, {
      "left" : "final double value",
      "right" : "final double value",
      "info" : "SingleVariableDeclaration[6472-6490]:SingleVariableDeclaration[6472-6490]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[6499-6527]:SimpleType[6499-6527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6528-7775]:Block[6528-7775]"
    }, {
      "left" : "if (Double.isNaN(value))",
      "right" : "if (Double.isNaN(value))",
      "info" : "IfStatement[6538-6665]:IfStatement[6538-6665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6563-6665]:Block[6563-6665]"
    }, {
      "left" : "throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);",
      "right" : "throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);",
      "info" : "ThrowStatement[6577-6655]:ThrowStatement[6577-6655]"
    }, {
      "left" : "if (Double.isInfinite(value))",
      "right" : "if (Double.isInfinite(value))",
      "info" : "IfStatement[6674-6811]:IfStatement[6674-6811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6704-6811]:Block[6704-6811]"
    }, {
      "left" : "throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);",
      "right" : "throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);",
      "info" : "ThrowStatement[6718-6801]:ThrowStatement[6718-6801]"
    }, {
      "left" : "final long bits     = Double.doubleToLongBits(value);",
      "right" : "final long bits     = Double.doubleToLongBits(value);",
      "info" : "VariableDeclarationStatement[6874-6927]:VariableDeclarationStatement[6874-6927]"
    }, {
      "left" : "final long sign     = bits & 0x8000000000000000L;",
      "right" : "final long sign     = bits & 0x8000000000000000L;",
      "info" : "VariableDeclarationStatement[6936-6985]:VariableDeclarationStatement[6936-6985]"
    }, {
      "left" : "final long exponent = bits & 0x7ff0000000000000L;",
      "right" : "final long exponent = bits & 0x7ff0000000000000L;",
      "info" : "VariableDeclarationStatement[6994-7043]:VariableDeclarationStatement[6994-7043]"
    }, {
      "left" : "long m              = bits & 0x000fffffffffffffL;",
      "right" : "long m              = bits & 0x000fffffffffffffL;",
      "info" : "VariableDeclarationStatement[7052-7101]:VariableDeclarationStatement[7052-7101]"
    }, {
      "left" : "if (exponent != 0)",
      "right" : "if (exponent != 0)",
      "info" : "IfStatement[7110-7261]:IfStatement[7110-7261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7129-7261]:Block[7129-7261]"
    }, {
      "left" : "m |= 0x0010000000000000L;",
      "right" : "m |= 0x0010000000000000L;",
      "info" : "ExpressionStatement[7226-7251]:ExpressionStatement[7226-7251]"
    }, {
      "left" : "if (sign != 0)",
      "right" : "if (sign != 0)",
      "info" : "IfStatement[7270-7316]:IfStatement[7270-7316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7285-7316]:Block[7285-7316]"
    }, {
      "left" : "m = -m;",
      "right" : "m = -m;",
      "info" : "ExpressionStatement[7299-7306]:ExpressionStatement[7299-7306]"
    }, {
      "left" : "int k = ((int) (exponent >> 52)) - 1075;",
      "right" : "int k = ((int) (exponent >> 52)) - 1075;",
      "info" : "VariableDeclarationStatement[7325-7365]:VariableDeclarationStatement[7325-7365]"
    }, {
      "left" : "while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0))",
      "right" : "while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0))",
      "info" : "WhileStatement[7374-7487]:WhileStatement[7374-7487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7435-7487]:Block[7435-7487]"
    }, {
      "left" : "m = m >> 1;",
      "right" : "m = m >> 1;",
      "info" : "ExpressionStatement[7449-7460]:ExpressionStatement[7449-7460]"
    }, {
      "left" : "++k;",
      "right" : "++k;",
      "info" : "ExpressionStatement[7473-7477]:ExpressionStatement[7473-7477]"
    }, {
      "left" : "if (k < 0)",
      "right" : "if (k < 0)",
      "info" : "IfStatement[7497-7768]:IfStatement[7497-7768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7508-7623]:Block[7508-7623]"
    }, {
      "left" : "numerator   = BigInteger.valueOf(m);",
      "right" : "numerator   = BigInteger.valueOf(m);",
      "info" : "ExpressionStatement[7522-7558]:ExpressionStatement[7522-7558]"
    }, {
      "left" : "denominator = BigInteger.ZERO.flipBit(-k);",
      "right" : "denominator = BigInteger.ZERO.flipBit(-k);",
      "info" : "ExpressionStatement[7571-7613]:ExpressionStatement[7571-7613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7629-7768]:Block[7629-7768]"
    }, {
      "left" : "numerator   = BigInteger.valueOf(m).multiply(BigInteger.ZERO.flipBit(k));",
      "right" : "numerator   = BigInteger.valueOf(m).multiply(BigInteger.ZERO.flipBit(k));",
      "info" : "ExpressionStatement[7643-7716]:ExpressionStatement[7643-7716]"
    }, {
      "left" : "denominator = BigInteger.ONE;",
      "right" : "denominator = BigInteger.ONE;",
      "info" : "ExpressionStatement[7729-7758]:ExpressionStatement[7729-7758]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8560-8566]:Modifier[8560-8566]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[8567-8578]:SimpleName[8567-8578]"
    }, {
      "left" : "final double value",
      "right" : "final double value",
      "info" : "SingleVariableDeclaration[8579-8597]:SingleVariableDeclaration[8579-8597]"
    }, {
      "left" : "final double epsilon",
      "right" : "final double epsilon",
      "info" : "SingleVariableDeclaration[8599-8619]:SingleVariableDeclaration[8599-8619]"
    }, {
      "left" : "final int maxIterations",
      "right" : "final int maxIterations",
      "info" : "SingleVariableDeclaration[8644-8667]:SingleVariableDeclaration[8644-8667]"
    }, {
      "left" : "FractionConversionException",
      "right" : "FractionConversionException",
      "info" : "SimpleType[8684-8711]:SimpleType[8684-8711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8712-8783]:Block[8712-8783]"
    }, {
      "left" : "this(value, epsilon, Integer.MAX_VALUE, maxIterations);",
      "right" : "this(value, epsilon, Integer.MAX_VALUE, maxIterations);",
      "info" : "ConstructorInvocation[8722-8777]:ConstructorInvocation[8722-8777]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10263-10270]:Modifier[10263-10270]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[10271-10282]:SimpleName[10271-10282]"
    }, {
      "left" : "final double value",
      "right" : "final double value",
      "info" : "SingleVariableDeclaration[10283-10301]:SingleVariableDeclaration[10283-10301]"
    }, {
      "left" : "final double epsilon",
      "right" : "final double epsilon",
      "info" : "SingleVariableDeclaration[10303-10323]:SingleVariableDeclaration[10303-10323]"
    }, {
      "left" : "final int maxDenominator",
      "right" : "final int maxDenominator",
      "info" : "SingleVariableDeclaration[10349-10373]:SingleVariableDeclaration[10349-10373]"
    }, {
      "left" : "int maxIterations",
      "right" : "int maxIterations",
      "info" : "SingleVariableDeclaration[10375-10392]:SingleVariableDeclaration[10375-10392]"
    }, {
      "left" : "FractionConversionException",
      "right" : "FractionConversionException",
      "info" : "SimpleType[10409-10436]:SimpleType[10409-10436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10437-12275]:Block[10437-12275]"
    }, {
      "left" : "long overflow = Integer.MAX_VALUE;",
      "right" : "long overflow = Integer.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[10447-10481]:VariableDeclarationStatement[10447-10481]"
    }, {
      "left" : "double r0 = value;",
      "right" : "double r0 = value;",
      "info" : "VariableDeclarationStatement[10490-10508]:VariableDeclarationStatement[10490-10508]"
    }, {
      "left" : "long a0 = (long) FastMath.floor(r0);",
      "right" : "long a0 = (long) FastMath.floor(r0);",
      "info" : "VariableDeclarationStatement[10517-10553]:VariableDeclarationStatement[10517-10553]"
    }, {
      "left" : "if (a0 > overflow)",
      "right" : "if (a0 > overflow)",
      "info" : "IfStatement[10562-10658]:IfStatement[10562-10658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10581-10658]:Block[10581-10658]"
    }, {
      "left" : "throw new FractionConversionException(value, a0, 1l);",
      "right" : "throw new FractionConversionException(value, a0, 1l);",
      "info" : "ThrowStatement[10595-10648]:ThrowStatement[10595-10648]"
    }, {
      "left" : "if (FastMath.abs(a0 - value) < epsilon)",
      "right" : "if (FastMath.abs(a0 - value) < epsilon)",
      "info" : "IfStatement[10763-10924]:IfStatement[10763-10924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10803-10924]:Block[10803-10924]"
    }, {
      "left" : "numerator = BigInteger.valueOf(a0);",
      "right" : "numerator = BigInteger.valueOf(a0);",
      "info" : "ExpressionStatement[10817-10852]:ExpressionStatement[10817-10852]"
    }, {
      "left" : "denominator = BigInteger.ONE;",
      "right" : "denominator = BigInteger.ONE;",
      "info" : "ExpressionStatement[10865-10894]:ExpressionStatement[10865-10894]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[10907-10914]:ReturnStatement[10907-10914]"
    }, {
      "left" : "long p0 = 1;",
      "right" : "long p0 = 1;",
      "info" : "VariableDeclarationStatement[10934-10946]:VariableDeclarationStatement[10934-10946]"
    }, {
      "left" : "long q0 = 0;",
      "right" : "long q0 = 0;",
      "info" : "VariableDeclarationStatement[10955-10967]:VariableDeclarationStatement[10955-10967]"
    }, {
      "left" : "long p1 = a0;",
      "right" : "long p1 = a0;",
      "info" : "VariableDeclarationStatement[10976-10989]:VariableDeclarationStatement[10976-10989]"
    }, {
      "left" : "long q1 = 1;",
      "right" : "long q1 = 1;",
      "info" : "VariableDeclarationStatement[10998-11010]:VariableDeclarationStatement[10998-11010]"
    }, {
      "left" : "long p2 = 0;",
      "right" : "long p2 = 0;",
      "info" : "VariableDeclarationStatement[11020-11032]:VariableDeclarationStatement[11020-11032]"
    }, {
      "left" : "long q2 = 1;",
      "right" : "long q2 = 1;",
      "info" : "VariableDeclarationStatement[11041-11053]:VariableDeclarationStatement[11041-11053]"
    }, {
      "left" : "int n = 0;",
      "right" : "int n = 0;",
      "info" : "VariableDeclarationStatement[11063-11073]:VariableDeclarationStatement[11063-11073]"
    }, {
      "left" : "boolean stop = false;",
      "right" : "boolean stop = false;",
      "info" : "VariableDeclarationStatement[11082-11103]:VariableDeclarationStatement[11082-11103]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[11112-11888]:DoStatement[11112-11888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11115-11873]:Block[11115-11873]"
    }, {
      "left" : "++n;",
      "right" : "++n;",
      "info" : "ExpressionStatement[11129-11133]:ExpressionStatement[11129-11133]"
    }, {
      "left" : "final double r1 = 1.0 / (r0 - a0);",
      "right" : "final double r1 = 1.0 / (r0 - a0);",
      "info" : "VariableDeclarationStatement[11146-11180]:VariableDeclarationStatement[11146-11180]"
    }, {
      "left" : "final long a1 = (long) FastMath.floor(r1);",
      "right" : "final long a1 = (long) FastMath.floor(r1);",
      "info" : "VariableDeclarationStatement[11193-11235]:VariableDeclarationStatement[11193-11235]"
    }, {
      "left" : "p2 = (a1 * p1) + p0;",
      "right" : "p2 = (a1 * p1) + p0;",
      "info" : "ExpressionStatement[11248-11268]:ExpressionStatement[11248-11268]"
    }, {
      "left" : "q2 = (a1 * q1) + q0;",
      "right" : "q2 = (a1 * q1) + q0;",
      "info" : "ExpressionStatement[11281-11301]:ExpressionStatement[11281-11301]"
    }, {
      "left" : "if ((p2 > overflow) || (q2 > overflow))",
      "right" : "if ((p2 > overflow) || (q2 > overflow))",
      "info" : "IfStatement[11314-11439]:IfStatement[11314-11439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11354-11439]:Block[11354-11439]"
    }, {
      "left" : "throw new FractionConversionException(value, p2, q2);",
      "right" : "throw new FractionConversionException(value, p2, q2);",
      "info" : "ThrowStatement[11372-11425]:ThrowStatement[11372-11425]"
    }, {
      "left" : "final double convergent = (double) p2 / (double) q2;",
      "right" : "final double convergent = (double) p2 / (double) q2;",
      "info" : "VariableDeclarationStatement[11453-11505]:VariableDeclarationStatement[11453-11505]"
    }, {
      "left" : "if ((n < maxIterations) &&\n                (FastMath.abs(convergent - value) > epsilon) &&\n                (q2 < maxDenominator))",
      "right" : "if ((n < maxIterations) &&\n                (FastMath.abs(convergent - value) > epsilon) &&\n                (q2 < maxDenominator))",
      "info" : "IfStatement[11518-11863]:IfStatement[11518-11863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11648-11813]:Block[11648-11813]"
    }, {
      "left" : "p0 = p1;",
      "right" : "p0 = p1;",
      "info" : "ExpressionStatement[11666-11674]:ExpressionStatement[11666-11674]"
    }, {
      "left" : "p1 = p2;",
      "right" : "p1 = p2;",
      "info" : "ExpressionStatement[11691-11699]:ExpressionStatement[11691-11699]"
    }, {
      "left" : "q0 = q1;",
      "right" : "q0 = q1;",
      "info" : "ExpressionStatement[11716-11724]:ExpressionStatement[11716-11724]"
    }, {
      "left" : "q1 = q2;",
      "right" : "q1 = q2;",
      "info" : "ExpressionStatement[11741-11749]:ExpressionStatement[11741-11749]"
    }, {
      "left" : "a0 = a1;",
      "right" : "a0 = a1;",
      "info" : "ExpressionStatement[11766-11774]:ExpressionStatement[11766-11774]"
    }, {
      "left" : "r0 = r1;",
      "right" : "r0 = r1;",
      "info" : "ExpressionStatement[11791-11799]:ExpressionStatement[11791-11799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11819-11863]:Block[11819-11863]"
    }, {
      "left" : "stop = true;",
      "right" : "stop = true;",
      "info" : "ExpressionStatement[11837-11849]:ExpressionStatement[11837-11849]"
    }, {
      "left" : "if (n >= maxIterations)",
      "right" : "if (n >= maxIterations)",
      "info" : "IfStatement[11898-12006]:IfStatement[11898-12006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11922-12006]:Block[11922-12006]"
    }, {
      "left" : "throw new FractionConversionException(value, maxIterations);",
      "right" : "throw new FractionConversionException(value, maxIterations);",
      "info" : "ThrowStatement[11936-11996]:ThrowStatement[11936-11996]"
    }, {
      "left" : "if (q2 < maxDenominator)",
      "right" : "if (q2 < maxDenominator)",
      "info" : "IfStatement[12016-12269]:IfStatement[12016-12269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12041-12152]:Block[12041-12152]"
    }, {
      "left" : "numerator   = BigInteger.valueOf(p2);",
      "right" : "numerator   = BigInteger.valueOf(p2);",
      "info" : "ExpressionStatement[12055-12092]:ExpressionStatement[12055-12092]"
    }, {
      "left" : "denominator = BigInteger.valueOf(q2);",
      "right" : "denominator = BigInteger.valueOf(q2);",
      "info" : "ExpressionStatement[12105-12142]:ExpressionStatement[12105-12142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12158-12269]:Block[12158-12269]"
    }, {
      "left" : "numerator   = BigInteger.valueOf(p1);",
      "right" : "numerator   = BigInteger.valueOf(p1);",
      "info" : "ExpressionStatement[12172-12209]:ExpressionStatement[12172-12209]"
    }, {
      "left" : "denominator = BigInteger.valueOf(q1);",
      "right" : "denominator = BigInteger.valueOf(q1);",
      "info" : "ExpressionStatement[12222-12259]:ExpressionStatement[12222-12259]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12861-12867]:Modifier[12861-12867]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[12868-12879]:SimpleName[12868-12879]"
    }, {
      "left" : "final double value",
      "right" : "final double value",
      "info" : "SingleVariableDeclaration[12880-12898]:SingleVariableDeclaration[12880-12898]"
    }, {
      "left" : "final int maxDenominator",
      "right" : "final int maxDenominator",
      "info" : "SingleVariableDeclaration[12900-12924]:SingleVariableDeclaration[12900-12924]"
    }, {
      "left" : "FractionConversionException",
      "right" : "FractionConversionException",
      "info" : "SimpleType[12941-12968]:SimpleType[12941-12968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12969-13021]:Block[12969-13021]"
    }, {
      "left" : "this(value, 0, maxDenominator, 100);",
      "right" : "this(value, 0, maxDenominator, 100);",
      "info" : "ConstructorInvocation[12979-13015]:ConstructorInvocation[12979-13015]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13220-13226]:Modifier[13220-13226]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[13227-13238]:SimpleName[13227-13238]"
    }, {
      "left" : "final int num",
      "right" : "final int num",
      "info" : "SingleVariableDeclaration[13239-13252]:SingleVariableDeclaration[13239-13252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13254-13316]:Block[13254-13316]"
    }, {
      "left" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
      "right" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
      "info" : "ConstructorInvocation[13264-13310]:ConstructorInvocation[13264-13310]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13627-13633]:Modifier[13627-13633]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[13634-13645]:SimpleName[13634-13645]"
    }, {
      "left" : "final int num",
      "right" : "final int num",
      "info" : "SingleVariableDeclaration[13646-13659]:SingleVariableDeclaration[13646-13659]"
    }, {
      "left" : "final int den",
      "right" : "final int den",
      "info" : "SingleVariableDeclaration[13661-13674]:SingleVariableDeclaration[13661-13674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13676-13747]:Block[13676-13747]"
    }, {
      "left" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
      "right" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
      "info" : "ConstructorInvocation[13686-13741]:ConstructorInvocation[13686-13741]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13931-13937]:Modifier[13931-13937]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[13938-13949]:SimpleName[13938-13949]"
    }, {
      "left" : "final long num",
      "right" : "final long num",
      "info" : "SingleVariableDeclaration[13950-13964]:SingleVariableDeclaration[13950-13964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13966-14028]:Block[13966-14028]"
    }, {
      "left" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
      "right" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
      "info" : "ConstructorInvocation[13976-14022]:ConstructorInvocation[13976-14022]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14340-14346]:Modifier[14340-14346]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleName[14347-14358]:SimpleName[14347-14358]"
    }, {
      "left" : "final long num",
      "right" : "final long num",
      "info" : "SingleVariableDeclaration[14359-14373]:SingleVariableDeclaration[14359-14373]"
    }, {
      "left" : "final long den",
      "right" : "final long den",
      "info" : "SingleVariableDeclaration[14375-14389]:SingleVariableDeclaration[14375-14389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14391-14462]:Block[14391-14462]"
    }, {
      "left" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
      "right" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
      "info" : "ConstructorInvocation[14401-14456]:ConstructorInvocation[14401-14456]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15099-15105]:Modifier[15099-15105]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15106-15112]:Modifier[15106-15112]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[15113-15124]:SimpleType[15113-15124]"
    }, {
      "left" : "getReducedFraction",
      "right" : "getReducedFraction",
      "info" : "SimpleName[15125-15143]:SimpleName[15125-15143]"
    }, {
      "left" : "final int numerator",
      "right" : "final int numerator",
      "info" : "SingleVariableDeclaration[15144-15163]:SingleVariableDeclaration[15144-15163]"
    }, {
      "left" : "final int denominator",
      "right" : "final int denominator",
      "info" : "SingleVariableDeclaration[15214-15235]:SingleVariableDeclaration[15214-15235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15237-15385]:Block[15237-15385]"
    }, {
      "left" : "if (numerator == 0)",
      "right" : "if (numerator == 0)",
      "info" : "IfStatement[15247-15322]:IfStatement[15247-15322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15267-15322]:Block[15267-15322]"
    }, {
      "left" : "return ZERO;",
      "right" : "return ZERO;",
      "info" : "ReturnStatement[15281-15293]:ReturnStatement[15281-15293]"
    }, {
      "left" : "return new BigFraction(numerator, denominator);",
      "right" : "return new BigFraction(numerator, denominator);",
      "info" : "ReturnStatement[15332-15379]:ReturnStatement[15332-15379]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15560-15566]:Modifier[15560-15566]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[15567-15578]:SimpleType[15567-15578]"
    }, {
      "left" : "abs",
      "right" : "abs",
      "info" : "SimpleName[15579-15582]:SimpleName[15579-15582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15585-15670]:Block[15585-15670]"
    }, {
      "left" : "return (BigInteger.ZERO.compareTo(numerator) <= 0) ? this : negate();",
      "right" : "return (BigInteger.ZERO.compareTo(numerator) <= 0) ? this : negate();",
      "info" : "ReturnStatement[15595-15664]:ReturnStatement[15595-15664]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16118-16124]:Modifier[16118-16124]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[16125-16136]:SimpleType[16125-16136]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[16137-16140]:SimpleName[16137-16140]"
    }, {
      "left" : "final BigInteger bg",
      "right" : "final BigInteger bg",
      "info" : "SingleVariableDeclaration[16141-16160]:SingleVariableDeclaration[16141-16160]"
    }, {
      "left" : "NullArgumentException",
      "right" : "NullArgumentException",
      "info" : "SimpleType[16169-16190]:SimpleType[16169-16190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16191-16320]:Block[16191-16320]"
    }, {
      "left" : "MathUtils.checkNotNull(bg);",
      "right" : "MathUtils.checkNotNull(bg);",
      "info" : "ExpressionStatement[16201-16228]:ExpressionStatement[16201-16228]"
    }, {
      "left" : "return new BigFraction(numerator.add(denominator.multiply(bg)), denominator);",
      "right" : "return new BigFraction(numerator.add(denominator.multiply(bg)), denominator);",
      "info" : "ReturnStatement[16237-16314]:ReturnStatement[16237-16314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16629-16635]:Modifier[16629-16635]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[16636-16647]:SimpleType[16636-16647]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[16648-16651]:SimpleName[16648-16651]"
    }, {
      "left" : "final int i",
      "right" : "final int i",
      "info" : "SingleVariableDeclaration[16652-16663]:SingleVariableDeclaration[16652-16663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16665-16715]:Block[16665-16715]"
    }, {
      "left" : "return add(BigInteger.valueOf(i));",
      "right" : "return add(BigInteger.valueOf(i));",
      "info" : "ReturnStatement[16675-16709]:ReturnStatement[16675-16709]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17018-17024]:Modifier[17018-17024]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[17025-17036]:SimpleType[17025-17036]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[17037-17040]:SimpleName[17037-17040]"
    }, {
      "left" : "final long l",
      "right" : "final long l",
      "info" : "SingleVariableDeclaration[17041-17053]:SingleVariableDeclaration[17041-17053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17055-17105]:Block[17055-17105]"
    }, {
      "left" : "return add(BigInteger.valueOf(l));",
      "right" : "return add(BigInteger.valueOf(l));",
      "info" : "ReturnStatement[17065-17099]:ReturnStatement[17065-17099]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17511-17517]:Modifier[17511-17517]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[17518-17529]:SimpleType[17518-17529]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[17530-17533]:SimpleName[17530-17533]"
    }, {
      "left" : "final BigFraction fraction",
      "right" : "final BigFraction fraction",
      "info" : "SingleVariableDeclaration[17534-17560]:SingleVariableDeclaration[17534-17560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17562-18201]:Block[17562-18201]"
    }, {
      "left" : "if (fraction == null)",
      "right" : "if (fraction == null)",
      "info" : "IfStatement[17572-17677]:IfStatement[17572-17677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17594-17677]:Block[17594-17677]"
    }, {
      "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "info" : "ThrowStatement[17608-17667]:ThrowStatement[17608-17667]"
    }, {
      "left" : "if (ZERO.equals(fraction))",
      "right" : "if (ZERO.equals(fraction))",
      "info" : "IfStatement[17686-17749]:IfStatement[17686-17749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17713-17749]:Block[17713-17749]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17727-17739]:ReturnStatement[17727-17739]"
    }, {
      "left" : "BigInteger num = null;",
      "right" : "BigInteger num = null;",
      "info" : "VariableDeclarationStatement[17759-17781]:VariableDeclarationStatement[17759-17781]"
    }, {
      "left" : "BigInteger den = null;",
      "right" : "BigInteger den = null;",
      "info" : "VariableDeclarationStatement[17790-17812]:VariableDeclarationStatement[17790-17812]"
    }, {
      "left" : "if (denominator.equals(fraction.denominator))",
      "right" : "if (denominator.equals(fraction.denominator))",
      "info" : "IfStatement[17822-18152]:IfStatement[17822-18152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17868-17963]:Block[17868-17963]"
    }, {
      "left" : "num = numerator.add(fraction.numerator);",
      "right" : "num = numerator.add(fraction.numerator);",
      "info" : "ExpressionStatement[17882-17922]:ExpressionStatement[17882-17922]"
    }, {
      "left" : "den = denominator;",
      "right" : "den = denominator;",
      "info" : "ExpressionStatement[17935-17953]:ExpressionStatement[17935-17953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17969-18152]:Block[17969-18152]"
    }, {
      "left" : "num = (numerator.multiply(fraction.denominator)).add((fraction.numerator).multiply(denominator));",
      "right" : "num = (numerator.multiply(fraction.denominator)).add((fraction.numerator).multiply(denominator));",
      "info" : "ExpressionStatement[17983-18080]:ExpressionStatement[17983-18080]"
    }, {
      "left" : "den = denominator.multiply(fraction.denominator);",
      "right" : "den = denominator.multiply(fraction.denominator);",
      "info" : "ExpressionStatement[18093-18142]:ExpressionStatement[18093-18142]"
    }, {
      "left" : "return new BigFraction(num, den);",
      "right" : "return new BigFraction(num, den);",
      "info" : "ReturnStatement[18161-18194]:ReturnStatement[18161-18194]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18608-18614]:Modifier[18608-18614]"
    }, {
      "left" : "BigDecimal",
      "right" : "BigDecimal",
      "info" : "SimpleType[18615-18625]:SimpleType[18615-18625]"
    }, {
      "left" : "bigDecimalValue",
      "right" : "bigDecimalValue",
      "info" : "SimpleName[18626-18641]:SimpleName[18626-18641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18644-18729]:Block[18644-18729]"
    }, {
      "left" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator));",
      "right" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator));",
      "info" : "ReturnStatement[18654-18723]:ReturnStatement[18654-18723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19284-19290]:Modifier[19284-19290]"
    }, {
      "left" : "BigDecimal",
      "right" : "BigDecimal",
      "info" : "SimpleType[19291-19301]:SimpleType[19291-19301]"
    }, {
      "left" : "bigDecimalValue",
      "right" : "bigDecimalValue",
      "info" : "SimpleName[19302-19317]:SimpleName[19302-19317]"
    }, {
      "left" : "final int roundingMode",
      "right" : "final int roundingMode",
      "info" : "SingleVariableDeclaration[19318-19340]:SingleVariableDeclaration[19318-19340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19342-19441]:Block[19342-19441]"
    }, {
      "left" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), roundingMode);",
      "right" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), roundingMode);",
      "info" : "ReturnStatement[19352-19435]:ReturnStatement[19352-19435]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20024-20030]:Modifier[20024-20030]"
    }, {
      "left" : "BigDecimal",
      "right" : "BigDecimal",
      "info" : "SimpleType[20031-20041]:SimpleType[20031-20041]"
    }, {
      "left" : "bigDecimalValue",
      "right" : "bigDecimalValue",
      "info" : "SimpleName[20042-20057]:SimpleName[20042-20057]"
    }, {
      "left" : "final int scale",
      "right" : "final int scale",
      "info" : "SingleVariableDeclaration[20058-20073]:SingleVariableDeclaration[20058-20073]"
    }, {
      "left" : "final int roundingMode",
      "right" : "final int roundingMode",
      "info" : "SingleVariableDeclaration[20075-20097]:SingleVariableDeclaration[20075-20097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20099-20205]:Block[20099-20205]"
    }, {
      "left" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), scale, roundingMode);",
      "right" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), scale, roundingMode);",
      "info" : "ReturnStatement[20109-20199]:ReturnStatement[20109-20199]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20604-20610]:Modifier[20604-20610]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[20611-20614]:PrimitiveType[20611-20614]"
    }, {
      "left" : "compareTo",
      "right" : "compareTo",
      "info" : "SimpleName[20615-20624]:SimpleName[20615-20624]"
    }, {
      "left" : "final BigFraction object",
      "right" : "final BigFraction object",
      "info" : "SingleVariableDeclaration[20625-20649]:SingleVariableDeclaration[20625-20649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20651-20823]:Block[20651-20823]"
    }, {
      "left" : "BigInteger nOd = numerator.multiply(object.denominator);",
      "right" : "BigInteger nOd = numerator.multiply(object.denominator);",
      "info" : "VariableDeclarationStatement[20661-20717]:VariableDeclarationStatement[20661-20717]"
    }, {
      "left" : "BigInteger dOn = denominator.multiply(object.numerator);",
      "right" : "BigInteger dOn = denominator.multiply(object.numerator);",
      "info" : "VariableDeclarationStatement[20726-20782]:VariableDeclarationStatement[20726-20782]"
    }, {
      "left" : "return nOd.compareTo(dOn);",
      "right" : "return nOd.compareTo(dOn);",
      "info" : "ReturnStatement[20791-20817]:ReturnStatement[20791-20817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21385-21391]:Modifier[21385-21391]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[21392-21403]:SimpleType[21392-21403]"
    }, {
      "left" : "divide",
      "right" : "divide",
      "info" : "SimpleName[21404-21410]:SimpleName[21404-21410]"
    }, {
      "left" : "final BigInteger bg",
      "right" : "final BigInteger bg",
      "info" : "SingleVariableDeclaration[21411-21430]:SingleVariableDeclaration[21411-21430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21432-21632]:Block[21432-21632]"
    }, {
      "left" : "if (BigInteger.ZERO.equals(bg))",
      "right" : "if (BigInteger.ZERO.equals(bg))",
      "info" : "IfStatement[21442-21557]:IfStatement[21442-21557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21474-21557]:Block[21474-21557]"
    }, {
      "left" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
      "right" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
      "info" : "ThrowStatement[21488-21547]:ThrowStatement[21488-21547]"
    }, {
      "left" : "return new BigFraction(numerator, denominator.multiply(bg));",
      "right" : "return new BigFraction(numerator, denominator.multiply(bg));",
      "info" : "ReturnStatement[21566-21626]:ReturnStatement[21566-21626]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22047-22053]:Modifier[22047-22053]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[22054-22065]:SimpleType[22054-22065]"
    }, {
      "left" : "divide",
      "right" : "divide",
      "info" : "SimpleName[22066-22072]:SimpleName[22066-22072]"
    }, {
      "left" : "final int i",
      "right" : "final int i",
      "info" : "SingleVariableDeclaration[22073-22084]:SingleVariableDeclaration[22073-22084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22086-22139]:Block[22086-22139]"
    }, {
      "left" : "return divide(BigInteger.valueOf(i));",
      "right" : "return divide(BigInteger.valueOf(i));",
      "info" : "ReturnStatement[22096-22133]:ReturnStatement[22096-22133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22556-22562]:Modifier[22556-22562]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[22563-22574]:SimpleType[22563-22574]"
    }, {
      "left" : "divide",
      "right" : "divide",
      "info" : "SimpleName[22575-22581]:SimpleName[22575-22581]"
    }, {
      "left" : "final long l",
      "right" : "final long l",
      "info" : "SingleVariableDeclaration[22582-22594]:SingleVariableDeclaration[22582-22594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22596-22649]:Block[22596-22649]"
    }, {
      "left" : "return divide(BigInteger.valueOf(l));",
      "right" : "return divide(BigInteger.valueOf(l));",
      "info" : "ReturnStatement[22606-22643]:ReturnStatement[22606-22643]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23089-23095]:Modifier[23089-23095]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[23096-23107]:SimpleType[23096-23107]"
    }, {
      "left" : "divide",
      "right" : "divide",
      "info" : "SimpleName[23108-23114]:SimpleName[23108-23114]"
    }, {
      "left" : "final BigFraction fraction",
      "right" : "final BigFraction fraction",
      "info" : "SingleVariableDeclaration[23115-23141]:SingleVariableDeclaration[23115-23141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23143-23453]:Block[23143-23453]"
    }, {
      "left" : "if (fraction == null)",
      "right" : "if (fraction == null)",
      "info" : "IfStatement[23153-23258]:IfStatement[23153-23258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23175-23258]:Block[23175-23258]"
    }, {
      "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "info" : "ThrowStatement[23189-23248]:ThrowStatement[23189-23248]"
    }, {
      "left" : "if (BigInteger.ZERO.equals(fraction.numerator))",
      "right" : "if (BigInteger.ZERO.equals(fraction.numerator))",
      "info" : "IfStatement[23267-23398]:IfStatement[23267-23398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23315-23398]:Block[23315-23398]"
    }, {
      "left" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
      "right" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
      "info" : "ThrowStatement[23329-23388]:ThrowStatement[23329-23388]"
    }, {
      "left" : "return multiply(fraction.reciprocal());",
      "right" : "return multiply(fraction.reciprocal());",
      "info" : "ReturnStatement[23408-23447]:ReturnStatement[23408-23447]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23721-23730]:MarkerAnnotation[23721-23730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23735-23741]:Modifier[23735-23741]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[23742-23748]:PrimitiveType[23742-23748]"
    }, {
      "left" : "doubleValue",
      "right" : "doubleValue",
      "info" : "SimpleName[23749-23760]:SimpleName[23749-23760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23763-24005]:Block[23763-24314]"
    }, {
      "left" : "double result = numerator.doubleValue() / denominator.doubleValue();",
      "right" : "double result = numerator.doubleValue() / denominator.doubleValue();",
      "info" : "VariableDeclarationStatement[23773-23841]:VariableDeclarationStatement[23773-23841]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[23985-23999]:ReturnStatement[24294-24308]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24623-24632]:MarkerAnnotation[24932-24941]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24637-24643]:Modifier[24946-24952]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[24644-24651]:PrimitiveType[24953-24960]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[24652-24658]:SimpleName[24961-24967]"
    }, {
      "left" : "final Object other",
      "right" : "final Object other",
      "info" : "SingleVariableDeclaration[24659-24677]:SingleVariableDeclaration[24968-24986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24679-25068]:Block[24988-25377]"
    }, {
      "left" : "boolean ret = false;",
      "right" : "boolean ret = false;",
      "info" : "VariableDeclarationStatement[24689-24709]:VariableDeclarationStatement[24998-25018]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[24719-25041]:IfStatement[25028-25350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24738-24773]:Block[25047-25082]"
    }, {
      "left" : "ret = true;",
      "right" : "ret = true;",
      "info" : "ExpressionStatement[24752-24763]:ExpressionStatement[25061-25072]"
    }, {
      "left" : "if (other instanceof BigFraction)",
      "right" : "if (other instanceof BigFraction)",
      "info" : "IfStatement[24779-25041]:IfStatement[25088-25350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24813-25041]:Block[25122-25350]"
    }, {
      "left" : "BigFraction rhs = ((BigFraction) other).reduce();",
      "right" : "BigFraction rhs = ((BigFraction) other).reduce();",
      "info" : "VariableDeclarationStatement[24827-24876]:VariableDeclarationStatement[25136-25185]"
    }, {
      "left" : "BigFraction thisOne = this.reduce();",
      "right" : "BigFraction thisOne = this.reduce();",
      "info" : "VariableDeclarationStatement[24889-24925]:VariableDeclarationStatement[25198-25234]"
    }, {
      "left" : "ret = thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator);",
      "right" : "ret = thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator);",
      "info" : "ExpressionStatement[24938-25031]:ExpressionStatement[25247-25340]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[25051-25062]:ReturnStatement[25360-25371]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25334-25343]:MarkerAnnotation[25643-25652]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25348-25354]:Modifier[25657-25663]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[25355-25360]:PrimitiveType[25664-25669]"
    }, {
      "left" : "floatValue",
      "right" : "floatValue",
      "info" : "SimpleName[25361-25371]:SimpleName[25670-25680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25374-25613]:Block[25683-26228]"
    }, {
      "left" : "float result = numerator.floatValue() / denominator.floatValue();",
      "right" : "float result = numerator.floatValue() / denominator.floatValue();",
      "info" : "VariableDeclarationStatement[25384-25449]:VariableDeclarationStatement[25693-25758]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[25593-25607]:ReturnStatement[26208-26222]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25786-25792]:Modifier[26401-26407]"
    }, {
      "left" : "BigInteger",
      "right" : "BigInteger",
      "info" : "SimpleType[25793-25803]:SimpleType[26408-26418]"
    }, {
      "left" : "getDenominator",
      "right" : "getDenominator",
      "info" : "SimpleName[25804-25818]:SimpleName[26419-26433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25821-25856]:Block[26436-26471]"
    }, {
      "left" : "return denominator;",
      "right" : "return denominator;",
      "info" : "ReturnStatement[25831-25850]:ReturnStatement[26446-26465]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26007-26013]:Modifier[26622-26628]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[26014-26017]:PrimitiveType[26629-26632]"
    }, {
      "left" : "getDenominatorAsInt",
      "right" : "getDenominatorAsInt",
      "info" : "SimpleName[26018-26037]:SimpleName[26633-26652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26040-26086]:Block[26655-26701]"
    }, {
      "left" : "return denominator.intValue();",
      "right" : "return denominator.intValue();",
      "info" : "ReturnStatement[26050-26080]:ReturnStatement[26665-26695]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26239-26245]:Modifier[26854-26860]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[26246-26250]:PrimitiveType[26861-26865]"
    }, {
      "left" : "getDenominatorAsLong",
      "right" : "getDenominatorAsLong",
      "info" : "SimpleName[26251-26271]:SimpleName[26866-26886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26274-26321]:Block[26889-26936]"
    }, {
      "left" : "return denominator.longValue();",
      "right" : "return denominator.longValue();",
      "info" : "ReturnStatement[26284-26315]:ReturnStatement[26899-26930]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26490-26496]:Modifier[27105-27111]"
    }, {
      "left" : "BigInteger",
      "right" : "BigInteger",
      "info" : "SimpleType[26497-26507]:SimpleType[27112-27122]"
    }, {
      "left" : "getNumerator",
      "right" : "getNumerator",
      "info" : "SimpleName[26508-26520]:SimpleName[27123-27135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26523-26556]:Block[27138-27171]"
    }, {
      "left" : "return numerator;",
      "right" : "return numerator;",
      "info" : "ReturnStatement[26533-26550]:ReturnStatement[27148-27165]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26703-26709]:Modifier[27318-27324]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[26710-26713]:PrimitiveType[27325-27328]"
    }, {
      "left" : "getNumeratorAsInt",
      "right" : "getNumeratorAsInt",
      "info" : "SimpleName[26714-26731]:SimpleName[27329-27346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26734-26778]:Block[27349-27393]"
    }, {
      "left" : "return numerator.intValue();",
      "right" : "return numerator.intValue();",
      "info" : "ReturnStatement[26744-26772]:ReturnStatement[27359-27387]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26927-26933]:Modifier[27542-27548]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[26934-26938]:PrimitiveType[27549-27553]"
    }, {
      "left" : "getNumeratorAsLong",
      "right" : "getNumeratorAsLong",
      "info" : "SimpleName[26939-26957]:SimpleName[27554-27572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26960-27005]:Block[27575-27620]"
    }, {
      "left" : "return numerator.longValue();",
      "right" : "return numerator.longValue();",
      "info" : "ReturnStatement[26970-26999]:ReturnStatement[27585-27614]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27188-27197]:MarkerAnnotation[27803-27812]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27202-27208]:Modifier[27817-27823]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27209-27212]:PrimitiveType[27824-27827]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[27213-27221]:SimpleName[27828-27836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27224-27310]:Block[27839-27925]"
    }, {
      "left" : "return 37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode();",
      "right" : "return 37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode();",
      "info" : "ReturnStatement[27234-27304]:ReturnStatement[27849-27919]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27553-27562]:MarkerAnnotation[28168-28177]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27567-27573]:Modifier[28182-28188]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27574-27577]:PrimitiveType[28189-28192]"
    }, {
      "left" : "intValue",
      "right" : "intValue",
      "info" : "SimpleName[27578-27586]:SimpleName[28193-28201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27589-27653]:Block[28204-28268]"
    }, {
      "left" : "return numerator.divide(denominator).intValue();",
      "right" : "return numerator.divide(denominator).intValue();",
      "info" : "ReturnStatement[27599-27647]:ReturnStatement[28214-28262]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27897-27906]:MarkerAnnotation[28512-28521]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27911-27917]:Modifier[28526-28532]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[27918-27922]:PrimitiveType[28533-28537]"
    }, {
      "left" : "longValue",
      "right" : "longValue",
      "info" : "SimpleName[27923-27932]:SimpleName[28538-28547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27935-28000]:Block[28550-28615]"
    }, {
      "left" : "return numerator.divide(denominator).longValue();",
      "right" : "return numerator.divide(denominator).longValue();",
      "info" : "ReturnStatement[27945-27994]:ReturnStatement[28560-28609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28378-28384]:Modifier[28993-28999]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[28385-28396]:SimpleType[29000-29011]"
    }, {
      "left" : "multiply",
      "right" : "multiply",
      "info" : "SimpleName[28397-28405]:SimpleName[29012-29020]"
    }, {
      "left" : "final BigInteger bg",
      "right" : "final BigInteger bg",
      "info" : "SingleVariableDeclaration[28406-28425]:SingleVariableDeclaration[29021-29040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28427-28586]:Block[29042-29201]"
    }, {
      "left" : "if (bg == null)",
      "right" : "if (bg == null)",
      "info" : "IfStatement[28437-28511]:IfStatement[29052-29126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28453-28511]:Block[29068-29126]"
    }, {
      "left" : "throw new NullArgumentException();",
      "right" : "throw new NullArgumentException();",
      "info" : "ThrowStatement[28467-28501]:ThrowStatement[29082-29116]"
    }, {
      "left" : "return new BigFraction(bg.multiply(numerator), denominator);",
      "right" : "return new BigFraction(bg.multiply(numerator), denominator);",
      "info" : "ReturnStatement[28520-28580]:ReturnStatement[29135-29195]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28894-28900]:Modifier[29509-29515]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[28901-28912]:SimpleType[29516-29527]"
    }, {
      "left" : "multiply",
      "right" : "multiply",
      "info" : "SimpleName[28913-28921]:SimpleName[29528-29536]"
    }, {
      "left" : "final int i",
      "right" : "final int i",
      "info" : "SingleVariableDeclaration[28922-28933]:SingleVariableDeclaration[29537-29548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28935-28990]:Block[29550-29605]"
    }, {
      "left" : "return multiply(BigInteger.valueOf(i));",
      "right" : "return multiply(BigInteger.valueOf(i));",
      "info" : "ReturnStatement[28945-28984]:ReturnStatement[29560-29599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29300-29306]:Modifier[29915-29921]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[29307-29318]:SimpleType[29922-29933]"
    }, {
      "left" : "multiply",
      "right" : "multiply",
      "info" : "SimpleName[29319-29327]:SimpleName[29934-29942]"
    }, {
      "left" : "final long l",
      "right" : "final long l",
      "info" : "SingleVariableDeclaration[29328-29340]:SingleVariableDeclaration[29943-29955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29342-29397]:Block[29957-30012]"
    }, {
      "left" : "return multiply(BigInteger.valueOf(l));",
      "right" : "return multiply(BigInteger.valueOf(l));",
      "info" : "ReturnStatement[29352-29391]:ReturnStatement[29967-30006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29772-29778]:Modifier[30387-30393]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[29779-29790]:SimpleType[30394-30405]"
    }, {
      "left" : "multiply",
      "right" : "multiply",
      "info" : "SimpleName[29791-29799]:SimpleName[30406-30414]"
    }, {
      "left" : "final BigFraction fraction",
      "right" : "final BigFraction fraction",
      "info" : "SingleVariableDeclaration[29800-29826]:SingleVariableDeclaration[30415-30441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29828-30238]:Block[30443-30853]"
    }, {
      "left" : "if (fraction == null)",
      "right" : "if (fraction == null)",
      "info" : "IfStatement[29838-29943]:IfStatement[30453-30558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29860-29943]:Block[30475-30558]"
    }, {
      "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "info" : "ThrowStatement[29874-29933]:ThrowStatement[30489-30548]"
    }, {
      "left" : "if (numerator.equals(BigInteger.ZERO) ||\n            fraction.numerator.equals(BigInteger.ZERO))",
      "right" : "if (numerator.equals(BigInteger.ZERO) ||\n            fraction.numerator.equals(BigInteger.ZERO))",
      "info" : "IfStatement[29952-30085]:IfStatement[30567-30700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30049-30085]:Block[30664-30700]"
    }, {
      "left" : "return ZERO;",
      "right" : "return ZERO;",
      "info" : "ReturnStatement[30063-30075]:ReturnStatement[30678-30690]"
    }, {
      "left" : "return new BigFraction(numerator.multiply(fraction.numerator),\n                               denominator.multiply(fraction.denominator));",
      "right" : "return new BigFraction(numerator.multiply(fraction.numerator),\n                               denominator.multiply(fraction.denominator));",
      "info" : "ReturnStatement[30094-30232]:ReturnStatement[30709-30847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30434-30440]:Modifier[31049-31055]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[30441-30452]:SimpleType[31056-31067]"
    }, {
      "left" : "negate",
      "right" : "negate",
      "info" : "SimpleName[30453-30459]:SimpleName[31068-31074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30462-30534]:Block[31077-31149]"
    }, {
      "left" : "return new BigFraction(numerator.negate(), denominator);",
      "right" : "return new BigFraction(numerator.negate(), denominator);",
      "info" : "ReturnStatement[30472-30528]:ReturnStatement[31087-31143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30800-30806]:Modifier[31415-31421]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[30807-30813]:PrimitiveType[31422-31428]"
    }, {
      "left" : "percentageValue",
      "right" : "percentageValue",
      "info" : "SimpleName[30814-30829]:SimpleName[31429-31444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30832-30891]:Block[31447-31506]"
    }, {
      "left" : "return multiply(ONE_HUNDRED).doubleValue();",
      "right" : "return multiply(ONE_HUNDRED).doubleValue();",
      "info" : "ReturnStatement[30842-30885]:ReturnStatement[31457-31500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31243-31249]:Modifier[31858-31864]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[31250-31261]:SimpleType[31865-31876]"
    }, {
      "left" : "pow",
      "right" : "pow",
      "info" : "SimpleName[31262-31265]:SimpleName[31877-31880]"
    }, {
      "left" : "final int exponent",
      "right" : "final int exponent",
      "info" : "SingleVariableDeclaration[31266-31284]:SingleVariableDeclaration[31881-31899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31286-31505]:Block[31901-32120]"
    }, {
      "left" : "if (exponent < 0)",
      "right" : "if (exponent < 0)",
      "info" : "IfStatement[31296-31415]:IfStatement[31911-32030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31314-31415]:Block[31929-32030]"
    }, {
      "left" : "return new BigFraction(denominator.pow(-exponent), numerator.pow(-exponent));",
      "right" : "return new BigFraction(denominator.pow(-exponent), numerator.pow(-exponent));",
      "info" : "ReturnStatement[31328-31405]:ReturnStatement[31943-32020]"
    }, {
      "left" : "return new BigFraction(numerator.pow(exponent), denominator.pow(exponent));",
      "right" : "return new BigFraction(numerator.pow(exponent), denominator.pow(exponent));",
      "info" : "ReturnStatement[31424-31499]:ReturnStatement[32039-32114]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31880-31886]:Modifier[32495-32501]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[31887-31898]:SimpleType[32502-32513]"
    }, {
      "left" : "pow",
      "right" : "pow",
      "info" : "SimpleName[31899-31902]:SimpleName[32514-32517]"
    }, {
      "left" : "final long exponent",
      "right" : "final long exponent",
      "info" : "SingleVariableDeclaration[31903-31922]:SingleVariableDeclaration[32518-32537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31924-32281]:Block[32539-32896]"
    }, {
      "left" : "if (exponent < 0)",
      "right" : "if (exponent < 0)",
      "info" : "IfStatement[31934-32124]:IfStatement[32549-32739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31952-32124]:Block[32567-32739]"
    }, {
      "left" : "return new BigFraction(ArithmeticUtils.pow(denominator, -exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));",
      "right" : "return new BigFraction(ArithmeticUtils.pow(denominator, -exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));",
      "info" : "ReturnStatement[31966-32114]:ReturnStatement[32581-32729]"
    }, {
      "left" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
      "right" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
      "info" : "ReturnStatement[32133-32275]:ReturnStatement[32748-32890]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32656-32662]:Modifier[33271-33277]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[32663-32674]:SimpleType[33278-33289]"
    }, {
      "left" : "pow",
      "right" : "pow",
      "info" : "SimpleName[32675-32678]:SimpleName[33290-33293]"
    }, {
      "left" : "final BigInteger exponent",
      "right" : "final BigInteger exponent",
      "info" : "SingleVariableDeclaration[32679-32704]:SingleVariableDeclaration[33294-33319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32706-33135]:Block[33321-33750]"
    }, {
      "left" : "if (exponent.compareTo(BigInteger.ZERO) < 0)",
      "right" : "if (exponent.compareTo(BigInteger.ZERO) < 0)",
      "info" : "IfStatement[32716-32978]:IfStatement[33331-33593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32761-32978]:Block[33376-33593]"
    }, {
      "left" : "final BigInteger eNeg = exponent.negate();",
      "right" : "final BigInteger eNeg = exponent.negate();",
      "info" : "VariableDeclarationStatement[32775-32817]:VariableDeclarationStatement[33390-33432]"
    }, {
      "left" : "return new BigFraction(ArithmeticUtils.pow(denominator, eNeg),\n                                   ArithmeticUtils.pow(numerator,   eNeg));",
      "right" : "return new BigFraction(ArithmeticUtils.pow(denominator, eNeg),\n                                   ArithmeticUtils.pow(numerator,   eNeg));",
      "info" : "ReturnStatement[32830-32968]:ReturnStatement[33445-33583]"
    }, {
      "left" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
      "right" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
      "info" : "ReturnStatement[32987-33129]:ReturnStatement[33602-33744]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33475-33481]:Modifier[34090-34096]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[33482-33488]:PrimitiveType[34097-34103]"
    }, {
      "left" : "pow",
      "right" : "pow",
      "info" : "SimpleName[33489-33492]:SimpleName[34104-34107]"
    }, {
      "left" : "final double exponent",
      "right" : "final double exponent",
      "info" : "SingleVariableDeclaration[33493-33514]:SingleVariableDeclaration[34108-34129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33516-33656]:Block[34131-34271]"
    }, {
      "left" : "return FastMath.pow(numerator.doubleValue(),   exponent) /\n               FastMath.pow(denominator.doubleValue(), exponent);",
      "right" : "return FastMath.pow(numerator.doubleValue(),   exponent) /\n               FastMath.pow(denominator.doubleValue(), exponent);",
      "info" : "ReturnStatement[33526-33650]:ReturnStatement[34141-34265]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33807-33813]:Modifier[34422-34428]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[33814-33825]:SimpleType[34429-34440]"
    }, {
      "left" : "reciprocal",
      "right" : "reciprocal",
      "info" : "SimpleName[33826-33836]:SimpleName[34441-34451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33839-33902]:Block[34454-34517]"
    }, {
      "left" : "return new BigFraction(denominator, numerator);",
      "right" : "return new BigFraction(denominator, numerator);",
      "info" : "ReturnStatement[33849-33896]:ReturnStatement[34464-34511]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34146-34152]:Modifier[34761-34767]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[34153-34164]:SimpleType[34768-34779]"
    }, {
      "left" : "reduce",
      "right" : "reduce",
      "info" : "SimpleName[34165-34171]:SimpleName[34780-34786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34174-34320]:Block[34789-34935]"
    }, {
      "left" : "final BigInteger gcd = numerator.gcd(denominator);",
      "right" : "final BigInteger gcd = numerator.gcd(denominator);",
      "info" : "VariableDeclarationStatement[34184-34234]:VariableDeclarationStatement[34799-34849]"
    }, {
      "left" : "return new BigFraction(numerator.divide(gcd), denominator.divide(gcd));",
      "right" : "return new BigFraction(numerator.divide(gcd), denominator.divide(gcd));",
      "info" : "ReturnStatement[34243-34314]:ReturnStatement[34858-34929]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34743-34749]:Modifier[35358-35364]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[34750-34761]:SimpleType[35365-35376]"
    }, {
      "left" : "subtract",
      "right" : "subtract",
      "info" : "SimpleName[34762-34770]:SimpleName[35377-35385]"
    }, {
      "left" : "final BigInteger bg",
      "right" : "final BigInteger bg",
      "info" : "SingleVariableDeclaration[34771-34790]:SingleVariableDeclaration[35386-35405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34792-34973]:Block[35407-35588]"
    }, {
      "left" : "if (bg == null)",
      "right" : "if (bg == null)",
      "info" : "IfStatement[34802-34876]:IfStatement[35417-35491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34818-34876]:Block[35433-35491]"
    }, {
      "left" : "throw new NullArgumentException();",
      "right" : "throw new NullArgumentException();",
      "info" : "ThrowStatement[34832-34866]:ThrowStatement[35447-35481]"
    }, {
      "left" : "return new BigFraction(numerator.subtract(denominator.multiply(bg)), denominator);",
      "right" : "return new BigFraction(numerator.subtract(denominator.multiply(bg)), denominator);",
      "info" : "ReturnStatement[34885-34967]:ReturnStatement[35500-35582]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35285-35291]:Modifier[35900-35906]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[35292-35303]:SimpleType[35907-35918]"
    }, {
      "left" : "subtract",
      "right" : "subtract",
      "info" : "SimpleName[35304-35312]:SimpleName[35919-35927]"
    }, {
      "left" : "final int i",
      "right" : "final int i",
      "info" : "SingleVariableDeclaration[35313-35324]:SingleVariableDeclaration[35928-35939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35326-35381]:Block[35941-35996]"
    }, {
      "left" : "return subtract(BigInteger.valueOf(i));",
      "right" : "return subtract(BigInteger.valueOf(i));",
      "info" : "ReturnStatement[35336-35375]:ReturnStatement[35951-35990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35686-35692]:Modifier[36301-36307]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[35693-35704]:SimpleType[36308-36319]"
    }, {
      "left" : "subtract",
      "right" : "subtract",
      "info" : "SimpleName[35705-35713]:SimpleName[36320-36328]"
    }, {
      "left" : "final long l",
      "right" : "final long l",
      "info" : "SingleVariableDeclaration[35714-35726]:SingleVariableDeclaration[36329-36341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35728-35783]:Block[36343-36398]"
    }, {
      "left" : "return subtract(BigInteger.valueOf(l));",
      "right" : "return subtract(BigInteger.valueOf(l));",
      "info" : "ReturnStatement[35738-35777]:ReturnStatement[36353-36392]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36187-36193]:Modifier[36802-36808]"
    }, {
      "left" : "BigFraction",
      "right" : "BigFraction",
      "info" : "SimpleType[36194-36205]:SimpleType[36809-36820]"
    }, {
      "left" : "subtract",
      "right" : "subtract",
      "info" : "SimpleName[36206-36214]:SimpleName[36821-36829]"
    }, {
      "left" : "final BigFraction fraction",
      "right" : "final BigFraction fraction",
      "info" : "SingleVariableDeclaration[36215-36241]:SingleVariableDeclaration[36830-36856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36243-36891]:Block[36858-37506]"
    }, {
      "left" : "if (fraction == null)",
      "right" : "if (fraction == null)",
      "info" : "IfStatement[36253-36358]:IfStatement[36868-36973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36275-36358]:Block[36890-36973]"
    }, {
      "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
      "info" : "ThrowStatement[36289-36348]:ThrowStatement[36904-36963]"
    }, {
      "left" : "if (ZERO.equals(fraction))",
      "right" : "if (ZERO.equals(fraction))",
      "info" : "IfStatement[36367-36430]:IfStatement[36982-37045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36394-36430]:Block[37009-37045]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[36408-36420]:ReturnStatement[37023-37035]"
    }, {
      "left" : "BigInteger num = null;",
      "right" : "BigInteger num = null;",
      "info" : "VariableDeclarationStatement[36440-36462]:VariableDeclarationStatement[37055-37077]"
    }, {
      "left" : "BigInteger den = null;",
      "right" : "BigInteger den = null;",
      "info" : "VariableDeclarationStatement[36471-36493]:VariableDeclarationStatement[37086-37108]"
    }, {
      "left" : "if (denominator.equals(fraction.denominator))",
      "right" : "if (denominator.equals(fraction.denominator))",
      "info" : "IfStatement[36502-36842]:IfStatement[37117-37457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36548-36648]:Block[37163-37263]"
    }, {
      "left" : "num = numerator.subtract(fraction.numerator);",
      "right" : "num = numerator.subtract(fraction.numerator);",
      "info" : "ExpressionStatement[36562-36607]:ExpressionStatement[37177-37222]"
    }, {
      "left" : "den = denominator;",
      "right" : "den = denominator;",
      "info" : "ExpressionStatement[36620-36638]:ExpressionStatement[37235-37253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36654-36842]:Block[37269-37457]"
    }, {
      "left" : "num = (numerator.multiply(fraction.denominator)).subtract((fraction.numerator).multiply(denominator));",
      "right" : "num = (numerator.multiply(fraction.denominator)).subtract((fraction.numerator).multiply(denominator));",
      "info" : "ExpressionStatement[36668-36770]:ExpressionStatement[37283-37385]"
    }, {
      "left" : "den = denominator.multiply(fraction.denominator);",
      "right" : "den = denominator.multiply(fraction.denominator);",
      "info" : "ExpressionStatement[36783-36832]:ExpressionStatement[37398-37447]"
    }, {
      "left" : "return new BigFraction(num, den);",
      "right" : "return new BigFraction(num, den);",
      "info" : "ReturnStatement[36851-36884]:ReturnStatement[37466-37499]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37169-37178]:MarkerAnnotation[37784-37793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37183-37189]:Modifier[37798-37804]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[37190-37196]:SimpleType[37805-37811]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[37197-37205]:SimpleName[37812-37820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37208-37509]:Block[37823-38124]"
    }, {
      "left" : "String str = null;",
      "right" : "String str = null;",
      "info" : "VariableDeclarationStatement[37218-37236]:VariableDeclarationStatement[37833-37851]"
    }, {
      "left" : "if (BigInteger.ONE.equals(denominator))",
      "right" : "if (BigInteger.ONE.equals(denominator))",
      "info" : "IfStatement[37245-37483]:IfStatement[37860-38098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37285-37336]:Block[37900-37951]"
    }, {
      "left" : "str = numerator.toString();",
      "right" : "str = numerator.toString();",
      "info" : "ExpressionStatement[37299-37326]:ExpressionStatement[37914-37941]"
    }, {
      "left" : "if (BigInteger.ZERO.equals(numerator))",
      "right" : "if (BigInteger.ZERO.equals(numerator))",
      "info" : "IfStatement[37342-37483]:IfStatement[37957-38098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37381-37415]:Block[37996-38030]"
    }, {
      "left" : "str = \"0\";",
      "right" : "str = \"0\";",
      "info" : "ExpressionStatement[37395-37405]:ExpressionStatement[38010-38020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37421-37483]:Block[38036-38098]"
    }, {
      "left" : "str = numerator + \" / \" + denominator;",
      "right" : "str = numerator + \" / \" + denominator;",
      "info" : "ExpressionStatement[37435-37473]:ExpressionStatement[38050-38088]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[37492-37503]:ReturnStatement[38107-38118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37540-37546]:Modifier[38155-38161]"
    }, {
      "left" : "BigFractionField",
      "right" : "BigFractionField",
      "info" : "SimpleType[37547-37563]:SimpleType[38162-38178]"
    }, {
      "left" : "getField",
      "right" : "getField",
      "info" : "SimpleName[37564-37572]:SimpleName[38179-38187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37575-37629]:Block[38190-38244]"
    }, {
      "left" : "return BigFractionField.getInstance();",
      "right" : "return BigFractionField.getInstance();",
      "info" : "ReturnStatement[37585-37623]:ReturnStatement[38200-38238]"
    } ]
  },
  "interFileMappings" : { }
}