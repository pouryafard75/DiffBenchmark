{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DataUtil",
      "right" : "DataUtil",
      "info" : "TypeDeclaration[294-6025]:TypeDeclaration[294-6121]"
    }, {
      "left" : "private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=\\\\s*\\\"?([^\\\\s;\\\"]*)\");",
      "right" : "private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=\\\\s*\\\"?([^\\\\s;\\\"]*)\");",
      "info" : "FieldDeclaration[381-481]:FieldDeclaration[381-481]"
    }, {
      "left" : "static final String defaultCharset = \"UTF-8\";",
      "right" : "static final String defaultCharset = \"UTF-8\";",
      "info" : "FieldDeclaration[486-531]:FieldDeclaration[486-531]"
    }, {
      "left" : "private static final int bufferSize = 0x20000;",
      "right" : "private static final int bufferSize = 0x20000;",
      "info" : "FieldDeclaration[583-629]:FieldDeclaration[583-629]"
    }, {
      "left" : "private DataUtil()",
      "right" : "private DataUtil()",
      "info" : "MethodDeclaration[645-666]:MethodDeclaration[645-666]"
    }, {
      "left" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
      "right" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
      "info" : "MethodDeclaration[672-1392]:MethodDeclaration[672-1392]"
    }, {
      "left" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
      "right" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
      "info" : "MethodDeclaration[1398-1958]:MethodDeclaration[1398-1958]"
    }, {
      "left" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
      "right" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
      "info" : "MethodDeclaration[1964-2626]:MethodDeclaration[1964-2626]"
    }, {
      "left" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
      "right" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
      "info" : "MethodDeclaration[2828-4864]:MethodDeclaration[2828-4864]"
    }, {
      "left" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
      "right" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
      "info" : "MethodDeclaration[4870-5351]:MethodDeclaration[4870-5351]"
    }, {
      "left" : "static String getCharsetFromContentType(String contentType)",
      "right" : "static String getCharsetFromContentType(String contentType)",
      "info" : "MethodDeclaration[5357-6013]:MethodDeclaration[5357-6109]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[664-666]:Block[664-666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1035-1392]:Block[1035-1392]"
    }, {
      "left" : "FileInputStream inStream = null;",
      "right" : "FileInputStream inStream = null;",
      "info" : "VariableDeclarationStatement[1045-1077]:VariableDeclarationStatement[1045-1077]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[1086-1386]:TryStatement[1086-1386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1090-1298]:Block[1090-1298]"
    }, {
      "left" : "inStream = new FileInputStream(in);",
      "right" : "inStream = new FileInputStream(in);",
      "info" : "ExpressionStatement[1104-1139]:ExpressionStatement[1104-1139]"
    }, {
      "left" : "ByteBuffer byteData = readToByteBuffer(inStream);",
      "right" : "ByteBuffer byteData = readToByteBuffer(inStream);",
      "info" : "VariableDeclarationStatement[1152-1201]:VariableDeclarationStatement[1152-1201]"
    }, {
      "left" : "return parseByteData(byteData, charsetName, baseUri, Parser.htmlParser());",
      "right" : "return parseByteData(byteData, charsetName, baseUri, Parser.htmlParser());",
      "info" : "ReturnStatement[1214-1288]:ReturnStatement[1214-1288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1307-1386]:Block[1307-1386]"
    }, {
      "left" : "if (inStream != null)",
      "right" : "if (inStream != null)",
      "info" : "IfStatement[1321-1376]:IfStatement[1321-1376]"
    }, {
      "left" : "inStream.close();",
      "right" : "inStream.close();",
      "info" : "ExpressionStatement[1359-1376]:ExpressionStatement[1359-1376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1816-1958]:Block[1816-1958]"
    }, {
      "left" : "ByteBuffer byteData = readToByteBuffer(in);",
      "right" : "ByteBuffer byteData = readToByteBuffer(in);",
      "info" : "VariableDeclarationStatement[1826-1869]:VariableDeclarationStatement[1826-1869]"
    }, {
      "left" : "return parseByteData(byteData, charsetName, baseUri, Parser.htmlParser());",
      "right" : "return parseByteData(byteData, charsetName, baseUri, Parser.htmlParser());",
      "info" : "ReturnStatement[1878-1952]:ReturnStatement[1878-1952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2497-2626]:Block[2497-2626]"
    }, {
      "left" : "ByteBuffer byteData = readToByteBuffer(in);",
      "right" : "ByteBuffer byteData = readToByteBuffer(in);",
      "info" : "VariableDeclarationStatement[2507-2550]:VariableDeclarationStatement[2507-2550]"
    }, {
      "left" : "return parseByteData(byteData, charsetName, baseUri, parser);",
      "right" : "return parseByteData(byteData, charsetName, baseUri, parser);",
      "info" : "ReturnStatement[2559-2620]:ReturnStatement[2559-2620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2930-4864]:Block[2930-4864]"
    }, {
      "left" : "String docData;",
      "right" : "String docData;",
      "info" : "VariableDeclarationStatement[2940-2955]:VariableDeclarationStatement[2940-2955]"
    }, {
      "left" : "Document doc = null;",
      "right" : "Document doc = null;",
      "info" : "VariableDeclarationStatement[2964-2984]:VariableDeclarationStatement[2964-2984]"
    }, {
      "left" : "if (charsetName == null)",
      "right" : "if (charsetName == null)",
      "info" : "IfStatement[2993-4331]:IfStatement[2993-4331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3018-4026]:Block[3018-4026]"
    }, {
      "left" : "docData = Charset.forName(defaultCharset).decode(byteData).toString();",
      "right" : "docData = Charset.forName(defaultCharset).decode(byteData).toString();",
      "info" : "ExpressionStatement[3201-3271]:ExpressionStatement[3201-3271]"
    }, {
      "left" : "doc = parser.parseInput(docData, baseUri);",
      "right" : "doc = parser.parseInput(docData, baseUri);",
      "info" : "ExpressionStatement[3284-3326]:ExpressionStatement[3284-3326]"
    }, {
      "left" : "Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();",
      "right" : "Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();",
      "info" : "VariableDeclarationStatement[3339-3421]:VariableDeclarationStatement[3339-3421]"
    }, {
      "left" : "if (meta != null)",
      "right" : "if (meta != null)",
      "info" : "IfStatement[3434-4016]:IfStatement[3434-4016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3452-4016]:Block[3452-4016]"
    }, {
      "left" : "String foundCharset = meta.hasAttr(\"http-equiv\") ? getCharsetFromContentType(meta.attr(\"content\")) : meta.attr(\"charset\");",
      "right" : "String foundCharset = meta.hasAttr(\"http-equiv\") ? getCharsetFromContentType(meta.attr(\"content\")) : meta.attr(\"charset\");",
      "info" : "VariableDeclarationStatement[3519-3641]:VariableDeclarationStatement[3519-3641]"
    }, {
      "left" : "if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset))",
      "right" : "if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset))",
      "info" : "IfStatement[3658-4002]:IfStatement[3658-4002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3754-4002]:Block[3754-4002]"
    }, {
      "left" : "charsetName = foundCharset;",
      "right" : "charsetName = foundCharset;",
      "info" : "ExpressionStatement[3797-3824]:ExpressionStatement[3797-3824]"
    }, {
      "left" : "byteData.rewind();",
      "right" : "byteData.rewind();",
      "info" : "ExpressionStatement[3845-3863]:ExpressionStatement[3845-3863]"
    }, {
      "left" : "docData = Charset.forName(foundCharset).decode(byteData).toString();",
      "right" : "docData = Charset.forName(foundCharset).decode(byteData).toString();",
      "info" : "ExpressionStatement[3884-3952]:ExpressionStatement[3884-3952]"
    }, {
      "left" : "doc = null;",
      "right" : "doc = null;",
      "info" : "ExpressionStatement[3973-3984]:ExpressionStatement[3973-3984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4032-4331]:Block[4032-4331]"
    }, {
      "left" : "Validate.notEmpty(charsetName, \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\");",
      "right" : "Validate.notEmpty(charsetName, \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\");",
      "info" : "ExpressionStatement[4108-4241]:ExpressionStatement[4108-4241]"
    }, {
      "left" : "docData = Charset.forName(charsetName).decode(byteData).toString();",
      "right" : "docData = Charset.forName(charsetName).decode(byteData).toString();",
      "info" : "ExpressionStatement[4254-4321]:ExpressionStatement[4254-4321]"
    }, {
      "left" : "if (doc == null)",
      "right" : "if (doc == null)",
      "info" : "IfStatement[4340-4838]:IfStatement[4340-4838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4357-4838]:Block[4357-4838]"
    }, {
      "left" : "if (docData.charAt(0) == 65279)",
      "right" : "if (docData.charAt(0) == 65279)",
      "info" : "IfStatement[4638-4717]:IfStatement[4638-4717]"
    }, {
      "left" : "docData = docData.substring(1);",
      "right" : "docData = docData.substring(1);",
      "info" : "ExpressionStatement[4686-4717]:ExpressionStatement[4686-4717]"
    }, {
      "left" : "doc = parser.parseInput(docData, baseUri);",
      "right" : "doc = parser.parseInput(docData, baseUri);",
      "info" : "ExpressionStatement[4731-4773]:ExpressionStatement[4731-4773]"
    }, {
      "left" : "doc.outputSettings().charset(charsetName);",
      "right" : "doc.outputSettings().charset(charsetName);",
      "info" : "ExpressionStatement[4786-4828]:ExpressionStatement[4786-4828]"
    }, {
      "left" : "return doc;",
      "right" : "return doc;",
      "info" : "ReturnStatement[4847-4858]:ReturnStatement[4847-4858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4946-5351]:Block[4946-5351]"
    }, {
      "left" : "byte[] buffer = new byte[bufferSize];",
      "right" : "byte[] buffer = new byte[bufferSize];",
      "info" : "VariableDeclarationStatement[4956-4993]:VariableDeclarationStatement[4956-4993]"
    }, {
      "left" : "ByteArrayOutputStream outStream = new ByteArrayOutputStream(bufferSize);",
      "right" : "ByteArrayOutputStream outStream = new ByteArrayOutputStream(bufferSize);",
      "info" : "VariableDeclarationStatement[5002-5074]:VariableDeclarationStatement[5002-5074]"
    }, {
      "left" : "int read;",
      "right" : "int read;",
      "info" : "VariableDeclarationStatement[5083-5092]:VariableDeclarationStatement[5083-5092]"
    }, {
      "left" : "while(true)",
      "right" : "while(true)",
      "info" : "WhileStatement[5101-5248]:WhileStatement[5101-5248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5113-5248]:Block[5113-5248]"
    }, {
      "left" : "read  = inStream.read(buffer);",
      "right" : "read  = inStream.read(buffer);",
      "info" : "ExpressionStatement[5127-5157]:ExpressionStatement[5127-5157]"
    }, {
      "left" : "if (read == -1)",
      "right" : "if (read == -1)",
      "info" : "IfStatement[5170-5192]:IfStatement[5170-5192]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5186-5192]:BreakStatement[5186-5192]"
    }, {
      "left" : "outStream.write(buffer, 0, read);",
      "right" : "outStream.write(buffer, 0, read);",
      "info" : "ExpressionStatement[5205-5238]:ExpressionStatement[5205-5238]"
    }, {
      "left" : "ByteBuffer byteData = ByteBuffer.wrap(outStream.toByteArray());",
      "right" : "ByteBuffer byteData = ByteBuffer.wrap(outStream.toByteArray());",
      "info" : "VariableDeclarationStatement[5257-5320]:VariableDeclarationStatement[5257-5320]"
    }, {
      "left" : "return byteData;",
      "right" : "return byteData;",
      "info" : "ReturnStatement[5329-5345]:ReturnStatement[5329-5345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5713-6013]:Block[5713-6109]"
    }, {
      "left" : "if (contentType == null)",
      "right" : "if (contentType == null)",
      "info" : "IfStatement[5723-5760]:IfStatement[5723-5760]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5748-5760]:ReturnStatement[5748-5760]"
    }, {
      "left" : "Matcher m = charsetPattern.matcher(contentType);",
      "right" : "Matcher m = charsetPattern.matcher(contentType);",
      "info" : "VariableDeclarationStatement[5769-5817]:VariableDeclarationStatement[5769-5817]"
    }, {
      "left" : "if (m.find())",
      "right" : "if (m.find())",
      "info" : "IfStatement[5826-5986]:IfStatement[5826-6082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5840-5986]:Block[5840-6082]"
    }, {
      "left" : "String charset = m.group(1).trim();",
      "right" : "String charset = m.group(1).trim();",
      "info" : "VariableDeclarationStatement[5854-5889]:VariableDeclarationStatement[5854-5889]"
    }, {
      "left" : "charset = charset.toUpperCase(Locale.ENGLISH);",
      "right" : "charset = charset.toUpperCase(Locale.ENGLISH);",
      "info" : "ExpressionStatement[5902-5948]:ExpressionStatement[5964-6010]"
    }, {
      "left" : "return charset;",
      "right" : "return charset;",
      "info" : "ReturnStatement[5961-5976]:ReturnStatement[6057-6072]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5995-6007]:ReturnStatement[6091-6103]"
    } ]
  },
  "interFileMappings" : { }
}