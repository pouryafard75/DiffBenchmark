{
  "matchedElements" : [
 {
    "left" : "class : FastDateFormat",
    "right" : "class : FastDateFormat",
    "info" : "TypeDeclaration[1377-56937]:TypeDeclaration[1377-56982]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[3297-3445]:FieldDeclaration[3297-3445]"
  }, {
    "left" : "FULL",
    "right" : "FULL",
    "info" : "FieldDeclaration[3451-3563]:FieldDeclaration[3451-3563]"
  }, {
    "left" : "LONG",
    "right" : "LONG",
    "info" : "FieldDeclaration[3568-3680]:FieldDeclaration[3568-3680]"
  }, {
    "left" : "MEDIUM",
    "right" : "MEDIUM",
    "info" : "FieldDeclaration[3685-3803]:FieldDeclaration[3685-3803]"
  }, {
    "left" : "SHORT",
    "right" : "SHORT",
    "info" : "FieldDeclaration[3808-3923]:FieldDeclaration[3808-3923]"
  }, {
    "left" : "cDefaultPattern",
    "right" : "cDefaultPattern",
    "info" : "FieldDeclaration[3958-3996]:FieldDeclaration[3958-3996]"
  }, {
    "left" : "cInstanceCache",
    "right" : "cInstanceCache",
    "info" : "FieldDeclaration[4041-4162]:FieldDeclaration[4041-4162]"
  }, {
    "left" : "cDateInstanceCache",
    "right" : "cDateInstanceCache",
    "info" : "FieldDeclaration[4167-4276]:FieldDeclaration[4167-4276]"
  }, {
    "left" : "cTimeInstanceCache",
    "right" : "cTimeInstanceCache",
    "info" : "FieldDeclaration[4281-4390]:FieldDeclaration[4281-4390]"
  }, {
    "left" : "cDateTimeInstanceCache",
    "right" : "cDateTimeInstanceCache",
    "info" : "FieldDeclaration[4395-4508]:FieldDeclaration[4395-4508]"
  }, {
    "left" : "cTimeZoneDisplayCache",
    "right" : "cTimeZoneDisplayCache",
    "info" : "FieldDeclaration[4513-4609]:FieldDeclaration[4513-4609]"
  }, {
    "left" : "mPattern",
    "right" : "mPattern",
    "info" : "FieldDeclaration[4615-4681]:FieldDeclaration[4615-4681]"
  }, {
    "left" : "mTimeZone",
    "right" : "mTimeZone",
    "info" : "FieldDeclaration[4686-4757]:FieldDeclaration[4686-4757]"
  }, {
    "left" : "mTimeZoneForced",
    "right" : "mTimeZoneForced",
    "info" : "FieldDeclaration[4762-4873]:FieldDeclaration[4762-4873]"
  }, {
    "left" : "mLocale",
    "right" : "mLocale",
    "info" : "FieldDeclaration[4878-4942]:FieldDeclaration[4878-4942]"
  }, {
    "left" : "mLocaleForced",
    "right" : "mLocaleForced",
    "info" : "FieldDeclaration[4947-5048]:FieldDeclaration[4947-5048]"
  }, {
    "left" : "mRules",
    "right" : "mRules",
    "info" : "FieldDeclaration[5053-5126]:FieldDeclaration[5053-5126]"
  }, {
    "left" : "mMaxLengthEstimate",
    "right" : "mMaxLengthEstimate",
    "info" : "FieldDeclaration[5131-5225]:FieldDeclaration[5131-5225]"
  }, {
    "left" : "public getInstance() : ",
    "right" : "public getInstance() : ",
    "info" : "MethodDeclaration[5309-5577]:MethodDeclaration[5309-5577]"
  }, {
    "left" : "public getInstance(pattern ) : ",
    "right" : "public getInstance(pattern ) : ",
    "info" : "MethodDeclaration[5583-6016]:MethodDeclaration[5583-6016]"
  }, {
    "left" : "public getInstance(pattern , timeZone ) : ",
    "right" : "public getInstance(pattern , timeZone ) : ",
    "info" : "MethodDeclaration[6022-6560]:MethodDeclaration[6022-6560]"
  }, {
    "left" : "public getInstance(pattern , locale ) : ",
    "right" : "public getInstance(pattern , locale ) : ",
    "info" : "MethodDeclaration[6566-7068]:MethodDeclaration[6566-7068]"
  }, {
    "left" : "public getInstance(pattern , timeZone , locale ) : ",
    "right" : "public getInstance(pattern , timeZone , locale ) : ",
    "info" : "MethodDeclaration[7074-8065]:MethodDeclaration[7074-8065]"
  }, {
    "left" : "public getDateInstance(style int) : ",
    "right" : "public getDateInstance(style int) : ",
    "info" : "MethodDeclaration[8149-8623]:MethodDeclaration[8149-8623]"
  }, {
    "left" : "public getDateInstance(style int, locale ) : ",
    "right" : "public getDateInstance(style int, locale ) : ",
    "info" : "MethodDeclaration[8629-9183]:MethodDeclaration[8629-9183]"
  }, {
    "left" : "public getDateInstance(style int, timeZone ) : ",
    "right" : "public getDateInstance(style int, timeZone ) : ",
    "info" : "MethodDeclaration[9189-9776]:MethodDeclaration[9189-9776]"
  }, {
    "left" : "public getDateInstance(style int, timeZone , locale ) : ",
    "right" : "public getDateInstance(style int, timeZone , locale ) : ",
    "info" : "MethodDeclaration[9781-11217]:MethodDeclaration[9781-11217]"
  }, {
    "left" : "public getTimeInstance(style int) : ",
    "right" : "public getTimeInstance(style int) : ",
    "info" : "MethodDeclaration[11301-11775]:MethodDeclaration[11301-11775]"
  }, {
    "left" : "public getTimeInstance(style int, locale ) : ",
    "right" : "public getTimeInstance(style int, locale ) : ",
    "info" : "MethodDeclaration[11781-12335]:MethodDeclaration[11781-12335]"
  }, {
    "left" : "public getTimeInstance(style int, timeZone ) : ",
    "right" : "public getTimeInstance(style int, timeZone ) : ",
    "info" : "MethodDeclaration[12345-12932]:MethodDeclaration[12345-12932]"
  }, {
    "left" : "public getTimeInstance(style int, timeZone , locale ) : ",
    "right" : "public getTimeInstance(style int, timeZone , locale ) : ",
    "info" : "MethodDeclaration[12942-14429]:MethodDeclaration[12942-14429]"
  }, {
    "left" : "public getDateTimeInstance(dateStyle int, timeStyle int) : ",
    "right" : "public getDateTimeInstance(dateStyle int, timeStyle int) : ",
    "info" : "MethodDeclaration[14513-15127]:MethodDeclaration[14513-15127]"
  }, {
    "left" : "public getDateTimeInstance(dateStyle int, timeStyle int, locale ) : ",
    "right" : "public getDateTimeInstance(dateStyle int, timeStyle int, locale ) : ",
    "info" : "MethodDeclaration[15137-15831]:MethodDeclaration[15137-15831]"
  }, {
    "left" : "public getDateTimeInstance(dateStyle int, timeStyle int, timeZone ) : ",
    "right" : "public getDateTimeInstance(dateStyle int, timeStyle int, timeZone ) : ",
    "info" : "MethodDeclaration[15841-16568]:MethodDeclaration[15841-16568]"
  }, {
    "left" : "public getDateTimeInstance(dateStyle int, timeStyle int, timeZone , locale ) : ",
    "right" : "public getDateTimeInstance(dateStyle int, timeStyle int, timeZone , locale ) : ",
    "info" : "MethodDeclaration[16577-18214]:MethodDeclaration[16577-18214]"
  }, {
    "left" : "package getTimeZoneDisplay(tz , daylight boolean, style int, locale ) : ",
    "right" : "package getTimeZoneDisplay(tz , daylight boolean, style int, locale ) : ",
    "info" : "MethodDeclaration[18298-19156]:MethodDeclaration[18298-19156]"
  }, {
    "left" : "private getDefaultPattern() : ",
    "right" : "private getDefaultPattern() : ",
    "info" : "MethodDeclaration[19162-19470]:MethodDeclaration[19162-19470]"
  }, {
    "left" : "protected FastDateFormat(pattern , timeZone , locale )",
    "right" : "protected FastDateFormat(pattern , timeZone , locale )",
    "info" : "MethodDeclaration[19573-20640]:MethodDeclaration[19573-20640]"
  }, {
    "left" : "protected init() : void",
    "right" : "protected init() : void",
    "info" : "MethodDeclaration[20646-21018]:MethodDeclaration[20646-21018]"
  }, {
    "left" : "protected parsePattern() : ",
    "right" : "protected parsePattern() : ",
    "info" : "MethodDeclaration[21127-26329]:MethodDeclaration[21127-26329]"
  }, {
    "left" : "protected parseToken(pattern , indexRef ) : ",
    "right" : "protected parseToken(pattern , indexRef ) : ",
    "info" : "MethodDeclaration[26335-28051]:MethodDeclaration[26335-28051]"
  }, {
    "left" : "protected selectNumberRule(field int, padding int) : ",
    "right" : "protected selectNumberRule(field int, padding int) : ",
    "info" : "MethodDeclaration[28057-28605]:MethodDeclaration[28057-28605]"
  }, {
    "left" : "public format(obj , toAppendTo , pos ...) : ",
    "right" : "public format(obj , toAppendTo , pos ...) : ",
    "info" : "MethodDeclaration[28711-29581]:MethodDeclaration[28711-29581]"
  }, {
    "left" : "public format(millis long...) : ",
    "right" : "public format(millis long...) : ",
    "info" : "MethodDeclaration[29587-29862]:MethodDeclaration[29587-29862]"
  }, {
    "left" : "public format(date ) : ",
    "right" : "public format(date ) : ",
    "info" : "MethodDeclaration[29868-30215]:MethodDeclaration[29868-30215]"
  }, {
    "left" : "public format(calendar ) : ",
    "right" : "public format(calendar ) : ",
    "info" : "MethodDeclaration[30221-30511]:MethodDeclaration[30221-30511]"
  }, {
    "left" : "public format(millis long, buf ) : ",
    "right" : "public format(millis long, buf ) : ",
    "info" : "MethodDeclaration[30517-30923]:MethodDeclaration[30517-30923]"
  }, {
    "left" : "public format(date , buf ) : ",
    "right" : "public format(date , buf ) : ",
    "info" : "MethodDeclaration[30929-31359]:MethodDeclaration[30929-31359]"
  }, {
    "left" : "public format(calendar , buf ) : ",
    "right" : "public format(calendar , buf ) : ",
    "info" : "MethodDeclaration[31365-31880]:MethodDeclaration[31365-31925]"
  }, {
    "left" : "protected applyRules(calendar , buf ) : ",
    "right" : "protected applyRules(calendar , buf ) : ",
    "info" : "MethodDeclaration[31886-32397]:MethodDeclaration[31931-32442]"
  }, {
    "left" : "public parseObject(source , pos ...) : ",
    "right" : "public parseObject(source , pos ...) : ",
    "info" : "MethodDeclaration[32496-32849]:MethodDeclaration[32541-32894]"
  }, {
    "left" : "public getPattern() : ",
    "right" : "public getPattern() : ",
    "info" : "MethodDeclaration[32954-33166]:MethodDeclaration[32999-33211]"
  }, {
    "left" : "public getTimeZone() : ",
    "right" : "public getTimeZone() : ",
    "info" : "MethodDeclaration[33172-33591]:MethodDeclaration[33217-33636]"
  }, {
    "left" : "public getTimeZoneOverridesCalendar() : boolean",
    "right" : "public getTimeZoneOverridesCalendar() : boolean",
    "info" : "MethodDeclaration[33597-33920]:MethodDeclaration[33642-33965]"
  }, {
    "left" : "public getLocale() : ",
    "right" : "public getLocale() : ",
    "info" : "MethodDeclaration[33926-34087]:MethodDeclaration[33971-34132]"
  }, {
    "left" : "public getMaxLengthEstimate() : int",
    "right" : "public getMaxLengthEstimate() : int",
    "info" : "MethodDeclaration[34093-34451]:MethodDeclaration[34138-34496]"
  }, {
    "left" : "public equals(obj ) : boolean",
    "right" : "public equals(obj ) : boolean",
    "info" : "MethodDeclaration[34549-35338]:MethodDeclaration[34594-35383]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[35344-35762]:MethodDeclaration[35389-35807]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[35768-35988]:MethodDeclaration[35813-36033]"
  }, {
    "left" : "private readObject(in ) : void",
    "right" : "private readObject(in ) : void",
    "info" : "MethodDeclaration[36091-36570]:MethodDeclaration[36136-36615]"
  }, {
    "left" : "interface : Rule",
    "right" : "interface : Rule",
    "info" : "TypeDeclaration[36671-37233]:TypeDeclaration[36716-37278]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[36763-36915]:MethodDeclaration[36808-36960]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[36933-37227]:MethodDeclaration[36978-37272]"
  }, {
    "left" : "interface : NumberRule",
    "right" : "interface : NumberRule",
    "info" : "TypeDeclaration[37239-37632]:TypeDeclaration[37284-37677]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[37358-37626]:MethodDeclaration[37403-37671]"
  }, {
    "left" : "class : CharacterLiteral",
    "right" : "class : CharacterLiteral",
    "info" : "TypeDeclaration[37638-38371]:TypeDeclaration[37683-38416]"
  }, {
    "left" : "mValue",
    "right" : "mValue",
    "info" : "FieldDeclaration[37783-37809]:FieldDeclaration[37828-37854]"
  }, {
    "left" : "package CharacterLiteral(value char)",
    "right" : "package CharacterLiteral(value char)",
    "info" : "MethodDeclaration[37819-38079]:MethodDeclaration[37864-38124]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[38089-38199]:MethodDeclaration[38134-38244]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[38209-38365]:MethodDeclaration[38254-38410]"
  }, {
    "left" : "class : StringLiteral",
    "right" : "class : StringLiteral",
    "info" : "TypeDeclaration[38377-39106]:TypeDeclaration[38422-39151]"
  }, {
    "left" : "mValue",
    "right" : "mValue",
    "info" : "FieldDeclaration[38509-38537]:FieldDeclaration[38554-38582]"
  }, {
    "left" : "package StringLiteral(value )",
    "right" : "package StringLiteral(value )",
    "info" : "MethodDeclaration[38547-38800]:MethodDeclaration[38592-38845]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[38810-38934]:MethodDeclaration[38855-38979]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[38944-39100]:MethodDeclaration[38989-39145]"
  }, {
    "left" : "class : TextField",
    "right" : "class : TextField",
    "info" : "TypeDeclaration[39112-40185]:TypeDeclaration[39157-40230]"
  }, {
    "left" : "mField",
    "right" : "mField",
    "info" : "FieldDeclaration[39245-39270]:FieldDeclaration[39290-39315]"
  }, {
    "left" : "mValues",
    "right" : "mValues",
    "info" : "FieldDeclaration[39279-39310]:FieldDeclaration[39324-39355]"
  }, {
    "left" : "package TextField(field int, values ...)",
    "right" : "package TextField(field int, values ...)",
    "info" : "MethodDeclaration[39320-39647]:MethodDeclaration[39365-39692]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[39657-39990]:MethodDeclaration[39702-40035]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[40000-40179]:MethodDeclaration[40045-40224]"
  }, {
    "left" : "class : UnpaddedNumberField",
    "right" : "class : UnpaddedNumberField",
    "info" : "TypeDeclaration[40191-41369]:TypeDeclaration[40236-41414]"
  }, {
    "left" : "mField",
    "right" : "mField",
    "info" : "FieldDeclaration[40336-40361]:FieldDeclaration[40381-40406]"
  }, {
    "left" : "package UnpaddedNumberField(field int)",
    "right" : "package UnpaddedNumberField(field int)",
    "info" : "MethodDeclaration[40371-40606]:MethodDeclaration[40416-40651]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[40616-40726]:MethodDeclaration[40661-40771]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[40736-40909]:MethodDeclaration[40781-40954]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[40919-41363]:MethodDeclaration[40964-41408]"
  }, {
    "left" : "class : UnpaddedMonthField",
    "right" : "class : UnpaddedMonthField",
    "info" : "TypeDeclaration[41375-42435]:TypeDeclaration[41420-42480]"
  }, {
    "left" : "INSTANCE",
    "right" : "INSTANCE",
    "info" : "FieldDeclaration[41518-41586]:FieldDeclaration[41563-41631]"
  }, {
    "left" : "package UnpaddedMonthField()",
    "right" : "package UnpaddedMonthField()",
    "info" : "MethodDeclaration[41596-41754]:MethodDeclaration[41641-41799]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[41764-41874]:MethodDeclaration[41809-41919]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[41884-42069]:MethodDeclaration[41929-42114]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[42079-42429]:MethodDeclaration[42124-42474]"
  }, {
    "left" : "class : PaddedNumberField",
    "right" : "class : PaddedNumberField",
    "info" : "TypeDeclaration[42441-44305]:TypeDeclaration[42486-44350]"
  }, {
    "left" : "mField",
    "right" : "mField",
    "info" : "FieldDeclaration[42581-42606]:FieldDeclaration[42626-42651]"
  }, {
    "left" : "mSize",
    "right" : "mSize",
    "info" : "FieldDeclaration[42615-42639]:FieldDeclaration[42660-42684]"
  }, {
    "left" : "package PaddedNumberField(field int, size int)",
    "right" : "package PaddedNumberField(field int, size int)",
    "info" : "MethodDeclaration[42649-43110]:MethodDeclaration[42694-43155]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[43120-43230]:MethodDeclaration[43165-43275]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[43240-43413]:MethodDeclaration[43285-43458]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[43423-44299]:MethodDeclaration[43468-44344]"
  }, {
    "left" : "class : TwoDigitNumberField",
    "right" : "class : TwoDigitNumberField",
    "info" : "TypeDeclaration[44311-45401]:TypeDeclaration[44356-45446]"
  }, {
    "left" : "mField",
    "right" : "mField",
    "info" : "FieldDeclaration[44456-44481]:FieldDeclaration[44501-44526]"
  }, {
    "left" : "package TwoDigitNumberField(field int)",
    "right" : "package TwoDigitNumberField(field int)",
    "info" : "MethodDeclaration[44491-44727]:MethodDeclaration[44536-44772]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[44737-44847]:MethodDeclaration[44782-44892]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[44857-45030]:MethodDeclaration[44902-45075]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[45040-45395]:MethodDeclaration[45085-45440]"
  }, {
    "left" : "class : TwoDigitYearField",
    "right" : "class : TwoDigitYearField",
    "info" : "TypeDeclaration[45407-46326]:TypeDeclaration[45452-46371]"
  }, {
    "left" : "INSTANCE",
    "right" : "INSTANCE",
    "info" : "FieldDeclaration[45548-45614]:FieldDeclaration[45593-45659]"
  }, {
    "left" : "package TwoDigitYearField()",
    "right" : "package TwoDigitYearField()",
    "info" : "MethodDeclaration[45624-45769]:MethodDeclaration[45669-45814]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[45779-45889]:MethodDeclaration[45824-45934]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[45899-46085]:MethodDeclaration[45944-46130]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[46095-46320]:MethodDeclaration[46140-46365]"
  }, {
    "left" : "class : TwoDigitMonthField",
    "right" : "class : TwoDigitMonthField",
    "info" : "TypeDeclaration[46332-47256]:TypeDeclaration[46377-47301]"
  }, {
    "left" : "INSTANCE",
    "right" : "INSTANCE",
    "info" : "FieldDeclaration[46475-46543]:FieldDeclaration[46520-46588]"
  }, {
    "left" : "package TwoDigitMonthField()",
    "right" : "package TwoDigitMonthField()",
    "info" : "MethodDeclaration[46553-46700]:MethodDeclaration[46598-46745]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[46710-46820]:MethodDeclaration[46755-46865]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[46830-47015]:MethodDeclaration[46875-47060]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[47025-47250]:MethodDeclaration[47070-47295]"
  }, {
    "left" : "class : TwelveHourField",
    "right" : "class : TwelveHourField",
    "info" : "TypeDeclaration[47262-48359]:TypeDeclaration[47307-48404]"
  }, {
    "left" : "mRule",
    "right" : "mRule",
    "info" : "FieldDeclaration[47406-47437]:FieldDeclaration[47451-47482]"
  }, {
    "left" : "package TwelveHourField(rule )",
    "right" : "package TwelveHourField(rule )",
    "info" : "MethodDeclaration[47447-47706]:MethodDeclaration[47492-47751]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[47716-47847]:MethodDeclaration[47761-47892]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[47857-48187]:MethodDeclaration[47902-48232]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[48197-48353]:MethodDeclaration[48242-48398]"
  }, {
    "left" : "class : TwentyFourHourField",
    "right" : "class : TwentyFourHourField",
    "info" : "TypeDeclaration[48365-49488]:TypeDeclaration[48410-49533]"
  }, {
    "left" : "mRule",
    "right" : "mRule",
    "info" : "FieldDeclaration[48518-48549]:FieldDeclaration[48563-48594]"
  }, {
    "left" : "package TwentyFourHourField(rule )",
    "right" : "package TwentyFourHourField(rule )",
    "info" : "MethodDeclaration[48559-48826]:MethodDeclaration[48604-48871]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[48836-48967]:MethodDeclaration[48881-49012]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[48977-49316]:MethodDeclaration[49022-49361]"
  }, {
    "left" : "public appendTo(buffer , value int) : void",
    "right" : "public appendTo(buffer , value int) : void",
    "info" : "MethodDeclaration[49326-49482]:MethodDeclaration[49371-49527]"
  }, {
    "left" : "class : TimeZoneNameRule",
    "right" : "class : TimeZoneNameRule",
    "info" : "TypeDeclaration[49494-51904]:TypeDeclaration[49539-51949]"
  }, {
    "left" : "mTimeZone",
    "right" : "mTimeZone",
    "info" : "FieldDeclaration[49628-49661]:FieldDeclaration[49673-49706]"
  }, {
    "left" : "mTimeZoneForced",
    "right" : "mTimeZoneForced",
    "info" : "FieldDeclaration[49670-49708]:FieldDeclaration[49715-49753]"
  }, {
    "left" : "mLocale",
    "right" : "mLocale",
    "info" : "FieldDeclaration[49717-49746]:FieldDeclaration[49762-49791]"
  }, {
    "left" : "mStyle",
    "right" : "mStyle",
    "info" : "FieldDeclaration[49755-49780]:FieldDeclaration[49800-49825]"
  }, {
    "left" : "mStandard",
    "right" : "mStandard",
    "info" : "FieldDeclaration[49789-49820]:FieldDeclaration[49834-49865]"
  }, {
    "left" : "mDaylight",
    "right" : "mDaylight",
    "info" : "FieldDeclaration[49829-49860]:FieldDeclaration[49874-49905]"
  }, {
    "left" : "package TimeZoneNameRule(timeZone , timeZoneForced boolean, locale , style int)",
    "right" : "package TimeZoneNameRule(timeZone , timeZoneForced boolean, locale , style int)",
    "info" : "MethodDeclaration[49870-50752]:MethodDeclaration[49915-50797]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[50762-51097]:MethodDeclaration[50807-51142]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[51107-51898]:MethodDeclaration[51152-51943]"
  }, {
    "left" : "class : TimeZoneNumberRule",
    "right" : "class : TimeZoneNumberRule",
    "info" : "TypeDeclaration[51910-53621]:TypeDeclaration[51955-53666]"
  }, {
    "left" : "INSTANCE_COLON",
    "right" : "INSTANCE_COLON",
    "info" : "FieldDeclaration[52106-52184]:FieldDeclaration[52151-52229]"
  }, {
    "left" : "INSTANCE_NO_COLON",
    "right" : "INSTANCE_NO_COLON",
    "info" : "FieldDeclaration[52193-52275]:FieldDeclaration[52238-52320]"
  }, {
    "left" : "mColon",
    "right" : "mColon",
    "info" : "FieldDeclaration[52293-52314]:FieldDeclaration[52338-52359]"
  }, {
    "left" : "package TimeZoneNumberRule(colon boolean)",
    "right" : "package TimeZoneNumberRule(colon boolean)",
    "info" : "MethodDeclaration[52332-52628]:MethodDeclaration[52377-52673]"
  }, {
    "left" : "public estimateLength() : int",
    "right" : "public estimateLength() : int",
    "info" : "MethodDeclaration[52638-52748]:MethodDeclaration[52683-52793]"
  }, {
    "left" : "public appendTo(buffer , calendar ) : void",
    "right" : "public appendTo(buffer , calendar ) : void",
    "info" : "MethodDeclaration[52758-53603]:MethodDeclaration[52803-53648]"
  }, {
    "left" : "class : TimeZoneDisplayKey",
    "right" : "class : TimeZoneDisplayKey",
    "info" : "TypeDeclaration[53705-55311]:TypeDeclaration[53750-55356]"
  }, {
    "left" : "mTimeZone",
    "right" : "mTimeZone",
    "info" : "FieldDeclaration[53846-53879]:FieldDeclaration[53891-53924]"
  }, {
    "left" : "mStyle",
    "right" : "mStyle",
    "info" : "FieldDeclaration[53888-53913]:FieldDeclaration[53933-53958]"
  }, {
    "left" : "mLocale",
    "right" : "mLocale",
    "info" : "FieldDeclaration[53922-53951]:FieldDeclaration[53967-53996]"
  }, {
    "left" : "package TimeZoneDisplayKey(timeZone , daylight boolean, style int, locale )",
    "right" : "package TimeZoneDisplayKey(timeZone , daylight boolean, style int, locale )",
    "info" : "MethodDeclaration[53961-54608]:MethodDeclaration[54006-54653]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[54618-54771]:MethodDeclaration[54663-54816]"
  }, {
    "left" : "public equals(obj ) : boolean",
    "right" : "public equals(obj ) : boolean",
    "info" : "MethodDeclaration[54781-55305]:MethodDeclaration[54826-55350]"
  }, {
    "left" : "class : Pair",
    "right" : "class : Pair",
    "info" : "TypeDeclaration[55395-56934]:TypeDeclaration[55440-56979]"
  }, {
    "left" : "mObj1",
    "right" : "mObj1",
    "info" : "FieldDeclaration[55610-55637]:FieldDeclaration[55655-55682]"
  }, {
    "left" : "mObj2",
    "right" : "mObj2",
    "info" : "FieldDeclaration[55646-55673]:FieldDeclaration[55691-55718]"
  }, {
    "left" : "public Pair(obj1 , obj2 )",
    "right" : "public Pair(obj1 , obj2 )",
    "info" : "MethodDeclaration[55683-55989]:MethodDeclaration[55728-56034]"
  }, {
    "left" : "public equals(obj ) : boolean",
    "right" : "public equals(obj ) : boolean",
    "info" : "MethodDeclaration[55999-56521]:MethodDeclaration[56044-56566]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[56531-56763]:MethodDeclaration[56576-56808]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[56773-56928]:MethodDeclaration[56818-56973]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2646-2652]:Modifier[2646-2652]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[2653-2658]:TYPE_DECLARATION_KIND[2653-2658]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5466-5472]:Modifier[5466-5472]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5473-5479]:Modifier[5473-5479]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[5480-5494]:SimpleType[5480-5494]"
  }, {
    "left" : "getInstance",
    "right" : "getInstance",
    "info" : "SimpleName[5495-5506]:SimpleName[5495-5506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5509-5577]:Block[5509-5577]"
  }, {
    "left" : "return getInstance(getDefaultPattern(), null, null);",
    "right" : "return getInstance(getDefaultPattern(), null, null);",
    "info" : "ReturnStatement[5519-5571]:ReturnStatement[5519-5571]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5903-5909]:Modifier[5903-5909]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5910-5916]:Modifier[5910-5916]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[5917-5931]:SimpleType[5917-5931]"
  }, {
    "left" : "getInstance",
    "right" : "getInstance",
    "info" : "SimpleName[5932-5943]:SimpleName[5932-5943]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[5944-5958]:SingleVariableDeclaration[5944-5958]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5960-6016]:Block[5960-6016]"
  }, {
    "left" : "return getInstance(pattern, null, null);",
    "right" : "return getInstance(pattern, null, null);",
    "info" : "ReturnStatement[5970-6010]:ReturnStatement[5970-6010]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6424-6430]:Modifier[6424-6430]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6431-6437]:Modifier[6431-6437]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[6438-6452]:SimpleType[6438-6452]"
  }, {
    "left" : "getInstance",
    "right" : "getInstance",
    "info" : "SimpleName[6453-6464]:SimpleName[6453-6464]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[6465-6479]:SingleVariableDeclaration[6465-6479]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[6481-6498]:SingleVariableDeclaration[6481-6498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6500-6560]:Block[6500-6560]"
  }, {
    "left" : "return getInstance(pattern, timeZone, null);",
    "right" : "return getInstance(pattern, timeZone, null);",
    "info" : "ReturnStatement[6510-6554]:ReturnStatement[6510-6554]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6938-6944]:Modifier[6938-6944]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6945-6951]:Modifier[6945-6951]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[6952-6966]:SimpleType[6952-6966]"
  }, {
    "left" : "getInstance",
    "right" : "getInstance",
    "info" : "SimpleName[6967-6978]:SimpleName[6967-6978]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[6979-6993]:SingleVariableDeclaration[6979-6993]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[6995-7008]:SingleVariableDeclaration[6995-7008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7010-7068]:Block[7010-7068]"
  }, {
    "left" : "return getInstance(pattern, null, locale);",
    "right" : "return getInstance(pattern, null, locale);",
    "info" : "ReturnStatement[7020-7062]:ReturnStatement[7020-7062]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7576-7582]:Modifier[7576-7582]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7583-7589]:Modifier[7583-7589]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[7590-7602]:Modifier[7590-7602]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[7603-7617]:SimpleType[7603-7617]"
  }, {
    "left" : "getInstance",
    "right" : "getInstance",
    "info" : "SimpleName[7618-7629]:SimpleName[7618-7629]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[7630-7644]:SingleVariableDeclaration[7630-7644]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[7646-7663]:SingleVariableDeclaration[7646-7663]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[7665-7678]:SingleVariableDeclaration[7665-7678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7680-8065]:Block[7680-8065]"
  }, {
    "left" : "FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",
    "right" : "FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",
    "info" : "VariableDeclarationStatement[7690-7765]:VariableDeclarationStatement[7690-7765]"
  }, {
    "left" : "FastDateFormat format = cInstanceCache.get(emptyFormat);",
    "right" : "FastDateFormat format = cInstanceCache.get(emptyFormat);",
    "info" : "VariableDeclarationStatement[7774-7830]:VariableDeclarationStatement[7774-7830]"
  }, {
    "left" : "if (format == null)",
    "right" : "if (format == null)",
    "info" : "IfStatement[7839-8036]:IfStatement[7839-8036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7859-8036]:Block[7859-8036]"
  }, {
    "left" : "format = emptyFormat;",
    "right" : "format = emptyFormat;",
    "info" : "ExpressionStatement[7873-7894]:ExpressionStatement[7873-7894]"
  }, {
    "left" : "format.init();",
    "right" : "format.init();",
    "info" : "ExpressionStatement[7907-7921]:ExpressionStatement[7907-7921]"
  }, {
    "left" : "cInstanceCache.put(format, format);",
    "right" : "cInstanceCache.put(format, format);",
    "info" : "ExpressionStatement[7975-8010]:ExpressionStatement[7975-8010]"
  }, {
    "left" : "return format;",
    "right" : "return format;",
    "info" : "ReturnStatement[8045-8059]:ReturnStatement[8045-8059]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8509-8515]:Modifier[8509-8515]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8516-8522]:Modifier[8516-8522]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[8523-8537]:SimpleType[8523-8537]"
  }, {
    "left" : "getDateInstance",
    "right" : "getDateInstance",
    "info" : "SimpleName[8538-8553]:SimpleName[8538-8553]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[8554-8563]:SingleVariableDeclaration[8554-8563]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8565-8623]:Block[8565-8623]"
  }, {
    "left" : "return getDateInstance(style, null, null);",
    "right" : "return getDateInstance(style, null, null);",
    "info" : "ReturnStatement[8575-8617]:ReturnStatement[8575-8617]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9052-9058]:Modifier[9052-9058]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9059-9065]:Modifier[9059-9065]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[9066-9080]:SimpleType[9066-9080]"
  }, {
    "left" : "getDateInstance",
    "right" : "getDateInstance",
    "info" : "SimpleName[9081-9096]:SimpleName[9081-9096]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[9097-9106]:SingleVariableDeclaration[9097-9106]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[9108-9121]:SingleVariableDeclaration[9108-9121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9123-9183]:Block[9123-9183]"
  }, {
    "left" : "return getDateInstance(style, null, locale);",
    "right" : "return getDateInstance(style, null, locale);",
    "info" : "ReturnStatement[9133-9177]:ReturnStatement[9133-9177]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9639-9645]:Modifier[9639-9645]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9646-9652]:Modifier[9646-9652]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[9653-9667]:SimpleType[9653-9667]"
  }, {
    "left" : "getDateInstance",
    "right" : "getDateInstance",
    "info" : "SimpleName[9668-9683]:SimpleName[9668-9683]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[9684-9693]:SingleVariableDeclaration[9684-9693]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[9695-9712]:SingleVariableDeclaration[9695-9712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9714-9776]:Block[9714-9776]"
  }, {
    "left" : "return getDateInstance(style, timeZone, null);",
    "right" : "return getDateInstance(style, timeZone, null);",
    "info" : "ReturnStatement[9724-9770]:ReturnStatement[9724-9770]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10262-10268]:Modifier[10262-10268]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10269-10275]:Modifier[10269-10275]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[10276-10288]:Modifier[10276-10288]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[10289-10303]:SimpleType[10289-10303]"
  }, {
    "left" : "getDateInstance",
    "right" : "getDateInstance",
    "info" : "SimpleName[10304-10319]:SimpleName[10304-10319]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[10320-10329]:SingleVariableDeclaration[10320-10329]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[10331-10348]:SingleVariableDeclaration[10331-10348]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[10350-10363]:SingleVariableDeclaration[10350-10363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10365-11217]:Block[10365-11217]"
  }, {
    "left" : "Object key = Integer.valueOf(style);",
    "right" : "Object key = Integer.valueOf(style);",
    "info" : "VariableDeclarationStatement[10375-10411]:VariableDeclarationStatement[10375-10411]"
  }, {
    "left" : "if (timeZone != null)",
    "right" : "if (timeZone != null)",
    "info" : "IfStatement[10420-10496]:IfStatement[10420-10496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10442-10496]:Block[10442-10496]"
  }, {
    "left" : "key = new Pair(key, timeZone);",
    "right" : "key = new Pair(key, timeZone);",
    "info" : "ExpressionStatement[10456-10486]:ExpressionStatement[10456-10486]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[10506-10579]:IfStatement[10506-10579]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10526-10579]:Block[10526-10579]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[10540-10569]:ExpressionStatement[10540-10569]"
  }, {
    "left" : "key = new Pair(key, locale);",
    "right" : "key = new Pair(key, locale);",
    "info" : "ExpressionStatement[10589-10617]:ExpressionStatement[10589-10617]"
  }, {
    "left" : "FastDateFormat format = cDateInstanceCache.get(key);",
    "right" : "FastDateFormat format = cDateInstanceCache.get(key);",
    "info" : "VariableDeclarationStatement[10627-10679]:VariableDeclarationStatement[10627-10679]"
  }, {
    "left" : "if (format == null)",
    "right" : "if (format == null)",
    "info" : "IfStatement[10688-11188]:IfStatement[10688-11188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10708-11188]:Block[10708-11188]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[10722-11178]:TryStatement[10722-11178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10726-11039]:Block[10726-11039]"
  }, {
    "left" : "SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);",
    "right" : "SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);",
    "info" : "VariableDeclarationStatement[10744-10834]:VariableDeclarationStatement[10744-10834]"
  }, {
    "left" : "String pattern = formatter.toPattern();",
    "right" : "String pattern = formatter.toPattern();",
    "info" : "VariableDeclarationStatement[10851-10890]:VariableDeclarationStatement[10851-10890]"
  }, {
    "left" : "format = getInstance(pattern, timeZone, locale);",
    "right" : "format = getInstance(pattern, timeZone, locale);",
    "info" : "ExpressionStatement[10907-10955]:ExpressionStatement[10907-10955]"
  }, {
    "left" : "cDateInstanceCache.put(key, format);",
    "right" : "cDateInstanceCache.put(key, format);",
    "info" : "ExpressionStatement[10972-11008]:ExpressionStatement[10972-11008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11070-11178]:Block[11070-11178]"
  }, {
    "left" : "throw new IllegalArgumentException(\"No date pattern for locale: \" + locale);",
    "right" : "throw new IllegalArgumentException(\"No date pattern for locale: \" + locale);",
    "info" : "ThrowStatement[11088-11164]:ThrowStatement[11088-11164]"
  }, {
    "left" : "return format;",
    "right" : "return format;",
    "info" : "ReturnStatement[11197-11211]:ReturnStatement[11197-11211]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11661-11667]:Modifier[11661-11667]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11668-11674]:Modifier[11668-11674]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[11675-11689]:SimpleType[11675-11689]"
  }, {
    "left" : "getTimeInstance",
    "right" : "getTimeInstance",
    "info" : "SimpleName[11690-11705]:SimpleName[11690-11705]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[11706-11715]:SingleVariableDeclaration[11706-11715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11717-11775]:Block[11717-11775]"
  }, {
    "left" : "return getTimeInstance(style, null, null);",
    "right" : "return getTimeInstance(style, null, null);",
    "info" : "ReturnStatement[11727-11769]:ReturnStatement[11727-11769]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12204-12210]:Modifier[12204-12210]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12211-12217]:Modifier[12211-12217]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[12218-12232]:SimpleType[12218-12232]"
  }, {
    "left" : "getTimeInstance",
    "right" : "getTimeInstance",
    "info" : "SimpleName[12233-12248]:SimpleName[12233-12248]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[12249-12258]:SingleVariableDeclaration[12249-12258]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[12260-12273]:SingleVariableDeclaration[12260-12273]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12275-12335]:Block[12275-12335]"
  }, {
    "left" : "return getTimeInstance(style, null, locale);",
    "right" : "return getTimeInstance(style, null, locale);",
    "info" : "ReturnStatement[12285-12329]:ReturnStatement[12285-12329]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12795-12801]:Modifier[12795-12801]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12802-12808]:Modifier[12802-12808]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[12809-12823]:SimpleType[12809-12823]"
  }, {
    "left" : "getTimeInstance",
    "right" : "getTimeInstance",
    "info" : "SimpleName[12824-12839]:SimpleName[12824-12839]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[12840-12849]:SingleVariableDeclaration[12840-12849]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[12851-12868]:SingleVariableDeclaration[12851-12868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12870-12932]:Block[12870-12932]"
  }, {
    "left" : "return getTimeInstance(style, timeZone, null);",
    "right" : "return getTimeInstance(style, timeZone, null);",
    "info" : "ReturnStatement[12880-12926]:ReturnStatement[12880-12926]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13423-13429]:Modifier[13423-13429]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13430-13436]:Modifier[13430-13436]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[13437-13449]:Modifier[13437-13449]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[13450-13464]:SimpleType[13450-13464]"
  }, {
    "left" : "getTimeInstance",
    "right" : "getTimeInstance",
    "info" : "SimpleName[13465-13480]:SimpleName[13465-13480]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[13481-13490]:SingleVariableDeclaration[13481-13490]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[13492-13509]:SingleVariableDeclaration[13492-13509]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[13511-13524]:SingleVariableDeclaration[13511-13524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13526-14429]:Block[13526-14429]"
  }, {
    "left" : "Object key = Integer.valueOf(style);",
    "right" : "Object key = Integer.valueOf(style);",
    "info" : "VariableDeclarationStatement[13536-13572]:VariableDeclarationStatement[13536-13572]"
  }, {
    "left" : "if (timeZone != null)",
    "right" : "if (timeZone != null)",
    "info" : "IfStatement[13581-13657]:IfStatement[13581-13657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13603-13657]:Block[13603-13657]"
  }, {
    "left" : "key = new Pair(key, timeZone);",
    "right" : "key = new Pair(key, timeZone);",
    "info" : "ExpressionStatement[13617-13647]:ExpressionStatement[13617-13647]"
  }, {
    "left" : "if (locale != null)",
    "right" : "if (locale != null)",
    "info" : "IfStatement[13666-13738]:IfStatement[13666-13738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13686-13738]:Block[13686-13738]"
  }, {
    "left" : "key = new Pair(key, locale);",
    "right" : "key = new Pair(key, locale);",
    "info" : "ExpressionStatement[13700-13728]:ExpressionStatement[13700-13728]"
  }, {
    "left" : "FastDateFormat format = cTimeInstanceCache.get(key);",
    "right" : "FastDateFormat format = cTimeInstanceCache.get(key);",
    "info" : "VariableDeclarationStatement[13748-13800]:VariableDeclarationStatement[13748-13800]"
  }, {
    "left" : "if (format == null)",
    "right" : "if (format == null)",
    "info" : "IfStatement[13809-14400]:IfStatement[13809-14400]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13829-14400]:Block[13829-14400]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[13843-13924]:IfStatement[13843-13924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13863-13924]:Block[13863-13924]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[13881-13910]:ExpressionStatement[13881-13910]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[13938-14390]:TryStatement[13938-14390]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13942-14251]:Block[13942-14251]"
  }, {
    "left" : "SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getTimeInstance(style, locale);",
    "right" : "SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getTimeInstance(style, locale);",
    "info" : "VariableDeclarationStatement[13960-14050]:VariableDeclarationStatement[13960-14050]"
  }, {
    "left" : "String pattern = formatter.toPattern();",
    "right" : "String pattern = formatter.toPattern();",
    "info" : "VariableDeclarationStatement[14067-14106]:VariableDeclarationStatement[14067-14106]"
  }, {
    "left" : "format = getInstance(pattern, timeZone, locale);",
    "right" : "format = getInstance(pattern, timeZone, locale);",
    "info" : "ExpressionStatement[14123-14171]:ExpressionStatement[14123-14171]"
  }, {
    "left" : "cTimeInstanceCache.put(key, format);",
    "right" : "cTimeInstanceCache.put(key, format);",
    "info" : "ExpressionStatement[14188-14224]:ExpressionStatement[14188-14224]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14282-14390]:Block[14282-14390]"
  }, {
    "left" : "throw new IllegalArgumentException(\"No date pattern for locale: \" + locale);",
    "right" : "throw new IllegalArgumentException(\"No date pattern for locale: \" + locale);",
    "info" : "ThrowStatement[14300-14376]:ThrowStatement[14300-14376]"
  }, {
    "left" : "return format;",
    "right" : "return format;",
    "info" : "ReturnStatement[14409-14423]:ReturnStatement[14409-14423]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14958-14964]:Modifier[14958-14964]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14965-14971]:Modifier[14965-14971]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[14972-14986]:SimpleType[14972-14986]"
  }, {
    "left" : "getDateTimeInstance",
    "right" : "getDateTimeInstance",
    "info" : "SimpleName[14987-15006]:SimpleName[14987-15006]"
  }, {
    "left" : "int dateStyle",
    "right" : "int dateStyle",
    "info" : "SingleVariableDeclaration[15020-15033]:SingleVariableDeclaration[15020-15033]"
  }, {
    "left" : "int timeStyle",
    "right" : "int timeStyle",
    "info" : "SingleVariableDeclaration[15035-15048]:SingleVariableDeclaration[15035-15048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15050-15127]:Block[15050-15127]"
  }, {
    "left" : "return getDateTimeInstance(dateStyle, timeStyle, null, null);",
    "right" : "return getDateTimeInstance(dateStyle, timeStyle, null, null);",
    "info" : "ReturnStatement[15060-15121]:ReturnStatement[15060-15121]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15645-15651]:Modifier[15645-15651]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15652-15658]:Modifier[15652-15658]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[15659-15673]:SimpleType[15659-15673]"
  }, {
    "left" : "getDateTimeInstance",
    "right" : "getDateTimeInstance",
    "info" : "SimpleName[15674-15693]:SimpleName[15674-15693]"
  }, {
    "left" : "int dateStyle",
    "right" : "int dateStyle",
    "info" : "SingleVariableDeclaration[15707-15720]:SingleVariableDeclaration[15707-15720]"
  }, {
    "left" : "int timeStyle",
    "right" : "int timeStyle",
    "info" : "SingleVariableDeclaration[15722-15735]:SingleVariableDeclaration[15722-15735]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[15737-15750]:SingleVariableDeclaration[15737-15750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15752-15831]:Block[15752-15831]"
  }, {
    "left" : "return getDateTimeInstance(dateStyle, timeStyle, null, locale);",
    "right" : "return getDateTimeInstance(dateStyle, timeStyle, null, locale);",
    "info" : "ReturnStatement[15762-15825]:ReturnStatement[15762-15825]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16376-16382]:Modifier[16376-16382]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16383-16389]:Modifier[16383-16389]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[16390-16404]:SimpleType[16390-16404]"
  }, {
    "left" : "getDateTimeInstance",
    "right" : "getDateTimeInstance",
    "info" : "SimpleName[16405-16424]:SimpleName[16405-16424]"
  }, {
    "left" : "int dateStyle",
    "right" : "int dateStyle",
    "info" : "SingleVariableDeclaration[16438-16451]:SingleVariableDeclaration[16438-16451]"
  }, {
    "left" : "int timeStyle",
    "right" : "int timeStyle",
    "info" : "SingleVariableDeclaration[16453-16466]:SingleVariableDeclaration[16453-16466]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[16468-16485]:SingleVariableDeclaration[16468-16485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16487-16568]:Block[16487-16568]"
  }, {
    "left" : "return getDateTimeInstance(dateStyle, timeStyle, timeZone, null);",
    "right" : "return getDateTimeInstance(dateStyle, timeStyle, timeZone, null);",
    "info" : "ReturnStatement[16497-16562]:ReturnStatement[16497-16562]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17143-17149]:Modifier[17143-17149]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[17150-17156]:Modifier[17150-17156]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[17157-17169]:Modifier[17157-17169]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleType[17170-17184]:SimpleType[17170-17184]"
  }, {
    "left" : "getDateTimeInstance",
    "right" : "getDateTimeInstance",
    "info" : "SimpleName[17185-17204]:SimpleName[17185-17204]"
  }, {
    "left" : "int dateStyle",
    "right" : "int dateStyle",
    "info" : "SingleVariableDeclaration[17205-17218]:SingleVariableDeclaration[17205-17218]"
  }, {
    "left" : "int timeStyle",
    "right" : "int timeStyle",
    "info" : "SingleVariableDeclaration[17220-17233]:SingleVariableDeclaration[17220-17233]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[17235-17252]:SingleVariableDeclaration[17235-17252]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[17266-17279]:SingleVariableDeclaration[17266-17279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17281-18214]:Block[17281-18214]"
  }, {
    "left" : "Object key = new Pair(Integer.valueOf(dateStyle), Integer.valueOf(timeStyle));",
    "right" : "Object key = new Pair(Integer.valueOf(dateStyle), Integer.valueOf(timeStyle));",
    "info" : "VariableDeclarationStatement[17292-17370]:VariableDeclarationStatement[17292-17370]"
  }, {
    "left" : "if (timeZone != null)",
    "right" : "if (timeZone != null)",
    "info" : "IfStatement[17379-17455]:IfStatement[17379-17455]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17401-17455]:Block[17401-17455]"
  }, {
    "left" : "key = new Pair(key, timeZone);",
    "right" : "key = new Pair(key, timeZone);",
    "info" : "ExpressionStatement[17415-17445]:ExpressionStatement[17415-17445]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[17464-17537]:IfStatement[17464-17537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17484-17537]:Block[17484-17537]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[17498-17527]:ExpressionStatement[17498-17527]"
  }, {
    "left" : "key = new Pair(key, locale);",
    "right" : "key = new Pair(key, locale);",
    "info" : "ExpressionStatement[17546-17574]:ExpressionStatement[17546-17574]"
  }, {
    "left" : "FastDateFormat format = cDateTimeInstanceCache.get(key);",
    "right" : "FastDateFormat format = cDateTimeInstanceCache.get(key);",
    "info" : "VariableDeclarationStatement[17584-17640]:VariableDeclarationStatement[17584-17640]"
  }, {
    "left" : "if (format == null)",
    "right" : "if (format == null)",
    "info" : "IfStatement[17649-18185]:IfStatement[17649-18185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17669-18185]:Block[17669-18185]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17683-18175]:TryStatement[17683-18175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17687-18031]:Block[17687-18031]"
  }, {
    "left" : "SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,\n                        locale);",
    "right" : "SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,\n                        locale);",
    "info" : "VariableDeclarationStatement[17705-17838]:VariableDeclarationStatement[17705-17838]"
  }, {
    "left" : "String pattern = formatter.toPattern();",
    "right" : "String pattern = formatter.toPattern();",
    "info" : "VariableDeclarationStatement[17855-17894]:VariableDeclarationStatement[17855-17894]"
  }, {
    "left" : "format = getInstance(pattern, timeZone, locale);",
    "right" : "format = getInstance(pattern, timeZone, locale);",
    "info" : "ExpressionStatement[17911-17959]:ExpressionStatement[17911-17959]"
  }, {
    "left" : "cDateTimeInstanceCache.put(key, format);",
    "right" : "cDateTimeInstanceCache.put(key, format);",
    "info" : "ExpressionStatement[17976-18016]:ExpressionStatement[17976-18016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18062-18175]:Block[18062-18175]"
  }, {
    "left" : "throw new IllegalArgumentException(\"No date time pattern for locale: \" + locale);",
    "right" : "throw new IllegalArgumentException(\"No date time pattern for locale: \" + locale);",
    "info" : "ThrowStatement[18080-18161]:ThrowStatement[18080-18161]"
  }, {
    "left" : "return format;",
    "right" : "return format;",
    "info" : "ReturnStatement[18194-18208]:ReturnStatement[18194-18208]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18678-18684]:Modifier[18678-18684]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[18685-18697]:Modifier[18685-18697]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[18698-18704]:SimpleType[18698-18704]"
  }, {
    "left" : "getTimeZoneDisplay",
    "right" : "getTimeZoneDisplay",
    "info" : "SimpleName[18705-18723]:SimpleName[18705-18723]"
  }, {
    "left" : "TimeZone tz",
    "right" : "TimeZone tz",
    "info" : "SingleVariableDeclaration[18724-18735]:SingleVariableDeclaration[18724-18735]"
  }, {
    "left" : "boolean daylight",
    "right" : "boolean daylight",
    "info" : "SingleVariableDeclaration[18737-18753]:SingleVariableDeclaration[18737-18753]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[18755-18764]:SingleVariableDeclaration[18755-18764]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[18766-18779]:SingleVariableDeclaration[18766-18779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18781-19156]:Block[18781-19156]"
  }, {
    "left" : "Object key = new TimeZoneDisplayKey(tz, daylight, style, locale);",
    "right" : "Object key = new TimeZoneDisplayKey(tz, daylight, style, locale);",
    "info" : "VariableDeclarationStatement[18791-18856]:VariableDeclarationStatement[18791-18856]"
  }, {
    "left" : "String value = cTimeZoneDisplayCache.get(key);",
    "right" : "String value = cTimeZoneDisplayCache.get(key);",
    "info" : "VariableDeclarationStatement[18865-18911]:VariableDeclarationStatement[18865-18911]"
  }, {
    "left" : "if (value == null)",
    "right" : "if (value == null)",
    "info" : "IfStatement[18920-19128]:IfStatement[18920-19128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18939-19128]:Block[18939-19128]"
  }, {
    "left" : "value = tz.getDisplayName(daylight, style, locale);",
    "right" : "value = tz.getDisplayName(daylight, style, locale);",
    "info" : "ExpressionStatement[19016-19067]:ExpressionStatement[19016-19067]"
  }, {
    "left" : "cTimeZoneDisplayCache.put(key, value);",
    "right" : "cTimeZoneDisplayCache.put(key, value);",
    "info" : "ExpressionStatement[19080-19118]:ExpressionStatement[19080-19118]"
  }, {
    "left" : "return value;",
    "right" : "return value;",
    "info" : "ReturnStatement[19137-19150]:ReturnStatement[19137-19150]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19261-19268]:Modifier[19261-19268]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19269-19275]:Modifier[19269-19275]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[19276-19288]:Modifier[19276-19288]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[19289-19295]:SimpleType[19289-19295]"
  }, {
    "left" : "getDefaultPattern",
    "right" : "getDefaultPattern",
    "info" : "SimpleName[19296-19313]:SimpleName[19296-19313]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19316-19470]:Block[19316-19470]"
  }, {
    "left" : "if (cDefaultPattern == null)",
    "right" : "if (cDefaultPattern == null)",
    "info" : "IfStatement[19326-19432]:IfStatement[19326-19432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19355-19432]:Block[19355-19432]"
  }, {
    "left" : "cDefaultPattern = new SimpleDateFormat().toPattern();",
    "right" : "cDefaultPattern = new SimpleDateFormat().toPattern();",
    "info" : "ExpressionStatement[19369-19422]:ExpressionStatement[19369-19422]"
  }, {
    "left" : "return cDefaultPattern;",
    "right" : "return cDefaultPattern;",
    "info" : "ReturnStatement[19441-19464]:ReturnStatement[19441-19464]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[20060-20069]:Modifier[20060-20069]"
  }, {
    "left" : "FastDateFormat",
    "right" : "FastDateFormat",
    "info" : "SimpleName[20070-20084]:SimpleName[20070-20084]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[20085-20099]:SingleVariableDeclaration[20085-20099]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[20101-20118]:SingleVariableDeclaration[20101-20118]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[20120-20133]:SingleVariableDeclaration[20120-20133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20135-20640]:Block[20135-20640]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[20145-20153]:SuperConstructorInvocation[20145-20153]"
  }, {
    "left" : "if (pattern == null)",
    "right" : "if (pattern == null)",
    "info" : "IfStatement[20162-20274]:IfStatement[20162-20274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20183-20274]:Block[20183-20274]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The pattern must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The pattern must not be null\");",
    "info" : "ThrowStatement[20197-20264]:ThrowStatement[20197-20264]"
  }, {
    "left" : "mPattern = pattern;",
    "right" : "mPattern = pattern;",
    "info" : "ExpressionStatement[20283-20302]:ExpressionStatement[20283-20302]"
  }, {
    "left" : "mTimeZoneForced = (timeZone != null);",
    "right" : "mTimeZoneForced = (timeZone != null);",
    "info" : "ExpressionStatement[20320-20357]:ExpressionStatement[20320-20357]"
  }, {
    "left" : "if (timeZone == null)",
    "right" : "if (timeZone == null)",
    "info" : "IfStatement[20366-20445]:IfStatement[20366-20445]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20388-20445]:Block[20388-20445]"
  }, {
    "left" : "timeZone = TimeZone.getDefault();",
    "right" : "timeZone = TimeZone.getDefault();",
    "info" : "ExpressionStatement[20402-20435]:ExpressionStatement[20402-20435]"
  }, {
    "left" : "mTimeZone = timeZone;",
    "right" : "mTimeZone = timeZone;",
    "info" : "ExpressionStatement[20454-20475]:ExpressionStatement[20454-20475]"
  }, {
    "left" : "mLocaleForced = (locale != null);",
    "right" : "mLocaleForced = (locale != null);",
    "info" : "ExpressionStatement[20493-20526]:ExpressionStatement[20493-20526]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[20535-20608]:IfStatement[20535-20608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20555-20608]:Block[20555-20608]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[20569-20598]:ExpressionStatement[20569-20598]"
  }, {
    "left" : "mLocale = locale;",
    "right" : "mLocale = locale;",
    "info" : "ExpressionStatement[20617-20634]:ExpressionStatement[20617-20634]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[20716-20725]:Modifier[20716-20725]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20726-20730]:PrimitiveType[20726-20730]"
  }, {
    "left" : "init",
    "right" : "init",
    "info" : "SimpleName[20731-20735]:SimpleName[20731-20735]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20738-21018]:Block[20738-21018]"
  }, {
    "left" : "List<Rule> rulesList = parsePattern();",
    "right" : "List<Rule> rulesList = parsePattern();",
    "info" : "VariableDeclarationStatement[20748-20786]:VariableDeclarationStatement[20748-20786]"
  }, {
    "left" : "mRules = rulesList.toArray(new Rule[rulesList.size()]);",
    "right" : "mRules = rulesList.toArray(new Rule[rulesList.size()]);",
    "info" : "ExpressionStatement[20795-20850]:ExpressionStatement[20795-20850]"
  }, {
    "left" : "int len = 0;",
    "right" : "int len = 0;",
    "info" : "VariableDeclarationStatement[20860-20872]:VariableDeclarationStatement[20860-20872]"
  }, {
    "left" : "for (int i=mRules.length; --i >= 0)",
    "right" : "for (int i=mRules.length; --i >= 0)",
    "info" : "ForStatement[20881-20977]:ForStatement[20881-20977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20919-20977]:Block[20919-20977]"
  }, {
    "left" : "len += mRules[i].estimateLength();",
    "right" : "len += mRules[i].estimateLength();",
    "info" : "ExpressionStatement[20933-20967]:ExpressionStatement[20933-20967]"
  }, {
    "left" : "mMaxLengthEstimate = len;",
    "right" : "mMaxLengthEstimate = len;",
    "info" : "ExpressionStatement[20987-21012]:ExpressionStatement[20987-21012]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[21319-21328]:Modifier[21319-21328]"
  }, {
    "left" : "List<Rule>",
    "right" : "List<Rule>",
    "info" : "ParameterizedType[21329-21339]:ParameterizedType[21329-21339]"
  }, {
    "left" : "parsePattern",
    "right" : "parsePattern",
    "info" : "SimpleName[21340-21352]:SimpleName[21340-21352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21355-26329]:Block[21355-26329]"
  }, {
    "left" : "DateFormatSymbols symbols = new DateFormatSymbols(mLocale);",
    "right" : "DateFormatSymbols symbols = new DateFormatSymbols(mLocale);",
    "info" : "VariableDeclarationStatement[21365-21424]:VariableDeclarationStatement[21365-21424]"
  }, {
    "left" : "List<Rule> rules = new ArrayList<Rule>();",
    "right" : "List<Rule> rules = new ArrayList<Rule>();",
    "info" : "VariableDeclarationStatement[21433-21474]:VariableDeclarationStatement[21433-21474]"
  }, {
    "left" : "String[] ERAs = symbols.getEras();",
    "right" : "String[] ERAs = symbols.getEras();",
    "info" : "VariableDeclarationStatement[21484-21518]:VariableDeclarationStatement[21484-21518]"
  }, {
    "left" : "String[] months = symbols.getMonths();",
    "right" : "String[] months = symbols.getMonths();",
    "info" : "VariableDeclarationStatement[21527-21565]:VariableDeclarationStatement[21527-21565]"
  }, {
    "left" : "String[] shortMonths = symbols.getShortMonths();",
    "right" : "String[] shortMonths = symbols.getShortMonths();",
    "info" : "VariableDeclarationStatement[21574-21622]:VariableDeclarationStatement[21574-21622]"
  }, {
    "left" : "String[] weekdays = symbols.getWeekdays();",
    "right" : "String[] weekdays = symbols.getWeekdays();",
    "info" : "VariableDeclarationStatement[21631-21673]:VariableDeclarationStatement[21631-21673]"
  }, {
    "left" : "String[] shortWeekdays = symbols.getShortWeekdays();",
    "right" : "String[] shortWeekdays = symbols.getShortWeekdays();",
    "info" : "VariableDeclarationStatement[21682-21734]:VariableDeclarationStatement[21682-21734]"
  }, {
    "left" : "String[] AmPmStrings = symbols.getAmPmStrings();",
    "right" : "String[] AmPmStrings = symbols.getAmPmStrings();",
    "info" : "VariableDeclarationStatement[21743-21791]:VariableDeclarationStatement[21743-21791]"
  }, {
    "left" : "int length = mPattern.length();",
    "right" : "int length = mPattern.length();",
    "info" : "VariableDeclarationStatement[21801-21832]:VariableDeclarationStatement[21801-21832]"
  }, {
    "left" : "int[] indexRef = new int[1];",
    "right" : "int[] indexRef = new int[1];",
    "info" : "VariableDeclarationStatement[21841-21869]:VariableDeclarationStatement[21841-21869]"
  }, {
    "left" : "for (int i = 0; i < length; i++)",
    "right" : "for (int i = 0; i < length; i++)",
    "info" : "ForStatement[21879-26300]:ForStatement[21879-26300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21912-26300]:Block[21912-26300]"
  }, {
    "left" : "indexRef[0] = i;",
    "right" : "indexRef[0] = i;",
    "info" : "ExpressionStatement[21926-21942]:ExpressionStatement[21926-21942]"
  }, {
    "left" : "String token = parseToken(mPattern, indexRef);",
    "right" : "String token = parseToken(mPattern, indexRef);",
    "info" : "VariableDeclarationStatement[21955-22001]:VariableDeclarationStatement[21955-22001]"
  }, {
    "left" : "i = indexRef[0];",
    "right" : "i = indexRef[0];",
    "info" : "ExpressionStatement[22014-22030]:ExpressionStatement[22014-22030]"
  }, {
    "left" : "int tokenLen = token.length();",
    "right" : "int tokenLen = token.length();",
    "info" : "VariableDeclarationStatement[22044-22074]:VariableDeclarationStatement[22044-22074]"
  }, {
    "left" : "if (tokenLen == 0)",
    "right" : "if (tokenLen == 0)",
    "info" : "IfStatement[22087-22144]:IfStatement[22087-22144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22106-22144]:Block[22106-22144]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22124-22130]:BreakStatement[22124-22130]"
  }, {
    "left" : "Rule rule;",
    "right" : "Rule rule;",
    "info" : "VariableDeclarationStatement[22158-22168]:VariableDeclarationStatement[22158-22168]"
  }, {
    "left" : "char c = token.charAt(0);",
    "right" : "char c = token.charAt(0);",
    "info" : "VariableDeclarationStatement[22181-22206]:VariableDeclarationStatement[22181-22206]"
  }, {
    "left" : "switch (c) {\n            case 'G': // era designator (text)\n                rule = new TextField(Calendar.ERA, ERAs);\n                break;\n            case 'y': // year (number)\n                if (tokenLen >= 4) {\n                    rule = selectNumberRule(Calendar.YEAR, tokenLen);\n                } else {\n                    rule = TwoDigitYearField.INSTANCE;\n                }\n                break;\n            case 'M': // month in year (text and number)\n                if (tokenLen >= 4) {\n                    rule = new TextField(Calendar.MONTH, months);\n                } else if (tokenLen == 3) {\n                    rule = new TextField(Calendar.MONTH, shortMonths);\n                } else if (tokenLen == 2) {\n                    rule = TwoDigitMonthField.INSTANCE;\n                } else {\n                    rule = UnpaddedMonthField.INSTANCE;\n                }\n                break;\n            case 'd': // day in month (number)\n                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n                break;\n            case 'h': // hour in am/pm (number, 1..12)\n                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));\n                break;\n            case 'H': // hour in day (number, 0..23)\n                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);\n                break;\n            case 'm': // minute in hour (number)\n                rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n                break;\n            case 's': // second in minute (number)\n                rule = selectNumberRule(Calendar.SECOND, tokenLen);\n                break;\n            case 'S': // millisecond (number)\n                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);\n                break;\n            case 'E': // day in week (text)\n                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n                break;\n            case 'D': // day in year (number)\n                rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);\n                break;\n            case 'F': // day of week in month (number)\n                rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);\n                break;\n            case 'w': // week in year (number)\n                rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);\n                break;\n            case 'W': // week in month (number)\n                rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);\n                break;\n            case 'a': // am/pm marker (text)\n                rule = new TextField(Calendar.AM_PM, AmPmStrings);\n                break;\n            case 'k': // hour in day (1..24)\n                rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));\n                break;\n            case 'K': // hour in am/pm (0..11)\n                rule = selectNumberRule(Calendar.HOUR, tokenLen);\n                break;\n            case 'z': // time zone (text)\n                if (tokenLen >= 4) {\n                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.LONG);\n                } else {\n                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);\n                }\n                break;\n            case 'Z': // time zone (value)\n                if (tokenLen == 1) {\n                    rule = TimeZoneNumberRule.INSTANCE_NO_COLON;\n                } else {\n                    rule = TimeZoneNumberRule.INSTANCE_COLON;\n                }\n                break;\n            case '\\'': // literal text\n                String sub = token.substring(1);\n                if (sub.length() == 1) {\n                    rule = new CharacterLiteral(sub.charAt(0));\n                } else {\n                    rule = new StringLiteral(sub);\n                }\n                break;\n            default:\n                throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n            }",
    "right" : "switch (c) {\n            case 'G': // era designator (text)\n                rule = new TextField(Calendar.ERA, ERAs);\n                break;\n            case 'y': // year (number)\n                if (tokenLen >= 4) {\n                    rule = selectNumberRule(Calendar.YEAR, tokenLen);\n                } else {\n                    rule = TwoDigitYearField.INSTANCE;\n                }\n                break;\n            case 'M': // month in year (text and number)\n                if (tokenLen >= 4) {\n                    rule = new TextField(Calendar.MONTH, months);\n                } else if (tokenLen == 3) {\n                    rule = new TextField(Calendar.MONTH, shortMonths);\n                } else if (tokenLen == 2) {\n                    rule = TwoDigitMonthField.INSTANCE;\n                } else {\n                    rule = UnpaddedMonthField.INSTANCE;\n                }\n                break;\n            case 'd': // day in month (number)\n                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);\n                break;\n            case 'h': // hour in am/pm (number, 1..12)\n                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));\n                break;\n            case 'H': // hour in day (number, 0..23)\n                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);\n                break;\n            case 'm': // minute in hour (number)\n                rule = selectNumberRule(Calendar.MINUTE, tokenLen);\n                break;\n            case 's': // second in minute (number)\n                rule = selectNumberRule(Calendar.SECOND, tokenLen);\n                break;\n            case 'S': // millisecond (number)\n                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);\n                break;\n            case 'E': // day in week (text)\n                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);\n                break;\n            case 'D': // day in year (number)\n                rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);\n                break;\n            case 'F': // day of week in month (number)\n                rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);\n                break;\n            case 'w': // week in year (number)\n                rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);\n                break;\n            case 'W': // week in month (number)\n                rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);\n                break;\n            case 'a': // am/pm marker (text)\n                rule = new TextField(Calendar.AM_PM, AmPmStrings);\n                break;\n            case 'k': // hour in day (1..24)\n                rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));\n                break;\n            case 'K': // hour in am/pm (0..11)\n                rule = selectNumberRule(Calendar.HOUR, tokenLen);\n                break;\n            case 'z': // time zone (text)\n                if (tokenLen >= 4) {\n                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.LONG);\n                } else {\n                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);\n                }\n                break;\n            case 'Z': // time zone (value)\n                if (tokenLen == 1) {\n                    rule = TimeZoneNumberRule.INSTANCE_NO_COLON;\n                } else {\n                    rule = TimeZoneNumberRule.INSTANCE_COLON;\n                }\n                break;\n            case '\\'': // literal text\n                String sub = token.substring(1);\n                if (sub.length() == 1) {\n                    rule = new CharacterLiteral(sub.charAt(0));\n                } else {\n                    rule = new StringLiteral(sub);\n                }\n                break;\n            default:\n                throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n            }",
    "info" : "SwitchStatement[22220-26260]:SwitchStatement[22220-26260]"
  }, {
    "left" : "case 'G':",
    "right" : "case 'G':",
    "info" : "SwitchCase[22245-22254]:SwitchCase[22245-22254]"
  }, {
    "left" : "rule = new TextField(Calendar.ERA, ERAs);",
    "right" : "rule = new TextField(Calendar.ERA, ERAs);",
    "info" : "ExpressionStatement[22296-22337]:ExpressionStatement[22296-22337]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22354-22360]:BreakStatement[22354-22360]"
  }, {
    "left" : "case 'y':",
    "right" : "case 'y':",
    "info" : "SwitchCase[22373-22382]:SwitchCase[22373-22382]"
  }, {
    "left" : "if (tokenLen >= 4)",
    "right" : "if (tokenLen >= 4)",
    "info" : "IfStatement[22416-22604]:IfStatement[22416-22604]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22435-22524]:Block[22435-22524]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.YEAR, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.YEAR, tokenLen);",
    "info" : "ExpressionStatement[22457-22506]:ExpressionStatement[22457-22506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22530-22604]:Block[22530-22604]"
  }, {
    "left" : "rule = TwoDigitYearField.INSTANCE;",
    "right" : "rule = TwoDigitYearField.INSTANCE;",
    "info" : "ExpressionStatement[22552-22586]:ExpressionStatement[22552-22586]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22621-22627]:BreakStatement[22621-22627]"
  }, {
    "left" : "case 'M':",
    "right" : "case 'M':",
    "info" : "SwitchCase[22640-22649]:SwitchCase[22640-22649]"
  }, {
    "left" : "if (tokenLen >= 4)",
    "right" : "if (tokenLen >= 4)",
    "info" : "IfStatement[22701-23101]:IfStatement[22701-23101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22720-22805]:Block[22720-22805]"
  }, {
    "left" : "rule = new TextField(Calendar.MONTH, months);",
    "right" : "rule = new TextField(Calendar.MONTH, months);",
    "info" : "ExpressionStatement[22742-22787]:ExpressionStatement[22742-22787]"
  }, {
    "left" : "if (tokenLen == 3)",
    "right" : "if (tokenLen == 3)",
    "info" : "IfStatement[22811-23101]:IfStatement[22811-23101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22830-22920]:Block[22830-22920]"
  }, {
    "left" : "rule = new TextField(Calendar.MONTH, shortMonths);",
    "right" : "rule = new TextField(Calendar.MONTH, shortMonths);",
    "info" : "ExpressionStatement[22852-22902]:ExpressionStatement[22852-22902]"
  }, {
    "left" : "if (tokenLen == 2)",
    "right" : "if (tokenLen == 2)",
    "info" : "IfStatement[22926-23101]:IfStatement[22926-23101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22945-23020]:Block[22945-23020]"
  }, {
    "left" : "rule = TwoDigitMonthField.INSTANCE;",
    "right" : "rule = TwoDigitMonthField.INSTANCE;",
    "info" : "ExpressionStatement[22967-23002]:ExpressionStatement[22967-23002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23026-23101]:Block[23026-23101]"
  }, {
    "left" : "rule = UnpaddedMonthField.INSTANCE;",
    "right" : "rule = UnpaddedMonthField.INSTANCE;",
    "info" : "ExpressionStatement[23048-23083]:ExpressionStatement[23048-23083]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23118-23124]:BreakStatement[23118-23124]"
  }, {
    "left" : "case 'd':",
    "right" : "case 'd':",
    "info" : "SwitchCase[23137-23146]:SwitchCase[23137-23146]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",
    "info" : "ExpressionStatement[23188-23245]:ExpressionStatement[23188-23245]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23262-23268]:BreakStatement[23262-23268]"
  }, {
    "left" : "case 'h':",
    "right" : "case 'h':",
    "info" : "SwitchCase[23281-23290]:SwitchCase[23281-23290]"
  }, {
    "left" : "rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",
    "right" : "rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",
    "info" : "ExpressionStatement[23340-23410]:ExpressionStatement[23340-23410]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23427-23433]:BreakStatement[23427-23433]"
  }, {
    "left" : "case 'H':",
    "right" : "case 'H':",
    "info" : "SwitchCase[23446-23455]:SwitchCase[23446-23455]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",
    "info" : "ExpressionStatement[23503-23559]:ExpressionStatement[23503-23559]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23576-23582]:BreakStatement[23576-23582]"
  }, {
    "left" : "case 'm':",
    "right" : "case 'm':",
    "info" : "SwitchCase[23595-23604]:SwitchCase[23595-23604]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.MINUTE, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.MINUTE, tokenLen);",
    "info" : "ExpressionStatement[23648-23699]:ExpressionStatement[23648-23699]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23716-23722]:BreakStatement[23716-23722]"
  }, {
    "left" : "case 's':",
    "right" : "case 's':",
    "info" : "SwitchCase[23735-23744]:SwitchCase[23735-23744]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.SECOND, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.SECOND, tokenLen);",
    "info" : "ExpressionStatement[23790-23841]:ExpressionStatement[23790-23841]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23858-23864]:BreakStatement[23858-23864]"
  }, {
    "left" : "case 'S':",
    "right" : "case 'S':",
    "info" : "SwitchCase[23877-23886]:SwitchCase[23877-23886]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);",
    "info" : "ExpressionStatement[23927-23983]:ExpressionStatement[23927-23983]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24000-24006]:BreakStatement[24000-24006]"
  }, {
    "left" : "case 'E':",
    "right" : "case 'E':",
    "info" : "SwitchCase[24019-24028]:SwitchCase[24019-24028]"
  }, {
    "left" : "rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",
    "right" : "rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",
    "info" : "ExpressionStatement[24067-24151]:ExpressionStatement[24067-24151]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24168-24174]:BreakStatement[24168-24174]"
  }, {
    "left" : "case 'D':",
    "right" : "case 'D':",
    "info" : "SwitchCase[24187-24196]:SwitchCase[24187-24196]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);",
    "info" : "ExpressionStatement[24237-24293]:ExpressionStatement[24237-24293]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24310-24316]:BreakStatement[24310-24316]"
  }, {
    "left" : "case 'F':",
    "right" : "case 'F':",
    "info" : "SwitchCase[24329-24338]:SwitchCase[24329-24338]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);",
    "info" : "ExpressionStatement[24388-24453]:ExpressionStatement[24388-24453]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24470-24476]:BreakStatement[24470-24476]"
  }, {
    "left" : "case 'w':",
    "right" : "case 'w':",
    "info" : "SwitchCase[24489-24498]:SwitchCase[24489-24498]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);",
    "info" : "ExpressionStatement[24540-24597]:ExpressionStatement[24540-24597]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24614-24620]:BreakStatement[24614-24620]"
  }, {
    "left" : "case 'W':",
    "right" : "case 'W':",
    "info" : "SwitchCase[24633-24642]:SwitchCase[24633-24642]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);",
    "info" : "ExpressionStatement[24685-24743]:ExpressionStatement[24685-24743]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24760-24766]:BreakStatement[24760-24766]"
  }, {
    "left" : "case 'a':",
    "right" : "case 'a':",
    "info" : "SwitchCase[24779-24788]:SwitchCase[24779-24788]"
  }, {
    "left" : "rule = new TextField(Calendar.AM_PM, AmPmStrings);",
    "right" : "rule = new TextField(Calendar.AM_PM, AmPmStrings);",
    "info" : "ExpressionStatement[24828-24878]:ExpressionStatement[24828-24878]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24895-24901]:BreakStatement[24895-24901]"
  }, {
    "left" : "case 'k':",
    "right" : "case 'k':",
    "info" : "SwitchCase[24914-24923]:SwitchCase[24914-24923]"
  }, {
    "left" : "rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));",
    "right" : "rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));",
    "info" : "ExpressionStatement[24963-25044]:ExpressionStatement[24963-25044]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25061-25067]:BreakStatement[25061-25067]"
  }, {
    "left" : "case 'K':",
    "right" : "case 'K':",
    "info" : "SwitchCase[25080-25089]:SwitchCase[25080-25089]"
  }, {
    "left" : "rule = selectNumberRule(Calendar.HOUR, tokenLen);",
    "right" : "rule = selectNumberRule(Calendar.HOUR, tokenLen);",
    "info" : "ExpressionStatement[25131-25180]:ExpressionStatement[25131-25180]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25197-25203]:BreakStatement[25197-25203]"
  }, {
    "left" : "case 'z':",
    "right" : "case 'z':",
    "info" : "SwitchCase[25216-25225]:SwitchCase[25216-25225]"
  }, {
    "left" : "if (tokenLen >= 4)",
    "right" : "if (tokenLen >= 4)",
    "info" : "IfStatement[25262-25528]:IfStatement[25262-25528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25281-25401]:Block[25281-25401]"
  }, {
    "left" : "rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.LONG);",
    "right" : "rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.LONG);",
    "info" : "ExpressionStatement[25303-25383]:ExpressionStatement[25303-25383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25407-25528]:Block[25407-25528]"
  }, {
    "left" : "rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",
    "right" : "rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",
    "info" : "ExpressionStatement[25429-25510]:ExpressionStatement[25429-25510]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25545-25551]:BreakStatement[25545-25551]"
  }, {
    "left" : "case 'Z':",
    "right" : "case 'Z':",
    "info" : "SwitchCase[25564-25573]:SwitchCase[25564-25573]"
  }, {
    "left" : "if (tokenLen == 1)",
    "right" : "if (tokenLen == 1)",
    "info" : "IfStatement[25611-25801]:IfStatement[25611-25801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25630-25714]:Block[25630-25714]"
  }, {
    "left" : "rule = TimeZoneNumberRule.INSTANCE_NO_COLON;",
    "right" : "rule = TimeZoneNumberRule.INSTANCE_NO_COLON;",
    "info" : "ExpressionStatement[25652-25696]:ExpressionStatement[25652-25696]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25720-25801]:Block[25720-25801]"
  }, {
    "left" : "rule = TimeZoneNumberRule.INSTANCE_COLON;",
    "right" : "rule = TimeZoneNumberRule.INSTANCE_COLON;",
    "info" : "ExpressionStatement[25742-25783]:ExpressionStatement[25742-25783]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25818-25824]:BreakStatement[25818-25824]"
  }, {
    "left" : "case '\\'':",
    "right" : "case '\\'':",
    "info" : "SwitchCase[25837-25847]:SwitchCase[25837-25847]"
  }, {
    "left" : "String sub = token.substring(1);",
    "right" : "String sub = token.substring(1);",
    "info" : "VariableDeclarationStatement[25880-25912]:VariableDeclarationStatement[25880-25912]"
  }, {
    "left" : "if (sub.length() == 1)",
    "right" : "if (sub.length() == 1)",
    "info" : "IfStatement[25929-26111]:IfStatement[25929-26111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25952-26035]:Block[25952-26035]"
  }, {
    "left" : "rule = new CharacterLiteral(sub.charAt(0));",
    "right" : "rule = new CharacterLiteral(sub.charAt(0));",
    "info" : "ExpressionStatement[25974-26017]:ExpressionStatement[25974-26017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26041-26111]:Block[26041-26111]"
  }, {
    "left" : "rule = new StringLiteral(sub);",
    "right" : "rule = new StringLiteral(sub);",
    "info" : "ExpressionStatement[26063-26093]:ExpressionStatement[26063-26093]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[26128-26134]:BreakStatement[26128-26134]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[26147-26155]:SwitchCase[26147-26155]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Illegal pattern component: \" + token);",
    "right" : "throw new IllegalArgumentException(\"Illegal pattern component: \" + token);",
    "info" : "ThrowStatement[26172-26246]:ThrowStatement[26172-26246]"
  }, {
    "left" : "rules.add(rule);",
    "right" : "rules.add(rule);",
    "info" : "ExpressionStatement[26274-26290]:ExpressionStatement[26274-26290]"
  }, {
    "left" : "return rules;",
    "right" : "return rules;",
    "info" : "ReturnStatement[26310-26323]:ReturnStatement[26310-26323]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[26509-26518]:Modifier[26509-26518]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26519-26525]:SimpleType[26519-26525]"
  }, {
    "left" : "parseToken",
    "right" : "parseToken",
    "info" : "SimpleName[26526-26536]:SimpleName[26526-26536]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[26537-26551]:SingleVariableDeclaration[26537-26551]"
  }, {
    "left" : "int[] indexRef",
    "right" : "int[] indexRef",
    "info" : "SingleVariableDeclaration[26553-26567]:SingleVariableDeclaration[26553-26567]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26569-28051]:Block[26569-28051]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder();",
    "right" : "StringBuilder buf = new StringBuilder();",
    "info" : "VariableDeclarationStatement[26579-26619]:VariableDeclarationStatement[26579-26619]"
  }, {
    "left" : "int i = indexRef[0];",
    "right" : "int i = indexRef[0];",
    "info" : "VariableDeclarationStatement[26629-26649]:VariableDeclarationStatement[26629-26649]"
  }, {
    "left" : "int length = pattern.length();",
    "right" : "int length = pattern.length();",
    "info" : "VariableDeclarationStatement[26658-26688]:VariableDeclarationStatement[26658-26688]"
  }, {
    "left" : "char c = pattern.charAt(i);",
    "right" : "char c = pattern.charAt(i);",
    "info" : "VariableDeclarationStatement[26698-26725]:VariableDeclarationStatement[26698-26725]"
  }, {
    "left" : "if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')",
    "right" : "if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')",
    "info" : "IfStatement[26734-27988]:IfStatement[26734-27988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26784-27184]:Block[26784-27184]"
  }, {
    "left" : "buf.append(c);",
    "right" : "buf.append(c);",
    "info" : "ExpressionStatement[26894-26908]:ExpressionStatement[26894-26908]"
  }, {
    "left" : "while (i + 1 < length)",
    "right" : "while (i + 1 < length)",
    "info" : "WhileStatement[26922-27174]:WhileStatement[26922-27174]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26945-27174]:Block[26945-27174]"
  }, {
    "left" : "char peek = pattern.charAt(i + 1);",
    "right" : "char peek = pattern.charAt(i + 1);",
    "info" : "VariableDeclarationStatement[26963-26997]:VariableDeclarationStatement[26963-26997]"
  }, {
    "left" : "if (peek == c)",
    "right" : "if (peek == c)",
    "info" : "IfStatement[27014-27160]:IfStatement[27014-27160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27029-27108]:Block[27029-27108]"
  }, {
    "left" : "buf.append(c);",
    "right" : "buf.append(c);",
    "info" : "ExpressionStatement[27051-27065]:ExpressionStatement[27051-27065]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[27086-27090]:ExpressionStatement[27086-27090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27114-27160]:Block[27114-27160]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[27136-27142]:BreakStatement[27136-27142]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27190-27988]:Block[27190-27988]"
  }, {
    "left" : "buf.append('\\'');",
    "right" : "buf.append('\\'');",
    "info" : "ExpressionStatement[27253-27270]:ExpressionStatement[27253-27270]"
  }, {
    "left" : "boolean inLiteral = false;",
    "right" : "boolean inLiteral = false;",
    "info" : "VariableDeclarationStatement[27284-27310]:VariableDeclarationStatement[27284-27310]"
  }, {
    "left" : "for (; i < length; i++)",
    "right" : "for (; i < length; i++)",
    "info" : "ForStatement[27324-27978]:ForStatement[27324-27978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27348-27978]:Block[27348-27978]"
  }, {
    "left" : "c = pattern.charAt(i);",
    "right" : "c = pattern.charAt(i);",
    "info" : "ExpressionStatement[27366-27388]:ExpressionStatement[27366-27388]"
  }, {
    "left" : "if (c == '\\'')",
    "right" : "if (c == '\\'')",
    "info" : "IfStatement[27406-27964]:IfStatement[27406-27964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27421-27736]:Block[27421-27736]"
  }, {
    "left" : "if (i + 1 < length && pattern.charAt(i + 1) == '\\'')",
    "right" : "if (i + 1 < length && pattern.charAt(i + 1) == '\\'')",
    "info" : "IfStatement[27443-27718]:IfStatement[27443-27718]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27496-27641]:Block[27496-27641]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[27576-27580]:ExpressionStatement[27576-27580]"
  }, {
    "left" : "buf.append(c);",
    "right" : "buf.append(c);",
    "info" : "ExpressionStatement[27605-27619]:ExpressionStatement[27605-27619]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27647-27718]:Block[27647-27718]"
  }, {
    "left" : "inLiteral = !inLiteral;",
    "right" : "inLiteral = !inLiteral;",
    "info" : "ExpressionStatement[27673-27696]:ExpressionStatement[27673-27696]"
  }, {
    "left" : "if (!inLiteral &&\n                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z'))",
    "right" : "if (!inLiteral &&\n                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z'))",
    "info" : "IfStatement[27742-27964]:IfStatement[27742-27964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27833-27904]:Block[27833-27904]"
  }, {
    "left" : "i--;",
    "right" : "i--;",
    "info" : "ExpressionStatement[27855-27859]:ExpressionStatement[27855-27859]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[27880-27886]:BreakStatement[27880-27886]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27910-27964]:Block[27910-27964]"
  }, {
    "left" : "buf.append(c);",
    "right" : "buf.append(c);",
    "info" : "ExpressionStatement[27932-27946]:ExpressionStatement[27932-27946]"
  }, {
    "left" : "indexRef[0] = i;",
    "right" : "indexRef[0] = i;",
    "info" : "ExpressionStatement[27998-28014]:ExpressionStatement[27998-28014]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[28023-28045]:ReturnStatement[28023-28045]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[28290-28299]:Modifier[28290-28299]"
  }, {
    "left" : "NumberRule",
    "right" : "NumberRule",
    "info" : "SimpleType[28300-28310]:SimpleType[28300-28310]"
  }, {
    "left" : "selectNumberRule",
    "right" : "selectNumberRule",
    "info" : "SimpleName[28311-28327]:SimpleName[28311-28327]"
  }, {
    "left" : "int field",
    "right" : "int field",
    "info" : "SingleVariableDeclaration[28328-28337]:SingleVariableDeclaration[28328-28337]"
  }, {
    "left" : "int padding",
    "right" : "int padding",
    "info" : "SingleVariableDeclaration[28339-28350]:SingleVariableDeclaration[28339-28350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28352-28605]:Block[28352-28605]"
  }, {
    "left" : "switch (padding) {\n        case 1:\n            return new UnpaddedNumberField(field);\n        case 2:\n            return new TwoDigitNumberField(field);\n        default:\n            return new PaddedNumberField(field, padding);\n        }",
    "right" : "switch (padding) {\n        case 1:\n            return new UnpaddedNumberField(field);\n        case 2:\n            return new TwoDigitNumberField(field);\n        default:\n            return new PaddedNumberField(field, padding);\n        }",
    "info" : "SwitchStatement[28362-28599]:SwitchStatement[28362-28599]"
  }, {
    "left" : "case 1:",
    "right" : "case 1:",
    "info" : "SwitchCase[28389-28396]:SwitchCase[28389-28396]"
  }, {
    "left" : "return new UnpaddedNumberField(field);",
    "right" : "return new UnpaddedNumberField(field);",
    "info" : "ReturnStatement[28409-28447]:ReturnStatement[28409-28447]"
  }, {
    "left" : "case 2:",
    "right" : "case 2:",
    "info" : "SwitchCase[28456-28463]:SwitchCase[28456-28463]"
  }, {
    "left" : "return new TwoDigitNumberField(field);",
    "right" : "return new TwoDigitNumberField(field);",
    "info" : "ReturnStatement[28476-28514]:ReturnStatement[28476-28514]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[28523-28531]:SwitchCase[28523-28531]"
  }, {
    "left" : "return new PaddedNumberField(field, padding);",
    "right" : "return new PaddedNumberField(field, padding);",
    "info" : "ReturnStatement[28544-28589]:ReturnStatement[28544-28589]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[29019-29028]:MarkerAnnotation[29019-29028]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29033-29039]:Modifier[29033-29039]"
  }, {
    "left" : "StringBuffer",
    "right" : "StringBuffer",
    "info" : "SimpleType[29040-29052]:SimpleType[29040-29052]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[29053-29059]:SimpleName[29053-29059]"
  }, {
    "left" : "Object obj",
    "right" : "Object obj",
    "info" : "SingleVariableDeclaration[29060-29070]:SingleVariableDeclaration[29060-29070]"
  }, {
    "left" : "StringBuffer toAppendTo",
    "right" : "StringBuffer toAppendTo",
    "info" : "SingleVariableDeclaration[29072-29095]:SingleVariableDeclaration[29072-29095]"
  }, {
    "left" : "FieldPosition pos",
    "right" : "FieldPosition pos",
    "info" : "SingleVariableDeclaration[29097-29114]:SingleVariableDeclaration[29097-29114]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29116-29581]:Block[29116-29581]"
  }, {
    "left" : "if (obj instanceof Date)",
    "right" : "if (obj instanceof Date)",
    "info" : "IfStatement[29126-29575]:IfStatement[29126-29575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29151-29213]:Block[29151-29213]"
  }, {
    "left" : "return format((Date) obj, toAppendTo);",
    "right" : "return format((Date) obj, toAppendTo);",
    "info" : "ReturnStatement[29165-29203]:ReturnStatement[29165-29203]"
  }, {
    "left" : "if (obj instanceof Calendar)",
    "right" : "if (obj instanceof Calendar)",
    "info" : "IfStatement[29219-29575]:IfStatement[29219-29575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29248-29314]:Block[29248-29314]"
  }, {
    "left" : "return format((Calendar) obj, toAppendTo);",
    "right" : "return format((Calendar) obj, toAppendTo);",
    "info" : "ReturnStatement[29262-29304]:ReturnStatement[29262-29304]"
  }, {
    "left" : "if (obj instanceof Long)",
    "right" : "if (obj instanceof Long)",
    "info" : "IfStatement[29320-29575]:IfStatement[29320-29575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29345-29421]:Block[29345-29421]"
  }, {
    "left" : "return format(((Long) obj).longValue(), toAppendTo);",
    "right" : "return format(((Long) obj).longValue(), toAppendTo);",
    "info" : "ReturnStatement[29359-29411]:ReturnStatement[29359-29411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29427-29575]:Block[29427-29575]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Unknown class: \" +\n                (obj == null ? \"<null>\" : obj.getClass().getName()));",
    "right" : "throw new IllegalArgumentException(\"Unknown class: \" +\n                (obj == null ? \"<null>\" : obj.getClass().getName()));",
    "info" : "ThrowStatement[29441-29565]:ThrowStatement[29441-29565]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29780-29786]:Modifier[29780-29786]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[29787-29793]:SimpleType[29787-29793]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[29794-29800]:SimpleName[29794-29800]"
  }, {
    "left" : "long millis",
    "right" : "long millis",
    "info" : "SingleVariableDeclaration[29801-29812]:SingleVariableDeclaration[29801-29812]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29814-29862]:Block[29814-29862]"
  }, {
    "left" : "return format(new Date(millis));",
    "right" : "return format(new Date(millis));",
    "info" : "ReturnStatement[29824-29856]:ReturnStatement[29824-29856]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30017-30023]:Modifier[30017-30023]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[30024-30030]:SimpleType[30024-30030]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[30031-30037]:SimpleName[30031-30037]"
  }, {
    "left" : "Date date",
    "right" : "Date date",
    "info" : "SingleVariableDeclaration[30038-30047]:SingleVariableDeclaration[30038-30047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30049-30215]:Block[30049-30215]"
  }, {
    "left" : "Calendar c = new GregorianCalendar(mTimeZone);",
    "right" : "Calendar c = new GregorianCalendar(mTimeZone);",
    "info" : "VariableDeclarationStatement[30059-30105]:VariableDeclarationStatement[30059-30105]"
  }, {
    "left" : "c.setTime(date);",
    "right" : "c.setTime(date);",
    "info" : "ExpressionStatement[30114-30130]:ExpressionStatement[30114-30130]"
  }, {
    "left" : "return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",
    "right" : "return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",
    "info" : "ReturnStatement[30139-30209]:ReturnStatement[30139-30209]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30382-30388]:Modifier[30382-30388]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[30389-30395]:SimpleType[30389-30395]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[30396-30402]:SimpleName[30396-30402]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[30403-30420]:SingleVariableDeclaration[30403-30420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30422-30511]:Block[30422-30511]"
  }, {
    "left" : "return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",
    "right" : "return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",
    "info" : "ReturnStatement[30432-30505]:ReturnStatement[30432-30505]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30812-30818]:Modifier[30812-30818]"
  }, {
    "left" : "StringBuffer",
    "right" : "StringBuffer",
    "info" : "SimpleType[30819-30831]:SimpleType[30819-30831]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[30832-30838]:SimpleName[30832-30838]"
  }, {
    "left" : "long millis",
    "right" : "long millis",
    "info" : "SingleVariableDeclaration[30839-30850]:SingleVariableDeclaration[30839-30850]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[30852-30868]:SingleVariableDeclaration[30852-30868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30870-30923]:Block[30870-30923]"
  }, {
    "left" : "return format(new Date(millis), buf);",
    "right" : "return format(new Date(millis), buf);",
    "info" : "ReturnStatement[30880-30917]:ReturnStatement[30880-30917]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31181-31187]:Modifier[31181-31187]"
  }, {
    "left" : "StringBuffer",
    "right" : "StringBuffer",
    "info" : "SimpleType[31188-31200]:SimpleType[31188-31200]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[31201-31207]:SimpleName[31201-31207]"
  }, {
    "left" : "Date date",
    "right" : "Date date",
    "info" : "SingleVariableDeclaration[31208-31217]:SingleVariableDeclaration[31208-31217]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[31219-31235]:SingleVariableDeclaration[31219-31235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31237-31359]:Block[31237-31359]"
  }, {
    "left" : "Calendar c = new GregorianCalendar(mTimeZone);",
    "right" : "Calendar c = new GregorianCalendar(mTimeZone);",
    "info" : "VariableDeclarationStatement[31247-31293]:VariableDeclarationStatement[31247-31293]"
  }, {
    "left" : "c.setTime(date);",
    "right" : "c.setTime(date);",
    "info" : "ExpressionStatement[31302-31318]:ExpressionStatement[31302-31318]"
  }, {
    "left" : "return applyRules(c, buf);",
    "right" : "return applyRules(c, buf);",
    "info" : "ReturnStatement[31327-31353]:ReturnStatement[31327-31353]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31629-31635]:Modifier[31629-31635]"
  }, {
    "left" : "StringBuffer",
    "right" : "StringBuffer",
    "info" : "SimpleType[31636-31648]:SimpleType[31636-31648]"
  }, {
    "left" : "format",
    "right" : "format",
    "info" : "SimpleName[31649-31655]:SimpleName[31649-31655]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[31656-31673]:SingleVariableDeclaration[31656-31673]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[31675-31691]:SingleVariableDeclaration[31675-31691]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31693-31880]:Block[31693-31925]"
  }, {
    "left" : "if (mTimeZoneForced)",
    "right" : "if (mTimeZoneForced)",
    "info" : "IfStatement[31703-31832]:IfStatement[31703-31877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31724-31832]:Block[31724-31877]"
  }, {
    "left" : "calendar = (Calendar) calendar.clone();",
    "right" : "calendar = (Calendar) calendar.clone();",
    "info" : "ExpressionStatement[31738-31777]:ExpressionStatement[31783-31822]"
  }, {
    "left" : "calendar.setTimeZone(mTimeZone);",
    "right" : "calendar.setTimeZone(mTimeZone);",
    "info" : "ExpressionStatement[31790-31822]:ExpressionStatement[31835-31867]"
  }, {
    "left" : "return applyRules(calendar, buf);",
    "right" : "return applyRules(calendar, buf);",
    "info" : "ReturnStatement[31841-31874]:ReturnStatement[31886-31919]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[32139-32148]:Modifier[32184-32193]"
  }, {
    "left" : "StringBuffer",
    "right" : "StringBuffer",
    "info" : "SimpleType[32149-32161]:SimpleType[32194-32206]"
  }, {
    "left" : "applyRules",
    "right" : "applyRules",
    "info" : "SimpleName[32162-32172]:SimpleName[32207-32217]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[32173-32190]:SingleVariableDeclaration[32218-32235]"
  }, {
    "left" : "StringBuffer buf",
    "right" : "StringBuffer buf",
    "info" : "SingleVariableDeclaration[32192-32208]:SingleVariableDeclaration[32237-32253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32210-32397]:Block[32255-32442]"
  }, {
    "left" : "Rule[] rules = mRules;",
    "right" : "Rule[] rules = mRules;",
    "info" : "VariableDeclarationStatement[32220-32242]:VariableDeclarationStatement[32265-32287]"
  }, {
    "left" : "int len = mRules.length;",
    "right" : "int len = mRules.length;",
    "info" : "VariableDeclarationStatement[32251-32275]:VariableDeclarationStatement[32296-32320]"
  }, {
    "left" : "for (int i = 0; i < len; i++)",
    "right" : "for (int i = 0; i < len; i++)",
    "info" : "ForStatement[32284-32371]:ForStatement[32329-32416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32314-32371]:Block[32359-32416]"
  }, {
    "left" : "rules[i].appendTo(buf, calendar);",
    "right" : "rules[i].appendTo(buf, calendar);",
    "info" : "ExpressionStatement[32328-32361]:ExpressionStatement[32373-32406]"
  }, {
    "left" : "return buf;",
    "right" : "return buf;",
    "info" : "ReturnStatement[32380-32391]:ReturnStatement[32425-32436]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[32692-32701]:MarkerAnnotation[32737-32746]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32706-32712]:Modifier[32751-32757]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[32713-32719]:SimpleType[32758-32764]"
  }, {
    "left" : "parseObject",
    "right" : "parseObject",
    "info" : "SimpleName[32720-32731]:SimpleName[32765-32776]"
  }, {
    "left" : "String source",
    "right" : "String source",
    "info" : "SingleVariableDeclaration[32732-32745]:SingleVariableDeclaration[32777-32790]"
  }, {
    "left" : "ParsePosition pos",
    "right" : "ParsePosition pos",
    "info" : "SingleVariableDeclaration[32747-32764]:SingleVariableDeclaration[32792-32809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32766-32849]:Block[32811-32894]"
  }, {
    "left" : "pos.setIndex(0);",
    "right" : "pos.setIndex(0);",
    "info" : "ExpressionStatement[32776-32792]:ExpressionStatement[32821-32837]"
  }, {
    "left" : "pos.setErrorIndex(0);",
    "right" : "pos.setErrorIndex(0);",
    "info" : "ExpressionStatement[32801-32822]:ExpressionStatement[32846-32867]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[32831-32843]:ReturnStatement[32876-32888]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33107-33113]:Modifier[33152-33158]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[33114-33120]:SimpleType[33159-33165]"
  }, {
    "left" : "getPattern",
    "right" : "getPattern",
    "info" : "SimpleName[33121-33131]:SimpleName[33166-33176]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33134-33166]:Block[33179-33211]"
  }, {
    "left" : "return mPattern;",
    "right" : "return mPattern;",
    "info" : "ReturnStatement[33144-33160]:ReturnStatement[33189-33205]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33528-33534]:Modifier[33573-33579]"
  }, {
    "left" : "TimeZone",
    "right" : "TimeZone",
    "info" : "SimpleType[33535-33543]:SimpleType[33580-33588]"
  }, {
    "left" : "getTimeZone",
    "right" : "getTimeZone",
    "info" : "SimpleName[33544-33555]:SimpleName[33589-33600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33558-33591]:Block[33603-33636]"
  }, {
    "left" : "return mTimeZone;",
    "right" : "return mTimeZone;",
    "info" : "ReturnStatement[33568-33585]:ReturnStatement[33613-33630]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33835-33841]:Modifier[33880-33886]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[33842-33849]:PrimitiveType[33887-33894]"
  }, {
    "left" : "getTimeZoneOverridesCalendar",
    "right" : "getTimeZoneOverridesCalendar",
    "info" : "SimpleName[33850-33878]:SimpleName[33895-33923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33881-33920]:Block[33926-33965]"
  }, {
    "left" : "return mTimeZoneForced;",
    "right" : "return mTimeZoneForced;",
    "info" : "ReturnStatement[33891-33914]:ReturnStatement[33936-33959]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34030-34036]:Modifier[34075-34081]"
  }, {
    "left" : "Locale",
    "right" : "Locale",
    "info" : "SimpleType[34037-34043]:SimpleType[34082-34088]"
  }, {
    "left" : "getLocale",
    "right" : "getLocale",
    "info" : "SimpleName[34044-34053]:SimpleName[34089-34098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34056-34087]:Block[34101-34132]"
  }, {
    "left" : "return mLocale;",
    "right" : "return mLocale;",
    "info" : "ReturnStatement[34066-34081]:ReturnStatement[34111-34126]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34375-34381]:Modifier[34420-34426]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[34382-34385]:PrimitiveType[34427-34430]"
  }, {
    "left" : "getMaxLengthEstimate",
    "right" : "getMaxLengthEstimate",
    "info" : "SimpleName[34386-34406]:SimpleName[34431-34451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34409-34451]:Block[34454-34496]"
  }, {
    "left" : "return mMaxLengthEstimate;",
    "right" : "return mMaxLengthEstimate;",
    "info" : "ReturnStatement[34419-34445]:ReturnStatement[34464-34490]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[34708-34717]:MarkerAnnotation[34753-34762]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34722-34728]:Modifier[34767-34773]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[34729-34736]:PrimitiveType[34774-34781]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[34737-34743]:SimpleName[34782-34788]"
  }, {
    "left" : "Object obj",
    "right" : "Object obj",
    "info" : "SingleVariableDeclaration[34744-34754]:SingleVariableDeclaration[34789-34799]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34756-35338]:Block[34801-35383]"
  }, {
    "left" : "if (obj instanceof FastDateFormat == false)",
    "right" : "if (obj instanceof FastDateFormat == false)",
    "info" : "IfStatement[34766-34847]:IfStatement[34811-34892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34810-34847]:Block[34855-34892]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[34824-34837]:ReturnStatement[34869-34882]"
  }, {
    "left" : "FastDateFormat other = (FastDateFormat) obj;",
    "right" : "FastDateFormat other = (FastDateFormat) obj;",
    "info" : "VariableDeclarationStatement[34856-34900]:VariableDeclarationStatement[34901-34945]"
  }, {
    "left" : "if (\n            (mPattern == other.mPattern || mPattern.equals(other.mPattern)) &&\n            (mTimeZone == other.mTimeZone || mTimeZone.equals(other.mTimeZone)) &&\n            (mLocale == other.mLocale || mLocale.equals(other.mLocale)) &&\n            (mTimeZoneForced == other.mTimeZoneForced) &&\n            (mLocaleForced == other.mLocaleForced))",
    "right" : "if (\n            (mPattern == other.mPattern || mPattern.equals(other.mPattern)) &&\n            (mTimeZone == other.mTimeZone || mTimeZone.equals(other.mTimeZone)) &&\n            (mLocale == other.mLocale || mLocale.equals(other.mLocale)) &&\n            (mTimeZoneForced == other.mTimeZoneForced) &&\n            (mLocaleForced == other.mLocaleForced))",
    "info" : "IfStatement[34909-35310]:IfStatement[34954-35355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35274-35310]:Block[35319-35355]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[35288-35300]:ReturnStatement[35333-35345]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[35319-35332]:ReturnStatement[35364-35377]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[35474-35483]:MarkerAnnotation[35519-35528]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35488-35494]:Modifier[35533-35539]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[35495-35498]:PrimitiveType[35540-35543]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[35499-35507]:SimpleName[35544-35552]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35510-35762]:Block[35555-35807]"
  }, {
    "left" : "int total = 0;",
    "right" : "int total = 0;",
    "info" : "VariableDeclarationStatement[35520-35534]:VariableDeclarationStatement[35565-35579]"
  }, {
    "left" : "total += mPattern.hashCode();",
    "right" : "total += mPattern.hashCode();",
    "info" : "ExpressionStatement[35543-35572]:ExpressionStatement[35588-35617]"
  }, {
    "left" : "total += mTimeZone.hashCode();",
    "right" : "total += mTimeZone.hashCode();",
    "info" : "ExpressionStatement[35581-35611]:ExpressionStatement[35626-35656]"
  }, {
    "left" : "total += (mTimeZoneForced ? 1 : 0);",
    "right" : "total += (mTimeZoneForced ? 1 : 0);",
    "info" : "ExpressionStatement[35620-35655]:ExpressionStatement[35665-35700]"
  }, {
    "left" : "total += mLocale.hashCode();",
    "right" : "total += mLocale.hashCode();",
    "info" : "ExpressionStatement[35664-35692]:ExpressionStatement[35709-35737]"
  }, {
    "left" : "total += (mLocaleForced ? 1 : 0);",
    "right" : "total += (mLocaleForced ? 1 : 0);",
    "info" : "ExpressionStatement[35701-35734]:ExpressionStatement[35746-35779]"
  }, {
    "left" : "return total;",
    "right" : "return total;",
    "info" : "ReturnStatement[35743-35756]:ReturnStatement[35788-35801]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[35891-35900]:MarkerAnnotation[35936-35945]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35905-35911]:Modifier[35950-35956]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[35912-35918]:SimpleType[35957-35963]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[35919-35927]:SimpleName[35964-35972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35930-35988]:Block[35975-36033]"
  }, {
    "left" : "return \"FastDateFormat[\" + mPattern + \"]\";",
    "right" : "return \"FastDateFormat[\" + mPattern + \"]\";",
    "info" : "ReturnStatement[35940-35982]:ReturnStatement[35985-36027]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[36426-36433]:Modifier[36471-36478]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[36434-36438]:PrimitiveType[36479-36483]"
  }, {
    "left" : "readObject",
    "right" : "readObject",
    "info" : "SimpleName[36439-36449]:SimpleName[36484-36494]"
  }, {
    "left" : "ObjectInputStream in",
    "right" : "ObjectInputStream in",
    "info" : "SingleVariableDeclaration[36450-36470]:SingleVariableDeclaration[36495-36515]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[36479-36490]:SimpleType[36524-36535]"
  }, {
    "left" : "ClassNotFoundException",
    "right" : "ClassNotFoundException",
    "info" : "SimpleType[36492-36514]:SimpleType[36537-36559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36515-36570]:Block[36560-36615]"
  }, {
    "left" : "in.defaultReadObject();",
    "right" : "in.defaultReadObject();",
    "info" : "ExpressionStatement[36525-36548]:ExpressionStatement[36570-36593]"
  }, {
    "left" : "init();",
    "right" : "init();",
    "info" : "ExpressionStatement[36557-36564]:ExpressionStatement[36602-36609]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[36730-36737]:Modifier[36775-36782]"
  }, {
    "left" : "interface",
    "right" : "interface",
    "info" : "TYPE_DECLARATION_KIND[36738-36747]:TYPE_DECLARATION_KIND[36783-36792]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[36894-36897]:PrimitiveType[36939-36942]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[36898-36912]:SimpleName[36943-36957]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[37173-37177]:PrimitiveType[37218-37222]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[37178-37186]:SimpleName[37223-37231]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[37187-37206]:SingleVariableDeclaration[37232-37251]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[37208-37225]:SingleVariableDeclaration[37253-37270]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37306-37313]:Modifier[37351-37358]"
  }, {
    "left" : "interface",
    "right" : "interface",
    "info" : "TYPE_DECLARATION_KIND[37314-37323]:TYPE_DECLARATION_KIND[37359-37368]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[37580-37584]:PrimitiveType[37625-37629]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[37585-37593]:SimpleName[37630-37638]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[37594-37613]:SingleVariableDeclaration[37639-37658]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[37615-37624]:SingleVariableDeclaration[37660-37669]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37719-37726]:Modifier[37764-37771]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37727-37733]:Modifier[37772-37778]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[37734-37739]:TYPE_DECLARATION_KIND[37779-37784]"
  }, {
    "left" : "CharacterLiteral",
    "right" : "CharacterLiteral",
    "info" : "SimpleName[38011-38027]:SimpleName[38056-38072]"
  }, {
    "left" : "char value",
    "right" : "char value",
    "info" : "SingleVariableDeclaration[38028-38038]:SingleVariableDeclaration[38073-38083]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38040-38079]:Block[38085-38124]"
  }, {
    "left" : "mValue = value;",
    "right" : "mValue = value;",
    "info" : "ExpressionStatement[38054-38069]:ExpressionStatement[38099-38114]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38138-38144]:Modifier[38183-38189]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[38145-38148]:PrimitiveType[38190-38193]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[38149-38163]:SimpleName[38194-38208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38166-38199]:Block[38211-38244]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[38180-38189]:ReturnStatement[38225-38234]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38258-38264]:Modifier[38303-38309]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[38265-38269]:PrimitiveType[38310-38314]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[38270-38278]:SimpleName[38315-38323]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[38279-38298]:SingleVariableDeclaration[38324-38343]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[38300-38317]:SingleVariableDeclaration[38345-38362]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38319-38365]:Block[38364-38410]"
  }, {
    "left" : "buffer.append(mValue);",
    "right" : "buffer.append(mValue);",
    "info" : "ExpressionStatement[38333-38355]:ExpressionStatement[38378-38400]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[38448-38455]:Modifier[38493-38500]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[38456-38462]:Modifier[38501-38507]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[38463-38468]:TYPE_DECLARATION_KIND[38508-38513]"
  }, {
    "left" : "StringLiteral",
    "right" : "StringLiteral",
    "info" : "SimpleName[38733-38746]:SimpleName[38778-38791]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[38747-38759]:SingleVariableDeclaration[38792-38804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38761-38800]:Block[38806-38845]"
  }, {
    "left" : "mValue = value;",
    "right" : "mValue = value;",
    "info" : "ExpressionStatement[38775-38790]:ExpressionStatement[38820-38835]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38859-38865]:Modifier[38904-38910]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[38866-38869]:PrimitiveType[38911-38914]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[38870-38884]:SimpleName[38915-38929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38887-38934]:Block[38932-38979]"
  }, {
    "left" : "return mValue.length();",
    "right" : "return mValue.length();",
    "info" : "ReturnStatement[38901-38924]:ReturnStatement[38946-38969]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38993-38999]:Modifier[39038-39044]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[39000-39004]:PrimitiveType[39045-39049]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[39005-39013]:SimpleName[39050-39058]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[39014-39033]:SingleVariableDeclaration[39059-39078]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[39035-39052]:SingleVariableDeclaration[39080-39097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39054-39100]:Block[39099-39145]"
  }, {
    "left" : "buffer.append(mValue);",
    "right" : "buffer.append(mValue);",
    "info" : "ExpressionStatement[39068-39090]:ExpressionStatement[39113-39135]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[39188-39195]:Modifier[39233-39240]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39196-39202]:Modifier[39241-39247]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[39203-39208]:TYPE_DECLARATION_KIND[39248-39253]"
  }, {
    "left" : "TextField",
    "right" : "TextField",
    "info" : "SimpleName[39540-39549]:SimpleName[39585-39594]"
  }, {
    "left" : "int field",
    "right" : "int field",
    "info" : "SingleVariableDeclaration[39550-39559]:SingleVariableDeclaration[39595-39604]"
  }, {
    "left" : "String[] values",
    "right" : "String[] values",
    "info" : "SingleVariableDeclaration[39561-39576]:SingleVariableDeclaration[39606-39621]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39578-39647]:Block[39623-39692]"
  }, {
    "left" : "mField = field;",
    "right" : "mField = field;",
    "info" : "ExpressionStatement[39592-39607]:ExpressionStatement[39637-39652]"
  }, {
    "left" : "mValues = values;",
    "right" : "mValues = values;",
    "info" : "ExpressionStatement[39620-39637]:ExpressionStatement[39665-39682]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39706-39712]:Modifier[39751-39757]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[39713-39716]:PrimitiveType[39758-39761]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[39717-39731]:SimpleName[39762-39776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39734-39990]:Block[39779-40035]"
  }, {
    "left" : "int max = 0;",
    "right" : "int max = 0;",
    "info" : "VariableDeclarationStatement[39748-39760]:VariableDeclarationStatement[39793-39805]"
  }, {
    "left" : "for (int i=mValues.length; --i >= 0)",
    "right" : "for (int i=mValues.length; --i >= 0)",
    "info" : "ForStatement[39773-39956]:ForStatement[39818-40001]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39812-39956]:Block[39857-40001]"
  }, {
    "left" : "int len = mValues[i].length();",
    "right" : "int len = mValues[i].length();",
    "info" : "VariableDeclarationStatement[39830-39860]:VariableDeclarationStatement[39875-39905]"
  }, {
    "left" : "if (len > max)",
    "right" : "if (len > max)",
    "info" : "IfStatement[39877-39942]:IfStatement[39922-39987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39892-39942]:Block[39937-39987]"
  }, {
    "left" : "max = len;",
    "right" : "max = len;",
    "info" : "ExpressionStatement[39914-39924]:ExpressionStatement[39959-39969]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[39969-39980]:ReturnStatement[40014-40025]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40049-40055]:Modifier[40094-40100]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40056-40060]:PrimitiveType[40101-40105]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[40061-40069]:SimpleName[40106-40114]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[40070-40089]:SingleVariableDeclaration[40115-40134]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[40091-40108]:SingleVariableDeclaration[40136-40153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40110-40179]:Block[40155-40224]"
  }, {
    "left" : "buffer.append(mValues[calendar.get(mField)]);",
    "right" : "buffer.append(mValues[calendar.get(mField)]);",
    "info" : "ExpressionStatement[40124-40169]:ExpressionStatement[40169-40214]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[40263-40270]:Modifier[40308-40315]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[40271-40277]:Modifier[40316-40322]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[40278-40283]:TYPE_DECLARATION_KIND[40323-40328]"
  }, {
    "left" : "UnpaddedNumberField",
    "right" : "UnpaddedNumberField",
    "info" : "SimpleName[40536-40555]:SimpleName[40581-40600]"
  }, {
    "left" : "int field",
    "right" : "int field",
    "info" : "SingleVariableDeclaration[40556-40565]:SingleVariableDeclaration[40601-40610]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40567-40606]:Block[40612-40651]"
  }, {
    "left" : "mField = field;",
    "right" : "mField = field;",
    "info" : "ExpressionStatement[40581-40596]:ExpressionStatement[40626-40641]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40665-40671]:Modifier[40710-40716]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[40672-40675]:PrimitiveType[40717-40720]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[40676-40690]:SimpleName[40721-40735]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40693-40726]:Block[40738-40771]"
  }, {
    "left" : "return 4;",
    "right" : "return 4;",
    "info" : "ReturnStatement[40707-40716]:ReturnStatement[40752-40761]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40785-40791]:Modifier[40830-40836]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40792-40796]:PrimitiveType[40837-40841]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[40797-40805]:SimpleName[40842-40850]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[40806-40825]:SingleVariableDeclaration[40851-40870]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[40827-40844]:SingleVariableDeclaration[40872-40889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40846-40909]:Block[40891-40954]"
  }, {
    "left" : "appendTo(buffer, calendar.get(mField));",
    "right" : "appendTo(buffer, calendar.get(mField));",
    "info" : "ExpressionStatement[40860-40899]:ExpressionStatement[40905-40944]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40968-40974]:Modifier[41013-41019]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[40975-40980]:Modifier[41020-41025]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40981-40985]:PrimitiveType[41026-41030]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[40986-40994]:SimpleName[41031-41039]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[40995-41014]:SingleVariableDeclaration[41040-41059]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[41016-41025]:SingleVariableDeclaration[41061-41070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41027-41363]:Block[41072-41408]"
  }, {
    "left" : "if (value < 10)",
    "right" : "if (value < 10)",
    "info" : "IfStatement[41041-41353]:IfStatement[41086-41398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41057-41124]:Block[41102-41169]"
  }, {
    "left" : "buffer.append((char)(value + '0'));",
    "right" : "buffer.append((char)(value + '0'));",
    "info" : "ExpressionStatement[41075-41110]:ExpressionStatement[41120-41155]"
  }, {
    "left" : "if (value < 100)",
    "right" : "if (value < 100)",
    "info" : "IfStatement[41130-41353]:IfStatement[41175-41398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41147-41276]:Block[41192-41321]"
  }, {
    "left" : "buffer.append((char)(value / 10 + '0'));",
    "right" : "buffer.append((char)(value / 10 + '0'));",
    "info" : "ExpressionStatement[41165-41205]:ExpressionStatement[41210-41250]"
  }, {
    "left" : "buffer.append((char)(value % 10 + '0'));",
    "right" : "buffer.append((char)(value % 10 + '0'));",
    "info" : "ExpressionStatement[41222-41262]:ExpressionStatement[41267-41307]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41282-41353]:Block[41327-41398]"
  }, {
    "left" : "buffer.append(Integer.toString(value));",
    "right" : "buffer.append(Integer.toString(value));",
    "info" : "ExpressionStatement[41300-41339]:ExpressionStatement[41345-41384]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[41446-41453]:Modifier[41491-41498]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[41454-41460]:Modifier[41499-41505]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[41461-41466]:TYPE_DECLARATION_KIND[41506-41511]"
  }, {
    "left" : "UnpaddedMonthField",
    "right" : "UnpaddedMonthField",
    "info" : "SimpleName[41701-41719]:SimpleName[41746-41764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41722-41754]:Block[41767-41799]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[41736-41744]:SuperConstructorInvocation[41781-41789]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41813-41819]:Modifier[41858-41864]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[41820-41823]:PrimitiveType[41865-41868]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[41824-41838]:SimpleName[41869-41883]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41841-41874]:Block[41886-41919]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[41855-41864]:ReturnStatement[41900-41909]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41933-41939]:Modifier[41978-41984]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[41940-41944]:PrimitiveType[41985-41989]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[41945-41953]:SimpleName[41990-41998]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[41954-41973]:SingleVariableDeclaration[41999-42018]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[41975-41992]:SingleVariableDeclaration[42020-42037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41994-42069]:Block[42039-42114]"
  }, {
    "left" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
    "right" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
    "info" : "ExpressionStatement[42008-42059]:ExpressionStatement[42053-42104]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42128-42134]:Modifier[42173-42179]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[42135-42140]:Modifier[42180-42185]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42141-42145]:PrimitiveType[42186-42190]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[42146-42154]:SimpleName[42191-42199]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[42155-42174]:SingleVariableDeclaration[42200-42219]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[42176-42185]:SingleVariableDeclaration[42221-42230]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42187-42429]:Block[42232-42474]"
  }, {
    "left" : "if (value < 10)",
    "right" : "if (value < 10)",
    "info" : "IfStatement[42201-42419]:IfStatement[42246-42464]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42217-42284]:Block[42262-42329]"
  }, {
    "left" : "buffer.append((char)(value + '0'));",
    "right" : "buffer.append((char)(value + '0'));",
    "info" : "ExpressionStatement[42235-42270]:ExpressionStatement[42280-42315]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42290-42419]:Block[42335-42464]"
  }, {
    "left" : "buffer.append((char)(value / 10 + '0'));",
    "right" : "buffer.append((char)(value / 10 + '0'));",
    "info" : "ExpressionStatement[42308-42348]:ExpressionStatement[42353-42393]"
  }, {
    "left" : "buffer.append((char)(value % 10 + '0'));",
    "right" : "buffer.append((char)(value % 10 + '0'));",
    "info" : "ExpressionStatement[42365-42405]:ExpressionStatement[42410-42450]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[42510-42517]:Modifier[42555-42562]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[42518-42524]:Modifier[42563-42569]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[42525-42530]:TYPE_DECLARATION_KIND[42570-42575]"
  }, {
    "left" : "PaddedNumberField",
    "right" : "PaddedNumberField",
    "info" : "SimpleName[42836-42853]:SimpleName[42881-42898]"
  }, {
    "left" : "int field",
    "right" : "int field",
    "info" : "SingleVariableDeclaration[42854-42863]:SingleVariableDeclaration[42899-42908]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[42865-42873]:SingleVariableDeclaration[42910-42918]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42875-43110]:Block[42920-43155]"
  }, {
    "left" : "if (size < 3)",
    "right" : "if (size < 3)",
    "info" : "IfStatement[42889-43046]:IfStatement[42934-43091]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42903-43046]:Block[42948-43091]"
  }, {
    "left" : "throw new IllegalArgumentException();",
    "right" : "throw new IllegalArgumentException();",
    "info" : "ThrowStatement[42995-43032]:ThrowStatement[43040-43077]"
  }, {
    "left" : "mField = field;",
    "right" : "mField = field;",
    "info" : "ExpressionStatement[43059-43074]:ExpressionStatement[43104-43119]"
  }, {
    "left" : "mSize = size;",
    "right" : "mSize = size;",
    "info" : "ExpressionStatement[43087-43100]:ExpressionStatement[43132-43145]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43169-43175]:Modifier[43214-43220]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[43176-43179]:PrimitiveType[43221-43224]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[43180-43194]:SimpleName[43225-43239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43197-43230]:Block[43242-43275]"
  }, {
    "left" : "return 4;",
    "right" : "return 4;",
    "info" : "ReturnStatement[43211-43220]:ReturnStatement[43256-43265]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43289-43295]:Modifier[43334-43340]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[43296-43300]:PrimitiveType[43341-43345]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[43301-43309]:SimpleName[43346-43354]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[43310-43329]:SingleVariableDeclaration[43355-43374]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[43331-43348]:SingleVariableDeclaration[43376-43393]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43350-43413]:Block[43395-43458]"
  }, {
    "left" : "appendTo(buffer, calendar.get(mField));",
    "right" : "appendTo(buffer, calendar.get(mField));",
    "info" : "ExpressionStatement[43364-43403]:ExpressionStatement[43409-43448]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43472-43478]:Modifier[43517-43523]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[43479-43484]:Modifier[43524-43529]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[43485-43489]:PrimitiveType[43530-43534]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[43490-43498]:SimpleName[43535-43543]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[43499-43518]:SingleVariableDeclaration[43544-43563]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[43520-43529]:SingleVariableDeclaration[43565-43574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43531-44299]:Block[43576-44344]"
  }, {
    "left" : "if (value < 100)",
    "right" : "if (value < 100)",
    "info" : "IfStatement[43545-44289]:IfStatement[43590-44334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43562-43799]:Block[43607-43844]"
  }, {
    "left" : "for (int i = mSize; --i >= 2)",
    "right" : "for (int i = mSize; --i >= 2)",
    "info" : "ForStatement[43580-43671]:ForStatement[43625-43716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43612-43671]:Block[43657-43716]"
  }, {
    "left" : "buffer.append('0');",
    "right" : "buffer.append('0');",
    "info" : "ExpressionStatement[43634-43653]:ExpressionStatement[43679-43698]"
  }, {
    "left" : "buffer.append((char)(value / 10 + '0'));",
    "right" : "buffer.append((char)(value / 10 + '0'));",
    "info" : "ExpressionStatement[43688-43728]:ExpressionStatement[43733-43773]"
  }, {
    "left" : "buffer.append((char)(value % 10 + '0'));",
    "right" : "buffer.append((char)(value % 10 + '0'));",
    "info" : "ExpressionStatement[43745-43785]:ExpressionStatement[43790-43830]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43805-44289]:Block[43850-44334]"
  }, {
    "left" : "int digits;",
    "right" : "int digits;",
    "info" : "VariableDeclarationStatement[43823-43834]:VariableDeclarationStatement[43868-43879]"
  }, {
    "left" : "if (value < 1000)",
    "right" : "if (value < 1000)",
    "info" : "IfStatement[43851-44106]:IfStatement[43896-44151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43869-43920]:Block[43914-43965]"
  }, {
    "left" : "digits = 3;",
    "right" : "digits = 3;",
    "info" : "ExpressionStatement[43891-43902]:ExpressionStatement[43936-43947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43926-44106]:Block[43971-44151]"
  }, {
    "left" : "Validate.isTrue(value > -1, \"Negative values should not be possible\", value);",
    "right" : "Validate.isTrue(value > -1, \"Negative values should not be possible\", value);",
    "info" : "ExpressionStatement[43948-44025]:ExpressionStatement[43993-44070]"
  }, {
    "left" : "digits = Integer.toString(value).length();",
    "right" : "digits = Integer.toString(value).length();",
    "info" : "ExpressionStatement[44046-44088]:ExpressionStatement[44091-44133]"
  }, {
    "left" : "for (int i = mSize; --i >= digits)",
    "right" : "for (int i = mSize; --i >= digits)",
    "info" : "ForStatement[44123-44219]:ForStatement[44168-44264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44160-44219]:Block[44205-44264]"
  }, {
    "left" : "buffer.append('0');",
    "right" : "buffer.append('0');",
    "info" : "ExpressionStatement[44182-44201]:ExpressionStatement[44227-44246]"
  }, {
    "left" : "buffer.append(Integer.toString(value));",
    "right" : "buffer.append(Integer.toString(value));",
    "info" : "ExpressionStatement[44236-44275]:ExpressionStatement[44281-44320]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[44383-44390]:Modifier[44428-44435]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[44391-44397]:Modifier[44436-44442]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[44398-44403]:TYPE_DECLARATION_KIND[44443-44448]"
  }, {
    "left" : "TwoDigitNumberField",
    "right" : "TwoDigitNumberField",
    "info" : "SimpleName[44657-44676]:SimpleName[44702-44721]"
  }, {
    "left" : "int field",
    "right" : "int field",
    "info" : "SingleVariableDeclaration[44677-44686]:SingleVariableDeclaration[44722-44731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44688-44727]:Block[44733-44772]"
  }, {
    "left" : "mField = field;",
    "right" : "mField = field;",
    "info" : "ExpressionStatement[44702-44717]:ExpressionStatement[44747-44762]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44786-44792]:Modifier[44831-44837]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[44793-44796]:PrimitiveType[44838-44841]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[44797-44811]:SimpleName[44842-44856]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44814-44847]:Block[44859-44892]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[44828-44837]:ReturnStatement[44873-44882]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44906-44912]:Modifier[44951-44957]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[44913-44917]:PrimitiveType[44958-44962]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[44918-44926]:SimpleName[44963-44971]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[44927-44946]:SingleVariableDeclaration[44972-44991]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[44948-44965]:SingleVariableDeclaration[44993-45010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44967-45030]:Block[45012-45075]"
  }, {
    "left" : "appendTo(buffer, calendar.get(mField));",
    "right" : "appendTo(buffer, calendar.get(mField));",
    "info" : "ExpressionStatement[44981-45020]:ExpressionStatement[45026-45065]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45089-45095]:Modifier[45134-45140]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[45096-45101]:Modifier[45141-45146]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[45102-45106]:PrimitiveType[45147-45151]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[45107-45115]:SimpleName[45152-45160]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[45116-45135]:SingleVariableDeclaration[45161-45180]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[45137-45146]:SingleVariableDeclaration[45182-45191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45148-45395]:Block[45193-45440]"
  }, {
    "left" : "if (value < 100)",
    "right" : "if (value < 100)",
    "info" : "IfStatement[45162-45385]:IfStatement[45207-45430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45179-45308]:Block[45224-45353]"
  }, {
    "left" : "buffer.append((char)(value / 10 + '0'));",
    "right" : "buffer.append((char)(value / 10 + '0'));",
    "info" : "ExpressionStatement[45197-45237]:ExpressionStatement[45242-45282]"
  }, {
    "left" : "buffer.append((char)(value % 10 + '0'));",
    "right" : "buffer.append((char)(value % 10 + '0'));",
    "info" : "ExpressionStatement[45254-45294]:ExpressionStatement[45299-45339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45314-45385]:Block[45359-45430]"
  }, {
    "left" : "buffer.append(Integer.toString(value));",
    "right" : "buffer.append(Integer.toString(value));",
    "info" : "ExpressionStatement[45332-45371]:ExpressionStatement[45377-45416]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[45477-45484]:Modifier[45522-45529]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[45485-45491]:Modifier[45530-45536]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[45492-45497]:TYPE_DECLARATION_KIND[45537-45542]"
  }, {
    "left" : "TwoDigitYearField",
    "right" : "TwoDigitYearField",
    "info" : "SimpleName[45717-45734]:SimpleName[45762-45779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45737-45769]:Block[45782-45814]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[45751-45759]:SuperConstructorInvocation[45796-45804]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45828-45834]:Modifier[45873-45879]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[45835-45838]:PrimitiveType[45880-45883]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[45839-45853]:SimpleName[45884-45898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45856-45889]:Block[45901-45934]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[45870-45879]:ReturnStatement[45915-45924]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45948-45954]:Modifier[45993-45999]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[45955-45959]:PrimitiveType[46000-46004]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[45960-45968]:SimpleName[46005-46013]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[45969-45988]:SingleVariableDeclaration[46014-46033]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[45990-46007]:SingleVariableDeclaration[46035-46052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46009-46085]:Block[46054-46130]"
  }, {
    "left" : "appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",
    "right" : "appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",
    "info" : "ExpressionStatement[46023-46075]:ExpressionStatement[46068-46120]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46144-46150]:Modifier[46189-46195]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[46151-46156]:Modifier[46196-46201]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[46157-46161]:PrimitiveType[46202-46206]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[46162-46170]:SimpleName[46207-46215]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[46171-46190]:SingleVariableDeclaration[46216-46235]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[46192-46201]:SingleVariableDeclaration[46237-46246]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46203-46320]:Block[46248-46365]"
  }, {
    "left" : "buffer.append((char)(value / 10 + '0'));",
    "right" : "buffer.append((char)(value / 10 + '0'));",
    "info" : "ExpressionStatement[46217-46257]:ExpressionStatement[46262-46302]"
  }, {
    "left" : "buffer.append((char)(value % 10 + '0'));",
    "right" : "buffer.append((char)(value % 10 + '0'));",
    "info" : "ExpressionStatement[46270-46310]:ExpressionStatement[46315-46355]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[46403-46410]:Modifier[46448-46455]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[46411-46417]:Modifier[46456-46462]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[46418-46423]:TYPE_DECLARATION_KIND[46463-46468]"
  }, {
    "left" : "TwoDigitMonthField",
    "right" : "TwoDigitMonthField",
    "info" : "SimpleName[46647-46665]:SimpleName[46692-46710]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46668-46700]:Block[46713-46745]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[46682-46690]:SuperConstructorInvocation[46727-46735]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46759-46765]:Modifier[46804-46810]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[46766-46769]:PrimitiveType[46811-46814]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[46770-46784]:SimpleName[46815-46829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46787-46820]:Block[46832-46865]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[46801-46810]:ReturnStatement[46846-46855]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46879-46885]:Modifier[46924-46930]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[46886-46890]:PrimitiveType[46931-46935]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[46891-46899]:SimpleName[46936-46944]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[46900-46919]:SingleVariableDeclaration[46945-46964]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[46921-46938]:SingleVariableDeclaration[46966-46983]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46940-47015]:Block[46985-47060]"
  }, {
    "left" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
    "right" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
    "info" : "ExpressionStatement[46954-47005]:ExpressionStatement[46999-47050]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47074-47080]:Modifier[47119-47125]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[47081-47086]:Modifier[47126-47131]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[47087-47091]:PrimitiveType[47132-47136]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[47092-47100]:SimpleName[47137-47145]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[47101-47120]:SingleVariableDeclaration[47146-47165]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[47122-47131]:SingleVariableDeclaration[47167-47176]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47133-47250]:Block[47178-47295]"
  }, {
    "left" : "buffer.append((char)(value / 10 + '0'));",
    "right" : "buffer.append((char)(value / 10 + '0'));",
    "info" : "ExpressionStatement[47147-47187]:ExpressionStatement[47192-47232]"
  }, {
    "left" : "buffer.append((char)(value % 10 + '0'));",
    "right" : "buffer.append((char)(value % 10 + '0'));",
    "info" : "ExpressionStatement[47200-47240]:ExpressionStatement[47245-47285]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[47337-47344]:Modifier[47382-47389]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[47345-47351]:Modifier[47390-47396]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[47352-47357]:TYPE_DECLARATION_KIND[47397-47402]"
  }, {
    "left" : "TwelveHourField",
    "right" : "TwelveHourField",
    "info" : "SimpleName[47636-47651]:SimpleName[47681-47696]"
  }, {
    "left" : "NumberRule rule",
    "right" : "NumberRule rule",
    "info" : "SingleVariableDeclaration[47652-47667]:SingleVariableDeclaration[47697-47712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47669-47706]:Block[47714-47751]"
  }, {
    "left" : "mRule = rule;",
    "right" : "mRule = rule;",
    "info" : "ExpressionStatement[47683-47696]:ExpressionStatement[47728-47741]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47765-47771]:Modifier[47810-47816]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[47772-47775]:PrimitiveType[47817-47820]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[47776-47790]:SimpleName[47821-47835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47793-47847]:Block[47838-47892]"
  }, {
    "left" : "return mRule.estimateLength();",
    "right" : "return mRule.estimateLength();",
    "info" : "ReturnStatement[47807-47837]:ReturnStatement[47852-47882]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47906-47912]:Modifier[47951-47957]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[47913-47917]:PrimitiveType[47958-47962]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[47918-47926]:SimpleName[47963-47971]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[47927-47946]:SingleVariableDeclaration[47972-47991]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[47948-47965]:SingleVariableDeclaration[47993-48010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47967-48187]:Block[48012-48232]"
  }, {
    "left" : "int value = calendar.get(Calendar.HOUR);",
    "right" : "int value = calendar.get(Calendar.HOUR);",
    "info" : "VariableDeclarationStatement[47981-48021]:VariableDeclarationStatement[48026-48066]"
  }, {
    "left" : "if (value == 0)",
    "right" : "if (value == 0)",
    "info" : "IfStatement[48034-48134]:IfStatement[48079-48179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48050-48134]:Block[48095-48179]"
  }, {
    "left" : "value = calendar.getLeastMaximum(Calendar.HOUR) + 1;",
    "right" : "value = calendar.getLeastMaximum(Calendar.HOUR) + 1;",
    "info" : "ExpressionStatement[48068-48120]:ExpressionStatement[48113-48165]"
  }, {
    "left" : "mRule.appendTo(buffer, value);",
    "right" : "mRule.appendTo(buffer, value);",
    "info" : "ExpressionStatement[48147-48177]:ExpressionStatement[48192-48222]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48246-48252]:Modifier[48291-48297]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[48253-48257]:PrimitiveType[48298-48302]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[48258-48266]:SimpleName[48303-48311]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[48267-48286]:SingleVariableDeclaration[48312-48331]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[48288-48297]:SingleVariableDeclaration[48333-48342]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48299-48353]:Block[48344-48398]"
  }, {
    "left" : "mRule.appendTo(buffer, value);",
    "right" : "mRule.appendTo(buffer, value);",
    "info" : "ExpressionStatement[48313-48343]:ExpressionStatement[48358-48388]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[48445-48452]:Modifier[48490-48497]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[48453-48459]:Modifier[48498-48504]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[48460-48465]:TYPE_DECLARATION_KIND[48505-48510]"
  }, {
    "left" : "TwentyFourHourField",
    "right" : "TwentyFourHourField",
    "info" : "SimpleName[48752-48771]:SimpleName[48797-48816]"
  }, {
    "left" : "NumberRule rule",
    "right" : "NumberRule rule",
    "info" : "SingleVariableDeclaration[48772-48787]:SingleVariableDeclaration[48817-48832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48789-48826]:Block[48834-48871]"
  }, {
    "left" : "mRule = rule;",
    "right" : "mRule = rule;",
    "info" : "ExpressionStatement[48803-48816]:ExpressionStatement[48848-48861]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48885-48891]:Modifier[48930-48936]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[48892-48895]:PrimitiveType[48937-48940]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[48896-48910]:SimpleName[48941-48955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48913-48967]:Block[48958-49012]"
  }, {
    "left" : "return mRule.estimateLength();",
    "right" : "return mRule.estimateLength();",
    "info" : "ReturnStatement[48927-48957]:ReturnStatement[48972-49002]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49026-49032]:Modifier[49071-49077]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[49033-49037]:PrimitiveType[49078-49082]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[49038-49046]:SimpleName[49083-49091]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[49047-49066]:SingleVariableDeclaration[49092-49111]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[49068-49085]:SingleVariableDeclaration[49113-49130]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49087-49316]:Block[49132-49361]"
  }, {
    "left" : "int value = calendar.get(Calendar.HOUR_OF_DAY);",
    "right" : "int value = calendar.get(Calendar.HOUR_OF_DAY);",
    "info" : "VariableDeclarationStatement[49101-49148]:VariableDeclarationStatement[49146-49193]"
  }, {
    "left" : "if (value == 0)",
    "right" : "if (value == 0)",
    "info" : "IfStatement[49161-49263]:IfStatement[49206-49308]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49177-49263]:Block[49222-49308]"
  }, {
    "left" : "value = calendar.getMaximum(Calendar.HOUR_OF_DAY) + 1;",
    "right" : "value = calendar.getMaximum(Calendar.HOUR_OF_DAY) + 1;",
    "info" : "ExpressionStatement[49195-49249]:ExpressionStatement[49240-49294]"
  }, {
    "left" : "mRule.appendTo(buffer, value);",
    "right" : "mRule.appendTo(buffer, value);",
    "info" : "ExpressionStatement[49276-49306]:ExpressionStatement[49321-49351]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49375-49381]:Modifier[49420-49426]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[49382-49386]:PrimitiveType[49427-49431]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[49387-49395]:SimpleName[49432-49440]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[49396-49415]:SingleVariableDeclaration[49441-49460]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[49417-49426]:SingleVariableDeclaration[49462-49471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49428-49482]:Block[49473-49527]"
  }, {
    "left" : "mRule.appendTo(buffer, value);",
    "right" : "mRule.appendTo(buffer, value);",
    "info" : "ExpressionStatement[49442-49472]:ExpressionStatement[49487-49517]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[49564-49571]:Modifier[49609-49616]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[49572-49578]:Modifier[49617-49623]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[49579-49584]:TYPE_DECLARATION_KIND[49624-49629]"
  }, {
    "left" : "TimeZoneNameRule",
    "right" : "TimeZoneNameRule",
    "info" : "SimpleName[50220-50236]:SimpleName[50265-50281]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[50237-50254]:SingleVariableDeclaration[50282-50299]"
  }, {
    "left" : "boolean timeZoneForced",
    "right" : "boolean timeZoneForced",
    "info" : "SingleVariableDeclaration[50256-50278]:SingleVariableDeclaration[50301-50323]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[50280-50293]:SingleVariableDeclaration[50325-50338]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[50295-50304]:SingleVariableDeclaration[50340-50349]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50306-50752]:Block[50351-50797]"
  }, {
    "left" : "mTimeZone = timeZone;",
    "right" : "mTimeZone = timeZone;",
    "info" : "ExpressionStatement[50320-50341]:ExpressionStatement[50365-50386]"
  }, {
    "left" : "mTimeZoneForced = timeZoneForced;",
    "right" : "mTimeZoneForced = timeZoneForced;",
    "info" : "ExpressionStatement[50354-50387]:ExpressionStatement[50399-50432]"
  }, {
    "left" : "mLocale = locale;",
    "right" : "mLocale = locale;",
    "info" : "ExpressionStatement[50400-50417]:ExpressionStatement[50445-50462]"
  }, {
    "left" : "mStyle = style;",
    "right" : "mStyle = style;",
    "info" : "ExpressionStatement[50430-50445]:ExpressionStatement[50475-50490]"
  }, {
    "left" : "if (timeZoneForced)",
    "right" : "if (timeZoneForced)",
    "info" : "IfStatement[50459-50742]:IfStatement[50504-50787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50479-50653]:Block[50524-50698]"
  }, {
    "left" : "mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",
    "right" : "mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",
    "info" : "ExpressionStatement[50497-50560]:ExpressionStatement[50542-50605]"
  }, {
    "left" : "mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",
    "right" : "mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",
    "info" : "ExpressionStatement[50577-50639]:ExpressionStatement[50622-50684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50659-50742]:Block[50704-50787]"
  }, {
    "left" : "mStandard = null;",
    "right" : "mStandard = null;",
    "info" : "ExpressionStatement[50677-50694]:ExpressionStatement[50722-50739]"
  }, {
    "left" : "mDaylight = null;",
    "right" : "mDaylight = null;",
    "info" : "ExpressionStatement[50711-50728]:ExpressionStatement[50756-50773]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[50811-50817]:Modifier[50856-50862]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[50818-50821]:PrimitiveType[50863-50866]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[50822-50836]:SimpleName[50867-50881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50839-51097]:Block[50884-51142]"
  }, {
    "left" : "if (mTimeZoneForced)",
    "right" : "if (mTimeZoneForced)",
    "info" : "IfStatement[50853-51087]:IfStatement[50898-51132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50874-50962]:Block[50919-51007]"
  }, {
    "left" : "return Math.max(mStandard.length(), mDaylight.length());",
    "right" : "return Math.max(mStandard.length(), mDaylight.length());",
    "info" : "ReturnStatement[50892-50948]:ReturnStatement[50937-50993]"
  }, {
    "left" : "if (mStyle == TimeZone.SHORT)",
    "right" : "if (mStyle == TimeZone.SHORT)",
    "info" : "IfStatement[50968-51087]:IfStatement[51013-51132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50998-51039]:Block[51043-51084]"
  }, {
    "left" : "return 4;",
    "right" : "return 4;",
    "info" : "ReturnStatement[51016-51025]:ReturnStatement[51061-51070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51045-51087]:Block[51090-51132]"
  }, {
    "left" : "return 40;",
    "right" : "return 40;",
    "info" : "ReturnStatement[51063-51073]:ReturnStatement[51108-51118]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[51156-51162]:Modifier[51201-51207]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[51163-51167]:PrimitiveType[51208-51212]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[51168-51176]:SimpleName[51213-51221]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[51177-51196]:SingleVariableDeclaration[51222-51241]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[51198-51215]:SingleVariableDeclaration[51243-51260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51217-51898]:Block[51262-51943]"
  }, {
    "left" : "if (mTimeZoneForced)",
    "right" : "if (mTimeZoneForced)",
    "info" : "IfStatement[51231-51888]:IfStatement[51276-51933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51252-51495]:Block[51297-51540]"
  }, {
    "left" : "if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0)",
    "right" : "if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0)",
    "info" : "IfStatement[51270-51481]:IfStatement[51315-51526]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51345-51410]:Block[51390-51455]"
  }, {
    "left" : "buffer.append(mDaylight);",
    "right" : "buffer.append(mDaylight);",
    "info" : "ExpressionStatement[51367-51392]:ExpressionStatement[51412-51437]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51416-51481]:Block[51461-51526]"
  }, {
    "left" : "buffer.append(mStandard);",
    "right" : "buffer.append(mStandard);",
    "info" : "ExpressionStatement[51438-51463]:ExpressionStatement[51483-51508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51501-51888]:Block[51546-51933]"
  }, {
    "left" : "TimeZone timeZone = calendar.getTimeZone();",
    "right" : "TimeZone timeZone = calendar.getTimeZone();",
    "info" : "VariableDeclarationStatement[51519-51562]:VariableDeclarationStatement[51564-51607]"
  }, {
    "left" : "if (timeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0)",
    "right" : "if (timeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0)",
    "info" : "IfStatement[51579-51874]:IfStatement[51624-51919]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51653-51760]:Block[51698-51805]"
  }, {
    "left" : "buffer.append(getTimeZoneDisplay(timeZone, true, mStyle, mLocale));",
    "right" : "buffer.append(getTimeZoneDisplay(timeZone, true, mStyle, mLocale));",
    "info" : "ExpressionStatement[51675-51742]:ExpressionStatement[51720-51787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51766-51874]:Block[51811-51919]"
  }, {
    "left" : "buffer.append(getTimeZoneDisplay(timeZone, false, mStyle, mLocale));",
    "right" : "buffer.append(getTimeZoneDisplay(timeZone, false, mStyle, mLocale));",
    "info" : "ExpressionStatement[51788-51856]:ExpressionStatement[51833-51901]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[52040-52047]:Modifier[52085-52092]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[52048-52054]:Modifier[52093-52099]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[52055-52060]:TYPE_DECLARATION_KIND[52100-52105]"
  }, {
    "left" : "TimeZoneNumberRule",
    "right" : "TimeZoneNumberRule",
    "info" : "SimpleName[52555-52573]:SimpleName[52600-52618]"
  }, {
    "left" : "boolean colon",
    "right" : "boolean colon",
    "info" : "SingleVariableDeclaration[52574-52587]:SingleVariableDeclaration[52619-52632]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52589-52628]:Block[52634-52673]"
  }, {
    "left" : "mColon = colon;",
    "right" : "mColon = colon;",
    "info" : "ExpressionStatement[52603-52618]:ExpressionStatement[52648-52663]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52687-52693]:Modifier[52732-52738]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[52694-52697]:PrimitiveType[52739-52742]"
  }, {
    "left" : "estimateLength",
    "right" : "estimateLength",
    "info" : "SimpleName[52698-52712]:SimpleName[52743-52757]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52715-52748]:Block[52760-52793]"
  }, {
    "left" : "return 5;",
    "right" : "return 5;",
    "info" : "ReturnStatement[52729-52738]:ReturnStatement[52774-52783]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52807-52813]:Modifier[52852-52858]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[52814-52818]:PrimitiveType[52859-52863]"
  }, {
    "left" : "appendTo",
    "right" : "appendTo",
    "info" : "SimpleName[52819-52827]:SimpleName[52864-52872]"
  }, {
    "left" : "StringBuffer buffer",
    "right" : "StringBuffer buffer",
    "info" : "SingleVariableDeclaration[52828-52847]:SingleVariableDeclaration[52873-52892]"
  }, {
    "left" : "Calendar calendar",
    "right" : "Calendar calendar",
    "info" : "SingleVariableDeclaration[52849-52866]:SingleVariableDeclaration[52894-52911]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52868-53603]:Block[52913-53648]"
  }, {
    "left" : "int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);",
    "right" : "int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);",
    "info" : "VariableDeclarationStatement[52882-52966]:VariableDeclarationStatement[52927-53011]"
  }, {
    "left" : "if (offset < 0)",
    "right" : "if (offset < 0)",
    "info" : "IfStatement[52992-53150]:IfStatement[53037-53195]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53008-53093]:Block[53053-53138]"
  }, {
    "left" : "buffer.append('-');",
    "right" : "buffer.append('-');",
    "info" : "ExpressionStatement[53026-53045]:ExpressionStatement[53071-53090]"
  }, {
    "left" : "offset = -offset;",
    "right" : "offset = -offset;",
    "info" : "ExpressionStatement[53062-53079]:ExpressionStatement[53107-53124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53099-53150]:Block[53144-53195]"
  }, {
    "left" : "buffer.append('+');",
    "right" : "buffer.append('+');",
    "info" : "ExpressionStatement[53117-53136]:ExpressionStatement[53162-53181]"
  }, {
    "left" : "int hours = offset / (60 * 60 * 1000);",
    "right" : "int hours = offset / (60 * 60 * 1000);",
    "info" : "VariableDeclarationStatement[53176-53214]:VariableDeclarationStatement[53221-53259]"
  }, {
    "left" : "buffer.append((char)(hours / 10 + '0'));",
    "right" : "buffer.append((char)(hours / 10 + '0'));",
    "info" : "ExpressionStatement[53227-53267]:ExpressionStatement[53272-53312]"
  }, {
    "left" : "buffer.append((char)(hours % 10 + '0'));",
    "right" : "buffer.append((char)(hours % 10 + '0'));",
    "info" : "ExpressionStatement[53280-53320]:ExpressionStatement[53325-53365]"
  }, {
    "left" : "if (mColon)",
    "right" : "if (mColon)",
    "info" : "IfStatement[53346-53409]:IfStatement[53391-53454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53358-53409]:Block[53403-53454]"
  }, {
    "left" : "buffer.append(':');",
    "right" : "buffer.append(':');",
    "info" : "ExpressionStatement[53376-53395]:ExpressionStatement[53421-53440]"
  }, {
    "left" : "int minutes = offset / (60 * 1000) - 60 * hours;",
    "right" : "int minutes = offset / (60 * 1000) - 60 * hours;",
    "info" : "VariableDeclarationStatement[53435-53483]:VariableDeclarationStatement[53480-53528]"
  }, {
    "left" : "buffer.append((char)(minutes / 10 + '0'));",
    "right" : "buffer.append((char)(minutes / 10 + '0'));",
    "info" : "ExpressionStatement[53496-53538]:ExpressionStatement[53541-53583]"
  }, {
    "left" : "buffer.append((char)(minutes % 10 + '0'));",
    "right" : "buffer.append((char)(minutes % 10 + '0'));",
    "info" : "ExpressionStatement[53551-53593]:ExpressionStatement[53596-53638]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[53796-53803]:Modifier[53841-53848]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[53804-53810]:Modifier[53849-53855]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[53811-53816]:TYPE_DECLARATION_KIND[53856-53861]"
  }, {
    "left" : "TimeZoneDisplayKey",
    "right" : "TimeZoneDisplayKey",
    "info" : "SimpleName[54317-54335]:SimpleName[54362-54380]"
  }, {
    "left" : "TimeZone timeZone",
    "right" : "TimeZone timeZone",
    "info" : "SingleVariableDeclaration[54336-54353]:SingleVariableDeclaration[54381-54398]"
  }, {
    "left" : "boolean daylight",
    "right" : "boolean daylight",
    "info" : "SingleVariableDeclaration[54382-54398]:SingleVariableDeclaration[54427-54443]"
  }, {
    "left" : "int style",
    "right" : "int style",
    "info" : "SingleVariableDeclaration[54400-54409]:SingleVariableDeclaration[54445-54454]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[54411-54424]:SingleVariableDeclaration[54456-54469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54426-54608]:Block[54471-54653]"
  }, {
    "left" : "mTimeZone = timeZone;",
    "right" : "mTimeZone = timeZone;",
    "info" : "ExpressionStatement[54440-54461]:ExpressionStatement[54485-54506]"
  }, {
    "left" : "if (daylight)",
    "right" : "if (daylight)",
    "info" : "IfStatement[54474-54540]:IfStatement[54519-54585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54488-54540]:Block[54533-54585]"
  }, {
    "left" : "style |= 0x80000000;",
    "right" : "style |= 0x80000000;",
    "info" : "ExpressionStatement[54506-54526]:ExpressionStatement[54551-54571]"
  }, {
    "left" : "mStyle = style;",
    "right" : "mStyle = style;",
    "info" : "ExpressionStatement[54553-54568]:ExpressionStatement[54598-54613]"
  }, {
    "left" : "mLocale = locale;",
    "right" : "mLocale = locale;",
    "info" : "ExpressionStatement[54581-54598]:ExpressionStatement[54626-54643]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[54667-54676]:MarkerAnnotation[54712-54721]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54685-54691]:Modifier[54730-54736]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[54692-54695]:PrimitiveType[54737-54740]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[54696-54704]:SimpleName[54741-54749]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54707-54771]:Block[54752-54816]"
  }, {
    "left" : "return mStyle * 31 + mLocale.hashCode();",
    "right" : "return mStyle * 31 + mLocale.hashCode();",
    "info" : "ReturnStatement[54721-54761]:ReturnStatement[54766-54806]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[54830-54839]:MarkerAnnotation[54875-54884]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54848-54854]:Modifier[54893-54899]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[54855-54862]:PrimitiveType[54900-54907]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[54863-54869]:SimpleName[54908-54914]"
  }, {
    "left" : "Object obj",
    "right" : "Object obj",
    "info" : "SingleVariableDeclaration[54870-54880]:SingleVariableDeclaration[54915-54925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54882-55305]:Block[54927-55350]"
  }, {
    "left" : "if (this == obj)",
    "right" : "if (this == obj)",
    "info" : "IfStatement[54896-54957]:IfStatement[54941-55002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54913-54957]:Block[54958-55002]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[54931-54943]:ReturnStatement[54976-54988]"
  }, {
    "left" : "if (obj instanceof TimeZoneDisplayKey)",
    "right" : "if (obj instanceof TimeZoneDisplayKey)",
    "info" : "IfStatement[54970-55269]:IfStatement[55015-55314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55009-55269]:Block[55054-55314]"
  }, {
    "left" : "TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;",
    "right" : "TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;",
    "info" : "VariableDeclarationStatement[55027-55078]:VariableDeclarationStatement[55072-55123]"
  }, {
    "left" : "return\n                    mTimeZone.equals(other.mTimeZone) &&\n                    mStyle == other.mStyle &&\n                    mLocale.equals(other.mLocale);",
    "right" : "return\n                    mTimeZone.equals(other.mTimeZone) &&\n                    mStyle == other.mStyle &&\n                    mLocale.equals(other.mLocale);",
    "info" : "ReturnStatement[55095-55255]:ReturnStatement[55140-55300]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[55282-55295]:ReturnStatement[55327-55340]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[55574-55581]:Modifier[55619-55626]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[55582-55588]:Modifier[55627-55633]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[55589-55594]:TYPE_DECLARATION_KIND[55634-55639]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55888-55894]:Modifier[55933-55939]"
  }, {
    "left" : "Pair",
    "right" : "Pair",
    "info" : "SimpleName[55895-55899]:SimpleName[55940-55944]"
  }, {
    "left" : "Object obj1",
    "right" : "Object obj1",
    "info" : "SingleVariableDeclaration[55900-55911]:SingleVariableDeclaration[55945-55956]"
  }, {
    "left" : "Object obj2",
    "right" : "Object obj2",
    "info" : "SingleVariableDeclaration[55913-55924]:SingleVariableDeclaration[55958-55969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55926-55989]:Block[55971-56034]"
  }, {
    "left" : "mObj1 = obj1;",
    "right" : "mObj1 = obj1;",
    "info" : "ExpressionStatement[55940-55953]:ExpressionStatement[55985-55998]"
  }, {
    "left" : "mObj2 = obj2;",
    "right" : "mObj2 = obj2;",
    "info" : "ExpressionStatement[55966-55979]:ExpressionStatement[56011-56024]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[56048-56057]:MarkerAnnotation[56093-56102]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56066-56072]:Modifier[56111-56117]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[56073-56080]:PrimitiveType[56118-56125]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[56081-56087]:SimpleName[56126-56132]"
  }, {
    "left" : "Object obj",
    "right" : "Object obj",
    "info" : "SingleVariableDeclaration[56088-56098]:SingleVariableDeclaration[56133-56143]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56100-56521]:Block[56145-56566]"
  }, {
    "left" : "if (this == obj)",
    "right" : "if (this == obj)",
    "info" : "IfStatement[56114-56175]:IfStatement[56159-56220]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56131-56175]:Block[56176-56220]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[56149-56161]:ReturnStatement[56194-56206]"
  }, {
    "left" : "if (!(obj instanceof Pair))",
    "right" : "if (!(obj instanceof Pair))",
    "info" : "IfStatement[56189-56262]:IfStatement[56234-56307]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56217-56262]:Block[56262-56307]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[56235-56248]:ReturnStatement[56280-56293]"
  }, {
    "left" : "Pair key = (Pair)obj;",
    "right" : "Pair key = (Pair)obj;",
    "info" : "VariableDeclarationStatement[56276-56297]:VariableDeclarationStatement[56321-56342]"
  }, {
    "left" : "return\n                (mObj1 == null ?\n                 key.mObj1 == null : mObj1.equals(key.mObj1)) &&\n                (mObj2 == null ?\n                 key.mObj2 == null : mObj2.equals(key.mObj2));",
    "right" : "return\n                (mObj1 == null ?\n                 key.mObj1 == null : mObj1.equals(key.mObj1)) &&\n                (mObj2 == null ?\n                 key.mObj2 == null : mObj2.equals(key.mObj2));",
    "info" : "ReturnStatement[56311-56511]:ReturnStatement[56356-56556]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[56580-56589]:MarkerAnnotation[56625-56634]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56598-56604]:Modifier[56643-56649]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[56605-56608]:PrimitiveType[56650-56653]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[56609-56617]:SimpleName[56654-56662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56620-56763]:Block[56665-56808]"
  }, {
    "left" : "return\n                (mObj1 == null ? 0 : mObj1.hashCode()) +\n                (mObj2 == null ? 0 : mObj2.hashCode());",
    "right" : "return\n                (mObj1 == null ? 0 : mObj1.hashCode()) +\n                (mObj2 == null ? 0 : mObj2.hashCode());",
    "info" : "ReturnStatement[56634-56753]:ReturnStatement[56679-56798]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[56822-56831]:MarkerAnnotation[56867-56876]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56840-56846]:Modifier[56885-56891]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[56847-56853]:SimpleType[56892-56898]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[56854-56862]:SimpleName[56899-56907]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56865-56928]:Block[56910-56973]"
  }, {
    "left" : "return \"[\" + mObj1 + ':' + mObj2 + ']';",
    "right" : "return \"[\" + mObj1 + ':' + mObj2 + ']';",
    "info" : "ReturnStatement[56879-56918]:ReturnStatement[56924-56963]"
  } ]
}