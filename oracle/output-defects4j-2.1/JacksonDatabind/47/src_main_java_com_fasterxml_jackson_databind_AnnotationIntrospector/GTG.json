{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "AnnotationIntrospector",
      "right" : "AnnotationIntrospector",
      "info" : "TypeDeclaration[1228-56331]:TypeDeclaration[1228-56931]"
    }, {
      "left" : "ReferenceProperty",
      "right" : "ReferenceProperty",
      "info" : "TypeDeclaration[2443-4142]:TypeDeclaration[2443-4142]"
    }, {
      "left" : "enum : Type",
      "right" : "enum : Type",
      "info" : "EnumDeclaration[2637-3432]:EnumDeclaration[2637-3432]"
    }, {
      "left" : "private final Type _type;",
      "right" : "private final Type _type;",
      "info" : "FieldDeclaration[3442-3467]:FieldDeclaration[3442-3467]"
    }, {
      "left" : "private final String _name;",
      "right" : "private final String _name;",
      "info" : "FieldDeclaration[3476-3503]:FieldDeclaration[3476-3503]"
    }, {
      "left" : "public ReferenceProperty(Type t, String n)",
      "right" : "public ReferenceProperty(Type t, String n)",
      "info" : "MethodDeclaration[3513-3613]:MethodDeclaration[3513-3613]"
    }, {
      "left" : "public static ReferenceProperty managed(String name)",
      "right" : "public static ReferenceProperty managed(String name)",
      "info" : "MethodDeclaration[3623-3739]:MethodDeclaration[3623-3739]"
    }, {
      "left" : "public static ReferenceProperty back(String name)",
      "right" : "public static ReferenceProperty back(String name)",
      "info" : "MethodDeclaration[3748-3858]:MethodDeclaration[3748-3858]"
    }, {
      "left" : "public Type getType()",
      "right" : "public Type getType()",
      "info" : "MethodDeclaration[3876-3915]:MethodDeclaration[3876-3915]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[3924-3965]:MethodDeclaration[3924-3965]"
    }, {
      "left" : "public boolean isManagedReference()",
      "right" : "public boolean isManagedReference()",
      "info" : "MethodDeclaration[3975-4054]:MethodDeclaration[3975-4054]"
    }, {
      "left" : "public boolean isBackReference()",
      "right" : "public boolean isBackReference()",
      "info" : "MethodDeclaration[4063-4136]:MethodDeclaration[4063-4136]"
    }, {
      "left" : "public static AnnotationIntrospector nopInstance()",
      "right" : "public static AnnotationIntrospector nopInstance()",
      "info" : "MethodDeclaration[4323-4611]:MethodDeclaration[4323-4611]"
    }, {
      "left" : "public static AnnotationIntrospector pair(AnnotationIntrospector a1, AnnotationIntrospector a2)",
      "right" : "public static AnnotationIntrospector pair(AnnotationIntrospector a1, AnnotationIntrospector a2)",
      "info" : "MethodDeclaration[4617-4775]:MethodDeclaration[4617-4775]"
    }, {
      "left" : "public Collection<AnnotationIntrospector> allIntrospectors()",
      "right" : "public Collection<AnnotationIntrospector> allIntrospectors()",
      "info" : "MethodDeclaration[4973-5610]:MethodDeclaration[4973-5610]"
    }, {
      "left" : "public Collection<AnnotationIntrospector> allIntrospectors(Collection<AnnotationIntrospector> result)",
      "right" : "public Collection<AnnotationIntrospector> allIntrospectors(Collection<AnnotationIntrospector> result)",
      "info" : "MethodDeclaration[5620-6265]:MethodDeclaration[5620-6265]"
    }, {
      "left" : "public abstract Version version();",
      "right" : "public abstract Version version();",
      "info" : "MethodDeclaration[6449-6497]:MethodDeclaration[6449-6497]"
    }, {
      "left" : "public boolean isAnnotationBundle(Annotation ann)",
      "right" : "public boolean isAnnotationBundle(Annotation ann)",
      "info" : "MethodDeclaration[6710-7022]:MethodDeclaration[6710-7022]"
    }, {
      "left" : "public ObjectIdInfo findObjectIdInfo(Annotated ann)",
      "right" : "public ObjectIdInfo findObjectIdInfo(Annotated ann)",
      "info" : "MethodDeclaration[7218-7677]:MethodDeclaration[7218-7677]"
    }, {
      "left" : "public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo)",
      "right" : "public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo)",
      "info" : "MethodDeclaration[7683-7932]:MethodDeclaration[7683-7932]"
    }, {
      "left" : "public PropertyName findRootName(AnnotatedClass ac)",
      "right" : "public PropertyName findRootName(AnnotatedClass ac)",
      "info" : "MethodDeclaration[8115-8660]:MethodDeclaration[8115-8660]"
    }, {
      "left" : "public String[] findPropertiesToIgnore(Annotated ac, boolean forSerialization)",
      "right" : "public String[] findPropertiesToIgnore(Annotated ac, boolean forSerialization)",
      "info" : "MethodDeclaration[8666-9209]:MethodDeclaration[8666-9209]"
    }, {
      "left" : "public String[] findPropertiesToIgnore(Annotated ac)",
      "right" : "public String[] findPropertiesToIgnore(Annotated ac)",
      "info" : "MethodDeclaration[9215-9499]:MethodDeclaration[9215-9499]"
    }, {
      "left" : "public Boolean findIgnoreUnknownProperties(AnnotatedClass ac)",
      "right" : "public Boolean findIgnoreUnknownProperties(AnnotatedClass ac)",
      "info" : "MethodDeclaration[9509-9690]:MethodDeclaration[9509-9690]"
    }, {
      "left" : "public Boolean isIgnorableType(AnnotatedClass ac)",
      "right" : "public Boolean isIgnorableType(AnnotatedClass ac)",
      "info" : "MethodDeclaration[9696-10200]:MethodDeclaration[9696-10200]"
    }, {
      "left" : "public Object findFilterId(Annotated ann)",
      "right" : "public Object findFilterId(Annotated ann)",
      "info" : "MethodDeclaration[10206-10543]:MethodDeclaration[10206-10543]"
    }, {
      "left" : "public Object findNamingStrategy(AnnotatedClass ac)",
      "right" : "public Object findNamingStrategy(AnnotatedClass ac)",
      "info" : "MethodDeclaration[10549-11032]:MethodDeclaration[10549-11032]"
    }, {
      "left" : "public String findClassDescription(AnnotatedClass ac)",
      "right" : "public String findClassDescription(AnnotatedClass ac)",
      "info" : "MethodDeclaration[11038-11514]:MethodDeclaration[11038-11514]"
    }, {
      "left" : "public VisibilityChecker<?> findAutoDetectVisibility(AnnotatedClass ac, VisibilityChecker<?> checker)",
      "right" : "public VisibilityChecker<?> findAutoDetectVisibility(AnnotatedClass ac, VisibilityChecker<?> checker)",
      "info" : "MethodDeclaration[11695-12215]:MethodDeclaration[11695-12215]"
    }, {
      "left" : "public TypeResolverBuilder<?> findTypeResolver(MapperConfig<?> config,\n            AnnotatedClass ac, JavaType baseType)",
      "right" : "public TypeResolverBuilder<?> findTypeResolver(MapperConfig<?> config,\n            AnnotatedClass ac, JavaType baseType)",
      "info" : "MethodDeclaration[12421-13261]:MethodDeclaration[12421-13261]"
    }, {
      "left" : "public TypeResolverBuilder<?> findPropertyTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType baseType)",
      "right" : "public TypeResolverBuilder<?> findPropertyTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType baseType)",
      "info" : "MethodDeclaration[13267-14192]:MethodDeclaration[13267-14192]"
    }, {
      "left" : "public TypeResolverBuilder<?> findPropertyContentTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType containerType)",
      "right" : "public TypeResolverBuilder<?> findPropertyContentTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType containerType)",
      "info" : "MethodDeclaration[14198-15289]:MethodDeclaration[14198-15289]"
    }, {
      "left" : "public List<NamedType> findSubtypes(Annotated a)",
      "right" : "public List<NamedType> findSubtypes(Annotated a)",
      "info" : "MethodDeclaration[15295-15760]:MethodDeclaration[15295-15760]"
    }, {
      "left" : "public String findTypeName(AnnotatedClass ac)",
      "right" : "public String findTypeName(AnnotatedClass ac)",
      "info" : "MethodDeclaration[15766-15974]:MethodDeclaration[15766-15974]"
    }, {
      "left" : "public Boolean isTypeId(AnnotatedMember member)",
      "right" : "public Boolean isTypeId(AnnotatedMember member)",
      "info" : "MethodDeclaration[15980-16228]:MethodDeclaration[15980-16228]"
    }, {
      "left" : "public ReferenceProperty findReferenceType(AnnotatedMember member)",
      "right" : "public ReferenceProperty findReferenceType(AnnotatedMember member)",
      "info" : "MethodDeclaration[16440-16646]:MethodDeclaration[16440-16646]"
    }, {
      "left" : "public NameTransformer findUnwrappingNameTransformer(AnnotatedMember member)",
      "right" : "public NameTransformer findUnwrappingNameTransformer(AnnotatedMember member)",
      "info" : "MethodDeclaration[16652-17193]:MethodDeclaration[16652-17193]"
    }, {
      "left" : "public boolean hasIgnoreMarker(AnnotatedMember m)",
      "right" : "public boolean hasIgnoreMarker(AnnotatedMember m)",
      "info" : "MethodDeclaration[17199-17573]:MethodDeclaration[17199-17573]"
    }, {
      "left" : "public Object findInjectableValueId(AnnotatedMember m)",
      "right" : "public Object findInjectableValueId(AnnotatedMember m)",
      "info" : "MethodDeclaration[17579-18147]:MethodDeclaration[17579-18147]"
    }, {
      "left" : "public Boolean hasRequiredMarker(AnnotatedMember m)",
      "right" : "public Boolean hasRequiredMarker(AnnotatedMember m)",
      "info" : "MethodDeclaration[18153-18427]:MethodDeclaration[18153-18427]"
    }, {
      "left" : "public Class<?>[] findViews(Annotated a)",
      "right" : "public Class<?>[] findViews(Annotated a)",
      "info" : "MethodDeclaration[18437-19305]:MethodDeclaration[18437-19305]"
    }, {
      "left" : "public JsonFormat.Value findFormat(Annotated memberOrClass)",
      "right" : "public JsonFormat.Value findFormat(Annotated memberOrClass)",
      "info" : "MethodDeclaration[19311-19644]:MethodDeclaration[19311-19644]"
    }, {
      "left" : "public PropertyName findWrapperName(Annotated ann)",
      "right" : "public PropertyName findWrapperName(Annotated ann)",
      "info" : "MethodDeclaration[19650-20203]:MethodDeclaration[19650-20203]"
    }, {
      "left" : "public String findPropertyDefaultValue(Annotated ann)",
      "right" : "public String findPropertyDefaultValue(Annotated ann)",
      "info" : "MethodDeclaration[20209-20611]:MethodDeclaration[20209-20611]"
    }, {
      "left" : "public String findPropertyDescription(Annotated ann)",
      "right" : "public String findPropertyDescription(Annotated ann)",
      "info" : "MethodDeclaration[20617-21071]:MethodDeclaration[20617-21071]"
    }, {
      "left" : "public Integer findPropertyIndex(Annotated ann)",
      "right" : "public Integer findPropertyIndex(Annotated ann)",
      "info" : "MethodDeclaration[21077-21636]:MethodDeclaration[21077-21636]"
    }, {
      "left" : "public String findImplicitPropertyName(AnnotatedMember member)",
      "right" : "public String findImplicitPropertyName(AnnotatedMember member)",
      "info" : "MethodDeclaration[21642-22404]:MethodDeclaration[21642-22404]"
    }, {
      "left" : "public JsonProperty.Access findPropertyAccess(Annotated ann)",
      "right" : "public JsonProperty.Access findPropertyAccess(Annotated ann)",
      "info" : "MethodDeclaration[22410-22906]:MethodDeclaration[22410-22906]"
    }, {
      "left" : "public AnnotatedMethod resolveSetterConflict(MapperConfig<?> config,\n            AnnotatedMethod setter1, AnnotatedMethod setter2)",
      "right" : "public AnnotatedMethod resolveSetterConflict(MapperConfig<?> config,\n            AnnotatedMethod setter1, AnnotatedMethod setter2)",
      "info" : "MethodDeclaration[22912-23424]:MethodDeclaration[22912-23424]"
    }, {
      "left" : "public Object findSerializer(Annotated am)",
      "right" : "public Object findSerializer(Annotated am)",
      "info" : "MethodDeclaration[23616-24025]:MethodDeclaration[23616-24025]"
    }, {
      "left" : "public Object findKeySerializer(Annotated am)",
      "right" : "public Object findKeySerializer(Annotated am)",
      "info" : "MethodDeclaration[24031-24463]:MethodDeclaration[24031-24463]"
    }, {
      "left" : "public Object findContentSerializer(Annotated am)",
      "right" : "public Object findContentSerializer(Annotated am)",
      "info" : "MethodDeclaration[24469-24971]:MethodDeclaration[24469-24971]"
    }, {
      "left" : "public Object findNullSerializer(Annotated am)",
      "right" : "public Object findNullSerializer(Annotated am)",
      "info" : "MethodDeclaration[24977-25229]:MethodDeclaration[24977-25229]"
    }, {
      "left" : "public JsonSerialize.Typing findSerializationTyping(Annotated a)",
      "right" : "public JsonSerialize.Typing findSerializationTyping(Annotated a)",
      "info" : "MethodDeclaration[25235-25687]:MethodDeclaration[25235-25687]"
    }, {
      "left" : "public Object findSerializationConverter(Annotated a)",
      "right" : "public Object findSerializationConverter(Annotated a)",
      "info" : "MethodDeclaration[25693-26725]:MethodDeclaration[25693-26725]"
    }, {
      "left" : "public Object findSerializationContentConverter(AnnotatedMember a)",
      "right" : "public Object findSerializationContentConverter(AnnotatedMember a)",
      "info" : "MethodDeclaration[26731-27591]:MethodDeclaration[26731-27591]"
    }, {
      "left" : "// since 2.7\n    public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue)",
      "right" : "// since 2.7\n    public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue)",
      "info" : "MethodDeclaration[27597-28520]:MethodDeclaration[27597-28520]"
    }, {
      "left" : "// since 2.7\n    public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)",
      "right" : "// since 2.7\n    public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)",
      "info" : "MethodDeclaration[28526-29043]:MethodDeclaration[28526-29043]"
    }, {
      "left" : "public JsonInclude.Value findPropertyInclusion(Annotated a)",
      "right" : "public JsonInclude.Value findPropertyInclusion(Annotated a)",
      "info" : "MethodDeclaration[29049-29513]:MethodDeclaration[29049-29513]"
    }, {
      "left" : "// since 2.7\n    public Class<?> findSerializationType(Annotated a)",
      "right" : "// since 2.7\n    public Class<?> findSerializationType(Annotated a)",
      "info" : "MethodDeclaration[29702-30284]:MethodDeclaration[29702-30284]"
    }, {
      "left" : "// since 2.7\n    public Class<?> findSerializationKeyType(Annotated am, JavaType baseType)",
      "right" : "// since 2.7\n    public Class<?> findSerializationKeyType(Annotated am, JavaType baseType)",
      "info" : "MethodDeclaration[30290-30877]:MethodDeclaration[30290-30877]"
    }, {
      "left" : "// since 2.7\n    public Class<?> findSerializationContentType(Annotated am, JavaType baseType)",
      "right" : "// since 2.7\n    public Class<?> findSerializationContentType(Annotated am, JavaType baseType)",
      "info" : "MethodDeclaration[30883-31488]:MethodDeclaration[30883-31488]"
    }, {
      "left" : "public JavaType refineSerializationType(final MapperConfig<?> config,\n            final Annotated a, final JavaType baseType) throws JsonMappingException",
      "right" : "public JavaType refineSerializationType(final MapperConfig<?> config,\n            final Annotated a, final JavaType baseType) throws JsonMappingException",
      "info" : "MethodDeclaration[31494-37323]:MethodDeclaration[31494-37923]"
    }, {
      "left" : "public String[] findSerializationPropertyOrder(AnnotatedClass ac)",
      "right" : "public String[] findSerializationPropertyOrder(AnnotatedClass ac)",
      "info" : "MethodDeclaration[37513-37762]:MethodDeclaration[38113-38362]"
    }, {
      "left" : "public Boolean findSerializationSortAlphabetically(Annotated ann)",
      "right" : "public Boolean findSerializationSortAlphabetically(Annotated ann)",
      "info" : "MethodDeclaration[37768-38063]:MethodDeclaration[38368-38663]"
    }, {
      "left" : "public void findAndAddVirtualProperties(MapperConfig<?> config, AnnotatedClass ac,\n            List<BeanPropertyWriter> properties)",
      "right" : "public void findAndAddVirtualProperties(MapperConfig<?> config, AnnotatedClass ac,\n            List<BeanPropertyWriter> properties)",
      "info" : "MethodDeclaration[38069-38354]:MethodDeclaration[38669-38954]"
    }, {
      "left" : "public PropertyName findNameForSerialization(Annotated a)",
      "right" : "public PropertyName findNameForSerialization(Annotated a)",
      "info" : "MethodDeclaration[38551-39362]:MethodDeclaration[39151-39962]"
    }, {
      "left" : "public boolean hasAsValueAnnotation(AnnotatedMethod am)",
      "right" : "public boolean hasAsValueAnnotation(AnnotatedMethod am)",
      "info" : "MethodDeclaration[39368-39859]:MethodDeclaration[39968-40459]"
    }, {
      "left" : "public String findEnumValue(Enum<?> value)",
      "right" : "public String findEnumValue(Enum<?> value)",
      "info" : "MethodDeclaration[39896-40214]:MethodDeclaration[40496-40814]"
    }, {
      "left" : "public  String[] findEnumValues(Class<?> enumType, Enum<?>[] enumValues, String[] names)",
      "right" : "public  String[] findEnumValues(Class<?> enumType, Enum<?>[] enumValues, String[] names)",
      "info" : "MethodDeclaration[40220-41383]:MethodDeclaration[40820-41983]"
    }, {
      "left" : "public Object findDeserializer(Annotated am)",
      "right" : "public Object findDeserializer(Annotated am)",
      "info" : "MethodDeclaration[41577-42001]:MethodDeclaration[42177-42601]"
    }, {
      "left" : "public Object findKeyDeserializer(Annotated am)",
      "right" : "public Object findKeyDeserializer(Annotated am)",
      "info" : "MethodDeclaration[42007-42454]:MethodDeclaration[42607-43054]"
    }, {
      "left" : "public Object findContentDeserializer(Annotated am)",
      "right" : "public Object findContentDeserializer(Annotated am)",
      "info" : "MethodDeclaration[42460-42977]:MethodDeclaration[43060-43577]"
    }, {
      "left" : "public Object findDeserializationConverter(Annotated a)",
      "right" : "public Object findDeserializationConverter(Annotated a)",
      "info" : "MethodDeclaration[42983-44116]:MethodDeclaration[43583-44716]"
    }, {
      "left" : "public Object findDeserializationContentConverter(AnnotatedMember a)",
      "right" : "public Object findDeserializationContentConverter(AnnotatedMember a)",
      "info" : "MethodDeclaration[44122-45029]:MethodDeclaration[44722-45629]"
    }, {
      "left" : "public JavaType refineDeserializationType(final MapperConfig<?> config,\n            final Annotated a, final JavaType baseType) throws JsonMappingException",
      "right" : "public JavaType refineDeserializationType(final MapperConfig<?> config,\n            final Annotated a, final JavaType baseType) throws JsonMappingException",
      "info" : "MethodDeclaration[45220-48427]:MethodDeclaration[45820-49027]"
    }, {
      "left" : "public Class<?> findDeserializationType(Annotated am, JavaType baseType)",
      "right" : "public Class<?> findDeserializationType(Annotated am, JavaType baseType)",
      "info" : "MethodDeclaration[48437-49133]:MethodDeclaration[49037-49733]"
    }, {
      "left" : "public Class<?> findDeserializationKeyType(Annotated am, JavaType baseKeyType)",
      "right" : "public Class<?> findDeserializationKeyType(Annotated am, JavaType baseKeyType)",
      "info" : "MethodDeclaration[49143-49785]:MethodDeclaration[49743-50385]"
    }, {
      "left" : "public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType)",
      "right" : "public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType)",
      "info" : "MethodDeclaration[49791-50532]:MethodDeclaration[50391-51132]"
    }, {
      "left" : "public Object findValueInstantiator(AnnotatedClass ac)",
      "right" : "public Object findValueInstantiator(AnnotatedClass ac)",
      "info" : "MethodDeclaration[50724-51008]:MethodDeclaration[51324-51608]"
    }, {
      "left" : "public Class<?> findPOJOBuilder(AnnotatedClass ac)",
      "right" : "public Class<?> findPOJOBuilder(AnnotatedClass ac)",
      "info" : "MethodDeclaration[51014-51604]:MethodDeclaration[51614-52204]"
    }, {
      "left" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig(AnnotatedClass ac)",
      "right" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig(AnnotatedClass ac)",
      "info" : "MethodDeclaration[51610-51742]:MethodDeclaration[52210-52342]"
    }, {
      "left" : "public PropertyName findNameForDeserialization(Annotated a)",
      "right" : "public PropertyName findNameForDeserialization(Annotated a)",
      "info" : "MethodDeclaration[51941-52782]:MethodDeclaration[52541-53382]"
    }, {
      "left" : "public boolean hasAnySetterAnnotation(AnnotatedMethod am)",
      "right" : "public boolean hasAnySetterAnnotation(AnnotatedMethod am)",
      "info" : "MethodDeclaration[52792-53246]:MethodDeclaration[53392-53846]"
    }, {
      "left" : "public boolean hasAnyGetterAnnotation(AnnotatedMethod am)",
      "right" : "public boolean hasAnyGetterAnnotation(AnnotatedMethod am)",
      "info" : "MethodDeclaration[53252-53724]:MethodDeclaration[53852-54324]"
    }, {
      "left" : "public boolean hasCreatorAnnotation(Annotated a)",
      "right" : "public boolean hasCreatorAnnotation(Annotated a)",
      "info" : "MethodDeclaration[53734-54184]:MethodDeclaration[54334-54784]"
    }, {
      "left" : "public JsonCreator.Mode findCreatorBinding(Annotated a)",
      "right" : "public JsonCreator.Mode findCreatorBinding(Annotated a)",
      "info" : "MethodDeclaration[54190-54607]:MethodDeclaration[54790-55207]"
    }, {
      "left" : "protected <A extends Annotation> A _findAnnotation(Annotated annotated,\n            Class<A> annoClass)",
      "right" : "protected <A extends Annotation> A _findAnnotation(Annotated annotated,\n            Class<A> annoClass)",
      "info" : "MethodDeclaration[54839-55413]:MethodDeclaration[55439-56013]"
    }, {
      "left" : "protected boolean _hasAnnotation(Annotated annotated, Class<? extends Annotation> annoClass)",
      "right" : "protected boolean _hasAnnotation(Annotated annotated, Class<? extends Annotation> annoClass)",
      "info" : "MethodDeclaration[55419-55993]:MethodDeclaration[56019-56593]"
    }, {
      "left" : "protected boolean _hasOneOf(Annotated annotated, Class<? extends Annotation>[] annoClasses)",
      "right" : "protected boolean _hasOneOf(Annotated annotated, Class<? extends Annotation>[] annoClasses)",
      "info" : "MethodDeclaration[55999-56329]:MethodDeclaration[56599-56929]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3556-3613]:Block[3556-3613]"
    }, {
      "left" : "_type = t;",
      "right" : "_type = t;",
      "info" : "ExpressionStatement[3570-3580]:ExpressionStatement[3570-3580]"
    }, {
      "left" : "_name = n;",
      "right" : "_name = n;",
      "info" : "ExpressionStatement[3593-3603]:ExpressionStatement[3593-3603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3676-3739]:Block[3676-3739]"
    }, {
      "left" : "return new ReferenceProperty(Type.MANAGED_REFERENCE, name);",
      "right" : "return new ReferenceProperty(Type.MANAGED_REFERENCE, name);",
      "info" : "ReturnStatement[3678-3737]:ReturnStatement[3678-3737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3798-3858]:Block[3798-3858]"
    }, {
      "left" : "return new ReferenceProperty(Type.BACK_REFERENCE, name);",
      "right" : "return new ReferenceProperty(Type.BACK_REFERENCE, name);",
      "info" : "ReturnStatement[3800-3856]:ReturnStatement[3800-3856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3898-3915]:Block[3898-3915]"
    }, {
      "left" : "return _type;",
      "right" : "return _type;",
      "info" : "ReturnStatement[3900-3913]:ReturnStatement[3900-3913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3948-3965]:Block[3948-3965]"
    }, {
      "left" : "return _name;",
      "right" : "return _name;",
      "info" : "ReturnStatement[3950-3963]:ReturnStatement[3950-3963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4011-4054]:Block[4011-4054]"
    }, {
      "left" : "return _type == Type.MANAGED_REFERENCE;",
      "right" : "return _type == Type.MANAGED_REFERENCE;",
      "info" : "ReturnStatement[4013-4052]:ReturnStatement[4013-4052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4096-4136]:Block[4096-4136]"
    }, {
      "left" : "return _type == Type.BACK_REFERENCE;",
      "right" : "return _type == Type.BACK_REFERENCE;",
      "info" : "ReturnStatement[4098-4134]:ReturnStatement[4098-4134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4553-4611]:Block[4553-4611]"
    }, {
      "left" : "return NopAnnotationIntrospector.instance;",
      "right" : "return NopAnnotationIntrospector.instance;",
      "info" : "ReturnStatement[4563-4605]:ReturnStatement[4563-4605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4713-4775]:Block[4713-4775]"
    }, {
      "left" : "return new AnnotationIntrospectorPair(a1, a2);",
      "right" : "return new AnnotationIntrospectorPair(a1, a2);",
      "info" : "ReturnStatement[4723-4769]:ReturnStatement[4723-4769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5555-5610]:Block[5555-5610]"
    }, {
      "left" : "return Collections.singletonList(this);",
      "right" : "return Collections.singletonList(this);",
      "info" : "ReturnStatement[5565-5604]:ReturnStatement[5565-5604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6209-6265]:Block[6209-6265]"
    }, {
      "left" : "result.add(this);",
      "right" : "result.add(this);",
      "info" : "ExpressionStatement[6219-6236]:ExpressionStatement[6219-6236]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[6245-6259]:ReturnStatement[6245-6259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6993-7022]:Block[6993-7022]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7003-7016]:ReturnStatement[7003-7016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7649-7677]:Block[7649-7677]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7659-7671]:ReturnStatement[7659-7671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7896-7932]:Block[7896-7932]"
    }, {
      "left" : "return objectIdInfo;",
      "right" : "return objectIdInfo;",
      "info" : "ReturnStatement[7906-7926]:ReturnStatement[7906-7926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8632-8660]:Block[8632-8660]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8642-8654]:ReturnStatement[8642-8654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9181-9209]:Block[9181-9209]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9191-9203]:ReturnStatement[9191-9203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9370-9499]:Block[9370-9499]"
    }, {
      "left" : "return findPropertiesToIgnore(ac, true);",
      "right" : "return findPropertiesToIgnore(ac, true);",
      "info" : "ReturnStatement[9453-9493]:ReturnStatement[9453-9493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9674-9690]:Block[9674-9690]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9676-9688]:ReturnStatement[9676-9688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10184-10200]:Block[10184-10200]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10186-10198]:ReturnStatement[10186-10198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10527-10543]:Block[10527-10543]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10529-10541]:ReturnStatement[10529-10541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11016-11032]:Block[11016-11032]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11018-11030]:ReturnStatement[11018-11030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11498-11514]:Block[11498-11514]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11500-11512]:ReturnStatement[11500-11512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12184-12215]:Block[12184-12215]"
    }, {
      "left" : "return checker;",
      "right" : "return checker;",
      "info" : "ReturnStatement[12194-12209]:ReturnStatement[12194-12209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13233-13261]:Block[13233-13261]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13243-13255]:ReturnStatement[13243-13255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14164-14192]:Block[14164-14192]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14174-14186]:ReturnStatement[14174-14186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15261-15289]:Block[15261-15289]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15271-15283]:ReturnStatement[15271-15283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15744-15760]:Block[15744-15760]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15746-15758]:ReturnStatement[15746-15758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15958-15974]:Block[15958-15974]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15960-15972]:ReturnStatement[15960-15972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16212-16228]:Block[16212-16228]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16214-16226]:ReturnStatement[16214-16226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16630-16646]:Block[16630-16646]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16632-16644]:ReturnStatement[16632-16644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17177-17193]:Block[17177-17193]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17179-17191]:ReturnStatement[17179-17191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17556-17573]:Block[17556-17573]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[17558-17571]:ReturnStatement[17558-17571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18131-18147]:Block[18131-18147]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18133-18145]:ReturnStatement[18133-18145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18411-18427]:Block[18411-18427]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18413-18425]:ReturnStatement[18413-18425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19289-19305]:Block[19289-19305]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19291-19303]:ReturnStatement[19291-19303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19628-19644]:Block[19628-19644]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19630-19642]:ReturnStatement[19630-19642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20187-20203]:Block[20187-20203]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20189-20201]:ReturnStatement[20189-20201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20595-20611]:Block[20595-20611]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20597-20609]:ReturnStatement[20597-20609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21055-21071]:Block[21055-21071]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21057-21069]:ReturnStatement[21057-21069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21620-21636]:Block[21620-21636]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21622-21634]:ReturnStatement[21622-21634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22388-22404]:Block[22388-22404]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22390-22402]:ReturnStatement[22390-22402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22890-22906]:Block[22890-22906]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22892-22904]:ReturnStatement[22892-22904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23396-23424]:Block[23396-23424]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23406-23418]:ReturnStatement[23406-23418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23997-24025]:Block[23997-24025]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24007-24019]:ReturnStatement[24007-24019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24435-24463]:Block[24435-24463]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24445-24457]:ReturnStatement[24445-24457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24943-24971]:Block[24943-24971]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24953-24965]:ReturnStatement[24953-24965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25201-25229]:Block[25201-25229]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[25211-25223]:ReturnStatement[25211-25223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25659-25687]:Block[25659-25687]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[25669-25681]:ReturnStatement[25669-25681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26697-26725]:Block[26697-26725]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[26707-26719]:ReturnStatement[26707-26719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27563-27591]:Block[27563-27591]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[27573-27585]:ReturnStatement[27573-27585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28488-28520]:Block[28488-28520]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[28498-28514]:ReturnStatement[28498-28514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29011-29043]:Block[29011-29043]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[29021-29037]:ReturnStatement[29021-29037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29464-29513]:Block[29464-29513]"
    }, {
      "left" : "return JsonInclude.Value.empty();",
      "right" : "return JsonInclude.Value.empty();",
      "info" : "ReturnStatement[29474-29507]:ReturnStatement[29474-29507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30256-30284]:Block[30256-30284]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[30266-30278]:ReturnStatement[30266-30278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30849-30877]:Block[30849-30877]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[30859-30871]:ReturnStatement[30859-30871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31460-31488]:Block[31460-31488]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[31470-31482]:ReturnStatement[31470-31482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31787-37323]:Block[31787-37923]"
    }, {
      "left" : "JavaType type = baseType;",
      "right" : "JavaType type = baseType;",
      "info" : "VariableDeclarationStatement[31797-31822]:VariableDeclarationStatement[31797-31822]"
    }, {
      "left" : "final TypeFactory tf = config.getTypeFactory();",
      "right" : "final TypeFactory tf = config.getTypeFactory();",
      "info" : "VariableDeclarationStatement[31831-31878]:VariableDeclarationStatement[31831-31878]"
    }, {
      "left" : "Class<?> serClass = findSerializationType(a);",
      "right" : "Class<?> serClass = findSerializationType(a);",
      "info" : "VariableDeclarationStatement[32289-32334]:VariableDeclarationStatement[32289-32334]"
    }, {
      "left" : "if (serClass != null)",
      "right" : "if (serClass != null)",
      "info" : "IfStatement[32343-33276]:IfStatement[32343-33876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32365-33276]:Block[32365-33876]"
    }, {
      "left" : "if (type.hasRawClass(serClass))",
      "right" : "if (type.hasRawClass(serClass))",
      "info" : "IfStatement[32379-33266]:IfStatement[32379-33866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32411-32606]:Block[32411-32606]"
    }, {
      "left" : "type = type.withStaticTyping();",
      "right" : "type = type.withStaticTyping();",
      "info" : "ExpressionStatement[32561-32592]:ExpressionStatement[32561-32592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32612-33266]:Block[32612-33866]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32630-33252]:TryStatement[32685-33852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32634-32891]:Block[32913-33027]"
    }, {
      "left" : "type = tf.constructGeneralizedType(type, serClass);",
      "right" : "type = tf.constructGeneralizedType(type, serClass);",
      "info" : "ExpressionStatement[32822-32873]:ExpressionStatement[32954-33005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32929-33252]:Block[33529-33852]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                            String.format(\"Failed to widen type %s with annotation (value %s), from '%s': %s\",\n                                    type, serClass.getName(), a.getName(), iae.getMessage()),\n                                    iae);",
      "right" : "throw new JsonMappingException(null,\n                            String.format(\"Failed to widen type %s with annotation (value %s), from '%s': %s\",\n                                    type, serClass.getName(), a.getName(), iae.getMessage()),\n                                    iae);",
      "info" : "ThrowStatement[32951-33234]:ThrowStatement[33551-33834]"
    }, {
      "left" : "if (type.isMapLikeType())",
      "right" : "if (type.isMapLikeType())",
      "info" : "IfStatement[33396-35254]:IfStatement[33996-35854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33422-35254]:Block[34022-35854]"
    }, {
      "left" : "JavaType keyType = type.getKeyType();",
      "right" : "JavaType keyType = type.getKeyType();",
      "info" : "VariableDeclarationStatement[33436-33473]:VariableDeclarationStatement[34036-34073]"
    }, {
      "left" : "Class<?> keyClass = findSerializationKeyType(a, keyType);",
      "right" : "Class<?> keyClass = findSerializationKeyType(a, keyType);",
      "info" : "VariableDeclarationStatement[33486-33543]:VariableDeclarationStatement[34086-34143]"
    }, {
      "left" : "if (keyClass != null)",
      "right" : "if (keyClass != null)",
      "info" : "IfStatement[33556-35244]:IfStatement[34156-35844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33578-35244]:Block[34178-35844]"
    }, {
      "left" : "if (keyType.hasRawClass(keyClass))",
      "right" : "if (keyType.hasRawClass(keyClass))",
      "info" : "IfStatement[33596-35164]:IfStatement[34196-35764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33631-33708]:Block[34231-34308]"
    }, {
      "left" : "keyType = keyType.withStaticTyping();",
      "right" : "keyType = keyType.withStaticTyping();",
      "info" : "ExpressionStatement[33653-33690]:ExpressionStatement[34253-34290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33714-35164]:Block[34314-35764]"
    }, {
      "left" : "Class<?> currRaw = keyType.getRawClass();",
      "right" : "Class<?> currRaw = keyType.getRawClass();",
      "info" : "VariableDeclarationStatement[33736-33777]:VariableDeclarationStatement[34336-34377]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[33798-35146]:TryStatement[34398-35746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33802-34744]:Block[34402-35344]"
    }, {
      "left" : "if (keyClass.isAssignableFrom(currRaw))",
      "right" : "if (keyClass.isAssignableFrom(currRaw))",
      "info" : "IfStatement[34071-34722]:IfStatement[34671-35322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34111-34239]:Block[34711-34839]"
    }, {
      "left" : "keyType = tf.constructGeneralizedType(keyType, keyClass);",
      "right" : "keyType = tf.constructGeneralizedType(keyType, keyClass);",
      "info" : "ExpressionStatement[34156-34213]:ExpressionStatement[34756-34813]"
    }, {
      "left" : "if (currRaw.isAssignableFrom(keyClass))",
      "right" : "if (currRaw.isAssignableFrom(keyClass))",
      "info" : "IfStatement[34245-34722]:IfStatement[34845-35322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34285-34428]:Block[34885-35028]"
    }, {
      "left" : "keyType = tf.constructSpecializedType(keyType, keyClass);",
      "right" : "keyType = tf.constructSpecializedType(keyType, keyClass);",
      "info" : "ExpressionStatement[34345-34402]:ExpressionStatement[34945-35002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34434-34722]:Block[35034-35322]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                                    String.format(\"Can not refine serialization key type %s into %s; types not related\",\n                                            keyType, keyClass.getName()));",
      "right" : "throw new JsonMappingException(null,\n                                    String.format(\"Can not refine serialization key type %s into %s; types not related\",\n                                            keyType, keyClass.getName()));",
      "info" : "ThrowStatement[34464-34696]:ThrowStatement[35064-35296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34782-35146]:Block[35382-35746]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                                String.format(\"Failed to widen key type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                        type, keyClass.getName(), a.getName(), iae.getMessage()),\n                                        iae);",
      "right" : "throw new JsonMappingException(null,\n                                String.format(\"Failed to widen key type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                        type, keyClass.getName(), a.getName(), iae.getMessage()),\n                                        iae);",
      "info" : "ThrowStatement[34808-35124]:ThrowStatement[35408-35724]"
    }, {
      "left" : "type = ((MapLikeType) type).withKeyType(keyType);",
      "right" : "type = ((MapLikeType) type).withKeyType(keyType);",
      "info" : "ExpressionStatement[35181-35230]:ExpressionStatement[35781-35830]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[35264-35309]:VariableDeclarationStatement[35864-35909]"
    }, {
      "left" : "if (contentType != null)",
      "right" : "if (contentType != null)",
      "info" : "IfStatement[35318-37296]:IfStatement[35918-37896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35343-37296]:Block[35943-37896]"
    }, {
      "left" : "Class<?> contentClass = findSerializationContentType(a, contentType);",
      "right" : "Class<?> contentClass = findSerializationContentType(a, contentType);",
      "info" : "VariableDeclarationStatement[35461-35530]:VariableDeclarationStatement[36061-36130]"
    }, {
      "left" : "if (contentClass != null)",
      "right" : "if (contentClass != null)",
      "info" : "IfStatement[35542-37286]:IfStatement[36142-37886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35568-37286]:Block[36168-37886]"
    }, {
      "left" : "if (contentType.hasRawClass(contentClass))",
      "right" : "if (contentType.hasRawClass(contentClass))",
      "info" : "IfStatement[35585-37216]:IfStatement[36185-37816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35628-35711]:Block[36228-36311]"
    }, {
      "left" : "contentType = contentType.withStaticTyping();",
      "right" : "contentType = contentType.withStaticTyping();",
      "info" : "ExpressionStatement[35649-35694]:ExpressionStatement[36249-36294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35717-37216]:Block[36317-37816]"
    }, {
      "left" : "Class<?> currRaw = contentType.getRawClass();",
      "right" : "Class<?> currRaw = contentType.getRawClass();",
      "info" : "VariableDeclarationStatement[35950-35995]:VariableDeclarationStatement[36550-36595]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[36015-37199]:TryStatement[36615-37799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36019-36752]:Block[36619-37352]"
    }, {
      "left" : "if (contentClass.isAssignableFrom(currRaw))",
      "right" : "if (contentClass.isAssignableFrom(currRaw))",
      "info" : "IfStatement[36044-36731]:IfStatement[36644-37331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36088-36226]:Block[36688-36826]"
    }, {
      "left" : "contentType = tf.constructGeneralizedType(contentType, contentClass);",
      "right" : "contentType = tf.constructGeneralizedType(contentType, contentClass);",
      "info" : "ExpressionStatement[36132-36201]:ExpressionStatement[36732-36801]"
    }, {
      "left" : "if (currRaw.isAssignableFrom(contentClass))",
      "right" : "if (currRaw.isAssignableFrom(contentClass))",
      "info" : "IfStatement[36232-36731]:IfStatement[36832-37331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36276-36429]:Block[36876-37029]"
    }, {
      "left" : "contentType = tf.constructSpecializedType(contentType, contentClass);",
      "right" : "contentType = tf.constructSpecializedType(contentType, contentClass);",
      "info" : "ExpressionStatement[36335-36404]:ExpressionStatement[36935-37004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36435-36731]:Block[37035-37331]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                                   String.format(\"Can not refine serialization content type %s into %s; types not related\",\n                                           contentType, contentClass.getName()));",
      "right" : "throw new JsonMappingException(null,\n                                   String.format(\"Can not refine serialization content type %s into %s; types not related\",\n                                           contentType, contentClass.getName()));",
      "info" : "ThrowStatement[36464-36706]:ThrowStatement[37064-37306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36790-37199]:Block[37390-37799]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                               String.format(\"Internal error: failed to refine value type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                       type, contentClass.getName(), a.getName(), iae.getMessage()),\n                                       iae);",
      "right" : "throw new JsonMappingException(null,\n                               String.format(\"Internal error: failed to refine value type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                       type, contentClass.getName(), a.getName(), iae.getMessage()),\n                                       iae);",
      "info" : "ThrowStatement[36842-37178]:ThrowStatement[37442-37778]"
    }, {
      "left" : "type = type.withContentType(contentType);",
      "right" : "type = type.withContentType(contentType);",
      "info" : "ExpressionStatement[37232-37273]:ExpressionStatement[37832-37873]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[37305-37317]:ReturnStatement[37905-37917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37734-37762]:Block[38334-38362]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[37744-37756]:ReturnStatement[38344-38356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38035-38063]:Block[38635-38663]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[38045-38057]:ReturnStatement[38645-38657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38351-38354]:Block[38951-38954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39098-39362]:Block[39698-39962]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[39344-39356]:ReturnStatement[39944-39956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39830-39859]:Block[40430-40459]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[39840-39853]:ReturnStatement[40440-40453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40178-40214]:Block[40778-40814]"
    }, {
      "left" : "return value.name();",
      "right" : "return value.name();",
      "info" : "ReturnStatement[40188-40208]:ReturnStatement[40788-40808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40859-41383]:Block[41459-41983]"
    }, {
      "left" : "for (int i = 0, len = enumValues.length; i < len; ++i)",
      "right" : "for (int i = 0, len = enumValues.length; i < len; ++i)",
      "info" : "ForStatement[40869-41355]:ForStatement[41469-41955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40924-41355]:Block[41524-41955]"
    }, {
      "left" : "if (names[i] == null)",
      "right" : "if (names[i] == null)",
      "info" : "IfStatement[41251-41345]:IfStatement[41851-41945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41273-41345]:Block[41873-41945]"
    }, {
      "left" : "names[i] = findEnumValue(enumValues[i]);",
      "right" : "names[i] = findEnumValue(enumValues[i]);",
      "info" : "ExpressionStatement[41291-41331]:ExpressionStatement[41891-41931]"
    }, {
      "left" : "return names;",
      "right" : "return names;",
      "info" : "ReturnStatement[41364-41377]:ReturnStatement[41964-41977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41973-42001]:Block[42573-42601]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[41983-41995]:ReturnStatement[42583-42595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42426-42454]:Block[43026-43054]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[42436-42448]:ReturnStatement[43036-43048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42949-42977]:Block[43549-43577]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[42959-42971]:ReturnStatement[43559-43571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44088-44116]:Block[44688-44716]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[44098-44110]:ReturnStatement[44698-44710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45001-45029]:Block[45601-45629]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45011-45023]:ReturnStatement[45611-45623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45515-48427]:Block[46115-49027]"
    }, {
      "left" : "JavaType type = baseType;",
      "right" : "JavaType type = baseType;",
      "info" : "VariableDeclarationStatement[45525-45550]:VariableDeclarationStatement[46125-46150]"
    }, {
      "left" : "final TypeFactory tf = config.getTypeFactory();",
      "right" : "final TypeFactory tf = config.getTypeFactory();",
      "info" : "VariableDeclarationStatement[45559-45606]:VariableDeclarationStatement[46159-46206]"
    }, {
      "left" : "Class<?> valueClass = findDeserializationType(a, type);",
      "right" : "Class<?> valueClass = findDeserializationType(a, type);",
      "info" : "VariableDeclarationStatement[46009-46064]:VariableDeclarationStatement[46609-46664]"
    }, {
      "left" : "if ((valueClass != null) && !type.hasRawClass(valueClass))",
      "right" : "if ((valueClass != null) && !type.hasRawClass(valueClass))",
      "info" : "IfStatement[46073-46589]:IfStatement[46673-47189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46132-46589]:Block[46732-47189]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[46146-46579]:TryStatement[46746-47179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46150-46235]:Block[46750-46835]"
    }, {
      "left" : "type = tf.constructSpecializedType(type, valueClass);",
      "right" : "type = tf.constructSpecializedType(type, valueClass);",
      "info" : "ExpressionStatement[46168-46221]:ExpressionStatement[46768-46821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46273-46579]:Block[46873-47179]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                        String.format(\"Failed to narrow type %s with annotation (value %s), from '%s': %s\",\n                                type, valueClass.getName(), a.getName(), iae.getMessage()),\n                                iae);",
      "right" : "throw new JsonMappingException(null,\n                        String.format(\"Failed to narrow type %s with annotation (value %s), from '%s': %s\",\n                                type, valueClass.getName(), a.getName(), iae.getMessage()),\n                                iae);",
      "info" : "ThrowStatement[46291-46565]:ThrowStatement[46891-47165]"
    }, {
      "left" : "if (type.isMapLikeType())",
      "right" : "if (type.isMapLikeType())",
      "info" : "IfStatement[46709-47489]:IfStatement[47309-48089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46735-47489]:Block[47335-48089]"
    }, {
      "left" : "JavaType keyType = type.getKeyType();",
      "right" : "JavaType keyType = type.getKeyType();",
      "info" : "VariableDeclarationStatement[46749-46786]:VariableDeclarationStatement[47349-47386]"
    }, {
      "left" : "Class<?> keyClass = findDeserializationKeyType(a, keyType);",
      "right" : "Class<?> keyClass = findDeserializationKeyType(a, keyType);",
      "info" : "VariableDeclarationStatement[46799-46858]:VariableDeclarationStatement[47399-47458]"
    }, {
      "left" : "if (keyClass != null)",
      "right" : "if (keyClass != null)",
      "info" : "IfStatement[46871-47479]:IfStatement[47471-48079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46893-47479]:Block[47493-48079]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[46911-47465]:TryStatement[47511-48065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46915-47082]:Block[47515-47682]"
    }, {
      "left" : "keyType = tf.constructSpecializedType(keyType, keyClass);",
      "right" : "keyType = tf.constructSpecializedType(keyType, keyClass);",
      "info" : "ExpressionStatement[46937-46994]:ExpressionStatement[47537-47594]"
    }, {
      "left" : "type = ((MapLikeType) type).withKeyType(keyType);",
      "right" : "type = ((MapLikeType) type).withKeyType(keyType);",
      "info" : "ExpressionStatement[47015-47064]:ExpressionStatement[47615-47664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47120-47465]:Block[47720-48065]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                            String.format(\"Failed to narrow key type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                    type, keyClass.getName(), a.getName(), iae.getMessage()),\n                                    iae);",
      "right" : "throw new JsonMappingException(null,\n                            String.format(\"Failed to narrow key type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                    type, keyClass.getName(), a.getName(), iae.getMessage()),\n                                    iae);",
      "info" : "ThrowStatement[47142-47447]:ThrowStatement[47742-48047]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[47498-47543]:VariableDeclarationStatement[48098-48143]"
    }, {
      "left" : "if (contentType != null)",
      "right" : "if (contentType != null)",
      "info" : "IfStatement[47552-48400]:IfStatement[48152-49000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47577-48400]:Block[48177-49000]"
    }, {
      "left" : "Class<?> contentClass = findDeserializationContentType(a, contentType);",
      "right" : "Class<?> contentClass = findDeserializationContentType(a, contentType);",
      "info" : "VariableDeclarationStatement[47695-47766]:VariableDeclarationStatement[48295-48366]"
    }, {
      "left" : "if (contentClass != null)",
      "right" : "if (contentClass != null)",
      "info" : "IfStatement[47778-48390]:IfStatement[48378-48990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47804-48390]:Block[48404-48990]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[47821-48377]:TryStatement[48421-48977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47825-47993]:Block[48425-48593]"
    }, {
      "left" : "contentType = tf.constructSpecializedType(contentType, contentClass);",
      "right" : "contentType = tf.constructSpecializedType(contentType, contentClass);",
      "info" : "ExpressionStatement[47846-47915]:ExpressionStatement[48446-48515]"
    }, {
      "left" : "type = type.withContentType(contentType);",
      "right" : "type = type.withContentType(contentType);",
      "info" : "ExpressionStatement[47935-47976]:ExpressionStatement[48535-48576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48031-48377]:Block[48631-48977]"
    }, {
      "left" : "throw new JsonMappingException(null,\n                           String.format(\"Failed to narrow value type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                   type, contentClass.getName(), a.getName(), iae.getMessage()),\n                                   iae);",
      "right" : "throw new JsonMappingException(null,\n                           String.format(\"Failed to narrow value type of %s with concrete-type annotation (value %s), from '%s': %s\",\n                                   type, contentClass.getName(), a.getName(), iae.getMessage()),\n                                   iae);",
      "info" : "ThrowStatement[48052-48360]:ThrowStatement[48652-48960]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[48409-48421]:ReturnStatement[49009-49021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49105-49133]:Block[49705-49733]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[49115-49127]:ReturnStatement[49715-49727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49757-49785]:Block[50357-50385]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[49767-49779]:ReturnStatement[50367-50379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50504-50532]:Block[51104-51132]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[50514-50526]:ReturnStatement[51114-51126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50980-51008]:Block[51580-51608]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[50990-51002]:ReturnStatement[51590-51602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51576-51604]:Block[52176-52204]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51586-51598]:ReturnStatement[52186-52198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51714-51742]:Block[52314-52342]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51724-51736]:ReturnStatement[52324-52336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52518-52782]:Block[53118-53382]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52764-52776]:ReturnStatement[53364-53376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53217-53246]:Block[53817-53846]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53227-53240]:ReturnStatement[53827-53840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53695-53724]:Block[54295-54324]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53705-53718]:ReturnStatement[54305-54318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54155-54184]:Block[54755-54784]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54165-54178]:ReturnStatement[54765-54778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54579-54607]:Block[55179-55207]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[54589-54601]:ReturnStatement[55189-55201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55355-55413]:Block[55955-56013]"
    }, {
      "left" : "return annotated.getAnnotation(annoClass);",
      "right" : "return annotated.getAnnotation(annoClass);",
      "info" : "ReturnStatement[55365-55407]:ReturnStatement[55965-56007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55935-55993]:Block[56535-56593]"
    }, {
      "left" : "return annotated.hasAnnotation(annoClass);",
      "right" : "return annotated.hasAnnotation(annoClass);",
      "info" : "ReturnStatement[55945-55987]:ReturnStatement[56545-56587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56274-56329]:Block[56874-56929]"
    }, {
      "left" : "return annotated.hasOneOf(annoClasses);",
      "right" : "return annotated.hasOneOf(annoClasses);",
      "info" : "ReturnStatement[56284-56323]:ReturnStatement[56884-56923]"
    } ]
  },
  "interFileMappings" : { }
}