{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JacksonAnnotationIntrospector",
      "right" : "JacksonAnnotationIntrospector",
      "info" : "TypeDeclaration[1019-37855]:TypeDeclaration[1019-38052]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1242-1290]:FieldDeclaration[1242-1290]"
    }, {
      "left" : "public JacksonAnnotationIntrospector()",
      "right" : "public JacksonAnnotationIntrospector()",
      "info" : "MethodDeclaration[1296-1338]:MethodDeclaration[1296-1338]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[1344-1464]:MethodDeclaration[1344-1464]"
    }, {
      "left" : "public boolean isAnnotationBundle(Annotation ann)",
      "right" : "public boolean isAnnotationBundle(Annotation ann)",
      "info" : "MethodDeclaration[1651-1933]:MethodDeclaration[1651-1933]"
    }, {
      "left" : "public String findEnumValue(Enum<?> value)",
      "right" : "public String findEnumValue(Enum<?> value)",
      "info" : "MethodDeclaration[2110-3322]:MethodDeclaration[2110-3322]"
    }, {
      "left" : "public PropertyName findRootName(AnnotatedClass ac)",
      "right" : "public PropertyName findRootName(AnnotatedClass ac)",
      "info" : "MethodDeclaration[3505-3884]:MethodDeclaration[3505-3884]"
    }, {
      "left" : "// since 2.6, remove from 2.7 or later\n    public String[] findPropertiesToIgnore(Annotated ac)",
      "right" : "// since 2.6, remove from 2.7 or later\n    public String[] findPropertiesToIgnore(Annotated ac)",
      "info" : "MethodDeclaration[3890-4163]:MethodDeclaration[3890-4163]"
    }, {
      "left" : "// since 2.6\n    public String[] findPropertiesToIgnore(Annotated ac, boolean forSerialization)",
      "right" : "// since 2.6\n    public String[] findPropertiesToIgnore(Annotated ac, boolean forSerialization)",
      "info" : "MethodDeclaration[4169-4777]:MethodDeclaration[4169-4777]"
    }, {
      "left" : "public Boolean findIgnoreUnknownProperties(AnnotatedClass ac)",
      "right" : "public Boolean findIgnoreUnknownProperties(AnnotatedClass ac)",
      "info" : "MethodDeclaration[4787-5022]:MethodDeclaration[4787-5022]"
    }, {
      "left" : "public Boolean isIgnorableType(AnnotatedClass ac)",
      "right" : "public Boolean isIgnorableType(AnnotatedClass ac)",
      "info" : "MethodDeclaration[5028-5231]:MethodDeclaration[5028-5231]"
    }, {
      "left" : "public Object findFilterId(AnnotatedClass ac)",
      "right" : "public Object findFilterId(AnnotatedClass ac)",
      "info" : "MethodDeclaration[5237-5446]:MethodDeclaration[5237-5446]"
    }, {
      "left" : "public Object findFilterId(Annotated a)",
      "right" : "public Object findFilterId(Annotated a)",
      "info" : "MethodDeclaration[5456-5550]:MethodDeclaration[5456-5550]"
    }, {
      "left" : "protected final Object _findFilterId(Annotated a)",
      "right" : "protected final Object _findFilterId(Annotated a)",
      "info" : "MethodDeclaration[5556-5932]:MethodDeclaration[5556-5932]"
    }, {
      "left" : "public Object findNamingStrategy(AnnotatedClass ac)",
      "right" : "public Object findNamingStrategy(AnnotatedClass ac)",
      "info" : "MethodDeclaration[5938-6130]:MethodDeclaration[5938-6130]"
    }, {
      "left" : "public VisibilityChecker<?> findAutoDetectVisibility(AnnotatedClass ac,\n        VisibilityChecker<?> checker)",
      "right" : "public VisibilityChecker<?> findAutoDetectVisibility(AnnotatedClass ac,\n        VisibilityChecker<?> checker)",
      "info" : "MethodDeclaration[6316-6583]:MethodDeclaration[6316-6583]"
    }, {
      "left" : "public String findImplicitPropertyName(AnnotatedMember param)",
      "right" : "public String findImplicitPropertyName(AnnotatedMember param)",
      "info" : "MethodDeclaration[6795-6978]:MethodDeclaration[6795-6978]"
    }, {
      "left" : "public boolean hasIgnoreMarker(AnnotatedMember m)",
      "right" : "public boolean hasIgnoreMarker(AnnotatedMember m)",
      "info" : "MethodDeclaration[6988-7091]:MethodDeclaration[6988-7091]"
    }, {
      "left" : "public Boolean hasRequiredMarker(AnnotatedMember m)",
      "right" : "public Boolean hasRequiredMarker(AnnotatedMember m)",
      "info" : "MethodDeclaration[7097-7334]:MethodDeclaration[7097-7334]"
    }, {
      "left" : "public JsonProperty.Access findPropertyAccess(Annotated m)",
      "right" : "public JsonProperty.Access findPropertyAccess(Annotated m)",
      "info" : "MethodDeclaration[7340-7578]:MethodDeclaration[7340-7578]"
    }, {
      "left" : "public String findPropertyDescription(Annotated ann)",
      "right" : "public String findPropertyDescription(Annotated ann)",
      "info" : "MethodDeclaration[7584-7803]:MethodDeclaration[7584-7803]"
    }, {
      "left" : "public Integer findPropertyIndex(Annotated ann)",
      "right" : "public Integer findPropertyIndex(Annotated ann)",
      "info" : "MethodDeclaration[7809-8145]:MethodDeclaration[7809-8145]"
    }, {
      "left" : "public String findPropertyDefaultValue(Annotated ann)",
      "right" : "public String findPropertyDefaultValue(Annotated ann)",
      "info" : "MethodDeclaration[8155-8531]:MethodDeclaration[8155-8531]"
    }, {
      "left" : "public JsonFormat.Value findFormat(Annotated ann)",
      "right" : "public JsonFormat.Value findFormat(Annotated ann)",
      "info" : "MethodDeclaration[8541-8737]:MethodDeclaration[8541-8737]"
    }, {
      "left" : "public ReferenceProperty findReferenceType(AnnotatedMember member)",
      "right" : "public ReferenceProperty findReferenceType(AnnotatedMember member)",
      "info" : "MethodDeclaration[8743-9275]:MethodDeclaration[8743-9275]"
    }, {
      "left" : "public NameTransformer findUnwrappingNameTransformer(AnnotatedMember member)",
      "right" : "public NameTransformer findUnwrappingNameTransformer(AnnotatedMember member)",
      "info" : "MethodDeclaration[9281-9850]:MethodDeclaration[9281-9850]"
    }, {
      "left" : "public Object findInjectableValueId(AnnotatedMember m)",
      "right" : "public Object findInjectableValueId(AnnotatedMember m)",
      "info" : "MethodDeclaration[9856-10652]:MethodDeclaration[9856-10652]"
    }, {
      "left" : "public Class<?>[] findViews(Annotated a)",
      "right" : "public Class<?>[] findViews(Annotated a)",
      "info" : "MethodDeclaration[10658-10834]:MethodDeclaration[10658-10834]"
    }, {
      "left" : "public TypeResolverBuilder<?> findTypeResolver(MapperConfig<?> config,\n            AnnotatedClass ac, JavaType baseType)",
      "right" : "public TypeResolverBuilder<?> findTypeResolver(MapperConfig<?> config,\n            AnnotatedClass ac, JavaType baseType)",
      "info" : "MethodDeclaration[11033-11235]:MethodDeclaration[11033-11235]"
    }, {
      "left" : "public TypeResolverBuilder<?> findPropertyTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType baseType)",
      "right" : "public TypeResolverBuilder<?> findPropertyTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType baseType)",
      "info" : "MethodDeclaration[11241-11721]:MethodDeclaration[11241-11721]"
    }, {
      "left" : "public TypeResolverBuilder<?> findPropertyContentTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType containerType)",
      "right" : "public TypeResolverBuilder<?> findPropertyContentTypeResolver(MapperConfig<?> config,\n            AnnotatedMember am, JavaType containerType)",
      "info" : "MethodDeclaration[11727-12259]:MethodDeclaration[11727-12259]"
    }, {
      "left" : "public List<NamedType> findSubtypes(Annotated a)",
      "right" : "public List<NamedType> findSubtypes(Annotated a)",
      "info" : "MethodDeclaration[12269-12715]:MethodDeclaration[12269-12715]"
    }, {
      "left" : "public String findTypeName(AnnotatedClass ac)",
      "right" : "public String findTypeName(AnnotatedClass ac)",
      "info" : "MethodDeclaration[12721-12916]:MethodDeclaration[12721-12916]"
    }, {
      "left" : "public Boolean isTypeId(AnnotatedMember member)",
      "right" : "public Boolean isTypeId(AnnotatedMember member)",
      "info" : "MethodDeclaration[12922-13048]:MethodDeclaration[12922-13048]"
    }, {
      "left" : "public ObjectIdInfo findObjectIdInfo(Annotated ann)",
      "right" : "public ObjectIdInfo findObjectIdInfo(Annotated ann)",
      "info" : "MethodDeclaration[13240-13722]:MethodDeclaration[13240-13722]"
    }, {
      "left" : "public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo)",
      "right" : "public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo)",
      "info" : "MethodDeclaration[13728-14062]:MethodDeclaration[13728-14062]"
    }, {
      "left" : "public Object findSerializer(Annotated a)",
      "right" : "public Object findSerializer(Annotated a)",
      "info" : "MethodDeclaration[14253-15213]:MethodDeclaration[14253-15213]"
    }, {
      "left" : "public Object findKeySerializer(Annotated a)",
      "right" : "public Object findKeySerializer(Annotated a)",
      "info" : "MethodDeclaration[15219-15633]:MethodDeclaration[15219-15633]"
    }, {
      "left" : "public Object findContentSerializer(Annotated a)",
      "right" : "public Object findContentSerializer(Annotated a)",
      "info" : "MethodDeclaration[15639-16061]:MethodDeclaration[15639-16061]"
    }, {
      "left" : "public Object findNullSerializer(Annotated a)",
      "right" : "public Object findNullSerializer(Annotated a)",
      "info" : "MethodDeclaration[16067-16484]:MethodDeclaration[16067-16484]"
    }, {
      "left" : "public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue)",
      "right" : "public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue)",
      "info" : "MethodDeclaration[16490-17549]:MethodDeclaration[16490-17549]"
    }, {
      "left" : "public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)",
      "right" : "public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)",
      "info" : "MethodDeclaration[17555-17971]:MethodDeclaration[17555-17971]"
    }, {
      "left" : "public JsonInclude.Value findPropertyInclusion(Annotated a)",
      "right" : "public JsonInclude.Value findPropertyInclusion(Annotated a)",
      "info" : "MethodDeclaration[17977-19290]:MethodDeclaration[17977-19290]"
    }, {
      "left" : "public Class<?> findSerializationType(Annotated am)",
      "right" : "public Class<?> findSerializationType(Annotated am)",
      "info" : "MethodDeclaration[19296-19509]:MethodDeclaration[19296-19509]"
    }, {
      "left" : "public Class<?> findSerializationKeyType(Annotated am, JavaType baseType)",
      "right" : "public Class<?> findSerializationKeyType(Annotated am, JavaType baseType)",
      "info" : "MethodDeclaration[19515-19753]:MethodDeclaration[19515-19753]"
    }, {
      "left" : "public Class<?> findSerializationContentType(Annotated am, JavaType baseType)",
      "right" : "public Class<?> findSerializationContentType(Annotated am, JavaType baseType)",
      "info" : "MethodDeclaration[19759-20005]:MethodDeclaration[19759-20005]"
    }, {
      "left" : "public JsonSerialize.Typing findSerializationTyping(Annotated a)",
      "right" : "public JsonSerialize.Typing findSerializationTyping(Annotated a)",
      "info" : "MethodDeclaration[20015-20226]:MethodDeclaration[20015-20226]"
    }, {
      "left" : "public Object findSerializationConverter(Annotated a)",
      "right" : "public Object findSerializationConverter(Annotated a)",
      "info" : "MethodDeclaration[20232-20471]:MethodDeclaration[20232-20471]"
    }, {
      "left" : "public Object findSerializationContentConverter(AnnotatedMember a)",
      "right" : "public Object findSerializationContentConverter(AnnotatedMember a)",
      "info" : "MethodDeclaration[20477-20736]:MethodDeclaration[20477-20736]"
    }, {
      "left" : "public String[] findSerializationPropertyOrder(AnnotatedClass ac)",
      "right" : "public String[] findSerializationPropertyOrder(AnnotatedClass ac)",
      "info" : "MethodDeclaration[20926-21148]:MethodDeclaration[20926-21148]"
    }, {
      "left" : "public Boolean findSerializationSortAlphabetically(Annotated ann)",
      "right" : "public Boolean findSerializationSortAlphabetically(Annotated ann)",
      "info" : "MethodDeclaration[21154-21277]:MethodDeclaration[21154-21277]"
    }, {
      "left" : "private final Boolean _findSortAlpha(Annotated ann)",
      "right" : "private final Boolean _findSortAlpha(Annotated ann)",
      "info" : "MethodDeclaration[21283-21670]:MethodDeclaration[21283-21670]"
    }, {
      "left" : "public void findAndAddVirtualProperties(MapperConfig<?> config, AnnotatedClass ac,\n            List<BeanPropertyWriter> properties)",
      "right" : "public void findAndAddVirtualProperties(MapperConfig<?> config, AnnotatedClass ac,\n            List<BeanPropertyWriter> properties)",
      "info" : "MethodDeclaration[21676-22984]:MethodDeclaration[21676-22984]"
    }, {
      "left" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Attr attr,\n            MapperConfig<?> config, AnnotatedClass ac, JavaType type)",
      "right" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Attr attr,\n            MapperConfig<?> config, AnnotatedClass ac, JavaType type)",
      "info" : "MethodDeclaration[22990-24226]:MethodDeclaration[22990-24226]"
    }, {
      "left" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Prop prop,\n            MapperConfig<?> config, AnnotatedClass ac)",
      "right" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Prop prop,\n            MapperConfig<?> config, AnnotatedClass ac)",
      "info" : "MethodDeclaration[24232-25622]:MethodDeclaration[24232-25622]"
    }, {
      "left" : "public PropertyName findNameForSerialization(Annotated a)",
      "right" : "public PropertyName findNameForSerialization(Annotated a)",
      "info" : "MethodDeclaration[25815-26792]:MethodDeclaration[25815-26989]"
    }, {
      "left" : "public boolean hasAsValueAnnotation(AnnotatedMethod am)",
      "right" : "public boolean hasAsValueAnnotation(AnnotatedMethod am)",
      "info" : "MethodDeclaration[26798-27028]:MethodDeclaration[26995-27225]"
    }, {
      "left" : "public Object findDeserializer(Annotated a)",
      "right" : "public Object findDeserializer(Annotated a)",
      "info" : "MethodDeclaration[27222-27646]:MethodDeclaration[27419-27843]"
    }, {
      "left" : "public Object findKeyDeserializer(Annotated a)",
      "right" : "public Object findKeyDeserializer(Annotated a)",
      "info" : "MethodDeclaration[27652-28038]:MethodDeclaration[27849-28235]"
    }, {
      "left" : "public Object findContentDeserializer(Annotated a)",
      "right" : "public Object findContentDeserializer(Annotated a)",
      "info" : "MethodDeclaration[28044-28482]:MethodDeclaration[28241-28679]"
    }, {
      "left" : "public Class<?> findDeserializationType(Annotated am, JavaType baseType)",
      "right" : "public Class<?> findDeserializationType(Annotated am, JavaType baseType)",
      "info" : "MethodDeclaration[28488-28722]:MethodDeclaration[28685-28919]"
    }, {
      "left" : "public Class<?> findDeserializationKeyType(Annotated am, JavaType baseKeyType)",
      "right" : "public Class<?> findDeserializationKeyType(Annotated am, JavaType baseKeyType)",
      "info" : "MethodDeclaration[28728-28971]:MethodDeclaration[28925-29168]"
    }, {
      "left" : "public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType)",
      "right" : "public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType)",
      "info" : "MethodDeclaration[28977-29236]:MethodDeclaration[29174-29433]"
    }, {
      "left" : "public Object findDeserializationConverter(Annotated a)",
      "right" : "public Object findDeserializationConverter(Annotated a)",
      "info" : "MethodDeclaration[29242-29491]:MethodDeclaration[29439-29688]"
    }, {
      "left" : "public Object findDeserializationContentConverter(AnnotatedMember a)",
      "right" : "public Object findDeserializationContentConverter(AnnotatedMember a)",
      "info" : "MethodDeclaration[29497-29766]:MethodDeclaration[29694-29963]"
    }, {
      "left" : "public Object findValueInstantiator(AnnotatedClass ac)",
      "right" : "public Object findValueInstantiator(AnnotatedClass ac)",
      "info" : "MethodDeclaration[29962-30216]:MethodDeclaration[30159-30413]"
    }, {
      "left" : "public Class<?> findPOJOBuilder(AnnotatedClass ac)",
      "right" : "public Class<?> findPOJOBuilder(AnnotatedClass ac)",
      "info" : "MethodDeclaration[30222-30443]:MethodDeclaration[30419-30640]"
    }, {
      "left" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig(AnnotatedClass ac)",
      "right" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig(AnnotatedClass ac)",
      "info" : "MethodDeclaration[30449-30688]:MethodDeclaration[30646-30885]"
    }, {
      "left" : "public PropertyName findNameForDeserialization(Annotated a)",
      "right" : "public PropertyName findNameForDeserialization(Annotated a)",
      "info" : "MethodDeclaration[30887-32163]:MethodDeclaration[31084-32360]"
    }, {
      "left" : "public boolean hasAnySetterAnnotation(AnnotatedMethod am)",
      "right" : "public boolean hasAnySetterAnnotation(AnnotatedMethod am)",
      "info" : "MethodDeclaration[32173-32489]:MethodDeclaration[32370-32686]"
    }, {
      "left" : "public boolean hasAnyGetterAnnotation(AnnotatedMethod am)",
      "right" : "public boolean hasAnyGetterAnnotation(AnnotatedMethod am)",
      "info" : "MethodDeclaration[32495-32760]:MethodDeclaration[32692-32957]"
    }, {
      "left" : "public boolean hasCreatorAnnotation(Annotated a)",
      "right" : "public boolean hasCreatorAnnotation(Annotated a)",
      "info" : "MethodDeclaration[32766-33157]:MethodDeclaration[32963-33354]"
    }, {
      "left" : "public JsonCreator.Mode findCreatorBinding(Annotated a)",
      "right" : "public JsonCreator.Mode findCreatorBinding(Annotated a)",
      "info" : "MethodDeclaration[33163-33355]:MethodDeclaration[33360-33552]"
    }, {
      "left" : "protected boolean _isIgnorable(Annotated a)",
      "right" : "protected boolean _isIgnorable(Annotated a)",
      "info" : "MethodDeclaration[33527-33690]:MethodDeclaration[33724-33887]"
    }, {
      "left" : "protected Class<?> _classIfExplicit(Class<?> cls)",
      "right" : "protected Class<?> _classIfExplicit(Class<?> cls)",
      "info" : "MethodDeclaration[33696-33866]:MethodDeclaration[33893-34063]"
    }, {
      "left" : "protected Class<?> _classIfExplicit(Class<?> cls, Class<?> implicit)",
      "right" : "protected Class<?> _classIfExplicit(Class<?> cls, Class<?> implicit)",
      "info" : "MethodDeclaration[33872-34047]:MethodDeclaration[34069-34244]"
    }, {
      "left" : "protected PropertyName _propertyName(String localName, String namespace)",
      "right" : "protected PropertyName _propertyName(String localName, String namespace)",
      "info" : "MethodDeclaration[34053-34404]:MethodDeclaration[34250-34601]"
    }, {
      "left" : "protected TypeResolverBuilder<?> _findTypeResolver(MapperConfig<?> config,\n            Annotated ann, JavaType baseType)",
      "right" : "protected TypeResolverBuilder<?> _findTypeResolver(MapperConfig<?> config,\n            Annotated ann, JavaType baseType)",
      "info" : "MethodDeclaration[34410-37336]:MethodDeclaration[34607-37533]"
    }, {
      "left" : "protected StdTypeResolverBuilder _constructStdTypeResolverBuilder()",
      "right" : "protected StdTypeResolverBuilder _constructStdTypeResolverBuilder()",
      "info" : "MethodDeclaration[37342-37576]:MethodDeclaration[37539-37773]"
    }, {
      "left" : "protected StdTypeResolverBuilder _constructNoTypeResolverBuilder()",
      "right" : "protected StdTypeResolverBuilder _constructNoTypeResolverBuilder()",
      "info" : "MethodDeclaration[37582-37853]:MethodDeclaration[37779-38050]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1122-1128]:Modifier[1122-1128]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1129-1134]:TYPE_DECLARATION_KIND[1129-1134]"
    }, {
      "left" : "JacksonAnnotationIntrospector",
      "right" : "JacksonAnnotationIntrospector",
      "info" : "SimpleName[1135-1164]:SimpleName[1135-1164]"
    }, {
      "left" : "AnnotationIntrospector",
      "right" : "AnnotationIntrospector",
      "info" : "SimpleType[1177-1199]:SimpleType[1177-1199]"
    }, {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[1215-1235]:SimpleType[1215-1235]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1296-1302]:Modifier[1296-1302]"
    }, {
      "left" : "JacksonAnnotationIntrospector",
      "right" : "JacksonAnnotationIntrospector",
      "info" : "SimpleName[1303-1332]:SimpleName[1303-1332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1335-1338]:Block[1335-1338]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1344-1353]:MarkerAnnotation[1344-1353]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1358-1364]:Modifier[1358-1364]"
    }, {
      "left" : "Version",
      "right" : "Version",
      "info" : "SimpleType[1365-1372]:SimpleType[1365-1372]"
    }, {
      "left" : "version",
      "right" : "version",
      "info" : "SimpleName[1373-1380]:SimpleName[1373-1380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1383-1464]:Block[1383-1464]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[1393-1458]:ReturnStatement[1393-1458]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1771-1780]:MarkerAnnotation[1771-1780]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1785-1791]:Modifier[1785-1791]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1792-1799]:PrimitiveType[1792-1799]"
    }, {
      "left" : "isAnnotationBundle",
      "right" : "isAnnotationBundle",
      "info" : "SimpleName[1800-1818]:SimpleName[1800-1818]"
    }, {
      "left" : "Annotation ann",
      "right" : "Annotation ann",
      "info" : "SingleVariableDeclaration[1819-1833]:SingleVariableDeclaration[1819-1833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1835-1933]:Block[1835-1933]"
    }, {
      "left" : "return ann.annotationType().getAnnotation(JacksonAnnotationsInside.class) != null;",
      "right" : "return ann.annotationType().getAnnotation(JacksonAnnotationsInside.class) != null;",
      "info" : "ReturnStatement[1845-1927]:ReturnStatement[1845-1927]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2237-2246]:MarkerAnnotation[2237-2246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2251-2257]:Modifier[2251-2257]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2258-2264]:SimpleType[2258-2264]"
    }, {
      "left" : "findEnumValue",
      "right" : "findEnumValue",
      "info" : "SimpleName[2265-2278]:SimpleName[2265-2278]"
    }, {
      "left" : "Enum<?> value",
      "right" : "Enum<?> value",
      "info" : "SingleVariableDeclaration[2279-2292]:SingleVariableDeclaration[2279-2292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2298-3322]:Block[2298-3322]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[2562-3287]:TryStatement[2562-3287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2566-3049]:Block[2566-3049]"
    }, {
      "left" : "Field f = value.getClass().getField(value.name());",
      "right" : "Field f = value.getClass().getField(value.name());",
      "info" : "VariableDeclarationStatement[2665-2715]:VariableDeclarationStatement[2665-2715]"
    }, {
      "left" : "if (f != null)",
      "right" : "if (f != null)",
      "info" : "IfStatement[2728-3039]:IfStatement[2728-3039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2743-3039]:Block[2743-3039]"
    }, {
      "left" : "JsonProperty prop = f.getAnnotation(JsonProperty.class);",
      "right" : "JsonProperty prop = f.getAnnotation(JsonProperty.class);",
      "info" : "VariableDeclarationStatement[2761-2817]:VariableDeclarationStatement[2761-2817]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[2834-3025]:IfStatement[2834-3025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2852-3025]:Block[2852-3025]"
    }, {
      "left" : "String n = prop.value();",
      "right" : "String n = prop.value();",
      "info" : "VariableDeclarationStatement[2874-2898]:VariableDeclarationStatement[2874-2898]"
    }, {
      "left" : "if (n != null && !n.isEmpty())",
      "right" : "if (n != null && !n.isEmpty())",
      "info" : "IfStatement[2919-3007]:IfStatement[2919-3007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2950-3007]:Block[2950-3007]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[2976-2985]:ReturnStatement[2976-2985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3078-3157]:Block[3078-3157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3189-3287]:Block[3189-3287]"
    }, {
      "left" : "return value.name();",
      "right" : "return value.name();",
      "info" : "ReturnStatement[3296-3316]:ReturnStatement[3296-3316]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3505-3514]:MarkerAnnotation[3505-3514]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3519-3525]:Modifier[3519-3525]"
    }, {
      "left" : "PropertyName",
      "right" : "PropertyName",
      "info" : "SimpleType[3526-3538]:SimpleType[3526-3538]"
    }, {
      "left" : "findRootName",
      "right" : "findRootName",
      "info" : "SimpleName[3539-3551]:SimpleName[3539-3551]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[3552-3569]:SingleVariableDeclaration[3552-3569]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3575-3884]:Block[3575-3884]"
    }, {
      "left" : "JsonRootName ann = _findAnnotation(ac, JsonRootName.class);",
      "right" : "JsonRootName ann = _findAnnotation(ac, JsonRootName.class);",
      "info" : "VariableDeclarationStatement[3585-3644]:VariableDeclarationStatement[3585-3644]"
    }, {
      "left" : "if (ann == null)",
      "right" : "if (ann == null)",
      "info" : "IfStatement[3653-3706]:IfStatement[3653-3706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3670-3706]:Block[3670-3706]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3684-3696]:ReturnStatement[3684-3696]"
    }, {
      "left" : "String ns = ann.namespace();",
      "right" : "String ns = ann.namespace();",
      "info" : "VariableDeclarationStatement[3715-3743]:VariableDeclarationStatement[3715-3743]"
    }, {
      "left" : "if (ns != null && ns.length() == 0)",
      "right" : "if (ns != null && ns.length() == 0)",
      "info" : "IfStatement[3752-3822]:IfStatement[3752-3822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3788-3822]:Block[3788-3822]"
    }, {
      "left" : "ns = null;",
      "right" : "ns = null;",
      "info" : "ExpressionStatement[3802-3812]:ExpressionStatement[3802-3812]"
    }, {
      "left" : "return PropertyName.construct(ann.value(), ns);",
      "right" : "return PropertyName.construct(ann.value(), ns);",
      "info" : "ReturnStatement[3831-3878]:ReturnStatement[3831-3878]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3890-3899]:MarkerAnnotation[3890-3899]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[3904-3915]:MarkerAnnotation[3904-3915]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3959-3965]:Modifier[3959-3965]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[3966-3974]:ArrayType[3966-3974]"
    }, {
      "left" : "findPropertiesToIgnore",
      "right" : "findPropertiesToIgnore",
      "info" : "SimpleName[3975-3997]:SimpleName[3975-3997]"
    }, {
      "left" : "Annotated ac",
      "right" : "Annotated ac",
      "info" : "SingleVariableDeclaration[3998-4010]:SingleVariableDeclaration[3998-4010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4012-4163]:Block[4012-4163]"
    }, {
      "left" : "JsonIgnoreProperties ignore = _findAnnotation(ac, JsonIgnoreProperties.class);",
      "right" : "JsonIgnoreProperties ignore = _findAnnotation(ac, JsonIgnoreProperties.class);",
      "info" : "VariableDeclarationStatement[4022-4100]:VariableDeclarationStatement[4022-4100]"
    }, {
      "left" : "return (ignore == null) ? null : ignore.value();",
      "right" : "return (ignore == null) ? null : ignore.value();",
      "info" : "ReturnStatement[4109-4157]:ReturnStatement[4109-4157]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4169-4178]:MarkerAnnotation[4169-4178]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4196-4202]:Modifier[4196-4202]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[4203-4211]:ArrayType[4203-4211]"
    }, {
      "left" : "findPropertiesToIgnore",
      "right" : "findPropertiesToIgnore",
      "info" : "SimpleName[4212-4234]:SimpleName[4212-4234]"
    }, {
      "left" : "Annotated ac",
      "right" : "Annotated ac",
      "info" : "SingleVariableDeclaration[4235-4247]:SingleVariableDeclaration[4235-4247]"
    }, {
      "left" : "boolean forSerialization",
      "right" : "boolean forSerialization",
      "info" : "SingleVariableDeclaration[4249-4273]:SingleVariableDeclaration[4249-4273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4275-4777]:Block[4275-4777]"
    }, {
      "left" : "JsonIgnoreProperties ignore = _findAnnotation(ac, JsonIgnoreProperties.class);",
      "right" : "JsonIgnoreProperties ignore = _findAnnotation(ac, JsonIgnoreProperties.class);",
      "info" : "VariableDeclarationStatement[4285-4363]:VariableDeclarationStatement[4285-4363]"
    }, {
      "left" : "if (ignore == null)",
      "right" : "if (ignore == null)",
      "info" : "IfStatement[4372-4428]:IfStatement[4372-4428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4392-4428]:Block[4392-4428]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4406-4418]:ReturnStatement[4406-4418]"
    }, {
      "left" : "if (forSerialization)",
      "right" : "if (forSerialization)",
      "info" : "IfStatement[4522-4740]:IfStatement[4522-4740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4544-4639]:Block[4544-4639]"
    }, {
      "left" : "if (ignore.allowGetters())",
      "right" : "if (ignore.allowGetters())",
      "info" : "IfStatement[4558-4629]:IfStatement[4558-4629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4585-4629]:Block[4585-4629]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4603-4615]:ReturnStatement[4603-4615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4645-4740]:Block[4645-4740]"
    }, {
      "left" : "if (ignore.allowSetters())",
      "right" : "if (ignore.allowSetters())",
      "info" : "IfStatement[4659-4730]:IfStatement[4659-4730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4686-4730]:Block[4686-4730]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4704-4716]:ReturnStatement[4704-4716]"
    }, {
      "left" : "return ignore.value();",
      "right" : "return ignore.value();",
      "info" : "ReturnStatement[4749-4771]:ReturnStatement[4749-4771]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4787-4796]:MarkerAnnotation[4787-4796]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4801-4807]:Modifier[4801-4807]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[4808-4815]:SimpleType[4808-4815]"
    }, {
      "left" : "findIgnoreUnknownProperties",
      "right" : "findIgnoreUnknownProperties",
      "info" : "SimpleName[4816-4843]:SimpleName[4816-4843]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[4844-4861]:SingleVariableDeclaration[4844-4861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4863-5022]:Block[4863-5022]"
    }, {
      "left" : "JsonIgnoreProperties ignore = _findAnnotation(ac, JsonIgnoreProperties.class);",
      "right" : "JsonIgnoreProperties ignore = _findAnnotation(ac, JsonIgnoreProperties.class);",
      "info" : "VariableDeclarationStatement[4873-4951]:VariableDeclarationStatement[4873-4951]"
    }, {
      "left" : "return (ignore == null) ? null : ignore.ignoreUnknown();",
      "right" : "return (ignore == null) ? null : ignore.ignoreUnknown();",
      "info" : "ReturnStatement[4960-5016]:ReturnStatement[4960-5016]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5028-5037]:MarkerAnnotation[5028-5037]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5042-5048]:Modifier[5042-5048]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[5049-5056]:SimpleType[5049-5056]"
    }, {
      "left" : "isIgnorableType",
      "right" : "isIgnorableType",
      "info" : "SimpleName[5057-5072]:SimpleName[5057-5072]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[5073-5090]:SingleVariableDeclaration[5073-5090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5092-5231]:Block[5092-5231]"
    }, {
      "left" : "JsonIgnoreType ignore = _findAnnotation(ac, JsonIgnoreType.class);",
      "right" : "JsonIgnoreType ignore = _findAnnotation(ac, JsonIgnoreType.class);",
      "info" : "VariableDeclarationStatement[5102-5168]:VariableDeclarationStatement[5102-5168]"
    }, {
      "left" : "return (ignore == null) ? null : ignore.value();",
      "right" : "return (ignore == null) ? null : ignore.value();",
      "info" : "ReturnStatement[5177-5225]:ReturnStatement[5177-5225]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[5329-5340]:MarkerAnnotation[5329-5340]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5345-5354]:MarkerAnnotation[5345-5354]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5359-5365]:Modifier[5359-5365]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[5366-5372]:SimpleType[5366-5372]"
    }, {
      "left" : "findFilterId",
      "right" : "findFilterId",
      "info" : "SimpleName[5373-5385]:SimpleName[5373-5385]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[5386-5403]:SingleVariableDeclaration[5386-5403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5405-5446]:Block[5405-5446]"
    }, {
      "left" : "return _findFilterId(ac);",
      "right" : "return _findFilterId(ac);",
      "info" : "ReturnStatement[5415-5440]:ReturnStatement[5415-5440]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5456-5465]:MarkerAnnotation[5456-5465]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5470-5476]:Modifier[5470-5476]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[5477-5483]:SimpleType[5477-5483]"
    }, {
      "left" : "findFilterId",
      "right" : "findFilterId",
      "info" : "SimpleName[5484-5496]:SimpleName[5484-5496]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[5497-5508]:SingleVariableDeclaration[5497-5508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5510-5550]:Block[5510-5550]"
    }, {
      "left" : "return _findFilterId(a);",
      "right" : "return _findFilterId(a);",
      "info" : "ReturnStatement[5520-5544]:ReturnStatement[5520-5544]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5556-5565]:Modifier[5556-5565]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5566-5571]:Modifier[5566-5571]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[5572-5578]:SimpleType[5572-5578]"
    }, {
      "left" : "_findFilterId",
      "right" : "_findFilterId",
      "info" : "SimpleName[5579-5592]:SimpleName[5579-5592]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[5593-5604]:SingleVariableDeclaration[5593-5604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5610-5932]:Block[5610-5932]"
    }, {
      "left" : "JsonFilter ann = _findAnnotation(a, JsonFilter.class);",
      "right" : "JsonFilter ann = _findAnnotation(a, JsonFilter.class);",
      "info" : "VariableDeclarationStatement[5620-5674]:VariableDeclarationStatement[5620-5674]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[5683-5905]:IfStatement[5683-5905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5700-5905]:Block[5700-5905]"
    }, {
      "left" : "String id = ann.value();",
      "right" : "String id = ann.value();",
      "info" : "VariableDeclarationStatement[5714-5738]:VariableDeclarationStatement[5714-5738]"
    }, {
      "left" : "if (id.length() > 0)",
      "right" : "if (id.length() > 0)",
      "info" : "IfStatement[5832-5895]:IfStatement[5832-5895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5853-5895]:Block[5853-5895]"
    }, {
      "left" : "return id;",
      "right" : "return id;",
      "info" : "ReturnStatement[5871-5881]:ReturnStatement[5871-5881]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5914-5926]:ReturnStatement[5914-5926]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5938-5947]:MarkerAnnotation[5938-5947]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5952-5958]:Modifier[5952-5958]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[5959-5965]:SimpleType[5959-5965]"
    }, {
      "left" : "findNamingStrategy",
      "right" : "findNamingStrategy",
      "info" : "SimpleName[5966-5984]:SimpleName[5966-5984]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[5985-6002]:SingleVariableDeclaration[5985-6002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6008-6130]:Block[6008-6130]"
    }, {
      "left" : "JsonNaming ann = _findAnnotation(ac, JsonNaming.class);",
      "right" : "JsonNaming ann = _findAnnotation(ac, JsonNaming.class);",
      "info" : "VariableDeclarationStatement[6018-6073]:VariableDeclarationStatement[6018-6073]"
    }, {
      "left" : "return (ann == null) ? null : ann.value();",
      "right" : "return (ann == null) ? null : ann.value();",
      "info" : "ReturnStatement[6082-6124]:ReturnStatement[6082-6124]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6316-6325]:MarkerAnnotation[6316-6325]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6330-6336]:Modifier[6330-6336]"
    }, {
      "left" : "VisibilityChecker<?>",
      "right" : "VisibilityChecker<?>",
      "info" : "ParameterizedType[6337-6357]:ParameterizedType[6337-6357]"
    }, {
      "left" : "findAutoDetectVisibility",
      "right" : "findAutoDetectVisibility",
      "info" : "SimpleName[6358-6382]:SimpleName[6358-6382]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[6383-6400]:SingleVariableDeclaration[6383-6400]"
    }, {
      "left" : "VisibilityChecker<?> checker",
      "right" : "VisibilityChecker<?> checker",
      "info" : "SingleVariableDeclaration[6410-6438]:SingleVariableDeclaration[6410-6438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6444-6583]:Block[6444-6583]"
    }, {
      "left" : "JsonAutoDetect ann = _findAnnotation(ac, JsonAutoDetect.class);",
      "right" : "JsonAutoDetect ann = _findAnnotation(ac, JsonAutoDetect.class);",
      "info" : "VariableDeclarationStatement[6454-6517]:VariableDeclarationStatement[6454-6517]"
    }, {
      "left" : "return (ann == null) ? checker : checker.with(ann);",
      "right" : "return (ann == null) ? checker : checker.with(ann);",
      "info" : "ReturnStatement[6526-6577]:ReturnStatement[6526-6577]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6795-6804]:MarkerAnnotation[6795-6804]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6809-6815]:Modifier[6809-6815]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6816-6822]:SimpleType[6816-6822]"
    }, {
      "left" : "findImplicitPropertyName",
      "right" : "findImplicitPropertyName",
      "info" : "SimpleName[6823-6847]:SimpleName[6823-6847]"
    }, {
      "left" : "AnnotatedMember param",
      "right" : "AnnotatedMember param",
      "info" : "SingleVariableDeclaration[6848-6869]:SingleVariableDeclaration[6848-6869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6871-6978]:Block[6871-6978]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6960-6972]:ReturnStatement[6960-6972]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6988-6997]:MarkerAnnotation[6988-6997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7002-7008]:Modifier[7002-7008]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7009-7016]:PrimitiveType[7009-7016]"
    }, {
      "left" : "hasIgnoreMarker",
      "right" : "hasIgnoreMarker",
      "info" : "SimpleName[7017-7032]:SimpleName[7017-7032]"
    }, {
      "left" : "AnnotatedMember m",
      "right" : "AnnotatedMember m",
      "info" : "SingleVariableDeclaration[7033-7050]:SingleVariableDeclaration[7033-7050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7052-7091]:Block[7052-7091]"
    }, {
      "left" : "return _isIgnorable(m);",
      "right" : "return _isIgnorable(m);",
      "info" : "ReturnStatement[7062-7085]:ReturnStatement[7062-7085]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7097-7106]:MarkerAnnotation[7097-7106]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7111-7117]:Modifier[7111-7117]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[7118-7125]:SimpleType[7118-7125]"
    }, {
      "left" : "hasRequiredMarker",
      "right" : "hasRequiredMarker",
      "info" : "SimpleName[7126-7143]:SimpleName[7126-7143]"
    }, {
      "left" : "AnnotatedMember m",
      "right" : "AnnotatedMember m",
      "info" : "SingleVariableDeclaration[7144-7161]:SingleVariableDeclaration[7144-7161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7167-7334]:Block[7167-7334]"
    }, {
      "left" : "JsonProperty ann = _findAnnotation(m, JsonProperty.class);",
      "right" : "JsonProperty ann = _findAnnotation(m, JsonProperty.class);",
      "info" : "VariableDeclarationStatement[7177-7235]:VariableDeclarationStatement[7177-7235]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[7244-7307]:IfStatement[7244-7307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7261-7307]:Block[7261-7307]"
    }, {
      "left" : "return ann.required();",
      "right" : "return ann.required();",
      "info" : "ReturnStatement[7275-7297]:ReturnStatement[7275-7297]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7316-7328]:ReturnStatement[7316-7328]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7340-7349]:MarkerAnnotation[7340-7349]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7354-7360]:Modifier[7354-7360]"
    }, {
      "left" : "JsonProperty.Access",
      "right" : "JsonProperty.Access",
      "info" : "SimpleType[7361-7380]:SimpleType[7361-7380]"
    }, {
      "left" : "findPropertyAccess",
      "right" : "findPropertyAccess",
      "info" : "SimpleName[7381-7399]:SimpleName[7381-7399]"
    }, {
      "left" : "Annotated m",
      "right" : "Annotated m",
      "info" : "SingleVariableDeclaration[7400-7411]:SingleVariableDeclaration[7400-7411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7413-7578]:Block[7413-7578]"
    }, {
      "left" : "JsonProperty ann = _findAnnotation(m, JsonProperty.class);",
      "right" : "JsonProperty ann = _findAnnotation(m, JsonProperty.class);",
      "info" : "VariableDeclarationStatement[7423-7481]:VariableDeclarationStatement[7423-7481]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[7490-7551]:IfStatement[7490-7551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7507-7551]:Block[7507-7551]"
    }, {
      "left" : "return ann.access();",
      "right" : "return ann.access();",
      "info" : "ReturnStatement[7521-7541]:ReturnStatement[7521-7541]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7560-7572]:ReturnStatement[7560-7572]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7584-7593]:MarkerAnnotation[7584-7593]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7598-7604]:Modifier[7598-7604]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7605-7611]:SimpleType[7605-7611]"
    }, {
      "left" : "findPropertyDescription",
      "right" : "findPropertyDescription",
      "info" : "SimpleName[7612-7635]:SimpleName[7612-7635]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[7636-7649]:SingleVariableDeclaration[7636-7649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7651-7803]:Block[7651-7803]"
    }, {
      "left" : "JsonPropertyDescription desc = _findAnnotation(ann, JsonPropertyDescription.class);",
      "right" : "JsonPropertyDescription desc = _findAnnotation(ann, JsonPropertyDescription.class);",
      "info" : "VariableDeclarationStatement[7661-7744]:VariableDeclarationStatement[7661-7744]"
    }, {
      "left" : "return (desc == null) ? null : desc.value();",
      "right" : "return (desc == null) ? null : desc.value();",
      "info" : "ReturnStatement[7753-7797]:ReturnStatement[7753-7797]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7809-7818]:MarkerAnnotation[7809-7818]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7823-7829]:Modifier[7823-7829]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[7830-7837]:SimpleType[7830-7837]"
    }, {
      "left" : "findPropertyIndex",
      "right" : "findPropertyIndex",
      "info" : "SimpleName[7838-7855]:SimpleName[7838-7855]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[7856-7869]:SingleVariableDeclaration[7856-7869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7871-8145]:Block[7871-8145]"
    }, {
      "left" : "JsonProperty prop = _findAnnotation(ann, JsonProperty.class);",
      "right" : "JsonProperty prop = _findAnnotation(ann, JsonProperty.class);",
      "info" : "VariableDeclarationStatement[7881-7942]:VariableDeclarationStatement[7881-7942]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[7951-8118]:IfStatement[7951-8118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7969-8118]:Block[7969-8118]"
    }, {
      "left" : "int ix = prop.index();",
      "right" : "int ix = prop.index();",
      "info" : "VariableDeclarationStatement[7981-8003]:VariableDeclarationStatement[7981-8003]"
    }, {
      "left" : "if (ix != JsonProperty.INDEX_UNKNOWN)",
      "right" : "if (ix != JsonProperty.INDEX_UNKNOWN)",
      "info" : "IfStatement[8014-8108]:IfStatement[8014-8108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8052-8108]:Block[8052-8108]"
    }, {
      "left" : "return Integer.valueOf(ix);",
      "right" : "return Integer.valueOf(ix);",
      "info" : "ReturnStatement[8069-8096]:ReturnStatement[8069-8096]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8127-8139]:ReturnStatement[8127-8139]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8155-8164]:MarkerAnnotation[8155-8164]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8169-8175]:Modifier[8169-8175]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8176-8182]:SimpleType[8176-8182]"
    }, {
      "left" : "findPropertyDefaultValue",
      "right" : "findPropertyDefaultValue",
      "info" : "SimpleName[8183-8207]:SimpleName[8183-8207]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[8208-8221]:SingleVariableDeclaration[8208-8221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8223-8531]:Block[8223-8531]"
    }, {
      "left" : "JsonProperty prop = _findAnnotation(ann, JsonProperty.class);",
      "right" : "JsonProperty prop = _findAnnotation(ann, JsonProperty.class);",
      "info" : "VariableDeclarationStatement[8233-8294]:VariableDeclarationStatement[8233-8294]"
    }, {
      "left" : "if (prop == null)",
      "right" : "if (prop == null)",
      "info" : "IfStatement[8303-8357]:IfStatement[8303-8357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8321-8357]:Block[8321-8357]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8335-8347]:ReturnStatement[8335-8347]"
    }, {
      "left" : "String str = prop.defaultValue();",
      "right" : "String str = prop.defaultValue();",
      "info" : "VariableDeclarationStatement[8366-8399]:VariableDeclarationStatement[8366-8399]"
    }, {
      "left" : "return str.isEmpty() ? null : str;",
      "right" : "return str.isEmpty() ? null : str;",
      "info" : "ReturnStatement[8491-8525]:ReturnStatement[8491-8525]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8541-8550]:MarkerAnnotation[8541-8550]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8555-8561]:Modifier[8555-8561]"
    }, {
      "left" : "JsonFormat.Value",
      "right" : "JsonFormat.Value",
      "info" : "SimpleType[8562-8578]:SimpleType[8562-8578]"
    }, {
      "left" : "findFormat",
      "right" : "findFormat",
      "info" : "SimpleName[8579-8589]:SimpleName[8579-8589]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[8590-8603]:SingleVariableDeclaration[8590-8603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8605-8737]:Block[8605-8737]"
    }, {
      "left" : "JsonFormat f = _findAnnotation(ann, JsonFormat.class);",
      "right" : "JsonFormat f = _findAnnotation(ann, JsonFormat.class);",
      "info" : "VariableDeclarationStatement[8615-8669]:VariableDeclarationStatement[8615-8669]"
    }, {
      "left" : "return (f == null)  ? null : new JsonFormat.Value(f);",
      "right" : "return (f == null)  ? null : new JsonFormat.Value(f);",
      "info" : "ReturnStatement[8678-8731]:ReturnStatement[8678-8731]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8743-8752]:MarkerAnnotation[8743-8752]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8765-8771]:Modifier[8765-8771]"
    }, {
      "left" : "ReferenceProperty",
      "right" : "ReferenceProperty",
      "info" : "SimpleType[8772-8789]:SimpleType[8772-8789]"
    }, {
      "left" : "findReferenceType",
      "right" : "findReferenceType",
      "info" : "SimpleName[8790-8807]:SimpleName[8790-8807]"
    }, {
      "left" : "AnnotatedMember member",
      "right" : "AnnotatedMember member",
      "info" : "SingleVariableDeclaration[8808-8830]:SingleVariableDeclaration[8808-8830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8836-9275]:Block[8836-9275]"
    }, {
      "left" : "JsonManagedReference ref1 = _findAnnotation(member, JsonManagedReference.class);",
      "right" : "JsonManagedReference ref1 = _findAnnotation(member, JsonManagedReference.class);",
      "info" : "VariableDeclarationStatement[8846-8926]:VariableDeclarationStatement[8846-8926]"
    }, {
      "left" : "if (ref1 != null)",
      "right" : "if (ref1 != null)",
      "info" : "IfStatement[8935-9047]:IfStatement[8935-9047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8953-9047]:Block[8953-9047]"
    }, {
      "left" : "return AnnotationIntrospector.ReferenceProperty.managed(ref1.value());",
      "right" : "return AnnotationIntrospector.ReferenceProperty.managed(ref1.value());",
      "info" : "ReturnStatement[8967-9037]:ReturnStatement[8967-9037]"
    }, {
      "left" : "JsonBackReference ref2 = _findAnnotation(member, JsonBackReference.class);",
      "right" : "JsonBackReference ref2 = _findAnnotation(member, JsonBackReference.class);",
      "info" : "VariableDeclarationStatement[9056-9130]:VariableDeclarationStatement[9056-9130]"
    }, {
      "left" : "if (ref2 != null)",
      "right" : "if (ref2 != null)",
      "info" : "IfStatement[9139-9248]:IfStatement[9139-9248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9157-9248]:Block[9157-9248]"
    }, {
      "left" : "return AnnotationIntrospector.ReferenceProperty.back(ref2.value());",
      "right" : "return AnnotationIntrospector.ReferenceProperty.back(ref2.value());",
      "info" : "ReturnStatement[9171-9238]:ReturnStatement[9171-9238]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9257-9269]:ReturnStatement[9257-9269]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9281-9290]:MarkerAnnotation[9281-9290]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9295-9301]:Modifier[9295-9301]"
    }, {
      "left" : "NameTransformer",
      "right" : "NameTransformer",
      "info" : "SimpleType[9302-9317]:SimpleType[9302-9317]"
    }, {
      "left" : "findUnwrappingNameTransformer",
      "right" : "findUnwrappingNameTransformer",
      "info" : "SimpleName[9318-9347]:SimpleName[9318-9347]"
    }, {
      "left" : "AnnotatedMember member",
      "right" : "AnnotatedMember member",
      "info" : "SingleVariableDeclaration[9348-9370]:SingleVariableDeclaration[9348-9370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9376-9850]:Block[9376-9850]"
    }, {
      "left" : "JsonUnwrapped ann = _findAnnotation(member, JsonUnwrapped.class);",
      "right" : "JsonUnwrapped ann = _findAnnotation(member, JsonUnwrapped.class);",
      "info" : "VariableDeclarationStatement[9386-9451]:VariableDeclarationStatement[9386-9451]"
    }, {
      "left" : "if (ann == null || !ann.enabled())",
      "right" : "if (ann == null || !ann.enabled())",
      "info" : "IfStatement[9631-9702]:IfStatement[9631-9702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9666-9702]:Block[9666-9702]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9680-9692]:ReturnStatement[9680-9692]"
    }, {
      "left" : "String prefix = ann.prefix();",
      "right" : "String prefix = ann.prefix();",
      "info" : "VariableDeclarationStatement[9711-9740]:VariableDeclarationStatement[9711-9740]"
    }, {
      "left" : "String suffix = ann.suffix();",
      "right" : "String suffix = ann.suffix();",
      "info" : "VariableDeclarationStatement[9749-9778]:VariableDeclarationStatement[9749-9778]"
    }, {
      "left" : "return NameTransformer.simpleTransformer(prefix, suffix);",
      "right" : "return NameTransformer.simpleTransformer(prefix, suffix);",
      "info" : "ReturnStatement[9787-9844]:ReturnStatement[9787-9844]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9856-9865]:MarkerAnnotation[9856-9865]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9870-9876]:Modifier[9870-9876]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[9877-9883]:SimpleType[9877-9883]"
    }, {
      "left" : "findInjectableValueId",
      "right" : "findInjectableValueId",
      "info" : "SimpleName[9884-9905]:SimpleName[9884-9905]"
    }, {
      "left" : "AnnotatedMember m",
      "right" : "AnnotatedMember m",
      "info" : "SingleVariableDeclaration[9906-9923]:SingleVariableDeclaration[9906-9923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9929-10652]:Block[9929-10652]"
    }, {
      "left" : "JacksonInject ann = _findAnnotation(m, JacksonInject.class);",
      "right" : "JacksonInject ann = _findAnnotation(m, JacksonInject.class);",
      "info" : "VariableDeclarationStatement[9939-9999]:VariableDeclarationStatement[9939-9999]"
    }, {
      "left" : "if (ann == null)",
      "right" : "if (ann == null)",
      "info" : "IfStatement[10008-10061]:IfStatement[10008-10061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10025-10061]:Block[10025-10061]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10039-10051]:ReturnStatement[10039-10051]"
    }, {
      "left" : "String id = ann.value();",
      "right" : "String id = ann.value();",
      "info" : "VariableDeclarationStatement[10172-10196]:VariableDeclarationStatement[10172-10196]"
    }, {
      "left" : "if (id.length() == 0)",
      "right" : "if (id.length() == 0)",
      "info" : "IfStatement[10205-10627]:IfStatement[10205-10627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10227-10627]:Block[10227-10627]"
    }, {
      "left" : "if (!(m instanceof AnnotatedMethod))",
      "right" : "if (!(m instanceof AnnotatedMethod))",
      "info" : "IfStatement[10296-10397]:IfStatement[10296-10397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10333-10397]:Block[10333-10397]"
    }, {
      "left" : "return m.getRawType().getName();",
      "right" : "return m.getRawType().getName();",
      "info" : "ReturnStatement[10351-10383]:ReturnStatement[10351-10383]"
    }, {
      "left" : "AnnotatedMethod am = (AnnotatedMethod) m;",
      "right" : "AnnotatedMethod am = (AnnotatedMethod) m;",
      "info" : "VariableDeclarationStatement[10410-10451]:VariableDeclarationStatement[10410-10451]"
    }, {
      "left" : "if (am.getParameterCount() == 0)",
      "right" : "if (am.getParameterCount() == 0)",
      "info" : "IfStatement[10464-10561]:IfStatement[10464-10561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10497-10561]:Block[10497-10561]"
    }, {
      "left" : "return m.getRawType().getName();",
      "right" : "return m.getRawType().getName();",
      "info" : "ReturnStatement[10515-10547]:ReturnStatement[10515-10547]"
    }, {
      "left" : "return am.getRawParameterType(0).getName();",
      "right" : "return am.getRawParameterType(0).getName();",
      "info" : "ReturnStatement[10574-10617]:ReturnStatement[10574-10617]"
    }, {
      "left" : "return id;",
      "right" : "return id;",
      "info" : "ReturnStatement[10636-10646]:ReturnStatement[10636-10646]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10658-10667]:MarkerAnnotation[10658-10667]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10672-10678]:Modifier[10672-10678]"
    }, {
      "left" : "Class<?>[]",
      "right" : "Class<?>[]",
      "info" : "ArrayType[10679-10689]:ArrayType[10679-10689]"
    }, {
      "left" : "findViews",
      "right" : "findViews",
      "info" : "SimpleName[10690-10699]:SimpleName[10690-10699]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[10700-10711]:SingleVariableDeclaration[10700-10711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10717-10834]:Block[10717-10834]"
    }, {
      "left" : "JsonView ann = _findAnnotation(a, JsonView.class);",
      "right" : "JsonView ann = _findAnnotation(a, JsonView.class);",
      "info" : "VariableDeclarationStatement[10727-10777]:VariableDeclarationStatement[10727-10777]"
    }, {
      "left" : "return (ann == null) ? null : ann.value();",
      "right" : "return (ann == null) ? null : ann.value();",
      "info" : "ReturnStatement[10786-10828]:ReturnStatement[10786-10828]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11033-11042]:MarkerAnnotation[11033-11042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11047-11053]:Modifier[11047-11053]"
    }, {
      "left" : "TypeResolverBuilder<?>",
      "right" : "TypeResolverBuilder<?>",
      "info" : "ParameterizedType[11054-11076]:ParameterizedType[11054-11076]"
    }, {
      "left" : "findTypeResolver",
      "right" : "findTypeResolver",
      "info" : "SimpleName[11077-11093]:SimpleName[11077-11093]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[11094-11116]:SingleVariableDeclaration[11094-11116]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[11130-11147]:SingleVariableDeclaration[11130-11147]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[11149-11166]:SingleVariableDeclaration[11149-11166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11172-11235]:Block[11172-11235]"
    }, {
      "left" : "return _findTypeResolver(config, ac, baseType);",
      "right" : "return _findTypeResolver(config, ac, baseType);",
      "info" : "ReturnStatement[11182-11229]:ReturnStatement[11182-11229]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11241-11250]:MarkerAnnotation[11241-11250]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11255-11261]:Modifier[11255-11261]"
    }, {
      "left" : "TypeResolverBuilder<?>",
      "right" : "TypeResolverBuilder<?>",
      "info" : "ParameterizedType[11262-11284]:ParameterizedType[11262-11284]"
    }, {
      "left" : "findPropertyTypeResolver",
      "right" : "findPropertyTypeResolver",
      "info" : "SimpleName[11285-11309]:SimpleName[11285-11309]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[11310-11332]:SingleVariableDeclaration[11310-11332]"
    }, {
      "left" : "AnnotatedMember am",
      "right" : "AnnotatedMember am",
      "info" : "SingleVariableDeclaration[11346-11364]:SingleVariableDeclaration[11346-11364]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[11366-11383]:SingleVariableDeclaration[11366-11383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11389-11721]:Block[11389-11721]"
    }, {
      "left" : "if (baseType.isContainerType())",
      "right" : "if (baseType.isContainerType())",
      "info" : "IfStatement[11569-11613]:IfStatement[11569-11613]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11601-11613]:ReturnStatement[11601-11613]"
    }, {
      "left" : "return _findTypeResolver(config, am, baseType);",
      "right" : "return _findTypeResolver(config, am, baseType);",
      "info" : "ReturnStatement[11668-11715]:ReturnStatement[11668-11715]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11727-11736]:MarkerAnnotation[11727-11736]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11741-11747]:Modifier[11741-11747]"
    }, {
      "left" : "TypeResolverBuilder<?>",
      "right" : "TypeResolverBuilder<?>",
      "info" : "ParameterizedType[11748-11770]:ParameterizedType[11748-11770]"
    }, {
      "left" : "findPropertyContentTypeResolver",
      "right" : "findPropertyContentTypeResolver",
      "info" : "SimpleName[11771-11802]:SimpleName[11771-11802]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[11803-11825]:SingleVariableDeclaration[11803-11825]"
    }, {
      "left" : "AnnotatedMember am",
      "right" : "AnnotatedMember am",
      "info" : "SingleVariableDeclaration[11839-11857]:SingleVariableDeclaration[11839-11857]"
    }, {
      "left" : "JavaType containerType",
      "right" : "JavaType containerType",
      "info" : "SingleVariableDeclaration[11859-11881]:SingleVariableDeclaration[11859-11881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11887-12259]:Block[11887-12259]"
    }, {
      "left" : "if (!containerType.isContainerType())",
      "right" : "if (!containerType.isContainerType())",
      "info" : "IfStatement[12029-12192]:IfStatement[12029-12192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12067-12192]:Block[12067-12192]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Must call method with a container type (got \"+containerType+\")\");",
      "right" : "throw new IllegalArgumentException(\"Must call method with a container type (got \"+containerType+\")\");",
      "info" : "ThrowStatement[12081-12182]:ThrowStatement[12081-12182]"
    }, {
      "left" : "return _findTypeResolver(config, am, containerType);",
      "right" : "return _findTypeResolver(config, am, containerType);",
      "info" : "ReturnStatement[12201-12253]:ReturnStatement[12201-12253]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12269-12278]:MarkerAnnotation[12269-12278]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12283-12289]:Modifier[12283-12289]"
    }, {
      "left" : "List<NamedType>",
      "right" : "List<NamedType>",
      "info" : "ParameterizedType[12290-12305]:ParameterizedType[12290-12305]"
    }, {
      "left" : "findSubtypes",
      "right" : "findSubtypes",
      "info" : "SimpleName[12306-12318]:SimpleName[12306-12318]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[12319-12330]:SingleVariableDeclaration[12319-12330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12336-12715]:Block[12336-12715]"
    }, {
      "left" : "JsonSubTypes t = _findAnnotation(a, JsonSubTypes.class);",
      "right" : "JsonSubTypes t = _findAnnotation(a, JsonSubTypes.class);",
      "info" : "VariableDeclarationStatement[12346-12402]:VariableDeclarationStatement[12346-12402]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[12411-12438]:IfStatement[12411-12438]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12426-12438]:ReturnStatement[12426-12438]"
    }, {
      "left" : "JsonSubTypes.Type[] types = t.value();",
      "right" : "JsonSubTypes.Type[] types = t.value();",
      "info" : "VariableDeclarationStatement[12447-12485]:VariableDeclarationStatement[12447-12485]"
    }, {
      "left" : "ArrayList<NamedType> result = new ArrayList<NamedType>(types.length);",
      "right" : "ArrayList<NamedType> result = new ArrayList<NamedType>(types.length);",
      "info" : "VariableDeclarationStatement[12494-12563]:VariableDeclarationStatement[12494-12563]"
    }, {
      "left" : "for (JsonSubTypes.Type type : types)",
      "right" : "for (JsonSubTypes.Type type : types)",
      "info" : "EnhancedForStatement[12572-12686]:EnhancedForStatement[12572-12686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12609-12686]:Block[12609-12686]"
    }, {
      "left" : "result.add(new NamedType(type.value(), type.name()));",
      "right" : "result.add(new NamedType(type.value(), type.name()));",
      "info" : "ExpressionStatement[12623-12676]:ExpressionStatement[12623-12676]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[12695-12709]:ReturnStatement[12695-12709]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12721-12730]:MarkerAnnotation[12721-12730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12743-12749]:Modifier[12743-12749]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12750-12756]:SimpleType[12750-12756]"
    }, {
      "left" : "findTypeName",
      "right" : "findTypeName",
      "info" : "SimpleName[12757-12769]:SimpleName[12757-12769]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[12770-12787]:SingleVariableDeclaration[12770-12787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12793-12916]:Block[12793-12916]"
    }, {
      "left" : "JsonTypeName tn = _findAnnotation(ac, JsonTypeName.class);",
      "right" : "JsonTypeName tn = _findAnnotation(ac, JsonTypeName.class);",
      "info" : "VariableDeclarationStatement[12803-12861]:VariableDeclarationStatement[12803-12861]"
    }, {
      "left" : "return (tn == null) ? null : tn.value();",
      "right" : "return (tn == null) ? null : tn.value();",
      "info" : "ReturnStatement[12870-12910]:ReturnStatement[12870-12910]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12922-12931]:MarkerAnnotation[12922-12931]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12936-12942]:Modifier[12936-12942]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[12943-12950]:SimpleType[12943-12950]"
    }, {
      "left" : "isTypeId",
      "right" : "isTypeId",
      "info" : "SimpleName[12951-12959]:SimpleName[12951-12959]"
    }, {
      "left" : "AnnotatedMember member",
      "right" : "AnnotatedMember member",
      "info" : "SingleVariableDeclaration[12960-12982]:SingleVariableDeclaration[12960-12982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12984-13048]:Block[12984-13048]"
    }, {
      "left" : "return _hasAnnotation(member, JsonTypeId.class);",
      "right" : "return _hasAnnotation(member, JsonTypeId.class);",
      "info" : "ReturnStatement[12994-13042]:ReturnStatement[12994-13042]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13240-13249]:MarkerAnnotation[13240-13249]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13254-13260]:Modifier[13254-13260]"
    }, {
      "left" : "ObjectIdInfo",
      "right" : "ObjectIdInfo",
      "info" : "SimpleType[13261-13273]:SimpleType[13261-13273]"
    }, {
      "left" : "findObjectIdInfo",
      "right" : "findObjectIdInfo",
      "info" : "SimpleName[13274-13290]:SimpleName[13274-13290]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[13291-13304]:SingleVariableDeclaration[13291-13304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13306-13722]:Block[13306-13722]"
    }, {
      "left" : "JsonIdentityInfo info = _findAnnotation(ann, JsonIdentityInfo.class);",
      "right" : "JsonIdentityInfo info = _findAnnotation(ann, JsonIdentityInfo.class);",
      "info" : "VariableDeclarationStatement[13316-13385]:VariableDeclarationStatement[13316-13385]"
    }, {
      "left" : "if (info == null || info.generator() == ObjectIdGenerators.None.class)",
      "right" : "if (info == null || info.generator() == ObjectIdGenerators.None.class)",
      "info" : "IfStatement[13394-13501]:IfStatement[13394-13501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13465-13501]:Block[13465-13501]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13479-13491]:ReturnStatement[13479-13491]"
    }, {
      "left" : "PropertyName name = PropertyName.construct(info.property());",
      "right" : "PropertyName name = PropertyName.construct(info.property());",
      "info" : "VariableDeclarationStatement[13568-13628]:VariableDeclarationStatement[13568-13628]"
    }, {
      "left" : "return new ObjectIdInfo(name, info.scope(), info.generator(), info.resolver());",
      "right" : "return new ObjectIdInfo(name, info.scope(), info.generator(), info.resolver());",
      "info" : "ReturnStatement[13637-13716]:ReturnStatement[13637-13716]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13728-13737]:MarkerAnnotation[13728-13737]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13742-13748]:Modifier[13742-13748]"
    }, {
      "left" : "ObjectIdInfo",
      "right" : "ObjectIdInfo",
      "info" : "SimpleType[13749-13761]:SimpleType[13749-13761]"
    }, {
      "left" : "findObjectReferenceInfo",
      "right" : "findObjectReferenceInfo",
      "info" : "SimpleName[13762-13785]:SimpleName[13762-13785]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[13786-13799]:SingleVariableDeclaration[13786-13799]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo",
      "right" : "ObjectIdInfo objectIdInfo",
      "info" : "SingleVariableDeclaration[13801-13826]:SingleVariableDeclaration[13801-13826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13828-14062]:Block[13828-14062]"
    }, {
      "left" : "JsonIdentityReference ref = _findAnnotation(ann, JsonIdentityReference.class);",
      "right" : "JsonIdentityReference ref = _findAnnotation(ann, JsonIdentityReference.class);",
      "info" : "VariableDeclarationStatement[13838-13916]:VariableDeclarationStatement[13838-13916]"
    }, {
      "left" : "if (ref != null)",
      "right" : "if (ref != null)",
      "info" : "IfStatement[13925-14027]:IfStatement[13925-14027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13942-14027]:Block[13942-14027]"
    }, {
      "left" : "objectIdInfo = objectIdInfo.withAlwaysAsId(ref.alwaysAsId());",
      "right" : "objectIdInfo = objectIdInfo.withAlwaysAsId(ref.alwaysAsId());",
      "info" : "ExpressionStatement[13956-14017]:ExpressionStatement[13956-14017]"
    }, {
      "left" : "return objectIdInfo;",
      "right" : "return objectIdInfo;",
      "info" : "ReturnStatement[14036-14056]:ReturnStatement[14036-14056]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14253-14262]:MarkerAnnotation[14253-14262]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14267-14273]:Modifier[14267-14273]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[14274-14280]:SimpleType[14274-14280]"
    }, {
      "left" : "findSerializer",
      "right" : "findSerializer",
      "info" : "SimpleName[14281-14295]:SimpleName[14281-14295]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[14296-14307]:SingleVariableDeclaration[14296-14307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14313-15213]:Block[14313-15213]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[14323-14383]:VariableDeclarationStatement[14323-14383]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[14392-14634]:IfStatement[14392-14634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14409-14634]:Block[14409-14634]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.using();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.using();",
      "info" : "VariableDeclarationStatement[14423-14520]:VariableDeclarationStatement[14423-14520]"
    }, {
      "left" : "if (serClass != JsonSerializer.None.class)",
      "right" : "if (serClass != JsonSerializer.None.class)",
      "info" : "IfStatement[14533-14624]:IfStatement[14533-14624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14576-14624]:Block[14576-14624]"
    }, {
      "left" : "return serClass;",
      "right" : "return serClass;",
      "info" : "ReturnStatement[14594-14610]:ReturnStatement[14594-14610]"
    }, {
      "left" : "JsonRawValue annRaw =  _findAnnotation(a, JsonRawValue.class);",
      "right" : "JsonRawValue annRaw =  _findAnnotation(a, JsonRawValue.class);",
      "info" : "VariableDeclarationStatement[14904-14966]:VariableDeclarationStatement[14904-14966]"
    }, {
      "left" : "if ((annRaw != null) && annRaw.value())",
      "right" : "if ((annRaw != null) && annRaw.value())",
      "info" : "IfStatement[14975-15179]:IfStatement[14975-15179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15015-15179]:Block[15015-15179]"
    }, {
      "left" : "Class<?> cls = a.getRawType();",
      "right" : "Class<?> cls = a.getRawType();",
      "info" : "VariableDeclarationStatement[15088-15118]:VariableDeclarationStatement[15088-15118]"
    }, {
      "left" : "return new RawSerializer<Object>(cls);",
      "right" : "return new RawSerializer<Object>(cls);",
      "info" : "ReturnStatement[15131-15169]:ReturnStatement[15131-15169]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15195-15207]:ReturnStatement[15195-15207]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15219-15228]:MarkerAnnotation[15219-15228]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15233-15239]:Modifier[15233-15239]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[15240-15246]:SimpleType[15240-15246]"
    }, {
      "left" : "findKeySerializer",
      "right" : "findKeySerializer",
      "info" : "SimpleName[15247-15264]:SimpleName[15247-15264]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[15265-15276]:SingleVariableDeclaration[15265-15276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15282-15633]:Block[15282-15633]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[15292-15352]:VariableDeclarationStatement[15292-15352]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[15361-15606]:IfStatement[15361-15606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15378-15606]:Block[15378-15606]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.keyUsing();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.keyUsing();",
      "info" : "VariableDeclarationStatement[15392-15492]:VariableDeclarationStatement[15392-15492]"
    }, {
      "left" : "if (serClass != JsonSerializer.None.class)",
      "right" : "if (serClass != JsonSerializer.None.class)",
      "info" : "IfStatement[15505-15596]:IfStatement[15505-15596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15548-15596]:Block[15548-15596]"
    }, {
      "left" : "return serClass;",
      "right" : "return serClass;",
      "info" : "ReturnStatement[15566-15582]:ReturnStatement[15566-15582]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15615-15627]:ReturnStatement[15615-15627]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15639-15648]:MarkerAnnotation[15639-15648]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15653-15659]:Modifier[15653-15659]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[15660-15666]:SimpleType[15660-15666]"
    }, {
      "left" : "findContentSerializer",
      "right" : "findContentSerializer",
      "info" : "SimpleName[15667-15688]:SimpleName[15667-15688]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[15689-15700]:SingleVariableDeclaration[15689-15700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15706-16061]:Block[15706-16061]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[15716-15776]:VariableDeclarationStatement[15716-15776]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[15785-16034]:IfStatement[15785-16034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15802-16034]:Block[15802-16034]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.contentUsing();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.contentUsing();",
      "info" : "VariableDeclarationStatement[15816-15920]:VariableDeclarationStatement[15816-15920]"
    }, {
      "left" : "if (serClass != JsonSerializer.None.class)",
      "right" : "if (serClass != JsonSerializer.None.class)",
      "info" : "IfStatement[15933-16024]:IfStatement[15933-16024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15976-16024]:Block[15976-16024]"
    }, {
      "left" : "return serClass;",
      "right" : "return serClass;",
      "info" : "ReturnStatement[15994-16010]:ReturnStatement[15994-16010]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16043-16055]:ReturnStatement[16043-16055]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16067-16076]:MarkerAnnotation[16067-16076]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16081-16087]:Modifier[16081-16087]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[16088-16094]:SimpleType[16088-16094]"
    }, {
      "left" : "findNullSerializer",
      "right" : "findNullSerializer",
      "info" : "SimpleName[16095-16113]:SimpleName[16095-16113]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[16114-16125]:SingleVariableDeclaration[16114-16125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16131-16484]:Block[16131-16484]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[16141-16201]:VariableDeclarationStatement[16141-16201]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[16210-16457]:IfStatement[16210-16457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16227-16457]:Block[16227-16457]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.nullsUsing();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonSerializer> serClass = ann.nullsUsing();",
      "info" : "VariableDeclarationStatement[16241-16343]:VariableDeclarationStatement[16241-16343]"
    }, {
      "left" : "if (serClass != JsonSerializer.None.class)",
      "right" : "if (serClass != JsonSerializer.None.class)",
      "info" : "IfStatement[16356-16447]:IfStatement[16356-16447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16399-16447]:Block[16399-16447]"
    }, {
      "left" : "return serClass;",
      "right" : "return serClass;",
      "info" : "ReturnStatement[16417-16433]:ReturnStatement[16417-16433]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16466-16478]:ReturnStatement[16466-16478]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16490-16499]:MarkerAnnotation[16490-16499]"
    }, {
      "left" : "@SuppressWarnings(\"deprecation\")",
      "right" : "@SuppressWarnings(\"deprecation\")",
      "info" : "SingleMemberAnnotation[16504-16536]:SingleMemberAnnotation[16504-16536]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16541-16547]:Modifier[16541-16547]"
    }, {
      "left" : "JsonInclude.Include",
      "right" : "JsonInclude.Include",
      "info" : "SimpleType[16548-16567]:SimpleType[16548-16567]"
    }, {
      "left" : "findSerializationInclusion",
      "right" : "findSerializationInclusion",
      "info" : "SimpleName[16568-16594]:SimpleName[16568-16594]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[16595-16606]:SingleVariableDeclaration[16595-16606]"
    }, {
      "left" : "JsonInclude.Include defValue",
      "right" : "JsonInclude.Include defValue",
      "info" : "SingleVariableDeclaration[16608-16636]:SingleVariableDeclaration[16608-16636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16642-17549]:Block[16642-17549]"
    }, {
      "left" : "JsonInclude inc = _findAnnotation(a, JsonInclude.class);",
      "right" : "JsonInclude inc = _findAnnotation(a, JsonInclude.class);",
      "info" : "VariableDeclarationStatement[16652-16708]:VariableDeclarationStatement[16652-16708]"
    }, {
      "left" : "if (inc != null)",
      "right" : "if (inc != null)",
      "info" : "IfStatement[16717-16891]:IfStatement[16717-16891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16734-16891]:Block[16734-16891]"
    }, {
      "left" : "JsonInclude.Include v = inc.value();",
      "right" : "JsonInclude.Include v = inc.value();",
      "info" : "VariableDeclarationStatement[16748-16784]:VariableDeclarationStatement[16748-16784]"
    }, {
      "left" : "if (v != JsonInclude.Include.USE_DEFAULTS)",
      "right" : "if (v != JsonInclude.Include.USE_DEFAULTS)",
      "info" : "IfStatement[16797-16881]:IfStatement[16797-16881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16840-16881]:Block[16840-16881]"
    }, {
      "left" : "return v;",
      "right" : "return v;",
      "info" : "ReturnStatement[16858-16867]:ReturnStatement[16858-16867]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[16900-16960]:VariableDeclarationStatement[16900-16960]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[16969-17518]:IfStatement[16969-17518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16986-17518]:Block[16986-17518]"
    }, {
      "left" : "JsonSerialize.Inclusion i2 = ann.include();",
      "right" : "JsonSerialize.Inclusion i2 = ann.include();",
      "info" : "VariableDeclarationStatement[17000-17043]:VariableDeclarationStatement[17000-17043]"
    }, {
      "left" : "switch (i2) {\n            case ALWAYS:\n                return JsonInclude.Include.ALWAYS;\n            case NON_NULL:\n                return JsonInclude.Include.NON_NULL;\n            case NON_DEFAULT:\n                return JsonInclude.Include.NON_DEFAULT;\n            case NON_EMPTY:\n                return JsonInclude.Include.NON_EMPTY;\n            case DEFAULT_INCLUSION: // since 2.3 -- fall through, use default\n                break;\n            }",
      "right" : "switch (i2) {\n            case ALWAYS:\n                return JsonInclude.Include.ALWAYS;\n            case NON_NULL:\n                return JsonInclude.Include.NON_NULL;\n            case NON_DEFAULT:\n                return JsonInclude.Include.NON_DEFAULT;\n            case NON_EMPTY:\n                return JsonInclude.Include.NON_EMPTY;\n            case DEFAULT_INCLUSION: // since 2.3 -- fall through, use default\n                break;\n            }",
      "info" : "SwitchStatement[17056-17508]:SwitchStatement[17056-17508]"
    }, {
      "left" : "case ALWAYS:",
      "right" : "case ALWAYS:",
      "info" : "SwitchCase[17082-17094]:SwitchCase[17082-17094]"
    }, {
      "left" : "return JsonInclude.Include.ALWAYS;",
      "right" : "return JsonInclude.Include.ALWAYS;",
      "info" : "ReturnStatement[17111-17145]:ReturnStatement[17111-17145]"
    }, {
      "left" : "case NON_NULL:",
      "right" : "case NON_NULL:",
      "info" : "SwitchCase[17158-17172]:SwitchCase[17158-17172]"
    }, {
      "left" : "return JsonInclude.Include.NON_NULL;",
      "right" : "return JsonInclude.Include.NON_NULL;",
      "info" : "ReturnStatement[17189-17225]:ReturnStatement[17189-17225]"
    }, {
      "left" : "case NON_DEFAULT:",
      "right" : "case NON_DEFAULT:",
      "info" : "SwitchCase[17238-17255]:SwitchCase[17238-17255]"
    }, {
      "left" : "return JsonInclude.Include.NON_DEFAULT;",
      "right" : "return JsonInclude.Include.NON_DEFAULT;",
      "info" : "ReturnStatement[17272-17311]:ReturnStatement[17272-17311]"
    }, {
      "left" : "case NON_EMPTY:",
      "right" : "case NON_EMPTY:",
      "info" : "SwitchCase[17324-17339]:SwitchCase[17324-17339]"
    }, {
      "left" : "return JsonInclude.Include.NON_EMPTY;",
      "right" : "return JsonInclude.Include.NON_EMPTY;",
      "info" : "ReturnStatement[17356-17393]:ReturnStatement[17356-17393]"
    }, {
      "left" : "case DEFAULT_INCLUSION:",
      "right" : "case DEFAULT_INCLUSION:",
      "info" : "SwitchCase[17406-17429]:SwitchCase[17406-17429]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17488-17494]:BreakStatement[17488-17494]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[17527-17543]:ReturnStatement[17527-17543]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17555-17564]:MarkerAnnotation[17555-17564]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17569-17575]:Modifier[17569-17575]"
    }, {
      "left" : "JsonInclude.Include",
      "right" : "JsonInclude.Include",
      "info" : "SimpleType[17576-17595]:SimpleType[17576-17595]"
    }, {
      "left" : "findSerializationInclusionForContent",
      "right" : "findSerializationInclusionForContent",
      "info" : "SimpleName[17596-17632]:SimpleName[17596-17632]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[17633-17644]:SingleVariableDeclaration[17633-17644]"
    }, {
      "left" : "JsonInclude.Include defValue",
      "right" : "JsonInclude.Include defValue",
      "info" : "SingleVariableDeclaration[17646-17674]:SingleVariableDeclaration[17646-17674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17680-17971]:Block[17680-17971]"
    }, {
      "left" : "JsonInclude inc = _findAnnotation(a, JsonInclude.class);",
      "right" : "JsonInclude inc = _findAnnotation(a, JsonInclude.class);",
      "info" : "VariableDeclarationStatement[17690-17746]:VariableDeclarationStatement[17690-17746]"
    }, {
      "left" : "if (inc != null)",
      "right" : "if (inc != null)",
      "info" : "IfStatement[17755-17940]:IfStatement[17755-17940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17772-17940]:Block[17772-17940]"
    }, {
      "left" : "JsonInclude.Include incl = inc.content();",
      "right" : "JsonInclude.Include incl = inc.content();",
      "info" : "VariableDeclarationStatement[17786-17827]:VariableDeclarationStatement[17786-17827]"
    }, {
      "left" : "if (incl != JsonInclude.Include.USE_DEFAULTS)",
      "right" : "if (incl != JsonInclude.Include.USE_DEFAULTS)",
      "info" : "IfStatement[17840-17930]:IfStatement[17840-17930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17886-17930]:Block[17886-17930]"
    }, {
      "left" : "return incl;",
      "right" : "return incl;",
      "info" : "ReturnStatement[17904-17916]:ReturnStatement[17904-17916]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[17949-17965]:ReturnStatement[17949-17965]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17977-17986]:MarkerAnnotation[17977-17986]"
    }, {
      "left" : "@SuppressWarnings(\"deprecation\")",
      "right" : "@SuppressWarnings(\"deprecation\")",
      "info" : "SingleMemberAnnotation[17991-18023]:SingleMemberAnnotation[17991-18023]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18028-18034]:Modifier[18028-18034]"
    }, {
      "left" : "JsonInclude.Value",
      "right" : "JsonInclude.Value",
      "info" : "SimpleType[18035-18052]:SimpleType[18035-18052]"
    }, {
      "left" : "findPropertyInclusion",
      "right" : "findPropertyInclusion",
      "info" : "SimpleName[18053-18074]:SimpleName[18053-18074]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[18075-18086]:SingleVariableDeclaration[18075-18086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18092-19290]:Block[18092-19290]"
    }, {
      "left" : "JsonInclude inc = _findAnnotation(a, JsonInclude.class);",
      "right" : "JsonInclude inc = _findAnnotation(a, JsonInclude.class);",
      "info" : "VariableDeclarationStatement[18102-18158]:VariableDeclarationStatement[18102-18158]"
    }, {
      "left" : "JsonInclude.Include valueIncl = (inc == null) ? JsonInclude.Include.USE_DEFAULTS : inc.value();",
      "right" : "JsonInclude.Include valueIncl = (inc == null) ? JsonInclude.Include.USE_DEFAULTS : inc.value();",
      "info" : "VariableDeclarationStatement[18167-18262]:VariableDeclarationStatement[18167-18262]"
    }, {
      "left" : "if (valueIncl == JsonInclude.Include.USE_DEFAULTS)",
      "right" : "if (valueIncl == JsonInclude.Include.USE_DEFAULTS)",
      "info" : "IfStatement[18271-19108]:IfStatement[18271-19108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18322-19108]:Block[18322-19108]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[18336-18396]:VariableDeclarationStatement[18336-18396]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[18409-19098]:IfStatement[18409-19098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18426-19098]:Block[18426-19098]"
    }, {
      "left" : "JsonSerialize.Inclusion i2 = ann.include();",
      "right" : "JsonSerialize.Inclusion i2 = ann.include();",
      "info" : "VariableDeclarationStatement[18444-18487]:VariableDeclarationStatement[18444-18487]"
    }, {
      "left" : "switch (i2) {\n                case ALWAYS:\n                    valueIncl = JsonInclude.Include.ALWAYS;\n                    break;\n                case NON_NULL:\n                    valueIncl = JsonInclude.Include.NON_NULL;\n                    break;\n                case NON_DEFAULT:\n                    valueIncl = JsonInclude.Include.NON_DEFAULT;\n                    break;\n                case NON_EMPTY:\n                    valueIncl = JsonInclude.Include.NON_EMPTY;\n                    break;\n                case DEFAULT_INCLUSION:\n                default:\n                }",
      "right" : "switch (i2) {\n                case ALWAYS:\n                    valueIncl = JsonInclude.Include.ALWAYS;\n                    break;\n                case NON_NULL:\n                    valueIncl = JsonInclude.Include.NON_NULL;\n                    break;\n                case NON_DEFAULT:\n                    valueIncl = JsonInclude.Include.NON_DEFAULT;\n                    break;\n                case NON_EMPTY:\n                    valueIncl = JsonInclude.Include.NON_EMPTY;\n                    break;\n                case DEFAULT_INCLUSION:\n                default:\n                }",
      "info" : "SwitchStatement[18504-19084]:SwitchStatement[18504-19084]"
    }, {
      "left" : "case ALWAYS:",
      "right" : "case ALWAYS:",
      "info" : "SwitchCase[18534-18546]:SwitchCase[18534-18546]"
    }, {
      "left" : "valueIncl = JsonInclude.Include.ALWAYS;",
      "right" : "valueIncl = JsonInclude.Include.ALWAYS;",
      "info" : "ExpressionStatement[18567-18606]:ExpressionStatement[18567-18606]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18627-18633]:BreakStatement[18627-18633]"
    }, {
      "left" : "case NON_NULL:",
      "right" : "case NON_NULL:",
      "info" : "SwitchCase[18650-18664]:SwitchCase[18650-18664]"
    }, {
      "left" : "valueIncl = JsonInclude.Include.NON_NULL;",
      "right" : "valueIncl = JsonInclude.Include.NON_NULL;",
      "info" : "ExpressionStatement[18685-18726]:ExpressionStatement[18685-18726]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18747-18753]:BreakStatement[18747-18753]"
    }, {
      "left" : "case NON_DEFAULT:",
      "right" : "case NON_DEFAULT:",
      "info" : "SwitchCase[18770-18787]:SwitchCase[18770-18787]"
    }, {
      "left" : "valueIncl = JsonInclude.Include.NON_DEFAULT;",
      "right" : "valueIncl = JsonInclude.Include.NON_DEFAULT;",
      "info" : "ExpressionStatement[18808-18852]:ExpressionStatement[18808-18852]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18873-18879]:BreakStatement[18873-18879]"
    }, {
      "left" : "case NON_EMPTY:",
      "right" : "case NON_EMPTY:",
      "info" : "SwitchCase[18896-18911]:SwitchCase[18896-18911]"
    }, {
      "left" : "valueIncl = JsonInclude.Include.NON_EMPTY;",
      "right" : "valueIncl = JsonInclude.Include.NON_EMPTY;",
      "info" : "ExpressionStatement[18932-18974]:ExpressionStatement[18932-18974]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18995-19001]:BreakStatement[18995-19001]"
    }, {
      "left" : "case DEFAULT_INCLUSION:",
      "right" : "case DEFAULT_INCLUSION:",
      "info" : "SwitchCase[19018-19041]:SwitchCase[19018-19041]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[19058-19066]:SwitchCase[19058-19066]"
    }, {
      "left" : "JsonInclude.Include contentIncl = (inc == null) ? JsonInclude.Include.USE_DEFAULTS : inc.content();",
      "right" : "JsonInclude.Include contentIncl = (inc == null) ? JsonInclude.Include.USE_DEFAULTS : inc.content();",
      "info" : "VariableDeclarationStatement[19117-19216]:VariableDeclarationStatement[19117-19216]"
    }, {
      "left" : "return JsonInclude.Value.construct(valueIncl, contentIncl);",
      "right" : "return JsonInclude.Value.construct(valueIncl, contentIncl);",
      "info" : "ReturnStatement[19225-19284]:ReturnStatement[19225-19284]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19296-19305]:MarkerAnnotation[19296-19305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19310-19316]:Modifier[19310-19316]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[19317-19325]:ParameterizedType[19317-19325]"
    }, {
      "left" : "findSerializationType",
      "right" : "findSerializationType",
      "info" : "SimpleName[19326-19347]:SimpleName[19326-19347]"
    }, {
      "left" : "Annotated am",
      "right" : "Annotated am",
      "info" : "SingleVariableDeclaration[19348-19360]:SingleVariableDeclaration[19348-19360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19366-19509]:Block[19366-19509]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(am, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(am, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[19376-19437]:VariableDeclarationStatement[19376-19437]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.as());",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.as());",
      "info" : "ReturnStatement[19446-19503]:ReturnStatement[19446-19503]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19515-19524]:MarkerAnnotation[19515-19524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19529-19535]:Modifier[19529-19535]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[19536-19544]:ParameterizedType[19536-19544]"
    }, {
      "left" : "findSerializationKeyType",
      "right" : "findSerializationKeyType",
      "info" : "SimpleName[19545-19569]:SimpleName[19545-19569]"
    }, {
      "left" : "Annotated am",
      "right" : "Annotated am",
      "info" : "SingleVariableDeclaration[19570-19582]:SingleVariableDeclaration[19570-19582]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[19584-19601]:SingleVariableDeclaration[19584-19601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19607-19753]:Block[19607-19753]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(am, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(am, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[19617-19678]:VariableDeclarationStatement[19617-19678]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.keyAs());",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.keyAs());",
      "info" : "ReturnStatement[19687-19747]:ReturnStatement[19687-19747]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19759-19768]:MarkerAnnotation[19759-19768]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19773-19779]:Modifier[19773-19779]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[19780-19788]:ParameterizedType[19780-19788]"
    }, {
      "left" : "findSerializationContentType",
      "right" : "findSerializationContentType",
      "info" : "SimpleName[19789-19817]:SimpleName[19789-19817]"
    }, {
      "left" : "Annotated am",
      "right" : "Annotated am",
      "info" : "SingleVariableDeclaration[19818-19830]:SingleVariableDeclaration[19818-19830]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[19832-19849]:SingleVariableDeclaration[19832-19849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19855-20005]:Block[19855-20005]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(am, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(am, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[19865-19926]:VariableDeclarationStatement[19865-19926]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.contentAs());",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.contentAs());",
      "info" : "ReturnStatement[19935-19999]:ReturnStatement[19935-19999]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20015-20024]:MarkerAnnotation[20015-20024]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20029-20035]:Modifier[20029-20035]"
    }, {
      "left" : "JsonSerialize.Typing",
      "right" : "JsonSerialize.Typing",
      "info" : "SimpleType[20036-20056]:SimpleType[20036-20056]"
    }, {
      "left" : "findSerializationTyping",
      "right" : "findSerializationTyping",
      "info" : "SimpleName[20057-20080]:SimpleName[20057-20080]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[20081-20092]:SingleVariableDeclaration[20081-20092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20098-20226]:Block[20098-20226]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[20108-20168]:VariableDeclarationStatement[20108-20168]"
    }, {
      "left" : "return (ann == null) ? null : ann.typing();",
      "right" : "return (ann == null) ? null : ann.typing();",
      "info" : "ReturnStatement[20177-20220]:ReturnStatement[20177-20220]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20232-20241]:MarkerAnnotation[20232-20241]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20246-20252]:Modifier[20246-20252]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[20253-20259]:SimpleType[20253-20259]"
    }, {
      "left" : "findSerializationConverter",
      "right" : "findSerializationConverter",
      "info" : "SimpleName[20260-20286]:SimpleName[20260-20286]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[20287-20298]:SingleVariableDeclaration[20287-20298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20300-20471]:Block[20300-20471]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[20310-20370]:VariableDeclarationStatement[20310-20370]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.converter(), Converter.None.class);",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.converter(), Converter.None.class);",
      "info" : "ReturnStatement[20379-20465]:ReturnStatement[20379-20465]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20477-20486]:MarkerAnnotation[20477-20486]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20491-20497]:Modifier[20491-20497]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[20498-20504]:SimpleType[20498-20504]"
    }, {
      "left" : "findSerializationContentConverter",
      "right" : "findSerializationContentConverter",
      "info" : "SimpleName[20505-20538]:SimpleName[20505-20538]"
    }, {
      "left" : "AnnotatedMember a",
      "right" : "AnnotatedMember a",
      "info" : "SingleVariableDeclaration[20539-20556]:SingleVariableDeclaration[20539-20556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20558-20736]:Block[20558-20736]"
    }, {
      "left" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "right" : "JsonSerialize ann = _findAnnotation(a, JsonSerialize.class);",
      "info" : "VariableDeclarationStatement[20568-20628]:VariableDeclarationStatement[20568-20628]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.contentConverter(), Converter.None.class);",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.contentConverter(), Converter.None.class);",
      "info" : "ReturnStatement[20637-20730]:ReturnStatement[20637-20730]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20926-20935]:MarkerAnnotation[20926-20935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20940-20946]:Modifier[20940-20946]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[20947-20955]:ArrayType[20947-20955]"
    }, {
      "left" : "findSerializationPropertyOrder",
      "right" : "findSerializationPropertyOrder",
      "info" : "SimpleName[20956-20986]:SimpleName[20956-20986]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[20987-21004]:SingleVariableDeclaration[20987-21004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21006-21148]:Block[21006-21148]"
    }, {
      "left" : "JsonPropertyOrder order = _findAnnotation(ac, JsonPropertyOrder.class);",
      "right" : "JsonPropertyOrder order = _findAnnotation(ac, JsonPropertyOrder.class);",
      "info" : "VariableDeclarationStatement[21016-21087]:VariableDeclarationStatement[21016-21087]"
    }, {
      "left" : "return (order == null) ? null : order.value();",
      "right" : "return (order == null) ? null : order.value();",
      "info" : "ReturnStatement[21096-21142]:ReturnStatement[21096-21142]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21154-21163]:MarkerAnnotation[21154-21163]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21168-21174]:Modifier[21168-21174]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[21175-21182]:SimpleType[21175-21182]"
    }, {
      "left" : "findSerializationSortAlphabetically",
      "right" : "findSerializationSortAlphabetically",
      "info" : "SimpleName[21183-21218]:SimpleName[21183-21218]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[21219-21232]:SingleVariableDeclaration[21219-21232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21234-21277]:Block[21234-21277]"
    }, {
      "left" : "return _findSortAlpha(ann);",
      "right" : "return _findSortAlpha(ann);",
      "info" : "ReturnStatement[21244-21271]:ReturnStatement[21244-21271]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21283-21290]:Modifier[21283-21290]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[21291-21296]:Modifier[21291-21296]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[21297-21304]:SimpleType[21297-21304]"
    }, {
      "left" : "_findSortAlpha",
      "right" : "_findSortAlpha",
      "info" : "SimpleName[21305-21319]:SimpleName[21305-21319]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[21320-21333]:SingleVariableDeclaration[21320-21333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21335-21670]:Block[21335-21670]"
    }, {
      "left" : "JsonPropertyOrder order = _findAnnotation(ann, JsonPropertyOrder.class);",
      "right" : "JsonPropertyOrder order = _findAnnotation(ann, JsonPropertyOrder.class);",
      "info" : "VariableDeclarationStatement[21345-21417]:VariableDeclarationStatement[21345-21417]"
    }, {
      "left" : "if ((order != null) && order.alphabetic())",
      "right" : "if ((order != null) && order.alphabetic())",
      "info" : "IfStatement[21556-21643]:IfStatement[21556-21643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21599-21643]:Block[21599-21643]"
    }, {
      "left" : "return Boolean.TRUE;",
      "right" : "return Boolean.TRUE;",
      "info" : "ReturnStatement[21613-21633]:ReturnStatement[21613-21633]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21652-21664]:ReturnStatement[21652-21664]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21676-21685]:MarkerAnnotation[21676-21685]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21690-21696]:Modifier[21690-21696]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21697-21701]:PrimitiveType[21697-21701]"
    }, {
      "left" : "findAndAddVirtualProperties",
      "right" : "findAndAddVirtualProperties",
      "info" : "SimpleName[21702-21729]:SimpleName[21702-21729]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[21730-21752]:SingleVariableDeclaration[21730-21752]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[21754-21771]:SingleVariableDeclaration[21754-21771]"
    }, {
      "left" : "List<BeanPropertyWriter> properties",
      "right" : "List<BeanPropertyWriter> properties",
      "info" : "SingleVariableDeclaration[21785-21820]:SingleVariableDeclaration[21785-21820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21822-22984]:Block[21822-22984]"
    }, {
      "left" : "JsonAppend ann = _findAnnotation(ac, JsonAppend.class);",
      "right" : "JsonAppend ann = _findAnnotation(ac, JsonAppend.class);",
      "info" : "VariableDeclarationStatement[21832-21887]:VariableDeclarationStatement[21832-21887]"
    }, {
      "left" : "if (ann == null)",
      "right" : "if (ann == null)",
      "info" : "IfStatement[21896-21944]:IfStatement[21896-21944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21913-21944]:Block[21913-21944]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[21927-21934]:ReturnStatement[21927-21934]"
    }, {
      "left" : "final boolean prepend = ann.prepend();",
      "right" : "final boolean prepend = ann.prepend();",
      "info" : "VariableDeclarationStatement[21953-21991]:VariableDeclarationStatement[21953-21991]"
    }, {
      "left" : "JavaType propType = null;",
      "right" : "JavaType propType = null;",
      "info" : "VariableDeclarationStatement[22000-22025]:VariableDeclarationStatement[22000-22025]"
    }, {
      "left" : "JsonAppend.Attr[] attrs = ann.attrs();",
      "right" : "JsonAppend.Attr[] attrs = ann.attrs();",
      "info" : "VariableDeclarationStatement[22086-22124]:VariableDeclarationStatement[22086-22124]"
    }, {
      "left" : "for (int i = 0, len = attrs.length; i < len; ++i)",
      "right" : "for (int i = 0, len = attrs.length; i < len; ++i)",
      "info" : "ForStatement[22133-22562]:ForStatement[22133-22562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22183-22562]:Block[22183-22562]"
    }, {
      "left" : "if (propType == null)",
      "right" : "if (propType == null)",
      "info" : "IfStatement[22197-22297]:IfStatement[22197-22297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22219-22297]:Block[22219-22297]"
    }, {
      "left" : "propType = config.constructType(Object.class);",
      "right" : "propType = config.constructType(Object.class);",
      "info" : "ExpressionStatement[22237-22283]:ExpressionStatement[22237-22283]"
    }, {
      "left" : "BeanPropertyWriter bpw = _constructVirtualProperty(attrs[i],\n                    config, ac, propType);",
      "right" : "BeanPropertyWriter bpw = _constructVirtualProperty(attrs[i],\n                    config, ac, propType);",
      "info" : "VariableDeclarationStatement[22310-22413]:VariableDeclarationStatement[22310-22413]"
    }, {
      "left" : "if (prepend)",
      "right" : "if (prepend)",
      "info" : "IfStatement[22426-22552]:IfStatement[22426-22552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22439-22494]:Block[22439-22494]"
    }, {
      "left" : "properties.add(i, bpw);",
      "right" : "properties.add(i, bpw);",
      "info" : "ExpressionStatement[22457-22480]:ExpressionStatement[22457-22480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22500-22552]:Block[22500-22552]"
    }, {
      "left" : "properties.add(bpw);",
      "right" : "properties.add(bpw);",
      "info" : "ExpressionStatement[22518-22538]:ExpressionStatement[22518-22538]"
    }, {
      "left" : "JsonAppend.Prop[] props = ann.props();",
      "right" : "JsonAppend.Prop[] props = ann.props();",
      "info" : "VariableDeclarationStatement[22625-22663]:VariableDeclarationStatement[22625-22663]"
    }, {
      "left" : "for (int i = 0, len = props.length; i < len; ++i)",
      "right" : "for (int i = 0, len = props.length; i < len; ++i)",
      "info" : "ForStatement[22672-22978]:ForStatement[22672-22978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22722-22978]:Block[22722-22978]"
    }, {
      "left" : "BeanPropertyWriter bpw = _constructVirtualProperty(props[i],\n                    config, ac);",
      "right" : "BeanPropertyWriter bpw = _constructVirtualProperty(props[i],\n                    config, ac);",
      "info" : "VariableDeclarationStatement[22736-22829]:VariableDeclarationStatement[22736-22829]"
    }, {
      "left" : "if (prepend)",
      "right" : "if (prepend)",
      "info" : "IfStatement[22842-22968]:IfStatement[22842-22968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22855-22910]:Block[22855-22910]"
    }, {
      "left" : "properties.add(i, bpw);",
      "right" : "properties.add(i, bpw);",
      "info" : "ExpressionStatement[22873-22896]:ExpressionStatement[22873-22896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22916-22968]:Block[22916-22968]"
    }, {
      "left" : "properties.add(bpw);",
      "right" : "properties.add(bpw);",
      "info" : "ExpressionStatement[22934-22954]:ExpressionStatement[22934-22954]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[22990-22999]:Modifier[22990-22999]"
    }, {
      "left" : "BeanPropertyWriter",
      "right" : "BeanPropertyWriter",
      "info" : "SimpleType[23000-23018]:SimpleType[23000-23018]"
    }, {
      "left" : "_constructVirtualProperty",
      "right" : "_constructVirtualProperty",
      "info" : "SimpleName[23019-23044]:SimpleName[23019-23044]"
    }, {
      "left" : "JsonAppend.Attr attr",
      "right" : "JsonAppend.Attr attr",
      "info" : "SingleVariableDeclaration[23045-23065]:SingleVariableDeclaration[23045-23065]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[23079-23101]:SingleVariableDeclaration[23079-23101]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[23103-23120]:SingleVariableDeclaration[23103-23120]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[23122-23135]:SingleVariableDeclaration[23122-23135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23141-24226]:Block[23141-24226]"
    }, {
      "left" : "PropertyMetadata metadata = attr.required() ?\n                    PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;",
      "right" : "PropertyMetadata metadata = attr.required() ?\n                    PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;",
      "info" : "VariableDeclarationStatement[23151-23279]:VariableDeclarationStatement[23151-23279]"
    }, {
      "left" : "String attrName = attr.value();",
      "right" : "String attrName = attr.value();",
      "info" : "VariableDeclarationStatement[23355-23386]:VariableDeclarationStatement[23355-23386]"
    }, {
      "left" : "PropertyName propName = _propertyName(attr.propName(), attr.propNamespace());",
      "right" : "PropertyName propName = _propertyName(attr.propName(), attr.propNamespace());",
      "info" : "VariableDeclarationStatement[23467-23544]:VariableDeclarationStatement[23467-23544]"
    }, {
      "left" : "if (!propName.hasSimpleName())",
      "right" : "if (!propName.hasSimpleName())",
      "info" : "IfStatement[23553-23652]:IfStatement[23553-23652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23584-23652]:Block[23584-23652]"
    }, {
      "left" : "propName = PropertyName.construct(attrName);",
      "right" : "propName = PropertyName.construct(attrName);",
      "info" : "ExpressionStatement[23598-23642]:ExpressionStatement[23598-23642]"
    }, {
      "left" : "AnnotatedMember member = new VirtualAnnotatedMember(ac, ac.getRawType(),\n                attrName, type.getRawClass());",
      "right" : "AnnotatedMember member = new VirtualAnnotatedMember(ac, ac.getRawType(),\n                attrName, type.getRawClass());",
      "info" : "VariableDeclarationStatement[23740-23859]:VariableDeclarationStatement[23740-23859]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(config,\n                member, propName, metadata, attr.include());",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(config,\n                member, propName, metadata, attr.include());",
      "info" : "VariableDeclarationStatement[23917-24063]:VariableDeclarationStatement[23917-24063]"
    }, {
      "left" : "return AttributePropertyWriter.construct(attrName, propDef,\n                ac.getAnnotations(), type);",
      "right" : "return AttributePropertyWriter.construct(attrName, propDef,\n                ac.getAnnotations(), type);",
      "info" : "ReturnStatement[24117-24220]:ReturnStatement[24117-24220]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24232-24241]:Modifier[24232-24241]"
    }, {
      "left" : "BeanPropertyWriter",
      "right" : "BeanPropertyWriter",
      "info" : "SimpleType[24242-24260]:SimpleType[24242-24260]"
    }, {
      "left" : "_constructVirtualProperty",
      "right" : "_constructVirtualProperty",
      "info" : "SimpleName[24261-24286]:SimpleName[24261-24286]"
    }, {
      "left" : "JsonAppend.Prop prop",
      "right" : "JsonAppend.Prop prop",
      "info" : "SingleVariableDeclaration[24287-24307]:SingleVariableDeclaration[24287-24307]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[24321-24343]:SingleVariableDeclaration[24321-24343]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[24345-24362]:SingleVariableDeclaration[24345-24362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24368-25622]:Block[24368-25622]"
    }, {
      "left" : "PropertyMetadata metadata = prop.required() ?\n                    PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;",
      "right" : "PropertyMetadata metadata = prop.required() ?\n                    PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;",
      "info" : "VariableDeclarationStatement[24378-24506]:VariableDeclarationStatement[24378-24506]"
    }, {
      "left" : "PropertyName propName = _propertyName(prop.name(), prop.namespace());",
      "right" : "PropertyName propName = _propertyName(prop.name(), prop.namespace());",
      "info" : "VariableDeclarationStatement[24515-24584]:VariableDeclarationStatement[24515-24584]"
    }, {
      "left" : "JavaType type = config.constructType(prop.type());",
      "right" : "JavaType type = config.constructType(prop.type());",
      "info" : "VariableDeclarationStatement[24593-24643]:VariableDeclarationStatement[24593-24643]"
    }, {
      "left" : "AnnotatedMember member = new VirtualAnnotatedMember(ac, ac.getRawType(),\n                propName.getSimpleName(), type.getRawClass());",
      "right" : "AnnotatedMember member = new VirtualAnnotatedMember(ac, ac.getRawType(),\n                propName.getSimpleName(), type.getRawClass());",
      "info" : "VariableDeclarationStatement[24731-24866]:VariableDeclarationStatement[24731-24866]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(config,\n                member, propName, metadata, prop.include());",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(config,\n                member, propName, metadata, prop.include());",
      "info" : "VariableDeclarationStatement[24924-25070]:VariableDeclarationStatement[24924-25070]"
    }, {
      "left" : "Class<?> implClass = prop.value();",
      "right" : "Class<?> implClass = prop.value();",
      "info" : "VariableDeclarationStatement[25080-25114]:VariableDeclarationStatement[25080-25114]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[25124-25181]:VariableDeclarationStatement[25124-25181]"
    }, {
      "left" : "VirtualBeanPropertyWriter bpw = (hi == null) ? null\n                : hi.virtualPropertyWriterInstance(config, implClass);",
      "right" : "VirtualBeanPropertyWriter bpw = (hi == null) ? null\n                : hi.virtualPropertyWriterInstance(config, implClass);",
      "info" : "VariableDeclarationStatement[25190-25312]:VariableDeclarationStatement[25190-25312]"
    }, {
      "left" : "if (bpw == null)",
      "right" : "if (bpw == null)",
      "info" : "IfStatement[25321-25489]:IfStatement[25321-25489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25338-25489]:Block[25338-25489]"
    }, {
      "left" : "bpw = (VirtualBeanPropertyWriter) ClassUtil.createInstance(implClass,\n                    config.canOverrideAccessModifiers());",
      "right" : "bpw = (VirtualBeanPropertyWriter) ClassUtil.createInstance(implClass,\n                    config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[25352-25479]:ExpressionStatement[25352-25479]"
    }, {
      "left" : "return bpw.withConfig(config, ac, propDef, type);",
      "right" : "return bpw.withConfig(config, ac, propDef, type);",
      "info" : "ReturnStatement[25567-25616]:ReturnStatement[25567-25616]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25829-25835]:Modifier[25829-25835]"
    }, {
      "left" : "findNameForSerialization",
      "right" : "findNameForSerialization",
      "info" : "SimpleName[25849-25873]:SimpleName[25849-25873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25891-26792]:Block[25891-26989]"
    }, {
      "left" : "String name = null;",
      "right" : "String name = null;",
      "info" : "VariableDeclarationStatement[25901-25920]:VariableDeclarationStatement[25901-25920]"
    }, {
      "left" : "JsonGetter jg = _findAnnotation(a, JsonGetter.class);",
      "right" : "JsonGetter jg = _findAnnotation(a, JsonGetter.class);",
      "info" : "VariableDeclarationStatement[25930-25983]:VariableDeclarationStatement[25930-25983]"
    }, {
      "left" : "if (jg != null)",
      "right" : "if (jg != null)",
      "info" : "IfStatement[25992-26741]:IfStatement[25992-26938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26008-26050]:Block[26008-26050]"
    }, {
      "left" : "name = jg.value();",
      "right" : "name = jg.value();",
      "info" : "ExpressionStatement[26022-26040]:ExpressionStatement[26022-26040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26056-26741]:Block[26056-26938]"
    }, {
      "left" : "JsonProperty pann = _findAnnotation(a, JsonProperty.class);",
      "right" : "JsonProperty pann = _findAnnotation(a, JsonProperty.class);",
      "info" : "VariableDeclarationStatement[26070-26129]:VariableDeclarationStatement[26070-26129]"
    }, {
      "left" : "if (pann != null)",
      "right" : "if (pann != null)",
      "info" : "IfStatement[26142-26731]:IfStatement[26142-26928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26160-26471]:Block[26160-26471]"
    }, {
      "left" : "name = pann.value();",
      "right" : "name = pann.value();",
      "info" : "ExpressionStatement[26178-26198]:ExpressionStatement[26178-26198]"
    }, {
      "left" : "if (_hasAnnotation(a, JsonSerialize.class)\n                    || _hasAnnotation(a, JsonView.class)\n                    || _hasAnnotation(a, JsonRawValue.class))",
      "right" : "if (_hasAnnotation(a, JsonSerialize.class)\n                    || _hasAnnotation(a, JsonView.class)\n                    || _hasAnnotation(a, JsonRawValue.class)\n                    || _hasAnnotation(a, JsonUnwrapped.class)\n                    || _hasAnnotation(a, JsonBackReference.class)\n                    || _hasAnnotation(a, JsonManagedReference.class))",
      "info" : "IfStatement[26477-26731]:IfStatement[26477-26928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26639-26681]:Block[26836-26878]"
    }, {
      "left" : "name = \"\";",
      "right" : "name = \"\";",
      "info" : "ExpressionStatement[26657-26667]:ExpressionStatement[26854-26864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26687-26731]:Block[26884-26928]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[26705-26717]:ReturnStatement[26902-26914]"
    }, {
      "left" : "return PropertyName.construct(name);",
      "right" : "return PropertyName.construct(name);",
      "info" : "ReturnStatement[26750-26786]:ReturnStatement[26947-26983]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26798-26807]:MarkerAnnotation[26995-27004]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26812-26818]:Modifier[27009-27015]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[26819-26826]:PrimitiveType[27016-27023]"
    }, {
      "left" : "hasAsValueAnnotation",
      "right" : "hasAsValueAnnotation",
      "info" : "SimpleName[26827-26847]:SimpleName[27024-27044]"
    }, {
      "left" : "AnnotatedMethod am",
      "right" : "AnnotatedMethod am",
      "info" : "SingleVariableDeclaration[26848-26866]:SingleVariableDeclaration[27045-27063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26868-27028]:Block[27065-27225]"
    }, {
      "left" : "JsonValue ann = _findAnnotation(am, JsonValue.class);",
      "right" : "JsonValue ann = _findAnnotation(am, JsonValue.class);",
      "info" : "VariableDeclarationStatement[26878-26931]:VariableDeclarationStatement[27075-27128]"
    }, {
      "left" : "return (ann != null && ann.value());",
      "right" : "return (ann != null && ann.value());",
      "info" : "ReturnStatement[26986-27022]:ReturnStatement[27183-27219]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27222-27231]:MarkerAnnotation[27419-27428]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27236-27242]:Modifier[27433-27439]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[27243-27249]:SimpleType[27440-27446]"
    }, {
      "left" : "findDeserializer",
      "right" : "findDeserializer",
      "info" : "SimpleName[27250-27266]:SimpleName[27447-27463]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[27267-27278]:SingleVariableDeclaration[27464-27475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27284-27646]:Block[27481-27843]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[27294-27358]:VariableDeclarationStatement[27491-27555]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[27367-27619]:IfStatement[27564-27816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27384-27619]:Block[27581-27816]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonDeserializer> deserClass = ann.using();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonDeserializer> deserClass = ann.using();",
      "info" : "VariableDeclarationStatement[27398-27499]:VariableDeclarationStatement[27595-27696]"
    }, {
      "left" : "if (deserClass != JsonDeserializer.None.class)",
      "right" : "if (deserClass != JsonDeserializer.None.class)",
      "info" : "IfStatement[27512-27609]:IfStatement[27709-27806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27559-27609]:Block[27756-27806]"
    }, {
      "left" : "return deserClass;",
      "right" : "return deserClass;",
      "info" : "ReturnStatement[27577-27595]:ReturnStatement[27774-27792]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[27628-27640]:ReturnStatement[27825-27837]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27652-27661]:MarkerAnnotation[27849-27858]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27666-27672]:Modifier[27863-27869]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[27673-27679]:SimpleType[27870-27876]"
    }, {
      "left" : "findKeyDeserializer",
      "right" : "findKeyDeserializer",
      "info" : "SimpleName[27680-27699]:SimpleName[27877-27896]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[27700-27711]:SingleVariableDeclaration[27897-27908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27717-28038]:Block[27914-28235]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[27727-27791]:VariableDeclarationStatement[27924-27988]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[27800-28011]:IfStatement[27997-28208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27817-28011]:Block[28014-28208]"
    }, {
      "left" : "Class<? extends KeyDeserializer> deserClass = ann.keyUsing();",
      "right" : "Class<? extends KeyDeserializer> deserClass = ann.keyUsing();",
      "info" : "VariableDeclarationStatement[27831-27892]:VariableDeclarationStatement[28028-28089]"
    }, {
      "left" : "if (deserClass != KeyDeserializer.None.class)",
      "right" : "if (deserClass != KeyDeserializer.None.class)",
      "info" : "IfStatement[27905-28001]:IfStatement[28102-28198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27951-28001]:Block[28148-28198]"
    }, {
      "left" : "return deserClass;",
      "right" : "return deserClass;",
      "info" : "ReturnStatement[27969-27987]:ReturnStatement[28166-28184]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[28020-28032]:ReturnStatement[28217-28229]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28044-28053]:MarkerAnnotation[28241-28250]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28058-28064]:Modifier[28255-28261]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[28065-28071]:SimpleType[28262-28268]"
    }, {
      "left" : "findContentDeserializer",
      "right" : "findContentDeserializer",
      "info" : "SimpleName[28072-28095]:SimpleName[28269-28292]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[28096-28107]:SingleVariableDeclaration[28293-28304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28113-28482]:Block[28310-28679]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[28123-28187]:VariableDeclarationStatement[28320-28384]"
    }, {
      "left" : "if (ann != null)",
      "right" : "if (ann != null)",
      "info" : "IfStatement[28196-28455]:IfStatement[28393-28652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28213-28455]:Block[28410-28652]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonDeserializer> deserClass = ann.contentUsing();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n            Class<? extends JsonDeserializer> deserClass = ann.contentUsing();",
      "info" : "VariableDeclarationStatement[28227-28335]:VariableDeclarationStatement[28424-28532]"
    }, {
      "left" : "if (deserClass != JsonDeserializer.None.class)",
      "right" : "if (deserClass != JsonDeserializer.None.class)",
      "info" : "IfStatement[28348-28445]:IfStatement[28545-28642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28395-28445]:Block[28592-28642]"
    }, {
      "left" : "return deserClass;",
      "right" : "return deserClass;",
      "info" : "ReturnStatement[28413-28431]:ReturnStatement[28610-28628]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[28464-28476]:ReturnStatement[28661-28673]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28488-28497]:MarkerAnnotation[28685-28694]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28502-28508]:Modifier[28699-28705]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[28509-28517]:ParameterizedType[28706-28714]"
    }, {
      "left" : "findDeserializationType",
      "right" : "findDeserializationType",
      "info" : "SimpleName[28518-28541]:SimpleName[28715-28738]"
    }, {
      "left" : "Annotated am",
      "right" : "Annotated am",
      "info" : "SingleVariableDeclaration[28542-28554]:SingleVariableDeclaration[28739-28751]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[28556-28573]:SingleVariableDeclaration[28753-28770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28575-28722]:Block[28772-28919]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(am, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(am, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[28585-28650]:VariableDeclarationStatement[28782-28847]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.as());",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.as());",
      "info" : "ReturnStatement[28659-28716]:ReturnStatement[28856-28913]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28728-28737]:MarkerAnnotation[28925-28934]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28742-28748]:Modifier[28939-28945]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[28749-28757]:ParameterizedType[28946-28954]"
    }, {
      "left" : "findDeserializationKeyType",
      "right" : "findDeserializationKeyType",
      "info" : "SimpleName[28758-28784]:SimpleName[28955-28981]"
    }, {
      "left" : "Annotated am",
      "right" : "Annotated am",
      "info" : "SingleVariableDeclaration[28785-28797]:SingleVariableDeclaration[28982-28994]"
    }, {
      "left" : "JavaType baseKeyType",
      "right" : "JavaType baseKeyType",
      "info" : "SingleVariableDeclaration[28799-28819]:SingleVariableDeclaration[28996-29016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28821-28971]:Block[29018-29168]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(am, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(am, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[28831-28896]:VariableDeclarationStatement[29028-29093]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.keyAs());",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.keyAs());",
      "info" : "ReturnStatement[28905-28965]:ReturnStatement[29102-29162]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28977-28986]:MarkerAnnotation[29174-29183]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28991-28997]:Modifier[29188-29194]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[28998-29006]:ParameterizedType[29195-29203]"
    }, {
      "left" : "findDeserializationContentType",
      "right" : "findDeserializationContentType",
      "info" : "SimpleName[29007-29037]:SimpleName[29204-29234]"
    }, {
      "left" : "Annotated am",
      "right" : "Annotated am",
      "info" : "SingleVariableDeclaration[29038-29050]:SingleVariableDeclaration[29235-29247]"
    }, {
      "left" : "JavaType baseContentType",
      "right" : "JavaType baseContentType",
      "info" : "SingleVariableDeclaration[29052-29076]:SingleVariableDeclaration[29249-29273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29082-29236]:Block[29279-29433]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(am, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(am, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[29092-29157]:VariableDeclarationStatement[29289-29354]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.contentAs());",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.contentAs());",
      "info" : "ReturnStatement[29166-29230]:ReturnStatement[29363-29427]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29242-29251]:MarkerAnnotation[29439-29448]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29256-29262]:Modifier[29453-29459]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[29263-29269]:SimpleType[29460-29466]"
    }, {
      "left" : "findDeserializationConverter",
      "right" : "findDeserializationConverter",
      "info" : "SimpleName[29270-29298]:SimpleName[29467-29495]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[29299-29310]:SingleVariableDeclaration[29496-29507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29316-29491]:Block[29513-29688]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[29326-29390]:VariableDeclarationStatement[29523-29587]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.converter(), Converter.None.class);",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.converter(), Converter.None.class);",
      "info" : "ReturnStatement[29399-29485]:ReturnStatement[29596-29682]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29497-29506]:MarkerAnnotation[29694-29703]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29511-29517]:Modifier[29708-29714]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[29518-29524]:SimpleType[29715-29721]"
    }, {
      "left" : "findDeserializationContentConverter",
      "right" : "findDeserializationContentConverter",
      "info" : "SimpleName[29525-29560]:SimpleName[29722-29757]"
    }, {
      "left" : "AnnotatedMember a",
      "right" : "AnnotatedMember a",
      "info" : "SingleVariableDeclaration[29561-29578]:SingleVariableDeclaration[29758-29775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29584-29766]:Block[29781-29963]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(a, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[29594-29658]:VariableDeclarationStatement[29791-29855]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.contentConverter(), Converter.None.class);",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.contentConverter(), Converter.None.class);",
      "info" : "ReturnStatement[29667-29760]:ReturnStatement[29864-29957]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29962-29971]:MarkerAnnotation[30159-30168]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29976-29982]:Modifier[30173-30179]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[29983-29989]:SimpleType[30180-30186]"
    }, {
      "left" : "findValueInstantiator",
      "right" : "findValueInstantiator",
      "info" : "SimpleName[29990-30011]:SimpleName[30187-30208]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[30012-30029]:SingleVariableDeclaration[30209-30226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30035-30216]:Block[30232-30413]"
    }, {
      "left" : "JsonValueInstantiator ann = _findAnnotation(ac, JsonValueInstantiator.class);",
      "right" : "JsonValueInstantiator ann = _findAnnotation(ac, JsonValueInstantiator.class);",
      "info" : "VariableDeclarationStatement[30045-30122]:VariableDeclarationStatement[30242-30319]"
    }, {
      "left" : "return (ann == null) ? null : ann.value();",
      "right" : "return (ann == null) ? null : ann.value();",
      "info" : "ReturnStatement[30168-30210]:ReturnStatement[30365-30407]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[30222-30231]:MarkerAnnotation[30419-30428]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30236-30242]:Modifier[30433-30439]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[30243-30251]:ParameterizedType[30440-30448]"
    }, {
      "left" : "findPOJOBuilder",
      "right" : "findPOJOBuilder",
      "info" : "SimpleName[30252-30267]:SimpleName[30449-30464]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[30268-30285]:SingleVariableDeclaration[30465-30482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30291-30443]:Block[30488-30640]"
    }, {
      "left" : "JsonDeserialize ann = _findAnnotation(ac, JsonDeserialize.class);",
      "right" : "JsonDeserialize ann = _findAnnotation(ac, JsonDeserialize.class);",
      "info" : "VariableDeclarationStatement[30301-30366]:VariableDeclarationStatement[30498-30563]"
    }, {
      "left" : "return (ann == null) ? null : _classIfExplicit(ann.builder());",
      "right" : "return (ann == null) ? null : _classIfExplicit(ann.builder());",
      "info" : "ReturnStatement[30375-30437]:ReturnStatement[30572-30634]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[30449-30458]:MarkerAnnotation[30646-30655]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30463-30469]:Modifier[30660-30666]"
    }, {
      "left" : "JsonPOJOBuilder.Value",
      "right" : "JsonPOJOBuilder.Value",
      "info" : "SimpleType[30470-30491]:SimpleType[30667-30688]"
    }, {
      "left" : "findPOJOBuilderConfig",
      "right" : "findPOJOBuilderConfig",
      "info" : "SimpleName[30492-30513]:SimpleName[30689-30710]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[30514-30531]:SingleVariableDeclaration[30711-30728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30537-30688]:Block[30734-30885]"
    }, {
      "left" : "JsonPOJOBuilder ann = _findAnnotation(ac, JsonPOJOBuilder.class);",
      "right" : "JsonPOJOBuilder ann = _findAnnotation(ac, JsonPOJOBuilder.class);",
      "info" : "VariableDeclarationStatement[30547-30612]:VariableDeclarationStatement[30744-30809]"
    }, {
      "left" : "return (ann == null) ? null : new JsonPOJOBuilder.Value(ann);",
      "right" : "return (ann == null) ? null : new JsonPOJOBuilder.Value(ann);",
      "info" : "ReturnStatement[30621-30682]:ReturnStatement[30818-30879]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[30887-30896]:MarkerAnnotation[31084-31093]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30901-30907]:Modifier[31098-31104]"
    }, {
      "left" : "PropertyName",
      "right" : "PropertyName",
      "info" : "SimpleType[30908-30920]:SimpleType[31105-31117]"
    }, {
      "left" : "findNameForDeserialization",
      "right" : "findNameForDeserialization",
      "info" : "SimpleName[30921-30947]:SimpleName[31118-31144]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[30948-30959]:SingleVariableDeclaration[31145-31156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30965-32163]:Block[31162-32360]"
    }, {
      "left" : "String name;",
      "right" : "String name;",
      "info" : "VariableDeclarationStatement[30975-30987]:VariableDeclarationStatement[31172-31184]"
    }, {
      "left" : "JsonSetter js = _findAnnotation(a, JsonSetter.class);",
      "right" : "JsonSetter js = _findAnnotation(a, JsonSetter.class);",
      "info" : "VariableDeclarationStatement[31149-31202]:VariableDeclarationStatement[31346-31399]"
    }, {
      "left" : "if (js != null)",
      "right" : "if (js != null)",
      "info" : "IfStatement[31211-32112]:IfStatement[31408-32309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31227-31269]:Block[31424-31466]"
    }, {
      "left" : "name = js.value();",
      "right" : "name = js.value();",
      "info" : "ExpressionStatement[31241-31259]:ExpressionStatement[31438-31456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31275-32112]:Block[31472-32309]"
    }, {
      "left" : "JsonProperty pann = _findAnnotation(a, JsonProperty.class);",
      "right" : "JsonProperty pann = _findAnnotation(a, JsonProperty.class);",
      "info" : "VariableDeclarationStatement[31289-31348]:VariableDeclarationStatement[31486-31545]"
    }, {
      "left" : "if (pann != null)",
      "right" : "if (pann != null)",
      "info" : "IfStatement[31361-32102]:IfStatement[31558-32299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31379-31690]:Block[31576-31887]"
    }, {
      "left" : "name = pann.value();",
      "right" : "name = pann.value();",
      "info" : "ExpressionStatement[31397-31417]:ExpressionStatement[31594-31614]"
    }, {
      "left" : "if (_hasAnnotation(a, JsonDeserialize.class)\n                    || _hasAnnotation(a, JsonView.class)\n                    || _hasAnnotation(a, JsonUnwrapped.class) // [#442]\n                    || _hasAnnotation(a, JsonBackReference.class)\n                    || _hasAnnotation(a, JsonManagedReference.class))",
      "right" : "if (_hasAnnotation(a, JsonDeserialize.class)\n                    || _hasAnnotation(a, JsonView.class)\n                    || _hasAnnotation(a, JsonUnwrapped.class) // [#442]\n                    || _hasAnnotation(a, JsonBackReference.class)\n                    || _hasAnnotation(a, JsonManagedReference.class))",
      "info" : "IfStatement[31696-32102]:IfStatement[31893-32299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32006-32052]:Block[32203-32249]"
    }, {
      "left" : "name = \"\";",
      "right" : "name = \"\";",
      "info" : "ExpressionStatement[32028-32038]:ExpressionStatement[32225-32235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32058-32102]:Block[32255-32299]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[32076-32088]:ReturnStatement[32273-32285]"
    }, {
      "left" : "return PropertyName.construct(name);",
      "right" : "return PropertyName.construct(name);",
      "info" : "ReturnStatement[32121-32157]:ReturnStatement[32318-32354]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32173-32182]:MarkerAnnotation[32370-32379]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32187-32193]:Modifier[32384-32390]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32194-32201]:PrimitiveType[32391-32398]"
    }, {
      "left" : "hasAnySetterAnnotation",
      "right" : "hasAnySetterAnnotation",
      "info" : "SimpleName[32202-32224]:SimpleName[32399-32421]"
    }, {
      "left" : "AnnotatedMethod am",
      "right" : "AnnotatedMethod am",
      "info" : "SingleVariableDeclaration[32225-32243]:SingleVariableDeclaration[32422-32440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32249-32489]:Block[32446-32686]"
    }, {
      "left" : "return _hasAnnotation(am, JsonAnySetter.class);",
      "right" : "return _hasAnnotation(am, JsonAnySetter.class);",
      "info" : "ReturnStatement[32436-32483]:ReturnStatement[32633-32680]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32495-32504]:MarkerAnnotation[32692-32701]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32509-32515]:Modifier[32706-32712]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32516-32523]:PrimitiveType[32713-32720]"
    }, {
      "left" : "hasAnyGetterAnnotation",
      "right" : "hasAnyGetterAnnotation",
      "info" : "SimpleName[32524-32546]:SimpleName[32721-32743]"
    }, {
      "left" : "AnnotatedMethod am",
      "right" : "AnnotatedMethod am",
      "info" : "SingleVariableDeclaration[32547-32565]:SingleVariableDeclaration[32744-32762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32571-32760]:Block[32768-32957]"
    }, {
      "left" : "return _hasAnnotation(am, JsonAnyGetter.class);",
      "right" : "return _hasAnnotation(am, JsonAnyGetter.class);",
      "info" : "ReturnStatement[32707-32754]:ReturnStatement[32904-32951]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32766-32775]:MarkerAnnotation[32963-32972]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32780-32786]:Modifier[32977-32983]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32787-32794]:PrimitiveType[32984-32991]"
    }, {
      "left" : "hasCreatorAnnotation",
      "right" : "hasCreatorAnnotation",
      "info" : "SimpleName[32795-32815]:SimpleName[32992-33012]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[32816-32827]:SingleVariableDeclaration[33013-33024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32833-33157]:Block[33030-33354]"
    }, {
      "left" : "JsonCreator ann = _findAnnotation(a, JsonCreator.class);",
      "right" : "JsonCreator ann = _findAnnotation(a, JsonCreator.class);",
      "info" : "VariableDeclarationStatement[33021-33077]:VariableDeclarationStatement[33218-33274]"
    }, {
      "left" : "return (ann != null && ann.mode() != JsonCreator.Mode.DISABLED);",
      "right" : "return (ann != null && ann.mode() != JsonCreator.Mode.DISABLED);",
      "info" : "ReturnStatement[33087-33151]:ReturnStatement[33284-33348]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[33163-33172]:MarkerAnnotation[33360-33369]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33177-33183]:Modifier[33374-33380]"
    }, {
      "left" : "JsonCreator.Mode",
      "right" : "JsonCreator.Mode",
      "info" : "SimpleType[33184-33200]:SimpleType[33381-33397]"
    }, {
      "left" : "findCreatorBinding",
      "right" : "findCreatorBinding",
      "info" : "SimpleName[33201-33219]:SimpleName[33398-33416]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[33220-33231]:SingleVariableDeclaration[33417-33428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33233-33355]:Block[33430-33552]"
    }, {
      "left" : "JsonCreator ann = _findAnnotation(a, JsonCreator.class);",
      "right" : "JsonCreator ann = _findAnnotation(a, JsonCreator.class);",
      "info" : "VariableDeclarationStatement[33243-33299]:VariableDeclarationStatement[33440-33496]"
    }, {
      "left" : "return (ann == null) ? null : ann.mode();",
      "right" : "return (ann == null) ? null : ann.mode();",
      "info" : "ReturnStatement[33308-33349]:ReturnStatement[33505-33546]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33527-33536]:Modifier[33724-33733]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33537-33544]:PrimitiveType[33734-33741]"
    }, {
      "left" : "_isIgnorable",
      "right" : "_isIgnorable",
      "info" : "SimpleName[33545-33557]:SimpleName[33742-33754]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[33558-33569]:SingleVariableDeclaration[33755-33766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33575-33690]:Block[33772-33887]"
    }, {
      "left" : "JsonIgnore ann = _findAnnotation(a, JsonIgnore.class);",
      "right" : "JsonIgnore ann = _findAnnotation(a, JsonIgnore.class);",
      "info" : "VariableDeclarationStatement[33585-33639]:VariableDeclarationStatement[33782-33836]"
    }, {
      "left" : "return (ann != null && ann.value());",
      "right" : "return (ann != null && ann.value());",
      "info" : "ReturnStatement[33648-33684]:ReturnStatement[33845-33881]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33696-33705]:Modifier[33893-33902]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[33706-33714]:ParameterizedType[33903-33911]"
    }, {
      "left" : "_classIfExplicit",
      "right" : "_classIfExplicit",
      "info" : "SimpleName[33715-33731]:SimpleName[33912-33928]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[33732-33744]:SingleVariableDeclaration[33929-33941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33746-33866]:Block[33943-34063]"
    }, {
      "left" : "if (cls == null || ClassUtil.isBogusClass(cls))",
      "right" : "if (cls == null || ClassUtil.isBogusClass(cls))",
      "info" : "IfStatement[33756-33840]:IfStatement[33953-34037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33804-33840]:Block[34001-34037]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[33818-33830]:ReturnStatement[34015-34027]"
    }, {
      "left" : "return cls;",
      "right" : "return cls;",
      "info" : "ReturnStatement[33849-33860]:ReturnStatement[34046-34057]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33872-33881]:Modifier[34069-34078]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[33882-33890]:ParameterizedType[34079-34087]"
    }, {
      "left" : "_classIfExplicit",
      "right" : "_classIfExplicit",
      "info" : "SimpleName[33891-33907]:SimpleName[34088-34104]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[33908-33920]:SingleVariableDeclaration[34105-34117]"
    }, {
      "left" : "Class<?> implicit",
      "right" : "Class<?> implicit",
      "info" : "SingleVariableDeclaration[33922-33939]:SingleVariableDeclaration[34119-34136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33941-34047]:Block[34138-34244]"
    }, {
      "left" : "cls = _classIfExplicit(cls);",
      "right" : "cls = _classIfExplicit(cls);",
      "info" : "ExpressionStatement[33951-33979]:ExpressionStatement[34148-34176]"
    }, {
      "left" : "return (cls == null || cls == implicit) ? null : cls;",
      "right" : "return (cls == null || cls == implicit) ? null : cls;",
      "info" : "ReturnStatement[33988-34041]:ReturnStatement[34185-34238]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34053-34062]:Modifier[34250-34259]"
    }, {
      "left" : "PropertyName",
      "right" : "PropertyName",
      "info" : "SimpleType[34063-34075]:SimpleType[34260-34272]"
    }, {
      "left" : "_propertyName",
      "right" : "_propertyName",
      "info" : "SimpleName[34076-34089]:SimpleName[34273-34286]"
    }, {
      "left" : "String localName",
      "right" : "String localName",
      "info" : "SingleVariableDeclaration[34090-34106]:SingleVariableDeclaration[34287-34303]"
    }, {
      "left" : "String namespace",
      "right" : "String namespace",
      "info" : "SingleVariableDeclaration[34108-34124]:SingleVariableDeclaration[34305-34321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34126-34404]:Block[34323-34601]"
    }, {
      "left" : "if (localName.isEmpty())",
      "right" : "if (localName.isEmpty())",
      "info" : "IfStatement[34136-34217]:IfStatement[34333-34414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34161-34217]:Block[34358-34414]"
    }, {
      "left" : "return PropertyName.USE_DEFAULT;",
      "right" : "return PropertyName.USE_DEFAULT;",
      "info" : "ReturnStatement[34175-34207]:ReturnStatement[34372-34404]"
    }, {
      "left" : "if (namespace == null || namespace.isEmpty())",
      "right" : "if (namespace == null || namespace.isEmpty())",
      "info" : "IfStatement[34226-34337]:IfStatement[34423-34534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34272-34337]:Block[34469-34534]"
    }, {
      "left" : "return PropertyName.construct(localName);",
      "right" : "return PropertyName.construct(localName);",
      "info" : "ReturnStatement[34286-34327]:ReturnStatement[34483-34524]"
    }, {
      "left" : "return PropertyName.construct(localName, namespace);",
      "right" : "return PropertyName.construct(localName, namespace);",
      "info" : "ReturnStatement[34346-34398]:ReturnStatement[34543-34595]"
    }, {
      "left" : "@SuppressWarnings(\"deprecation\")",
      "right" : "@SuppressWarnings(\"deprecation\")",
      "info" : "SingleMemberAnnotation[34581-34613]:SingleMemberAnnotation[34778-34810]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34618-34627]:Modifier[34815-34824]"
    }, {
      "left" : "TypeResolverBuilder<?>",
      "right" : "TypeResolverBuilder<?>",
      "info" : "ParameterizedType[34628-34650]:ParameterizedType[34825-34847]"
    }, {
      "left" : "_findTypeResolver",
      "right" : "_findTypeResolver",
      "info" : "SimpleName[34651-34668]:SimpleName[34848-34865]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[34669-34691]:SingleVariableDeclaration[34866-34888]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[34705-34718]:SingleVariableDeclaration[34902-34915]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[34720-34737]:SingleVariableDeclaration[34917-34934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34743-37336]:Block[34940-37533]"
    }, {
      "left" : "TypeResolverBuilder<?> b;",
      "right" : "TypeResolverBuilder<?> b;",
      "info" : "VariableDeclarationStatement[34809-34834]:VariableDeclarationStatement[35006-35031]"
    }, {
      "left" : "JsonTypeInfo info = _findAnnotation(ann, JsonTypeInfo.class);",
      "right" : "JsonTypeInfo info = _findAnnotation(ann, JsonTypeInfo.class);",
      "info" : "VariableDeclarationStatement[34843-34904]:VariableDeclarationStatement[35040-35101]"
    }, {
      "left" : "JsonTypeResolver resAnn = _findAnnotation(ann, JsonTypeResolver.class);",
      "right" : "JsonTypeResolver resAnn = _findAnnotation(ann, JsonTypeResolver.class);",
      "info" : "VariableDeclarationStatement[34913-34984]:VariableDeclarationStatement[35110-35181]"
    }, {
      "left" : "if (resAnn != null)",
      "right" : "if (resAnn != null)",
      "info" : "IfStatement[35002-35780]:IfStatement[35199-35977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35022-35372]:Block[35219-35569]"
    }, {
      "left" : "if (info == null)",
      "right" : "if (info == null)",
      "info" : "IfStatement[35036-35098]:IfStatement[35233-35295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35054-35098]:Block[35251-35295]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[35072-35084]:ReturnStatement[35269-35281]"
    }, {
      "left" : "b = config.typeResolverBuilderInstance(ann, resAnn.value());",
      "right" : "b = config.typeResolverBuilderInstance(ann, resAnn.value());",
      "info" : "ExpressionStatement[35302-35362]:ExpressionStatement[35499-35559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35378-35780]:Block[35575-35977]"
    }, {
      "left" : "if (info == null)",
      "right" : "if (info == null)",
      "info" : "IfStatement[35449-35511]:IfStatement[35646-35708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35467-35511]:Block[35664-35708]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[35485-35497]:ReturnStatement[35682-35694]"
    }, {
      "left" : "if (info.use() == JsonTypeInfo.Id.NONE)",
      "right" : "if (info.use() == JsonTypeInfo.Id.NONE)",
      "info" : "IfStatement[35605-35718]:IfStatement[35802-35915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35645-35718]:Block[35842-35915]"
    }, {
      "left" : "return _constructNoTypeResolverBuilder();",
      "right" : "return _constructNoTypeResolverBuilder();",
      "info" : "ReturnStatement[35663-35704]:ReturnStatement[35860-35901]"
    }, {
      "left" : "b = _constructStdTypeResolverBuilder();",
      "right" : "b = _constructStdTypeResolverBuilder();",
      "info" : "ExpressionStatement[35731-35770]:ExpressionStatement[35928-35967]"
    }, {
      "left" : "JsonTypeIdResolver idResInfo = _findAnnotation(ann, JsonTypeIdResolver.class);",
      "right" : "JsonTypeIdResolver idResInfo = _findAnnotation(ann, JsonTypeIdResolver.class);",
      "info" : "VariableDeclarationStatement[35842-35920]:VariableDeclarationStatement[36039-36117]"
    }, {
      "left" : "TypeIdResolver idRes = (idResInfo == null) ? null\n                : config.typeIdResolverInstance(ann, idResInfo.value());",
      "right" : "TypeIdResolver idRes = (idResInfo == null) ? null\n                : config.typeIdResolverInstance(ann, idResInfo.value());",
      "info" : "VariableDeclarationStatement[35929-36051]:VariableDeclarationStatement[36126-36248]"
    }, {
      "left" : "if (idRes != null)",
      "right" : "if (idRes != null)",
      "info" : "IfStatement[36060-36141]:IfStatement[36257-36338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36079-36141]:Block[36276-36338]"
    }, {
      "left" : "idRes.init(baseType);",
      "right" : "idRes.init(baseType);",
      "info" : "ExpressionStatement[36110-36131]:ExpressionStatement[36307-36328]"
    }, {
      "left" : "b = b.init(info.use(), idRes);",
      "right" : "b = b.init(info.use(), idRes);",
      "info" : "ExpressionStatement[36150-36180]:ExpressionStatement[36347-36377]"
    }, {
      "left" : "JsonTypeInfo.As inclusion = info.include();",
      "right" : "JsonTypeInfo.As inclusion = info.include();",
      "info" : "VariableDeclarationStatement[36428-36471]:VariableDeclarationStatement[36625-36668]"
    }, {
      "left" : "if (inclusion == JsonTypeInfo.As.EXTERNAL_PROPERTY && (ann instanceof AnnotatedClass))",
      "right" : "if (inclusion == JsonTypeInfo.As.EXTERNAL_PROPERTY && (ann instanceof AnnotatedClass))",
      "info" : "IfStatement[36480-36628]:IfStatement[36677-36825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36567-36628]:Block[36764-36825]"
    }, {
      "left" : "inclusion = JsonTypeInfo.As.PROPERTY;",
      "right" : "inclusion = JsonTypeInfo.As.PROPERTY;",
      "info" : "ExpressionStatement[36581-36618]:ExpressionStatement[36778-36815]"
    }, {
      "left" : "b = b.inclusion(inclusion);",
      "right" : "b = b.inclusion(inclusion);",
      "info" : "ExpressionStatement[36637-36664]:ExpressionStatement[36834-36861]"
    }, {
      "left" : "b = b.typeProperty(info.property());",
      "right" : "b = b.typeProperty(info.property());",
      "info" : "ExpressionStatement[36673-36709]:ExpressionStatement[36870-36906]"
    }, {
      "left" : "Class<?> defaultImpl = info.defaultImpl();",
      "right" : "Class<?> defaultImpl = info.defaultImpl();",
      "info" : "VariableDeclarationStatement[36718-36760]:VariableDeclarationStatement[36915-36957]"
    }, {
      "left" : "if (defaultImpl != JsonTypeInfo.None.class && !defaultImpl.isAnnotation())",
      "right" : "if (defaultImpl != JsonTypeInfo.None.class && !defaultImpl.isAnnotation())",
      "info" : "IfStatement[37134-37264]:IfStatement[37331-37461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37209-37264]:Block[37406-37461]"
    }, {
      "left" : "b = b.defaultImpl(defaultImpl);",
      "right" : "b = b.defaultImpl(defaultImpl);",
      "info" : "ExpressionStatement[37223-37254]:ExpressionStatement[37420-37451]"
    }, {
      "left" : "b = b.typeIdVisibility(info.visible());",
      "right" : "b = b.typeIdVisibility(info.visible());",
      "info" : "ExpressionStatement[37273-37312]:ExpressionStatement[37470-37509]"
    }, {
      "left" : "return b;",
      "right" : "return b;",
      "info" : "ReturnStatement[37321-37330]:ReturnStatement[37518-37527]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37456-37465]:Modifier[37653-37662]"
    }, {
      "left" : "StdTypeResolverBuilder",
      "right" : "StdTypeResolverBuilder",
      "info" : "SimpleType[37466-37488]:SimpleType[37663-37685]"
    }, {
      "left" : "_constructStdTypeResolverBuilder",
      "right" : "_constructStdTypeResolverBuilder",
      "info" : "SimpleName[37489-37521]:SimpleName[37686-37718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37524-37576]:Block[37721-37773]"
    }, {
      "left" : "return new StdTypeResolverBuilder();",
      "right" : "return new StdTypeResolverBuilder();",
      "info" : "ReturnStatement[37534-37570]:ReturnStatement[37731-37767]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37720-37729]:Modifier[37917-37926]"
    }, {
      "left" : "StdTypeResolverBuilder",
      "right" : "StdTypeResolverBuilder",
      "info" : "SimpleType[37730-37752]:SimpleType[37927-37949]"
    }, {
      "left" : "_constructNoTypeResolverBuilder",
      "right" : "_constructNoTypeResolverBuilder",
      "info" : "SimpleName[37753-37784]:SimpleName[37950-37981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37787-37853]:Block[37984-38050]"
    }, {
      "left" : "return StdTypeResolverBuilder.noTypeInfoBuilder();",
      "right" : "return StdTypeResolverBuilder.noTypeInfoBuilder();",
      "info" : "ReturnStatement[37797-37847]:ReturnStatement[37994-38044]"
    } ]
  },
  "interFileMappings" : { }
}