{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[1365-1412]:FieldDeclaration[1365-1412]"
    }, {
      "left" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "right" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "info" : "FieldDeclaration[1418-1576]:FieldDeclaration[1418-1576]"
    }, {
      "left" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "right" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "info" : "FieldDeclaration[1582-1641]:FieldDeclaration[1582-1641]"
    }, {
      "left" : "protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
      "right" : "protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
      "info" : "FieldDeclaration[1647-1894]:FieldDeclaration[1647-1894]"
    }, {
      "left" : "protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
      "right" : "protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
      "info" : "FieldDeclaration[2975-3163]:FieldDeclaration[3381-3569]"
    }, {
      "left" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "right" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "info" : "FieldDeclaration[3335-3590]:FieldDeclaration[3741-3996]"
    }, {
      "left" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "right" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[3596-3691]:MethodDeclaration[4002-4097]"
    }, {
      "left" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "right" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[3701-4934]:MethodDeclaration[4107-5340]"
    }, {
      "left" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[5134-7606]:MethodDeclaration[5540-8012]"
    }, {
      "left" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7612-8137]:MethodDeclaration[8018-8543]"
    }, {
      "left" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8147-9062]:MethodDeclaration[8553-9468]"
    }, {
      "left" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[9072-9613]:MethodDeclaration[9478-10019]"
    }, {
      "left" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[9907-12640]:MethodDeclaration[10313-13046]"
    }, {
      "left" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12650-15444]:MethodDeclaration[13056-15850]"
    }, {
      "left" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[15454-17304]:MethodDeclaration[15860-17710]"
    }, {
      "left" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[17314-20376]:MethodDeclaration[17720-20782]"
    }, {
      "left" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "right" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "info" : "MethodDeclaration[20618-21017]:MethodDeclaration[21024-21423]"
    }, {
      "left" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[21027-28427]:MethodDeclaration[21433-28833]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "right" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[28437-30396]:MethodDeclaration[28843-30802]"
    }, {
      "left" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[30402-32211]:MethodDeclaration[30808-32617]"
    }, {
      "left" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[32217-33046]:MethodDeclaration[32623-33452]"
    }, {
      "left" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMember mutator)\n        throws JsonMappingException",
      "right" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMember mutator)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[33052-35181]:MethodDeclaration[33458-35587]"
    }, {
      "left" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[35187-37669]:MethodDeclaration[35593-38075]"
    }, {
      "left" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[37675-38705]:MethodDeclaration[38081-39111]"
    }, {
      "left" : "protected boolean isPotentialBeanType(Class<?> type)",
      "right" : "protected boolean isPotentialBeanType(Class<?> type)",
      "info" : "MethodDeclaration[38906-40084]:MethodDeclaration[39312-40490]"
    }, {
      "left" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "right" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "info" : "MethodDeclaration[40090-41205]:MethodDeclaration[40496-41611]"
    }, {
      "left" : "protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[41211-41797]:MethodDeclaration[41617-42203]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3596-3602]:Modifier[4002-4008]"
    }, {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "SimpleName[3603-3626]:SimpleName[4009-4032]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[3627-3659]:SingleVariableDeclaration[4033-4065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3661-3691]:Block[4067-4097]"
    }, {
      "left" : "super(config);",
      "right" : "super(config);",
      "info" : "SuperConstructorInvocation[3671-3685]:SuperConstructorInvocation[4077-4091]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3872-3881]:MarkerAnnotation[4278-4287]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3886-3892]:Modifier[4292-4298]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[3893-3912]:SimpleType[4299-4318]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[3913-3923]:SimpleName[4319-4329]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[3924-3956]:SingleVariableDeclaration[4330-4362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3962-4934]:Block[4368-5340]"
    }, {
      "left" : "if (_factoryConfig == config)",
      "right" : "if (_factoryConfig == config)",
      "info" : "IfStatement[3972-4038]:IfStatement[4378-4444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4002-4038]:Block[4408-4444]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4016-4028]:ReturnStatement[4422-4434]"
    }, {
      "left" : "if (getClass() != BeanDeserializerFactory.class)",
      "right" : "if (getClass() != BeanDeserializerFactory.class)",
      "info" : "IfStatement[4526-4876]:IfStatement[4932-5282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4575-4876]:Block[4981-5282]"
    }, {
      "left" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "right" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "info" : "ThrowStatement[4589-4866]:ThrowStatement[4995-5272]"
    }, {
      "left" : "return new BeanDeserializerFactory(config);",
      "right" : "return new BeanDeserializerFactory(config);",
      "info" : "ReturnStatement[4885-4928]:ReturnStatement[5291-5334]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5302-5311]:MarkerAnnotation[5708-5717]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5316-5322]:Modifier[5722-5728]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[5323-5347]:ParameterizedType[5729-5753]"
    }, {
      "left" : "createBeanDeserializer",
      "right" : "createBeanDeserializer",
      "info" : "SimpleName[5348-5370]:SimpleName[5754-5776]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[5371-5398]:SingleVariableDeclaration[5777-5804]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[5412-5425]:SingleVariableDeclaration[5818-5831]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[5427-5451]:SingleVariableDeclaration[5833-5857]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[5468-5488]:SimpleType[5874-5894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5493-7606]:Block[5899-8012]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[5503-5557]:VariableDeclarationStatement[5909-5963]"
    }, {
      "left" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[5612-5698]:VariableDeclarationStatement[6018-6104]"
    }, {
      "left" : "if (custom != null)",
      "right" : "if (custom != null)",
      "info" : "IfStatement[5707-5765]:IfStatement[6113-6171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5727-5765]:Block[6133-6171]"
    }, {
      "left" : "return custom;",
      "right" : "return custom;",
      "info" : "ReturnStatement[5741-5755]:ReturnStatement[6147-6161]"
    }, {
      "left" : "if (type.isThrowable())",
      "right" : "if (type.isThrowable())",
      "info" : "IfStatement[5946-6050]:IfStatement[6352-6456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5970-6050]:Block[6376-6456]"
    }, {
      "left" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[5984-6040]:ReturnStatement[6390-6446]"
    }, {
      "left" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
      "right" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
      "info" : "IfStatement[6331-6919]:IfStatement[6737-7325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6399-6919]:Block[6805-7325]"
    }, {
      "left" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "right" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[6482-6552]:VariableDeclarationStatement[6888-6958]"
    }, {
      "left" : "if (concreteType != null)",
      "right" : "if (concreteType != null)",
      "info" : "IfStatement[6565-6909]:IfStatement[6971-7315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6591-6909]:Block[6997-7315]"
    }, {
      "left" : "beanDesc = config.introspect(concreteType);",
      "right" : "beanDesc = config.introspect(concreteType);",
      "info" : "ExpressionStatement[6776-6819]:ExpressionStatement[7182-7225]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "info" : "ReturnStatement[6836-6895]:ReturnStatement[7242-7301]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[7014-7155]:VariableDeclarationStatement[7420-7561]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[7164-7220]:IfStatement[7570-7626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7183-7220]:Block[7589-7626]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[7197-7210]:ReturnStatement[7603-7616]"
    }, {
      "left" : "if (!isPotentialBeanType(type.getRawClass()))",
      "right" : "if (!isPotentialBeanType(type.getRawClass()))",
      "info" : "IfStatement[7302-7384]:IfStatement[7708-7790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7348-7384]:Block[7754-7790]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7362-7374]:ReturnStatement[7768-7780]"
    }, {
      "left" : "checkIllegalTypes(ctxt, type, beanDesc);",
      "right" : "checkIllegalTypes(ctxt, type, beanDesc);",
      "info" : "ExpressionStatement[7436-7476]:ExpressionStatement[7842-7882]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[7549-7600]:ReturnStatement[7955-8006]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7612-7621]:MarkerAnnotation[8018-8027]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7626-7632]:Modifier[8032-8038]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[7633-7657]:ParameterizedType[8039-8063]"
    }, {
      "left" : "createBuilderBasedDeserializer",
      "right" : "createBuilderBasedDeserializer",
      "info" : "SimpleName[7658-7688]:SimpleName[8064-8094]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7696-7723]:SingleVariableDeclaration[8102-8129]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[7725-7743]:SingleVariableDeclaration[8131-8149]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[7745-7769]:SingleVariableDeclaration[8151-8175]"
    }, {
      "left" : "Class<?> builderClass",
      "right" : "Class<?> builderClass",
      "info" : "SingleVariableDeclaration[7777-7798]:SingleVariableDeclaration[8183-8204]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7815-7835]:SimpleType[8221-8241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7840-8137]:Block[8246-8543]"
    }, {
      "left" : "JavaType builderType = ctxt.constructType(builderClass);",
      "right" : "JavaType builderType = ctxt.constructType(builderClass);",
      "info" : "VariableDeclarationStatement[7909-7965]:VariableDeclarationStatement[8315-8371]"
    }, {
      "left" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "right" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "info" : "VariableDeclarationStatement[7974-8055]:VariableDeclarationStatement[8380-8461]"
    }, {
      "left" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "right" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "info" : "ReturnStatement[8064-8131]:ReturnStatement[8470-8537]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8302-8311]:Modifier[8708-8717]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[8312-8331]:ParameterizedType[8718-8737]"
    }, {
      "left" : "findStdDeserializer",
      "right" : "findStdDeserializer",
      "info" : "SimpleName[8332-8351]:SimpleName[8738-8757]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[8352-8379]:SingleVariableDeclaration[8758-8785]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8393-8406]:SingleVariableDeclaration[8799-8812]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[8408-8432]:SingleVariableDeclaration[8814-8838]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8449-8469]:SimpleType[8855-8875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8474-9062]:Block[8880-9468]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "right" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[8588-8662]:VariableDeclarationStatement[8994-9068]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[8730-9034]:IfStatement[9136-9440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8749-9034]:Block[9155-9440]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[8763-9024]:IfStatement[9169-9430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8810-9024]:Block[9216-9430]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[8828-9010]:EnhancedForStatement[9234-9416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8904-9010]:Block[9310-9416]"
    }, {
      "left" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "right" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "info" : "ExpressionStatement[8926-8992]:ExpressionStatement[9332-9398]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[9043-9056]:ReturnStatement[9449-9462]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[9072-9081]:Modifier[9478-9487]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[9082-9090]:SimpleType[9488-9496]"
    }, {
      "left" : "materializeAbstractType",
      "right" : "materializeAbstractType",
      "info" : "SimpleName[9091-9114]:SimpleName[9497-9520]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[9115-9142]:SingleVariableDeclaration[9521-9548]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[9156-9169]:SingleVariableDeclaration[9562-9575]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[9171-9195]:SingleVariableDeclaration[9577-9601]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[9212-9232]:SimpleType[9618-9638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9237-9613]:Block[9643-10019]"
    }, {
      "left" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "right" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "info" : "EnhancedForStatement[9339-9586]:EnhancedForStatement[9745-9992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9409-9586]:Block[9815-9992]"
    }, {
      "left" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "right" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "info" : "VariableDeclarationStatement[9423-9493]:VariableDeclarationStatement[9829-9899]"
    }, {
      "left" : "if (concrete != null)",
      "right" : "if (concrete != null)",
      "info" : "IfStatement[9506-9576]:IfStatement[9912-9982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9528-9576]:Block[9934-9982]"
    }, {
      "left" : "return concrete;",
      "right" : "return concrete;",
      "info" : "ReturnStatement[9546-9562]:ReturnStatement[9952-9968]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9595-9607]:ReturnStatement[10001-10013]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[10157-10187]:SingleMemberAnnotation[10563-10593]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10192-10198]:Modifier[10598-10604]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[10199-10223]:ParameterizedType[10605-10629]"
    }, {
      "left" : "buildBeanDeserializer",
      "right" : "buildBeanDeserializer",
      "info" : "SimpleName[10224-10245]:SimpleName[10630-10651]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[10246-10273]:SingleVariableDeclaration[10652-10679]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[10287-10300]:SingleVariableDeclaration[10693-10706]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[10302-10326]:SingleVariableDeclaration[10708-10732]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[10343-10363]:SimpleType[10749-10769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10368-12640]:Block[10774-13046]"
    }, {
      "left" : "ValueInstantiator valueInstantiator;",
      "right" : "ValueInstantiator valueInstantiator;",
      "info" : "VariableDeclarationStatement[10435-10471]:VariableDeclarationStatement[10841-10877]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10791-10981]:TryStatement[11197-11387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10795-10877]:Block[11201-11283]"
    }, {
      "left" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "right" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[10809-10867]:ExpressionStatement[11215-11273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10913-10981]:Block[11319-11387]"
    }, {
      "left" : "return new ErrorThrowingDeserializer(error);",
      "right" : "return new ErrorThrowingDeserializer(error);",
      "info" : "ReturnStatement[10927-10971]:ReturnStatement[11333-11377]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[10990-11073]:VariableDeclarationStatement[11396-11479]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[11082-11130]:ExpressionStatement[11488-11536]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11203-11241]:ExpressionStatement[11609-11647]"
    }, {
      "left" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "right" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11250-11293]:ExpressionStatement[11656-11699]"
    }, {
      "left" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "right" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11388-11436]:ExpressionStatement[11794-11842]"
    }, {
      "left" : "addInjectables(ctxt, beanDesc, builder);",
      "right" : "addInjectables(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11445-11485]:ExpressionStatement[11851-11891]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[11503-11557]:VariableDeclarationStatement[11909-11963]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[11566-11800]:IfStatement[11972-12206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11613-11800]:Block[12019-12206]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[11627-11790]:EnhancedForStatement[12033-12196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11703-11790]:Block[12109-12196]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[11721-11776]:ExpressionStatement[12127-12182]"
    }, {
      "left" : "JsonDeserializer<?> deserializer;",
      "right" : "JsonDeserializer<?> deserializer;",
      "info" : "VariableDeclarationStatement[11809-11842]:VariableDeclarationStatement[12215-12248]"
    }, {
      "left" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "right" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "info" : "IfStatement[12028-12214]:IfStatement[12434-12620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12090-12153]:Block[12496-12559]"
    }, {
      "left" : "deserializer = builder.buildAbstract();",
      "right" : "deserializer = builder.buildAbstract();",
      "info" : "ExpressionStatement[12104-12143]:ExpressionStatement[12510-12549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12159-12214]:Block[12565-12620]"
    }, {
      "left" : "deserializer = builder.build();",
      "right" : "deserializer = builder.build();",
      "info" : "ExpressionStatement[12173-12204]:ExpressionStatement[12579-12610]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[12329-12578]:IfStatement[12735-12984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12376-12578]:Block[12782-12984]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[12390-12568]:EnhancedForStatement[12796-12974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12466-12568]:Block[12872-12974]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[12484-12554]:ExpressionStatement[12890-12960]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[12587-12634]:ReturnStatement[12993-13040]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[12934-12964]:SingleMemberAnnotation[13340-13370]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12969-12978]:Modifier[13375-13384]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[12979-13003]:ParameterizedType[13385-13409]"
    }, {
      "left" : "buildBuilderBasedDeserializer",
      "right" : "buildBuilderBasedDeserializer",
      "info" : "SimpleName[13004-13033]:SimpleName[13410-13439]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[13041-13068]:SingleVariableDeclaration[13447-13474]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[13070-13088]:SingleVariableDeclaration[13476-13494]"
    }, {
      "left" : "BeanDescription builderDesc",
      "right" : "BeanDescription builderDesc",
      "info" : "SingleVariableDeclaration[13090-13117]:SingleVariableDeclaration[13496-13523]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[13134-13154]:SimpleType[13540-13560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13159-15444]:Block[13565-15850]"
    }, {
      "left" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "right" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[13222-13301]:VariableDeclarationStatement[13628-13707]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[13310-13364]:VariableDeclarationStatement[13716-13770]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[13373-13459]:VariableDeclarationStatement[13779-13865]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[13468-13516]:ExpressionStatement[13874-13922]"
    }, {
      "left" : "addBeanProps(ctxt, builderDesc, builder);",
      "right" : "addBeanProps(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13596-13637]:ExpressionStatement[14002-14043]"
    }, {
      "left" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "right" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13646-13692]:ExpressionStatement[14052-14098]"
    }, {
      "left" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "right" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13795-13846]:ExpressionStatement[14201-14252]"
    }, {
      "left" : "addInjectables(ctxt, builderDesc, builder);",
      "right" : "addInjectables(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13855-13898]:ExpressionStatement[14261-14304]"
    }, {
      "left" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "right" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "info" : "VariableDeclarationStatement[13908-13982]:VariableDeclarationStatement[14314-14388]"
    }, {
      "left" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "right" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "info" : "VariableDeclarationStatement[13991-14104]:VariableDeclarationStatement[14397-14510]"
    }, {
      "left" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "right" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "info" : "VariableDeclarationStatement[14171-14247]:VariableDeclarationStatement[14577-14653]"
    }, {
      "left" : "if (buildMethod != null)",
      "right" : "if (buildMethod != null)",
      "info" : "IfStatement[14256-14552]:IfStatement[14662-14958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14281-14552]:Block[14687-14958]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[14353-14542]:IfStatement[14759-14948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14394-14542]:Block[14800-14948]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[14409-14528]:ExpressionStatement[14815-14934]"
    }, {
      "left" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "right" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "info" : "ExpressionStatement[14561-14612]:ExpressionStatement[14967-15018]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[14669-14906]:IfStatement[15075-15312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14716-14906]:Block[15122-15312]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[14730-14896]:EnhancedForStatement[15136-15302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14806-14896]:Block[15212-15302]"
    }, {
      "left" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "info" : "ExpressionStatement[14824-14882]:ExpressionStatement[15230-15288]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "right" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "info" : "VariableDeclarationStatement[14915-15015]:VariableDeclarationStatement[15321-15421]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[15130-15382]:IfStatement[15536-15788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15177-15382]:Block[15583-15788]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[15191-15372]:EnhancedForStatement[15597-15778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15267-15372]:Block[15673-15778]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "info" : "ExpressionStatement[15285-15358]:ExpressionStatement[15691-15764]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[15391-15438]:ReturnStatement[15797-15844]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[15454-15463]:Modifier[15860-15869]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15464-15468]:PrimitiveType[15870-15874]"
    }, {
      "left" : "addObjectIdReader",
      "right" : "addObjectIdReader",
      "info" : "SimpleName[15469-15486]:SimpleName[15875-15892]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[15487-15514]:SingleVariableDeclaration[15893-15920]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[15528-15552]:SingleVariableDeclaration[15934-15958]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[15554-15585]:SingleVariableDeclaration[15960-15991]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[15602-15622]:SimpleType[16008-16028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15627-17304]:Block[16033-17710]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "info" : "VariableDeclarationStatement[15637-15692]:VariableDeclarationStatement[16043-16098]"
    }, {
      "left" : "if (objectIdInfo == null)",
      "right" : "if (objectIdInfo == null)",
      "info" : "IfStatement[15701-15758]:IfStatement[16107-16164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15727-15758]:Block[16133-16164]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[15741-15748]:ReturnStatement[16147-16154]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[15767-15820]:VariableDeclarationStatement[16173-16226]"
    }, {
      "left" : "JavaType idType;",
      "right" : "JavaType idType;",
      "info" : "VariableDeclarationStatement[15829-15845]:VariableDeclarationStatement[16235-16251]"
    }, {
      "left" : "SettableBeanProperty idProp;",
      "right" : "SettableBeanProperty idProp;",
      "info" : "VariableDeclarationStatement[15854-15882]:VariableDeclarationStatement[16260-16288]"
    }, {
      "left" : "ObjectIdGenerator<?> gen;",
      "right" : "ObjectIdGenerator<?> gen;",
      "info" : "VariableDeclarationStatement[15891-15916]:VariableDeclarationStatement[16297-16322]"
    }, {
      "left" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "VariableDeclarationStatement[15926-16023]:VariableDeclarationStatement[16332-16429]"
    }, {
      "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "info" : "IfStatement[16104-16989]:IfStatement[16510-17395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16165-16700]:Block[16571-17106]"
    }, {
      "left" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "right" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "info" : "VariableDeclarationStatement[16217-16272]:VariableDeclarationStatement[16623-16678]"
    }, {
      "left" : "idProp = builder.findProperty(propName);",
      "right" : "idProp = builder.findProperty(propName);",
      "info" : "ExpressionStatement[16285-16325]:ExpressionStatement[16691-16731]"
    }, {
      "left" : "if (idProp == null)",
      "right" : "if (idProp == null)",
      "info" : "IfStatement[16338-16572]:IfStatement[16744-16978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16358-16572]:Block[16764-16978]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "info" : "ThrowStatement[16376-16558]:ThrowStatement[16782-16964]"
    }, {
      "left" : "idType = idProp.getType();",
      "right" : "idType = idProp.getType();",
      "info" : "ExpressionStatement[16585-16611]:ExpressionStatement[16991-17017]"
    }, {
      "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "info" : "ExpressionStatement[16624-16690]:ExpressionStatement[17030-17096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16706-16989]:Block[17112-17395]"
    }, {
      "left" : "JavaType type = ctxt.constructType(implClass);",
      "right" : "JavaType type = ctxt.constructType(implClass);",
      "info" : "VariableDeclarationStatement[16720-16766]:VariableDeclarationStatement[17126-17172]"
    }, {
      "left" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "right" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "info" : "ExpressionStatement[16779-16863]:ExpressionStatement[17185-17269]"
    }, {
      "left" : "idProp = null;",
      "right" : "idProp = null;",
      "info" : "ExpressionStatement[16876-16890]:ExpressionStatement[17282-17296]"
    }, {
      "left" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "ExpressionStatement[16903-16979]:ExpressionStatement[17309-17385]"
    }, {
      "left" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "right" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "info" : "VariableDeclarationStatement[17084-17151]:VariableDeclarationStatement[17490-17557]"
    }, {
      "left" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "right" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "info" : "ExpressionStatement[17160-17298]:ExpressionStatement[17566-17704]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[17314-17344]:SingleMemberAnnotation[17720-17750]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17349-17355]:Modifier[17755-17761]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[17356-17380]:ParameterizedType[17762-17786]"
    }, {
      "left" : "buildThrowableDeserializer",
      "right" : "buildThrowableDeserializer",
      "info" : "SimpleName[17381-17407]:SimpleName[17787-17813]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[17408-17435]:SingleVariableDeclaration[17814-17841]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[17449-17462]:SingleVariableDeclaration[17855-17868]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[17464-17488]:SingleVariableDeclaration[17870-17894]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[17505-17525]:SimpleType[17911-17931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17530-20376]:Block[17936-20782]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[17540-17594]:VariableDeclarationStatement[17946-18000]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[17667-17750]:VariableDeclarationStatement[18073-18156]"
    }, {
      "left" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "right" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "info" : "ExpressionStatement[17759-17827]:ExpressionStatement[18165-18233]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[17837-17875]:ExpressionStatement[18243-18281]"
    }, {
      "left" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "right" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "info" : "VariableDeclarationStatement[18128-18201]:VariableDeclarationStatement[18534-18607]"
    }, {
      "left" : "if (am != null)",
      "right" : "if (am != null)",
      "info" : "IfStatement[18210-18889]:IfStatement[18616-19295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18226-18889]:Block[18632-19295]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "info" : "VariableDeclarationStatement[18264-18411]:VariableDeclarationStatement[18670-18817]"
    }, {
      "left" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "right" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "info" : "VariableDeclarationStatement[18424-18547]:VariableDeclarationStatement[18830-18953]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[18560-18879]:IfStatement[18966-19285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18578-18879]:Block[18984-19285]"
    }, {
      "left" : "builder.addOrReplaceProperty(prop, true);",
      "right" : "builder.addOrReplaceProperty(prop, true);",
      "info" : "ExpressionStatement[18824-18865]:ExpressionStatement[19230-19271]"
    }, {
      "left" : "builder.addIgnorable(\"localizedMessage\");",
      "right" : "builder.addIgnorable(\"localizedMessage\");",
      "info" : "ExpressionStatement[18953-18994]:ExpressionStatement[19359-19400]"
    }, {
      "left" : "builder.addIgnorable(\"suppressed\");",
      "right" : "builder.addIgnorable(\"suppressed\");",
      "info" : "ExpressionStatement[19076-19111]:ExpressionStatement[19482-19517]"
    }, {
      "left" : "builder.addIgnorable(\"message\");",
      "right" : "builder.addIgnorable(\"message\");",
      "info" : "ExpressionStatement[19246-19278]:ExpressionStatement[19652-19684]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[19346-19580]:IfStatement[19752-19986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19393-19580]:Block[19799-19986]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[19407-19570]:EnhancedForStatement[19813-19976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19483-19570]:Block[19889-19976]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[19501-19556]:ExpressionStatement[19907-19962]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.build();",
      "right" : "JsonDeserializer<?> deserializer = builder.build();",
      "info" : "VariableDeclarationStatement[19589-19640]:VariableDeclarationStatement[19995-20046]"
    }, {
      "left" : "if (deserializer instanceof BeanDeserializer)",
      "right" : "if (deserializer instanceof BeanDeserializer)",
      "info" : "IfStatement[19821-19965]:IfStatement[20227-20371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19867-19965]:Block[20273-20371]"
    }, {
      "left" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "right" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "info" : "ExpressionStatement[19881-19955]:ExpressionStatement[20287-20361]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[20065-20314]:IfStatement[20471-20720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20112-20314]:Block[20518-20720]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[20126-20304]:EnhancedForStatement[20532-20710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20202-20304]:Block[20608-20710]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[20220-20290]:ExpressionStatement[20626-20696]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[20323-20370]:ReturnStatement[20729-20776]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[20804-20813]:Modifier[21210-21219]"
    }, {
      "left" : "BeanDeserializerBuilder",
      "right" : "BeanDeserializerBuilder",
      "info" : "SimpleType[20814-20837]:SimpleType[21220-21243]"
    }, {
      "left" : "constructBeanDeserializerBuilder",
      "right" : "constructBeanDeserializerBuilder",
      "info" : "SimpleName[20838-20870]:SimpleName[21244-21276]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[20871-20898]:SingleVariableDeclaration[21277-21304]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[20912-20936]:SingleVariableDeclaration[21318-21342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20938-21017]:Block[21344-21423]"
    }, {
      "left" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "right" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "info" : "ReturnStatement[20948-21011]:ReturnStatement[21354-21417]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21260-21269]:Modifier[21666-21675]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21270-21274]:PrimitiveType[21676-21680]"
    }, {
      "left" : "addBeanProps",
      "right" : "addBeanProps",
      "info" : "SimpleName[21275-21287]:SimpleName[21681-21693]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[21288-21315]:SingleVariableDeclaration[21694-21721]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[21329-21353]:SingleVariableDeclaration[21735-21759]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[21355-21386]:SingleVariableDeclaration[21761-21792]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[21403-21423]:SimpleType[21809-21829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21428-28427]:Block[21834-28833]"
    }, {
      "left" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "right" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "info" : "VariableDeclarationStatement[21438-21498]:VariableDeclarationStatement[21844-21904]"
    }, {
      "left" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
      "right" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
      "info" : "VariableDeclarationStatement[21507-21675]:VariableDeclarationStatement[21913-22081]"
    }, {
      "left" : "final boolean hasCreatorProps = (creatorProps != null);",
      "right" : "final boolean hasCreatorProps = (creatorProps != null);",
      "info" : "VariableDeclarationStatement[21684-21739]:VariableDeclarationStatement[22090-22145]"
    }, {
      "left" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
      "right" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[22022-22195]:VariableDeclarationStatement[22428-22601]"
    }, {
      "left" : "Set<String> ignored;",
      "right" : "Set<String> ignored;",
      "info" : "VariableDeclarationStatement[22204-22224]:VariableDeclarationStatement[22610-22630]"
    }, {
      "left" : "if (ignorals != null)",
      "right" : "if (ignorals != null)",
      "info" : "IfStatement[22234-22671]:IfStatement[22640-23077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22256-22608]:Block[22662-23014]"
    }, {
      "left" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
      "right" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
      "info" : "VariableDeclarationStatement[22270-22318]:VariableDeclarationStatement[22676-22724]"
    }, {
      "left" : "builder.setIgnoreUnknownProperties(ignoreAny);",
      "right" : "builder.setIgnoreUnknownProperties(ignoreAny);",
      "info" : "ExpressionStatement[22331-22377]:ExpressionStatement[22737-22783]"
    }, {
      "left" : "ignored = ignorals.findIgnoredForDeserialization();",
      "right" : "ignored = ignorals.findIgnoredForDeserialization();",
      "info" : "ExpressionStatement[22439-22490]:ExpressionStatement[22845-22896]"
    }, {
      "left" : "for (String propName : ignored)",
      "right" : "for (String propName : ignored)",
      "info" : "EnhancedForStatement[22503-22598]:EnhancedForStatement[22909-23004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22535-22598]:Block[22941-23004]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[22553-22584]:ExpressionStatement[22959-22990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22614-22671]:Block[23020-23077]"
    }, {
      "left" : "ignored = Collections.emptySet();",
      "right" : "ignored = Collections.emptySet();",
      "info" : "ExpressionStatement[22628-22661]:ExpressionStatement[23034-23067]"
    }, {
      "left" : "AnnotatedMethod anySetterMethod = beanDesc.findAnySetter();",
      "right" : "AnnotatedMethod anySetterMethod = beanDesc.findAnySetter();",
      "info" : "VariableDeclarationStatement[22734-22793]:VariableDeclarationStatement[23140-23199]"
    }, {
      "left" : "AnnotatedMember anySetterField = null;",
      "right" : "AnnotatedMember anySetterField = null;",
      "info" : "VariableDeclarationStatement[22802-22840]:VariableDeclarationStatement[23208-23246]"
    }, {
      "left" : "if (anySetterMethod != null)",
      "right" : "if (anySetterMethod != null)",
      "info" : "IfStatement[22849-23191]:IfStatement[23255-23597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22878-22976]:Block[23284-23382]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterMethod));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterMethod));",
      "info" : "ExpressionStatement[22892-22966]:ExpressionStatement[23298-23372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22990-23191]:Block[23396-23597]"
    }, {
      "left" : "anySetterField = beanDesc.findAnySetterField();",
      "right" : "anySetterField = beanDesc.findAnySetterField();",
      "info" : "ExpressionStatement[23001-23048]:ExpressionStatement[23407-23454]"
    }, {
      "left" : "if(anySetterField != null)",
      "right" : "if(anySetterField != null)",
      "info" : "IfStatement[23058-23181]:IfStatement[23464-23587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23085-23181]:Block[23491-23587]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));",
      "info" : "ExpressionStatement[23097-23170]:ExpressionStatement[23503-23576]"
    }, {
      "left" : "if (anySetterMethod == null && anySetterField == null)",
      "right" : "if (anySetterMethod == null && anySetterField == null)",
      "info" : "IfStatement[23353-23823]:IfStatement[23759-24229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23408-23823]:Block[23814-24229]"
    }, {
      "left" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "right" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "info" : "VariableDeclarationStatement[23422-23487]:VariableDeclarationStatement[23828-23893]"
    }, {
      "left" : "if (ignored2 != null)",
      "right" : "if (ignored2 != null)",
      "info" : "IfStatement[23500-23813]:IfStatement[23906-24219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23522-23813]:Block[23928-24219]"
    }, {
      "left" : "for (String propName : ignored2)",
      "right" : "for (String propName : ignored2)",
      "info" : "EnhancedForStatement[23540-23799]:EnhancedForStatement[23946-24205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23573-23799]:Block[23979-24205]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[23750-23781]:ExpressionStatement[24156-24187]"
    }, {
      "left" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
      "right" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
      "info" : "VariableDeclarationStatement[23832-23990]:VariableDeclarationStatement[24238-24396]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "right" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "info" : "VariableDeclarationStatement[24058-24191]:VariableDeclarationStatement[24464-24597]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[24262-24511]:IfStatement[24668-24917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24309-24511]:Block[24715-24917]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[24323-24501]:EnhancedForStatement[24729-24907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24399-24501]:Block[24805-24907]"
    }, {
      "left" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "right" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "info" : "ExpressionStatement[24417-24487]:ExpressionStatement[24823-24893]"
    }, {
      "left" : "for (BeanPropertyDefinition propDef : propDefs)",
      "right" : "for (BeanPropertyDefinition propDef : propDefs)",
      "info" : "EnhancedForStatement[24617-28421]:EnhancedForStatement[25023-28827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24665-28421]:Block[25071-28827]"
    }, {
      "left" : "SettableBeanProperty prop = null;",
      "right" : "SettableBeanProperty prop = null;",
      "info" : "VariableDeclarationStatement[24679-24712]:VariableDeclarationStatement[25085-25118]"
    }, {
      "left" : "if (propDef.hasSetter())",
      "right" : "if (propDef.hasSetter())",
      "info" : "IfStatement[25004-26078]:IfStatement[25410-26484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25029-25214]:Block[25435-25620]"
    }, {
      "left" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "right" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "info" : "VariableDeclarationStatement[25047-25111]:VariableDeclarationStatement[25453-25517]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[25128-25200]:ExpressionStatement[25534-25606]"
    }, {
      "left" : "if (propDef.hasField())",
      "right" : "if (propDef.hasField())",
      "info" : "IfStatement[25220-26078]:IfStatement[25626-26484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25244-25418]:Block[25650-25824]"
    }, {
      "left" : "JavaType propertyType = propDef.getField().getType();",
      "right" : "JavaType propertyType = propDef.getField().getType();",
      "info" : "VariableDeclarationStatement[25262-25315]:VariableDeclarationStatement[25668-25721]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[25332-25404]:ExpressionStatement[25738-25810]"
    }, {
      "left" : "if (useGettersAsSetters && propDef.hasGetter())",
      "right" : "if (useGettersAsSetters && propDef.hasGetter())",
      "info" : "IfStatement[25424-26078]:IfStatement[25830-26484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25472-26078]:Block[25878-26484]"
    }, {
      "left" : "AnnotatedMethod getter = propDef.getGetter();",
      "right" : "AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[25640-25685]:VariableDeclarationStatement[26046-26091]"
    }, {
      "left" : "Class<?> rawPropertyType = getter.getRawType();",
      "right" : "Class<?> rawPropertyType = getter.getRawType();",
      "info" : "VariableDeclarationStatement[25773-25820]:VariableDeclarationStatement[26179-26226]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "right" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "info" : "IfStatement[25837-26064]:IfStatement[26243-26470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25964-26064]:Block[26370-26470]"
    }, {
      "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "info" : "ExpressionStatement[25986-26046]:ExpressionStatement[26392-26452]"
    }, {
      "left" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
      "right" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
      "info" : "IfStatement[26239-27846]:IfStatement[26645-28252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26297-27846]:Block[26703-28252]"
    }, {
      "left" : "final String name = propDef.getName();",
      "right" : "final String name = propDef.getName();",
      "info" : "VariableDeclarationStatement[26680-26718]:VariableDeclarationStatement[27086-27124]"
    }, {
      "left" : "CreatorProperty cprop = null;",
      "right" : "CreatorProperty cprop = null;",
      "info" : "VariableDeclarationStatement[26735-26764]:VariableDeclarationStatement[27141-27170]"
    }, {
      "left" : "if (creatorProps != null)",
      "right" : "if (creatorProps != null)",
      "info" : "IfStatement[26781-27126]:IfStatement[27187-27532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26807-27126]:Block[27213-27532]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[26829-27108]:EnhancedForStatement[27235-27514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26874-27108]:Block[27280-27514]"
    }, {
      "left" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "right" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "info" : "IfStatement[26900-27086]:IfStatement[27306-27492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26966-27086]:Block[27372-27492]"
    }, {
      "left" : "cprop = (CreatorProperty) cp;",
      "right" : "cprop = (CreatorProperty) cp;",
      "info" : "ExpressionStatement[26996-27025]:ExpressionStatement[27402-27431]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27054-27060]:BreakStatement[27460-27466]"
    }, {
      "left" : "if (cprop == null)",
      "right" : "if (cprop == null)",
      "info" : "IfStatement[27143-27620]:IfStatement[27549-28026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27162-27620]:Block[27568-28026]"
    }, {
      "left" : "List<String> n = new ArrayList<>();",
      "right" : "List<String> n = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[27184-27219]:VariableDeclarationStatement[27590-27625]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[27240-27353]:EnhancedForStatement[27646-27759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27285-27353]:Block[27691-27759]"
    }, {
      "left" : "n.add(cp.getName());",
      "right" : "n.add(cp.getName());",
      "info" : "ExpressionStatement[27311-27331]:ExpressionStatement[27717-27737]"
    }, {
      "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
      "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
      "info" : "ExpressionStatement[27374-27572]:ExpressionStatement[27780-27978]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[27593-27602]:ContinueStatement[27999-28008]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[27637-27725]:IfStatement[28043-28131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27655-27725]:Block[28061-28131]"
    }, {
      "left" : "cprop.setFallbackSetter(prop);",
      "right" : "cprop.setFallbackSetter(prop);",
      "info" : "ExpressionStatement[27677-27707]:ExpressionStatement[28083-28113]"
    }, {
      "left" : "prop = cprop;",
      "right" : "prop = cprop;",
      "info" : "ExpressionStatement[27742-27755]:ExpressionStatement[28148-28161]"
    }, {
      "left" : "builder.addCreatorProperty(cprop);",
      "right" : "builder.addCreatorProperty(cprop);",
      "info" : "ExpressionStatement[27772-27806]:ExpressionStatement[28178-28212]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[27823-27832]:ContinueStatement[28229-28238]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[27860-28411]:IfStatement[28266-28817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27878-28411]:Block[28284-28817]"
    }, {
      "left" : "Class<?>[] views = propDef.findViews();",
      "right" : "Class<?>[] views = propDef.findViews();",
      "info" : "VariableDeclarationStatement[27896-27935]:VariableDeclarationStatement[28302-28341]"
    }, {
      "left" : "if (views == null)",
      "right" : "if (views == null)",
      "info" : "IfStatement[27952-28238]:IfStatement[28358-28644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27971-28238]:Block[28377-28644]"
    }, {
      "left" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "right" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "info" : "IfStatement[28096-28220]:IfStatement[28502-28626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28155-28220]:Block[28561-28626]"
    }, {
      "left" : "views = NO_VIEWS;",
      "right" : "views = NO_VIEWS;",
      "info" : "ExpressionStatement[28181-28198]:ExpressionStatement[28587-28604]"
    }, {
      "left" : "prop.setViews(views);",
      "right" : "prop.setViews(views);",
      "info" : "ExpressionStatement[28333-28354]:ExpressionStatement[28739-28760]"
    }, {
      "left" : "builder.addProperty(prop);",
      "right" : "builder.addProperty(prop);",
      "info" : "ExpressionStatement[28371-28397]:ExpressionStatement[28777-28803]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[28660-28669]:Modifier[29066-29075]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[28670-28698]:ParameterizedType[29076-29104]"
    }, {
      "left" : "filterBeanProps",
      "right" : "filterBeanProps",
      "info" : "SimpleName[28699-28714]:SimpleName[29105-29120]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[28715-28742]:SingleVariableDeclaration[29121-29148]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[28756-28780]:SingleVariableDeclaration[29162-29186]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[28782-28813]:SingleVariableDeclaration[29188-29219]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefsIn",
      "right" : "List<BeanPropertyDefinition> propDefsIn",
      "info" : "SingleVariableDeclaration[28827-28866]:SingleVariableDeclaration[29233-29272]"
    }, {
      "left" : "Set<String> ignored",
      "right" : "Set<String> ignored",
      "info" : "SingleVariableDeclaration[28880-28899]:SingleVariableDeclaration[29286-29305]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[28916-28936]:SimpleType[29322-29342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28941-30396]:Block[29347-30802]"
    }, {
      "left" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "right" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "info" : "VariableDeclarationStatement[28951-29081]:VariableDeclarationStatement[29357-29487]"
    }, {
      "left" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "right" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "info" : "VariableDeclarationStatement[29090-29163]:VariableDeclarationStatement[29496-29569]"
    }, {
      "left" : "for (BeanPropertyDefinition property : propDefsIn)",
      "right" : "for (BeanPropertyDefinition property : propDefsIn)",
      "info" : "EnhancedForStatement[29250-30367]:EnhancedForStatement[29656-30773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29301-30367]:Block[29707-30773]"
    }, {
      "left" : "String name = property.getName();",
      "right" : "String name = property.getName();",
      "info" : "VariableDeclarationStatement[29315-29348]:VariableDeclarationStatement[29721-29754]"
    }, {
      "left" : "if (ignored.contains(name))",
      "right" : "if (ignored.contains(name))",
      "info" : "IfStatement[29361-29501]:IfStatement[29767-29907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29389-29501]:Block[29795-29907]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[29478-29487]:ContinueStatement[29884-29893]"
    }, {
      "left" : "if (!property.hasConstructorParameter())",
      "right" : "if (!property.hasConstructorParameter())",
      "info" : "IfStatement[29514-30323]:IfStatement[29920-30729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29555-30323]:Block[29961-30729]"
    }, {
      "left" : "Class<?> rawPropertyType = null;",
      "right" : "Class<?> rawPropertyType = null;",
      "info" : "VariableDeclarationStatement[29606-29638]:VariableDeclarationStatement[30012-30044]"
    }, {
      "left" : "if (property.hasSetter())",
      "right" : "if (property.hasSetter())",
      "info" : "IfStatement[29655-29905]:IfStatement[30061-30311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29681-29783]:Block[30087-30189]"
    }, {
      "left" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "right" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "info" : "ExpressionStatement[29703-29765]:ExpressionStatement[30109-30171]"
    }, {
      "left" : "if (property.hasField())",
      "right" : "if (property.hasField())",
      "info" : "IfStatement[29789-29905]:IfStatement[30195-30311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29814-29905]:Block[30220-30311]"
    }, {
      "left" : "rawPropertyType = property.getField().getRawType();",
      "right" : "rawPropertyType = property.getField().getRawType();",
      "info" : "ExpressionStatement[29836-29887]:ExpressionStatement[30242-30293]"
    }, {
      "left" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes))",
      "right" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes))",
      "info" : "IfStatement[29987-30309]:IfStatement[30393-30715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30120-30309]:Block[30526-30715]"
    }, {
      "left" : "builder.addIgnorable(name);",
      "right" : "builder.addIgnorable(name);",
      "info" : "ExpressionStatement[30234-30261]:ExpressionStatement[30640-30667]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[30282-30291]:ContinueStatement[30688-30697]"
    }, {
      "left" : "result.add(property);",
      "right" : "result.add(property);",
      "info" : "ExpressionStatement[30336-30357]:ExpressionStatement[30742-30763]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[30376-30390]:ReturnStatement[30782-30796]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30575-30584]:Modifier[30981-30990]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30585-30589]:PrimitiveType[30991-30995]"
    }, {
      "left" : "addReferenceProperties",
      "right" : "addReferenceProperties",
      "info" : "SimpleName[30590-30612]:SimpleName[30996-31018]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[30613-30640]:SingleVariableDeclaration[31019-31046]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[30654-30678]:SingleVariableDeclaration[31060-31084]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[30680-30711]:SingleVariableDeclaration[31086-31117]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[30728-30748]:SimpleType[31134-31154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30753-32211]:Block[31159-32617]"
    }, {
      "left" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "right" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "info" : "VariableDeclarationStatement[30844-30918]:VariableDeclarationStatement[31250-31324]"
    }, {
      "left" : "if (refs != null)",
      "right" : "if (refs != null)",
      "info" : "IfStatement[30927-32205]:IfStatement[31333-32611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30945-32205]:Block[31351-32611]"
    }, {
      "left" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "right" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "info" : "EnhancedForStatement[30959-32195]:EnhancedForStatement[31365-32601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31021-32195]:Block[31427-32601]"
    }, {
      "left" : "String name = en.getKey();",
      "right" : "String name = en.getKey();",
      "info" : "VariableDeclarationStatement[31039-31065]:VariableDeclarationStatement[31445-31471]"
    }, {
      "left" : "AnnotatedMember m = en.getValue();",
      "right" : "AnnotatedMember m = en.getValue();",
      "info" : "VariableDeclarationStatement[31082-31116]:VariableDeclarationStatement[31488-31522]"
    }, {
      "left" : "JavaType type;",
      "right" : "JavaType type;",
      "info" : "VariableDeclarationStatement[31133-31147]:VariableDeclarationStatement[31539-31553]"
    }, {
      "left" : "if (m instanceof AnnotatedMethod)",
      "right" : "if (m instanceof AnnotatedMethod)",
      "info" : "IfStatement[31164-31872]:IfStatement[31570-32278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31198-31287]:Block[31604-31693]"
    }, {
      "left" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "right" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "info" : "ExpressionStatement[31220-31269]:ExpressionStatement[31626-31675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31293-31872]:Block[31699-32278]"
    }, {
      "left" : "type = m.getType();",
      "right" : "type = m.getType();",
      "info" : "ExpressionStatement[31315-31334]:ExpressionStatement[31721-31740]"
    }, {
      "left" : "if (m instanceof AnnotatedParameter)",
      "right" : "if (m instanceof AnnotatedParameter)",
      "info" : "IfStatement[31551-31854]:IfStatement[31957-32260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31588-31854]:Block[31994-32260]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Can not bind back references as Creator parameters: type %s (reference '%s', parameter index #%d)\",\nbeanDesc.getBeanClass().getName(), name, ((AnnotatedParameter) m).getIndex());",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Can not bind back references as Creator parameters: type %s (reference '%s', parameter index #%d)\",\nbeanDesc.getBeanClass().getName(), name, ((AnnotatedParameter) m).getIndex());",
      "info" : "ExpressionStatement[31614-31832]:ExpressionStatement[32020-32238]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                        ctxt.getConfig(), m, PropertyName.construct(name));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                        ctxt.getConfig(), m, PropertyName.construct(name));",
      "info" : "VariableDeclarationStatement[31889-32043]:VariableDeclarationStatement[32295-32449]"
    }, {
      "left" : "builder.addBackReferenceProperty(name, constructSettableProperty(ctxt,\n                        beanDesc, propDef, type));",
      "right" : "builder.addBackReferenceProperty(name, constructSettableProperty(ctxt,\n                        beanDesc, propDef, type));",
      "info" : "ExpressionStatement[32060-32181]:ExpressionStatement[32466-32587]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32427-32436]:Modifier[32833-32842]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32437-32441]:PrimitiveType[32843-32847]"
    }, {
      "left" : "addInjectables",
      "right" : "addInjectables",
      "info" : "SimpleName[32442-32456]:SimpleName[32848-32862]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[32457-32484]:SingleVariableDeclaration[32863-32890]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[32498-32522]:SingleVariableDeclaration[32904-32928]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[32524-32555]:SingleVariableDeclaration[32930-32961]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[32572-32592]:SimpleType[32978-32998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32597-33046]:Block[33003-33452]"
    }, {
      "left" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "right" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "info" : "VariableDeclarationStatement[32607-32669]:VariableDeclarationStatement[33013-33075]"
    }, {
      "left" : "if (raw != null)",
      "right" : "if (raw != null)",
      "info" : "IfStatement[32678-33040]:IfStatement[33084-33446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32695-33040]:Block[33101-33446]"
    }, {
      "left" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "right" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "info" : "EnhancedForStatement[32709-33030]:EnhancedForStatement[33115-33436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32773-33030]:Block[33179-33436]"
    }, {
      "left" : "AnnotatedMember m = entry.getValue();",
      "right" : "AnnotatedMember m = entry.getValue();",
      "info" : "VariableDeclarationStatement[32791-32828]:VariableDeclarationStatement[33197-33234]"
    }, {
      "left" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "right" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "info" : "ExpressionStatement[32845-33016]:ExpressionStatement[33251-33422]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[33421-33451]:SingleMemberAnnotation[33827-33857]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33456-33465]:Modifier[33862-33871]"
    }, {
      "left" : "SettableAnyProperty",
      "right" : "SettableAnyProperty",
      "info" : "SimpleType[33466-33485]:SimpleType[33872-33891]"
    }, {
      "left" : "constructAnySetter",
      "right" : "constructAnySetter",
      "info" : "SimpleName[33486-33504]:SimpleName[33892-33910]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[33505-33532]:SingleVariableDeclaration[33911-33938]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[33546-33570]:SingleVariableDeclaration[33952-33976]"
    }, {
      "left" : "AnnotatedMember mutator",
      "right" : "AnnotatedMember mutator",
      "info" : "SingleVariableDeclaration[33572-33595]:SingleVariableDeclaration[33978-34001]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[33612-33632]:SimpleType[34018-34038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33637-35181]:Block[34043-35587]"
    }, {
      "left" : "JavaType type = null;",
      "right" : "JavaType type = null;",
      "info" : "VariableDeclarationStatement[33730-33751]:VariableDeclarationStatement[34136-34157]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[33760-34145]:IfStatement[34166-34551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33800-33947]:Block[34206-34353]"
    }, {
      "left" : "type = ((AnnotatedMethod) mutator).getParameterType(1);",
      "right" : "type = ((AnnotatedMethod) mutator).getParameterType(1);",
      "info" : "ExpressionStatement[33882-33937]:ExpressionStatement[34288-34343]"
    }, {
      "left" : "if (mutator instanceof AnnotatedField)",
      "right" : "if (mutator instanceof AnnotatedField)",
      "info" : "IfStatement[33953-34145]:IfStatement[34359-34551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33992-34145]:Block[34398-34551]"
    }, {
      "left" : "type = ((AnnotatedField) mutator).getType().getContentType();",
      "right" : "type = ((AnnotatedField) mutator).getType().getContentType();",
      "info" : "ExpressionStatement[34074-34135]:ExpressionStatement[34480-34541]"
    }, {
      "left" : "type = resolveMemberAndTypeAnnotations(ctxt, mutator, type);",
      "right" : "type = resolveMemberAndTypeAnnotations(ctxt, mutator, type);",
      "info" : "ExpressionStatement[34277-34337]:ExpressionStatement[34683-34743]"
    }, {
      "left" : "BeanProperty.Std prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                type, null, beanDesc.getClassAnnotations(), mutator,\n                PropertyMetadata.STD_OPTIONAL);",
      "right" : "BeanProperty.Std prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                type, null, beanDesc.getClassAnnotations(), mutator,\n                PropertyMetadata.STD_OPTIONAL);",
      "info" : "VariableDeclarationStatement[34346-34550]:VariableDeclarationStatement[34752-34956]"
    }, {
      "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[34629-34708]:VariableDeclarationStatement[35035-35114]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[34717-34791]:IfStatement[35123-35197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34736-34791]:Block[35142-35197]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[34750-34781]:ExpressionStatement[35156-35187]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[34800-35036]:IfStatement[35206-35442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34819-35036]:Block[35225-35442]"
    }, {
      "left" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[34936-35026]:ExpressionStatement[35342-35432]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[35045-35096]:VariableDeclarationStatement[35451-35502]"
    }, {
      "left" : "return new SettableAnyProperty(prop, mutator, type, deser, typeDeser);",
      "right" : "return new SettableAnyProperty(prop, mutator, type, deser, typeDeser);",
      "info" : "ReturnStatement[35105-35175]:ReturnStatement[35511-35581]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[35448-35457]:Modifier[35854-35863]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[35458-35478]:SimpleType[35864-35884]"
    }, {
      "left" : "constructSettableProperty",
      "right" : "constructSettableProperty",
      "info" : "SimpleName[35479-35504]:SimpleName[35885-35910]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[35505-35532]:SingleVariableDeclaration[35911-35938]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[35546-35570]:SingleVariableDeclaration[35952-35976]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[35572-35602]:SingleVariableDeclaration[35978-36008]"
    }, {
      "left" : "JavaType propType0",
      "right" : "JavaType propType0",
      "info" : "SingleVariableDeclaration[35616-35634]:SingleVariableDeclaration[36022-36040]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[35651-35671]:SimpleType[36057-36077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35676-37669]:Block[36082-38075]"
    }, {
      "left" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "right" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "info" : "VariableDeclarationStatement[35748-35809]:VariableDeclarationStatement[36154-36215]"
    }, {
      "left" : "if (mutator == null)",
      "right" : "if (mutator == null)",
      "info" : "IfStatement[36027-36164]:IfStatement[36433-36570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36048-36164]:Block[36454-36570]"
    }, {
      "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
      "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
      "info" : "ExpressionStatement[36062-36154]:ExpressionStatement[36468-36560]"
    }, {
      "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
      "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
      "info" : "VariableDeclarationStatement[36173-36247]:VariableDeclarationStatement[36579-36653]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[36337-36388]:VariableDeclarationStatement[36743-36794]"
    }, {
      "left" : "SettableBeanProperty prop;",
      "right" : "SettableBeanProperty prop;",
      "info" : "VariableDeclarationStatement[36397-36423]:VariableDeclarationStatement[36803-36829]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[36432-36882]:IfStatement[36838-37288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36472-36627]:Block[36878-37033]"
    }, {
      "left" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "right" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "info" : "ExpressionStatement[36486-36617]:ExpressionStatement[36892-37023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36633-36882]:Block[37039-37288]"
    }, {
      "left" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "right" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "info" : "ExpressionStatement[36743-36872]:ExpressionStatement[37149-37278]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[36891-36965]:VariableDeclarationStatement[37297-37371]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[36974-37048]:IfStatement[37380-37454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36993-37048]:Block[37399-37454]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[37007-37038]:ExpressionStatement[37413-37444]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[37057-37217]:IfStatement[37463-37623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37076-37217]:Block[37482-37623]"
    }, {
      "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[37090-37153]:ExpressionStatement[37496-37559]"
    }, {
      "left" : "prop = prop.withValueDeserializer(deser);",
      "right" : "prop = prop.withValueDeserializer(deser);",
      "info" : "ExpressionStatement[37166-37207]:ExpressionStatement[37572-37613]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "info" : "VariableDeclarationStatement[37288-37363]:VariableDeclarationStatement[37694-37769]"
    }, {
      "left" : "if (ref != null && ref.isManagedReference())",
      "right" : "if (ref != null && ref.isManagedReference())",
      "info" : "IfStatement[37372-37485]:IfStatement[37778-37891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37417-37485]:Block[37823-37891]"
    }, {
      "left" : "prop.setManagedReferenceName(ref.getName());",
      "right" : "prop.setManagedReferenceName(ref.getName());",
      "info" : "ExpressionStatement[37431-37475]:ExpressionStatement[37837-37881]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "info" : "VariableDeclarationStatement[37494-37549]:VariableDeclarationStatement[37900-37955]"
    }, {
      "left" : "if (objectIdInfo != null)",
      "right" : "if (objectIdInfo != null)",
      "info" : "IfStatement[37558-37642]:IfStatement[37964-38048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37583-37642]:Block[37989-38048]"
    }, {
      "left" : "prop.setObjectIdInfo(objectIdInfo);",
      "right" : "prop.setObjectIdInfo(objectIdInfo);",
      "info" : "ExpressionStatement[37597-37632]:ExpressionStatement[38003-38038]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[37651-37663]:ReturnStatement[38057-38069]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37794-37803]:Modifier[38200-38209]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[37804-37824]:SimpleType[38210-38230]"
    }, {
      "left" : "constructSetterlessProperty",
      "right" : "constructSetterlessProperty",
      "info" : "SimpleName[37825-37852]:SimpleName[38231-38258]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[37853-37880]:SingleVariableDeclaration[38259-38286]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[37894-37918]:SingleVariableDeclaration[38300-38324]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[37920-37950]:SingleVariableDeclaration[38326-38356]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[37967-37987]:SimpleType[38373-38393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37992-38705]:Block[38398-39111]"
    }, {
      "left" : "final AnnotatedMethod getter = propDef.getGetter();",
      "right" : "final AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[38002-38053]:VariableDeclarationStatement[38408-38459]"
    }, {
      "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
      "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
      "info" : "VariableDeclarationStatement[38062-38142]:VariableDeclarationStatement[38468-38548]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[38151-38202]:VariableDeclarationStatement[38557-38608]"
    }, {
      "left" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "right" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "info" : "VariableDeclarationStatement[38211-38344]:VariableDeclarationStatement[38617-38750]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
      "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
      "info" : "VariableDeclarationStatement[38353-38426]:VariableDeclarationStatement[38759-38832]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[38435-38509]:IfStatement[38841-38915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38454-38509]:Block[38860-38915]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[38468-38499]:ExpressionStatement[38874-38905]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[38518-38678]:IfStatement[38924-39084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38537-38678]:Block[38943-39084]"
    }, {
      "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[38551-38614]:ExpressionStatement[38957-39020]"
    }, {
      "left" : "prop = prop.withValueDeserializer(deser);",
      "right" : "prop = prop.withValueDeserializer(deser);",
      "info" : "ExpressionStatement[38627-38668]:ExpressionStatement[39033-39074]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[38687-38699]:ReturnStatement[39093-39105]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[39240-39249]:Modifier[39646-39655]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39250-39257]:PrimitiveType[39656-39663]"
    }, {
      "left" : "isPotentialBeanType",
      "right" : "isPotentialBeanType",
      "info" : "SimpleName[39258-39277]:SimpleName[39664-39683]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[39278-39291]:SingleVariableDeclaration[39684-39697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39297-40084]:Block[39703-40490]"
    }, {
      "left" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "right" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "info" : "VariableDeclarationStatement[39307-39355]:VariableDeclarationStatement[39713-39761]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[39364-39524]:IfStatement[39770-39930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39385-39524]:Block[39791-39930]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[39399-39514]:ThrowStatement[39805-39920]"
    }, {
      "left" : "if (ClassUtil.isProxyType(type))",
      "right" : "if (ClassUtil.isProxyType(type))",
      "info" : "IfStatement[39533-39689]:IfStatement[39939-40095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39566-39689]:Block[39972-40095]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "info" : "ThrowStatement[39580-39679]:ThrowStatement[39986-40085]"
    }, {
      "left" : "typeStr = ClassUtil.isLocalType(type, true);",
      "right" : "typeStr = ClassUtil.isLocalType(type, true);",
      "info" : "ExpressionStatement[39844-39888]:ExpressionStatement[40250-40294]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[39897-40057]:IfStatement[40303-40463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39918-40057]:Block[40324-40463]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[39932-40047]:ThrowStatement[40338-40453]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40066-40078]:ReturnStatement[40472-40484]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[40250-40259]:Modifier[40656-40665]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40260-40267]:PrimitiveType[40666-40673]"
    }, {
      "left" : "isIgnorableType",
      "right" : "isIgnorableType",
      "info" : "SimpleName[40268-40283]:SimpleName[40674-40689]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[40284-40312]:SingleVariableDeclaration[40690-40718]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[40314-40338]:SingleVariableDeclaration[40720-40744]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[40352-40365]:SingleVariableDeclaration[40758-40771]"
    }, {
      "left" : "Map<Class<?>,Boolean> ignoredTypes",
      "right" : "Map<Class<?>,Boolean> ignoredTypes",
      "info" : "SingleVariableDeclaration[40367-40401]:SingleVariableDeclaration[40773-40807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40407-41205]:Block[40813-41611]"
    }, {
      "left" : "Boolean status = ignoredTypes.get(type);",
      "right" : "Boolean status = ignoredTypes.get(type);",
      "info" : "VariableDeclarationStatement[40417-40457]:VariableDeclarationStatement[40823-40863]"
    }, {
      "left" : "if (status != null)",
      "right" : "if (status != null)",
      "info" : "IfStatement[40466-40539]:IfStatement[40872-40945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40486-40539]:Block[40892-40945]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[40500-40529]:ReturnStatement[40906-40935]"
    }, {
      "left" : "ConfigOverride override = config.findConfigOverride(type);",
      "right" : "ConfigOverride override = config.findConfigOverride(type);",
      "info" : "VariableDeclarationStatement[40616-40674]:VariableDeclarationStatement[41022-41080]"
    }, {
      "left" : "if (override != null)",
      "right" : "if (override != null)",
      "info" : "IfStatement[40683-40766]:IfStatement[41089-41172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40705-40766]:Block[41111-41172]"
    }, {
      "left" : "status = override.getIsIgnoredType();",
      "right" : "status = override.getIsIgnoredType();",
      "info" : "ExpressionStatement[40719-40756]:ExpressionStatement[41125-41162]"
    }, {
      "left" : "if (status == null)",
      "right" : "if (status == null)",
      "info" : "IfStatement[40775-41121]:IfStatement[41181-41527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40795-41121]:Block[41201-41527]"
    }, {
      "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "info" : "VariableDeclarationStatement[40809-40872]:VariableDeclarationStatement[41215-41278]"
    }, {
      "left" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "right" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "info" : "ExpressionStatement[40885-40966]:ExpressionStatement[41291-41372]"
    }, {
      "left" : "if (status == null)",
      "right" : "if (status == null)",
      "info" : "IfStatement[41036-41111]:IfStatement[41442-41517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41056-41111]:Block[41462-41517]"
    }, {
      "left" : "status = Boolean.FALSE;",
      "right" : "status = Boolean.FALSE;",
      "info" : "ExpressionStatement[41074-41097]:ExpressionStatement[41480-41503]"
    }, {
      "left" : "ignoredTypes.put(type, status);",
      "right" : "ignoredTypes.put(type, status);",
      "info" : "ExpressionStatement[41130-41161]:ExpressionStatement[41536-41567]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[41170-41199]:ReturnStatement[41576-41605]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[41247-41256]:Modifier[41653-41662]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41257-41261]:PrimitiveType[41663-41667]"
    }, {
      "left" : "checkIllegalTypes",
      "right" : "checkIllegalTypes",
      "info" : "SimpleName[41262-41279]:SimpleName[41668-41685]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[41280-41307]:SingleVariableDeclaration[41686-41713]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[41309-41322]:SingleVariableDeclaration[41715-41728]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[41336-41360]:SingleVariableDeclaration[41742-41766]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[41377-41397]:SimpleType[41783-41803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41402-41797]:Block[41808-42203]"
    }, {
      "left" : "String full = type.getRawClass().getName();",
      "right" : "String full = type.getRawClass().getName();",
      "info" : "VariableDeclarationStatement[41539-41582]:VariableDeclarationStatement[41945-41988]"
    }, {
      "left" : "if (_cfgIllegalClassNames.contains(full))",
      "right" : "if (_cfgIllegalClassNames.contains(full))",
      "info" : "IfStatement[41592-41791]:IfStatement[41998-42197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41634-41791]:Block[42040-42197]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"Illegal type (%s) to deserialize: prevented for security reasons\", full);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"Illegal type (%s) to deserialize: prevented for security reasons\", full);",
      "info" : "ExpressionStatement[41648-41781]:ExpressionStatement[42054-42187]"
    } ]
  },
  "interFileMappings" : { }
}