{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Frequency",
      "right" : "Frequency",
      "info" : "TypeDeclaration[1039-18690]:TypeDeclaration[1039-18687]"
    }, {
      "left" : "private static final long serialVersionUID = -3845586908418844111L;",
      "right" : "private static final long serialVersionUID = -3845586908418844111L;",
      "info" : "FieldDeclaration[2009-2119]:FieldDeclaration[2009-2119]"
    }, {
      "left" : "private final TreeMap<Comparable<?>, Long> freqTable;",
      "right" : "private final TreeMap<Comparable<?>, Long> freqTable;",
      "info" : "FieldDeclaration[2125-2211]:FieldDeclaration[2125-2211]"
    }, {
      "left" : "public Frequency()",
      "right" : "public Frequency()",
      "info" : "MethodDeclaration[2217-2343]:MethodDeclaration[2217-2343]"
    }, {
      "left" : "public Frequency(Comparator<?> comparator)",
      "right" : "public Frequency(Comparator<?> comparator)",
      "info" : "MethodDeclaration[2349-2679]:MethodDeclaration[2349-2679]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[2685-3592]:MethodDeclaration[2685-3592]"
    }, {
      "left" : "public void addValue(Object v)",
      "right" : "public void addValue(Object v)",
      "info" : "MethodDeclaration[3598-4392]:MethodDeclaration[3598-4392]"
    }, {
      "left" : "public void addValue(Comparable<?> v",
      "right" : "public void addValue(Comparable<?> v",
      "info" : "MethodDeclaration[4398-5504]:MethodDeclaration[4398-5504]"
    }, {
      "left" : "public void addValue(int v)",
      "right" : "public void addValue(int v)",
      "info" : "MethodDeclaration[5510-5681]:MethodDeclaration[5510-5681]"
    }, {
      "left" : "public void addValue(Integer v)",
      "right" : "public void addValue(Integer v)",
      "info" : "MethodDeclaration[5687-5919]:MethodDeclaration[5687-5919]"
    }, {
      "left" : "public void addValue(long v)",
      "right" : "public void addValue(long v)",
      "info" : "MethodDeclaration[5925-6097]:MethodDeclaration[5925-6097]"
    }, {
      "left" : "public void addValue(char v)",
      "right" : "public void addValue(char v)",
      "info" : "MethodDeclaration[6103-6280]:MethodDeclaration[6103-6280]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[6286-6378]:MethodDeclaration[6286-6378]"
    }, {
      "left" : "public Iterator<Comparable<?>> valuesIterator()",
      "right" : "public Iterator<Comparable<?>> valuesIterator()",
      "info" : "MethodDeclaration[6384-6838]:MethodDeclaration[6384-6838]"
    }, {
      "left" : "public long getSumFreq()",
      "right" : "public long getSumFreq()",
      "info" : "MethodDeclaration[6925-7277]:MethodDeclaration[6925-7277]"
    }, {
      "left" : "public long getCount(Object v)",
      "right" : "public long getCount(Object v)",
      "info" : "MethodDeclaration[7283-7637]:MethodDeclaration[7283-7637]"
    }, {
      "left" : "public long getCount(Comparable<?> v)",
      "right" : "public long getCount(Comparable<?> v)",
      "info" : "MethodDeclaration[7643-8323]:MethodDeclaration[7643-8323]"
    }, {
      "left" : "public long getCount(int v)",
      "right" : "public long getCount(int v)",
      "info" : "MethodDeclaration[8329-8542]:MethodDeclaration[8329-8542]"
    }, {
      "left" : "public long getCount(long v)",
      "right" : "public long getCount(long v)",
      "info" : "MethodDeclaration[8548-8762]:MethodDeclaration[8548-8762]"
    }, {
      "left" : "public long getCount(char v)",
      "right" : "public long getCount(char v)",
      "info" : "MethodDeclaration[8768-8987]:MethodDeclaration[8768-8987]"
    }, {
      "left" : "public double getPct(Object v)",
      "right" : "public double getPct(Object v)",
      "info" : "MethodDeclaration[9062-9527]:MethodDeclaration[9062-9524]"
    }, {
      "left" : "public double getPct(Comparable<?> v)",
      "right" : "public double getPct(Comparable<?> v)",
      "info" : "MethodDeclaration[9533-10042]:MethodDeclaration[9530-10039]"
    }, {
      "left" : "public double getPct(int v)",
      "right" : "public double getPct(int v)",
      "info" : "MethodDeclaration[10048-10335]:MethodDeclaration[10045-10332]"
    }, {
      "left" : "public double getPct(long v)",
      "right" : "public double getPct(long v)",
      "info" : "MethodDeclaration[10341-10629]:MethodDeclaration[10338-10626]"
    }, {
      "left" : "public double getPct(char v)",
      "right" : "public double getPct(char v)",
      "info" : "MethodDeclaration[10635-10928]:MethodDeclaration[10632-10925]"
    }, {
      "left" : "public long getCumFreq(Object v)",
      "right" : "public long getCumFreq(Object v)",
      "info" : "MethodDeclaration[11031-11466]:MethodDeclaration[11028-11463]"
    }, {
      "left" : "public long getCumFreq(Comparable<?> v)",
      "right" : "public long getCumFreq(Comparable<?> v)",
      "info" : "MethodDeclaration[11472-13059]:MethodDeclaration[11469-13056]"
    }, {
      "left" : "public long getCumFreq(int v)",
      "right" : "public long getCumFreq(int v)",
      "info" : "MethodDeclaration[13066-13406]:MethodDeclaration[13063-13403]"
    }, {
      "left" : "public long getCumFreq(long v)",
      "right" : "public long getCumFreq(long v)",
      "info" : "MethodDeclaration[13413-13754]:MethodDeclaration[13410-13751]"
    }, {
      "left" : "public long getCumFreq(char v)",
      "right" : "public long getCumFreq(char v)",
      "info" : "MethodDeclaration[13760-14106]:MethodDeclaration[13757-14103]"
    }, {
      "left" : "public double getCumPct(Object v)",
      "right" : "public double getCumPct(Object v)",
      "info" : "MethodDeclaration[14214-14818]:MethodDeclaration[14211-14815]"
    }, {
      "left" : "public double getCumPct(Comparable<?> v)",
      "right" : "public double getCumPct(Comparable<?> v)",
      "info" : "MethodDeclaration[14824-15471]:MethodDeclaration[14821-15468]"
    }, {
      "left" : "public double getCumPct(int v)",
      "right" : "public double getCumPct(int v)",
      "info" : "MethodDeclaration[15477-15872]:MethodDeclaration[15474-15869]"
    }, {
      "left" : "public double getCumPct(long v)",
      "right" : "public double getCumPct(long v)",
      "info" : "MethodDeclaration[15878-16274]:MethodDeclaration[15875-16271]"
    }, {
      "left" : "public double getCumPct(char v)",
      "right" : "public double getCumPct(char v)",
      "info" : "MethodDeclaration[16280-16681]:MethodDeclaration[16277-16678]"
    }, {
      "left" : "NaturalComparator",
      "right" : "NaturalComparator",
      "info" : "TypeDeclaration[16687-17932]:TypeDeclaration[16684-17929]"
    }, {
      "left" : "private static final long serialVersionUID = -3852193713161395148L;",
      "right" : "private static final long serialVersionUID = -3852193713161395148L;",
      "info" : "FieldDeclaration[16969-17083]:FieldDeclaration[16966-17080]"
    }, {
      "left" : "public int compare(Comparable<T> o1, Comparable<T> o2)",
      "right" : "public int compare(Comparable<T> o1, Comparable<T> o2)",
      "info" : "MethodDeclaration[17093-17926]:MethodDeclaration[17090-17923]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[17938-18184]:MethodDeclaration[17935-18181]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[18190-18687]:MethodDeclaration[18187-18684]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2280-2343]:Block[2280-2343]"
    }, {
      "left" : "freqTable = new TreeMap<Comparable<?>, Long>();",
      "right" : "freqTable = new TreeMap<Comparable<?>, Long>();",
      "info" : "ExpressionStatement[2290-2337]:ExpressionStatement[2290-2337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2570-2679]:Block[2570-2679]"
    }, {
      "left" : "freqTable = new TreeMap<Comparable<?>, Long>((Comparator<? super Comparable<?>>) comparator);",
      "right" : "freqTable = new TreeMap<Comparable<?>, Long>((Comparator<? super Comparable<?>>) comparator);",
      "info" : "ExpressionStatement[2580-2673]:ExpressionStatement[2580-2673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2864-3592]:Block[2864-3592]"
    }, {
      "left" : "NumberFormat nf = NumberFormat.getPercentInstance();",
      "right" : "NumberFormat nf = NumberFormat.getPercentInstance();",
      "info" : "VariableDeclarationStatement[2874-2926]:VariableDeclarationStatement[2874-2926]"
    }, {
      "left" : "StringBuffer outBuffer = new StringBuffer();",
      "right" : "StringBuffer outBuffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[2935-2979]:VariableDeclarationStatement[2935-2979]"
    }, {
      "left" : "outBuffer.append(\"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");",
      "right" : "outBuffer.append(\"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");",
      "info" : "ExpressionStatement[2988-3046]:ExpressionStatement[2988-3046]"
    }, {
      "left" : "Iterator<Comparable<?>> iter = freqTable.keySet().iterator();",
      "right" : "Iterator<Comparable<?>> iter = freqTable.keySet().iterator();",
      "info" : "VariableDeclarationStatement[3055-3116]:VariableDeclarationStatement[3055-3116]"
    }, {
      "left" : "while (iter.hasNext())",
      "right" : "while (iter.hasNext())",
      "info" : "WhileStatement[3125-3549]:WhileStatement[3125-3549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3148-3549]:Block[3148-3549]"
    }, {
      "left" : "Comparable<?> value = iter.next();",
      "right" : "Comparable<?> value = iter.next();",
      "info" : "VariableDeclarationStatement[3162-3196]:VariableDeclarationStatement[3162-3196]"
    }, {
      "left" : "outBuffer.append(value);",
      "right" : "outBuffer.append(value);",
      "info" : "ExpressionStatement[3209-3233]:ExpressionStatement[3209-3233]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3246-3269]:ExpressionStatement[3246-3269]"
    }, {
      "left" : "outBuffer.append(getCount(value));",
      "right" : "outBuffer.append(getCount(value));",
      "info" : "ExpressionStatement[3282-3316]:ExpressionStatement[3282-3316]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3329-3352]:ExpressionStatement[3329-3352]"
    }, {
      "left" : "outBuffer.append(nf.format(getPct(value)));",
      "right" : "outBuffer.append(nf.format(getPct(value)));",
      "info" : "ExpressionStatement[3365-3408]:ExpressionStatement[3365-3408]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3421-3444]:ExpressionStatement[3421-3444]"
    }, {
      "left" : "outBuffer.append(nf.format(getCumPct(value)));",
      "right" : "outBuffer.append(nf.format(getCumPct(value)));",
      "info" : "ExpressionStatement[3457-3503]:ExpressionStatement[3457-3503]"
    }, {
      "left" : "outBuffer.append('\\n');",
      "right" : "outBuffer.append('\\n');",
      "info" : "ExpressionStatement[3516-3539]:ExpressionStatement[3516-3539]"
    }, {
      "left" : "return outBuffer.toString();",
      "right" : "return outBuffer.toString();",
      "info" : "ReturnStatement[3558-3586]:ReturnStatement[3558-3586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4099-4392]:Block[4099-4392]"
    }, {
      "left" : "if (v instanceof Comparable<?>)",
      "right" : "if (v instanceof Comparable<?>)",
      "info" : "IfStatement[4109-4386]:IfStatement[4109-4386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4140-4192]:Block[4140-4192]"
    }, {
      "left" : "addValue((Comparable<?>) v);",
      "right" : "addValue((Comparable<?>) v);",
      "info" : "ExpressionStatement[4154-4182]:ExpressionStatement[4154-4182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4198-4386]:Block[4198-4386]"
    }, {
      "left" : "throw MathRuntimeException.createIllegalArgumentException(\n                  \"class ({0}) does not implement Comparable\",\n                  v.getClass().getName());",
      "right" : "throw MathRuntimeException.createIllegalArgumentException(\n                  \"class ({0}) does not implement Comparable\",\n                  v.getClass().getName());",
      "info" : "ThrowStatement[4212-4376]:ThrowStatement[4212-4376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4791-5504]:Block[4791-5504]"
    }, {
      "left" : "Comparable<?> obj = v;",
      "right" : "Comparable<?> obj = v;",
      "info" : "VariableDeclarationStatement[4801-4823]:VariableDeclarationStatement[4801-4823]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[4832-4927]:IfStatement[4832-4927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4858-4927]:Block[4858-4927]"
    }, {
      "left" : "obj = Long.valueOf(((Integer) v).longValue());",
      "right" : "obj = Long.valueOf(((Integer) v).longValue());",
      "info" : "ExpressionStatement[4871-4917]:ExpressionStatement[4871-4917]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4936-5498]:TryStatement[4936-5498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4940-5190]:Block[4940-5190]"
    }, {
      "left" : "Long count = freqTable.get(obj);",
      "right" : "Long count = freqTable.get(obj);",
      "info" : "VariableDeclarationStatement[4954-4986]:VariableDeclarationStatement[4954-4986]"
    }, {
      "left" : "if (count == null)",
      "right" : "if (count == null)",
      "info" : "IfStatement[4999-5180]:IfStatement[4999-5180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5018-5086]:Block[5018-5086]"
    }, {
      "left" : "freqTable.put(obj, Long.valueOf(1));",
      "right" : "freqTable.put(obj, Long.valueOf(1));",
      "info" : "ExpressionStatement[5036-5072]:ExpressionStatement[5036-5072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5092-5180]:Block[5092-5180]"
    }, {
      "left" : "freqTable.put(obj, Long.valueOf(count.longValue() + 1));",
      "right" : "freqTable.put(obj, Long.valueOf(count.longValue() + 1));",
      "info" : "ExpressionStatement[5110-5166]:ExpressionStatement[5110-5166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5221-5498]:Block[5221-5498]"
    }, {
      "left" : "throw MathRuntimeException.createIllegalArgumentException(\n                  \"instance of class {0} not comparable to existing values\",\n                  v.getClass().getName());",
      "right" : "throw MathRuntimeException.createIllegalArgumentException(\n                  \"instance of class {0} not comparable to existing values\",\n                  v.getClass().getName());",
      "info" : "ThrowStatement[5310-5488]:ThrowStatement[5310-5488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5639-5681]:Block[5639-5681]"
    }, {
      "left" : "addValue(Long.valueOf(v));",
      "right" : "addValue(Long.valueOf(v));",
      "info" : "ExpressionStatement[5649-5675]:ExpressionStatement[5649-5675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5865-5919]:Block[5865-5919]"
    }, {
      "left" : "addValue(Long.valueOf(v.longValue()));",
      "right" : "addValue(Long.valueOf(v.longValue()));",
      "info" : "ExpressionStatement[5875-5913]:ExpressionStatement[5875-5913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6055-6097]:Block[6055-6097]"
    }, {
      "left" : "addValue(Long.valueOf(v));",
      "right" : "addValue(Long.valueOf(v));",
      "info" : "ExpressionStatement[6065-6091]:ExpressionStatement[6065-6091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6233-6280]:Block[6233-6280]"
    }, {
      "left" : "addValue(Character.valueOf(v));",
      "right" : "addValue(Character.valueOf(v));",
      "info" : "ExpressionStatement[6243-6274]:ExpressionStatement[6243-6274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6344-6378]:Block[6344-6378]"
    }, {
      "left" : "freqTable.clear();",
      "right" : "freqTable.clear();",
      "info" : "ExpressionStatement[6354-6372]:ExpressionStatement[6354-6372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6785-6838]:Block[6785-6838]"
    }, {
      "left" : "return freqTable.keySet().iterator();",
      "right" : "return freqTable.keySet().iterator();",
      "info" : "ReturnStatement[6795-6832]:ReturnStatement[6795-6832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7058-7277]:Block[7058-7277]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[7068-7084]:VariableDeclarationStatement[7068-7084]"
    }, {
      "left" : "Iterator<Long> iterator = freqTable.values().iterator();",
      "right" : "Iterator<Long> iterator = freqTable.values().iterator();",
      "info" : "VariableDeclarationStatement[7093-7149]:VariableDeclarationStatement[7093-7149]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[7158-7248]:WhileStatement[7158-7248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7186-7248]:Block[7186-7248]"
    }, {
      "left" : "result += iterator.next().longValue();",
      "right" : "result += iterator.next().longValue();",
      "info" : "ExpressionStatement[7200-7238]:ExpressionStatement[7200-7238]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7257-7271]:ReturnStatement[7257-7271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7586-7637]:Block[7586-7637]"
    }, {
      "left" : "return getCount((Comparable<?>) v);",
      "right" : "return getCount((Comparable<?>) v);",
      "info" : "ReturnStatement[7596-7631]:ReturnStatement[7596-7631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7866-8323]:Block[7866-8323]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[7876-7969]:IfStatement[7876-7969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7902-7969]:Block[7902-7969]"
    }, {
      "left" : "return getCount(((Integer) v).longValue());",
      "right" : "return getCount(((Integer) v).longValue());",
      "info" : "ReturnStatement[7916-7959]:ReturnStatement[7916-7959]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[7978-7994]:VariableDeclarationStatement[7978-7994]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8003-8294]:TryStatement[8003-8294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8007-8153]:Block[8007-8153]"
    }, {
      "left" : "Long count =  freqTable.get(v);",
      "right" : "Long count =  freqTable.get(v);",
      "info" : "VariableDeclarationStatement[8021-8052]:VariableDeclarationStatement[8021-8052]"
    }, {
      "left" : "if (count != null)",
      "right" : "if (count != null)",
      "info" : "IfStatement[8065-8143]:IfStatement[8065-8143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8084-8143]:Block[8084-8143]"
    }, {
      "left" : "result = count.longValue();",
      "right" : "result = count.longValue();",
      "info" : "ExpressionStatement[8102-8129]:ExpressionStatement[8102-8129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8184-8294]:Block[8184-8294]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[8303-8317]:ReturnStatement[8303-8317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8493-8542]:Block[8493-8542]"
    }, {
      "left" : "return getCount(Long.valueOf(v));",
      "right" : "return getCount(Long.valueOf(v));",
      "info" : "ReturnStatement[8503-8536]:ReturnStatement[8503-8536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8713-8762]:Block[8713-8762]"
    }, {
      "left" : "return getCount(Long.valueOf(v));",
      "right" : "return getCount(Long.valueOf(v));",
      "info" : "ReturnStatement[8723-8756]:ReturnStatement[8723-8756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8933-8987]:Block[8933-8987]"
    }, {
      "left" : "return getCount(Character.valueOf(v));",
      "right" : "return getCount(Character.valueOf(v));",
      "info" : "ReturnStatement[8943-8981]:ReturnStatement[8943-8981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9475-9527]:Block[9475-9524]"
    }, {
      "left" : "return getCumPct((Comparable<?>) v);",
      "right" : "return getPct((Comparable<?>) v);",
      "info" : "ReturnStatement[9485-9521]:ReturnStatement[9485-9518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9867-10042]:Block[9864-10039]"
    }, {
      "left" : "final long sumFreq = getSumFreq();",
      "right" : "final long sumFreq = getSumFreq();",
      "info" : "VariableDeclarationStatement[9877-9911]:VariableDeclarationStatement[9874-9908]"
    }, {
      "left" : "if (sumFreq == 0)",
      "right" : "if (sumFreq == 0)",
      "info" : "IfStatement[9920-9980]:IfStatement[9917-9977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9938-9980]:Block[9935-9977]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[9952-9970]:ReturnStatement[9949-9967]"
    }, {
      "left" : "return (double) getCount(v) / (double) sumFreq;",
      "right" : "return (double) getCount(v) / (double) sumFreq;",
      "info" : "ReturnStatement[9989-10036]:ReturnStatement[9986-10033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10288-10335]:Block[10285-10332]"
    }, {
      "left" : "return getPct(Long.valueOf(v));",
      "right" : "return getPct(Long.valueOf(v));",
      "info" : "ReturnStatement[10298-10329]:ReturnStatement[10295-10326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10582-10629]:Block[10579-10626]"
    }, {
      "left" : "return getPct(Long.valueOf(v));",
      "right" : "return getPct(Long.valueOf(v));",
      "info" : "ReturnStatement[10592-10623]:ReturnStatement[10589-10620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10876-10928]:Block[10873-10925]"
    }, {
      "left" : "return getPct(Character.valueOf(v));",
      "right" : "return getPct(Character.valueOf(v));",
      "info" : "ReturnStatement[10886-10922]:ReturnStatement[10883-10919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11413-11466]:Block[11410-11463]"
    }, {
      "left" : "return getCumFreq((Comparable<?>) v);",
      "right" : "return getCumFreq((Comparable<?>) v);",
      "info" : "ReturnStatement[11423-11460]:ReturnStatement[11420-11457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11811-13059]:Block[11808-13056]"
    }, {
      "left" : "if (getSumFreq() == 0)",
      "right" : "if (getSumFreq() == 0)",
      "info" : "IfStatement[11821-11877]:IfStatement[11818-11874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11844-11877]:Block[11841-11874]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[11858-11867]:ReturnStatement[11855-11864]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[11886-11981]:IfStatement[11883-11978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11912-11981]:Block[11909-11978]"
    }, {
      "left" : "return getCumFreq(((Integer) v).longValue());",
      "right" : "return getCumFreq(((Integer) v).longValue());",
      "info" : "ReturnStatement[11926-11971]:ReturnStatement[11923-11968]"
    }, {
      "left" : "Comparator<Comparable<?>> c = (Comparator<Comparable<?>>) freqTable.comparator();",
      "right" : "Comparator<Comparable<?>> c = (Comparator<Comparable<?>>) freqTable.comparator();",
      "info" : "VariableDeclarationStatement[11990-12071]:VariableDeclarationStatement[11987-12068]"
    }, {
      "left" : "if (c == null)",
      "right" : "if (c == null)",
      "info" : "IfStatement[12080-12147]:IfStatement[12077-12144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12095-12147]:Block[12092-12144]"
    }, {
      "left" : "c = new NaturalComparator();",
      "right" : "c = new NaturalComparator();",
      "info" : "ExpressionStatement[12109-12137]:ExpressionStatement[12106-12134]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[12156-12172]:VariableDeclarationStatement[12153-12169]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[12182-12425]:TryStatement[12179-12422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12186-12331]:Block[12183-12328]"
    }, {
      "left" : "Long value = freqTable.get(v);",
      "right" : "Long value = freqTable.get(v);",
      "info" : "VariableDeclarationStatement[12200-12230]:VariableDeclarationStatement[12197-12227]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[12243-12321]:IfStatement[12240-12318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12262-12321]:Block[12259-12318]"
    }, {
      "left" : "result = value.longValue();",
      "right" : "result = value.longValue();",
      "info" : "ExpressionStatement[12280-12307]:ExpressionStatement[12277-12304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12362-12425]:Block[12359-12422]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[12376-12390]:ReturnStatement[12373-12387]"
    }, {
      "left" : "if (c.compare(v, freqTable.firstKey()) < 0)",
      "right" : "if (c.compare(v, freqTable.firstKey()) < 0)",
      "info" : "IfStatement[12435-12559]:IfStatement[12432-12556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12479-12559]:Block[12476-12556]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[12493-12502]:ReturnStatement[12490-12499]"
    }, {
      "left" : "if (c.compare(v, freqTable.lastKey()) >= 0)",
      "right" : "if (c.compare(v, freqTable.lastKey()) >= 0)",
      "info" : "IfStatement[12569-12712]:IfStatement[12566-12709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12613-12712]:Block[12610-12709]"
    }, {
      "left" : "return getSumFreq();",
      "right" : "return getSumFreq();",
      "info" : "ReturnStatement[12627-12647]:ReturnStatement[12624-12644]"
    }, {
      "left" : "Iterator<Comparable<?>> values = valuesIterator();",
      "right" : "Iterator<Comparable<?>> values = valuesIterator();",
      "info" : "VariableDeclarationStatement[12722-12772]:VariableDeclarationStatement[12719-12769]"
    }, {
      "left" : "while (values.hasNext())",
      "right" : "while (values.hasNext())",
      "info" : "WhileStatement[12781-13030]:WhileStatement[12778-13027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12806-13030]:Block[12803-13027]"
    }, {
      "left" : "Comparable<?> nextValue = values.next();",
      "right" : "Comparable<?> nextValue = values.next();",
      "info" : "VariableDeclarationStatement[12820-12860]:VariableDeclarationStatement[12817-12857]"
    }, {
      "left" : "if (c.compare(v, nextValue) > 0)",
      "right" : "if (c.compare(v, nextValue) > 0)",
      "info" : "IfStatement[12873-13020]:IfStatement[12870-13017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12906-12968]:Block[12903-12965]"
    }, {
      "left" : "result += getCount(nextValue);",
      "right" : "result += getCount(nextValue);",
      "info" : "ExpressionStatement[12924-12954]:ExpressionStatement[12921-12951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12974-13020]:Block[12971-13017]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[12992-13006]:ReturnStatement[12989-13003]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[13039-13053]:ReturnStatement[13036-13050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13355-13406]:Block[13352-13403]"
    }, {
      "left" : "return getCumFreq(Long.valueOf(v));",
      "right" : "return getCumFreq(Long.valueOf(v));",
      "info" : "ReturnStatement[13365-13400]:ReturnStatement[13362-13397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13703-13754]:Block[13700-13751]"
    }, {
      "left" : "return getCumFreq(Long.valueOf(v));",
      "right" : "return getCumFreq(Long.valueOf(v));",
      "info" : "ReturnStatement[13713-13748]:ReturnStatement[13710-13745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14050-14106]:Block[14047-14103]"
    }, {
      "left" : "return getCumFreq(Character.valueOf(v));",
      "right" : "return getCumFreq(Character.valueOf(v));",
      "info" : "ReturnStatement[14060-14100]:ReturnStatement[14057-14097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14765-14818]:Block[14762-14815]"
    }, {
      "left" : "return getCumPct((Comparable<?>) v);",
      "right" : "return getCumPct((Comparable<?>) v);",
      "info" : "ReturnStatement[14775-14811]:ReturnStatement[14772-14808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15294-15471]:Block[15291-15468]"
    }, {
      "left" : "final long sumFreq = getSumFreq();",
      "right" : "final long sumFreq = getSumFreq();",
      "info" : "VariableDeclarationStatement[15304-15338]:VariableDeclarationStatement[15301-15335]"
    }, {
      "left" : "if (sumFreq == 0)",
      "right" : "if (sumFreq == 0)",
      "info" : "IfStatement[15347-15407]:IfStatement[15344-15404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15365-15407]:Block[15362-15404]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[15379-15397]:ReturnStatement[15376-15394]"
    }, {
      "left" : "return (double) getCumFreq(v) / (double) sumFreq;",
      "right" : "return (double) getCumFreq(v) / (double) sumFreq;",
      "info" : "ReturnStatement[15416-15465]:ReturnStatement[15413-15462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15822-15872]:Block[15819-15869]"
    }, {
      "left" : "return getCumPct(Long.valueOf(v));",
      "right" : "return getCumPct(Long.valueOf(v));",
      "info" : "ReturnStatement[15832-15866]:ReturnStatement[15829-15863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16224-16274]:Block[16221-16271]"
    }, {
      "left" : "return getCumPct(Long.valueOf(v));",
      "right" : "return getCumPct(Long.valueOf(v));",
      "info" : "ReturnStatement[16234-16268]:ReturnStatement[16231-16265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16626-16681]:Block[16623-16678]"
    }, {
      "left" : "return getCumPct(Character.valueOf(v));",
      "right" : "return getCumPct(Character.valueOf(v));",
      "info" : "ReturnStatement[16636-16675]:ReturnStatement[16633-16672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17874-17926]:Block[17871-17923]"
    }, {
      "left" : "return o1.compareTo((T) o2);",
      "right" : "return o1.compareTo((T) o2);",
      "info" : "ReturnStatement[17888-17916]:ReturnStatement[17885-17913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17999-18184]:Block[17996-18181]"
    }, {
      "left" : "final int prime = 31;",
      "right" : "final int prime = 31;",
      "info" : "VariableDeclarationStatement[18009-18030]:VariableDeclarationStatement[18006-18027]"
    }, {
      "left" : "int result = 1;",
      "right" : "int result = 1;",
      "info" : "VariableDeclarationStatement[18039-18054]:VariableDeclarationStatement[18036-18051]"
    }, {
      "left" : "result = prime * result +\n                 ((freqTable == null) ? 0 : freqTable.hashCode());",
      "right" : "result = prime * result +\n                 ((freqTable == null) ? 0 : freqTable.hashCode());",
      "info" : "ExpressionStatement[18063-18155]:ExpressionStatement[18060-18152]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[18164-18178]:ReturnStatement[18161-18175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18263-18687]:Block[18260-18684]"
    }, {
      "left" : "if (this == obj)",
      "right" : "if (this == obj)",
      "info" : "IfStatement[18273-18314]:IfStatement[18270-18311]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[18302-18314]:ReturnStatement[18299-18311]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[18323-18365]:IfStatement[18320-18362]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18352-18365]:ReturnStatement[18349-18362]"
    }, {
      "left" : "if (!(obj instanceof Frequency))",
      "right" : "if (!(obj instanceof Frequency))",
      "info" : "IfStatement[18374-18432]:IfStatement[18371-18429]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18419-18432]:ReturnStatement[18416-18429]"
    }, {
      "left" : "Frequency other = (Frequency) obj;",
      "right" : "Frequency other = (Frequency) obj;",
      "info" : "VariableDeclarationStatement[18441-18475]:VariableDeclarationStatement[18438-18472]"
    }, {
      "left" : "if (freqTable == null)",
      "right" : "if (freqTable == null)",
      "info" : "IfStatement[18484-18660]:IfStatement[18481-18657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18507-18589]:Block[18504-18586]"
    }, {
      "left" : "if (other.freqTable != null)",
      "right" : "if (other.freqTable != null)",
      "info" : "IfStatement[18521-18579]:IfStatement[18518-18576]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18566-18579]:ReturnStatement[18563-18576]"
    }, {
      "left" : "if (!freqTable.equals(other.freqTable))",
      "right" : "if (!freqTable.equals(other.freqTable))",
      "info" : "IfStatement[18595-18660]:IfStatement[18592-18657]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18647-18660]:ReturnStatement[18644-18657]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[18669-18681]:ReturnStatement[18666-18678]"
    } ]
  },
  "interFileMappings" : { }
}