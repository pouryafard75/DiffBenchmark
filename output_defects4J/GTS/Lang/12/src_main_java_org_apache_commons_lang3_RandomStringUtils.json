{
  "matchedElements" : [
 {
    "left" : "class : RandomStringUtils",
    "right" : "class : RandomStringUtils",
    "info" : "TypeDeclaration[866-12422]:TypeDeclaration[866-12671]"
  }, {
    "left" : "RANDOM",
    "right" : "RANDOM",
    "info" : "FieldDeclaration[1532-1770]:FieldDeclaration[1532-1770]"
  }, {
    "left" : "public RandomStringUtils()",
    "right" : "public RandomStringUtils()",
    "info" : "MethodDeclaration[1776-2147]:MethodDeclaration[1776-2147]"
  }, {
    "left" : "public random(count int) : ",
    "right" : "public random(count int) : ",
    "info" : "MethodDeclaration[2245-2626]:MethodDeclaration[2245-2626]"
  }, {
    "left" : "public randomAscii(count int) : ",
    "right" : "public randomAscii(count int) : ",
    "info" : "MethodDeclaration[2632-3098]:MethodDeclaration[2632-3098]"
  }, {
    "left" : "public randomAlphabetic(count int) : ",
    "right" : "public randomAlphabetic(count int) : ",
    "info" : "MethodDeclaration[3108-3512]:MethodDeclaration[3108-3512]"
  }, {
    "left" : "public randomAlphanumeric(count int) : ",
    "right" : "public randomAlphanumeric(count int) : ",
    "info" : "MethodDeclaration[3522-3930]:MethodDeclaration[3522-3930]"
  }, {
    "left" : "public randomNumeric(count int) : ",
    "right" : "public randomNumeric(count int) : ",
    "info" : "MethodDeclaration[3940-4338]:MethodDeclaration[3940-4338]"
  }, {
    "left" : "public random(count int, letters boolean, numbers boolean) : ",
    "right" : "public random(count int, letters boolean, numbers boolean) : ",
    "info" : "MethodDeclaration[4344-5013]:MethodDeclaration[4344-5013]"
  }, {
    "left" : "public random(count int, start int, end int, letters boolean, numbers boolean) : ",
    "right" : "public random(count int, start int, end int, letters boolean, numbers boolean) : ",
    "info" : "MethodDeclaration[5023-5856]:MethodDeclaration[5023-5856]"
  }, {
    "left" : "public random(count int, start int, end int, letters boolean, numbers boolean, ) : ",
    "right" : "public random(count int, start int, end int, letters boolean, numbers boolean, ) : ",
    "info" : "MethodDeclaration[5862-7008]:MethodDeclaration[5862-7008]"
  }, {
    "left" : "public random(count int, start int, end int, letters boolean, numbers boolean, chars , random ) : ",
    "right" : "public random(count int, start int, end int, letters boolean, numbers boolean, chars , random ) : ",
    "info" : "MethodDeclaration[7014-10884]:MethodDeclaration[7014-11133]"
  }, {
    "left" : "public random(count int, chars ...) : ",
    "right" : "public random(count int, chars ...) : ",
    "info" : "MethodDeclaration[10890-11701]:MethodDeclaration[11139-11950]"
  }, {
    "left" : "public random(count int, ) : ",
    "right" : "public random(count int, ) : ",
    "info" : "MethodDeclaration[11707-12415]:MethodDeclaration[11956-12664]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1494-1500]:Modifier[1494-1500]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1501-1506]:TYPE_DECLARATION_KIND[1501-1506]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2098-2104]:Modifier[2098-2104]"
  }, {
    "left" : "RandomStringUtils",
    "right" : "RandomStringUtils",
    "info" : "SimpleName[2105-2122]:SimpleName[2105-2122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2125-2147]:Block[2125-2147]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[2133-2141]:SuperConstructorInvocation[2133-2141]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2536-2542]:Modifier[2536-2542]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2543-2549]:Modifier[2543-2549]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[2550-2556]:SimpleType[2550-2556]"
  }, {
    "left" : "random",
    "right" : "random",
    "info" : "SimpleName[2557-2563]:SimpleName[2557-2563]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[2564-2573]:SingleVariableDeclaration[2564-2573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2575-2626]:Block[2575-2626]"
  }, {
    "left" : "return random(count, false, false);",
    "right" : "return random(count, false, false);",
    "info" : "ReturnStatement[2585-2620]:ReturnStatement[2585-2620]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2994-3000]:Modifier[2994-3000]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3001-3007]:Modifier[3001-3007]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3008-3014]:SimpleType[3008-3014]"
  }, {
    "left" : "randomAscii",
    "right" : "randomAscii",
    "info" : "SimpleName[3015-3026]:SimpleName[3015-3026]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[3027-3036]:SingleVariableDeclaration[3027-3036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3038-3098]:Block[3038-3098]"
  }, {
    "left" : "return random(count, 32, 127, false, false);",
    "right" : "return random(count, 32, 127, false, false);",
    "info" : "ReturnStatement[3048-3092]:ReturnStatement[3048-3092]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3413-3419]:Modifier[3413-3419]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3420-3426]:Modifier[3420-3426]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3427-3433]:SimpleType[3427-3433]"
  }, {
    "left" : "randomAlphabetic",
    "right" : "randomAlphabetic",
    "info" : "SimpleName[3434-3450]:SimpleName[3434-3450]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[3451-3460]:SingleVariableDeclaration[3451-3460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3462-3512]:Block[3462-3512]"
  }, {
    "left" : "return random(count, true, false);",
    "right" : "return random(count, true, false);",
    "info" : "ReturnStatement[3472-3506]:ReturnStatement[3472-3506]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3830-3836]:Modifier[3830-3836]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3837-3843]:Modifier[3837-3843]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3844-3850]:SimpleType[3844-3850]"
  }, {
    "left" : "randomAlphanumeric",
    "right" : "randomAlphanumeric",
    "info" : "SimpleName[3851-3869]:SimpleName[3851-3869]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[3870-3879]:SingleVariableDeclaration[3870-3879]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3881-3930]:Block[3881-3930]"
  }, {
    "left" : "return random(count, true, true);",
    "right" : "return random(count, true, true);",
    "info" : "ReturnStatement[3891-3924]:ReturnStatement[3891-3924]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4242-4248]:Modifier[4242-4248]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4249-4255]:Modifier[4249-4255]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4256-4262]:SimpleType[4256-4262]"
  }, {
    "left" : "randomNumeric",
    "right" : "randomNumeric",
    "info" : "SimpleName[4263-4276]:SimpleName[4263-4276]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[4277-4286]:SingleVariableDeclaration[4277-4286]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4288-4338]:Block[4288-4338]"
  }, {
    "left" : "return random(count, false, true);",
    "right" : "return random(count, false, true);",
    "info" : "ReturnStatement[4298-4332]:ReturnStatement[4298-4332]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4879-4885]:Modifier[4879-4885]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4886-4892]:Modifier[4886-4892]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4893-4899]:SimpleType[4893-4899]"
  }, {
    "left" : "random",
    "right" : "random",
    "info" : "SimpleName[4900-4906]:SimpleName[4900-4906]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[4907-4916]:SingleVariableDeclaration[4907-4916]"
  }, {
    "left" : "boolean letters",
    "right" : "boolean letters",
    "info" : "SingleVariableDeclaration[4918-4933]:SingleVariableDeclaration[4918-4933]"
  }, {
    "left" : "boolean numbers",
    "right" : "boolean numbers",
    "info" : "SingleVariableDeclaration[4935-4950]:SingleVariableDeclaration[4935-4950]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4952-5013]:Block[4952-5013]"
  }, {
    "left" : "return random(count, 0, 0, letters, numbers);",
    "right" : "return random(count, 0, 0, letters, numbers);",
    "info" : "ReturnStatement[4962-5007]:ReturnStatement[4962-5007]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5682-5688]:Modifier[5682-5688]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5689-5695]:Modifier[5689-5695]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[5696-5702]:SimpleType[5696-5702]"
  }, {
    "left" : "random",
    "right" : "random",
    "info" : "SimpleName[5703-5709]:SimpleName[5703-5709]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[5710-5719]:SingleVariableDeclaration[5710-5719]"
  }, {
    "left" : "int start",
    "right" : "int start",
    "info" : "SingleVariableDeclaration[5721-5730]:SingleVariableDeclaration[5721-5730]"
  }, {
    "left" : "int end",
    "right" : "int end",
    "info" : "SingleVariableDeclaration[5732-5739]:SingleVariableDeclaration[5732-5739]"
  }, {
    "left" : "boolean letters",
    "right" : "boolean letters",
    "info" : "SingleVariableDeclaration[5741-5756]:SingleVariableDeclaration[5741-5756]"
  }, {
    "left" : "boolean numbers",
    "right" : "boolean numbers",
    "info" : "SingleVariableDeclaration[5758-5773]:SingleVariableDeclaration[5758-5773]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5775-5856]:Block[5775-5856]"
  }, {
    "left" : "return random(count, start, end, letters, numbers, null, RANDOM);",
    "right" : "return random(count, start, end, letters, numbers, null, RANDOM);",
    "info" : "ReturnStatement[5785-5850]:ReturnStatement[5785-5850]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6818-6824]:Modifier[6818-6824]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6825-6831]:Modifier[6825-6831]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6832-6838]:SimpleType[6832-6838]"
  }, {
    "left" : "random",
    "right" : "random",
    "info" : "SimpleName[6839-6845]:SimpleName[6839-6845]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[6846-6855]:SingleVariableDeclaration[6846-6855]"
  }, {
    "left" : "int start",
    "right" : "int start",
    "info" : "SingleVariableDeclaration[6857-6866]:SingleVariableDeclaration[6857-6866]"
  }, {
    "left" : "int end",
    "right" : "int end",
    "info" : "SingleVariableDeclaration[6868-6875]:SingleVariableDeclaration[6868-6875]"
  }, {
    "left" : "boolean letters",
    "right" : "boolean letters",
    "info" : "SingleVariableDeclaration[6877-6892]:SingleVariableDeclaration[6877-6892]"
  }, {
    "left" : "boolean numbers",
    "right" : "boolean numbers",
    "info" : "SingleVariableDeclaration[6894-6909]:SingleVariableDeclaration[6894-6909]"
  }, {
    "left" : "char... chars",
    "right" : "char... chars",
    "info" : "SingleVariableDeclaration[6911-6924]:SingleVariableDeclaration[6911-6924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6926-7008]:Block[6926-7008]"
  }, {
    "left" : "return random(count, start, end, letters, numbers, chars, RANDOM);",
    "right" : "return random(count, start, end, letters, numbers, chars, RANDOM);",
    "info" : "ReturnStatement[6936-7002]:ReturnStatement[6936-7002]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8619-8625]:Modifier[8619-8625]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8626-8632]:Modifier[8626-8632]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[8633-8639]:SimpleType[8633-8639]"
  }, {
    "left" : "random",
    "right" : "random",
    "info" : "SimpleName[8640-8646]:SimpleName[8640-8646]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[8647-8656]:SingleVariableDeclaration[8647-8656]"
  }, {
    "left" : "int start",
    "right" : "int start",
    "info" : "SingleVariableDeclaration[8658-8667]:SingleVariableDeclaration[8658-8667]"
  }, {
    "left" : "int end",
    "right" : "int end",
    "info" : "SingleVariableDeclaration[8669-8676]:SingleVariableDeclaration[8669-8676]"
  }, {
    "left" : "boolean letters",
    "right" : "boolean letters",
    "info" : "SingleVariableDeclaration[8678-8693]:SingleVariableDeclaration[8678-8693]"
  }, {
    "left" : "boolean numbers",
    "right" : "boolean numbers",
    "info" : "SingleVariableDeclaration[8695-8710]:SingleVariableDeclaration[8695-8710]"
  }, {
    "left" : "char[] chars",
    "right" : "char[] chars",
    "info" : "SingleVariableDeclaration[8744-8756]:SingleVariableDeclaration[8744-8756]"
  }, {
    "left" : "Random random",
    "right" : "Random random",
    "info" : "SingleVariableDeclaration[8758-8771]:SingleVariableDeclaration[8758-8771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8773-10884]:Block[8773-11133]"
  }, {
    "left" : "if (count == 0)",
    "right" : "if (count == 0)",
    "info" : "IfStatement[8783-8977]:IfStatement[8783-8977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8799-8833]:Block[8799-8833]"
  }, {
    "left" : "return \"\";",
    "right" : "return \"\";",
    "info" : "ReturnStatement[8813-8823]:ReturnStatement[8813-8823]"
  }, {
    "left" : "if (count < 0)",
    "right" : "if (count < 0)",
    "info" : "IfStatement[8839-8977]:IfStatement[8839-8977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8854-8977]:Block[8854-8977]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");",
    "right" : "throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");",
    "info" : "ThrowStatement[8868-8967]:ThrowStatement[8868-8967]"
  }, {
    "left" : "if (start == 0 && end == 0)",
    "right" : "if (start == 0 && end == 0)",
    "info" : "IfStatement[8987-9242]:IfStatement[9132-9491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9015-9242]:Block[9250-9481]"
  }, {
    "left" : "if (!letters && !numbers)",
    "right" : "if (!letters && !numbers)",
    "info" : "IfStatement[9033-9232]:IfStatement[9268-9467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9059-9123]:Block[9294-9358]"
  }, {
    "left" : "end = Integer.MAX_VALUE;",
    "right" : "end = Integer.MAX_VALUE;",
    "info" : "ExpressionStatement[9081-9105]:ExpressionStatement[9316-9340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9129-9232]:Block[9364-9467]"
  }, {
    "left" : "end = 'z' + 1;",
    "right" : "end = 'z' + 1;",
    "info" : "ExpressionStatement[9151-9165]:ExpressionStatement[9386-9400]"
  }, {
    "left" : "start = ' ';",
    "right" : "start = ' ';",
    "info" : "ExpressionStatement[9186-9198]:ExpressionStatement[9421-9433]"
  }, {
    "left" : "char[] buffer = new char[count];",
    "right" : "char[] buffer = new char[count];",
    "info" : "VariableDeclarationStatement[9252-9284]:VariableDeclarationStatement[9501-9533]"
  }, {
    "left" : "int gap = end - start;",
    "right" : "int gap = end - start;",
    "info" : "VariableDeclarationStatement[9293-9315]:VariableDeclarationStatement[9542-9564]"
  }, {
    "left" : "while (count-- != 0)",
    "right" : "while (count-- != 0)",
    "info" : "WhileStatement[9325-10843]:WhileStatement[9574-11092]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9346-10843]:Block[9595-11092]"
  }, {
    "left" : "char ch;",
    "right" : "char ch;",
    "info" : "VariableDeclarationStatement[9360-9368]:VariableDeclarationStatement[9609-9617]"
  }, {
    "left" : "if (chars == null)",
    "right" : "if (chars == null)",
    "info" : "IfStatement[9381-9552]:IfStatement[9630-9801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9400-9474]:Block[9649-9723]"
  }, {
    "left" : "ch = (char) (random.nextInt(gap) + start);",
    "right" : "ch = (char) (random.nextInt(gap) + start);",
    "info" : "ExpressionStatement[9418-9460]:ExpressionStatement[9667-9709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9480-9552]:Block[9729-9801]"
  }, {
    "left" : "ch = chars[random.nextInt(gap) + start];",
    "right" : "ch = chars[random.nextInt(gap) + start];",
    "info" : "ExpressionStatement[9498-9538]:ExpressionStatement[9747-9787]"
  }, {
    "left" : "if (letters && Character.isLetter(ch)\n                    || numbers && Character.isDigit(ch)\n                    || !letters && !numbers)",
    "right" : "if (letters && Character.isLetter(ch)\n                    || numbers && Character.isDigit(ch)\n                    || !letters && !numbers)",
    "info" : "IfStatement[9565-10833]:IfStatement[9814-11082]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9704-10787]:Block[9953-11036]"
  }, {
    "left" : "if(ch >= 56320 && ch <= 57343)",
    "right" : "if(ch >= 56320 && ch <= 57343)",
    "info" : "IfStatement[9722-10773]:IfStatement[9971-11022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9753-10132]:Block[10002-10381]"
  }, {
    "left" : "if(count == 0)",
    "right" : "if(count == 0)",
    "info" : "IfStatement[9775-10114]:IfStatement[10024-10363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9790-9846]:Block[10039-10095]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[9816-9824]:ExpressionStatement[10065-10073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9852-10114]:Block[10101-10363]"
  }, {
    "left" : "buffer[count] = ch;",
    "right" : "buffer[count] = ch;",
    "info" : "ExpressionStatement[9962-9981]:ExpressionStatement[10211-10230]"
  }, {
    "left" : "count--;",
    "right" : "count--;",
    "info" : "ExpressionStatement[10006-10014]:ExpressionStatement[10255-10263]"
  }, {
    "left" : "buffer[count] = (char) (55296 + random.nextInt(128));",
    "right" : "buffer[count] = (char) (55296 + random.nextInt(128));",
    "info" : "ExpressionStatement[10039-10092]:ExpressionStatement[10288-10341]"
  }, {
    "left" : "if(ch >= 55296 && ch <= 56191)",
    "right" : "if(ch >= 55296 && ch <= 56191)",
    "info" : "IfStatement[10138-10773]:IfStatement[10387-11022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10169-10549]:Block[10418-10798]"
  }, {
    "left" : "if(count == 0)",
    "right" : "if(count == 0)",
    "info" : "IfStatement[10191-10531]:IfStatement[10440-10780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10206-10262]:Block[10455-10511]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[10232-10240]:ExpressionStatement[10481-10489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10268-10531]:Block[10517-10780]"
  }, {
    "left" : "buffer[count] = (char) (56320 + random.nextInt(128));",
    "right" : "buffer[count] = (char) (56320 + random.nextInt(128));",
    "info" : "ExpressionStatement[10379-10432]:ExpressionStatement[10628-10681]"
  }, {
    "left" : "count--;",
    "right" : "count--;",
    "info" : "ExpressionStatement[10457-10465]:ExpressionStatement[10706-10714]"
  }, {
    "left" : "buffer[count] = ch;",
    "right" : "buffer[count] = ch;",
    "info" : "ExpressionStatement[10490-10509]:ExpressionStatement[10739-10758]"
  }, {
    "left" : "if(ch >= 56192 && ch <= 56319)",
    "right" : "if(ch >= 56192 && ch <= 56319)",
    "info" : "IfStatement[10555-10773]:IfStatement[10804-11022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10586-10708]:Block[10835-10957]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[10682-10690]:ExpressionStatement[10931-10939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10714-10773]:Block[10963-11022]"
  }, {
    "left" : "buffer[count] = ch;",
    "right" : "buffer[count] = ch;",
    "info" : "ExpressionStatement[10736-10755]:ExpressionStatement[10985-11004]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10793-10833]:Block[11042-11082]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[10811-10819]:ExpressionStatement[11060-11068]"
  }, {
    "left" : "return new String(buffer);",
    "right" : "return new String(buffer);",
    "info" : "ReturnStatement[10852-10878]:ReturnStatement[11101-11127]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11483-11489]:Modifier[11732-11738]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11490-11496]:Modifier[11739-11745]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[11497-11503]:SimpleType[11746-11752]"
  }, {
    "left" : "random",
    "right" : "random",
    "info" : "SimpleName[11504-11510]:SimpleName[11753-11759]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[11511-11520]:SingleVariableDeclaration[11760-11769]"
  }, {
    "left" : "String chars",
    "right" : "String chars",
    "info" : "SingleVariableDeclaration[11522-11534]:SingleVariableDeclaration[11771-11783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11536-11701]:Block[11785-11950]"
  }, {
    "left" : "if (chars == null)",
    "right" : "if (chars == null)",
    "info" : "IfStatement[11546-11644]:IfStatement[11795-11893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11565-11644]:Block[11814-11893]"
  }, {
    "left" : "return random(count, 0, 0, false, false, null, RANDOM);",
    "right" : "return random(count, 0, 0, false, false, null, RANDOM);",
    "info" : "ReturnStatement[11579-11634]:ReturnStatement[11828-11883]"
  }, {
    "left" : "return random(count, chars.toCharArray());",
    "right" : "return random(count, chars.toCharArray());",
    "info" : "ReturnStatement[11653-11695]:ReturnStatement[11902-11944]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12171-12177]:Modifier[12420-12426]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12178-12184]:Modifier[12427-12433]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[12185-12191]:SimpleType[12434-12440]"
  }, {
    "left" : "random",
    "right" : "random",
    "info" : "SimpleName[12192-12198]:SimpleName[12441-12447]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[12199-12208]:SingleVariableDeclaration[12448-12457]"
  }, {
    "left" : "char... chars",
    "right" : "char... chars",
    "info" : "SingleVariableDeclaration[12210-12223]:SingleVariableDeclaration[12459-12472]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12225-12415]:Block[12474-12664]"
  }, {
    "left" : "if (chars == null)",
    "right" : "if (chars == null)",
    "info" : "IfStatement[12235-12333]:IfStatement[12484-12582]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12254-12333]:Block[12503-12582]"
  }, {
    "left" : "return random(count, 0, 0, false, false, null, RANDOM);",
    "right" : "return random(count, 0, 0, false, false, null, RANDOM);",
    "info" : "ReturnStatement[12268-12323]:ReturnStatement[12517-12572]"
  }, {
    "left" : "return random(count, 0, chars.length, false, false, chars, RANDOM);",
    "right" : "return random(count, 0, chars.length, false, false, chars, RANDOM);",
    "info" : "ReturnStatement[12342-12409]:ReturnStatement[12591-12658]"
  } ]
}