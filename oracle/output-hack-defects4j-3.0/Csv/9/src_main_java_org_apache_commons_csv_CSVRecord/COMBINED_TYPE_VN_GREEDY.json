{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CSVRecord",
      "right" : "CSVRecord",
      "info" : "TypeDeclaration[1018-6821]:TypeDeclaration[1018-6886]"
    }, {
      "left" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "right" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "info" : "FieldDeclaration[1164-1229]:FieldDeclaration[1164-1229]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1235-1283]:FieldDeclaration[1235-1283]"
    }, {
      "left" : "private final String comment;",
      "right" : "private final String comment;",
      "info" : "FieldDeclaration[1289-1363]:FieldDeclaration[1289-1363]"
    }, {
      "left" : "private final Map<String, Integer> mapping;",
      "right" : "private final Map<String, Integer> mapping;",
      "info" : "FieldDeclaration[1369-1457]:FieldDeclaration[1369-1457]"
    }, {
      "left" : "private final long recordNumber;",
      "right" : "private final long recordNumber;",
      "info" : "FieldDeclaration[1463-1525]:FieldDeclaration[1463-1525]"
    }, {
      "left" : "private final String[] values;",
      "right" : "private final String[] values;",
      "info" : "FieldDeclaration[1531-1597]:FieldDeclaration[1531-1597]"
    }, {
      "left" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "right" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "info" : "MethodDeclaration[1603-1912]:MethodDeclaration[1603-1912]"
    }, {
      "left" : "public String get(final Enum<?> e)",
      "right" : "public String get(final Enum<?> e)",
      "info" : "MethodDeclaration[1918-2150]:MethodDeclaration[1918-2150]"
    }, {
      "left" : "public String get(final int i)",
      "right" : "public String get(final int i)",
      "info" : "MethodDeclaration[2156-2380]:MethodDeclaration[2156-2380]"
    }, {
      "left" : "public String get(final String name)",
      "right" : "public String get(final String name)",
      "info" : "MethodDeclaration[2386-3711]:MethodDeclaration[2386-3711]"
    }, {
      "left" : "public String getComment()",
      "right" : "public String getComment()",
      "info" : "MethodDeclaration[3717-3961]:MethodDeclaration[3717-3961]"
    }, {
      "left" : "public long getRecordNumber()",
      "right" : "public long getRecordNumber()",
      "info" : "MethodDeclaration[3967-4163]:MethodDeclaration[3967-4163]"
    }, {
      "left" : "public boolean isConsistent()",
      "right" : "public boolean isConsistent()",
      "info" : "MethodDeclaration[4169-4585]:MethodDeclaration[4169-4585]"
    }, {
      "left" : "public boolean isMapped(final String name)",
      "right" : "public boolean isMapped(final String name)",
      "info" : "MethodDeclaration[4591-4945]:MethodDeclaration[4591-4945]"
    }, {
      "left" : "public boolean isSet(final String name)",
      "right" : "public boolean isSet(final String name)",
      "info" : "MethodDeclaration[4951-5307]:MethodDeclaration[4951-5307]"
    }, {
      "left" : "public Iterator<String> iterator()",
      "right" : "public Iterator<String> iterator()",
      "info" : "MethodDeclaration[5313-5532]:MethodDeclaration[5313-5532]"
    }, {
      "left" : "<M extends Map<String, String>> M putIn(final M map)",
      "right" : "<M extends Map<String, String>> M putIn(final M map)",
      "info" : "MethodDeclaration[5538-6014]:MethodDeclaration[5538-6079]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[6020-6187]:MethodDeclaration[6085-6252]"
    }, {
      "left" : "private List<String> toList()",
      "right" : "private List<String> toList()",
      "info" : "MethodDeclaration[6193-6392]:MethodDeclaration[6258-6457]"
    }, {
      "left" : "public Map<String, String> toMap()",
      "right" : "public Map<String, String> toMap()",
      "info" : "MethodDeclaration[6398-6671]:MethodDeclaration[6463-6736]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[6677-6763]:MethodDeclaration[6742-6828]"
    }, {
      "left" : "String[] values()",
      "right" : "String[] values()",
      "info" : "MethodDeclaration[6769-6817]:MethodDeclaration[6834-6882]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1086-1092]:Modifier[1086-1092]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1093-1098]:Modifier[1093-1098]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1099-1104]:TYPE_DECLARATION_KIND[1099-1104]"
    }, {
      "left" : "CSVRecord",
      "right" : "CSVRecord",
      "info" : "SimpleName[1105-1114]:SimpleName[1105-1114]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[1126-1138]:SimpleType[1126-1138]"
    }, {
      "left" : "CSVRecord",
      "right" : "CSVRecord",
      "info" : "SimpleName[1603-1612]:SimpleName[1603-1612]"
    }, {
      "left" : "final String[] values",
      "right" : "final String[] values",
      "info" : "SingleVariableDeclaration[1613-1634]:SingleVariableDeclaration[1613-1634]"
    }, {
      "left" : "final Map<String, Integer> mapping",
      "right" : "final Map<String, Integer> mapping",
      "info" : "SingleVariableDeclaration[1636-1670]:SingleVariableDeclaration[1636-1670]"
    }, {
      "left" : "final String comment",
      "right" : "final String comment",
      "info" : "SingleVariableDeclaration[1684-1704]:SingleVariableDeclaration[1684-1704]"
    }, {
      "left" : "final long recordNumber",
      "right" : "final long recordNumber",
      "info" : "SingleVariableDeclaration[1706-1729]:SingleVariableDeclaration[1706-1729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1731-1912]:Block[1731-1912]"
    }, {
      "left" : "this.recordNumber = recordNumber;",
      "right" : "this.recordNumber = recordNumber;",
      "info" : "ExpressionStatement[1741-1774]:ExpressionStatement[1741-1774]"
    }, {
      "left" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "right" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "info" : "ExpressionStatement[1783-1842]:ExpressionStatement[1783-1842]"
    }, {
      "left" : "this.mapping = mapping;",
      "right" : "this.mapping = mapping;",
      "info" : "ExpressionStatement[1851-1874]:ExpressionStatement[1851-1874]"
    }, {
      "left" : "this.comment = comment;",
      "right" : "this.comment = comment;",
      "info" : "ExpressionStatement[1883-1906]:ExpressionStatement[1883-1906]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2074-2080]:Modifier[2074-2080]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2081-2087]:SimpleType[2081-2087]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[2088-2091]:SimpleName[2088-2091]"
    }, {
      "left" : "final Enum<?> e",
      "right" : "final Enum<?> e",
      "info" : "SingleVariableDeclaration[2092-2107]:SingleVariableDeclaration[2092-2107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2109-2150]:Block[2109-2150]"
    }, {
      "left" : "return get(e.toString());",
      "right" : "return get(e.toString());",
      "info" : "ReturnStatement[2119-2144]:ReturnStatement[2119-2144]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2316-2322]:Modifier[2316-2322]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2323-2329]:SimpleType[2323-2329]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[2330-2333]:SimpleName[2330-2333]"
    }, {
      "left" : "final int i",
      "right" : "final int i",
      "info" : "SingleVariableDeclaration[2334-2345]:SingleVariableDeclaration[2334-2345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2347-2380]:Block[2347-2380]"
    }, {
      "left" : "return values[i];",
      "right" : "return values[i];",
      "info" : "ReturnStatement[2357-2374]:ReturnStatement[2357-2374]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2895-2901]:Modifier[2895-2901]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2902-2908]:SimpleType[2902-2908]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[2909-2912]:SimpleName[2909-2912]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[2913-2930]:SingleVariableDeclaration[2913-2930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2932-3711]:Block[2932-3711]"
    }, {
      "left" : "if (mapping == null)",
      "right" : "if (mapping == null)",
      "info" : "IfStatement[2942-3120]:IfStatement[2942-3120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2963-3120]:Block[2963-3120]"
    }, {
      "left" : "throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");",
      "right" : "throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");",
      "info" : "ThrowStatement[2977-3110]:ThrowStatement[2977-3110]"
    }, {
      "left" : "final Integer index = mapping.get(name);",
      "right" : "final Integer index = mapping.get(name);",
      "info" : "VariableDeclarationStatement[3129-3169]:VariableDeclarationStatement[3129-3169]"
    }, {
      "left" : "if (index == null)",
      "right" : "if (index == null)",
      "info" : "IfStatement[3178-3363]:IfStatement[3178-3363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3197-3363]:Block[3197-3363]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\"Mapping for %s not found, expected one of %s\", name,\n                    mapping.keySet()));",
      "right" : "throw new IllegalArgumentException(String.format(\"Mapping for %s not found, expected one of %s\", name,\n                    mapping.keySet()));",
      "info" : "ThrowStatement[3211-3353]:ThrowStatement[3211-3353]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3372-3705]:TryStatement[3372-3705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3376-3432]:Block[3376-3432]"
    }, {
      "left" : "return values[index.intValue()];",
      "right" : "return values[index.intValue()];",
      "info" : "ReturnStatement[3390-3422]:ReturnStatement[3390-3422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3480-3705]:Block[3480-3705]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\n                    \"Index for header '%s' is %d but CSVRecord only has %d values!\", name, index,\n                    Integer.valueOf(values.length)));",
      "right" : "throw new IllegalArgumentException(String.format(\n                    \"Index for header '%s' is %d but CSVRecord only has %d values!\", name, index,\n                    Integer.valueOf(values.length)));",
      "info" : "ThrowStatement[3494-3695]:ThrowStatement[3494-3695]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3903-3909]:Modifier[3903-3909]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3910-3916]:SimpleType[3910-3916]"
    }, {
      "left" : "getComment",
      "right" : "getComment",
      "info" : "SimpleName[3917-3927]:SimpleName[3917-3927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3930-3961]:Block[3930-3961]"
    }, {
      "left" : "return comment;",
      "right" : "return comment;",
      "info" : "ReturnStatement[3940-3955]:ReturnStatement[3940-3955]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4097-4103]:Modifier[4097-4103]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[4104-4108]:PrimitiveType[4104-4108]"
    }, {
      "left" : "getRecordNumber",
      "right" : "getRecordNumber",
      "info" : "SimpleName[4109-4124]:SimpleName[4109-4124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4127-4163]:Block[4127-4163]"
    }, {
      "left" : "return recordNumber;",
      "right" : "return recordNumber;",
      "info" : "ReturnStatement[4137-4157]:ReturnStatement[4137-4157]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4481-4487]:Modifier[4481-4487]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4488-4495]:PrimitiveType[4488-4495]"
    }, {
      "left" : "isConsistent",
      "right" : "isConsistent",
      "info" : "SimpleName[4496-4508]:SimpleName[4496-4508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4511-4585]:Block[4511-4585]"
    }, {
      "left" : "return mapping == null || mapping.size() == values.length;",
      "right" : "return mapping == null || mapping.size() == values.length;",
      "info" : "ReturnStatement[4521-4579]:ReturnStatement[4521-4579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4834-4840]:Modifier[4834-4840]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4841-4848]:PrimitiveType[4841-4848]"
    }, {
      "left" : "isMapped",
      "right" : "isMapped",
      "info" : "SimpleName[4849-4857]:SimpleName[4849-4857]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[4858-4875]:SingleVariableDeclaration[4858-4875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4877-4945]:Block[4877-4945]"
    }, {
      "left" : "return mapping != null && mapping.containsKey(name);",
      "right" : "return mapping != null && mapping.containsKey(name);",
      "info" : "ReturnStatement[4887-4939]:ReturnStatement[4887-4939]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5181-5187]:Modifier[5181-5187]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5188-5195]:PrimitiveType[5188-5195]"
    }, {
      "left" : "isSet",
      "right" : "isSet",
      "info" : "SimpleName[5196-5201]:SimpleName[5196-5201]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[5202-5219]:SingleVariableDeclaration[5202-5219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5221-5307]:Block[5221-5307]"
    }, {
      "left" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "right" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "info" : "ReturnStatement[5231-5301]:ReturnStatement[5231-5301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5454-5460]:Modifier[5454-5460]"
    }, {
      "left" : "Iterator<String>",
      "right" : "Iterator<String>",
      "info" : "ParameterizedType[5461-5477]:ParameterizedType[5461-5477]"
    }, {
      "left" : "iterator",
      "right" : "iterator",
      "info" : "SimpleName[5478-5486]:SimpleName[5478-5486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5489-5532]:Block[5489-5532]"
    }, {
      "left" : "return toList().iterator();",
      "right" : "return toList().iterator();",
      "info" : "ReturnStatement[5499-5526]:ReturnStatement[5499-5526]"
    }, {
      "left" : "M extends Map<String, String>",
      "right" : "M extends Map<String, String>",
      "info" : "TypeParameter[5689-5718]:TypeParameter[5689-5718]"
    }, {
      "left" : "M",
      "right" : "M",
      "info" : "SimpleType[5720-5721]:SimpleType[5720-5721]"
    }, {
      "left" : "putIn",
      "right" : "putIn",
      "info" : "SimpleName[5722-5727]:SimpleName[5722-5727]"
    }, {
      "left" : "final M map",
      "right" : "final M map",
      "info" : "SingleVariableDeclaration[5728-5739]:SingleVariableDeclaration[5728-5739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5741-6014]:Block[5741-6079]"
    }, {
      "left" : "for (final Entry<String, Integer> entry : mapping.entrySet())",
      "right" : "for (final Entry<String, Integer> entry : mapping.entrySet())",
      "info" : "EnhancedForStatement[5751-5988]:EnhancedForStatement[5816-6053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5813-5988]:Block[5878-6053]"
    }, {
      "left" : "final int col = entry.getValue().intValue();",
      "right" : "final int col = entry.getValue().intValue();",
      "info" : "VariableDeclarationStatement[5827-5871]:VariableDeclarationStatement[5892-5936]"
    }, {
      "left" : "if (col < values.length)",
      "right" : "if (col < values.length)",
      "info" : "IfStatement[5884-5978]:IfStatement[5949-6043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5909-5978]:Block[5974-6043]"
    }, {
      "left" : "map.put(entry.getKey(), values[col]);",
      "right" : "map.put(entry.getKey(), values[col]);",
      "info" : "ExpressionStatement[5927-5964]:ExpressionStatement[5992-6029]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[5997-6008]:ReturnStatement[6062-6073]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6132-6138]:Modifier[6197-6203]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6139-6142]:PrimitiveType[6204-6207]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[6143-6147]:SimpleName[6208-6212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6150-6187]:Block[6215-6252]"
    }, {
      "left" : "return values.length;",
      "right" : "return values.length;",
      "info" : "ReturnStatement[6160-6181]:ReturnStatement[6225-6246]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6317-6324]:Modifier[6382-6389]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[6325-6337]:ParameterizedType[6390-6402]"
    }, {
      "left" : "toList",
      "right" : "toList",
      "info" : "SimpleName[6338-6344]:SimpleName[6403-6409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6347-6392]:Block[6412-6457]"
    }, {
      "left" : "return Arrays.asList(values);",
      "right" : "return Arrays.asList(values);",
      "info" : "ReturnStatement[6357-6386]:ReturnStatement[6422-6451]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6563-6569]:Modifier[6628-6634]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[6570-6589]:ParameterizedType[6635-6654]"
    }, {
      "left" : "toMap",
      "right" : "toMap",
      "info" : "SimpleName[6590-6595]:SimpleName[6655-6660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6598-6671]:Block[6663-6736]"
    }, {
      "left" : "return putIn(new HashMap<String, String>(values.length));",
      "right" : "return putIn(new HashMap<String, String>(values.length));",
      "info" : "ReturnStatement[6608-6665]:ReturnStatement[6673-6730]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6677-6686]:MarkerAnnotation[6742-6751]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6691-6697]:Modifier[6756-6762]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6698-6704]:SimpleType[6763-6769]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[6705-6713]:SimpleName[6770-6778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6716-6763]:Block[6781-6828]"
    }, {
      "left" : "return Arrays.toString(values);",
      "right" : "return Arrays.toString(values);",
      "info" : "ReturnStatement[6726-6757]:ReturnStatement[6791-6822]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[6769-6777]:ArrayType[6834-6842]"
    }, {
      "left" : "values",
      "right" : "values",
      "info" : "SimpleName[6778-6784]:SimpleName[6843-6849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6787-6817]:Block[6852-6882]"
    }, {
      "left" : "return values;",
      "right" : "return values;",
      "info" : "ReturnStatement[6797-6811]:ReturnStatement[6862-6876]"
    } ]
  },
  "interFileMappings" : { }
}