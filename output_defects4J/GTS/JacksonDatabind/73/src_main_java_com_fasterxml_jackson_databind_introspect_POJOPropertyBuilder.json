{
  "matchedElements" : [
 {
    "left" : "class : POJOPropertyBuilder",
    "right" : "class : POJOPropertyBuilder",
    "info" : "TypeDeclaration[332-42128]:TypeDeclaration[332-42163]"
  }, {
    "left" : "_forSerialization",
    "right" : "_forSerialization",
    "info" : "FieldDeclaration[553-712]:FieldDeclaration[553-712]"
  }, {
    "left" : "_config",
    "right" : "_config",
    "info" : "FieldDeclaration[718-758]:FieldDeclaration[718-758]"
  }, {
    "left" : "_annotationIntrospector",
    "right" : "_annotationIntrospector",
    "info" : "FieldDeclaration[764-827]:FieldDeclaration[764-827]"
  }, {
    "left" : "_name",
    "right" : "_name",
    "info" : "FieldDeclaration[833-1018]:FieldDeclaration[833-1018]"
  }, {
    "left" : "_internalName",
    "right" : "_internalName",
    "info" : "FieldDeclaration[1024-1195]:FieldDeclaration[1024-1195]"
  }, {
    "left" : "_fields",
    "right" : "_fields",
    "info" : "FieldDeclaration[1201-1242]:FieldDeclaration[1201-1242]"
  }, {
    "left" : "_ctorParameters",
    "right" : "_ctorParameters",
    "info" : "FieldDeclaration[1248-1301]:FieldDeclaration[1248-1301]"
  }, {
    "left" : "_getters",
    "right" : "_getters",
    "info" : "FieldDeclaration[1307-1350]:FieldDeclaration[1307-1350]"
  }, {
    "left" : "_setters",
    "right" : "_setters",
    "info" : "FieldDeclaration[1356-1399]:FieldDeclaration[1356-1399]"
  }, {
    "left" : "public POJOPropertyBuilder(config , ai , forSerialization boolean, internalName )",
    "right" : "public POJOPropertyBuilder(config , ai , forSerialization boolean, internalName )",
    "info" : "MethodDeclaration[1405-1627]:MethodDeclaration[1405-1627]"
  }, {
    "left" : "protected POJOPropertyBuilder(config , ai , forSerialization boolean, internalName , name )",
    "right" : "protected POJOPropertyBuilder(config , ai , forSerialization boolean, internalName , name )",
    "info" : "MethodDeclaration[1633-1979]:MethodDeclaration[1633-1979]"
  }, {
    "left" : "public POJOPropertyBuilder(src , newName )",
    "right" : "public POJOPropertyBuilder(src , newName )",
    "info" : "MethodDeclaration[1985-2427]:MethodDeclaration[1985-2427]"
  }, {
    "left" : "public withName(newName ) : ",
    "right" : "public withName(newName ) : ",
    "info" : "MethodDeclaration[2611-2745]:MethodDeclaration[2611-2745]"
  }, {
    "left" : "public withSimpleName(newSimpleName ) : ",
    "right" : "public withSimpleName(newSimpleName ) : ",
    "info" : "MethodDeclaration[2751-2991]:MethodDeclaration[2751-2991]"
  }, {
    "left" : "public compareTo(other ) : int",
    "right" : "public compareTo(other ) : int",
    "info" : "MethodDeclaration[3296-3806]:MethodDeclaration[3296-3806]"
  }, {
    "left" : "public getName() : ",
    "right" : "public getName() : ",
    "info" : "MethodDeclaration[4012-4120]:MethodDeclaration[4012-4120]"
  }, {
    "left" : "public getFullName() : ",
    "right" : "public getFullName() : ",
    "info" : "MethodDeclaration[4126-4203]:MethodDeclaration[4126-4203]"
  }, {
    "left" : "public hasName(name ) : boolean",
    "right" : "public hasName(name ) : boolean",
    "info" : "MethodDeclaration[4209-4307]:MethodDeclaration[4209-4307]"
  }, {
    "left" : "public getInternalName() : ",
    "right" : "public getInternalName() : ",
    "info" : "MethodDeclaration[4313-4400]:MethodDeclaration[4313-4400]"
  }, {
    "left" : "public getWrapperName() : ",
    "right" : "public getWrapperName() : ",
    "info" : "MethodDeclaration[4406-5229]:MethodDeclaration[4406-5229]"
  }, {
    "left" : "public isExplicitlyIncluded() : boolean",
    "right" : "public isExplicitlyIncluded() : boolean",
    "info" : "MethodDeclaration[5235-5796]:MethodDeclaration[5235-5796]"
  }, {
    "left" : "public isExplicitlyNamed() : boolean",
    "right" : "public isExplicitlyNamed() : boolean",
    "info" : "MethodDeclaration[5802-6066]:MethodDeclaration[5802-6066]"
  }, {
    "left" : "public hasGetter() : boolean",
    "right" : "public hasGetter() : boolean",
    "info" : "MethodDeclaration[6282-6351]:MethodDeclaration[6282-6351]"
  }, {
    "left" : "public hasSetter() : boolean",
    "right" : "public hasSetter() : boolean",
    "info" : "MethodDeclaration[6357-6426]:MethodDeclaration[6357-6426]"
  }, {
    "left" : "public hasField() : boolean",
    "right" : "public hasField() : boolean",
    "info" : "MethodDeclaration[6432-6499]:MethodDeclaration[6432-6499]"
  }, {
    "left" : "public hasConstructorParameter() : boolean",
    "right" : "public hasConstructorParameter() : boolean",
    "info" : "MethodDeclaration[6505-6595]:MethodDeclaration[6505-6595]"
  }, {
    "left" : "public couldDeserialize() : boolean",
    "right" : "public couldDeserialize() : boolean",
    "info" : "MethodDeclaration[6601-6741]:MethodDeclaration[6601-6741]"
  }, {
    "left" : "public couldSerialize() : boolean",
    "right" : "public couldSerialize() : boolean",
    "info" : "MethodDeclaration[6747-6856]:MethodDeclaration[6747-6856]"
  }, {
    "left" : "public getGetter() : ",
    "right" : "public getGetter() : ",
    "info" : "MethodDeclaration[6862-8779]:MethodDeclaration[6862-8779]"
  }, {
    "left" : "public getSetter() : ",
    "right" : "public getSetter() : ",
    "info" : "MethodDeclaration[8789-11292]:MethodDeclaration[8789-11292]"
  }, {
    "left" : "public getField() : ",
    "right" : "public getField() : ",
    "info" : "MethodDeclaration[11298-12383]:MethodDeclaration[11298-12383]"
  }, {
    "left" : "public getConstructorParameter() : ",
    "right" : "public getConstructorParameter() : ",
    "info" : "MethodDeclaration[12389-13275]:MethodDeclaration[12389-13275]"
  }, {
    "left" : "public getConstructorParameters() : ",
    "right" : "public getConstructorParameters() : ",
    "info" : "MethodDeclaration[13281-13532]:MethodDeclaration[13281-13532]"
  }, {
    "left" : "public getAccessor() : ",
    "right" : "public getAccessor() : ",
    "info" : "MethodDeclaration[13542-13726]:MethodDeclaration[13542-13726]"
  }, {
    "left" : "public getMutator() : ",
    "right" : "public getMutator() : ",
    "info" : "MethodDeclaration[13732-14005]:MethodDeclaration[13732-14005]"
  }, {
    "left" : "public getNonConstructorMutator() : ",
    "right" : "public getNonConstructorMutator() : ",
    "info" : "MethodDeclaration[14011-14204]:MethodDeclaration[14011-14204]"
  }, {
    "left" : "public getPrimaryMember() : ",
    "right" : "public getPrimaryMember() : ",
    "info" : "MethodDeclaration[14210-14379]:MethodDeclaration[14210-14379]"
  }, {
    "left" : "protected _getterPriority(m ) : int",
    "right" : "protected _getterPriority(m ) : int",
    "info" : "MethodDeclaration[14385-14815]:MethodDeclaration[14385-14815]"
  }, {
    "left" : "protected _setterPriority(m ) : int",
    "right" : "protected _setterPriority(m ) : int",
    "info" : "MethodDeclaration[14821-15078]:MethodDeclaration[14821-15078]"
  }, {
    "left" : "public findViews() : ",
    "right" : "public findViews() : ",
    "info" : "MethodDeclaration[15275-15575]:MethodDeclaration[15275-15575]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[15401-15557]:MethodDeclaration[15401-15557]"
  }, {
    "left" : "public findReferenceType() : ",
    "right" : "public findReferenceType() : ",
    "info" : "MethodDeclaration[15581-15987]:MethodDeclaration[15581-15987]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[15775-15969]:MethodDeclaration[15775-15969]"
  }, {
    "left" : "public isTypeId() : boolean",
    "right" : "public isTypeId() : boolean",
    "info" : "MethodDeclaration[15993-16335]:MethodDeclaration[15993-16335]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[16117-16269]:MethodDeclaration[16117-16269]"
  }, {
    "left" : "public getMetadata() : ",
    "right" : "public getMetadata() : ",
    "info" : "MethodDeclaration[16341-16888]:MethodDeclaration[16341-16888]"
  }, {
    "left" : "protected _findRequired() : ",
    "right" : "protected _findRequired() : ",
    "info" : "MethodDeclaration[16894-17185]:MethodDeclaration[16894-17185]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[17006-17167]:MethodDeclaration[17006-17167]"
  }, {
    "left" : "protected _findDescription() : ",
    "right" : "protected _findDescription() : ",
    "info" : "MethodDeclaration[17195-17493]:MethodDeclaration[17195-17493]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[17309-17475]:MethodDeclaration[17309-17475]"
  }, {
    "left" : "protected _findIndex() : ",
    "right" : "protected _findIndex() : ",
    "info" : "MethodDeclaration[17499-17788]:MethodDeclaration[17499-17788]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[17609-17770]:MethodDeclaration[17609-17770]"
  }, {
    "left" : "protected _findDefaultValue() : ",
    "right" : "protected _findDefaultValue() : ",
    "info" : "MethodDeclaration[17794-18094]:MethodDeclaration[17794-18094]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[17909-18076]:MethodDeclaration[17909-18076]"
  }, {
    "left" : "public findObjectIdInfo() : ",
    "right" : "public findObjectIdInfo() : ",
    "info" : "MethodDeclaration[18104-18610]:MethodDeclaration[18104-18610]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[18241-18592]:MethodDeclaration[18241-18592]"
  }, {
    "left" : "public findInclusion() : ",
    "right" : "public findInclusion() : ",
    "info" : "MethodDeclaration[18616-19194]:MethodDeclaration[18616-19194]"
  }, {
    "left" : "public findAccess() : ",
    "right" : "public findAccess() : ",
    "info" : "MethodDeclaration[19200-19555]:MethodDeclaration[19200-19555]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[19337-19511]:MethodDeclaration[19337-19511]"
  }, {
    "left" : "public addField(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "right" : "public addField(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "info" : "MethodDeclaration[19737-19946]:MethodDeclaration[19737-19946]"
  }, {
    "left" : "public addCtor(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "right" : "public addCtor(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "info" : "MethodDeclaration[19952-20184]:MethodDeclaration[19952-20184]"
  }, {
    "left" : "public addGetter(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "right" : "public addGetter(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "info" : "MethodDeclaration[20190-20404]:MethodDeclaration[20190-20404]"
  }, {
    "left" : "public addSetter(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "right" : "public addSetter(a , name , explName boolean, visible boolean, ignored boolean) : void",
    "info" : "MethodDeclaration[20410-20624]:MethodDeclaration[20410-20624]"
  }, {
    "left" : "public addAll(src ) : void",
    "right" : "public addAll(src ) : void",
    "info" : "MethodDeclaration[20630-21017]:MethodDeclaration[20630-21017]"
  }, {
    "left" : "private merge(chain1 , chain2 ) : ",
    "right" : "private merge(chain1 , chain2 ) : ",
    "info" : "MethodDeclaration[21023-21277]:MethodDeclaration[21023-21277]"
  }, {
    "left" : "public removeIgnored() : void",
    "right" : "public removeIgnored() : void",
    "info" : "MethodDeclaration[21448-21773]:MethodDeclaration[21448-21773]"
  }, {
    "left" : "public removeNonVisible(inferMutators boolean) : void",
    "right" : "public removeNonVisible(inferMutators boolean) : ",
    "info" : "MethodDeclaration[21779-23307]:MethodDeclaration[21779-23342]"
  }, {
    "left" : "public removeConstructors() : void",
    "right" : "public removeConstructors() : void",
    "info" : "MethodDeclaration[23313-23510]:MethodDeclaration[23348-23545]"
  }, {
    "left" : "public trimByVisibility() : void",
    "right" : "public trimByVisibility() : void",
    "info" : "MethodDeclaration[23520-23976]:MethodDeclaration[23555-24011]"
  }, {
    "left" : "public mergeAnnotations(forSerialization boolean) : void",
    "right" : "public mergeAnnotations(forSerialization boolean) : void",
    "info" : "MethodDeclaration[23982-25180]:MethodDeclaration[24017-25215]"
  }, {
    "left" : "private _mergeAnnotations(index int, ) : ",
    "right" : "private _mergeAnnotations(index int, ) : ",
    "info" : "MethodDeclaration[25186-25571]:MethodDeclaration[25221-25606]"
  }, {
    "left" : "private _getAllAnnotations(node ) : ",
    "right" : "private _getAllAnnotations(node ) : ",
    "info" : "MethodDeclaration[25577-26107]:MethodDeclaration[25612-26142]"
  }, {
    "left" : "private _applyAnnotations(node , ann ) : ",
    "right" : "private _applyAnnotations(node , ann ) : ",
    "info" : "MethodDeclaration[26113-26788]:MethodDeclaration[26148-26823]"
  }, {
    "left" : "private _removeIgnored(node ) : ",
    "right" : "private _removeIgnored(node ) : ",
    "info" : "MethodDeclaration[26794-26959]:MethodDeclaration[26829-26994]"
  }, {
    "left" : "private _removeNonVisible(node ) : ",
    "right" : "private _removeNonVisible(node ) : ",
    "info" : "MethodDeclaration[26965-27136]:MethodDeclaration[27000-27171]"
  }, {
    "left" : "private _trimByVisibility(node ) : ",
    "right" : "private _trimByVisibility(node ) : ",
    "info" : "MethodDeclaration[27142-27312]:MethodDeclaration[27177-27347]"
  }, {
    "left" : "private _anyExplicits(n ) : boolean",
    "right" : "private _anyExplicits(n ) : boolean",
    "info" : "MethodDeclaration[27513-27746]:MethodDeclaration[27548-27781]"
  }, {
    "left" : "private _anyExplicitNames(n ) : boolean",
    "right" : "private _anyExplicitNames(n ) : boolean",
    "info" : "MethodDeclaration[27752-27983]:MethodDeclaration[27787-28018]"
  }, {
    "left" : "public anyVisible() : boolean",
    "right" : "public anyVisible() : boolean",
    "info" : "MethodDeclaration[27989-28188]:MethodDeclaration[28024-28223]"
  }, {
    "left" : "private _anyVisible(n ) : boolean",
    "right" : "private _anyVisible(n ) : boolean",
    "info" : "MethodDeclaration[28194-28396]:MethodDeclaration[28229-28431]"
  }, {
    "left" : "public anyIgnorals() : boolean",
    "right" : "public anyIgnorals() : boolean",
    "info" : "MethodDeclaration[28406-28610]:MethodDeclaration[28441-28645]"
  }, {
    "left" : "private _anyIgnorals(n ) : boolean",
    "right" : "private _anyIgnorals(n ) : boolean",
    "info" : "MethodDeclaration[28616-28825]:MethodDeclaration[28651-28860]"
  }, {
    "left" : "public findExplicitNames() : ",
    "right" : "public findExplicitNames() : ",
    "info" : "MethodDeclaration[28831-29426]:MethodDeclaration[28866-29461]"
  }, {
    "left" : "public explode(newNames ...) : ",
    "right" : "public explode(newNames ...) : ",
    "info" : "MethodDeclaration[29432-30151]:MethodDeclaration[29467-30186]"
  }, {
    "left" : "private _explode(newNames , props , accessors ...) : void",
    "right" : "private _explode(newNames , props , accessors ...) : void",
    "info" : "MethodDeclaration[30157-32322]:MethodDeclaration[30192-32357]"
  }, {
    "left" : "private _findExplicitNames(node , renamed ) : ",
    "right" : "private _findExplicitNames(node , renamed ) : ",
    "info" : "MethodDeclaration[32332-33137]:MethodDeclaration[32367-33172]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[33175-33596]:MethodDeclaration[33210-33631]"
  }, {
    "left" : "protected fromMemberAnnotations(func ) : ",
    "right" : "protected fromMemberAnnotations(func ) : ",
    "info" : "MethodDeclaration[33772-34688]:MethodDeclaration[33807-34723]"
  }, {
    "left" : "protected fromMemberAnnotationsExcept(func , defaultValue ) : ",
    "right" : "protected fromMemberAnnotationsExcept(func , defaultValue ) : ",
    "info" : "MethodDeclaration[34694-36853]:MethodDeclaration[34729-36888]"
  }, {
    "left" : "interface : WithMember",
    "right" : "interface : WithMember",
    "info" : "TypeDeclaration[37029-37121]:TypeDeclaration[37064-37156]"
  }, {
    "left" : "public withMember(member ) : ",
    "right" : "public withMember(member ) : ",
    "info" : "MethodDeclaration[37071-37115]:MethodDeclaration[37106-37150]"
  }, {
    "left" : "class : MemberIterator",
    "right" : "class : MemberIterator",
    "info" : "TypeDeclaration[37127-37838]:TypeDeclaration[37162-37873]"
  }, {
    "left" : "next",
    "right" : "next",
    "info" : "FieldDeclaration[37271-37294]:FieldDeclaration[37306-37329]"
  }, {
    "left" : "public MemberIterator(first )",
    "right" : "public MemberIterator(first )",
    "info" : "MethodDeclaration[37312-37388]:MethodDeclaration[37347-37423]"
  }, {
    "left" : "public hasNext() : boolean",
    "right" : "public hasNext() : boolean",
    "info" : "MethodDeclaration[37406-37495]:MethodDeclaration[37441-37530]"
  }, {
    "left" : "public next() : ",
    "right" : "public next() : ",
    "info" : "MethodDeclaration[37505-37708]:MethodDeclaration[37540-37743]"
  }, {
    "left" : "public remove() : void",
    "right" : "public remove() : void",
    "info" : "MethodDeclaration[37718-37823]:MethodDeclaration[37753-37858]"
  }, {
    "left" : "class : Linked",
    "right" : "class : Linked",
    "info" : "TypeDeclaration[37848-42126]:TypeDeclaration[37883-42161]"
  }, {
    "left" : "value",
    "right" : "value",
    "info" : "FieldDeclaration[38017-38038]:FieldDeclaration[38052-38073]"
  }, {
    "left" : "next",
    "right" : "next",
    "info" : "FieldDeclaration[38047-38075]:FieldDeclaration[38082-38110]"
  }, {
    "left" : "name",
    "right" : "name",
    "info" : "FieldDeclaration[38085-38116]:FieldDeclaration[38120-38151]"
  }, {
    "left" : "isNameExplicit",
    "right" : "isNameExplicit",
    "info" : "FieldDeclaration[38125-38161]:FieldDeclaration[38160-38196]"
  }, {
    "left" : "isVisible",
    "right" : "isVisible",
    "info" : "FieldDeclaration[38170-38201]:FieldDeclaration[38205-38236]"
  }, {
    "left" : "isMarkedIgnored",
    "right" : "isMarkedIgnored",
    "info" : "FieldDeclaration[38210-38247]:FieldDeclaration[38245-38282]"
  }, {
    "left" : "public Linked(v , n , name , explName boolean, visible boolean, ignored boolean)",
    "right" : "public Linked(v , n , name , explName boolean, visible boolean, ignored boolean)",
    "info" : "MethodDeclaration[38265-39221]:MethodDeclaration[38300-39256]"
  }, {
    "left" : "public withoutNext() : ",
    "right" : "public withoutNext() : ",
    "info" : "MethodDeclaration[39231-39445]:MethodDeclaration[39266-39480]"
  }, {
    "left" : "public withValue(newValue ) : ",
    "right" : "public withValue(newValue ) : ",
    "info" : "MethodDeclaration[39463-39693]:MethodDeclaration[39498-39728]"
  }, {
    "left" : "public withNext(newNext ) : ",
    "right" : "public withNext(newNext ) : ",
    "info" : "MethodDeclaration[39711-39945]:MethodDeclaration[39746-39980]"
  }, {
    "left" : "public withoutIgnored() : ",
    "right" : "public withoutIgnored() : ",
    "info" : "MethodDeclaration[39963-40360]:MethodDeclaration[39998-40395]"
  }, {
    "left" : "public withoutNonVisible() : ",
    "right" : "public withoutNonVisible() : ",
    "info" : "MethodDeclaration[40378-40568]:MethodDeclaration[40413-40603]"
  }, {
    "left" : "protected append(appendable ) : ",
    "right" : "protected append(appendable ) : ",
    "info" : "MethodDeclaration[40578-40898]:MethodDeclaration[40613-40933]"
  }, {
    "left" : "public trimByVisibility() : ",
    "right" : "public trimByVisibility() : ",
    "info" : "MethodDeclaration[40908-41779]:MethodDeclaration[40943-41814]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[41797-42120]:MethodDeclaration[41832-42155]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[432-438]:Modifier[432-438]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[439-444]:TYPE_DECLARATION_KIND[439-444]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1405-1411]:Modifier[1405-1411]"
  }, {
    "left" : "POJOPropertyBuilder",
    "right" : "POJOPropertyBuilder",
    "info" : "SimpleName[1412-1431]:SimpleName[1412-1431]"
  }, {
    "left" : "MapperConfig<?> config",
    "right" : "MapperConfig<?> config",
    "info" : "SingleVariableDeclaration[1432-1454]:SingleVariableDeclaration[1432-1454]"
  }, {
    "left" : "AnnotationIntrospector ai",
    "right" : "AnnotationIntrospector ai",
    "info" : "SingleVariableDeclaration[1456-1481]:SingleVariableDeclaration[1456-1481]"
  }, {
    "left" : "boolean forSerialization",
    "right" : "boolean forSerialization",
    "info" : "SingleVariableDeclaration[1495-1519]:SingleVariableDeclaration[1495-1519]"
  }, {
    "left" : "PropertyName internalName",
    "right" : "PropertyName internalName",
    "info" : "SingleVariableDeclaration[1521-1546]:SingleVariableDeclaration[1521-1546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1548-1627]:Block[1548-1627]"
  }, {
    "left" : "this(config, ai, forSerialization, internalName, internalName);",
    "right" : "this(config, ai, forSerialization, internalName, internalName);",
    "info" : "ConstructorInvocation[1558-1621]:ConstructorInvocation[1558-1621]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[1633-1642]:Modifier[1633-1642]"
  }, {
    "left" : "POJOPropertyBuilder",
    "right" : "POJOPropertyBuilder",
    "info" : "SimpleName[1643-1662]:SimpleName[1643-1662]"
  }, {
    "left" : "MapperConfig<?> config",
    "right" : "MapperConfig<?> config",
    "info" : "SingleVariableDeclaration[1663-1685]:SingleVariableDeclaration[1663-1685]"
  }, {
    "left" : "AnnotationIntrospector ai",
    "right" : "AnnotationIntrospector ai",
    "info" : "SingleVariableDeclaration[1687-1712]:SingleVariableDeclaration[1687-1712]"
  }, {
    "left" : "boolean forSerialization",
    "right" : "boolean forSerialization",
    "info" : "SingleVariableDeclaration[1726-1750]:SingleVariableDeclaration[1726-1750]"
  }, {
    "left" : "PropertyName internalName",
    "right" : "PropertyName internalName",
    "info" : "SingleVariableDeclaration[1752-1777]:SingleVariableDeclaration[1752-1777]"
  }, {
    "left" : "PropertyName name",
    "right" : "PropertyName name",
    "info" : "SingleVariableDeclaration[1779-1796]:SingleVariableDeclaration[1779-1796]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1802-1979]:Block[1802-1979]"
  }, {
    "left" : "_config = config;",
    "right" : "_config = config;",
    "info" : "ExpressionStatement[1812-1829]:ExpressionStatement[1812-1829]"
  }, {
    "left" : "_annotationIntrospector = ai;",
    "right" : "_annotationIntrospector = ai;",
    "info" : "ExpressionStatement[1838-1867]:ExpressionStatement[1838-1867]"
  }, {
    "left" : "_internalName = internalName;",
    "right" : "_internalName = internalName;",
    "info" : "ExpressionStatement[1876-1905]:ExpressionStatement[1876-1905]"
  }, {
    "left" : "_name = name;",
    "right" : "_name = name;",
    "info" : "ExpressionStatement[1914-1927]:ExpressionStatement[1914-1927]"
  }, {
    "left" : "_forSerialization = forSerialization;",
    "right" : "_forSerialization = forSerialization;",
    "info" : "ExpressionStatement[1936-1973]:ExpressionStatement[1936-1973]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1985-1991]:Modifier[1985-1991]"
  }, {
    "left" : "POJOPropertyBuilder",
    "right" : "POJOPropertyBuilder",
    "info" : "SimpleName[1992-2011]:SimpleName[1992-2011]"
  }, {
    "left" : "POJOPropertyBuilder src",
    "right" : "POJOPropertyBuilder src",
    "info" : "SingleVariableDeclaration[2012-2035]:SingleVariableDeclaration[2012-2035]"
  }, {
    "left" : "PropertyName newName",
    "right" : "PropertyName newName",
    "info" : "SingleVariableDeclaration[2037-2057]:SingleVariableDeclaration[2037-2057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2063-2427]:Block[2063-2427]"
  }, {
    "left" : "_config = src._config;",
    "right" : "_config = src._config;",
    "info" : "ExpressionStatement[2073-2095]:ExpressionStatement[2073-2095]"
  }, {
    "left" : "_annotationIntrospector = src._annotationIntrospector;",
    "right" : "_annotationIntrospector = src._annotationIntrospector;",
    "info" : "ExpressionStatement[2104-2158]:ExpressionStatement[2104-2158]"
  }, {
    "left" : "_internalName = src._internalName;",
    "right" : "_internalName = src._internalName;",
    "info" : "ExpressionStatement[2167-2201]:ExpressionStatement[2167-2201]"
  }, {
    "left" : "_name = newName;",
    "right" : "_name = newName;",
    "info" : "ExpressionStatement[2210-2226]:ExpressionStatement[2210-2226]"
  }, {
    "left" : "_fields = src._fields;",
    "right" : "_fields = src._fields;",
    "info" : "ExpressionStatement[2235-2257]:ExpressionStatement[2235-2257]"
  }, {
    "left" : "_ctorParameters = src._ctorParameters;",
    "right" : "_ctorParameters = src._ctorParameters;",
    "info" : "ExpressionStatement[2266-2304]:ExpressionStatement[2266-2304]"
  }, {
    "left" : "_getters = src._getters;",
    "right" : "_getters = src._getters;",
    "info" : "ExpressionStatement[2313-2337]:ExpressionStatement[2313-2337]"
  }, {
    "left" : "_setters = src._setters;",
    "right" : "_setters = src._setters;",
    "info" : "ExpressionStatement[2346-2370]:ExpressionStatement[2346-2370]"
  }, {
    "left" : "_forSerialization = src._forSerialization;",
    "right" : "_forSerialization = src._forSerialization;",
    "info" : "ExpressionStatement[2379-2421]:ExpressionStatement[2379-2421]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[2611-2620]:MarkerAnnotation[2611-2620]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2625-2631]:Modifier[2625-2631]"
  }, {
    "left" : "POJOPropertyBuilder",
    "right" : "POJOPropertyBuilder",
    "info" : "SimpleType[2632-2651]:SimpleType[2632-2651]"
  }, {
    "left" : "withName",
    "right" : "withName",
    "info" : "SimpleName[2652-2660]:SimpleName[2652-2660]"
  }, {
    "left" : "PropertyName newName",
    "right" : "PropertyName newName",
    "info" : "SingleVariableDeclaration[2661-2681]:SingleVariableDeclaration[2661-2681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2683-2745]:Block[2683-2745]"
  }, {
    "left" : "return new POJOPropertyBuilder(this, newName);",
    "right" : "return new POJOPropertyBuilder(this, newName);",
    "info" : "ReturnStatement[2693-2739]:ReturnStatement[2693-2739]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[2751-2760]:MarkerAnnotation[2751-2760]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2765-2771]:Modifier[2765-2771]"
  }, {
    "left" : "POJOPropertyBuilder",
    "right" : "POJOPropertyBuilder",
    "info" : "SimpleType[2772-2791]:SimpleType[2772-2791]"
  }, {
    "left" : "withSimpleName",
    "right" : "withSimpleName",
    "info" : "SimpleName[2792-2806]:SimpleName[2792-2806]"
  }, {
    "left" : "String newSimpleName",
    "right" : "String newSimpleName",
    "info" : "SingleVariableDeclaration[2807-2827]:SingleVariableDeclaration[2807-2827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2833-2991]:Block[2833-2991]"
  }, {
    "left" : "PropertyName newName = _name.withSimpleName(newSimpleName);",
    "right" : "PropertyName newName = _name.withSimpleName(newSimpleName);",
    "info" : "VariableDeclarationStatement[2843-2902]:VariableDeclarationStatement[2843-2902]"
  }, {
    "left" : "return (newName == _name) ? this : new POJOPropertyBuilder(this, newName);",
    "right" : "return (newName == _name) ? this : new POJOPropertyBuilder(this, newName);",
    "info" : "ReturnStatement[2911-2985]:ReturnStatement[2911-2985]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3296-3305]:MarkerAnnotation[3296-3305]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3310-3316]:Modifier[3310-3316]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3317-3320]:PrimitiveType[3317-3320]"
  }, {
    "left" : "compareTo",
    "right" : "compareTo",
    "info" : "SimpleName[3321-3330]:SimpleName[3321-3330]"
  }, {
    "left" : "POJOPropertyBuilder other",
    "right" : "POJOPropertyBuilder other",
    "info" : "SingleVariableDeclaration[3331-3356]:SingleVariableDeclaration[3331-3356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3362-3806]:Block[3362-3806]"
  }, {
    "left" : "if (_ctorParameters != null)",
    "right" : "if (_ctorParameters != null)",
    "info" : "IfStatement[3438-3642]:IfStatement[3438-3642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3467-3568]:Block[3467-3568]"
  }, {
    "left" : "if (other._ctorParameters == null)",
    "right" : "if (other._ctorParameters == null)",
    "info" : "IfStatement[3481-3558]:IfStatement[3481-3558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3516-3558]:Block[3516-3558]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[3534-3544]:ReturnStatement[3534-3544]"
  }, {
    "left" : "if (other._ctorParameters != null)",
    "right" : "if (other._ctorParameters != null)",
    "info" : "IfStatement[3574-3642]:IfStatement[3574-3642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3609-3642]:Block[3609-3642]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[3623-3632]:ReturnStatement[3623-3632]"
  }, {
    "left" : "return getName().compareTo(other.getName());",
    "right" : "return getName().compareTo(other.getName());",
    "info" : "ReturnStatement[3756-3800]:ReturnStatement[3756-3800]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4012-4021]:MarkerAnnotation[4012-4021]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4026-4032]:Modifier[4026-4032]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4033-4039]:SimpleType[4033-4039]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[4040-4047]:SimpleName[4040-4047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4050-4120]:Block[4050-4120]"
  }, {
    "left" : "return (_name == null) ? null : _name.getSimpleName();",
    "right" : "return (_name == null) ? null : _name.getSimpleName();",
    "info" : "ReturnStatement[4060-4114]:ReturnStatement[4060-4114]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4126-4135]:MarkerAnnotation[4126-4135]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4140-4146]:Modifier[4140-4146]"
  }, {
    "left" : "PropertyName",
    "right" : "PropertyName",
    "info" : "SimpleType[4147-4159]:SimpleType[4147-4159]"
  }, {
    "left" : "getFullName",
    "right" : "getFullName",
    "info" : "SimpleName[4160-4171]:SimpleName[4160-4171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4174-4203]:Block[4174-4203]"
  }, {
    "left" : "return _name;",
    "right" : "return _name;",
    "info" : "ReturnStatement[4184-4197]:ReturnStatement[4184-4197]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4209-4218]:MarkerAnnotation[4209-4218]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4223-4229]:Modifier[4223-4229]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[4230-4237]:PrimitiveType[4230-4237]"
  }, {
    "left" : "hasName",
    "right" : "hasName",
    "info" : "SimpleName[4238-4245]:SimpleName[4238-4245]"
  }, {
    "left" : "PropertyName name",
    "right" : "PropertyName name",
    "info" : "SingleVariableDeclaration[4246-4263]:SingleVariableDeclaration[4246-4263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4265-4307]:Block[4265-4307]"
  }, {
    "left" : "return _name.equals(name);",
    "right" : "return _name.equals(name);",
    "info" : "ReturnStatement[4275-4301]:ReturnStatement[4275-4301]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4313-4322]:MarkerAnnotation[4313-4322]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4327-4333]:Modifier[4327-4333]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4334-4340]:SimpleType[4334-4340]"
  }, {
    "left" : "getInternalName",
    "right" : "getInternalName",
    "info" : "SimpleName[4341-4356]:SimpleName[4341-4356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4359-4400]:Block[4359-4400]"
  }, {
    "left" : "return _internalName.getSimpleName();",
    "right" : "return _internalName.getSimpleName();",
    "info" : "ReturnStatement[4361-4398]:ReturnStatement[4361-4398]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4406-4415]:MarkerAnnotation[4406-4415]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4420-4426]:Modifier[4420-4426]"
  }, {
    "left" : "PropertyName",
    "right" : "PropertyName",
    "info" : "SimpleType[4427-4439]:SimpleType[4427-4439]"
  }, {
    "left" : "getWrapperName",
    "right" : "getWrapperName",
    "info" : "SimpleName[4440-4454]:SimpleName[4440-4454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4457-5229]:Block[4457-5229]"
  }, {
    "left" : "AnnotatedMember member = getPrimaryMember();",
    "right" : "AnnotatedMember member = getPrimaryMember();",
    "info" : "VariableDeclarationStatement[4760-4804]:VariableDeclarationStatement[4760-4804]"
  }, {
    "left" : "return (member == null || _annotationIntrospector == null) ? null\n                : _annotationIntrospector.findWrapperName(member);",
    "right" : "return (member == null || _annotationIntrospector == null) ? null\n                : _annotationIntrospector.findWrapperName(member);",
    "info" : "ReturnStatement[4813-4945]:ReturnStatement[4813-4945]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5235-5244]:MarkerAnnotation[5235-5244]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5249-5255]:Modifier[5249-5255]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5256-5263]:PrimitiveType[5256-5263]"
  }, {
    "left" : "isExplicitlyIncluded",
    "right" : "isExplicitlyIncluded",
    "info" : "SimpleName[5264-5284]:SimpleName[5264-5284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5287-5796]:Block[5287-5796]"
  }, {
    "left" : "return _anyExplicits(_fields)\n                || _anyExplicits(_getters)\n                || _anyExplicits(_setters)\n                // 16-Jan-2016, tatu: Creator names are special, in that name should exist too;\n                //   reason for this is [databind#1317]. Let's hope this works well, may need\n                //   to tweak further if this lowers visibility\n//                || _anyExplicits(_ctorParameters)\n                || _anyExplicitNames(_ctorParameters)\n                ;",
    "right" : "return _anyExplicits(_fields)\n                || _anyExplicits(_getters)\n                || _anyExplicits(_setters)\n                // 16-Jan-2016, tatu: Creator names are special, in that name should exist too;\n                //   reason for this is [databind#1317]. Let's hope this works well, may need\n                //   to tweak further if this lowers visibility\n//                || _anyExplicits(_ctorParameters)\n                || _anyExplicitNames(_ctorParameters)\n                ;",
    "info" : "ReturnStatement[5297-5790]:ReturnStatement[5297-5790]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5802-5811]:MarkerAnnotation[5802-5811]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5816-5822]:Modifier[5816-5822]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5823-5830]:PrimitiveType[5823-5830]"
  }, {
    "left" : "isExplicitlyNamed",
    "right" : "isExplicitlyNamed",
    "info" : "SimpleName[5831-5848]:SimpleName[5831-5848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5851-6066]:Block[5851-6066]"
  }, {
    "left" : "return _anyExplicitNames(_fields)\n                || _anyExplicitNames(_getters)\n                || _anyExplicitNames(_setters)\n                || _anyExplicitNames(_ctorParameters)\n                ;",
    "right" : "return _anyExplicitNames(_fields)\n                || _anyExplicitNames(_getters)\n                || _anyExplicitNames(_setters)\n                || _anyExplicitNames(_ctorParameters)\n                ;",
    "info" : "ReturnStatement[5861-6060]:ReturnStatement[5861-6060]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6282-6291]:MarkerAnnotation[6282-6291]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6296-6302]:Modifier[6296-6302]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6303-6310]:PrimitiveType[6303-6310]"
  }, {
    "left" : "hasGetter",
    "right" : "hasGetter",
    "info" : "SimpleName[6311-6320]:SimpleName[6311-6320]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6323-6351]:Block[6323-6351]"
  }, {
    "left" : "return _getters != null;",
    "right" : "return _getters != null;",
    "info" : "ReturnStatement[6325-6349]:ReturnStatement[6325-6349]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6357-6366]:MarkerAnnotation[6357-6366]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6371-6377]:Modifier[6371-6377]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6378-6385]:PrimitiveType[6378-6385]"
  }, {
    "left" : "hasSetter",
    "right" : "hasSetter",
    "info" : "SimpleName[6386-6395]:SimpleName[6386-6395]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6398-6426]:Block[6398-6426]"
  }, {
    "left" : "return _setters != null;",
    "right" : "return _setters != null;",
    "info" : "ReturnStatement[6400-6424]:ReturnStatement[6400-6424]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6432-6441]:MarkerAnnotation[6432-6441]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6446-6452]:Modifier[6446-6452]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6453-6460]:PrimitiveType[6453-6460]"
  }, {
    "left" : "hasField",
    "right" : "hasField",
    "info" : "SimpleName[6461-6469]:SimpleName[6461-6469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6472-6499]:Block[6472-6499]"
  }, {
    "left" : "return _fields != null;",
    "right" : "return _fields != null;",
    "info" : "ReturnStatement[6474-6497]:ReturnStatement[6474-6497]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6505-6514]:MarkerAnnotation[6505-6514]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6519-6525]:Modifier[6519-6525]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6526-6533]:PrimitiveType[6526-6533]"
  }, {
    "left" : "hasConstructorParameter",
    "right" : "hasConstructorParameter",
    "info" : "SimpleName[6534-6557]:SimpleName[6534-6557]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6560-6595]:Block[6560-6595]"
  }, {
    "left" : "return _ctorParameters != null;",
    "right" : "return _ctorParameters != null;",
    "info" : "ReturnStatement[6562-6593]:ReturnStatement[6562-6593]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6601-6610]:MarkerAnnotation[6601-6610]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6615-6621]:Modifier[6615-6621]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6622-6629]:PrimitiveType[6622-6629]"
  }, {
    "left" : "couldDeserialize",
    "right" : "couldDeserialize",
    "info" : "SimpleName[6630-6646]:SimpleName[6630-6646]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6649-6741]:Block[6649-6741]"
  }, {
    "left" : "return (_ctorParameters != null) || (_setters != null) || (_fields != null);",
    "right" : "return (_ctorParameters != null) || (_setters != null) || (_fields != null);",
    "info" : "ReturnStatement[6659-6735]:ReturnStatement[6659-6735]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6747-6756]:MarkerAnnotation[6747-6756]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6761-6767]:Modifier[6761-6767]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6768-6775]:PrimitiveType[6768-6775]"
  }, {
    "left" : "couldSerialize",
    "right" : "couldSerialize",
    "info" : "SimpleName[6776-6790]:SimpleName[6776-6790]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6793-6856]:Block[6793-6856]"
  }, {
    "left" : "return (_getters != null) || (_fields != null);",
    "right" : "return (_getters != null) || (_fields != null);",
    "info" : "ReturnStatement[6803-6850]:ReturnStatement[6803-6850]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6862-6871]:MarkerAnnotation[6862-6871]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6876-6882]:Modifier[6876-6882]"
  }, {
    "left" : "AnnotatedMethod",
    "right" : "AnnotatedMethod",
    "info" : "SimpleType[6883-6898]:SimpleType[6883-6898]"
  }, {
    "left" : "getGetter",
    "right" : "getGetter",
    "info" : "SimpleName[6899-6908]:SimpleName[6899-6908]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6915-8779]:Block[6915-8779]"
  }, {
    "left" : "Linked<AnnotatedMethod> curr = _getters;",
    "right" : "Linked<AnnotatedMethod> curr = _getters;",
    "info" : "VariableDeclarationStatement[6969-7009]:VariableDeclarationStatement[6969-7009]"
  }, {
    "left" : "if (curr == null)",
    "right" : "if (curr == null)",
    "info" : "IfStatement[7018-7072]:IfStatement[7018-7072]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7036-7072]:Block[7036-7072]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[7050-7062]:ReturnStatement[7050-7062]"
  }, {
    "left" : "Linked<AnnotatedMethod> next = curr.next;",
    "right" : "Linked<AnnotatedMethod> next = curr.next;",
    "info" : "VariableDeclarationStatement[7081-7122]:VariableDeclarationStatement[7081-7122]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[7131-7191]:IfStatement[7131-7191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7149-7191]:Block[7149-7191]"
  }, {
    "left" : "return curr.value;",
    "right" : "return curr.value;",
    "info" : "ReturnStatement[7163-7181]:ReturnStatement[7163-7181]"
  }, {
    "left" : "for (; next != null; next = next.next)",
    "right" : "for (; next != null; next = next.next)",
    "info" : "ForStatement[7264-8646]:ForStatement[7264-8646]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7303-8646]:Block[7303-8646]"
  }, {
    "left" : "Class<?> currClass = curr.value.getDeclaringClass();",
    "right" : "Class<?> currClass = curr.value.getDeclaringClass();",
    "info" : "VariableDeclarationStatement[7463-7515]:VariableDeclarationStatement[7463-7515]"
  }, {
    "left" : "Class<?> nextClass = next.value.getDeclaringClass();",
    "right" : "Class<?> nextClass = next.value.getDeclaringClass();",
    "info" : "VariableDeclarationStatement[7528-7580]:VariableDeclarationStatement[7528-7580]"
  }, {
    "left" : "if (currClass != nextClass)",
    "right" : "if (currClass != nextClass)",
    "info" : "IfStatement[7593-7937]:IfStatement[7593-7937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7621-7937]:Block[7621-7937]"
  }, {
    "left" : "if (currClass.isAssignableFrom(nextClass))",
    "right" : "if (currClass.isAssignableFrom(nextClass))",
    "info" : "IfStatement[7639-7789]:IfStatement[7639-7789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7682-7789]:Block[7682-7789]"
  }, {
    "left" : "curr = next;",
    "right" : "curr = next;",
    "info" : "ExpressionStatement[7729-7741]:ExpressionStatement[7729-7741]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[7762-7771]:ContinueStatement[7762-7771]"
  }, {
    "left" : "if (nextClass.isAssignableFrom(currClass))",
    "right" : "if (nextClass.isAssignableFrom(currClass))",
    "info" : "IfStatement[7806-7923]:IfStatement[7806-7923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7849-7923]:Block[7849-7923]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[7896-7905]:ContinueStatement[7896-7905]"
  }, {
    "left" : "int priNext = _getterPriority(next.value);",
    "right" : "int priNext = _getterPriority(next.value);",
    "info" : "VariableDeclarationStatement[8175-8217]:VariableDeclarationStatement[8175-8217]"
  }, {
    "left" : "int priCurr = _getterPriority(curr.value);",
    "right" : "int priCurr = _getterPriority(curr.value);",
    "info" : "VariableDeclarationStatement[8230-8272]:VariableDeclarationStatement[8230-8272]"
  }, {
    "left" : "if (priNext != priCurr)",
    "right" : "if (priNext != priCurr)",
    "info" : "IfStatement[8286-8443]:IfStatement[8286-8443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8310-8443]:Block[8310-8443]"
  }, {
    "left" : "if (priNext < priCurr)",
    "right" : "if (priNext < priCurr)",
    "info" : "IfStatement[8328-8403]:IfStatement[8328-8403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8351-8403]:Block[8351-8403]"
  }, {
    "left" : "curr = next;",
    "right" : "curr = next;",
    "info" : "ExpressionStatement[8373-8385]:ExpressionStatement[8373-8385]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[8420-8429]:ContinueStatement[8420-8429]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Conflicting getter definitions for property \\\"\"+getName()+\"\\\": \"\n                    +curr.value.getFullName()+\" vs \"+next.value.getFullName());",
    "right" : "throw new IllegalArgumentException(\"Conflicting getter definitions for property \\\"\"+getName()+\"\\\": \"\n                    +curr.value.getFullName()+\" vs \"+next.value.getFullName());",
    "info" : "ThrowStatement[8456-8636]:ThrowStatement[8456-8636]"
  }, {
    "left" : "_getters = curr.withoutNext();",
    "right" : "_getters = curr.withoutNext();",
    "info" : "ExpressionStatement[8716-8746]:ExpressionStatement[8716-8746]"
  }, {
    "left" : "return curr.value;",
    "right" : "return curr.value;",
    "info" : "ReturnStatement[8755-8773]:ReturnStatement[8755-8773]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8789-8798]:MarkerAnnotation[8789-8798]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8803-8809]:Modifier[8803-8809]"
  }, {
    "left" : "AnnotatedMethod",
    "right" : "AnnotatedMethod",
    "info" : "SimpleType[8810-8825]:SimpleType[8810-8825]"
  }, {
    "left" : "getSetter",
    "right" : "getSetter",
    "info" : "SimpleName[8826-8835]:SimpleName[8826-8835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8842-11292]:Block[8842-11292]"
  }, {
    "left" : "Linked<AnnotatedMethod> curr = _setters;",
    "right" : "Linked<AnnotatedMethod> curr = _setters;",
    "info" : "VariableDeclarationStatement[8896-8936]:VariableDeclarationStatement[8896-8936]"
  }, {
    "left" : "if (curr == null)",
    "right" : "if (curr == null)",
    "info" : "IfStatement[8945-8999]:IfStatement[8945-8999]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8963-8999]:Block[8963-8999]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[8977-8989]:ReturnStatement[8977-8989]"
  }, {
    "left" : "Linked<AnnotatedMethod> next = curr.next;",
    "right" : "Linked<AnnotatedMethod> next = curr.next;",
    "info" : "VariableDeclarationStatement[9008-9049]:VariableDeclarationStatement[9008-9049]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[9058-9118]:IfStatement[9058-9118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9076-9118]:Block[9076-9118]"
  }, {
    "left" : "return curr.value;",
    "right" : "return curr.value;",
    "info" : "ReturnStatement[9090-9108]:ReturnStatement[9090-9108]"
  }, {
    "left" : "for (; next != null; next = next.next)",
    "right" : "for (; next != null; next = next.next)",
    "info" : "ForStatement[9191-11159]:ForStatement[9191-11159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9230-11159]:Block[9230-11159]"
  }, {
    "left" : "Class<?> currClass = curr.value.getDeclaringClass();",
    "right" : "Class<?> currClass = curr.value.getDeclaringClass();",
    "info" : "VariableDeclarationStatement[9331-9383]:VariableDeclarationStatement[9331-9383]"
  }, {
    "left" : "Class<?> nextClass = next.value.getDeclaringClass();",
    "right" : "Class<?> nextClass = next.value.getDeclaringClass();",
    "info" : "VariableDeclarationStatement[9396-9448]:VariableDeclarationStatement[9396-9448]"
  }, {
    "left" : "if (currClass != nextClass)",
    "right" : "if (currClass != nextClass)",
    "info" : "IfStatement[9461-9805]:IfStatement[9461-9805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9489-9805]:Block[9489-9805]"
  }, {
    "left" : "if (currClass.isAssignableFrom(nextClass))",
    "right" : "if (currClass.isAssignableFrom(nextClass))",
    "info" : "IfStatement[9507-9657]:IfStatement[9507-9657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9550-9657]:Block[9550-9657]"
  }, {
    "left" : "curr = next;",
    "right" : "curr = next;",
    "info" : "ExpressionStatement[9597-9609]:ExpressionStatement[9597-9609]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[9630-9639]:ContinueStatement[9630-9639]"
  }, {
    "left" : "if (nextClass.isAssignableFrom(currClass))",
    "right" : "if (nextClass.isAssignableFrom(currClass))",
    "info" : "IfStatement[9674-9791]:IfStatement[9674-9791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9717-9791]:Block[9717-9791]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[9764-9773]:ContinueStatement[9764-9773]"
  }, {
    "left" : "AnnotatedMethod nextM = next.value;",
    "right" : "AnnotatedMethod nextM = next.value;",
    "info" : "VariableDeclarationStatement[9818-9853]:VariableDeclarationStatement[9818-9853]"
  }, {
    "left" : "AnnotatedMethod currM = curr.value;",
    "right" : "AnnotatedMethod currM = curr.value;",
    "info" : "VariableDeclarationStatement[9866-9901]:VariableDeclarationStatement[9866-9901]"
  }, {
    "left" : "int priNext = _setterPriority(nextM);",
    "right" : "int priNext = _setterPriority(nextM);",
    "info" : "VariableDeclarationStatement[10111-10148]:VariableDeclarationStatement[10111-10148]"
  }, {
    "left" : "int priCurr = _setterPriority(currM);",
    "right" : "int priCurr = _setterPriority(currM);",
    "info" : "VariableDeclarationStatement[10161-10198]:VariableDeclarationStatement[10161-10198]"
  }, {
    "left" : "if (priNext != priCurr)",
    "right" : "if (priNext != priCurr)",
    "info" : "IfStatement[10212-10369]:IfStatement[10212-10369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10236-10369]:Block[10236-10369]"
  }, {
    "left" : "if (priNext < priCurr)",
    "right" : "if (priNext < priCurr)",
    "info" : "IfStatement[10254-10329]:IfStatement[10254-10329]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10277-10329]:Block[10277-10329]"
  }, {
    "left" : "curr = next;",
    "right" : "curr = next;",
    "info" : "ExpressionStatement[10299-10311]:ExpressionStatement[10299-10311]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[10346-10355]:ContinueStatement[10346-10355]"
  }, {
    "left" : "if (_annotationIntrospector != null)",
    "right" : "if (_annotationIntrospector != null)",
    "info" : "IfStatement[10475-10956]:IfStatement[10475-10956]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10512-10956]:Block[10512-10956]"
  }, {
    "left" : "AnnotatedMethod pref = _annotationIntrospector.resolveSetterConflict(_config,\n                        currM, nextM);",
    "right" : "AnnotatedMethod pref = _annotationIntrospector.resolveSetterConflict(_config,\n                        currM, nextM);",
    "info" : "VariableDeclarationStatement[10530-10646]:VariableDeclarationStatement[10530-10646]"
  }, {
    "left" : "if (pref == currM)",
    "right" : "if (pref == currM)",
    "info" : "IfStatement[10756-10824]:IfStatement[10756-10824]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10775-10824]:Block[10775-10824]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[10797-10806]:ContinueStatement[10797-10806]"
  }, {
    "left" : "if (pref == nextM)",
    "right" : "if (pref == nextM)",
    "info" : "IfStatement[10841-10942]:IfStatement[10841-10942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10860-10942]:Block[10860-10942]"
  }, {
    "left" : "curr = next;",
    "right" : "curr = next;",
    "info" : "ExpressionStatement[10882-10894]:ExpressionStatement[10882-10894]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[10915-10924]:ContinueStatement[10915-10924]"
  }, {
    "left" : "throw new IllegalArgumentException(String.format(\n \"Conflicting setter definitions for property \\\"%s\\\": %s vs %s\",\n getName(), curr.value.getFullName(), next.value.getFullName()));",
    "right" : "throw new IllegalArgumentException(String.format(\n \"Conflicting setter definitions for property \\\"%s\\\": %s vs %s\",\n getName(), curr.value.getFullName(), next.value.getFullName()));",
    "info" : "ThrowStatement[10969-11149]:ThrowStatement[10969-11149]"
  }, {
    "left" : "_setters = curr.withoutNext();",
    "right" : "_setters = curr.withoutNext();",
    "info" : "ExpressionStatement[11229-11259]:ExpressionStatement[11229-11259]"
  }, {
    "left" : "return curr.value;",
    "right" : "return curr.value;",
    "info" : "ReturnStatement[11268-11286]:ReturnStatement[11268-11286]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[11298-11307]:MarkerAnnotation[11298-11307]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11312-11318]:Modifier[11312-11318]"
  }, {
    "left" : "AnnotatedField",
    "right" : "AnnotatedField",
    "info" : "SimpleType[11319-11333]:SimpleType[11319-11333]"
  }, {
    "left" : "getField",
    "right" : "getField",
    "info" : "SimpleName[11334-11342]:SimpleName[11334-11342]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11349-12383]:Block[11349-12383]"
  }, {
    "left" : "if (_fields == null)",
    "right" : "if (_fields == null)",
    "info" : "IfStatement[11359-11416]:IfStatement[11359-11416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11380-11416]:Block[11380-11416]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[11394-11406]:ReturnStatement[11394-11406]"
  }, {
    "left" : "AnnotatedField field = _fields.value;",
    "right" : "AnnotatedField field = _fields.value;",
    "info" : "VariableDeclarationStatement[11485-11522]:VariableDeclarationStatement[11485-11522]"
  }, {
    "left" : "Linked<AnnotatedField> next = _fields.next;",
    "right" : "Linked<AnnotatedField> next = _fields.next;",
    "info" : "VariableDeclarationStatement[11531-11574]:VariableDeclarationStatement[11531-11574]"
  }, {
    "left" : "for (; next != null; next = next.next)",
    "right" : "for (; next != null; next = next.next)",
    "info" : "ForStatement[11583-12355]:ForStatement[11583-12355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11622-12355]:Block[11622-12355]"
  }, {
    "left" : "AnnotatedField nextField = next.value;",
    "right" : "AnnotatedField nextField = next.value;",
    "info" : "VariableDeclarationStatement[11636-11674]:VariableDeclarationStatement[11636-11674]"
  }, {
    "left" : "Class<?> fieldClass = field.getDeclaringClass();",
    "right" : "Class<?> fieldClass = field.getDeclaringClass();",
    "info" : "VariableDeclarationStatement[11687-11735]:VariableDeclarationStatement[11687-11735]"
  }, {
    "left" : "Class<?> nextClass = nextField.getDeclaringClass();",
    "right" : "Class<?> nextClass = nextField.getDeclaringClass();",
    "info" : "VariableDeclarationStatement[11748-11799]:VariableDeclarationStatement[11748-11799]"
  }, {
    "left" : "if (fieldClass != nextClass)",
    "right" : "if (fieldClass != nextClass)",
    "info" : "IfStatement[11812-12164]:IfStatement[11812-12164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11841-12164]:Block[11841-12164]"
  }, {
    "left" : "if (fieldClass.isAssignableFrom(nextClass))",
    "right" : "if (fieldClass.isAssignableFrom(nextClass))",
    "info" : "IfStatement[11859-12016]:IfStatement[11859-12016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11903-12016]:Block[11903-12016]"
  }, {
    "left" : "field = nextField;",
    "right" : "field = nextField;",
    "info" : "ExpressionStatement[11950-11968]:ExpressionStatement[11950-11968]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[11989-11998]:ContinueStatement[11989-11998]"
  }, {
    "left" : "if (nextClass.isAssignableFrom(fieldClass))",
    "right" : "if (nextClass.isAssignableFrom(fieldClass))",
    "info" : "IfStatement[12033-12150]:IfStatement[12033-12150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12077-12150]:Block[12077-12150]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[12123-12132]:ContinueStatement[12123-12132]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Multiple fields representing property \\\"\"+getName()+\"\\\": \"\n                    +field.getFullName()+\" vs \"+nextField.getFullName());",
    "right" : "throw new IllegalArgumentException(\"Multiple fields representing property \\\"\"+getName()+\"\\\": \"\n                    +field.getFullName()+\" vs \"+nextField.getFullName());",
    "info" : "ThrowStatement[12177-12345]:ThrowStatement[12177-12345]"
  }, {
    "left" : "return field;",
    "right" : "return field;",
    "info" : "ReturnStatement[12364-12377]:ReturnStatement[12364-12377]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[12389-12398]:MarkerAnnotation[12389-12398]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12403-12409]:Modifier[12403-12409]"
  }, {
    "left" : "AnnotatedParameter",
    "right" : "AnnotatedParameter",
    "info" : "SimpleType[12410-12428]:SimpleType[12410-12428]"
  }, {
    "left" : "getConstructorParameter",
    "right" : "getConstructorParameter",
    "info" : "SimpleName[12429-12452]:SimpleName[12429-12452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12459-13275]:Block[12459-13275]"
  }, {
    "left" : "if (_ctorParameters == null)",
    "right" : "if (_ctorParameters == null)",
    "info" : "IfStatement[12469-12534]:IfStatement[12469-12534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12498-12534]:Block[12498-12534]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12512-12524]:ReturnStatement[12512-12524]"
  }, {
    "left" : "Linked<AnnotatedParameter> curr = _ctorParameters;",
    "right" : "Linked<AnnotatedParameter> curr = _ctorParameters;",
    "info" : "VariableDeclarationStatement[12984-13034]:VariableDeclarationStatement[12984-13034]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[13043-13231]:DoStatement[13043-13231]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13046-13209]:Block[13046-13209]"
  }, {
    "left" : "if (curr.value.getOwner() instanceof AnnotatedConstructor)",
    "right" : "if (curr.value.getOwner() instanceof AnnotatedConstructor)",
    "info" : "IfStatement[13060-13169]:IfStatement[13060-13169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13119-13169]:Block[13119-13169]"
  }, {
    "left" : "return curr.value;",
    "right" : "return curr.value;",
    "info" : "ReturnStatement[13137-13155]:ReturnStatement[13137-13155]"
  }, {
    "left" : "curr = curr.next;",
    "right" : "curr = curr.next;",
    "info" : "ExpressionStatement[13182-13199]:ExpressionStatement[13182-13199]"
  }, {
    "left" : "return _ctorParameters.value;",
    "right" : "return _ctorParameters.value;",
    "info" : "ReturnStatement[13240-13269]:ReturnStatement[13240-13269]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[13281-13290]:MarkerAnnotation[13281-13290]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13295-13301]:Modifier[13295-13301]"
  }, {
    "left" : "Iterator<AnnotatedParameter>",
    "right" : "Iterator<AnnotatedParameter>",
    "info" : "ParameterizedType[13302-13330]:ParameterizedType[13302-13330]"
  }, {
    "left" : "getConstructorParameters",
    "right" : "getConstructorParameters",
    "info" : "SimpleName[13331-13355]:SimpleName[13331-13355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13358-13532]:Block[13358-13532]"
  }, {
    "left" : "if (_ctorParameters == null)",
    "right" : "if (_ctorParameters == null)",
    "info" : "IfStatement[13368-13454]:IfStatement[13368-13454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13397-13454]:Block[13397-13454]"
  }, {
    "left" : "return ClassUtil.emptyIterator();",
    "right" : "return ClassUtil.emptyIterator();",
    "info" : "ReturnStatement[13411-13444]:ReturnStatement[13411-13444]"
  }, {
    "left" : "return new MemberIterator<AnnotatedParameter>(_ctorParameters);",
    "right" : "return new MemberIterator<AnnotatedParameter>(_ctorParameters);",
    "info" : "ReturnStatement[13463-13526]:ReturnStatement[13463-13526]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[13542-13551]:MarkerAnnotation[13542-13551]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13556-13562]:Modifier[13556-13562]"
  }, {
    "left" : "AnnotatedMember",
    "right" : "AnnotatedMember",
    "info" : "SimpleType[13563-13578]:SimpleType[13563-13578]"
  }, {
    "left" : "getAccessor",
    "right" : "getAccessor",
    "info" : "SimpleName[13579-13590]:SimpleName[13579-13590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13597-13726]:Block[13597-13726]"
  }, {
    "left" : "AnnotatedMember m = getGetter();",
    "right" : "AnnotatedMember m = getGetter();",
    "info" : "VariableDeclarationStatement[13607-13639]:VariableDeclarationStatement[13607-13639]"
  }, {
    "left" : "if (m == null)",
    "right" : "if (m == null)",
    "info" : "IfStatement[13648-13702]:IfStatement[13648-13702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13663-13702]:Block[13663-13702]"
  }, {
    "left" : "m = getField();",
    "right" : "m = getField();",
    "info" : "ExpressionStatement[13677-13692]:ExpressionStatement[13677-13692]"
  }, {
    "left" : "return m;",
    "right" : "return m;",
    "info" : "ReturnStatement[13711-13720]:ReturnStatement[13711-13720]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[13732-13741]:MarkerAnnotation[13732-13741]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13746-13752]:Modifier[13746-13752]"
  }, {
    "left" : "AnnotatedMember",
    "right" : "AnnotatedMember",
    "info" : "SimpleType[13753-13768]:SimpleType[13753-13768]"
  }, {
    "left" : "getMutator",
    "right" : "getMutator",
    "info" : "SimpleName[13769-13779]:SimpleName[13769-13779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13786-14005]:Block[13786-14005]"
  }, {
    "left" : "AnnotatedMember m = getConstructorParameter();",
    "right" : "AnnotatedMember m = getConstructorParameter();",
    "info" : "VariableDeclarationStatement[13796-13842]:VariableDeclarationStatement[13796-13842]"
  }, {
    "left" : "if (m == null)",
    "right" : "if (m == null)",
    "info" : "IfStatement[13851-13981]:IfStatement[13851-13981]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13866-13981]:Block[13866-13981]"
  }, {
    "left" : "m = getSetter();",
    "right" : "m = getSetter();",
    "info" : "ExpressionStatement[13880-13896]:ExpressionStatement[13880-13896]"
  }, {
    "left" : "if (m == null)",
    "right" : "if (m == null)",
    "info" : "IfStatement[13909-13971]:IfStatement[13909-13971]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13924-13971]:Block[13924-13971]"
  }, {
    "left" : "m = getField();",
    "right" : "m = getField();",
    "info" : "ExpressionStatement[13942-13957]:ExpressionStatement[13942-13957]"
  }, {
    "left" : "return m;",
    "right" : "return m;",
    "info" : "ReturnStatement[13990-13999]:ReturnStatement[13990-13999]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[14011-14020]:MarkerAnnotation[14011-14020]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14025-14031]:Modifier[14025-14031]"
  }, {
    "left" : "AnnotatedMember",
    "right" : "AnnotatedMember",
    "info" : "SimpleType[14032-14047]:SimpleType[14032-14047]"
  }, {
    "left" : "getNonConstructorMutator",
    "right" : "getNonConstructorMutator",
    "info" : "SimpleName[14048-14072]:SimpleName[14048-14072]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14075-14204]:Block[14075-14204]"
  }, {
    "left" : "AnnotatedMember m = getSetter();",
    "right" : "AnnotatedMember m = getSetter();",
    "info" : "VariableDeclarationStatement[14085-14117]:VariableDeclarationStatement[14085-14117]"
  }, {
    "left" : "if (m == null)",
    "right" : "if (m == null)",
    "info" : "IfStatement[14126-14180]:IfStatement[14126-14180]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14141-14180]:Block[14141-14180]"
  }, {
    "left" : "m = getField();",
    "right" : "m = getField();",
    "info" : "ExpressionStatement[14155-14170]:ExpressionStatement[14155-14170]"
  }, {
    "left" : "return m;",
    "right" : "return m;",
    "info" : "ReturnStatement[14189-14198]:ReturnStatement[14189-14198]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[14210-14219]:MarkerAnnotation[14210-14219]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14224-14230]:Modifier[14224-14230]"
  }, {
    "left" : "AnnotatedMember",
    "right" : "AnnotatedMember",
    "info" : "SimpleType[14231-14246]:SimpleType[14231-14246]"
  }, {
    "left" : "getPrimaryMember",
    "right" : "getPrimaryMember",
    "info" : "SimpleName[14247-14263]:SimpleName[14247-14263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14266-14379]:Block[14266-14379]"
  }, {
    "left" : "if (_forSerialization)",
    "right" : "if (_forSerialization)",
    "info" : "IfStatement[14276-14344]:IfStatement[14276-14344]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14299-14344]:Block[14299-14344]"
  }, {
    "left" : "return getAccessor();",
    "right" : "return getAccessor();",
    "info" : "ReturnStatement[14313-14334]:ReturnStatement[14313-14334]"
  }, {
    "left" : "return getMutator();",
    "right" : "return getMutator();",
    "info" : "ReturnStatement[14353-14373]:ReturnStatement[14353-14373]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[14385-14394]:Modifier[14385-14394]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[14395-14398]:PrimitiveType[14395-14398]"
  }, {
    "left" : "_getterPriority",
    "right" : "_getterPriority",
    "info" : "SimpleName[14399-14414]:SimpleName[14399-14414]"
  }, {
    "left" : "AnnotatedMethod m",
    "right" : "AnnotatedMethod m",
    "info" : "SingleVariableDeclaration[14415-14432]:SingleVariableDeclaration[14415-14432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14438-14815]:Block[14438-14815]"
  }, {
    "left" : "final String name = m.getName();",
    "right" : "final String name = m.getName();",
    "info" : "VariableDeclarationStatement[14448-14480]:VariableDeclarationStatement[14448-14480]"
  }, {
    "left" : "if (name.startsWith(\"get\") && name.length() > 3)",
    "right" : "if (name.startsWith(\"get\") && name.length() > 3)",
    "info" : "IfStatement[14572-14701]:IfStatement[14572-14701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14621-14701]:Block[14621-14701]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[14682-14691]:ReturnStatement[14682-14691]"
  }, {
    "left" : "if (name.startsWith(\"is\") && name.length() > 2)",
    "right" : "if (name.startsWith(\"is\") && name.length() > 2)",
    "info" : "IfStatement[14710-14791]:IfStatement[14710-14791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14758-14791]:Block[14758-14791]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[14772-14781]:ReturnStatement[14772-14781]"
  }, {
    "left" : "return 3;",
    "right" : "return 3;",
    "info" : "ReturnStatement[14800-14809]:ReturnStatement[14800-14809]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[14821-14830]:Modifier[14821-14830]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[14831-14834]:PrimitiveType[14831-14834]"
  }, {
    "left" : "_setterPriority",
    "right" : "_setterPriority",
    "info" : "SimpleName[14835-14850]:SimpleName[14835-14850]"
  }, {
    "left" : "AnnotatedMethod m",
    "right" : "AnnotatedMethod m",
    "info" : "SingleVariableDeclaration[14851-14868]:SingleVariableDeclaration[14851-14868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14874-15078]:Block[14874-15078]"
  }, {
    "left" : "final String name = m.getName();",
    "right" : "final String name = m.getName();",
    "info" : "VariableDeclarationStatement[14884-14916]:VariableDeclarationStatement[14884-14916]"
  }, {
    "left" : "if (name.startsWith(\"set\") && name.length() > 3)",
    "right" : "if (name.startsWith(\"set\") && name.length() > 3)",
    "info" : "IfStatement[14925-15054]:IfStatement[14925-15054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14974-15054]:Block[14974-15054]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[15035-15044]:ReturnStatement[15035-15044]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[15063-15072]:ReturnStatement[15063-15072]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15275-15284]:MarkerAnnotation[15275-15284]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15289-15295]:Modifier[15289-15295]"
  }, {
    "left" : "Class<?>[]",
    "right" : "Class<?>[]",
    "info" : "ArrayType[15296-15306]:ArrayType[15296-15306]"
  }, {
    "left" : "findViews",
    "right" : "findViews",
    "info" : "SimpleName[15307-15316]:SimpleName[15307-15316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15319-15575]:Block[15319-15575]"
  }, {
    "left" : "return fromMemberAnnotations(new WithMember<Class<?>[]>() {\n            @Override\n            public Class<?>[] withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findViews(member);\n            }\n        });",
    "right" : "return fromMemberAnnotations(new WithMember<Class<?>[]>() {\n            @Override\n            public Class<?>[] withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findViews(member);\n            }\n        });",
    "info" : "ReturnStatement[15329-15569]:ReturnStatement[15329-15569]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15401-15410]:MarkerAnnotation[15401-15410]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15423-15429]:Modifier[15423-15429]"
  }, {
    "left" : "Class<?>[]",
    "right" : "Class<?>[]",
    "info" : "ArrayType[15430-15440]:ArrayType[15430-15440]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[15441-15451]:SimpleName[15441-15451]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[15452-15474]:SingleVariableDeclaration[15452-15474]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15476-15557]:Block[15476-15557]"
  }, {
    "left" : "return _annotationIntrospector.findViews(member);",
    "right" : "return _annotationIntrospector.findViews(member);",
    "info" : "ReturnStatement[15494-15543]:ReturnStatement[15494-15543]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15581-15590]:MarkerAnnotation[15581-15590]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15595-15601]:Modifier[15595-15601]"
  }, {
    "left" : "AnnotationIntrospector.ReferenceProperty",
    "right" : "AnnotationIntrospector.ReferenceProperty",
    "info" : "SimpleType[15602-15642]:SimpleType[15602-15642]"
  }, {
    "left" : "findReferenceType",
    "right" : "findReferenceType",
    "info" : "SimpleName[15643-15660]:SimpleName[15643-15660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15663-15987]:Block[15663-15987]"
  }, {
    "left" : "return fromMemberAnnotations(new WithMember<AnnotationIntrospector.ReferenceProperty>() {\n            @Override\n            public AnnotationIntrospector.ReferenceProperty withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findReferenceType(member);\n            }\n        });",
    "right" : "return fromMemberAnnotations(new WithMember<AnnotationIntrospector.ReferenceProperty>() {\n            @Override\n            public AnnotationIntrospector.ReferenceProperty withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findReferenceType(member);\n            }\n        });",
    "info" : "ReturnStatement[15673-15981]:ReturnStatement[15673-15981]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15775-15784]:MarkerAnnotation[15775-15784]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15797-15803]:Modifier[15797-15803]"
  }, {
    "left" : "AnnotationIntrospector.ReferenceProperty",
    "right" : "AnnotationIntrospector.ReferenceProperty",
    "info" : "SimpleType[15804-15844]:SimpleType[15804-15844]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[15845-15855]:SimpleName[15845-15855]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[15856-15878]:SingleVariableDeclaration[15856-15878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15880-15969]:Block[15880-15969]"
  }, {
    "left" : "return _annotationIntrospector.findReferenceType(member);",
    "right" : "return _annotationIntrospector.findReferenceType(member);",
    "info" : "ReturnStatement[15898-15955]:ReturnStatement[15898-15955]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15993-16002]:MarkerAnnotation[15993-16002]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16007-16013]:Modifier[16007-16013]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16014-16021]:PrimitiveType[16014-16021]"
  }, {
    "left" : "isTypeId",
    "right" : "isTypeId",
    "info" : "SimpleName[16022-16030]:SimpleName[16022-16030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16033-16335]:Block[16033-16335]"
  }, {
    "left" : "Boolean b = fromMemberAnnotations(new WithMember<Boolean>() {\n            @Override\n            public Boolean withMember(AnnotatedMember member) {\n                return _annotationIntrospector.isTypeId(member);\n            }\n        });",
    "right" : "Boolean b = fromMemberAnnotations(new WithMember<Boolean>() {\n            @Override\n            public Boolean withMember(AnnotatedMember member) {\n                return _annotationIntrospector.isTypeId(member);\n            }\n        });",
    "info" : "VariableDeclarationStatement[16043-16281]:VariableDeclarationStatement[16043-16281]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16117-16126]:MarkerAnnotation[16117-16126]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16139-16145]:Modifier[16139-16145]"
  }, {
    "left" : "Boolean",
    "right" : "Boolean",
    "info" : "SimpleType[16146-16153]:SimpleType[16146-16153]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[16154-16164]:SimpleName[16154-16164]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[16165-16187]:SingleVariableDeclaration[16165-16187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16189-16269]:Block[16189-16269]"
  }, {
    "left" : "return _annotationIntrospector.isTypeId(member);",
    "right" : "return _annotationIntrospector.isTypeId(member);",
    "info" : "ReturnStatement[16207-16255]:ReturnStatement[16207-16255]"
  }, {
    "left" : "return (b != null) && b.booleanValue();",
    "right" : "return (b != null) && b.booleanValue();",
    "info" : "ReturnStatement[16290-16329]:ReturnStatement[16290-16329]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16341-16350]:MarkerAnnotation[16341-16350]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16355-16361]:Modifier[16355-16361]"
  }, {
    "left" : "PropertyMetadata",
    "right" : "PropertyMetadata",
    "info" : "SimpleType[16362-16378]:SimpleType[16362-16378]"
  }, {
    "left" : "getMetadata",
    "right" : "getMetadata",
    "info" : "SimpleName[16379-16390]:SimpleName[16379-16390]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16393-16888]:Block[16393-16888]"
  }, {
    "left" : "final Boolean b = _findRequired();",
    "right" : "final Boolean b = _findRequired();",
    "info" : "VariableDeclarationStatement[16403-16437]:VariableDeclarationStatement[16403-16437]"
  }, {
    "left" : "final String desc = _findDescription();",
    "right" : "final String desc = _findDescription();",
    "info" : "VariableDeclarationStatement[16446-16485]:VariableDeclarationStatement[16446-16485]"
  }, {
    "left" : "final Integer idx = _findIndex();",
    "right" : "final Integer idx = _findIndex();",
    "info" : "VariableDeclarationStatement[16494-16527]:VariableDeclarationStatement[16494-16527]"
  }, {
    "left" : "final String def = _findDefaultValue();",
    "right" : "final String def = _findDefaultValue();",
    "info" : "VariableDeclarationStatement[16536-16575]:VariableDeclarationStatement[16536-16575]"
  }, {
    "left" : "if (b == null && idx == null && def == null)",
    "right" : "if (b == null && idx == null && def == null)",
    "info" : "IfStatement[16584-16805]:IfStatement[16584-16805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16629-16805]:Block[16629-16805]"
  }, {
    "left" : "return (desc == null) ? PropertyMetadata.STD_REQUIRED_OR_OPTIONAL\n                    : PropertyMetadata.STD_REQUIRED_OR_OPTIONAL.withDescription(desc);",
    "right" : "return (desc == null) ? PropertyMetadata.STD_REQUIRED_OR_OPTIONAL\n                    : PropertyMetadata.STD_REQUIRED_OR_OPTIONAL.withDescription(desc);",
    "info" : "ReturnStatement[16643-16795]:ReturnStatement[16643-16795]"
  }, {
    "left" : "return PropertyMetadata.construct(b.booleanValue(), desc, idx, def);",
    "right" : "return PropertyMetadata.construct(b.booleanValue(), desc, idx, def);",
    "info" : "ReturnStatement[16814-16882]:ReturnStatement[16814-16882]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16894-16903]:Modifier[16894-16903]"
  }, {
    "left" : "Boolean",
    "right" : "Boolean",
    "info" : "SimpleType[16904-16911]:SimpleType[16904-16911]"
  }, {
    "left" : "_findRequired",
    "right" : "_findRequired",
    "info" : "SimpleName[16912-16925]:SimpleName[16912-16925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16928-17185]:Block[16928-17185]"
  }, {
    "left" : "return fromMemberAnnotations(new WithMember<Boolean>() {\n            @Override\n            public Boolean withMember(AnnotatedMember member) {\n                return _annotationIntrospector.hasRequiredMarker(member);\n            }\n        });",
    "right" : "return fromMemberAnnotations(new WithMember<Boolean>() {\n            @Override\n            public Boolean withMember(AnnotatedMember member) {\n                return _annotationIntrospector.hasRequiredMarker(member);\n            }\n        });",
    "info" : "ReturnStatement[16937-17179]:ReturnStatement[16937-17179]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17006-17015]:MarkerAnnotation[17006-17015]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17028-17034]:Modifier[17028-17034]"
  }, {
    "left" : "Boolean",
    "right" : "Boolean",
    "info" : "SimpleType[17035-17042]:SimpleType[17035-17042]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[17043-17053]:SimpleName[17043-17053]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[17054-17076]:SingleVariableDeclaration[17054-17076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17078-17167]:Block[17078-17167]"
  }, {
    "left" : "return _annotationIntrospector.hasRequiredMarker(member);",
    "right" : "return _annotationIntrospector.hasRequiredMarker(member);",
    "info" : "ReturnStatement[17096-17153]:ReturnStatement[17096-17153]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[17195-17204]:Modifier[17195-17204]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[17205-17211]:SimpleType[17205-17211]"
  }, {
    "left" : "_findDescription",
    "right" : "_findDescription",
    "info" : "SimpleName[17212-17228]:SimpleName[17212-17228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17231-17493]:Block[17231-17493]"
  }, {
    "left" : "return fromMemberAnnotations(new WithMember<String>() {\n            @Override\n            public String withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyDescription(member);\n            }\n        });",
    "right" : "return fromMemberAnnotations(new WithMember<String>() {\n            @Override\n            public String withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyDescription(member);\n            }\n        });",
    "info" : "ReturnStatement[17241-17487]:ReturnStatement[17241-17487]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17309-17318]:MarkerAnnotation[17309-17318]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17331-17337]:Modifier[17331-17337]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[17338-17344]:SimpleType[17338-17344]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[17345-17355]:SimpleName[17345-17355]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[17356-17378]:SingleVariableDeclaration[17356-17378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17380-17475]:Block[17380-17475]"
  }, {
    "left" : "return _annotationIntrospector.findPropertyDescription(member);",
    "right" : "return _annotationIntrospector.findPropertyDescription(member);",
    "info" : "ReturnStatement[17398-17461]:ReturnStatement[17398-17461]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[17499-17508]:Modifier[17499-17508]"
  }, {
    "left" : "Integer",
    "right" : "Integer",
    "info" : "SimpleType[17509-17516]:SimpleType[17509-17516]"
  }, {
    "left" : "_findIndex",
    "right" : "_findIndex",
    "info" : "SimpleName[17517-17527]:SimpleName[17517-17527]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17530-17788]:Block[17530-17788]"
  }, {
    "left" : "return fromMemberAnnotations(new WithMember<Integer>() {\n            @Override\n            public Integer withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyIndex(member);\n            }\n        });",
    "right" : "return fromMemberAnnotations(new WithMember<Integer>() {\n            @Override\n            public Integer withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyIndex(member);\n            }\n        });",
    "info" : "ReturnStatement[17540-17782]:ReturnStatement[17540-17782]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17609-17618]:MarkerAnnotation[17609-17618]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17631-17637]:Modifier[17631-17637]"
  }, {
    "left" : "Integer",
    "right" : "Integer",
    "info" : "SimpleType[17638-17645]:SimpleType[17638-17645]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[17646-17656]:SimpleName[17646-17656]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[17657-17679]:SingleVariableDeclaration[17657-17679]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17681-17770]:Block[17681-17770]"
  }, {
    "left" : "return _annotationIntrospector.findPropertyIndex(member);",
    "right" : "return _annotationIntrospector.findPropertyIndex(member);",
    "info" : "ReturnStatement[17699-17756]:ReturnStatement[17699-17756]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[17794-17803]:Modifier[17794-17803]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[17804-17810]:SimpleType[17804-17810]"
  }, {
    "left" : "_findDefaultValue",
    "right" : "_findDefaultValue",
    "info" : "SimpleName[17811-17828]:SimpleName[17811-17828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17831-18094]:Block[17831-18094]"
  }, {
    "left" : "return fromMemberAnnotations(new WithMember<String>() {\n            @Override\n            public String withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyDefaultValue(member);\n            }\n        });",
    "right" : "return fromMemberAnnotations(new WithMember<String>() {\n            @Override\n            public String withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyDefaultValue(member);\n            }\n        });",
    "info" : "ReturnStatement[17841-18088]:ReturnStatement[17841-18088]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17909-17918]:MarkerAnnotation[17909-17918]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17931-17937]:Modifier[17931-17937]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[17938-17944]:SimpleType[17938-17944]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[17945-17955]:SimpleName[17945-17955]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[17956-17978]:SingleVariableDeclaration[17956-17978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17980-18076]:Block[17980-18076]"
  }, {
    "left" : "return _annotationIntrospector.findPropertyDefaultValue(member);",
    "right" : "return _annotationIntrospector.findPropertyDefaultValue(member);",
    "info" : "ReturnStatement[17998-18062]:ReturnStatement[17998-18062]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18104-18113]:MarkerAnnotation[18104-18113]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18118-18124]:Modifier[18118-18124]"
  }, {
    "left" : "ObjectIdInfo",
    "right" : "ObjectIdInfo",
    "info" : "SimpleType[18125-18137]:SimpleType[18125-18137]"
  }, {
    "left" : "findObjectIdInfo",
    "right" : "findObjectIdInfo",
    "info" : "SimpleName[18138-18154]:SimpleName[18138-18154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18157-18610]:Block[18157-18610]"
  }, {
    "left" : "return fromMemberAnnotations(new WithMember<ObjectIdInfo>() {\n            @Override\n            public ObjectIdInfo withMember(AnnotatedMember member) {\n                ObjectIdInfo info = _annotationIntrospector.findObjectIdInfo(member);\n                if (info != null) {\n                    info = _annotationIntrospector.findObjectReferenceInfo(member, info);\n                }\n                return info;\n            }\n        });",
    "right" : "return fromMemberAnnotations(new WithMember<ObjectIdInfo>() {\n            @Override\n            public ObjectIdInfo withMember(AnnotatedMember member) {\n                ObjectIdInfo info = _annotationIntrospector.findObjectIdInfo(member);\n                if (info != null) {\n                    info = _annotationIntrospector.findObjectReferenceInfo(member, info);\n                }\n                return info;\n            }\n        });",
    "info" : "ReturnStatement[18167-18604]:ReturnStatement[18167-18604]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18241-18250]:MarkerAnnotation[18241-18250]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18263-18269]:Modifier[18263-18269]"
  }, {
    "left" : "ObjectIdInfo",
    "right" : "ObjectIdInfo",
    "info" : "SimpleType[18270-18282]:SimpleType[18270-18282]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[18283-18293]:SimpleName[18283-18293]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[18294-18316]:SingleVariableDeclaration[18294-18316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18318-18592]:Block[18318-18592]"
  }, {
    "left" : "ObjectIdInfo info = _annotationIntrospector.findObjectIdInfo(member);",
    "right" : "ObjectIdInfo info = _annotationIntrospector.findObjectIdInfo(member);",
    "info" : "VariableDeclarationStatement[18336-18405]:VariableDeclarationStatement[18336-18405]"
  }, {
    "left" : "if (info != null)",
    "right" : "if (info != null)",
    "info" : "IfStatement[18422-18549]:IfStatement[18422-18549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18440-18549]:Block[18440-18549]"
  }, {
    "left" : "info = _annotationIntrospector.findObjectReferenceInfo(member, info);",
    "right" : "info = _annotationIntrospector.findObjectReferenceInfo(member, info);",
    "info" : "ExpressionStatement[18462-18531]:ExpressionStatement[18462-18531]"
  }, {
    "left" : "return info;",
    "right" : "return info;",
    "info" : "ReturnStatement[18566-18578]:ReturnStatement[18566-18578]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18616-18625]:MarkerAnnotation[18616-18625]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18630-18636]:Modifier[18630-18636]"
  }, {
    "left" : "JsonInclude.Value",
    "right" : "JsonInclude.Value",
    "info" : "SimpleType[18637-18654]:SimpleType[18637-18654]"
  }, {
    "left" : "findInclusion",
    "right" : "findInclusion",
    "info" : "SimpleName[18655-18668]:SimpleName[18655-18668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18671-19194]:Block[18671-19194]"
  }, {
    "left" : "AnnotatedMember a = getAccessor();",
    "right" : "AnnotatedMember a = getAccessor();",
    "info" : "VariableDeclarationStatement[18681-18715]:VariableDeclarationStatement[18681-18715]"
  }, {
    "left" : "JsonInclude.Value v = (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findPropertyInclusion(a);",
    "right" : "JsonInclude.Value v = (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findPropertyInclusion(a);",
    "info" : "VariableDeclarationStatement[18998-19128]:VariableDeclarationStatement[18998-19128]"
  }, {
    "left" : "return (v == null) ? JsonInclude.Value.empty() : v;",
    "right" : "return (v == null) ? JsonInclude.Value.empty() : v;",
    "info" : "ReturnStatement[19137-19188]:ReturnStatement[19137-19188]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19200-19206]:Modifier[19200-19206]"
  }, {
    "left" : "JsonProperty.Access",
    "right" : "JsonProperty.Access",
    "info" : "SimpleType[19207-19226]:SimpleType[19207-19226]"
  }, {
    "left" : "findAccess",
    "right" : "findAccess",
    "info" : "SimpleName[19227-19237]:SimpleName[19227-19237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19240-19555]:Block[19240-19555]"
  }, {
    "left" : "return fromMemberAnnotationsExcept(new WithMember<JsonProperty.Access>() {\n            @Override\n            public JsonProperty.Access withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyAccess(member);\n            }\n        }, JsonProperty.Access.AUTO);",
    "right" : "return fromMemberAnnotationsExcept(new WithMember<JsonProperty.Access>() {\n            @Override\n            public JsonProperty.Access withMember(AnnotatedMember member) {\n                return _annotationIntrospector.findPropertyAccess(member);\n            }\n        }, JsonProperty.Access.AUTO);",
    "info" : "ReturnStatement[19250-19549]:ReturnStatement[19250-19549]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19337-19346]:MarkerAnnotation[19337-19346]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19359-19365]:Modifier[19359-19365]"
  }, {
    "left" : "JsonProperty.Access",
    "right" : "JsonProperty.Access",
    "info" : "SimpleType[19366-19385]:SimpleType[19366-19385]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[19386-19396]:SimpleName[19386-19396]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[19397-19419]:SingleVariableDeclaration[19397-19419]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19421-19511]:Block[19421-19511]"
  }, {
    "left" : "return _annotationIntrospector.findPropertyAccess(member);",
    "right" : "return _annotationIntrospector.findPropertyAccess(member);",
    "info" : "ReturnStatement[19439-19497]:ReturnStatement[19439-19497]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19737-19743]:Modifier[19737-19743]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19744-19748]:PrimitiveType[19744-19748]"
  }, {
    "left" : "addField",
    "right" : "addField",
    "info" : "SimpleName[19749-19757]:SimpleName[19749-19757]"
  }, {
    "left" : "AnnotatedField a",
    "right" : "AnnotatedField a",
    "info" : "SingleVariableDeclaration[19758-19774]:SingleVariableDeclaration[19758-19774]"
  }, {
    "left" : "PropertyName name",
    "right" : "PropertyName name",
    "info" : "SingleVariableDeclaration[19776-19793]:SingleVariableDeclaration[19776-19793]"
  }, {
    "left" : "boolean explName",
    "right" : "boolean explName",
    "info" : "SingleVariableDeclaration[19795-19811]:SingleVariableDeclaration[19795-19811]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[19813-19828]:SingleVariableDeclaration[19813-19828]"
  }, {
    "left" : "boolean ignored",
    "right" : "boolean ignored",
    "info" : "SingleVariableDeclaration[19830-19845]:SingleVariableDeclaration[19830-19845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19847-19946]:Block[19847-19946]"
  }, {
    "left" : "_fields = new Linked<AnnotatedField>(a, _fields, name, explName, visible, ignored);",
    "right" : "_fields = new Linked<AnnotatedField>(a, _fields, name, explName, visible, ignored);",
    "info" : "ExpressionStatement[19857-19940]:ExpressionStatement[19857-19940]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19952-19958]:Modifier[19952-19958]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19959-19963]:PrimitiveType[19959-19963]"
  }, {
    "left" : "addCtor",
    "right" : "addCtor",
    "info" : "SimpleName[19964-19971]:SimpleName[19964-19971]"
  }, {
    "left" : "AnnotatedParameter a",
    "right" : "AnnotatedParameter a",
    "info" : "SingleVariableDeclaration[19972-19992]:SingleVariableDeclaration[19972-19992]"
  }, {
    "left" : "PropertyName name",
    "right" : "PropertyName name",
    "info" : "SingleVariableDeclaration[19994-20011]:SingleVariableDeclaration[19994-20011]"
  }, {
    "left" : "boolean explName",
    "right" : "boolean explName",
    "info" : "SingleVariableDeclaration[20013-20029]:SingleVariableDeclaration[20013-20029]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[20031-20046]:SingleVariableDeclaration[20031-20046]"
  }, {
    "left" : "boolean ignored",
    "right" : "boolean ignored",
    "info" : "SingleVariableDeclaration[20048-20063]:SingleVariableDeclaration[20048-20063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20065-20184]:Block[20065-20184]"
  }, {
    "left" : "_ctorParameters = new Linked<AnnotatedParameter>(a, _ctorParameters, name, explName, visible, ignored);",
    "right" : "_ctorParameters = new Linked<AnnotatedParameter>(a, _ctorParameters, name, explName, visible, ignored);",
    "info" : "ExpressionStatement[20075-20178]:ExpressionStatement[20075-20178]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20190-20196]:Modifier[20190-20196]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20197-20201]:PrimitiveType[20197-20201]"
  }, {
    "left" : "addGetter",
    "right" : "addGetter",
    "info" : "SimpleName[20202-20211]:SimpleName[20202-20211]"
  }, {
    "left" : "AnnotatedMethod a",
    "right" : "AnnotatedMethod a",
    "info" : "SingleVariableDeclaration[20212-20229]:SingleVariableDeclaration[20212-20229]"
  }, {
    "left" : "PropertyName name",
    "right" : "PropertyName name",
    "info" : "SingleVariableDeclaration[20231-20248]:SingleVariableDeclaration[20231-20248]"
  }, {
    "left" : "boolean explName",
    "right" : "boolean explName",
    "info" : "SingleVariableDeclaration[20250-20266]:SingleVariableDeclaration[20250-20266]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[20268-20283]:SingleVariableDeclaration[20268-20283]"
  }, {
    "left" : "boolean ignored",
    "right" : "boolean ignored",
    "info" : "SingleVariableDeclaration[20285-20300]:SingleVariableDeclaration[20285-20300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20302-20404]:Block[20302-20404]"
  }, {
    "left" : "_getters = new Linked<AnnotatedMethod>(a, _getters, name, explName, visible, ignored);",
    "right" : "_getters = new Linked<AnnotatedMethod>(a, _getters, name, explName, visible, ignored);",
    "info" : "ExpressionStatement[20312-20398]:ExpressionStatement[20312-20398]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20410-20416]:Modifier[20410-20416]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20417-20421]:PrimitiveType[20417-20421]"
  }, {
    "left" : "addSetter",
    "right" : "addSetter",
    "info" : "SimpleName[20422-20431]:SimpleName[20422-20431]"
  }, {
    "left" : "AnnotatedMethod a",
    "right" : "AnnotatedMethod a",
    "info" : "SingleVariableDeclaration[20432-20449]:SingleVariableDeclaration[20432-20449]"
  }, {
    "left" : "PropertyName name",
    "right" : "PropertyName name",
    "info" : "SingleVariableDeclaration[20451-20468]:SingleVariableDeclaration[20451-20468]"
  }, {
    "left" : "boolean explName",
    "right" : "boolean explName",
    "info" : "SingleVariableDeclaration[20470-20486]:SingleVariableDeclaration[20470-20486]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[20488-20503]:SingleVariableDeclaration[20488-20503]"
  }, {
    "left" : "boolean ignored",
    "right" : "boolean ignored",
    "info" : "SingleVariableDeclaration[20505-20520]:SingleVariableDeclaration[20505-20520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20522-20624]:Block[20522-20624]"
  }, {
    "left" : "_setters = new Linked<AnnotatedMethod>(a, _setters, name, explName, visible, ignored);",
    "right" : "_setters = new Linked<AnnotatedMethod>(a, _setters, name, explName, visible, ignored);",
    "info" : "ExpressionStatement[20532-20618]:ExpressionStatement[20532-20618]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20745-20751]:Modifier[20745-20751]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20752-20756]:PrimitiveType[20752-20756]"
  }, {
    "left" : "addAll",
    "right" : "addAll",
    "info" : "SimpleName[20757-20763]:SimpleName[20757-20763]"
  }, {
    "left" : "POJOPropertyBuilder src",
    "right" : "POJOPropertyBuilder src",
    "info" : "SingleVariableDeclaration[20764-20787]:SingleVariableDeclaration[20764-20787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20793-21017]:Block[20793-21017]"
  }, {
    "left" : "_fields = merge(_fields, src._fields);",
    "right" : "_fields = merge(_fields, src._fields);",
    "info" : "ExpressionStatement[20803-20841]:ExpressionStatement[20803-20841]"
  }, {
    "left" : "_ctorParameters = merge(_ctorParameters, src._ctorParameters);",
    "right" : "_ctorParameters = merge(_ctorParameters, src._ctorParameters);",
    "info" : "ExpressionStatement[20850-20912]:ExpressionStatement[20850-20912]"
  }, {
    "left" : "_getters= merge(_getters, src._getters);",
    "right" : "_getters= merge(_getters, src._getters);",
    "info" : "ExpressionStatement[20921-20961]:ExpressionStatement[20921-20961]"
  }, {
    "left" : "_setters = merge(_setters, src._setters);",
    "right" : "_setters = merge(_setters, src._setters);",
    "info" : "ExpressionStatement[20970-21011]:ExpressionStatement[20970-21011]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21023-21030]:Modifier[21023-21030]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21031-21037]:Modifier[21031-21037]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[21039-21040]:TypeParameter[21039-21040]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[21042-21051]:ParameterizedType[21042-21051]"
  }, {
    "left" : "merge",
    "right" : "merge",
    "info" : "SimpleName[21052-21057]:SimpleName[21052-21057]"
  }, {
    "left" : "Linked<T> chain1",
    "right" : "Linked<T> chain1",
    "info" : "SingleVariableDeclaration[21058-21074]:SingleVariableDeclaration[21058-21074]"
  }, {
    "left" : "Linked<T> chain2",
    "right" : "Linked<T> chain2",
    "info" : "SingleVariableDeclaration[21076-21092]:SingleVariableDeclaration[21076-21092]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21098-21277]:Block[21098-21277]"
  }, {
    "left" : "if (chain1 == null)",
    "right" : "if (chain1 == null)",
    "info" : "IfStatement[21108-21166]:IfStatement[21108-21166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21128-21166]:Block[21128-21166]"
  }, {
    "left" : "return chain2;",
    "right" : "return chain2;",
    "info" : "ReturnStatement[21142-21156]:ReturnStatement[21142-21156]"
  }, {
    "left" : "if (chain2 == null)",
    "right" : "if (chain2 == null)",
    "info" : "IfStatement[21175-21233]:IfStatement[21175-21233]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21195-21233]:Block[21195-21233]"
  }, {
    "left" : "return chain1;",
    "right" : "return chain1;",
    "info" : "ReturnStatement[21209-21223]:ReturnStatement[21209-21223]"
  }, {
    "left" : "return chain1.append(chain2);",
    "right" : "return chain1.append(chain2);",
    "info" : "ReturnStatement[21242-21271]:ReturnStatement[21242-21271]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21542-21548]:Modifier[21542-21548]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21549-21553]:PrimitiveType[21549-21553]"
  }, {
    "left" : "removeIgnored",
    "right" : "removeIgnored",
    "info" : "SimpleName[21554-21567]:SimpleName[21554-21567]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21574-21773]:Block[21574-21773]"
  }, {
    "left" : "_fields = _removeIgnored(_fields);",
    "right" : "_fields = _removeIgnored(_fields);",
    "info" : "ExpressionStatement[21584-21618]:ExpressionStatement[21584-21618]"
  }, {
    "left" : "_getters = _removeIgnored(_getters);",
    "right" : "_getters = _removeIgnored(_getters);",
    "info" : "ExpressionStatement[21627-21663]:ExpressionStatement[21627-21663]"
  }, {
    "left" : "_setters = _removeIgnored(_setters);",
    "right" : "_setters = _removeIgnored(_setters);",
    "info" : "ExpressionStatement[21672-21708]:ExpressionStatement[21672-21708]"
  }, {
    "left" : "_ctorParameters = _removeIgnored(_ctorParameters);",
    "right" : "_ctorParameters = _removeIgnored(_ctorParameters);",
    "info" : "ExpressionStatement[21717-21767]:ExpressionStatement[21717-21767]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21899-21905]:Modifier[21899-21905]"
  }, {
    "left" : "removeNonVisible",
    "right" : "removeNonVisible",
    "info" : "SimpleName[21911-21927]:SimpleName[21926-21942]"
  }, {
    "left" : "boolean inferMutators",
    "right" : "boolean inferMutators",
    "info" : "SingleVariableDeclaration[21928-21949]:SingleVariableDeclaration[21943-21964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21955-23307]:Block[21970-23342]"
  }, {
    "left" : "JsonProperty.Access acc = findAccess();",
    "right" : "JsonProperty.Access acc = findAccess();",
    "info" : "VariableDeclarationStatement[22179-22218]:VariableDeclarationStatement[22194-22233]"
  }, {
    "left" : "if (acc == null)",
    "right" : "if (acc == null)",
    "info" : "IfStatement[22227-22299]:IfStatement[22242-22314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22244-22299]:Block[22259-22314]"
  }, {
    "left" : "acc = JsonProperty.Access.AUTO;",
    "right" : "acc = JsonProperty.Access.AUTO;",
    "info" : "ExpressionStatement[22258-22289]:ExpressionStatement[22273-22304]"
  }, {
    "left" : "switch (acc) {\n        case READ_ONLY:\n            // Remove setters, creators for sure, but fields too if deserializing\n            _setters = null;\n            _ctorParameters = null;\n            if (!_forSerialization) {\n                _fields = null;\n            }\n            break;\n        case READ_WRITE:\n            // no trimming whatsoever?\n            break;\n        case WRITE_ONLY:\n            // remove getters, definitely, but also fields if serializing\n            _getters = null;\n            if (_forSerialization) {\n                _fields = null;\n            }\n            break;\n        default:\n        case AUTO: // the default case: base it on visibility\n            _getters = _removeNonVisible(_getters);\n            _ctorParameters = _removeNonVisible(_ctorParameters);\n    \n            if (!inferMutators || (_getters == null)) {\n                _fields = _removeNonVisible(_fields);\n                _setters = _removeNonVisible(_setters);\n            }\n        }",
    "right" : "switch (acc) {\n        case READ_ONLY:\n            // Remove setters, creators for sure, but fields too if deserializing\n            _setters = null;\n            _ctorParameters = null;\n            if (!_forSerialization) {\n                _fields = null;\n            }\n            break;\n        case READ_WRITE:\n            // no trimming whatsoever?\n            break;\n        case WRITE_ONLY:\n            // remove getters, definitely, but also fields if serializing\n            _getters = null;\n            if (_forSerialization) {\n                _fields = null;\n            }\n            break;\n        default:\n        case AUTO: // the default case: base it on visibility\n            _getters = _removeNonVisible(_getters);\n            _ctorParameters = _removeNonVisible(_ctorParameters);\n    \n            if (!inferMutators || (_getters == null)) {\n                _fields = _removeNonVisible(_fields);\n                _setters = _removeNonVisible(_setters);\n            }\n        }",
    "info" : "SwitchStatement[22308-23301]:SwitchStatement[22323-23316]"
  }, {
    "left" : "case READ_ONLY:",
    "right" : "case READ_ONLY:",
    "info" : "SwitchCase[22331-22346]:SwitchCase[22346-22361]"
  }, {
    "left" : "_setters = null;",
    "right" : "_setters = null;",
    "info" : "ExpressionStatement[22441-22457]:ExpressionStatement[22456-22472]"
  }, {
    "left" : "_ctorParameters = null;",
    "right" : "_ctorParameters = null;",
    "info" : "ExpressionStatement[22470-22493]:ExpressionStatement[22485-22508]"
  }, {
    "left" : "if (!_forSerialization)",
    "right" : "if (!_forSerialization)",
    "info" : "IfStatement[22506-22577]:IfStatement[22521-22592]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22530-22577]:Block[22545-22592]"
  }, {
    "left" : "_fields = null;",
    "right" : "_fields = null;",
    "info" : "ExpressionStatement[22548-22563]:ExpressionStatement[22563-22578]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22590-22596]:BreakStatement[22605-22611]"
  }, {
    "left" : "case READ_WRITE:",
    "right" : "case READ_WRITE:",
    "info" : "SwitchCase[22605-22621]:SwitchCase[22620-22636]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22673-22679]:BreakStatement[22688-22694]"
  }, {
    "left" : "case WRITE_ONLY:",
    "right" : "case WRITE_ONLY:",
    "info" : "SwitchCase[22688-22704]:SwitchCase[22703-22719]"
  }, {
    "left" : "_getters = null;",
    "right" : "_getters = null;",
    "info" : "ExpressionStatement[22791-22807]:ExpressionStatement[22806-22822]"
  }, {
    "left" : "if (_forSerialization)",
    "right" : "if (_forSerialization)",
    "info" : "IfStatement[22820-22890]:IfStatement[22835-22905]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22843-22890]:Block[22858-22905]"
  }, {
    "left" : "_fields = null;",
    "right" : "_fields = null;",
    "info" : "ExpressionStatement[22861-22876]:ExpressionStatement[22876-22891]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22903-22909]:BreakStatement[22918-22924]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[22918-22926]:SwitchCase[22933-22941]"
  }, {
    "left" : "case AUTO:",
    "right" : "case AUTO:",
    "info" : "SwitchCase[22935-22945]:SwitchCase[22950-22960]"
  }, {
    "left" : "_getters = _removeNonVisible(_getters);",
    "right" : "_getters = _removeNonVisible(_getters);",
    "info" : "ExpressionStatement[23001-23040]:ExpressionStatement[23016-23055]"
  }, {
    "left" : "_ctorParameters = _removeNonVisible(_ctorParameters);",
    "right" : "_ctorParameters = _removeNonVisible(_ctorParameters);",
    "info" : "ExpressionStatement[23053-23106]:ExpressionStatement[23068-23121]"
  }, {
    "left" : "if (!inferMutators || (_getters == null))",
    "right" : "if (!inferMutators || (_getters == null))",
    "info" : "IfStatement[23124-23291]:IfStatement[23139-23306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23166-23291]:Block[23181-23306]"
  }, {
    "left" : "_fields = _removeNonVisible(_fields);",
    "right" : "_fields = _removeNonVisible(_fields);",
    "info" : "ExpressionStatement[23184-23221]:ExpressionStatement[23199-23236]"
  }, {
    "left" : "_setters = _removeNonVisible(_setters);",
    "right" : "_setters = _removeNonVisible(_setters);",
    "info" : "ExpressionStatement[23238-23277]:ExpressionStatement[23253-23292]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23438-23444]:Modifier[23473-23479]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23445-23449]:PrimitiveType[23480-23484]"
  }, {
    "left" : "removeConstructors",
    "right" : "removeConstructors",
    "info" : "SimpleName[23450-23468]:SimpleName[23485-23503]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23471-23510]:Block[23506-23545]"
  }, {
    "left" : "_ctorParameters = null;",
    "right" : "_ctorParameters = null;",
    "info" : "ExpressionStatement[23481-23504]:ExpressionStatement[23516-23539]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23730-23736]:Modifier[23765-23771]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23737-23741]:PrimitiveType[23772-23776]"
  }, {
    "left" : "trimByVisibility",
    "right" : "trimByVisibility",
    "info" : "SimpleName[23742-23758]:SimpleName[23777-23793]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23765-23976]:Block[23800-24011]"
  }, {
    "left" : "_fields = _trimByVisibility(_fields);",
    "right" : "_fields = _trimByVisibility(_fields);",
    "info" : "ExpressionStatement[23775-23812]:ExpressionStatement[23810-23847]"
  }, {
    "left" : "_getters = _trimByVisibility(_getters);",
    "right" : "_getters = _trimByVisibility(_getters);",
    "info" : "ExpressionStatement[23821-23860]:ExpressionStatement[23856-23895]"
  }, {
    "left" : "_setters = _trimByVisibility(_setters);",
    "right" : "_setters = _trimByVisibility(_setters);",
    "info" : "ExpressionStatement[23869-23908]:ExpressionStatement[23904-23943]"
  }, {
    "left" : "_ctorParameters = _trimByVisibility(_ctorParameters);",
    "right" : "_ctorParameters = _trimByVisibility(_ctorParameters);",
    "info" : "ExpressionStatement[23917-23970]:ExpressionStatement[23952-24005]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[23982-24012]:SingleMemberAnnotation[24017-24047]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24017-24023]:Modifier[24052-24058]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24024-24028]:PrimitiveType[24059-24063]"
  }, {
    "left" : "mergeAnnotations",
    "right" : "mergeAnnotations",
    "info" : "SimpleName[24029-24045]:SimpleName[24064-24080]"
  }, {
    "left" : "boolean forSerialization",
    "right" : "boolean forSerialization",
    "info" : "SingleVariableDeclaration[24046-24070]:SingleVariableDeclaration[24081-24105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24076-25180]:Block[24111-25215]"
  }, {
    "left" : "if (forSerialization)",
    "right" : "if (forSerialization)",
    "info" : "IfStatement[24086-25174]:IfStatement[24121-25209]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24108-24529]:Block[24143-24564]"
  }, {
    "left" : "if (_getters != null)",
    "right" : "if (_getters != null)",
    "info" : "IfStatement[24122-24519]:IfStatement[24157-24554]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24144-24324]:Block[24179-24359]"
  }, {
    "left" : "AnnotationMap ann = _mergeAnnotations(0, _getters, _fields, _ctorParameters, _setters);",
    "right" : "AnnotationMap ann = _mergeAnnotations(0, _getters, _fields, _ctorParameters, _setters);",
    "info" : "VariableDeclarationStatement[24162-24249]:VariableDeclarationStatement[24197-24284]"
  }, {
    "left" : "_getters = _applyAnnotations(_getters, ann);",
    "right" : "_getters = _applyAnnotations(_getters, ann);",
    "info" : "ExpressionStatement[24266-24310]:ExpressionStatement[24301-24345]"
  }, {
    "left" : "if (_fields != null)",
    "right" : "if (_fields != null)",
    "info" : "IfStatement[24330-24519]:IfStatement[24365-24554]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24351-24519]:Block[24386-24554]"
  }, {
    "left" : "AnnotationMap ann = _mergeAnnotations(0, _fields, _ctorParameters, _setters);",
    "right" : "AnnotationMap ann = _mergeAnnotations(0, _fields, _ctorParameters, _setters);",
    "info" : "VariableDeclarationStatement[24369-24446]:VariableDeclarationStatement[24404-24481]"
  }, {
    "left" : "_fields = _applyAnnotations(_fields, ann);",
    "right" : "_fields = _applyAnnotations(_fields, ann);",
    "info" : "ExpressionStatement[24463-24505]:ExpressionStatement[24498-24540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24535-25174]:Block[24570-25209]"
  }, {
    "left" : "if (_ctorParameters != null)",
    "right" : "if (_ctorParameters != null)",
    "info" : "IfStatement[24572-25164]:IfStatement[24607-25199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24601-24795]:Block[24636-24830]"
  }, {
    "left" : "AnnotationMap ann = _mergeAnnotations(0, _ctorParameters, _setters, _fields, _getters);",
    "right" : "AnnotationMap ann = _mergeAnnotations(0, _ctorParameters, _setters, _fields, _getters);",
    "info" : "VariableDeclarationStatement[24619-24706]:VariableDeclarationStatement[24654-24741]"
  }, {
    "left" : "_ctorParameters = _applyAnnotations(_ctorParameters, ann);",
    "right" : "_ctorParameters = _applyAnnotations(_ctorParameters, ann);",
    "info" : "ExpressionStatement[24723-24781]:ExpressionStatement[24758-24816]"
  }, {
    "left" : "if (_setters != null)",
    "right" : "if (_setters != null)",
    "info" : "IfStatement[24801-25164]:IfStatement[24836-25199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24823-24986]:Block[24858-25021]"
  }, {
    "left" : "AnnotationMap ann = _mergeAnnotations(0, _setters, _fields, _getters);",
    "right" : "AnnotationMap ann = _mergeAnnotations(0, _setters, _fields, _getters);",
    "info" : "VariableDeclarationStatement[24841-24911]:VariableDeclarationStatement[24876-24946]"
  }, {
    "left" : "_setters = _applyAnnotations(_setters, ann);",
    "right" : "_setters = _applyAnnotations(_setters, ann);",
    "info" : "ExpressionStatement[24928-24972]:ExpressionStatement[24963-25007]"
  }, {
    "left" : "if (_fields != null)",
    "right" : "if (_fields != null)",
    "info" : "IfStatement[24992-25164]:IfStatement[25027-25199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25013-25164]:Block[25048-25199]"
  }, {
    "left" : "AnnotationMap ann = _mergeAnnotations(0, _fields, _getters);",
    "right" : "AnnotationMap ann = _mergeAnnotations(0, _fields, _getters);",
    "info" : "VariableDeclarationStatement[25031-25091]:VariableDeclarationStatement[25066-25126]"
  }, {
    "left" : "_fields = _applyAnnotations(_fields, ann);",
    "right" : "_fields = _applyAnnotations(_fields, ann);",
    "info" : "ExpressionStatement[25108-25150]:ExpressionStatement[25143-25185]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25186-25193]:Modifier[25221-25228]"
  }, {
    "left" : "AnnotationMap",
    "right" : "AnnotationMap",
    "info" : "SimpleType[25194-25207]:SimpleType[25229-25242]"
  }, {
    "left" : "_mergeAnnotations",
    "right" : "_mergeAnnotations",
    "info" : "SimpleName[25208-25225]:SimpleName[25243-25260]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[25226-25235]:SingleVariableDeclaration[25261-25270]"
  }, {
    "left" : "Linked<? extends AnnotatedMember>... nodes",
    "right" : "Linked<? extends AnnotatedMember>... nodes",
    "info" : "SingleVariableDeclaration[25249-25291]:SingleVariableDeclaration[25284-25326]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25297-25571]:Block[25332-25606]"
  }, {
    "left" : "AnnotationMap ann = _getAllAnnotations(nodes[index]);",
    "right" : "AnnotationMap ann = _getAllAnnotations(nodes[index]);",
    "info" : "VariableDeclarationStatement[25307-25360]:VariableDeclarationStatement[25342-25395]"
  }, {
    "left" : "while (++index < nodes.length)",
    "right" : "while (++index < nodes.length)",
    "info" : "WhileStatement[25369-25545]:WhileStatement[25404-25580]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25400-25545]:Block[25435-25580]"
  }, {
    "left" : "if (nodes[index] != null)",
    "right" : "if (nodes[index] != null)",
    "info" : "IfStatement[25414-25535]:IfStatement[25449-25570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25440-25535]:Block[25475-25570]"
  }, {
    "left" : "return AnnotationMap.merge(ann, _mergeAnnotations(index, nodes));",
    "right" : "return AnnotationMap.merge(ann, _mergeAnnotations(index, nodes));",
    "info" : "ReturnStatement[25456-25521]:ReturnStatement[25491-25556]"
  }, {
    "left" : "return ann;",
    "right" : "return ann;",
    "info" : "ReturnStatement[25554-25565]:ReturnStatement[25589-25600]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25817-25824]:Modifier[25852-25859]"
  }, {
    "left" : "T extends AnnotatedMember",
    "right" : "T extends AnnotatedMember",
    "info" : "TypeParameter[25826-25851]:TypeParameter[25861-25886]"
  }, {
    "left" : "AnnotationMap",
    "right" : "AnnotationMap",
    "info" : "SimpleType[25853-25866]:SimpleType[25888-25901]"
  }, {
    "left" : "_getAllAnnotations",
    "right" : "_getAllAnnotations",
    "info" : "SimpleName[25867-25885]:SimpleName[25902-25920]"
  }, {
    "left" : "Linked<T> node",
    "right" : "Linked<T> node",
    "info" : "SingleVariableDeclaration[25886-25900]:SingleVariableDeclaration[25921-25935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25902-26107]:Block[25937-26142]"
  }, {
    "left" : "AnnotationMap ann = node.value.getAllAnnotations();",
    "right" : "AnnotationMap ann = node.value.getAllAnnotations();",
    "info" : "VariableDeclarationStatement[25912-25963]:VariableDeclarationStatement[25947-25998]"
  }, {
    "left" : "if (node.next != null)",
    "right" : "if (node.next != null)",
    "info" : "IfStatement[25972-26081]:IfStatement[26007-26116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25995-26081]:Block[26030-26116]"
  }, {
    "left" : "ann = AnnotationMap.merge(ann, _getAllAnnotations(node.next));",
    "right" : "ann = AnnotationMap.merge(ann, _getAllAnnotations(node.next));",
    "info" : "ExpressionStatement[26009-26071]:ExpressionStatement[26044-26106]"
  }, {
    "left" : "return ann;",
    "right" : "return ann;",
    "info" : "ReturnStatement[26090-26101]:ReturnStatement[26125-26136]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26438-26445]:Modifier[26473-26480]"
  }, {
    "left" : "T extends AnnotatedMember",
    "right" : "T extends AnnotatedMember",
    "info" : "TypeParameter[26447-26472]:TypeParameter[26482-26507]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[26474-26483]:ParameterizedType[26509-26518]"
  }, {
    "left" : "_applyAnnotations",
    "right" : "_applyAnnotations",
    "info" : "SimpleName[26484-26501]:SimpleName[26519-26536]"
  }, {
    "left" : "Linked<T> node",
    "right" : "Linked<T> node",
    "info" : "SingleVariableDeclaration[26502-26516]:SingleVariableDeclaration[26537-26551]"
  }, {
    "left" : "AnnotationMap ann",
    "right" : "AnnotationMap ann",
    "info" : "SingleVariableDeclaration[26518-26535]:SingleVariableDeclaration[26553-26570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26537-26788]:Block[26572-26823]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")\n        T value = (T) node.value.withAnnotations(ann);",
    "right" : "@SuppressWarnings(\"unchecked\")\n        T value = (T) node.value.withAnnotations(ann);",
    "info" : "VariableDeclarationStatement[26547-26632]:VariableDeclarationStatement[26582-26667]"
  }, {
    "left" : "if (node.next != null)",
    "right" : "if (node.next != null)",
    "info" : "IfStatement[26641-26744]:IfStatement[26676-26779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26664-26744]:Block[26699-26779]"
  }, {
    "left" : "node = node.withNext(_applyAnnotations(node.next, ann));",
    "right" : "node = node.withNext(_applyAnnotations(node.next, ann));",
    "info" : "ExpressionStatement[26678-26734]:ExpressionStatement[26713-26769]"
  }, {
    "left" : "return node.withValue(value);",
    "right" : "return node.withValue(value);",
    "info" : "ReturnStatement[26753-26782]:ReturnStatement[26788-26817]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26794-26801]:Modifier[26829-26836]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[26803-26804]:TypeParameter[26838-26839]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[26806-26815]:ParameterizedType[26841-26850]"
  }, {
    "left" : "_removeIgnored",
    "right" : "_removeIgnored",
    "info" : "SimpleName[26816-26830]:SimpleName[26851-26865]"
  }, {
    "left" : "Linked<T> node",
    "right" : "Linked<T> node",
    "info" : "SingleVariableDeclaration[26831-26845]:SingleVariableDeclaration[26866-26880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26851-26959]:Block[26886-26994]"
  }, {
    "left" : "if (node == null)",
    "right" : "if (node == null)",
    "info" : "IfStatement[26861-26915]:IfStatement[26896-26950]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26879-26915]:Block[26914-26950]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[26893-26905]:ReturnStatement[26928-26940]"
  }, {
    "left" : "return node.withoutIgnored();",
    "right" : "return node.withoutIgnored();",
    "info" : "ReturnStatement[26924-26953]:ReturnStatement[26959-26988]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26965-26972]:Modifier[27000-27007]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[26974-26975]:TypeParameter[27009-27010]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[26977-26986]:ParameterizedType[27012-27021]"
  }, {
    "left" : "_removeNonVisible",
    "right" : "_removeNonVisible",
    "info" : "SimpleName[26987-27004]:SimpleName[27022-27039]"
  }, {
    "left" : "Linked<T> node",
    "right" : "Linked<T> node",
    "info" : "SingleVariableDeclaration[27005-27019]:SingleVariableDeclaration[27040-27054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27025-27136]:Block[27060-27171]"
  }, {
    "left" : "if (node == null)",
    "right" : "if (node == null)",
    "info" : "IfStatement[27035-27089]:IfStatement[27070-27124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27053-27089]:Block[27088-27124]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[27067-27079]:ReturnStatement[27102-27114]"
  }, {
    "left" : "return node.withoutNonVisible();",
    "right" : "return node.withoutNonVisible();",
    "info" : "ReturnStatement[27098-27130]:ReturnStatement[27133-27165]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27142-27149]:Modifier[27177-27184]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[27151-27152]:TypeParameter[27186-27187]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[27154-27163]:ParameterizedType[27189-27198]"
  }, {
    "left" : "_trimByVisibility",
    "right" : "_trimByVisibility",
    "info" : "SimpleName[27164-27181]:SimpleName[27199-27216]"
  }, {
    "left" : "Linked<T> node",
    "right" : "Linked<T> node",
    "info" : "SingleVariableDeclaration[27182-27196]:SingleVariableDeclaration[27217-27231]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27202-27312]:Block[27237-27347]"
  }, {
    "left" : "if (node == null)",
    "right" : "if (node == null)",
    "info" : "IfStatement[27212-27266]:IfStatement[27247-27301]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27230-27266]:Block[27265-27301]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[27244-27256]:ReturnStatement[27279-27291]"
  }, {
    "left" : "return node.trimByVisibility();",
    "right" : "return node.trimByVisibility();",
    "info" : "ReturnStatement[27275-27306]:ReturnStatement[27310-27341]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27513-27520]:Modifier[27548-27555]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[27522-27523]:TypeParameter[27557-27558]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[27525-27532]:PrimitiveType[27560-27567]"
  }, {
    "left" : "_anyExplicits",
    "right" : "_anyExplicits",
    "info" : "SimpleName[27533-27546]:SimpleName[27568-27581]"
  }, {
    "left" : "Linked<T> n",
    "right" : "Linked<T> n",
    "info" : "SingleVariableDeclaration[27547-27558]:SingleVariableDeclaration[27582-27593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27564-27746]:Block[27599-27781]"
  }, {
    "left" : "for (; n != null; n = n.next)",
    "right" : "for (; n != null; n = n.next)",
    "info" : "ForStatement[27574-27718]:ForStatement[27609-27753]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27604-27718]:Block[27639-27753]"
  }, {
    "left" : "if (n.name != null && n.name.hasSimpleName())",
    "right" : "if (n.name != null && n.name.hasSimpleName())",
    "info" : "IfStatement[27618-27708]:IfStatement[27653-27743]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27664-27708]:Block[27699-27743]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[27682-27694]:ReturnStatement[27717-27729]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[27727-27740]:ReturnStatement[27762-27775]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27752-27759]:Modifier[27787-27794]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[27761-27762]:TypeParameter[27796-27797]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[27764-27771]:PrimitiveType[27799-27806]"
  }, {
    "left" : "_anyExplicitNames",
    "right" : "_anyExplicitNames",
    "info" : "SimpleName[27772-27789]:SimpleName[27807-27824]"
  }, {
    "left" : "Linked<T> n",
    "right" : "Linked<T> n",
    "info" : "SingleVariableDeclaration[27790-27801]:SingleVariableDeclaration[27825-27836]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27807-27983]:Block[27842-28018]"
  }, {
    "left" : "for (; n != null; n = n.next)",
    "right" : "for (; n != null; n = n.next)",
    "info" : "ForStatement[27817-27955]:ForStatement[27852-27990]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27847-27955]:Block[27882-27990]"
  }, {
    "left" : "if (n.name != null && n.isNameExplicit)",
    "right" : "if (n.name != null && n.isNameExplicit)",
    "info" : "IfStatement[27861-27945]:IfStatement[27896-27980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27901-27945]:Block[27936-27980]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[27919-27931]:ReturnStatement[27954-27966]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[27964-27977]:ReturnStatement[27999-28012]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27989-27995]:Modifier[28024-28030]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[27996-28003]:PrimitiveType[28031-28038]"
  }, {
    "left" : "anyVisible",
    "right" : "anyVisible",
    "info" : "SimpleName[28004-28014]:SimpleName[28039-28049]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28017-28188]:Block[28052-28223]"
  }, {
    "left" : "return _anyVisible(_fields)\n            || _anyVisible(_getters)\n            || _anyVisible(_setters)\n            || _anyVisible(_ctorParameters)\n        ;",
    "right" : "return _anyVisible(_fields)\n            || _anyVisible(_getters)\n            || _anyVisible(_setters)\n            || _anyVisible(_ctorParameters)\n        ;",
    "info" : "ReturnStatement[28027-28182]:ReturnStatement[28062-28217]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28194-28201]:Modifier[28229-28236]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[28203-28204]:TypeParameter[28238-28239]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[28206-28213]:PrimitiveType[28241-28248]"
  }, {
    "left" : "_anyVisible",
    "right" : "_anyVisible",
    "info" : "SimpleName[28214-28225]:SimpleName[28249-28260]"
  }, {
    "left" : "Linked<T> n",
    "right" : "Linked<T> n",
    "info" : "SingleVariableDeclaration[28226-28237]:SingleVariableDeclaration[28261-28272]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28243-28396]:Block[28278-28431]"
  }, {
    "left" : "for (; n != null; n = n.next)",
    "right" : "for (; n != null; n = n.next)",
    "info" : "ForStatement[28253-28368]:ForStatement[28288-28403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28283-28368]:Block[28318-28403]"
  }, {
    "left" : "if (n.isVisible)",
    "right" : "if (n.isVisible)",
    "info" : "IfStatement[28297-28358]:IfStatement[28332-28393]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28314-28358]:Block[28349-28393]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[28332-28344]:ReturnStatement[28367-28379]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[28377-28390]:ReturnStatement[28412-28425]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28406-28412]:Modifier[28441-28447]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[28413-28420]:PrimitiveType[28448-28455]"
  }, {
    "left" : "anyIgnorals",
    "right" : "anyIgnorals",
    "info" : "SimpleName[28421-28432]:SimpleName[28456-28467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28435-28610]:Block[28470-28645]"
  }, {
    "left" : "return _anyIgnorals(_fields)\n            || _anyIgnorals(_getters)\n            || _anyIgnorals(_setters)\n            || _anyIgnorals(_ctorParameters)\n        ;",
    "right" : "return _anyIgnorals(_fields)\n            || _anyIgnorals(_getters)\n            || _anyIgnorals(_setters)\n            || _anyIgnorals(_ctorParameters)\n        ;",
    "info" : "ReturnStatement[28445-28604]:ReturnStatement[28480-28639]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28616-28623]:Modifier[28651-28658]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[28625-28626]:TypeParameter[28660-28661]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[28628-28635]:PrimitiveType[28663-28670]"
  }, {
    "left" : "_anyIgnorals",
    "right" : "_anyIgnorals",
    "info" : "SimpleName[28636-28648]:SimpleName[28671-28683]"
  }, {
    "left" : "Linked<T> n",
    "right" : "Linked<T> n",
    "info" : "SingleVariableDeclaration[28649-28660]:SingleVariableDeclaration[28684-28695]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28666-28825]:Block[28701-28860]"
  }, {
    "left" : "for (; n != null; n = n.next)",
    "right" : "for (; n != null; n = n.next)",
    "info" : "ForStatement[28676-28797]:ForStatement[28711-28832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28706-28797]:Block[28741-28832]"
  }, {
    "left" : "if (n.isMarkedIgnored)",
    "right" : "if (n.isMarkedIgnored)",
    "info" : "IfStatement[28720-28787]:IfStatement[28755-28822]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28743-28787]:Block[28778-28822]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[28761-28773]:ReturnStatement[28796-28808]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[28806-28819]:ReturnStatement[28841-28854]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28986-28992]:Modifier[29021-29027]"
  }, {
    "left" : "Set<PropertyName>",
    "right" : "Set<PropertyName>",
    "info" : "ParameterizedType[28993-29010]:ParameterizedType[29028-29045]"
  }, {
    "left" : "findExplicitNames",
    "right" : "findExplicitNames",
    "info" : "SimpleName[29011-29028]:SimpleName[29046-29063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29035-29426]:Block[29070-29461]"
  }, {
    "left" : "Set<PropertyName> renamed = null;",
    "right" : "Set<PropertyName> renamed = null;",
    "info" : "VariableDeclarationStatement[29045-29078]:VariableDeclarationStatement[29080-29113]"
  }, {
    "left" : "renamed = _findExplicitNames(_fields, renamed);",
    "right" : "renamed = _findExplicitNames(_fields, renamed);",
    "info" : "ExpressionStatement[29087-29134]:ExpressionStatement[29122-29169]"
  }, {
    "left" : "renamed = _findExplicitNames(_getters, renamed);",
    "right" : "renamed = _findExplicitNames(_getters, renamed);",
    "info" : "ExpressionStatement[29143-29191]:ExpressionStatement[29178-29226]"
  }, {
    "left" : "renamed = _findExplicitNames(_setters, renamed);",
    "right" : "renamed = _findExplicitNames(_setters, renamed);",
    "info" : "ExpressionStatement[29200-29248]:ExpressionStatement[29235-29283]"
  }, {
    "left" : "renamed = _findExplicitNames(_ctorParameters, renamed);",
    "right" : "renamed = _findExplicitNames(_ctorParameters, renamed);",
    "info" : "ExpressionStatement[29257-29312]:ExpressionStatement[29292-29347]"
  }, {
    "left" : "if (renamed == null)",
    "right" : "if (renamed == null)",
    "info" : "IfStatement[29321-29396]:IfStatement[29356-29431]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29342-29396]:Block[29377-29431]"
  }, {
    "left" : "return Collections.emptySet();",
    "right" : "return Collections.emptySet();",
    "info" : "ReturnStatement[29356-29386]:ReturnStatement[29391-29421]"
  }, {
    "left" : "return renamed;",
    "right" : "return renamed;",
    "info" : "ReturnStatement[29405-29420]:ReturnStatement[29440-29455]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29734-29740]:Modifier[29769-29775]"
  }, {
    "left" : "Collection<POJOPropertyBuilder>",
    "right" : "Collection<POJOPropertyBuilder>",
    "info" : "ParameterizedType[29741-29772]:ParameterizedType[29776-29807]"
  }, {
    "left" : "explode",
    "right" : "explode",
    "info" : "SimpleName[29773-29780]:SimpleName[29808-29815]"
  }, {
    "left" : "Collection<PropertyName> newNames",
    "right" : "Collection<PropertyName> newNames",
    "info" : "SingleVariableDeclaration[29781-29814]:SingleVariableDeclaration[29816-29849]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29820-30151]:Block[29855-30186]"
  }, {
    "left" : "HashMap<PropertyName,POJOPropertyBuilder> props = new HashMap<PropertyName,POJOPropertyBuilder>();",
    "right" : "HashMap<PropertyName,POJOPropertyBuilder> props = new HashMap<PropertyName,POJOPropertyBuilder>();",
    "info" : "VariableDeclarationStatement[29830-29928]:VariableDeclarationStatement[29865-29963]"
  }, {
    "left" : "_explode(newNames, props, _fields);",
    "right" : "_explode(newNames, props, _fields);",
    "info" : "ExpressionStatement[29937-29972]:ExpressionStatement[29972-30007]"
  }, {
    "left" : "_explode(newNames, props, _getters);",
    "right" : "_explode(newNames, props, _getters);",
    "info" : "ExpressionStatement[29981-30017]:ExpressionStatement[30016-30052]"
  }, {
    "left" : "_explode(newNames, props, _setters);",
    "right" : "_explode(newNames, props, _setters);",
    "info" : "ExpressionStatement[30026-30062]:ExpressionStatement[30061-30097]"
  }, {
    "left" : "_explode(newNames, props, _ctorParameters);",
    "right" : "_explode(newNames, props, _ctorParameters);",
    "info" : "ExpressionStatement[30071-30114]:ExpressionStatement[30106-30149]"
  }, {
    "left" : "return props.values();",
    "right" : "return props.values();",
    "info" : "ReturnStatement[30123-30145]:ReturnStatement[30158-30180]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[30157-30187]:SingleMemberAnnotation[30192-30222]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[30192-30199]:Modifier[30227-30234]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30200-30204]:PrimitiveType[30235-30239]"
  }, {
    "left" : "_explode",
    "right" : "_explode",
    "info" : "SimpleName[30205-30213]:SimpleName[30240-30248]"
  }, {
    "left" : "Collection<PropertyName> newNames",
    "right" : "Collection<PropertyName> newNames",
    "info" : "SingleVariableDeclaration[30214-30247]:SingleVariableDeclaration[30249-30282]"
  }, {
    "left" : "Map<PropertyName,POJOPropertyBuilder> props",
    "right" : "Map<PropertyName,POJOPropertyBuilder> props",
    "info" : "SingleVariableDeclaration[30261-30304]:SingleVariableDeclaration[30296-30339]"
  }, {
    "left" : "Linked<?> accessors",
    "right" : "Linked<?> accessors",
    "info" : "SingleVariableDeclaration[30318-30337]:SingleVariableDeclaration[30353-30372]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30343-32322]:Block[30378-32357]"
  }, {
    "left" : "final Linked<?> firstAcc = accessors;",
    "right" : "final Linked<?> firstAcc = accessors;",
    "info" : "VariableDeclarationStatement[30353-30390]:VariableDeclarationStatement[30388-30425]"
  }, {
    "left" : "for (Linked<?> node = accessors; node != null; node = node.next)",
    "right" : "for (Linked<?> node = accessors; node != null; node = node.next)",
    "info" : "ForStatement[30417-32316]:ForStatement[30452-32351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30482-32316]:Block[30517-32351]"
  }, {
    "left" : "PropertyName name = node.name;",
    "right" : "PropertyName name = node.name;",
    "info" : "VariableDeclarationStatement[30496-30526]:VariableDeclarationStatement[30531-30561]"
  }, {
    "left" : "if (!node.isNameExplicit || name == null)",
    "right" : "if (!node.isNameExplicit || name == null)",
    "info" : "IfStatement[30539-31061]:IfStatement[30574-31096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30581-31061]:Block[30616-31096]"
  }, {
    "left" : "if (!node.isVisible)",
    "right" : "if (!node.isVisible)",
    "info" : "IfStatement[30702-30772]:IfStatement[30737-30807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30723-30772]:Block[30758-30807]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[30745-30754]:ContinueStatement[30780-30789]"
  }, {
    "left" : "throw new IllegalStateException(\"Conflicting/ambiguous property name definitions (implicit name '\"\n                        +_name+\"'): found multiple explicit names: \"\n                        +newNames+\", but also implicit accessor: \"+node);",
    "right" : "throw new IllegalStateException(\"Conflicting/ambiguous property name definitions (implicit name '\"\n                        +_name+\"'): found multiple explicit names: \"\n                        +newNames+\", but also implicit accessor: \"+node);",
    "info" : "ThrowStatement[30806-31047]:ThrowStatement[30841-31082]"
  }, {
    "left" : "POJOPropertyBuilder prop = props.get(name);",
    "right" : "POJOPropertyBuilder prop = props.get(name);",
    "info" : "VariableDeclarationStatement[31074-31117]:VariableDeclarationStatement[31109-31152]"
  }, {
    "left" : "if (prop == null)",
    "right" : "if (prop == null)",
    "info" : "IfStatement[31130-31348]:IfStatement[31165-31383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31148-31348]:Block[31183-31383]"
  }, {
    "left" : "prop = new POJOPropertyBuilder(_config, _annotationIntrospector, _forSerialization,\n                        _internalName, name);",
    "right" : "prop = new POJOPropertyBuilder(_config, _annotationIntrospector, _forSerialization,\n                        _internalName, name);",
    "info" : "ExpressionStatement[31166-31295]:ExpressionStatement[31201-31330]"
  }, {
    "left" : "props.put(name, prop);",
    "right" : "props.put(name, prop);",
    "info" : "ExpressionStatement[31312-31334]:ExpressionStatement[31347-31369]"
  }, {
    "left" : "if (firstAcc == _fields)",
    "right" : "if (firstAcc == _fields)",
    "info" : "IfStatement[31427-32306]:IfStatement[31462-32341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31452-31600]:Block[31487-31635]"
  }, {
    "left" : "Linked<AnnotatedField> n2 = (Linked<AnnotatedField>) node;",
    "right" : "Linked<AnnotatedField> n2 = (Linked<AnnotatedField>) node;",
    "info" : "VariableDeclarationStatement[31470-31528]:VariableDeclarationStatement[31505-31563]"
  }, {
    "left" : "prop._fields = n2.withNext(prop._fields);",
    "right" : "prop._fields = n2.withNext(prop._fields);",
    "info" : "ExpressionStatement[31545-31586]:ExpressionStatement[31580-31621]"
  }, {
    "left" : "if (firstAcc == _getters)",
    "right" : "if (firstAcc == _getters)",
    "info" : "IfStatement[31606-32306]:IfStatement[31641-32341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31632-31784]:Block[31667-31819]"
  }, {
    "left" : "Linked<AnnotatedMethod> n2 = (Linked<AnnotatedMethod>) node;",
    "right" : "Linked<AnnotatedMethod> n2 = (Linked<AnnotatedMethod>) node;",
    "info" : "VariableDeclarationStatement[31650-31710]:VariableDeclarationStatement[31685-31745]"
  }, {
    "left" : "prop._getters = n2.withNext(prop._getters);",
    "right" : "prop._getters = n2.withNext(prop._getters);",
    "info" : "ExpressionStatement[31727-31770]:ExpressionStatement[31762-31805]"
  }, {
    "left" : "if (firstAcc == _setters)",
    "right" : "if (firstAcc == _setters)",
    "info" : "IfStatement[31790-32306]:IfStatement[31825-32341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31816-31968]:Block[31851-32003]"
  }, {
    "left" : "Linked<AnnotatedMethod> n2 = (Linked<AnnotatedMethod>) node;",
    "right" : "Linked<AnnotatedMethod> n2 = (Linked<AnnotatedMethod>) node;",
    "info" : "VariableDeclarationStatement[31834-31894]:VariableDeclarationStatement[31869-31929]"
  }, {
    "left" : "prop._setters = n2.withNext(prop._setters);",
    "right" : "prop._setters = n2.withNext(prop._setters);",
    "info" : "ExpressionStatement[31911-31954]:ExpressionStatement[31946-31989]"
  }, {
    "left" : "if (firstAcc == _ctorParameters)",
    "right" : "if (firstAcc == _ctorParameters)",
    "info" : "IfStatement[31974-32306]:IfStatement[32009-32341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32007-32179]:Block[32042-32214]"
  }, {
    "left" : "Linked<AnnotatedParameter> n2 = (Linked<AnnotatedParameter>) node;",
    "right" : "Linked<AnnotatedParameter> n2 = (Linked<AnnotatedParameter>) node;",
    "info" : "VariableDeclarationStatement[32025-32091]:VariableDeclarationStatement[32060-32126]"
  }, {
    "left" : "prop._ctorParameters = n2.withNext(prop._ctorParameters);",
    "right" : "prop._ctorParameters = n2.withNext(prop._ctorParameters);",
    "info" : "ExpressionStatement[32108-32165]:ExpressionStatement[32143-32200]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32185-32306]:Block[32220-32341]"
  }, {
    "left" : "throw new IllegalStateException(\"Internal error: mismatched accessors, property: \"+this);",
    "right" : "throw new IllegalStateException(\"Internal error: mismatched accessors, property: \"+this);",
    "info" : "ThrowStatement[32203-32292]:ThrowStatement[32238-32327]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[32332-32339]:Modifier[32367-32374]"
  }, {
    "left" : "Set<PropertyName>",
    "right" : "Set<PropertyName>",
    "info" : "ParameterizedType[32340-32357]:ParameterizedType[32375-32392]"
  }, {
    "left" : "_findExplicitNames",
    "right" : "_findExplicitNames",
    "info" : "SimpleName[32358-32376]:SimpleName[32393-32411]"
  }, {
    "left" : "Linked<? extends AnnotatedMember> node",
    "right" : "Linked<? extends AnnotatedMember> node",
    "info" : "SingleVariableDeclaration[32377-32415]:SingleVariableDeclaration[32412-32450]"
  }, {
    "left" : "Set<PropertyName> renamed",
    "right" : "Set<PropertyName> renamed",
    "info" : "SingleVariableDeclaration[32429-32454]:SingleVariableDeclaration[32464-32489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32460-33137]:Block[32495-33172]"
  }, {
    "left" : "for (; node != null; node = node.next)",
    "right" : "for (; node != null; node = node.next)",
    "info" : "ForStatement[32470-33107]:ForStatement[32505-33142]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32509-33107]:Block[32544-33142]"
  }, {
    "left" : "if (!node.isNameExplicit || node.name == null)",
    "right" : "if (!node.isNameExplicit || node.name == null)",
    "info" : "IfStatement[32869-32957]:IfStatement[32904-32992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32916-32957]:Block[32951-32992]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[32934-32943]:ContinueStatement[32969-32978]"
  }, {
    "left" : "if (renamed == null)",
    "right" : "if (renamed == null)",
    "info" : "IfStatement[32970-33061]:IfStatement[33005-33096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32991-33061]:Block[33026-33096]"
  }, {
    "left" : "renamed = new HashSet<PropertyName>();",
    "right" : "renamed = new HashSet<PropertyName>();",
    "info" : "ExpressionStatement[33009-33047]:ExpressionStatement[33044-33082]"
  }, {
    "left" : "renamed.add(node.name);",
    "right" : "renamed.add(node.name);",
    "info" : "ExpressionStatement[33074-33097]:ExpressionStatement[33109-33132]"
  }, {
    "left" : "return renamed;",
    "right" : "return renamed;",
    "info" : "ReturnStatement[33116-33131]:ReturnStatement[33151-33166]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[33175-33184]:MarkerAnnotation[33210-33219]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33189-33195]:Modifier[33224-33230]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[33196-33202]:SimpleType[33231-33237]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[33203-33211]:SimpleName[33238-33246]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33218-33596]:Block[33253-33631]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder();",
    "right" : "StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[33228-33267]:VariableDeclarationStatement[33263-33302]"
  }, {
    "left" : "sb.append(\"[Property '\").append(_name)\n          .append(\"'; ctors: \").append(_ctorParameters)\n          .append(\", field(s): \").append(_fields)\n          .append(\", getter(s): \").append(_getters)\n          .append(\", setter(s): \").append(_setters)\n          ;",
    "right" : "sb.append(\"[Property '\").append(_name)\n          .append(\"'; ctors: \").append(_ctorParameters)\n          .append(\", field(s): \").append(_fields)\n          .append(\", getter(s): \").append(_getters)\n          .append(\", setter(s): \").append(_setters)\n          ;",
    "info" : "ExpressionStatement[33276-33536]:ExpressionStatement[33311-33571]"
  }, {
    "left" : "sb.append(\"]\");",
    "right" : "sb.append(\"]\");",
    "info" : "ExpressionStatement[33545-33560]:ExpressionStatement[33580-33595]"
  }, {
    "left" : "return sb.toString();",
    "right" : "return sb.toString();",
    "info" : "ReturnStatement[33569-33590]:ReturnStatement[33604-33625]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[33926-33935]:Modifier[33961-33970]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[33937-33938]:TypeParameter[33972-33973]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[33940-33941]:SimpleType[33975-33976]"
  }, {
    "left" : "fromMemberAnnotations",
    "right" : "fromMemberAnnotations",
    "info" : "SimpleName[33942-33963]:SimpleName[33977-33998]"
  }, {
    "left" : "WithMember<T> func",
    "right" : "WithMember<T> func",
    "info" : "SingleVariableDeclaration[33964-33982]:SingleVariableDeclaration[33999-34017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33988-34688]:Block[34023-34723]"
  }, {
    "left" : "T result = null;",
    "right" : "T result = null;",
    "info" : "VariableDeclarationStatement[33998-34014]:VariableDeclarationStatement[34033-34049]"
  }, {
    "left" : "if (_annotationIntrospector != null)",
    "right" : "if (_annotationIntrospector != null)",
    "info" : "IfStatement[34023-34659]:IfStatement[34058-34694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34060-34659]:Block[34095-34694]"
  }, {
    "left" : "if (_forSerialization)",
    "right" : "if (_forSerialization)",
    "info" : "IfStatement[34074-34525]:IfStatement[34109-34560]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34097-34232]:Block[34132-34267]"
  }, {
    "left" : "if (_getters != null)",
    "right" : "if (_getters != null)",
    "info" : "IfStatement[34115-34218]:IfStatement[34150-34253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34137-34218]:Block[34172-34253]"
  }, {
    "left" : "result = func.withMember(_getters.value);",
    "right" : "result = func.withMember(_getters.value);",
    "info" : "ExpressionStatement[34159-34200]:ExpressionStatement[34194-34235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34238-34525]:Block[34273-34560]"
  }, {
    "left" : "if (_ctorParameters != null)",
    "right" : "if (_ctorParameters != null)",
    "info" : "IfStatement[34256-34373]:IfStatement[34291-34408]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34285-34373]:Block[34320-34408]"
  }, {
    "left" : "result = func.withMember(_ctorParameters.value);",
    "right" : "result = func.withMember(_ctorParameters.value);",
    "info" : "ExpressionStatement[34307-34355]:ExpressionStatement[34342-34390]"
  }, {
    "left" : "if (result == null && _setters != null)",
    "right" : "if (result == null && _setters != null)",
    "info" : "IfStatement[34390-34511]:IfStatement[34425-34546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34430-34511]:Block[34465-34546]"
  }, {
    "left" : "result = func.withMember(_setters.value);",
    "right" : "result = func.withMember(_setters.value);",
    "info" : "ExpressionStatement[34452-34493]:ExpressionStatement[34487-34528]"
  }, {
    "left" : "if (result == null && _fields != null)",
    "right" : "if (result == null && _fields != null)",
    "info" : "IfStatement[34538-34649]:IfStatement[34573-34684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34577-34649]:Block[34612-34684]"
  }, {
    "left" : "result = func.withMember(_fields.value);",
    "right" : "result = func.withMember(_fields.value);",
    "info" : "ExpressionStatement[34595-34635]:ExpressionStatement[34630-34670]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[34668-34682]:ReturnStatement[34703-34717]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[34694-34703]:Modifier[34729-34738]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[34705-34706]:TypeParameter[34740-34741]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[34708-34709]:SimpleType[34743-34744]"
  }, {
    "left" : "fromMemberAnnotationsExcept",
    "right" : "fromMemberAnnotationsExcept",
    "info" : "SimpleName[34710-34737]:SimpleName[34745-34772]"
  }, {
    "left" : "WithMember<T> func",
    "right" : "WithMember<T> func",
    "info" : "SingleVariableDeclaration[34738-34756]:SingleVariableDeclaration[34773-34791]"
  }, {
    "left" : "T defaultValue",
    "right" : "T defaultValue",
    "info" : "SingleVariableDeclaration[34758-34772]:SingleVariableDeclaration[34793-34807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34778-36853]:Block[34813-36888]"
  }, {
    "left" : "if (_annotationIntrospector == null)",
    "right" : "if (_annotationIntrospector == null)",
    "info" : "IfStatement[34788-34861]:IfStatement[34823-34896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34825-34861]:Block[34860-34896]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[34839-34851]:ReturnStatement[34874-34886]"
  }, {
    "left" : "if (_forSerialization)",
    "right" : "if (_forSerialization)",
    "info" : "IfStatement[34991-35986]:IfStatement[35026-36021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35014-35986]:Block[35049-36021]"
  }, {
    "left" : "if (_getters != null)",
    "right" : "if (_getters != null)",
    "info" : "IfStatement[35028-35246]:IfStatement[35063-35281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35050-35246]:Block[35085-35281]"
  }, {
    "left" : "T result = func.withMember(_getters.value);",
    "right" : "T result = func.withMember(_getters.value);",
    "info" : "VariableDeclarationStatement[35068-35111]:VariableDeclarationStatement[35103-35146]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[35128-35232]:IfStatement[35163-35267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35178-35232]:Block[35213-35267]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[35200-35214]:ReturnStatement[35235-35249]"
  }, {
    "left" : "if (_fields != null)",
    "right" : "if (_fields != null)",
    "info" : "IfStatement[35259-35475]:IfStatement[35294-35510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35280-35475]:Block[35315-35510]"
  }, {
    "left" : "T result = func.withMember(_fields.value);",
    "right" : "T result = func.withMember(_fields.value);",
    "info" : "VariableDeclarationStatement[35298-35340]:VariableDeclarationStatement[35333-35375]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[35357-35461]:IfStatement[35392-35496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35407-35461]:Block[35442-35496]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[35429-35443]:ReturnStatement[35464-35478]"
  }, {
    "left" : "if (_ctorParameters != null)",
    "right" : "if (_ctorParameters != null)",
    "info" : "IfStatement[35488-35720]:IfStatement[35523-35755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35517-35720]:Block[35552-35755]"
  }, {
    "left" : "T result = func.withMember(_ctorParameters.value);",
    "right" : "T result = func.withMember(_ctorParameters.value);",
    "info" : "VariableDeclarationStatement[35535-35585]:VariableDeclarationStatement[35570-35620]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[35602-35706]:IfStatement[35637-35741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35652-35706]:Block[35687-35741]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[35674-35688]:ReturnStatement[35709-35723]"
  }, {
    "left" : "if (_setters != null)",
    "right" : "if (_setters != null)",
    "info" : "IfStatement[35733-35951]:IfStatement[35768-35986]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35755-35951]:Block[35790-35986]"
  }, {
    "left" : "T result = func.withMember(_setters.value);",
    "right" : "T result = func.withMember(_setters.value);",
    "info" : "VariableDeclarationStatement[35773-35816]:VariableDeclarationStatement[35808-35851]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[35833-35937]:IfStatement[35868-35972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35883-35937]:Block[35918-35972]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[35905-35919]:ReturnStatement[35940-35954]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[35964-35976]:ReturnStatement[35999-36011]"
  }, {
    "left" : "if (_ctorParameters != null)",
    "right" : "if (_ctorParameters != null)",
    "info" : "IfStatement[35995-36207]:IfStatement[36030-36242]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36024-36207]:Block[36059-36242]"
  }, {
    "left" : "T result = func.withMember(_ctorParameters.value);",
    "right" : "T result = func.withMember(_ctorParameters.value);",
    "info" : "VariableDeclarationStatement[36038-36088]:VariableDeclarationStatement[36073-36123]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[36101-36197]:IfStatement[36136-36232]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36151-36197]:Block[36186-36232]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[36169-36183]:ReturnStatement[36204-36218]"
  }, {
    "left" : "if (_setters != null)",
    "right" : "if (_setters != null)",
    "info" : "IfStatement[36216-36414]:IfStatement[36251-36449]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36238-36414]:Block[36273-36449]"
  }, {
    "left" : "T result = func.withMember(_setters.value);",
    "right" : "T result = func.withMember(_setters.value);",
    "info" : "VariableDeclarationStatement[36252-36295]:VariableDeclarationStatement[36287-36330]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[36308-36404]:IfStatement[36343-36439]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36358-36404]:Block[36393-36439]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[36376-36390]:ReturnStatement[36411-36425]"
  }, {
    "left" : "if (_fields != null)",
    "right" : "if (_fields != null)",
    "info" : "IfStatement[36423-36619]:IfStatement[36458-36654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36444-36619]:Block[36479-36654]"
  }, {
    "left" : "T result = func.withMember(_fields.value);",
    "right" : "T result = func.withMember(_fields.value);",
    "info" : "VariableDeclarationStatement[36458-36500]:VariableDeclarationStatement[36493-36535]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[36513-36609]:IfStatement[36548-36644]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36563-36609]:Block[36598-36644]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[36581-36595]:ReturnStatement[36616-36630]"
  }, {
    "left" : "if (_getters != null)",
    "right" : "if (_getters != null)",
    "info" : "IfStatement[36628-36826]:IfStatement[36663-36861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36650-36826]:Block[36685-36861]"
  }, {
    "left" : "T result = func.withMember(_getters.value);",
    "right" : "T result = func.withMember(_getters.value);",
    "info" : "VariableDeclarationStatement[36664-36707]:VariableDeclarationStatement[36699-36742]"
  }, {
    "left" : "if ((result != null) && (result != defaultValue))",
    "right" : "if ((result != null) && (result != defaultValue))",
    "info" : "IfStatement[36720-36816]:IfStatement[36755-36851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36770-36816]:Block[36805-36851]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[36788-36802]:ReturnStatement[36823-36837]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[36835-36847]:ReturnStatement[36870-36882]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37029-37036]:Modifier[37064-37071]"
  }, {
    "left" : "interface",
    "right" : "interface",
    "info" : "TYPE_DECLARATION_KIND[37037-37046]:TYPE_DECLARATION_KIND[37072-37081]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37071-37077]:Modifier[37106-37112]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[37078-37079]:SimpleType[37113-37114]"
  }, {
    "left" : "withMember",
    "right" : "withMember",
    "info" : "SimpleName[37080-37090]:SimpleName[37115-37125]"
  }, {
    "left" : "AnnotatedMember member",
    "right" : "AnnotatedMember member",
    "info" : "SingleVariableDeclaration[37091-37113]:SingleVariableDeclaration[37126-37148]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[37161-37170]:Modifier[37196-37205]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37171-37177]:Modifier[37206-37212]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[37178-37183]:TYPE_DECLARATION_KIND[37213-37218]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37312-37318]:Modifier[37347-37353]"
  }, {
    "left" : "MemberIterator",
    "right" : "MemberIterator",
    "info" : "SimpleName[37319-37333]:SimpleName[37354-37368]"
  }, {
    "left" : "Linked<T> first",
    "right" : "Linked<T> first",
    "info" : "SingleVariableDeclaration[37334-37349]:SingleVariableDeclaration[37369-37384]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37351-37388]:Block[37386-37423]"
  }, {
    "left" : "next = first;",
    "right" : "next = first;",
    "info" : "ExpressionStatement[37365-37378]:ExpressionStatement[37400-37413]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[37406-37415]:MarkerAnnotation[37441-37450]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37424-37430]:Modifier[37459-37465]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[37431-37438]:PrimitiveType[37466-37473]"
  }, {
    "left" : "hasNext",
    "right" : "hasNext",
    "info" : "SimpleName[37439-37446]:SimpleName[37474-37481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37449-37495]:Block[37484-37530]"
  }, {
    "left" : "return (next != null);",
    "right" : "return (next != null);",
    "info" : "ReturnStatement[37463-37485]:ReturnStatement[37498-37520]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[37505-37514]:MarkerAnnotation[37540-37549]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37523-37529]:Modifier[37558-37564]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[37530-37531]:SimpleType[37565-37566]"
  }, {
    "left" : "next",
    "right" : "next",
    "info" : "SimpleName[37532-37536]:SimpleName[37567-37571]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37539-37708]:Block[37574-37743]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[37553-37606]:IfStatement[37588-37641]"
  }, {
    "left" : "throw new NoSuchElementException();",
    "right" : "throw new NoSuchElementException();",
    "info" : "ThrowStatement[37571-37606]:ThrowStatement[37606-37641]"
  }, {
    "left" : "T result = next.value;",
    "right" : "T result = next.value;",
    "info" : "VariableDeclarationStatement[37619-37641]:VariableDeclarationStatement[37654-37676]"
  }, {
    "left" : "next = next.next;",
    "right" : "next = next.next;",
    "info" : "ExpressionStatement[37654-37671]:ExpressionStatement[37689-37706]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[37684-37698]:ReturnStatement[37719-37733]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[37718-37727]:MarkerAnnotation[37753-37762]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37736-37742]:Modifier[37771-37777]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[37743-37747]:PrimitiveType[37778-37782]"
  }, {
    "left" : "remove",
    "right" : "remove",
    "info" : "SimpleName[37748-37754]:SimpleName[37783-37789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37757-37823]:Block[37792-37858]"
  }, {
    "left" : "throw new UnsupportedOperationException();",
    "right" : "throw new UnsupportedOperationException();",
    "info" : "ThrowStatement[37771-37813]:ThrowStatement[37806-37848]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[37964-37973]:Modifier[37999-38008]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[37974-37979]:Modifier[38009-38014]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37980-37986]:Modifier[38015-38021]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[37987-37992]:TYPE_DECLARATION_KIND[38022-38027]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38265-38271]:Modifier[38300-38306]"
  }, {
    "left" : "Linked",
    "right" : "Linked",
    "info" : "SimpleName[38272-38278]:SimpleName[38307-38313]"
  }, {
    "left" : "T v",
    "right" : "T v",
    "info" : "SingleVariableDeclaration[38279-38282]:SingleVariableDeclaration[38314-38317]"
  }, {
    "left" : "Linked<T> n",
    "right" : "Linked<T> n",
    "info" : "SingleVariableDeclaration[38284-38295]:SingleVariableDeclaration[38319-38330]"
  }, {
    "left" : "PropertyName name",
    "right" : "PropertyName name",
    "info" : "SingleVariableDeclaration[38313-38330]:SingleVariableDeclaration[38348-38365]"
  }, {
    "left" : "boolean explName",
    "right" : "boolean explName",
    "info" : "SingleVariableDeclaration[38332-38348]:SingleVariableDeclaration[38367-38383]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[38350-38365]:SingleVariableDeclaration[38385-38400]"
  }, {
    "left" : "boolean ignored",
    "right" : "boolean ignored",
    "info" : "SingleVariableDeclaration[38367-38382]:SingleVariableDeclaration[38402-38417]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38392-39221]:Block[38427-39256]"
  }, {
    "left" : "value = v;",
    "right" : "value = v;",
    "info" : "ExpressionStatement[38406-38416]:ExpressionStatement[38441-38451]"
  }, {
    "left" : "next = n;",
    "right" : "next = n;",
    "info" : "ExpressionStatement[38429-38438]:ExpressionStatement[38464-38473]"
  }, {
    "left" : "this.name = (name == null || name.isEmpty()) ? null : name;",
    "right" : "this.name = (name == null || name.isEmpty()) ? null : name;",
    "info" : "ExpressionStatement[38509-38568]:ExpressionStatement[38544-38603]"
  }, {
    "left" : "if (explName)",
    "right" : "if (explName)",
    "info" : "IfStatement[38582-39087]:IfStatement[38617-39122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38596-39087]:Block[38631-39122]"
  }, {
    "left" : "if (this.name == null)",
    "right" : "if (this.name == null)",
    "info" : "IfStatement[38614-38813]:IfStatement[38649-38848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38637-38813]:Block[38672-38848]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Can not pass true for 'explName' if name is null/empty\");",
    "right" : "throw new IllegalArgumentException(\"Can not pass true for 'explName' if name is null/empty\");",
    "info" : "ThrowStatement[38702-38795]:ThrowStatement[38737-38830]"
  }, {
    "left" : "if (!name.hasSimpleName())",
    "right" : "if (!name.hasSimpleName())",
    "info" : "IfStatement[38989-39073]:IfStatement[39024-39108]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39016-39073]:Block[39051-39108]"
  }, {
    "left" : "explName = false;",
    "right" : "explName = false;",
    "info" : "ExpressionStatement[39038-39055]:ExpressionStatement[39073-39090]"
  }, {
    "left" : "isNameExplicit = explName;",
    "right" : "isNameExplicit = explName;",
    "info" : "ExpressionStatement[39113-39139]:ExpressionStatement[39148-39174]"
  }, {
    "left" : "isVisible = visible;",
    "right" : "isVisible = visible;",
    "info" : "ExpressionStatement[39152-39172]:ExpressionStatement[39187-39207]"
  }, {
    "left" : "isMarkedIgnored = ignored;",
    "right" : "isMarkedIgnored = ignored;",
    "info" : "ExpressionStatement[39185-39211]:ExpressionStatement[39220-39246]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39231-39237]:Modifier[39266-39272]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[39238-39247]:ParameterizedType[39273-39282]"
  }, {
    "left" : "withoutNext",
    "right" : "withoutNext",
    "info" : "SimpleName[39248-39259]:SimpleName[39283-39294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39262-39445]:Block[39297-39480]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[39276-39338]:IfStatement[39311-39373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39294-39338]:Block[39329-39373]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[39312-39324]:ReturnStatement[39347-39359]"
  }, {
    "left" : "return new Linked<T>(value, null, name, isNameExplicit, isVisible, isMarkedIgnored);",
    "right" : "return new Linked<T>(value, null, name, isNameExplicit, isVisible, isMarkedIgnored);",
    "info" : "ReturnStatement[39351-39435]:ReturnStatement[39386-39470]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39463-39469]:Modifier[39498-39504]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[39470-39479]:ParameterizedType[39505-39514]"
  }, {
    "left" : "withValue",
    "right" : "withValue",
    "info" : "SimpleName[39480-39489]:SimpleName[39515-39524]"
  }, {
    "left" : "T newValue",
    "right" : "T newValue",
    "info" : "SingleVariableDeclaration[39490-39500]:SingleVariableDeclaration[39525-39535]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39502-39693]:Block[39537-39728]"
  }, {
    "left" : "if (newValue == value)",
    "right" : "if (newValue == value)",
    "info" : "IfStatement[39516-39583]:IfStatement[39551-39618]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39539-39583]:Block[39574-39618]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[39557-39569]:ReturnStatement[39592-39604]"
  }, {
    "left" : "return new Linked<T>(newValue, next, name, isNameExplicit, isVisible, isMarkedIgnored);",
    "right" : "return new Linked<T>(newValue, next, name, isNameExplicit, isVisible, isMarkedIgnored);",
    "info" : "ReturnStatement[39596-39683]:ReturnStatement[39631-39718]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39711-39717]:Modifier[39746-39752]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[39718-39727]:ParameterizedType[39753-39762]"
  }, {
    "left" : "withNext",
    "right" : "withNext",
    "info" : "SimpleName[39728-39736]:SimpleName[39763-39771]"
  }, {
    "left" : "Linked<T> newNext",
    "right" : "Linked<T> newNext",
    "info" : "SingleVariableDeclaration[39737-39754]:SingleVariableDeclaration[39772-39789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39756-39945]:Block[39791-39980]"
  }, {
    "left" : "if (newNext == next)",
    "right" : "if (newNext == next)",
    "info" : "IfStatement[39770-39835]:IfStatement[39805-39870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39791-39835]:Block[39826-39870]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[39809-39821]:ReturnStatement[39844-39856]"
  }, {
    "left" : "return new Linked<T>(value, newNext, name, isNameExplicit, isVisible, isMarkedIgnored);",
    "right" : "return new Linked<T>(value, newNext, name, isNameExplicit, isVisible, isMarkedIgnored);",
    "info" : "ReturnStatement[39848-39935]:ReturnStatement[39883-39970]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39963-39969]:Modifier[39998-40004]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[39970-39979]:ParameterizedType[40005-40014]"
  }, {
    "left" : "withoutIgnored",
    "right" : "withoutIgnored",
    "info" : "SimpleName[39980-39994]:SimpleName[40015-40029]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39997-40360]:Block[40032-40395]"
  }, {
    "left" : "if (isMarkedIgnored)",
    "right" : "if (isMarkedIgnored)",
    "info" : "IfStatement[40011-40117]:IfStatement[40046-40152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40032-40117]:Block[40067-40152]"
  }, {
    "left" : "return (next == null) ? null : next.withoutIgnored();",
    "right" : "return (next == null) ? null : next.withoutIgnored();",
    "info" : "ReturnStatement[40050-40103]:ReturnStatement[40085-40138]"
  }, {
    "left" : "if (next != null)",
    "right" : "if (next != null)",
    "info" : "IfStatement[40130-40325]:IfStatement[40165-40360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40148-40325]:Block[40183-40360]"
  }, {
    "left" : "Linked<T> newNext = next.withoutIgnored();",
    "right" : "Linked<T> newNext = next.withoutIgnored();",
    "info" : "VariableDeclarationStatement[40166-40208]:VariableDeclarationStatement[40201-40243]"
  }, {
    "left" : "if (newNext != next)",
    "right" : "if (newNext != next)",
    "info" : "IfStatement[40225-40311]:IfStatement[40260-40346]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40246-40311]:Block[40281-40346]"
  }, {
    "left" : "return withNext(newNext);",
    "right" : "return withNext(newNext);",
    "info" : "ReturnStatement[40268-40293]:ReturnStatement[40303-40328]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[40338-40350]:ReturnStatement[40373-40385]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40378-40384]:Modifier[40413-40419]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[40385-40394]:ParameterizedType[40420-40429]"
  }, {
    "left" : "withoutNonVisible",
    "right" : "withoutNonVisible",
    "info" : "SimpleName[40395-40412]:SimpleName[40430-40447]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40415-40568]:Block[40450-40603]"
  }, {
    "left" : "Linked<T> newNext = (next == null) ? null : next.withoutNonVisible();",
    "right" : "Linked<T> newNext = (next == null) ? null : next.withoutNonVisible();",
    "info" : "VariableDeclarationStatement[40429-40498]:VariableDeclarationStatement[40464-40533]"
  }, {
    "left" : "return isVisible ? withNext(newNext) : newNext;",
    "right" : "return isVisible ? withNext(newNext) : newNext;",
    "info" : "ReturnStatement[40511-40558]:ReturnStatement[40546-40593]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[40693-40702]:Modifier[40728-40737]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[40703-40712]:ParameterizedType[40738-40747]"
  }, {
    "left" : "append",
    "right" : "append",
    "info" : "SimpleName[40713-40719]:SimpleName[40748-40754]"
  }, {
    "left" : "Linked<T> appendable",
    "right" : "Linked<T> appendable",
    "info" : "SingleVariableDeclaration[40720-40740]:SingleVariableDeclaration[40755-40775]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40742-40898]:Block[40777-40933]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[40756-40834]:IfStatement[40791-40869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40774-40834]:Block[40809-40869]"
  }, {
    "left" : "return withNext(appendable);",
    "right" : "return withNext(appendable);",
    "info" : "ReturnStatement[40792-40820]:ReturnStatement[40827-40855]"
  }, {
    "left" : "return withNext(next.append(appendable));",
    "right" : "return withNext(next.append(appendable));",
    "info" : "ReturnStatement[40847-40888]:ReturnStatement[40882-40923]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40908-40914]:Modifier[40943-40949]"
  }, {
    "left" : "Linked<T>",
    "right" : "Linked<T>",
    "info" : "ParameterizedType[40915-40924]:ParameterizedType[40950-40959]"
  }, {
    "left" : "trimByVisibility",
    "right" : "trimByVisibility",
    "info" : "SimpleName[40925-40941]:SimpleName[40960-40976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40944-41779]:Block[40979-41814]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[40958-41020]:IfStatement[40993-41055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40976-41020]:Block[41011-41055]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[40994-41006]:ReturnStatement[41029-41041]"
  }, {
    "left" : "Linked<T> newNext = next.trimByVisibility();",
    "right" : "Linked<T> newNext = next.trimByVisibility();",
    "info" : "VariableDeclarationStatement[41033-41077]:VariableDeclarationStatement[41068-41112]"
  }, {
    "left" : "if (name != null)",
    "right" : "if (name != null)",
    "info" : "IfStatement[41090-41383]:IfStatement[41125-41418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41108-41383]:Block[41143-41418]"
  }, {
    "left" : "if (newNext.name == null)",
    "right" : "if (newNext.name == null)",
    "info" : "IfStatement[41175-41288]:IfStatement[41210-41323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41201-41288]:Block[41236-41323]"
  }, {
    "left" : "return withNext(null);",
    "right" : "return withNext(null);",
    "info" : "ReturnStatement[41248-41270]:ReturnStatement[41283-41305]"
  }, {
    "left" : "return withNext(newNext);",
    "right" : "return withNext(newNext);",
    "info" : "ReturnStatement[41344-41369]:ReturnStatement[41379-41404]"
  }, {
    "left" : "if (newNext.name != null)",
    "right" : "if (newNext.name != null)",
    "info" : "IfStatement[41396-41506]:IfStatement[41431-41541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41422-41506]:Block[41457-41541]"
  }, {
    "left" : "return newNext;",
    "right" : "return newNext;",
    "info" : "ReturnStatement[41477-41492]:ReturnStatement[41512-41527]"
  }, {
    "left" : "if (isVisible == newNext.isVisible)",
    "right" : "if (isVisible == newNext.isVisible)",
    "info" : "IfStatement[41583-41712]:IfStatement[41618-41747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41619-41712]:Block[41654-41747]"
  }, {
    "left" : "return withNext(newNext);",
    "right" : "return withNext(newNext);",
    "info" : "ReturnStatement[41673-41698]:ReturnStatement[41708-41733]"
  }, {
    "left" : "return isVisible ? withNext(null) : newNext;",
    "right" : "return isVisible ? withNext(null) : newNext;",
    "info" : "ReturnStatement[41725-41769]:ReturnStatement[41760-41804]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[41797-41806]:MarkerAnnotation[41832-41841]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41815-41821]:Modifier[41850-41856]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[41822-41828]:SimpleType[41857-41863]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[41829-41837]:SimpleName[41864-41872]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41840-42120]:Block[41875-42155]"
  }, {
    "left" : "String msg = value.toString()+\"[visible=\"+isVisible+\",ignore=\"+isMarkedIgnored\n                    +\",explicitName=\"+isNameExplicit+\"]\";",
    "right" : "String msg = value.toString()+\"[visible=\"+isVisible+\",ignore=\"+isMarkedIgnored\n                    +\",explicitName=\"+isNameExplicit+\"]\";",
    "info" : "VariableDeclarationStatement[41854-41990]:VariableDeclarationStatement[41889-42025]"
  }, {
    "left" : "if (next != null)",
    "right" : "if (next != null)",
    "info" : "IfStatement[42003-42086]:IfStatement[42038-42121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42021-42086]:Block[42056-42121]"
  }, {
    "left" : "msg = msg + \", \"+next.toString();",
    "right" : "msg = msg + \", \"+next.toString();",
    "info" : "ExpressionStatement[42039-42072]:ExpressionStatement[42074-42107]"
  }, {
    "left" : "return msg;",
    "right" : "return msg;",
    "info" : "ReturnStatement[42099-42110]:ReturnStatement[42134-42145]"
  } ]
}