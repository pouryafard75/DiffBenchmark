{
  "matchedElements" : [
 {
    "left" : "class : AbstractLeastSquaresOptimizer",
    "right" : "class : AbstractLeastSquaresOptimizer",
    "info" : "TypeDeclaration[2358-23294]:TypeDeclaration[2358-23629]"
  }, {
    "left" : "DEFAULT_SINGULARITY_THRESHOLD",
    "right" : "DEFAULT_SINGULARITY_THRESHOLD",
    "info" : "FieldDeclaration[3431-3627]:FieldDeclaration[3431-3627]"
  }, {
    "left" : "weightedResidualJacobian",
    "right" : "weightedResidualJacobian",
    "info" : "FieldDeclaration[3632-4132]:FieldDeclaration[3632-4132]"
  }, {
    "left" : "cols",
    "right" : "cols",
    "info" : "FieldDeclaration[4137-4260]:FieldDeclaration[4137-4260]"
  }, {
    "left" : "rows",
    "right" : "rows",
    "info" : "FieldDeclaration[4265-4385]:FieldDeclaration[4265-4385]"
  }, {
    "left" : "point",
    "right" : "point",
    "info" : "FieldDeclaration[4390-4492]:FieldDeclaration[4390-4492]"
  }, {
    "left" : "objective",
    "right" : "objective",
    "info" : "FieldDeclaration[4497-4622]:FieldDeclaration[4497-4622]"
  }, {
    "left" : "weightedResiduals",
    "right" : "weightedResiduals",
    "info" : "FieldDeclaration[4627-4745]:FieldDeclaration[4627-4745]"
  }, {
    "left" : "cost",
    "right" : "cost",
    "info" : "FieldDeclaration[4750-4966]:FieldDeclaration[4750-4966]"
  }, {
    "left" : "jF",
    "right" : "jF",
    "info" : "FieldDeclaration[4971-5066]:FieldDeclaration[4971-5066]"
  }, {
    "left" : "jacobianEvaluations",
    "right" : "jacobianEvaluations",
    "info" : "FieldDeclaration[5071-5153]:FieldDeclaration[5071-5153]"
  }, {
    "left" : "weightMatrixSqrt",
    "right" : "weightMatrixSqrt",
    "info" : "FieldDeclaration[5158-5239]:FieldDeclaration[5158-5239]"
  }, {
    "left" : "protected AbstractLeastSquaresOptimizer()",
    "right" : "protected AbstractLeastSquaresOptimizer()",
    "info" : "MethodDeclaration[5245-5599]:MethodDeclaration[5245-5599]"
  }, {
    "left" : "protected AbstractLeastSquaresOptimizer(checker )",
    "right" : "protected AbstractLeastSquaresOptimizer(checker )",
    "info" : "MethodDeclaration[5605-5785]:MethodDeclaration[5605-5785]"
  }, {
    "left" : "public getJacobianEvaluations() : int",
    "right" : "public getJacobianEvaluations() : int",
    "info" : "MethodDeclaration[5791-5953]:MethodDeclaration[5791-5953]"
  }, {
    "left" : "protected updateJacobian() : void",
    "right" : "protected updateJacobian() : void",
    "info" : "MethodDeclaration[5959-6439]:MethodDeclaration[5959-6439]"
  }, {
    "left" : "protected computeWeightedJacobian(params ...) : ",
    "right" : "protected computeWeightedJacobian(params ...) : ",
    "info" : "MethodDeclaration[6445-7763]:MethodDeclaration[6445-7763]"
  }, {
    "left" : "protected updateResidualsAndCost() : void",
    "right" : "protected updateResidualsAndCost() : void",
    "info" : "MethodDeclaration[7769-8699]:MethodDeclaration[7769-8699]"
  }, {
    "left" : "protected computeCost(residuals ...) : double",
    "right" : "protected computeCost(residuals ...) : double",
    "info" : "MethodDeclaration[8705-9062]:MethodDeclaration[8705-9062]"
  }, {
    "left" : "public getRMS() : double",
    "right" : "public getRMS() : double",
    "info" : "MethodDeclaration[9068-9578]:MethodDeclaration[9068-9578]"
  }, {
    "left" : "public getChiSquare() : double",
    "right" : "public getChiSquare() : double",
    "info" : "MethodDeclaration[9584-9878]:MethodDeclaration[9584-9878]"
  }, {
    "left" : "public getWeightSquareRoot() : ",
    "right" : "public getWeightSquareRoot() : ",
    "info" : "MethodDeclaration[9884-10115]:MethodDeclaration[9884-10115]"
  }, {
    "left" : "protected setCost(cost double) : void",
    "right" : "protected setCost(cost double) : void",
    "info" : "MethodDeclaration[10121-10284]:MethodDeclaration[10121-10284]"
  }, {
    "left" : "public getCovariances() : ",
    "right" : "public getCovariances() : ",
    "info" : "MethodDeclaration[10290-10813]:MethodDeclaration[10290-10813]"
  }, {
    "left" : "public getCovariances(threshold double) : ",
    "right" : "public getCovariances(threshold double) : ",
    "info" : "MethodDeclaration[10819-11714]:MethodDeclaration[10819-11714]"
  }, {
    "left" : "public computeCovariances(params , threshold double) : ",
    "right" : "public computeCovariances(params , threshold double) : ",
    "info" : "MethodDeclaration[11720-12944]:MethodDeclaration[11720-12944]"
  }, {
    "left" : "public guessParametersErrors() : ",
    "right" : "public guessParametersErrors() : ",
    "info" : "MethodDeclaration[12950-15034]:MethodDeclaration[12950-15034]"
  }, {
    "left" : "public computeSigma(params , covarianceSingularityThreshold double) : ",
    "right" : "public computeSigma(params , covarianceSingularityThreshold double) : ",
    "info" : "MethodDeclaration[15040-16228]:MethodDeclaration[15040-16228]"
  }, {
    "left" : "public optimize(maxEval int, f , target , weights , startPoint ) : ",
    "right" : "public optimize(maxEval int, f , target , weights , startPoint ) : ",
    "info" : "MethodDeclaration[16234-17154]:MethodDeclaration[16234-17154]"
  }, {
    "left" : "public optimize(maxEval int, f , target , weights , startPoint ) : ",
    "right" : "public optimize(maxEval int, f , target , weights , startPoint ) : ",
    "info" : "MethodDeclaration[17160-18996]:MethodDeclaration[17160-18996]"
  }, {
    "left" : "protected optimizeInternal(maxEval int, f , ) : ",
    "right" : "protected optimizeInternal(maxEval int, f , ) : ",
    "info" : "MethodDeclaration[19002-20796]:MethodDeclaration[19002-20796]"
  }, {
    "left" : "protected setUp() : void",
    "right" : "protected setUp() : void",
    "info" : "MethodDeclaration[20802-21762]:MethodDeclaration[20802-21762]"
  }, {
    "left" : "protected computeResiduals(objectiveValue ) : ",
    "right" : "protected computeResiduals(objectiveValue ) : ",
    "info" : "MethodDeclaration[21768-22933]:MethodDeclaration[21768-22933]"
  }, {
    "left" : "private squareRoot(m ) : ",
    "right" : "private squareRoot(m ) : ",
    "info" : "MethodDeclaration[22939-23292]:MethodDeclaration[22939-23627]"
  } ],
  "mappings" : [
 {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[3210-3221]:MarkerAnnotation[3210-3221]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3222-3228]:Modifier[3222-3228]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[3229-3237]:Modifier[3229-3237]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3238-3243]:TYPE_DECLARATION_KIND[3238-3243]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[5539-5550]:MarkerAnnotation[5539-5550]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[5555-5564]:Modifier[5555-5564]"
  }, {
    "left" : "AbstractLeastSquaresOptimizer",
    "right" : "AbstractLeastSquaresOptimizer",
    "info" : "SimpleName[5565-5594]:SimpleName[5565-5594]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5597-5599]:Block[5597-5599]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[5664-5673]:Modifier[5664-5673]"
  }, {
    "left" : "AbstractLeastSquaresOptimizer",
    "right" : "AbstractLeastSquaresOptimizer",
    "info" : "SimpleName[5674-5703]:SimpleName[5674-5703]"
  }, {
    "left" : "ConvergenceChecker<PointVectorValuePair> checker",
    "right" : "ConvergenceChecker<PointVectorValuePair> checker",
    "info" : "SingleVariableDeclaration[5704-5752]:SingleVariableDeclaration[5704-5752]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5754-5785]:Block[5754-5785]"
  }, {
    "left" : "super(checker);",
    "right" : "super(checker);",
    "info" : "SuperConstructorInvocation[5764-5779]:SuperConstructorInvocation[5764-5779]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5874-5880]:Modifier[5874-5880]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[5881-5884]:PrimitiveType[5881-5884]"
  }, {
    "left" : "getJacobianEvaluations",
    "right" : "getJacobianEvaluations",
    "info" : "SimpleName[5885-5907]:SimpleName[5885-5907]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5910-5953]:Block[5910-5953]"
  }, {
    "left" : "return jacobianEvaluations;",
    "right" : "return jacobianEvaluations;",
    "info" : "ReturnStatement[5920-5947]:ReturnStatement[5920-5947]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[6226-6237]:MarkerAnnotation[6226-6237]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[6242-6251]:Modifier[6242-6251]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6252-6256]:PrimitiveType[6252-6256]"
  }, {
    "left" : "updateJacobian",
    "right" : "updateJacobian",
    "info" : "SimpleName[6257-6271]:SimpleName[6257-6271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6274-6439]:Block[6274-6439]"
  }, {
    "left" : "final RealMatrix weightedJacobian = computeWeightedJacobian(point);",
    "right" : "final RealMatrix weightedJacobian = computeWeightedJacobian(point);",
    "info" : "VariableDeclarationStatement[6284-6351]:VariableDeclarationStatement[6284-6351]"
  }, {
    "left" : "weightedResidualJacobian = weightedJacobian.scalarMultiply(-1).getData();",
    "right" : "weightedResidualJacobian = weightedJacobian.scalarMultiply(-1).getData();",
    "info" : "ExpressionStatement[6360-6433]:ExpressionStatement[6360-6433]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[6761-6770]:Modifier[6761-6770]"
  }, {
    "left" : "RealMatrix",
    "right" : "RealMatrix",
    "info" : "SimpleType[6771-6781]:SimpleType[6771-6781]"
  }, {
    "left" : "computeWeightedJacobian",
    "right" : "computeWeightedJacobian",
    "info" : "SimpleName[6782-6805]:SimpleName[6782-6805]"
  }, {
    "left" : "double[] params",
    "right" : "double[] params",
    "info" : "SingleVariableDeclaration[6806-6821]:SingleVariableDeclaration[6806-6821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6823-7763]:Block[6823-7763]"
  }, {
    "left" : "++jacobianEvaluations;",
    "right" : "++jacobianEvaluations;",
    "info" : "ExpressionStatement[6833-6855]:ExpressionStatement[6833-6855]"
  }, {
    "left" : "final DerivativeStructure[] dsPoint = new DerivativeStructure[params.length];",
    "right" : "final DerivativeStructure[] dsPoint = new DerivativeStructure[params.length];",
    "info" : "VariableDeclarationStatement[6865-6942]:VariableDeclarationStatement[6865-6942]"
  }, {
    "left" : "final int nC = params.length;",
    "right" : "final int nC = params.length;",
    "info" : "VariableDeclarationStatement[6951-6980]:VariableDeclarationStatement[6951-6980]"
  }, {
    "left" : "for (int i = 0; i < nC; ++i)",
    "right" : "for (int i = 0; i < nC; ++i)",
    "info" : "ForStatement[6989-7100]:ForStatement[6989-7100]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7018-7100]:Block[7018-7100]"
  }, {
    "left" : "dsPoint[i] = new DerivativeStructure(nC, 1, i, params[i]);",
    "right" : "dsPoint[i] = new DerivativeStructure(nC, 1, i, params[i]);",
    "info" : "ExpressionStatement[7032-7090]:ExpressionStatement[7032-7090]"
  }, {
    "left" : "final DerivativeStructure[] dsValue = jF.value(dsPoint);",
    "right" : "final DerivativeStructure[] dsValue = jF.value(dsPoint);",
    "info" : "VariableDeclarationStatement[7109-7165]:VariableDeclarationStatement[7109-7165]"
  }, {
    "left" : "final int nR = getTarget().length;",
    "right" : "final int nR = getTarget().length;",
    "info" : "VariableDeclarationStatement[7174-7208]:VariableDeclarationStatement[7174-7208]"
  }, {
    "left" : "if (dsValue.length != nR)",
    "right" : "if (dsValue.length != nR)",
    "info" : "IfStatement[7217-7324]:IfStatement[7217-7324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7243-7324]:Block[7243-7324]"
  }, {
    "left" : "throw new DimensionMismatchException(dsValue.length, nR);",
    "right" : "throw new DimensionMismatchException(dsValue.length, nR);",
    "info" : "ThrowStatement[7257-7314]:ThrowStatement[7257-7314]"
  }, {
    "left" : "final double[][] jacobianData = new double[nR][nC];",
    "right" : "final double[][] jacobianData = new double[nR][nC];",
    "info" : "VariableDeclarationStatement[7333-7384]:VariableDeclarationStatement[7333-7384]"
  }, {
    "left" : "for (int i = 0; i < nR; ++i)",
    "right" : "for (int i = 0; i < nR; ++i)",
    "info" : "ForStatement[7393-7670]:ForStatement[7393-7670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7422-7670]:Block[7422-7670]"
  }, {
    "left" : "int[] orders = new int[nC];",
    "right" : "int[] orders = new int[nC];",
    "info" : "VariableDeclarationStatement[7436-7463]:VariableDeclarationStatement[7436-7463]"
  }, {
    "left" : "for (int j = 0; j < nC; ++j)",
    "right" : "for (int j = 0; j < nC; ++j)",
    "info" : "ForStatement[7476-7660]:ForStatement[7476-7660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7505-7660]:Block[7505-7660]"
  }, {
    "left" : "orders[j] = 1;",
    "right" : "orders[j] = 1;",
    "info" : "ExpressionStatement[7523-7537]:ExpressionStatement[7523-7537]"
  }, {
    "left" : "jacobianData[i][j] = dsValue[i].getPartialDerivative(orders);",
    "right" : "jacobianData[i][j] = dsValue[i].getPartialDerivative(orders);",
    "info" : "ExpressionStatement[7554-7615]:ExpressionStatement[7554-7615]"
  }, {
    "left" : "orders[j] = 0;",
    "right" : "orders[j] = 0;",
    "info" : "ExpressionStatement[7632-7646]:ExpressionStatement[7632-7646]"
  }, {
    "left" : "return weightMatrixSqrt.multiply(MatrixUtils.createRealMatrix(jacobianData));",
    "right" : "return weightMatrixSqrt.multiply(MatrixUtils.createRealMatrix(jacobianData));",
    "info" : "ReturnStatement[7680-7757]:ReturnStatement[7680-7757]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[8286-8297]:MarkerAnnotation[8286-8297]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[8302-8311]:Modifier[8302-8311]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8312-8316]:PrimitiveType[8312-8316]"
  }, {
    "left" : "updateResidualsAndCost",
    "right" : "updateResidualsAndCost",
    "info" : "SimpleName[8317-8339]:SimpleName[8317-8339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8342-8699]:Block[8342-8699]"
  }, {
    "left" : "objective = computeObjectiveValue(point);",
    "right" : "objective = computeObjectiveValue(point);",
    "info" : "ExpressionStatement[8352-8393]:ExpressionStatement[8352-8393]"
  }, {
    "left" : "final double[] res = computeResiduals(objective);",
    "right" : "final double[] res = computeResiduals(objective);",
    "info" : "VariableDeclarationStatement[8402-8451]:VariableDeclarationStatement[8402-8451]"
  }, {
    "left" : "cost = computeCost(res);",
    "right" : "cost = computeCost(res);",
    "info" : "ExpressionStatement[8486-8510]:ExpressionStatement[8486-8510]"
  }, {
    "left" : "final ArrayRealVector residuals = new ArrayRealVector(res);",
    "right" : "final ArrayRealVector residuals = new ArrayRealVector(res);",
    "info" : "VariableDeclarationStatement[8559-8618]:VariableDeclarationStatement[8559-8618]"
  }, {
    "left" : "weightedResiduals = weightMatrixSqrt.operate(residuals).toArray();",
    "right" : "weightedResiduals = weightMatrixSqrt.operate(residuals).toArray();",
    "info" : "ExpressionStatement[8627-8693]:ExpressionStatement[8627-8693]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[8872-8881]:Modifier[8872-8881]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[8882-8888]:PrimitiveType[8882-8888]"
  }, {
    "left" : "computeCost",
    "right" : "computeCost",
    "info" : "SimpleName[8889-8900]:SimpleName[8889-8900]"
  }, {
    "left" : "double[] residuals",
    "right" : "double[] residuals",
    "info" : "SingleVariableDeclaration[8901-8919]:SingleVariableDeclaration[8901-8919]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8921-9062]:Block[8921-9062]"
  }, {
    "left" : "final ArrayRealVector r = new ArrayRealVector(residuals);",
    "right" : "final ArrayRealVector r = new ArrayRealVector(residuals);",
    "info" : "VariableDeclarationStatement[8931-8988]:VariableDeclarationStatement[8931-8988]"
  }, {
    "left" : "return FastMath.sqrt(r.dotProduct(getWeight().operate(r)));",
    "right" : "return FastMath.sqrt(r.dotProduct(getWeight().operate(r)));",
    "info" : "ReturnStatement[8997-9056]:ReturnStatement[8997-9056]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9495-9501]:Modifier[9495-9501]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[9502-9508]:PrimitiveType[9502-9508]"
  }, {
    "left" : "getRMS",
    "right" : "getRMS",
    "info" : "SimpleName[9509-9515]:SimpleName[9509-9515]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9518-9578]:Block[9518-9578]"
  }, {
    "left" : "return FastMath.sqrt(getChiSquare() / rows);",
    "right" : "return FastMath.sqrt(getChiSquare() / rows);",
    "info" : "ReturnStatement[9528-9572]:ReturnStatement[9528-9572]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9814-9820]:Modifier[9814-9820]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[9821-9827]:PrimitiveType[9821-9827]"
  }, {
    "left" : "getChiSquare",
    "right" : "getChiSquare",
    "info" : "SimpleName[9828-9840]:SimpleName[9828-9840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9843-9878]:Block[9843-9878]"
  }, {
    "left" : "return cost * cost;",
    "right" : "return cost * cost;",
    "info" : "ReturnStatement[9853-9872]:ReturnStatement[9853-9872]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10028-10034]:Modifier[10028-10034]"
  }, {
    "left" : "RealMatrix",
    "right" : "RealMatrix",
    "info" : "SimpleType[10035-10045]:SimpleType[10035-10045]"
  }, {
    "left" : "getWeightSquareRoot",
    "right" : "getWeightSquareRoot",
    "info" : "SimpleName[10046-10065]:SimpleName[10046-10065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10068-10115]:Block[10068-10115]"
  }, {
    "left" : "return weightMatrixSqrt.copy();",
    "right" : "return weightMatrixSqrt.copy();",
    "info" : "ReturnStatement[10078-10109]:ReturnStatement[10078-10109]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[10215-10224]:Modifier[10215-10224]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10225-10229]:PrimitiveType[10225-10229]"
  }, {
    "left" : "setCost",
    "right" : "setCost",
    "info" : "SimpleName[10230-10237]:SimpleName[10230-10237]"
  }, {
    "left" : "double cost",
    "right" : "double cost",
    "info" : "SingleVariableDeclaration[10238-10249]:SingleVariableDeclaration[10238-10249]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10251-10284]:Block[10251-10284]"
  }, {
    "left" : "this.cost = cost;",
    "right" : "this.cost = cost;",
    "info" : "ExpressionStatement[10261-10278]:ExpressionStatement[10261-10278]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[10693-10704]:MarkerAnnotation[10693-10704]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10709-10715]:Modifier[10709-10715]"
  }, {
    "left" : "double[][]",
    "right" : "double[][]",
    "info" : "ArrayType[10716-10726]:ArrayType[10716-10726]"
  }, {
    "left" : "getCovariances",
    "right" : "getCovariances",
    "info" : "SimpleName[10727-10741]:SimpleName[10727-10741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10744-10813]:Block[10744-10813]"
  }, {
    "left" : "return getCovariances(DEFAULT_SINGULARITY_THRESHOLD);",
    "right" : "return getCovariances(DEFAULT_SINGULARITY_THRESHOLD);",
    "info" : "ReturnStatement[10754-10807]:ReturnStatement[10754-10807]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[11587-11598]:MarkerAnnotation[11587-11598]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11603-11609]:Modifier[11603-11609]"
  }, {
    "left" : "double[][]",
    "right" : "double[][]",
    "info" : "ArrayType[11610-11620]:ArrayType[11610-11620]"
  }, {
    "left" : "getCovariances",
    "right" : "getCovariances",
    "info" : "SimpleName[11621-11635]:SimpleName[11621-11635]"
  }, {
    "left" : "double threshold",
    "right" : "double threshold",
    "info" : "SingleVariableDeclaration[11636-11652]:SingleVariableDeclaration[11636-11652]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11654-11714]:Block[11654-11714]"
  }, {
    "left" : "return computeCovariances(point, threshold);",
    "right" : "return computeCovariances(point, threshold);",
    "info" : "ReturnStatement[11664-11708]:ReturnStatement[11664-11708]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12443-12449]:Modifier[12443-12449]"
  }, {
    "left" : "double[][]",
    "right" : "double[][]",
    "info" : "ArrayType[12450-12460]:ArrayType[12450-12460]"
  }, {
    "left" : "computeCovariances",
    "right" : "computeCovariances",
    "info" : "SimpleName[12461-12479]:SimpleName[12461-12479]"
  }, {
    "left" : "double[] params",
    "right" : "double[] params",
    "info" : "SingleVariableDeclaration[12480-12495]:SingleVariableDeclaration[12480-12495]"
  }, {
    "left" : "double threshold",
    "right" : "double threshold",
    "info" : "SingleVariableDeclaration[12538-12554]:SingleVariableDeclaration[12538-12554]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12556-12944]:Block[12556-12944]"
  }, {
    "left" : "final RealMatrix j = computeWeightedJacobian(params);",
    "right" : "final RealMatrix j = computeWeightedJacobian(params);",
    "info" : "VariableDeclarationStatement[12598-12651]:VariableDeclarationStatement[12598-12651]"
  }, {
    "left" : "final RealMatrix jTj = j.transpose().multiply(j);",
    "right" : "final RealMatrix jTj = j.transpose().multiply(j);",
    "info" : "VariableDeclarationStatement[12695-12744]:VariableDeclarationStatement[12695-12744]"
  }, {
    "left" : "final DecompositionSolver solver\n            = new QRDecomposition(jTj, threshold).getSolver();",
    "right" : "final DecompositionSolver solver\n            = new QRDecomposition(jTj, threshold).getSolver();",
    "info" : "VariableDeclarationStatement[12797-12892]:VariableDeclarationStatement[12797-12892]"
  }, {
    "left" : "return solver.getInverse().getData();",
    "right" : "return solver.getInverse().getData();",
    "info" : "ReturnStatement[12901-12938]:ReturnStatement[12901-12938]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[14461-14472]:MarkerAnnotation[14461-14472]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14477-14483]:Modifier[14477-14483]"
  }, {
    "left" : "double[]",
    "right" : "double[]",
    "info" : "ArrayType[14484-14492]:ArrayType[14484-14492]"
  }, {
    "left" : "guessParametersErrors",
    "right" : "guessParametersErrors",
    "info" : "SimpleName[14493-14514]:SimpleName[14493-14514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14517-15034]:Block[14517-15034]"
  }, {
    "left" : "if (rows <= cols)",
    "right" : "if (rows <= cols)",
    "info" : "IfStatement[14527-14712]:IfStatement[14527-14712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14545-14712]:Block[14545-14712]"
  }, {
    "left" : "throw new NumberIsTooSmallException(LocalizedFormats.NO_DEGREES_OF_FREEDOM,\n                                                rows, cols, false);",
    "right" : "throw new NumberIsTooSmallException(LocalizedFormats.NO_DEGREES_OF_FREEDOM,\n                                                rows, cols, false);",
    "info" : "ThrowStatement[14559-14702]:ThrowStatement[14559-14702]"
  }, {
    "left" : "double[] errors = new double[cols];",
    "right" : "double[] errors = new double[cols];",
    "info" : "VariableDeclarationStatement[14721-14756]:VariableDeclarationStatement[14721-14756]"
  }, {
    "left" : "final double c = FastMath.sqrt(getChiSquare() / (rows - cols));",
    "right" : "final double c = FastMath.sqrt(getChiSquare() / (rows - cols));",
    "info" : "VariableDeclarationStatement[14765-14828]:VariableDeclarationStatement[14765-14828]"
  }, {
    "left" : "double[][] covar = computeCovariances(point, 1e-14);",
    "right" : "double[][] covar = computeCovariances(point, 1e-14);",
    "info" : "VariableDeclarationStatement[14837-14889]:VariableDeclarationStatement[14837-14889]"
  }, {
    "left" : "for (int i = 0; i < errors.length; ++i)",
    "right" : "for (int i = 0; i < errors.length; ++i)",
    "info" : "ForStatement[14898-15005]:ForStatement[14898-15005]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14938-15005]:Block[14938-15005]"
  }, {
    "left" : "errors[i] = FastMath.sqrt(covar[i][i]) * c;",
    "right" : "errors[i] = FastMath.sqrt(covar[i][i]) * c;",
    "info" : "ExpressionStatement[14952-14995]:ExpressionStatement[14952-14995]"
  }, {
    "left" : "return errors;",
    "right" : "return errors;",
    "info" : "ReturnStatement[15014-15028]:ReturnStatement[15014-15028]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15813-15819]:Modifier[15813-15819]"
  }, {
    "left" : "double[]",
    "right" : "double[]",
    "info" : "ArrayType[15820-15828]:ArrayType[15820-15828]"
  }, {
    "left" : "computeSigma",
    "right" : "computeSigma",
    "info" : "SimpleName[15829-15841]:SimpleName[15829-15841]"
  }, {
    "left" : "double[] params",
    "right" : "double[] params",
    "info" : "SingleVariableDeclaration[15842-15857]:SingleVariableDeclaration[15842-15857]"
  }, {
    "left" : "double covarianceSingularityThreshold",
    "right" : "double covarianceSingularityThreshold",
    "info" : "SingleVariableDeclaration[15892-15929]:SingleVariableDeclaration[15892-15929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15931-16228]:Block[15931-16228]"
  }, {
    "left" : "final int nC = params.length;",
    "right" : "final int nC = params.length;",
    "info" : "VariableDeclarationStatement[15941-15970]:VariableDeclarationStatement[15941-15970]"
  }, {
    "left" : "final double[] sig = new double[nC];",
    "right" : "final double[] sig = new double[nC];",
    "info" : "VariableDeclarationStatement[15979-16015]:VariableDeclarationStatement[15979-16015]"
  }, {
    "left" : "final double[][] cov = computeCovariances(params, covarianceSingularityThreshold);",
    "right" : "final double[][] cov = computeCovariances(params, covarianceSingularityThreshold);",
    "info" : "VariableDeclarationStatement[16024-16106]:VariableDeclarationStatement[16024-16106]"
  }, {
    "left" : "for (int i = 0; i < nC; ++i)",
    "right" : "for (int i = 0; i < nC; ++i)",
    "info" : "ForStatement[16115-16202]:ForStatement[16115-16202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16144-16202]:Block[16144-16202]"
  }, {
    "left" : "sig[i] = FastMath.sqrt(cov[i][i]);",
    "right" : "sig[i] = FastMath.sqrt(cov[i][i]);",
    "info" : "ExpressionStatement[16158-16192]:ExpressionStatement[16158-16192]"
  }, {
    "left" : "return sig;",
    "right" : "return sig;",
    "info" : "ReturnStatement[16211-16222]:ReturnStatement[16211-16222]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16518-16527]:MarkerAnnotation[16518-16527]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[16532-16543]:MarkerAnnotation[16532-16543]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16548-16554]:Modifier[16548-16554]"
  }, {
    "left" : "PointVectorValuePair",
    "right" : "PointVectorValuePair",
    "info" : "SimpleType[16555-16575]:SimpleType[16555-16575]"
  }, {
    "left" : "optimize",
    "right" : "optimize",
    "info" : "SimpleName[16576-16584]:SimpleName[16576-16584]"
  }, {
    "left" : "int maxEval",
    "right" : "int maxEval",
    "info" : "SingleVariableDeclaration[16585-16596]:SingleVariableDeclaration[16585-16596]"
  }, {
    "left" : "final DifferentiableMultivariateVectorFunction f",
    "right" : "final DifferentiableMultivariateVectorFunction f",
    "info" : "SingleVariableDeclaration[16639-16687]:SingleVariableDeclaration[16639-16687]"
  }, {
    "left" : "final double[] target",
    "right" : "final double[] target",
    "info" : "SingleVariableDeclaration[16730-16751]:SingleVariableDeclaration[16730-16751]"
  }, {
    "left" : "final double[] weights",
    "right" : "final double[] weights",
    "info" : "SingleVariableDeclaration[16753-16775]:SingleVariableDeclaration[16753-16775]"
  }, {
    "left" : "final double[] startPoint",
    "right" : "final double[] startPoint",
    "info" : "SingleVariableDeclaration[16818-16843]:SingleVariableDeclaration[16818-16843]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16845-17154]:Block[16845-17154]"
  }, {
    "left" : "return optimizeInternal(maxEval,\n                                FunctionUtils.toMultivariateDifferentiableVectorFunction(f),\n                                new Target(target),\n                                new Weight(weights),\n                                new InitialGuess(startPoint));",
    "right" : "return optimizeInternal(maxEval,\n                                FunctionUtils.toMultivariateDifferentiableVectorFunction(f),\n                                new Target(target),\n                                new Weight(weights),\n                                new InitialGuess(startPoint));",
    "info" : "ReturnStatement[16855-17148]:ReturnStatement[16855-17148]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[18458-18469]:MarkerAnnotation[18458-18469]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18474-18480]:Modifier[18474-18480]"
  }, {
    "left" : "PointVectorValuePair",
    "right" : "PointVectorValuePair",
    "info" : "SimpleType[18481-18501]:SimpleType[18481-18501]"
  }, {
    "left" : "optimize",
    "right" : "optimize",
    "info" : "SimpleName[18502-18510]:SimpleName[18502-18510]"
  }, {
    "left" : "final int maxEval",
    "right" : "final int maxEval",
    "info" : "SingleVariableDeclaration[18511-18528]:SingleVariableDeclaration[18511-18528]"
  }, {
    "left" : "final MultivariateDifferentiableVectorFunction f",
    "right" : "final MultivariateDifferentiableVectorFunction f",
    "info" : "SingleVariableDeclaration[18571-18619]:SingleVariableDeclaration[18571-18619]"
  }, {
    "left" : "final double[] target",
    "right" : "final double[] target",
    "info" : "SingleVariableDeclaration[18662-18683]:SingleVariableDeclaration[18662-18683]"
  }, {
    "left" : "final double[] weights",
    "right" : "final double[] weights",
    "info" : "SingleVariableDeclaration[18685-18707]:SingleVariableDeclaration[18685-18707]"
  }, {
    "left" : "final double[] startPoint",
    "right" : "final double[] startPoint",
    "info" : "SingleVariableDeclaration[18750-18775]:SingleVariableDeclaration[18750-18775]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18777-18996]:Block[18777-18996]"
  }, {
    "left" : "return optimizeInternal(maxEval, f,\n                                new Target(target),\n                                new Weight(weights),\n                                new InitialGuess(startPoint));",
    "right" : "return optimizeInternal(maxEval, f,\n                                new Target(target),\n                                new Weight(weights),\n                                new InitialGuess(startPoint));",
    "info" : "ReturnStatement[18787-18990]:ReturnStatement[18787-18990]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[20256-20267]:MarkerAnnotation[20256-20267]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[20272-20281]:Modifier[20272-20281]"
  }, {
    "left" : "PointVectorValuePair",
    "right" : "PointVectorValuePair",
    "info" : "SimpleType[20282-20302]:SimpleType[20282-20302]"
  }, {
    "left" : "optimizeInternal",
    "right" : "optimizeInternal",
    "info" : "SimpleName[20303-20319]:SimpleName[20303-20319]"
  }, {
    "left" : "final int maxEval",
    "right" : "final int maxEval",
    "info" : "SingleVariableDeclaration[20320-20337]:SingleVariableDeclaration[20320-20337]"
  }, {
    "left" : "final MultivariateDifferentiableVectorFunction f",
    "right" : "final MultivariateDifferentiableVectorFunction f",
    "info" : "SingleVariableDeclaration[20391-20439]:SingleVariableDeclaration[20391-20439]"
  }, {
    "left" : "OptimizationData... optData",
    "right" : "OptimizationData... optData",
    "info" : "SingleVariableDeclaration[20493-20520]:SingleVariableDeclaration[20493-20520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20522-20796]:Block[20522-20796]"
  }, {
    "left" : "return super.optimizeInternal(maxEval, FunctionUtils.toDifferentiableMultivariateVectorFunction(f), optData);",
    "right" : "return super.optimizeInternal(maxEval, FunctionUtils.toDifferentiableMultivariateVectorFunction(f), optData);",
    "info" : "ReturnStatement[20681-20790]:ReturnStatement[20681-20790]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20827-20836]:MarkerAnnotation[20827-20836]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[20841-20850]:Modifier[20841-20850]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20851-20855]:PrimitiveType[20851-20855]"
  }, {
    "left" : "setUp",
    "right" : "setUp",
    "info" : "SimpleName[20856-20861]:SimpleName[20856-20861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20864-21762]:Block[20864-21762]"
  }, {
    "left" : "super.setUp();",
    "right" : "super.setUp();",
    "info" : "ExpressionStatement[20874-20888]:ExpressionStatement[20874-20888]"
  }, {
    "left" : "jacobianEvaluations = 0;",
    "right" : "jacobianEvaluations = 0;",
    "info" : "ExpressionStatement[20924-20948]:ExpressionStatement[20924-20948]"
  }, {
    "left" : "weightMatrixSqrt = squareRoot(getWeight());",
    "right" : "weightMatrixSqrt = squareRoot(getWeight());",
    "info" : "ExpressionStatement[21003-21046]:ExpressionStatement[21003-21046]"
  }, {
    "left" : "jF = FunctionUtils.toMultivariateDifferentiableVectorFunction((DifferentiableMultivariateVectorFunction) getObjectiveFunction());",
    "right" : "jF = FunctionUtils.toMultivariateDifferentiableVectorFunction((DifferentiableMultivariateVectorFunction) getObjectiveFunction());",
    "info" : "ExpressionStatement[21464-21593]:ExpressionStatement[21464-21593]"
  }, {
    "left" : "point = getStartPoint();",
    "right" : "point = getStartPoint();",
    "info" : "ExpressionStatement[21668-21692]:ExpressionStatement[21668-21692]"
  }, {
    "left" : "rows = getTarget().length;",
    "right" : "rows = getTarget().length;",
    "info" : "ExpressionStatement[21701-21727]:ExpressionStatement[21701-21727]"
  }, {
    "left" : "cols = point.length;",
    "right" : "cols = point.length;",
    "info" : "ExpressionStatement[21736-21756]:ExpressionStatement[21736-21756]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[22411-22420]:Modifier[22411-22420]"
  }, {
    "left" : "double[]",
    "right" : "double[]",
    "info" : "ArrayType[22421-22429]:ArrayType[22421-22429]"
  }, {
    "left" : "computeResiduals",
    "right" : "computeResiduals",
    "info" : "SimpleName[22430-22446]:SimpleName[22430-22446]"
  }, {
    "left" : "double[] objectiveValue",
    "right" : "double[] objectiveValue",
    "info" : "SingleVariableDeclaration[22447-22470]:SingleVariableDeclaration[22447-22470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22472-22933]:Block[22472-22933]"
  }, {
    "left" : "final double[] target = getTarget();",
    "right" : "final double[] target = getTarget();",
    "info" : "VariableDeclarationStatement[22482-22518]:VariableDeclarationStatement[22482-22518]"
  }, {
    "left" : "if (objectiveValue.length != target.length)",
    "right" : "if (objectiveValue.length != target.length)",
    "info" : "IfStatement[22527-22719]:IfStatement[22527-22719]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22571-22719]:Block[22571-22719]"
  }, {
    "left" : "throw new DimensionMismatchException(target.length,\n                                                 objectiveValue.length);",
    "right" : "throw new DimensionMismatchException(target.length,\n                                                 objectiveValue.length);",
    "info" : "ThrowStatement[22585-22709]:ThrowStatement[22585-22709]"
  }, {
    "left" : "final double[] residuals = new double[target.length];",
    "right" : "final double[] residuals = new double[target.length];",
    "info" : "VariableDeclarationStatement[22729-22782]:VariableDeclarationStatement[22729-22782]"
  }, {
    "left" : "for (int i = 0; i < target.length; i++)",
    "right" : "for (int i = 0; i < target.length; i++)",
    "info" : "ForStatement[22791-22900]:ForStatement[22791-22900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22831-22900]:Block[22831-22900]"
  }, {
    "left" : "residuals[i] = target[i] - objectiveValue[i];",
    "right" : "residuals[i] = target[i] - objectiveValue[i];",
    "info" : "ExpressionStatement[22845-22890]:ExpressionStatement[22845-22890]"
  }, {
    "left" : "return residuals;",
    "right" : "return residuals;",
    "info" : "ReturnStatement[22910-22927]:ReturnStatement[22910-22927]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23131-23138]:Modifier[23131-23138]"
  }, {
    "left" : "RealMatrix",
    "right" : "RealMatrix",
    "info" : "SimpleType[23139-23149]:SimpleType[23139-23149]"
  }, {
    "left" : "squareRoot",
    "right" : "squareRoot",
    "info" : "SimpleName[23150-23160]:SimpleName[23150-23160]"
  }, {
    "left" : "RealMatrix m",
    "right" : "RealMatrix m",
    "info" : "SingleVariableDeclaration[23161-23173]:SingleVariableDeclaration[23161-23173]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23175-23292]:Block[23175-23627]"
  }, {
    "left" : "final EigenDecomposition dec = new EigenDecomposition(m);",
    "right" : "final EigenDecomposition dec = new EigenDecomposition(m);",
    "info" : "VariableDeclarationStatement[23189-23246]:VariableDeclarationStatement[23514-23571]"
  }, {
    "left" : "return dec.getSquareRoot();",
    "right" : "return dec.getSquareRoot();",
    "info" : "ReturnStatement[23259-23286]:ReturnStatement[23584-23611]"
  } ]
}