{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final Map<String, Own> endpoints;",
      "right" : "private final Map<String, Own> endpoints;",
      "info" : "FieldDeclaration[1135-1176]:FieldDeclaration[1163-1204]"
    }, {
      "left" : "private final Map<String, Pipe> inprocs;",
      "right" : "private final Map<String, Pipe> inprocs;",
      "info" : "FieldDeclaration[1220-1260]:FieldDeclaration[1248-1288]"
    }, {
      "left" : "private int tag;",
      "right" : "private int tag;",
      "info" : "FieldDeclaration[1320-1336]:FieldDeclaration[1348-1364]"
    }, {
      "left" : "private boolean ctxTerminated;",
      "right" : "private boolean ctxTerminated;",
      "info" : "FieldDeclaration[1402-1432]:FieldDeclaration[1430-1460]"
    }, {
      "left" : "private boolean destroyed;",
      "right" : "private boolean destroyed;",
      "info" : "FieldDeclaration[1640-1666]:FieldDeclaration[1668-1694]"
    }, {
      "left" : "private final Mailbox mailbox;",
      "right" : "private final Mailbox mailbox;",
      "info" : "FieldDeclaration[1705-1735]:FieldDeclaration[1733-1763]"
    }, {
      "left" : "private final List<Pipe> pipes;",
      "right" : "private final List<Pipe> pipes;",
      "info" : "FieldDeclaration[1773-1804]:FieldDeclaration[1801-1832]"
    }, {
      "left" : "private Poller poller;",
      "right" : "private Poller poller;",
      "info" : "FieldDeclaration[1871-1893]:FieldDeclaration[1899-1921]"
    }, {
      "left" : "private SelectableChannel handle;",
      "right" : "private SelectableChannel handle;",
      "info" : "FieldDeclaration[1898-1931]:FieldDeclaration[1926-1959]"
    }, {
      "left" : "private long lastTsc;",
      "right" : "private long lastTsc;",
      "info" : "FieldDeclaration[2002-2023]:FieldDeclaration[2030-2051]"
    }, {
      "left" : "private int ticks;",
      "right" : "private int ticks;",
      "info" : "FieldDeclaration[2096-2114]:FieldDeclaration[2124-2142]"
    }, {
      "left" : "private boolean rcvmore;",
      "right" : "private boolean rcvmore;",
      "info" : "FieldDeclaration[2181-2205]:FieldDeclaration[2209-2233]"
    }, {
      "left" : "private SocketBase monitorSocket;",
      "right" : "private SocketBase monitorSocket;",
      "info" : "FieldDeclaration[2233-2266]:FieldDeclaration[2261-2294]"
    }, {
      "left" : "private int monitorEvents;",
      "right" : "private int monitorEvents;",
      "info" : "FieldDeclaration[2313-2339]:FieldDeclaration[2341-2367]"
    }, {
      "left" : "protected ValueReference<Integer> errno;",
      "right" : "protected ValueReference<Integer> errno;",
      "info" : "FieldDeclaration[2345-2385]:FieldDeclaration[2373-2413]"
    }, {
      "left" : "protected SocketBase(Ctx parent, int tid, int sid)",
      "right" : "protected SocketBase(Ctx parent, int tid, int sid)",
      "info" : "MethodDeclaration[2391-3022]:MethodDeclaration[2419-3050]"
    }, {
      "left" : "protected abstract void xattachPipe(Pipe pipe, boolean icanhasall);",
      "right" : "protected abstract void xattachPipe(Pipe pipe, boolean icanhasall);",
      "info" : "MethodDeclaration[3129-3196]:MethodDeclaration[3157-3224]"
    }, {
      "left" : "protected abstract void xpipeTerminated(Pipe pipe);",
      "right" : "protected abstract void xpipeTerminated(Pipe pipe);",
      "info" : "MethodDeclaration[3201-3252]:MethodDeclaration[3229-3280]"
    }, {
      "left" : "public boolean checkTag()",
      "right" : "public boolean checkTag()",
      "info" : "MethodDeclaration[3307-3378]:MethodDeclaration[3335-3406]"
    }, {
      "left" : "public static SocketBase create(int type, Ctx parent, int tid, int sid)",
      "right" : "public static SocketBase create(int type, Ctx parent, int tid, int sid)",
      "info" : "MethodDeclaration[3429-4667]:MethodDeclaration[3457-4695]"
    }, {
      "left" : "public Mailbox getMailbox()",
      "right" : "public Mailbox getMailbox()",
      "info" : "MethodDeclaration[4820-4883]:MethodDeclaration[4949-5012]"
    }, {
      "left" : "public void stop()",
      "right" : "public void stop()",
      "info" : "MethodDeclaration[5013-5317]:MethodDeclaration[5142-5446]"
    }, {
      "left" : "private void checkProtocol(String protocol)",
      "right" : "private void checkProtocol(String protocol)",
      "info" : "MethodDeclaration[5456-6387]:MethodDeclaration[5585-6516]"
    }, {
      "left" : "private void attachPipe(Pipe pipe)",
      "right" : "private void attachPipe(Pipe pipe)",
      "info" : "MethodDeclaration[6437-6516]:MethodDeclaration[6566-6645]"
    }, {
      "left" : "private void attachPipe(Pipe pipe, boolean icanhasall)",
      "right" : "private void attachPipe(Pipe pipe, boolean icanhasall)",
      "info" : "MethodDeclaration[6522-7042]:MethodDeclaration[6651-7171]"
    }, {
      "left" : "public void setSocketOpt(int option, Object optval)",
      "right" : "public void setSocketOpt(int option, Object optval)",
      "info" : "MethodDeclaration[7048-7511]:MethodDeclaration[7177-7640]"
    }, {
      "left" : "public int getSocketOpt(int option)",
      "right" : "public int getSocketOpt(int option)",
      "info" : "MethodDeclaration[7517-8292]:MethodDeclaration[7646-8421]"
    }, {
      "left" : "public Object getsockoptx(int option)",
      "right" : "public Object getsockoptx(int option)",
      "info" : "MethodDeclaration[8298-9198]:MethodDeclaration[8427-9327]"
    }, {
      "left" : "public boolean bind(final String addr)",
      "right" : "public boolean bind(final String addr)",
      "info" : "MethodDeclaration[9204-11978]:MethodDeclaration[9333-12107]"
    }, {
      "left" : "public boolean connect(String addr)",
      "right" : "public boolean connect(String addr)",
      "info" : "MethodDeclaration[11984-17062]:MethodDeclaration[12113-17191]"
    }, {
      "left" : "private void addEndpoint(String addr, Own endpoint)",
      "right" : "private void addEndpoint(String addr, Own endpoint)",
      "info" : "MethodDeclaration[17134-17333]:MethodDeclaration[17263-17462]"
    }, {
      "left" : "public boolean termEndpoint(String addr)",
      "right" : "public boolean termEndpoint(String addr)",
      "info" : "MethodDeclaration[17339-19092]:MethodDeclaration[17468-19221]"
    }, {
      "left" : "public boolean send(Msg msg, int flags)",
      "right" : "public boolean send(Msg msg, int flags)",
      "info" : "MethodDeclaration[19098-21239]:MethodDeclaration[19227-21368]"
    }, {
      "left" : "public Msg recv(int flags)",
      "right" : "public Msg recv(int flags)",
      "info" : "MethodDeclaration[21245-24089]:MethodDeclaration[21374-24218]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[24095-24390]:MethodDeclaration[24224-24519]"
    }, {
      "left" : "boolean hasIn()",
      "right" : "boolean hasIn()",
      "info" : "MethodDeclaration[24525-24577]:MethodDeclaration[24654-24706]"
    }, {
      "left" : "boolean hasOut()",
      "right" : "boolean hasOut()",
      "info" : "MethodDeclaration[24583-24637]:MethodDeclaration[24712-24766]"
    }, {
      "left" : "public void startReaping(Poller poller)",
      "right" : "public void startReaping(Poller poller)",
      "info" : "MethodDeclaration[24737-25136]:MethodDeclaration[24866-25265]"
    }, {
      "left" : "private boolean processCommands(int timeout, boolean throttle)",
      "right" : "private boolean processCommands(int timeout, boolean throttle)",
      "info" : "MethodDeclaration[25391-27441]:MethodDeclaration[25520-27570]"
    }, {
      "left" : "protected void processStop()",
      "right" : "protected void processStop()",
      "info" : "MethodDeclaration[27447-27872]:MethodDeclaration[27576-28001]"
    }, {
      "left" : "protected void processBind(Pipe pipe)",
      "right" : "protected void processBind(Pipe pipe)",
      "info" : "MethodDeclaration[27878-27967]:MethodDeclaration[28007-28096]"
    }, {
      "left" : "protected void processTerm(int linger)",
      "right" : "protected void processTerm(int linger)",
      "info" : "MethodDeclaration[27973-28545]:MethodDeclaration[28102-28674]"
    }, {
      "left" : "protected void processDestroy()",
      "right" : "protected void processDestroy()",
      "info" : "MethodDeclaration[28599-28682]:MethodDeclaration[28728-28811]"
    }, {
      "left" : "protected boolean xsetsockopt(int option, Object optval)",
      "right" : "protected boolean xsetsockopt(int option, Object optval)",
      "info" : "MethodDeclaration[28849-28939]:MethodDeclaration[28978-29068]"
    }, {
      "left" : "protected boolean xhasOut()",
      "right" : "protected boolean xhasOut()",
      "info" : "MethodDeclaration[28945-29006]:MethodDeclaration[29074-29135]"
    }, {
      "left" : "protected boolean xsend(Msg msg)",
      "right" : "protected boolean xsend(Msg msg)",
      "info" : "MethodDeclaration[29012-29122]:MethodDeclaration[29141-29251]"
    }, {
      "left" : "protected boolean xhasIn()",
      "right" : "protected boolean xhasIn()",
      "info" : "MethodDeclaration[29128-29188]:MethodDeclaration[29257-29317]"
    }, {
      "left" : "protected Msg xrecv()",
      "right" : "protected Msg xrecv()",
      "info" : "MethodDeclaration[29194-29293]:MethodDeclaration[29323-29422]"
    }, {
      "left" : "protected void xreadActivated(Pipe pipe)",
      "right" : "protected void xreadActivated(Pipe pipe)",
      "info" : "MethodDeclaration[29299-29417]:MethodDeclaration[29428-29546]"
    }, {
      "left" : "protected void xwriteActivated(Pipe pipe)",
      "right" : "protected void xwriteActivated(Pipe pipe)",
      "info" : "MethodDeclaration[29423-29542]:MethodDeclaration[29552-29671]"
    }, {
      "left" : "protected void xhiccuped(Pipe pipe)",
      "right" : "protected void xhiccuped(Pipe pipe)",
      "info" : "MethodDeclaration[29548-29661]:MethodDeclaration[29677-29790]"
    }, {
      "left" : "public void inEvent()",
      "right" : "public void inEvent()",
      "info" : "MethodDeclaration[29667-30131]:MethodDeclaration[29796-30260]"
    }, {
      "left" : "public void outEvent()",
      "right" : "public void outEvent()",
      "info" : "MethodDeclaration[30137-30236]:MethodDeclaration[30266-30365]"
    }, {
      "left" : "public void connectEvent()",
      "right" : "public void connectEvent()",
      "info" : "MethodDeclaration[30242-30345]:MethodDeclaration[30371-30474]"
    }, {
      "left" : "public void acceptEvent()",
      "right" : "public void acceptEvent()",
      "info" : "MethodDeclaration[30351-30453]:MethodDeclaration[30480-30582]"
    }, {
      "left" : "public void timerEvent(int id)",
      "right" : "public void timerEvent(int id)",
      "info" : "MethodDeclaration[30459-30566]:MethodDeclaration[30588-30695]"
    }, {
      "left" : "private void checkDestroy()",
      "right" : "private void checkDestroy()",
      "info" : "MethodDeclaration[30716-31202]:MethodDeclaration[30845-31331]"
    }, {
      "left" : "public void readActivated(Pipe pipe)",
      "right" : "public void readActivated(Pipe pipe)",
      "info" : "MethodDeclaration[31208-31300]:MethodDeclaration[31337-31429]"
    }, {
      "left" : "public void writeActivated(Pipe pipe)",
      "right" : "public void writeActivated(Pipe pipe)",
      "info" : "MethodDeclaration[31306-31400]:MethodDeclaration[31435-31529]"
    }, {
      "left" : "public void hiccuped(Pipe pipe)",
      "right" : "public void hiccuped(Pipe pipe)",
      "info" : "MethodDeclaration[31406-31663]:MethodDeclaration[31535-31792]"
    }, {
      "left" : "public void pipeTerminated(Pipe pipe)",
      "right" : "public void pipeTerminated(Pipe pipe)",
      "info" : "MethodDeclaration[31669-32342]:MethodDeclaration[31798-32471]"
    }, {
      "left" : "private void extractFlags(Msg msg)",
      "right" : "private void extractFlags(Msg msg)",
      "info" : "MethodDeclaration[32456-32737]:MethodDeclaration[32585-32866]"
    }, {
      "left" : "public boolean monitor(final String addr, int events)",
      "right" : "public boolean monitor(final String addr, int events)",
      "info" : "MethodDeclaration[32743-34375]:MethodDeclaration[32872-34504]"
    }, {
      "left" : "public void event_connected(String addr, SelectableChannel ch)",
      "right" : "public void event_connected(String addr, SelectableChannel ch)",
      "info" : "MethodDeclaration[34381-34620]:MethodDeclaration[34510-34749]"
    }, {
      "left" : "public void eventConnectDelayed(String addr, int errno)",
      "right" : "public void eventConnectDelayed(String addr, int errno)",
      "info" : "MethodDeclaration[34626-34873]:MethodDeclaration[34755-35002]"
    }, {
      "left" : "public void eventConnectRetried(String addr, int interval)",
      "right" : "public void eventConnectRetried(String addr, int interval)",
      "info" : "MethodDeclaration[34879-35132]:MethodDeclaration[35008-35261]"
    }, {
      "left" : "public void event_listening(String addr, SelectableChannel ch)",
      "right" : "public void event_listening(String addr, SelectableChannel ch)",
      "info" : "MethodDeclaration[35138-35377]:MethodDeclaration[35267-35506]"
    }, {
      "left" : "public void event_bind_failed(String addr, int errno)",
      "right" : "public void event_bind_failed(String addr, int errno)",
      "info" : "MethodDeclaration[35383-35620]:MethodDeclaration[35512-35749]"
    }, {
      "left" : "public void eventAccepted(String addr, SelectableChannel ch)",
      "right" : "public void eventAccepted(String addr, SelectableChannel ch)",
      "info" : "MethodDeclaration[35626-35861]:MethodDeclaration[35755-35990]"
    }, {
      "left" : "public void eventAcceptFailed(String addr, int errno)",
      "right" : "public void eventAcceptFailed(String addr, int errno)",
      "info" : "MethodDeclaration[35867-36108]:MethodDeclaration[35996-36237]"
    }, {
      "left" : "public void eventClosed(String addr, SelectableChannel ch)",
      "right" : "public void eventClosed(String addr, SelectableChannel ch)",
      "info" : "MethodDeclaration[36114-36343]:MethodDeclaration[36243-36472]"
    }, {
      "left" : "public void eventCloseFailed(String addr, int errno)",
      "right" : "public void eventCloseFailed(String addr, int errno)",
      "info" : "MethodDeclaration[36349-36587]:MethodDeclaration[36478-36716]"
    }, {
      "left" : "public void eventDisconnected(String addr, SelectableChannel ch)",
      "right" : "public void eventDisconnected(String addr, SelectableChannel ch)",
      "info" : "MethodDeclaration[36593-36840]:MethodDeclaration[36722-36969]"
    }, {
      "left" : "protected void monitorEvent(ZMQ.Event event)",
      "right" : "protected void monitorEvent(ZMQ.Event event)",
      "info" : "MethodDeclaration[36846-37006]:MethodDeclaration[36975-37135]"
    }, {
      "left" : "protected void stopMonitor()",
      "right" : "protected void stopMonitor()",
      "info" : "MethodDeclaration[37012-37368]:MethodDeclaration[37141-37497]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[37374-37488]:MethodDeclaration[37503-37617]"
    }, {
      "left" : "public SelectableChannel getFD()",
      "right" : "public SelectableChannel getFD()",
      "info" : "MethodDeclaration[37494-37570]:MethodDeclaration[37623-37699]"
    }, {
      "left" : "public String typeString()",
      "right" : "public String typeString()",
      "info" : "MethodDeclaration[37576-38188]:MethodDeclaration[37705-38317]"
    }, {
      "left" : "public int errno()",
      "right" : "public int errno()",
      "info" : "MethodDeclaration[38194-38252]:MethodDeclaration[38323-38381]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2446-3022]:Block[2474-3050]"
    }, {
      "left" : "super(parent, tid);",
      "right" : "super(parent, tid);",
      "info" : "SuperConstructorInvocation[2456-2475]:SuperConstructorInvocation[2484-2503]"
    }, {
      "left" : "tag = 0xbaddecaf;",
      "right" : "tag = 0xbaddecaf;",
      "info" : "ExpressionStatement[2484-2501]:ExpressionStatement[2512-2529]"
    }, {
      "left" : "ctxTerminated = false;",
      "right" : "ctxTerminated = false;",
      "info" : "ExpressionStatement[2510-2532]:ExpressionStatement[2538-2560]"
    }, {
      "left" : "destroyed = false;",
      "right" : "destroyed = false;",
      "info" : "ExpressionStatement[2541-2559]:ExpressionStatement[2569-2587]"
    }, {
      "left" : "lastTsc = 0;",
      "right" : "lastTsc = 0;",
      "info" : "ExpressionStatement[2568-2580]:ExpressionStatement[2596-2608]"
    }, {
      "left" : "ticks = 0;",
      "right" : "ticks = 0;",
      "info" : "ExpressionStatement[2589-2599]:ExpressionStatement[2617-2627]"
    }, {
      "left" : "rcvmore = false;",
      "right" : "rcvmore = false;",
      "info" : "ExpressionStatement[2608-2624]:ExpressionStatement[2636-2652]"
    }, {
      "left" : "monitorSocket = null;",
      "right" : "monitorSocket = null;",
      "info" : "ExpressionStatement[2633-2654]:ExpressionStatement[2661-2682]"
    }, {
      "left" : "monitorEvents = 0;",
      "right" : "monitorEvents = 0;",
      "info" : "ExpressionStatement[2663-2681]:ExpressionStatement[2691-2709]"
    }, {
      "left" : "options.socketId = sid;",
      "right" : "options.socketId = sid;",
      "info" : "ExpressionStatement[2691-2714]:ExpressionStatement[2719-2742]"
    }, {
      "left" : "options.linger = parent.get(ZMQ.ZMQ_BLOCKY) != 0 ? -1 : 0;",
      "right" : "options.linger = parent.get(ZMQ.ZMQ_BLOCKY) != 0 ? -1 : 0;",
      "info" : "ExpressionStatement[2723-2781]:ExpressionStatement[2751-2809]"
    }, {
      "left" : "endpoints = new MultiMap<String, Own>();",
      "right" : "endpoints = new MultiMap<String, Own>();",
      "info" : "ExpressionStatement[2791-2831]:ExpressionStatement[2819-2859]"
    }, {
      "left" : "inprocs = new MultiMap<String, Pipe>();",
      "right" : "inprocs = new MultiMap<String, Pipe>();",
      "info" : "ExpressionStatement[2840-2879]:ExpressionStatement[2868-2907]"
    }, {
      "left" : "pipes = new ArrayList<Pipe>();",
      "right" : "pipes = new ArrayList<Pipe>();",
      "info" : "ExpressionStatement[2888-2918]:ExpressionStatement[2916-2946]"
    }, {
      "left" : "mailbox = new Mailbox(\"socket-\" + sid);",
      "right" : "mailbox = new Mailbox(\"socket-\" + sid);",
      "info" : "ExpressionStatement[2928-2967]:ExpressionStatement[2956-2995]"
    }, {
      "left" : "errno = new ValueReference<Integer>(0);",
      "right" : "errno = new ValueReference<Integer>(0);",
      "info" : "ExpressionStatement[2977-3016]:ExpressionStatement[3005-3044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3337-3378]:Block[3365-3406]"
    }, {
      "left" : "return tag == 0xbaddecaf;",
      "right" : "return tag == 0xbaddecaf;",
      "info" : "ReturnStatement[3347-3372]:ReturnStatement[3375-3400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3505-4667]:Block[3533-4695]"
    }, {
      "left" : "SocketBase s = null;",
      "right" : "SocketBase s = null;",
      "info" : "VariableDeclarationStatement[3515-3535]:VariableDeclarationStatement[3543-3563]"
    }, {
      "left" : "switch (type) {\n        case ZMQ.ZMQ_PAIR:\n            s = new Pair(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_PUB:\n            s = new Pub(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_SUB:\n            s = new Sub(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_REQ:\n            s = new Req(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_REP:\n            s = new Rep(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_DEALER:\n            s = new Dealer(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_ROUTER:\n            s = new Router(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_PULL:\n            s = new Pull(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_PUSH:\n            s = new Push(parent, tid, sid);\n            break;\n\n        case ZMQ.ZMQ_XPUB:\n            s = new XPub(parent, tid, sid);\n            break;\n\n        case ZMQ.ZMQ_XSUB:\n            s = new XSub(parent, tid, sid);\n            break;\n\n        default:\n            throw new IllegalArgumentException(\"type=\" + type);\n        }",
      "right" : "switch (type) {\n        case ZMQ.ZMQ_PAIR:\n            s = new Pair(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_PUB:\n            s = new Pub(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_SUB:\n            s = new Sub(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_REQ:\n            s = new Req(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_REP:\n            s = new Rep(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_DEALER:\n            s = new Dealer(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_ROUTER:\n            s = new Router(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_PULL:\n            s = new Pull(parent, tid, sid);\n            break;\n        case ZMQ.ZMQ_PUSH:\n            s = new Push(parent, tid, sid);\n            break;\n\n        case ZMQ.ZMQ_XPUB:\n            s = new XPub(parent, tid, sid);\n            break;\n\n        case ZMQ.ZMQ_XSUB:\n            s = new XSub(parent, tid, sid);\n            break;\n\n        default:\n            throw new IllegalArgumentException(\"type=\" + type);\n        }",
      "info" : "SwitchStatement[3544-4643]:SwitchStatement[3572-4671]"
    }, {
      "left" : "case ZMQ.ZMQ_PAIR:",
      "right" : "case ZMQ.ZMQ_PAIR:",
      "info" : "SwitchCase[3568-3586]:SwitchCase[3596-3614]"
    }, {
      "left" : "s = new Pair(parent, tid, sid);",
      "right" : "s = new Pair(parent, tid, sid);",
      "info" : "ExpressionStatement[3599-3630]:ExpressionStatement[3627-3658]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3643-3649]:BreakStatement[3671-3677]"
    }, {
      "left" : "case ZMQ.ZMQ_PUB:",
      "right" : "case ZMQ.ZMQ_PUB:",
      "info" : "SwitchCase[3658-3675]:SwitchCase[3686-3703]"
    }, {
      "left" : "s = new Pub(parent, tid, sid);",
      "right" : "s = new Pub(parent, tid, sid);",
      "info" : "ExpressionStatement[3688-3718]:ExpressionStatement[3716-3746]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3731-3737]:BreakStatement[3759-3765]"
    }, {
      "left" : "case ZMQ.ZMQ_SUB:",
      "right" : "case ZMQ.ZMQ_SUB:",
      "info" : "SwitchCase[3746-3763]:SwitchCase[3774-3791]"
    }, {
      "left" : "s = new Sub(parent, tid, sid);",
      "right" : "s = new Sub(parent, tid, sid);",
      "info" : "ExpressionStatement[3776-3806]:ExpressionStatement[3804-3834]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3819-3825]:BreakStatement[3847-3853]"
    }, {
      "left" : "case ZMQ.ZMQ_REQ:",
      "right" : "case ZMQ.ZMQ_REQ:",
      "info" : "SwitchCase[3834-3851]:SwitchCase[3862-3879]"
    }, {
      "left" : "s = new Req(parent, tid, sid);",
      "right" : "s = new Req(parent, tid, sid);",
      "info" : "ExpressionStatement[3864-3894]:ExpressionStatement[3892-3922]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3907-3913]:BreakStatement[3935-3941]"
    }, {
      "left" : "case ZMQ.ZMQ_REP:",
      "right" : "case ZMQ.ZMQ_REP:",
      "info" : "SwitchCase[3922-3939]:SwitchCase[3950-3967]"
    }, {
      "left" : "s = new Rep(parent, tid, sid);",
      "right" : "s = new Rep(parent, tid, sid);",
      "info" : "ExpressionStatement[3952-3982]:ExpressionStatement[3980-4010]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3995-4001]:BreakStatement[4023-4029]"
    }, {
      "left" : "case ZMQ.ZMQ_DEALER:",
      "right" : "case ZMQ.ZMQ_DEALER:",
      "info" : "SwitchCase[4010-4030]:SwitchCase[4038-4058]"
    }, {
      "left" : "s = new Dealer(parent, tid, sid);",
      "right" : "s = new Dealer(parent, tid, sid);",
      "info" : "ExpressionStatement[4043-4076]:ExpressionStatement[4071-4104]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4089-4095]:BreakStatement[4117-4123]"
    }, {
      "left" : "case ZMQ.ZMQ_ROUTER:",
      "right" : "case ZMQ.ZMQ_ROUTER:",
      "info" : "SwitchCase[4104-4124]:SwitchCase[4132-4152]"
    }, {
      "left" : "s = new Router(parent, tid, sid);",
      "right" : "s = new Router(parent, tid, sid);",
      "info" : "ExpressionStatement[4137-4170]:ExpressionStatement[4165-4198]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4183-4189]:BreakStatement[4211-4217]"
    }, {
      "left" : "case ZMQ.ZMQ_PULL:",
      "right" : "case ZMQ.ZMQ_PULL:",
      "info" : "SwitchCase[4198-4216]:SwitchCase[4226-4244]"
    }, {
      "left" : "s = new Pull(parent, tid, sid);",
      "right" : "s = new Pull(parent, tid, sid);",
      "info" : "ExpressionStatement[4229-4260]:ExpressionStatement[4257-4288]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4273-4279]:BreakStatement[4301-4307]"
    }, {
      "left" : "case ZMQ.ZMQ_PUSH:",
      "right" : "case ZMQ.ZMQ_PUSH:",
      "info" : "SwitchCase[4288-4306]:SwitchCase[4316-4334]"
    }, {
      "left" : "s = new Push(parent, tid, sid);",
      "right" : "s = new Push(parent, tid, sid);",
      "info" : "ExpressionStatement[4319-4350]:ExpressionStatement[4347-4378]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4363-4369]:BreakStatement[4391-4397]"
    }, {
      "left" : "case ZMQ.ZMQ_XPUB:",
      "right" : "case ZMQ.ZMQ_XPUB:",
      "info" : "SwitchCase[4379-4397]:SwitchCase[4407-4425]"
    }, {
      "left" : "s = new XPub(parent, tid, sid);",
      "right" : "s = new XPub(parent, tid, sid);",
      "info" : "ExpressionStatement[4410-4441]:ExpressionStatement[4438-4469]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4454-4460]:BreakStatement[4482-4488]"
    }, {
      "left" : "case ZMQ.ZMQ_XSUB:",
      "right" : "case ZMQ.ZMQ_XSUB:",
      "info" : "SwitchCase[4470-4488]:SwitchCase[4498-4516]"
    }, {
      "left" : "s = new XSub(parent, tid, sid);",
      "right" : "s = new XSub(parent, tid, sid);",
      "info" : "ExpressionStatement[4501-4532]:ExpressionStatement[4529-4560]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4545-4551]:BreakStatement[4573-4579]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[4561-4569]:SwitchCase[4589-4597]"
    }, {
      "left" : "throw new IllegalArgumentException(\"type=\" + type);",
      "right" : "throw new IllegalArgumentException(\"type=\" + type);",
      "info" : "ThrowStatement[4582-4633]:ThrowStatement[4610-4661]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[4652-4661]:ReturnStatement[4680-4689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4852-4883]:Block[4981-5012]"
    }, {
      "left" : "return mailbox;",
      "right" : "return mailbox;",
      "info" : "ReturnStatement[4862-4877]:ReturnStatement[4991-5006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5036-5317]:Block[5165-5446]"
    }, {
      "left" : "sendStop();",
      "right" : "sendStop();",
      "info" : "ExpressionStatement[5300-5311]:ExpressionStatement[5429-5440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5504-6387]:Block[5633-6516]"
    }, {
      "left" : "if (!protocol.equals(\"inproc\") && !protocol.equals(\"ipc\") && !protocol.equals(\"tcp\"))",
      "right" : "if (!protocol.equals(\"inproc\") && !protocol.equals(\"ipc\") && !protocol.equals(\"tcp\"))",
      "info" : "IfStatement[5592-5825]:IfStatement[5721-5954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5751-5825]:Block[5880-5954]"
    }, {
      "left" : "throw new UnsupportedOperationException(protocol);",
      "right" : "throw new UnsupportedOperationException(protocol);",
      "info" : "ThrowStatement[5765-5815]:ThrowStatement[5894-5944]"
    }, {
      "left" : "if ((protocol.equals(\"pgm\") || protocol.equals(\"epgm\")) &&\n              options.type != ZMQ.ZMQ_PUB && options.type != ZMQ.ZMQ_SUB &&\n              options.type != ZMQ.ZMQ_XPUB && options.type != ZMQ.ZMQ_XSUB)",
      "right" : "if ((protocol.equals(\"pgm\") || protocol.equals(\"epgm\")) &&\n              options.type != ZMQ.ZMQ_PUB && options.type != ZMQ.ZMQ_SUB &&\n              options.type != ZMQ.ZMQ_XPUB && options.type != ZMQ.ZMQ_XSUB)",
      "info" : "IfStatement[6034-6345]:IfStatement[6163-6474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6245-6345]:Block[6374-6474]"
    }, {
      "left" : "throw new UnsupportedOperationException(protocol + \",type=\" + options.type);",
      "right" : "throw new UnsupportedOperationException(protocol + \",type=\" + options.type);",
      "info" : "ThrowStatement[6259-6335]:ThrowStatement[6388-6464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6476-6516]:Block[6605-6645]"
    }, {
      "left" : "attachPipe(pipe, false);",
      "right" : "attachPipe(pipe, false);",
      "info" : "ExpressionStatement[6486-6510]:ExpressionStatement[6615-6639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6581-7042]:Block[6710-7171]"
    }, {
      "left" : "pipe.setEventSink(this);",
      "right" : "pipe.setEventSink(this);",
      "info" : "ExpressionStatement[6667-6691]:ExpressionStatement[6796-6820]"
    }, {
      "left" : "pipes.add(pipe);",
      "right" : "pipes.add(pipe);",
      "info" : "ExpressionStatement[6700-6716]:ExpressionStatement[6829-6845]"
    }, {
      "left" : "xattachPipe(pipe, icanhasall);",
      "right" : "xattachPipe(pipe, icanhasall);",
      "info" : "ExpressionStatement[6787-6817]:ExpressionStatement[6916-6946]"
    }, {
      "left" : "if (isTerminating())",
      "right" : "if (isTerminating())",
      "info" : "IfStatement[6936-7036]:IfStatement[7065-7165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6957-7036]:Block[7086-7165]"
    }, {
      "left" : "registerTermAcks(1);",
      "right" : "registerTermAcks(1);",
      "info" : "ExpressionStatement[6971-6991]:ExpressionStatement[7100-7120]"
    }, {
      "left" : "pipe.terminate(false);",
      "right" : "pipe.terminate(false);",
      "info" : "ExpressionStatement[7004-7026]:ExpressionStatement[7133-7155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7104-7511]:Block[7233-7640]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[7114-7199]:IfStatement[7243-7328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7133-7199]:Block[7262-7328]"
    }, {
      "left" : "throw new ZError.CtxTerminatedException();",
      "right" : "throw new ZError.CtxTerminatedException();",
      "info" : "ThrowStatement[7147-7189]:ThrowStatement[7276-7318]"
    }, {
      "left" : "if (xsetsockopt(option, optval))",
      "right" : "if (xsetsockopt(option, optval))",
      "info" : "IfStatement[7285-7349]:IfStatement[7414-7478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7318-7349]:Block[7447-7478]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7332-7339]:ReturnStatement[7461-7468]"
    }, {
      "left" : "options.setSocketOpt(option, optval);",
      "right" : "options.setSocketOpt(option, optval);",
      "info" : "ExpressionStatement[7468-7505]:ExpressionStatement[7597-7634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7557-8292]:Block[7686-8421]"
    }, {
      "left" : "if (option != ZMQ.ZMQ_EVENTS && ctxTerminated)",
      "right" : "if (option != ZMQ.ZMQ_EVENTS && ctxTerminated)",
      "info" : "IfStatement[7567-7680]:IfStatement[7696-7809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7614-7680]:Block[7743-7809]"
    }, {
      "left" : "throw new ZError.CtxTerminatedException();",
      "right" : "throw new ZError.CtxTerminatedException();",
      "info" : "ThrowStatement[7628-7670]:ThrowStatement[7757-7799]"
    }, {
      "left" : "if (option == ZMQ.ZMQ_RCVMORE)",
      "right" : "if (option == ZMQ.ZMQ_RCVMORE)",
      "info" : "IfStatement[7728-7806]:IfStatement[7857-7935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7759-7806]:Block[7888-7935]"
    }, {
      "left" : "return rcvmore ? 1 : 0;",
      "right" : "return rcvmore ? 1 : 0;",
      "info" : "ReturnStatement[7773-7796]:ReturnStatement[7902-7925]"
    }, {
      "left" : "if (option == ZMQ.ZMQ_EVENTS)",
      "right" : "if (option == ZMQ.ZMQ_EVENTS)",
      "info" : "IfStatement[7815-8239]:IfStatement[7944-8368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7845-8239]:Block[7974-8368]"
    }, {
      "left" : "boolean rc = processCommands(0, false);",
      "right" : "boolean rc = processCommands(0, false);",
      "info" : "VariableDeclarationStatement[7859-7898]:VariableDeclarationStatement[7988-8027]"
    }, {
      "left" : "if (!rc && errno.get() == ZError.ETERM)",
      "right" : "if (!rc && errno.get() == ZError.ETERM)",
      "info" : "IfStatement[7911-7993]:IfStatement[8040-8122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7951-7993]:Block[8080-8122]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[7969-7979]:ReturnStatement[8098-8108]"
    }, {
      "left" : "assert (rc);",
      "right" : "assert (rc);",
      "info" : "AssertStatement[8006-8018]:AssertStatement[8135-8147]"
    }, {
      "left" : "int val = 0;",
      "right" : "int val = 0;",
      "info" : "VariableDeclarationStatement[8031-8043]:VariableDeclarationStatement[8160-8172]"
    }, {
      "left" : "if (hasOut())",
      "right" : "if (hasOut())",
      "info" : "IfStatement[8056-8125]:IfStatement[8185-8254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8070-8125]:Block[8199-8254]"
    }, {
      "left" : "val |= ZMQ.ZMQ_POLLOUT;",
      "right" : "val |= ZMQ.ZMQ_POLLOUT;",
      "info" : "ExpressionStatement[8088-8111]:ExpressionStatement[8217-8240]"
    }, {
      "left" : "if (hasIn())",
      "right" : "if (hasIn())",
      "info" : "IfStatement[8138-8205]:IfStatement[8267-8334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8151-8205]:Block[8280-8334]"
    }, {
      "left" : "val |= ZMQ.ZMQ_POLLIN;",
      "right" : "val |= ZMQ.ZMQ_POLLIN;",
      "info" : "ExpressionStatement[8169-8191]:ExpressionStatement[8298-8320]"
    }, {
      "left" : "return val;",
      "right" : "return val;",
      "info" : "ReturnStatement[8218-8229]:ReturnStatement[8347-8358]"
    }, {
      "left" : "return (Integer) getsockoptx(option);",
      "right" : "return (Integer) getsockoptx(option);",
      "info" : "ReturnStatement[8249-8286]:ReturnStatement[8378-8415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8340-9198]:Block[8469-9327]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[8350-8435]:IfStatement[8479-8564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8369-8435]:Block[8498-8564]"
    }, {
      "left" : "throw new ZError.CtxTerminatedException();",
      "right" : "throw new ZError.CtxTerminatedException();",
      "info" : "ThrowStatement[8383-8425]:ThrowStatement[8512-8554]"
    }, {
      "left" : "if (option == ZMQ.ZMQ_RCVMORE)",
      "right" : "if (option == ZMQ.ZMQ_RCVMORE)",
      "info" : "IfStatement[8445-8523]:IfStatement[8574-8652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8476-8523]:Block[8605-8652]"
    }, {
      "left" : "return rcvmore ? 1 : 0;",
      "right" : "return rcvmore ? 1 : 0;",
      "info" : "ReturnStatement[8490-8513]:ReturnStatement[8619-8642]"
    }, {
      "left" : "if (option == ZMQ.ZMQ_FD)",
      "right" : "if (option == ZMQ.ZMQ_FD)",
      "info" : "IfStatement[8533-8606]:IfStatement[8662-8735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8559-8606]:Block[8688-8735]"
    }, {
      "left" : "return mailbox.getFd();",
      "right" : "return mailbox.getFd();",
      "info" : "ReturnStatement[8573-8596]:ReturnStatement[8702-8725]"
    }, {
      "left" : "if (option == ZMQ.ZMQ_EVENTS)",
      "right" : "if (option == ZMQ.ZMQ_EVENTS)",
      "info" : "IfStatement[8616-9040]:IfStatement[8745-9169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8646-9040]:Block[8775-9169]"
    }, {
      "left" : "boolean rc = processCommands(0, false);",
      "right" : "boolean rc = processCommands(0, false);",
      "info" : "VariableDeclarationStatement[8660-8699]:VariableDeclarationStatement[8789-8828]"
    }, {
      "left" : "if (!rc && errno.get() == ZError.ETERM)",
      "right" : "if (!rc && errno.get() == ZError.ETERM)",
      "info" : "IfStatement[8712-8794]:IfStatement[8841-8923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8752-8794]:Block[8881-8923]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[8770-8780]:ReturnStatement[8899-8909]"
    }, {
      "left" : "assert (rc);",
      "right" : "assert (rc);",
      "info" : "AssertStatement[8807-8819]:AssertStatement[8936-8948]"
    }, {
      "left" : "int val = 0;",
      "right" : "int val = 0;",
      "info" : "VariableDeclarationStatement[8832-8844]:VariableDeclarationStatement[8961-8973]"
    }, {
      "left" : "if (hasOut())",
      "right" : "if (hasOut())",
      "info" : "IfStatement[8857-8926]:IfStatement[8986-9055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8871-8926]:Block[9000-9055]"
    }, {
      "left" : "val |= ZMQ.ZMQ_POLLOUT;",
      "right" : "val |= ZMQ.ZMQ_POLLOUT;",
      "info" : "ExpressionStatement[8889-8912]:ExpressionStatement[9018-9041]"
    }, {
      "left" : "if (hasIn())",
      "right" : "if (hasIn())",
      "info" : "IfStatement[8939-9006]:IfStatement[9068-9135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8952-9006]:Block[9081-9135]"
    }, {
      "left" : "val |= ZMQ.ZMQ_POLLIN;",
      "right" : "val |= ZMQ.ZMQ_POLLIN;",
      "info" : "ExpressionStatement[8970-8992]:ExpressionStatement[9099-9121]"
    }, {
      "left" : "return val;",
      "right" : "return val;",
      "info" : "ReturnStatement[9019-9030]:ReturnStatement[9148-9159]"
    }, {
      "left" : "return options.getsockopt(option);",
      "right" : "return options.getsockopt(option);",
      "info" : "ReturnStatement[9158-9192]:ReturnStatement[9287-9321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9247-11978]:Block[9376-12107]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[9257-9342]:IfStatement[9386-9471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9276-9342]:Block[9405-9471]"
    }, {
      "left" : "throw new ZError.CtxTerminatedException();",
      "right" : "throw new ZError.CtxTerminatedException();",
      "info" : "ThrowStatement[9290-9332]:ThrowStatement[9419-9461]"
    }, {
      "left" : "boolean brc = processCommands(0, false);",
      "right" : "boolean brc = processCommands(0, false);",
      "info" : "VariableDeclarationStatement[9398-9438]:VariableDeclarationStatement[9527-9567]"
    }, {
      "left" : "if (!brc)",
      "right" : "if (!brc)",
      "info" : "IfStatement[9447-9494]:IfStatement[9576-9623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9457-9494]:Block[9586-9623]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9471-9484]:ReturnStatement[9600-9613]"
    }, {
      "left" : "URI uri;",
      "right" : "URI uri;",
      "info" : "VariableDeclarationStatement[9536-9544]:VariableDeclarationStatement[9665-9673]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9553-9701]:TryStatement[9682-9830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9557-9601]:Block[9686-9730]"
    }, {
      "left" : "uri = new URI(addr);",
      "right" : "uri = new URI(addr);",
      "info" : "ExpressionStatement[9571-9591]:ExpressionStatement[9700-9720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9639-9701]:Block[9768-9830]"
    }, {
      "left" : "throw new IllegalArgumentException(e);",
      "right" : "throw new IllegalArgumentException(e);",
      "info" : "ThrowStatement[9653-9691]:ThrowStatement[9782-9820]"
    }, {
      "left" : "String protocol = uri.getScheme();",
      "right" : "String protocol = uri.getScheme();",
      "info" : "VariableDeclarationStatement[9710-9744]:VariableDeclarationStatement[9839-9873]"
    }, {
      "left" : "String address = uri.getAuthority();",
      "right" : "String address = uri.getAuthority();",
      "info" : "VariableDeclarationStatement[9753-9789]:VariableDeclarationStatement[9882-9918]"
    }, {
      "left" : "String path = uri.getPath();",
      "right" : "String path = uri.getPath();",
      "info" : "VariableDeclarationStatement[9798-9826]:VariableDeclarationStatement[9927-9955]"
    }, {
      "left" : "if (address == null)",
      "right" : "if (address == null)",
      "info" : "IfStatement[9835-9895]:IfStatement[9964-10024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9856-9895]:Block[9985-10024]"
    }, {
      "left" : "address = path;",
      "right" : "address = path;",
      "info" : "ExpressionStatement[9870-9885]:ExpressionStatement[9999-10014]"
    }, {
      "left" : "checkProtocol(protocol);",
      "right" : "checkProtocol(protocol);",
      "info" : "ExpressionStatement[9905-9929]:ExpressionStatement[10034-10058]"
    }, {
      "left" : "if (protocol.equals(\"inproc\"))",
      "right" : "if (protocol.equals(\"inproc\"))",
      "info" : "IfStatement[9939-10334]:IfStatement[10068-10463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9970-10334]:Block[10099-10463]"
    }, {
      "left" : "Ctx.Endpoint endpoint = new Ctx.Endpoint(this, options);",
      "right" : "Ctx.Endpoint endpoint = new Ctx.Endpoint(this, options);",
      "info" : "VariableDeclarationStatement[9984-10040]:VariableDeclarationStatement[10113-10169]"
    }, {
      "left" : "boolean rc = registerEndpoint(addr, endpoint);",
      "right" : "boolean rc = registerEndpoint(addr, endpoint);",
      "info" : "VariableDeclarationStatement[10053-10099]:VariableDeclarationStatement[10182-10228]"
    }, {
      "left" : "if (rc)",
      "right" : "if (rc)",
      "info" : "IfStatement[10112-10301]:IfStatement[10241-10430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10120-10222]:Block[10249-10351]"
    }, {
      "left" : "options.lastEndpoint = addr;",
      "right" : "options.lastEndpoint = addr;",
      "info" : "ExpressionStatement[10180-10208]:ExpressionStatement[10309-10337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10240-10301]:Block[10369-10430]"
    }, {
      "left" : "errno.set(ZError.EADDRINUSE);",
      "right" : "errno.set(ZError.EADDRINUSE);",
      "info" : "ExpressionStatement[10258-10287]:ExpressionStatement[10387-10416]"
    }, {
      "left" : "return rc;",
      "right" : "return rc;",
      "info" : "ReturnStatement[10314-10324]:ReturnStatement[10443-10453]"
    }, {
      "left" : "if (protocol.equals(\"pgm\") || protocol.equals(\"epgm\"))",
      "right" : "if (protocol.equals(\"pgm\") || protocol.equals(\"epgm\"))",
      "info" : "IfStatement[10343-10573]:IfStatement[10472-10702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10398-10573]:Block[10527-10702]"
    }, {
      "left" : "return connect(addr);",
      "right" : "return connect(addr);",
      "info" : "ReturnStatement[10542-10563]:ReturnStatement[10671-10692]"
    }, {
      "left" : "IOThread ioThread = chooseIoThread(options.affinity);",
      "right" : "IOThread ioThread = chooseIoThread(options.affinity);",
      "info" : "VariableDeclarationStatement[10699-10752]:VariableDeclarationStatement[10828-10881]"
    }, {
      "left" : "if (ioThread == null)",
      "right" : "if (ioThread == null)",
      "info" : "IfStatement[10761-10851]:IfStatement[10890-10980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10783-10851]:Block[10912-10980]"
    }, {
      "left" : "throw new IllegalStateException(\"EMTHREAD\");",
      "right" : "throw new IllegalStateException(\"EMTHREAD\");",
      "info" : "ThrowStatement[10797-10841]:ThrowStatement[10926-10970]"
    }, {
      "left" : "if (protocol.equals(\"tcp\"))",
      "right" : "if (protocol.equals(\"tcp\"))",
      "info" : "IfStatement[10861-11394]:IfStatement[10990-11523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10889-11394]:Block[11018-11523]"
    }, {
      "left" : "TcpListener listener = new TcpListener(ioThread, this, options);",
      "right" : "TcpListener listener = new TcpListener(ioThread, this, options);",
      "info" : "VariableDeclarationStatement[10903-10967]:VariableDeclarationStatement[11032-11096]"
    }, {
      "left" : "int rc = listener.setAddress(address);",
      "right" : "int rc = listener.setAddress(address);",
      "info" : "VariableDeclarationStatement[10980-11018]:VariableDeclarationStatement[11109-11147]"
    }, {
      "left" : "if (rc != 0)",
      "right" : "if (rc != 0)",
      "info" : "IfStatement[11031-11204]:IfStatement[11160-11333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11044-11204]:Block[11173-11333]"
    }, {
      "left" : "listener.destroy();",
      "right" : "listener.destroy();",
      "info" : "ExpressionStatement[11062-11081]:ExpressionStatement[11191-11210]"
    }, {
      "left" : "event_bind_failed(address, rc);",
      "right" : "event_bind_failed(address, rc);",
      "info" : "ExpressionStatement[11098-11129]:ExpressionStatement[11227-11258]"
    }, {
      "left" : "errno.set(rc);",
      "right" : "errno.set(rc);",
      "info" : "ExpressionStatement[11146-11160]:ExpressionStatement[11275-11289]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11177-11190]:ReturnStatement[11306-11319]"
    }, {
      "left" : "options.lastEndpoint = listener.getAddress();",
      "right" : "options.lastEndpoint = listener.getAddress();",
      "info" : "ExpressionStatement[11256-11301]:ExpressionStatement[11385-11430]"
    }, {
      "left" : "addEndpoint(options.lastEndpoint, listener);",
      "right" : "addEndpoint(options.lastEndpoint, listener);",
      "info" : "ExpressionStatement[11315-11359]:ExpressionStatement[11444-11488]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11372-11384]:ReturnStatement[11501-11513]"
    }, {
      "left" : "if (protocol.equals(\"ipc\"))",
      "right" : "if (protocol.equals(\"ipc\"))",
      "info" : "IfStatement[11404-11921]:IfStatement[11533-12050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11432-11921]:Block[11561-12050]"
    }, {
      "left" : "IpcListener listener = new IpcListener(ioThread, this, options);",
      "right" : "IpcListener listener = new IpcListener(ioThread, this, options);",
      "info" : "VariableDeclarationStatement[11446-11510]:VariableDeclarationStatement[11575-11639]"
    }, {
      "left" : "int rc = listener.setAddress(address);",
      "right" : "int rc = listener.setAddress(address);",
      "info" : "VariableDeclarationStatement[11523-11561]:VariableDeclarationStatement[11652-11690]"
    }, {
      "left" : "if (rc != 0)",
      "right" : "if (rc != 0)",
      "info" : "IfStatement[11574-11747]:IfStatement[11703-11876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11587-11747]:Block[11716-11876]"
    }, {
      "left" : "listener.destroy();",
      "right" : "listener.destroy();",
      "info" : "ExpressionStatement[11605-11624]:ExpressionStatement[11734-11753]"
    }, {
      "left" : "event_bind_failed(address, rc);",
      "right" : "event_bind_failed(address, rc);",
      "info" : "ExpressionStatement[11641-11672]:ExpressionStatement[11770-11801]"
    }, {
      "left" : "errno.set(rc);",
      "right" : "errno.set(rc);",
      "info" : "ExpressionStatement[11689-11703]:ExpressionStatement[11818-11832]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11720-11733]:ReturnStatement[11849-11862]"
    }, {
      "left" : "options.lastEndpoint = listener.getAddress();",
      "right" : "options.lastEndpoint = listener.getAddress();",
      "info" : "ExpressionStatement[11799-11844]:ExpressionStatement[11928-11973]"
    }, {
      "left" : "addEndpoint(addr, listener);",
      "right" : "addEndpoint(addr, listener);",
      "info" : "ExpressionStatement[11858-11886]:ExpressionStatement[11987-12015]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11899-11911]:ReturnStatement[12028-12040]"
    }, {
      "left" : "throw new IllegalArgumentException(addr);",
      "right" : "throw new IllegalArgumentException(addr);",
      "info" : "ThrowStatement[11931-11972]:ThrowStatement[12060-12101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12024-17062]:Block[12153-17191]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[12034-12119]:IfStatement[12163-12248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12053-12119]:Block[12182-12248]"
    }, {
      "left" : "throw new ZError.CtxTerminatedException();",
      "right" : "throw new ZError.CtxTerminatedException();",
      "info" : "ThrowStatement[12067-12109]:ThrowStatement[12196-12238]"
    }, {
      "left" : "boolean brc = processCommands(0, false);",
      "right" : "boolean brc = processCommands(0, false);",
      "info" : "VariableDeclarationStatement[12175-12215]:VariableDeclarationStatement[12304-12344]"
    }, {
      "left" : "if (!brc)",
      "right" : "if (!brc)",
      "info" : "IfStatement[12224-12271]:IfStatement[12353-12400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12234-12271]:Block[12363-12400]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12248-12261]:ReturnStatement[12377-12390]"
    }, {
      "left" : "URI uri;",
      "right" : "URI uri;",
      "info" : "VariableDeclarationStatement[12313-12321]:VariableDeclarationStatement[12442-12450]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[12330-12478]:TryStatement[12459-12607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12334-12378]:Block[12463-12507]"
    }, {
      "left" : "uri = new URI(addr);",
      "right" : "uri = new URI(addr);",
      "info" : "ExpressionStatement[12348-12368]:ExpressionStatement[12477-12497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12416-12478]:Block[12545-12607]"
    }, {
      "left" : "throw new IllegalArgumentException(e);",
      "right" : "throw new IllegalArgumentException(e);",
      "info" : "ThrowStatement[12430-12468]:ThrowStatement[12559-12597]"
    }, {
      "left" : "String protocol = uri.getScheme();",
      "right" : "String protocol = uri.getScheme();",
      "info" : "VariableDeclarationStatement[12488-12522]:VariableDeclarationStatement[12617-12651]"
    }, {
      "left" : "String address = uri.getAuthority();",
      "right" : "String address = uri.getAuthority();",
      "info" : "VariableDeclarationStatement[12531-12567]:VariableDeclarationStatement[12660-12696]"
    }, {
      "left" : "String path = uri.getPath();",
      "right" : "String path = uri.getPath();",
      "info" : "VariableDeclarationStatement[12576-12604]:VariableDeclarationStatement[12705-12733]"
    }, {
      "left" : "if (address == null)",
      "right" : "if (address == null)",
      "info" : "IfStatement[12613-12673]:IfStatement[12742-12802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12634-12673]:Block[12763-12802]"
    }, {
      "left" : "address = path;",
      "right" : "address = path;",
      "info" : "ExpressionStatement[12648-12663]:ExpressionStatement[12777-12792]"
    }, {
      "left" : "checkProtocol(protocol);",
      "right" : "checkProtocol(protocol);",
      "info" : "ExpressionStatement[12683-12707]:ExpressionStatement[12812-12836]"
    }, {
      "left" : "if (protocol.equals(\"inproc\"))",
      "right" : "if (protocol.equals(\"inproc\"))",
      "info" : "IfStatement[12717-15427]:IfStatement[12846-15556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12748-15427]:Block[12877-15556]"
    }, {
      "left" : "Ctx.Endpoint peer = findEndpoint(addr);",
      "right" : "Ctx.Endpoint peer = findEndpoint(addr);",
      "info" : "VariableDeclarationStatement[13040-13079]:VariableDeclarationStatement[13169-13208]"
    }, {
      "left" : "if (peer.socket == null)",
      "right" : "if (peer.socket == null)",
      "info" : "IfStatement[13092-13162]:IfStatement[13221-13291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13117-13162]:Block[13246-13291]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13135-13148]:ReturnStatement[13264-13277]"
    }, {
      "left" : "int sndhwm = 0;",
      "right" : "int sndhwm = 0;",
      "info" : "VariableDeclarationStatement[13307-13322]:VariableDeclarationStatement[13436-13451]"
    }, {
      "left" : "if (options.sendHwm != 0 && peer.options.recvHwm != 0)",
      "right" : "if (options.sendHwm != 0 && peer.options.recvHwm != 0)",
      "info" : "IfStatement[13335-13470]:IfStatement[13464-13599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13390-13470]:Block[13519-13599]"
    }, {
      "left" : "sndhwm = options.sendHwm + peer.options.recvHwm;",
      "right" : "sndhwm = options.sendHwm + peer.options.recvHwm;",
      "info" : "ExpressionStatement[13408-13456]:ExpressionStatement[13537-13585]"
    }, {
      "left" : "int rcvhwm = 0;",
      "right" : "int rcvhwm = 0;",
      "info" : "VariableDeclarationStatement[13483-13498]:VariableDeclarationStatement[13612-13627]"
    }, {
      "left" : "if (options.recvHwm != 0 && peer.options.sendHwm != 0)",
      "right" : "if (options.recvHwm != 0 && peer.options.sendHwm != 0)",
      "info" : "IfStatement[13511-13646]:IfStatement[13640-13775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13566-13646]:Block[13695-13775]"
    }, {
      "left" : "rcvhwm = options.recvHwm + peer.options.sendHwm;",
      "right" : "rcvhwm = options.recvHwm + peer.options.sendHwm;",
      "info" : "ExpressionStatement[13584-13632]:ExpressionStatement[13713-13761]"
    }, {
      "left" : "ZObject[] parents = {this, peer.socket};",
      "right" : "ZObject[] parents = {this, peer.socket};",
      "info" : "VariableDeclarationStatement[13727-13767]:VariableDeclarationStatement[13856-13896]"
    }, {
      "left" : "Pipe[] pipes = {null, null};",
      "right" : "Pipe[] pipes = {null, null};",
      "info" : "VariableDeclarationStatement[13780-13808]:VariableDeclarationStatement[13909-13937]"
    }, {
      "left" : "int[] hwms = {sndhwm, rcvhwm};",
      "right" : "int[] hwms = {sndhwm, rcvhwm};",
      "info" : "VariableDeclarationStatement[13821-13851]:VariableDeclarationStatement[13950-13980]"
    }, {
      "left" : "boolean[] delays = {options.delayOnDisconnect, options.delayOnClose};",
      "right" : "boolean[] delays = {options.delayOnDisconnect, options.delayOnClose};",
      "info" : "VariableDeclarationStatement[13864-13933]:VariableDeclarationStatement[13993-14062]"
    }, {
      "left" : "Pipe.pipepair(parents, pipes, hwms, delays);",
      "right" : "Pipe.pipepair(parents, pipes, hwms, delays);",
      "info" : "ExpressionStatement[13946-13990]:ExpressionStatement[14075-14119]"
    }, {
      "left" : "attachPipe(pipes[0]);",
      "right" : "attachPipe(pipes[0]);",
      "info" : "ExpressionStatement[14072-14093]:ExpressionStatement[14201-14222]"
    }, {
      "left" : "if (peer.options.recvIdentity)",
      "right" : "if (peer.options.recvIdentity)",
      "info" : "IfStatement[14187-14522]:IfStatement[14316-14651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14218-14522]:Block[14347-14651]"
    }, {
      "left" : "Msg id = new Msg(options.identitySize);",
      "right" : "Msg id = new Msg(options.identitySize);",
      "info" : "VariableDeclarationStatement[14236-14275]:VariableDeclarationStatement[14365-14404]"
    }, {
      "left" : "id.put(options.identity, 0 , options.identitySize);",
      "right" : "id.put(options.identity, 0 , options.identitySize);",
      "info" : "ExpressionStatement[14292-14343]:ExpressionStatement[14421-14472]"
    }, {
      "left" : "id.setFlags(Msg.IDENTITY);",
      "right" : "id.setFlags(Msg.IDENTITY);",
      "info" : "ExpressionStatement[14360-14386]:ExpressionStatement[14489-14515]"
    }, {
      "left" : "boolean written = pipes[0].write(id);",
      "right" : "boolean written = pipes[0].write(id);",
      "info" : "VariableDeclarationStatement[14403-14440]:VariableDeclarationStatement[14532-14569]"
    }, {
      "left" : "assert (written);",
      "right" : "assert (written);",
      "info" : "AssertStatement[14457-14474]:AssertStatement[14586-14603]"
    }, {
      "left" : "pipes[0].flush();",
      "right" : "pipes[0].flush();",
      "info" : "ExpressionStatement[14491-14508]:ExpressionStatement[14620-14637]"
    }, {
      "left" : "if (options.recvIdentity)",
      "right" : "if (options.recvIdentity)",
      "info" : "IfStatement[14616-14961]:IfStatement[14745-15090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14642-14961]:Block[14771-15090]"
    }, {
      "left" : "Msg id = new Msg(peer.options.identitySize);",
      "right" : "Msg id = new Msg(peer.options.identitySize);",
      "info" : "VariableDeclarationStatement[14660-14704]:VariableDeclarationStatement[14789-14833]"
    }, {
      "left" : "id.put(peer.options.identity, 0 , peer.options.identitySize);",
      "right" : "id.put(peer.options.identity, 0 , peer.options.identitySize);",
      "info" : "ExpressionStatement[14721-14782]:ExpressionStatement[14850-14911]"
    }, {
      "left" : "id.setFlags(Msg.IDENTITY);",
      "right" : "id.setFlags(Msg.IDENTITY);",
      "info" : "ExpressionStatement[14799-14825]:ExpressionStatement[14928-14954]"
    }, {
      "left" : "boolean written = pipes[1].write(id);",
      "right" : "boolean written = pipes[1].write(id);",
      "info" : "VariableDeclarationStatement[14842-14879]:VariableDeclarationStatement[14971-15008]"
    }, {
      "left" : "assert (written);",
      "right" : "assert (written);",
      "info" : "AssertStatement[14896-14913]:AssertStatement[15025-15042]"
    }, {
      "left" : "pipes[1].flush();",
      "right" : "pipes[1].flush();",
      "info" : "ExpressionStatement[14930-14947]:ExpressionStatement[15059-15076]"
    }, {
      "left" : "sendBind(peer.socket, pipes[1], false);",
      "right" : "sendBind(peer.socket, pipes[1], false);",
      "info" : "ExpressionStatement[15172-15211]:ExpressionStatement[15301-15340]"
    }, {
      "left" : "options.lastEndpoint = addr;",
      "right" : "options.lastEndpoint = addr;",
      "info" : "ExpressionStatement[15263-15291]:ExpressionStatement[15392-15420]"
    }, {
      "left" : "inprocs.put(addr, pipes[0]);",
      "right" : "inprocs.put(addr, pipes[0]);",
      "info" : "ExpressionStatement[15363-15391]:ExpressionStatement[15492-15520]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[15405-15417]:ReturnStatement[15534-15546]"
    }, {
      "left" : "IOThread ioThread = chooseIoThread(options.affinity);",
      "right" : "IOThread ioThread = chooseIoThread(options.affinity);",
      "info" : "VariableDeclarationStatement[15494-15547]:VariableDeclarationStatement[15623-15676]"
    }, {
      "left" : "if (ioThread == null)",
      "right" : "if (ioThread == null)",
      "info" : "IfStatement[15556-15653]:IfStatement[15685-15782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15578-15653]:Block[15707-15782]"
    }, {
      "left" : "throw new IllegalStateException(\"Empty IO Thread\");",
      "right" : "throw new IllegalStateException(\"Empty IO Thread\");",
      "info" : "ThrowStatement[15592-15643]:ThrowStatement[15721-15772]"
    }, {
      "left" : "boolean ipv4only = options.ipv4only != 0;",
      "right" : "boolean ipv4only = options.ipv4only != 0;",
      "info" : "VariableDeclarationStatement[15662-15703]:VariableDeclarationStatement[15791-15832]"
    }, {
      "left" : "Address paddr = new Address(protocol, address, ipv4only);",
      "right" : "Address paddr = new Address(protocol, address, ipv4only);",
      "info" : "VariableDeclarationStatement[15712-15769]:VariableDeclarationStatement[15841-15898]"
    }, {
      "left" : "paddr.resolve();",
      "right" : "paddr.resolve();",
      "info" : "ExpressionStatement[15835-15851]:ExpressionStatement[15964-15980]"
    }, {
      "left" : "SessionBase session = SessionBase.create(ioThread, true, this,\n            options, paddr);",
      "right" : "SessionBase session = SessionBase.create(ioThread, true, this,\n            options, paddr);",
      "info" : "VariableDeclarationStatement[15889-15980]:VariableDeclarationStatement[16018-16109]"
    }, {
      "left" : "assert (session != null);",
      "right" : "assert (session != null);",
      "info" : "AssertStatement[15989-16014]:AssertStatement[16118-16143]"
    }, {
      "left" : "boolean icanhasall = false;",
      "right" : "boolean icanhasall = false;",
      "info" : "VariableDeclarationStatement[16136-16163]:VariableDeclarationStatement[16265-16292]"
    }, {
      "left" : "if (protocol.equals(\"pgm\") || protocol.equals(\"epgm\"))",
      "right" : "if (protocol.equals(\"pgm\") || protocol.equals(\"epgm\"))",
      "info" : "IfStatement[16172-16269]:IfStatement[16301-16398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16227-16269]:Block[16356-16398]"
    }, {
      "left" : "icanhasall = true;",
      "right" : "icanhasall = true;",
      "info" : "ExpressionStatement[16241-16259]:ExpressionStatement[16370-16388]"
    }, {
      "left" : "if (options.delayAttachOnConnect != 1 || icanhasall)",
      "right" : "if (options.delayAttachOnConnect != 1 || icanhasall)",
      "info" : "IfStatement[16279-16914]:IfStatement[16408-17043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16332-16914]:Block[16461-17043]"
    }, {
      "left" : "ZObject[] parents = {this, session};",
      "right" : "ZObject[] parents = {this, session};",
      "info" : "VariableDeclarationStatement[16392-16428]:VariableDeclarationStatement[16521-16557]"
    }, {
      "left" : "Pipe[] pipes = {null, null};",
      "right" : "Pipe[] pipes = {null, null};",
      "info" : "VariableDeclarationStatement[16441-16469]:VariableDeclarationStatement[16570-16598]"
    }, {
      "left" : "int[] hwms = {options.sendHwm, options.recvHwm};",
      "right" : "int[] hwms = {options.sendHwm, options.recvHwm};",
      "info" : "VariableDeclarationStatement[16482-16530]:VariableDeclarationStatement[16611-16659]"
    }, {
      "left" : "boolean[] delays = {options.delayOnDisconnect, options.delayOnClose};",
      "right" : "boolean[] delays = {options.delayOnDisconnect, options.delayOnClose};",
      "info" : "VariableDeclarationStatement[16543-16612]:VariableDeclarationStatement[16672-16741]"
    }, {
      "left" : "Pipe.pipepair(parents, pipes, hwms, delays);",
      "right" : "Pipe.pipepair(parents, pipes, hwms, delays);",
      "info" : "ExpressionStatement[16625-16669]:ExpressionStatement[16754-16798]"
    }, {
      "left" : "attachPipe(pipes[0], icanhasall);",
      "right" : "attachPipe(pipes[0], icanhasall);",
      "info" : "ExpressionStatement[16750-16783]:ExpressionStatement[16879-16912]"
    }, {
      "left" : "session.attachPipe(pipes[1]);",
      "right" : "session.attachPipe(pipes[1]);",
      "info" : "ExpressionStatement[16875-16904]:ExpressionStatement[17004-17033]"
    }, {
      "left" : "options.lastEndpoint = paddr.toString();",
      "right" : "options.lastEndpoint = paddr.toString();",
      "info" : "ExpressionStatement[16958-16998]:ExpressionStatement[17087-17127]"
    }, {
      "left" : "addEndpoint(addr, session);",
      "right" : "addEndpoint(addr, session);",
      "info" : "ExpressionStatement[17008-17035]:ExpressionStatement[17137-17164]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[17044-17056]:ReturnStatement[17173-17185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17190-17333]:Block[17319-17462]"
    }, {
      "left" : "launchChild(endpoint);",
      "right" : "launchChild(endpoint);",
      "info" : "ExpressionStatement[17266-17288]:ExpressionStatement[17395-17417]"
    }, {
      "left" : "endpoints.put(addr, endpoint);",
      "right" : "endpoints.put(addr, endpoint);",
      "info" : "ExpressionStatement[17297-17327]:ExpressionStatement[17426-17456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17384-19092]:Block[17513-19221]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[17394-17479]:IfStatement[17523-17608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17413-17479]:Block[17542-17608]"
    }, {
      "left" : "throw new ZError.CtxTerminatedException();",
      "right" : "throw new ZError.CtxTerminatedException();",
      "info" : "ThrowStatement[17427-17469]:ThrowStatement[17556-17598]"
    }, {
      "left" : "if (addr == null)",
      "right" : "if (addr == null)",
      "info" : "IfStatement[17565-17644]:IfStatement[17694-17773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17583-17644]:Block[17712-17773]"
    }, {
      "left" : "throw new IllegalArgumentException();",
      "right" : "throw new IllegalArgumentException();",
      "info" : "ThrowStatement[17597-17634]:ThrowStatement[17726-17763]"
    }, {
      "left" : "boolean rc = processCommands(0, false);",
      "right" : "boolean rc = processCommands(0, false);",
      "info" : "VariableDeclarationStatement[17831-17870]:VariableDeclarationStatement[17960-17999]"
    }, {
      "left" : "if (!rc)",
      "right" : "if (!rc)",
      "info" : "IfStatement[17879-17925]:IfStatement[18008-18054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17888-17925]:Block[18017-18054]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[17902-17915]:ReturnStatement[18031-18044]"
    }, {
      "left" : "URI uri;",
      "right" : "URI uri;",
      "info" : "VariableDeclarationStatement[17967-17975]:VariableDeclarationStatement[18096-18104]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17984-18132]:TryStatement[18113-18261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17988-18032]:Block[18117-18161]"
    }, {
      "left" : "uri = new URI(addr);",
      "right" : "uri = new URI(addr);",
      "info" : "ExpressionStatement[18002-18022]:ExpressionStatement[18131-18151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18070-18132]:Block[18199-18261]"
    }, {
      "left" : "throw new IllegalArgumentException(e);",
      "right" : "throw new IllegalArgumentException(e);",
      "info" : "ThrowStatement[18084-18122]:ThrowStatement[18213-18251]"
    }, {
      "left" : "String protocol = uri.getScheme();",
      "right" : "String protocol = uri.getScheme();",
      "info" : "VariableDeclarationStatement[18142-18176]:VariableDeclarationStatement[18271-18305]"
    }, {
      "left" : "if (protocol.equals(\"inproc\"))",
      "right" : "if (protocol.equals(\"inproc\"))",
      "info" : "IfStatement[18224-18592]:IfStatement[18353-18721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18255-18592]:Block[18384-18721]"
    }, {
      "left" : "if (!inprocs.containsKey(addr))",
      "right" : "if (!inprocs.containsKey(addr))",
      "info" : "IfStatement[18269-18346]:IfStatement[18398-18475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18301-18346]:Block[18430-18475]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18319-18332]:ReturnStatement[18448-18461]"
    }, {
      "left" : "Iterator<Entry<String, Pipe>> it = inprocs.entrySet().iterator();",
      "right" : "Iterator<Entry<String, Pipe>> it = inprocs.entrySet().iterator();",
      "info" : "VariableDeclarationStatement[18360-18425]:VariableDeclarationStatement[18489-18554]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[18438-18557]:WhileStatement[18567-18686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18459-18557]:Block[18588-18686]"
    }, {
      "left" : "it.next().getValue().terminate(true);",
      "right" : "it.next().getValue().terminate(true);",
      "info" : "ExpressionStatement[18477-18514]:ExpressionStatement[18606-18643]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[18531-18543]:ExpressionStatement[18660-18672]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[18570-18582]:ReturnStatement[18699-18711]"
    }, {
      "left" : "if (!endpoints.containsKey(addr))",
      "right" : "if (!endpoints.containsKey(addr))",
      "info" : "IfStatement[18602-18673]:IfStatement[18731-18802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18636-18673]:Block[18765-18802]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18650-18663]:ReturnStatement[18779-18792]"
    }, {
      "left" : "Iterator<Entry<String, Own>> it = endpoints.entrySet().iterator();",
      "right" : "Iterator<Entry<String, Own>> it = endpoints.entrySet().iterator();",
      "info" : "VariableDeclarationStatement[18763-18829]:VariableDeclarationStatement[18892-18958]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[18839-19064]:WhileStatement[18968-19193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18860-19064]:Block[18989-19193]"
    }, {
      "left" : "Entry<String, Own> e = it.next();",
      "right" : "Entry<String, Own> e = it.next();",
      "info" : "VariableDeclarationStatement[18874-18907]:VariableDeclarationStatement[19003-19036]"
    }, {
      "left" : "if (!e.getKey().equals(addr))",
      "right" : "if (!e.getKey().equals(addr))",
      "info" : "IfStatement[18920-18991]:IfStatement[19049-19120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18950-18991]:Block[19079-19120]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[18968-18977]:ContinueStatement[19097-19106]"
    }, {
      "left" : "term_child(e.getValue());",
      "right" : "term_child(e.getValue());",
      "info" : "ExpressionStatement[19004-19029]:ExpressionStatement[19133-19158]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[19042-19054]:ExpressionStatement[19171-19183]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[19073-19085]:ReturnStatement[19202-19214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19142-21239]:Block[19271-21368]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[19152-19245]:IfStatement[19281-19374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19171-19245]:Block[19300-19374]"
    }, {
      "left" : "errno.set(ZError.ETERM);",
      "right" : "errno.set(ZError.ETERM);",
      "info" : "ExpressionStatement[19185-19209]:ExpressionStatement[19314-19338]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[19222-19235]:ReturnStatement[19351-19364]"
    }, {
      "left" : "if (msg == null)",
      "right" : "if (msg == null)",
      "info" : "IfStatement[19322-19400]:IfStatement[19451-19529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19339-19400]:Block[19468-19529]"
    }, {
      "left" : "throw new IllegalArgumentException();",
      "right" : "throw new IllegalArgumentException();",
      "info" : "ThrowStatement[19353-19390]:ThrowStatement[19482-19519]"
    }, {
      "left" : "boolean brc = processCommands(0, true);",
      "right" : "boolean brc = processCommands(0, true);",
      "info" : "VariableDeclarationStatement[19456-19495]:VariableDeclarationStatement[19585-19624]"
    }, {
      "left" : "if (!brc)",
      "right" : "if (!brc)",
      "info" : "IfStatement[19504-19551]:IfStatement[19633-19680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19514-19551]:Block[19643-19680]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[19528-19541]:ReturnStatement[19657-19670]"
    }, {
      "left" : "msg.resetFlags(Msg.MORE);",
      "right" : "msg.resetFlags(Msg.MORE);",
      "info" : "ExpressionStatement[19631-19656]:ExpressionStatement[19760-19785]"
    }, {
      "left" : "if ((flags & ZMQ.ZMQ_SNDMORE) > 0)",
      "right" : "if ((flags & ZMQ.ZMQ_SNDMORE) > 0)",
      "info" : "IfStatement[19728-19810]:IfStatement[19857-19939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19763-19810]:Block[19892-19939]"
    }, {
      "left" : "msg.setFlags(Msg.MORE);",
      "right" : "msg.setFlags(Msg.MORE);",
      "info" : "ExpressionStatement[19777-19800]:ExpressionStatement[19906-19929]"
    }, {
      "left" : "boolean rc = xsend(msg);",
      "right" : "boolean rc = xsend(msg);",
      "info" : "VariableDeclarationStatement[19857-19881]:VariableDeclarationStatement[19986-20010]"
    }, {
      "left" : "if (rc)",
      "right" : "if (rc)",
      "info" : "IfStatement[19891-19935]:IfStatement[20020-20064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19899-19935]:Block[20028-20064]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[19913-19925]:ReturnStatement[20042-20054]"
    }, {
      "left" : "if (errno.get() != ZError.EAGAIN)",
      "right" : "if (errno.get() != ZError.EAGAIN)",
      "info" : "IfStatement[19945-20016]:IfStatement[20074-20145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19979-20016]:Block[20108-20145]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[19993-20006]:ReturnStatement[20122-20135]"
    }, {
      "left" : "if ((flags & ZMQ.ZMQ_DONTWAIT) > 0 || options.sendTimeout == 0)",
      "right" : "if ((flags & ZMQ.ZMQ_DONTWAIT) > 0 || options.sendTimeout == 0)",
      "info" : "IfStatement[20147-20248]:IfStatement[20276-20377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20211-20248]:Block[20340-20377]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[20225-20238]:ReturnStatement[20354-20367]"
    }, {
      "left" : "int timeout = options.sendTimeout;",
      "right" : "int timeout = options.sendTimeout;",
      "info" : "VariableDeclarationStatement[20368-20402]:VariableDeclarationStatement[20497-20531]"
    }, {
      "left" : "long end = timeout < 0 ? 0 : (Clock.nowMS() + timeout);",
      "right" : "long end = timeout < 0 ? 0 : (Clock.nowMS() + timeout);",
      "info" : "VariableDeclarationStatement[20411-20466]:VariableDeclarationStatement[20540-20595]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[20675-21212]:WhileStatement[20804-21341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20688-21212]:Block[20817-21341]"
    }, {
      "left" : "if (!processCommands(timeout, false))",
      "right" : "if (!processCommands(timeout, false))",
      "info" : "IfStatement[20702-20785]:IfStatement[20831-20914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20740-20785]:Block[20869-20914]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[20758-20771]:ReturnStatement[20887-20900]"
    }, {
      "left" : "rc = xsend(msg);",
      "right" : "rc = xsend(msg);",
      "info" : "ExpressionStatement[20799-20815]:ExpressionStatement[20928-20944]"
    }, {
      "left" : "if (rc)",
      "right" : "if (rc)",
      "info" : "IfStatement[20828-20874]:IfStatement[20957-21003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20836-20874]:Block[20965-21003]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20854-20860]:BreakStatement[20983-20989]"
    }, {
      "left" : "if (errno.get() != ZError.EAGAIN)",
      "right" : "if (errno.get() != ZError.EAGAIN)",
      "info" : "IfStatement[20888-20967]:IfStatement[21017-21096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20922-20967]:Block[21051-21096]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[20940-20953]:ReturnStatement[21069-21082]"
    }, {
      "left" : "if (timeout > 0)",
      "right" : "if (timeout > 0)",
      "info" : "IfStatement[20981-21202]:IfStatement[21110-21331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20998-21202]:Block[21127-21331]"
    }, {
      "left" : "timeout = (int) (end - Clock.nowMS());",
      "right" : "timeout = (int) (end - Clock.nowMS());",
      "info" : "ExpressionStatement[21016-21054]:ExpressionStatement[21145-21183]"
    }, {
      "left" : "if (timeout <= 0)",
      "right" : "if (timeout <= 0)",
      "info" : "IfStatement[21071-21188]:IfStatement[21200-21317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21089-21188]:Block[21218-21317]"
    }, {
      "left" : "errno.set(ZError.EAGAIN);",
      "right" : "errno.set(ZError.EAGAIN);",
      "info" : "ExpressionStatement[21111-21136]:ExpressionStatement[21240-21265]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[21157-21170]:ReturnStatement[21286-21299]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[21221-21233]:ReturnStatement[21350-21362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21276-24089]:Block[21405-24218]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[21286-21378]:IfStatement[21415-21507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21305-21378]:Block[21434-21507]"
    }, {
      "left" : "errno.set(ZError.ETERM);",
      "right" : "errno.set(ZError.ETERM);",
      "info" : "ExpressionStatement[21319-21343]:ExpressionStatement[21448-21472]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21356-21368]:ReturnStatement[21485-21497]"
    }, {
      "left" : "if (++ticks == Config.INBOUND_POLL_RATE.getValue())",
      "right" : "if (++ticks == Config.INBOUND_POLL_RATE.getValue())",
      "info" : "IfStatement[21934-22109]:IfStatement[22063-22238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21986-22109]:Block[22115-22238]"
    }, {
      "left" : "if (!processCommands(0, false))",
      "right" : "if (!processCommands(0, false))",
      "info" : "IfStatement[22000-22076]:IfStatement[22129-22205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22032-22076]:Block[22161-22205]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22050-22062]:ReturnStatement[22179-22191]"
    }, {
      "left" : "ticks = 0;",
      "right" : "ticks = 0;",
      "info" : "ExpressionStatement[22089-22099]:ExpressionStatement[22218-22228]"
    }, {
      "left" : "Msg msg = xrecv();",
      "right" : "Msg msg = xrecv();",
      "info" : "VariableDeclarationStatement[22148-22166]:VariableDeclarationStatement[22277-22295]"
    }, {
      "left" : "if (msg == null && errno.get() != ZError.EAGAIN)",
      "right" : "if (msg == null && errno.get() != ZError.EAGAIN)",
      "info" : "IfStatement[22175-22260]:IfStatement[22304-22389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22224-22260]:Block[22353-22389]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22238-22250]:ReturnStatement[22367-22379]"
    }, {
      "left" : "if (msg != null)",
      "right" : "if (msg != null)",
      "info" : "IfStatement[22326-22409]:IfStatement[22455-22538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22343-22409]:Block[22472-22538]"
    }, {
      "left" : "extractFlags(msg);",
      "right" : "extractFlags(msg);",
      "info" : "ExpressionStatement[22357-22375]:ExpressionStatement[22486-22504]"
    }, {
      "left" : "return msg;",
      "right" : "return msg;",
      "info" : "ReturnStatement[22388-22399]:ReturnStatement[22517-22528]"
    }, {
      "left" : "if ((flags & ZMQ.ZMQ_DONTWAIT) > 0 || options.recvTimeout == 0)",
      "right" : "if ((flags & ZMQ.ZMQ_DONTWAIT) > 0 || options.recvTimeout == 0)",
      "info" : "IfStatement[22691-23035]:IfStatement[22820-23164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22755-23035]:Block[22884-23164]"
    }, {
      "left" : "if (!processCommands(0, false))",
      "right" : "if (!processCommands(0, false))",
      "info" : "IfStatement[22769-22845]:IfStatement[22898-22974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22801-22845]:Block[22930-22974]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22819-22831]:ReturnStatement[22948-22960]"
    }, {
      "left" : "ticks = 0;",
      "right" : "ticks = 0;",
      "info" : "ExpressionStatement[22858-22868]:ExpressionStatement[22987-22997]"
    }, {
      "left" : "msg = xrecv();",
      "right" : "msg = xrecv();",
      "info" : "ExpressionStatement[22882-22896]:ExpressionStatement[23011-23025]"
    }, {
      "left" : "if (msg == null)",
      "right" : "if (msg == null)",
      "info" : "IfStatement[22909-22970]:IfStatement[23038-23099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22926-22970]:Block[23055-23099]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22944-22956]:ReturnStatement[23073-23085]"
    }, {
      "left" : "extractFlags(msg);",
      "right" : "extractFlags(msg);",
      "info" : "ExpressionStatement[22983-23001]:ExpressionStatement[23112-23130]"
    }, {
      "left" : "return msg;",
      "right" : "return msg;",
      "info" : "ReturnStatement[23014-23025]:ReturnStatement[23143-23154]"
    }, {
      "left" : "int timeout = options.recvTimeout;",
      "right" : "int timeout = options.recvTimeout;",
      "info" : "VariableDeclarationStatement[23155-23189]:VariableDeclarationStatement[23284-23318]"
    }, {
      "left" : "long end = timeout < 0 ? 0 : (Clock.nowMS() + timeout);",
      "right" : "long end = timeout < 0 ? 0 : (Clock.nowMS() + timeout);",
      "info" : "VariableDeclarationStatement[23198-23253]:VariableDeclarationStatement[23327-23382]"
    }, {
      "left" : "boolean block = (ticks != 0);",
      "right" : "boolean block = (ticks != 0);",
      "info" : "VariableDeclarationStatement[23390-23419]:VariableDeclarationStatement[23519-23548]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[23428-24034]:WhileStatement[23557-24163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23441-24034]:Block[23570-24163]"
    }, {
      "left" : "if (!processCommands(block ? timeout : 0, false))",
      "right" : "if (!processCommands(block ? timeout : 0, false))",
      "info" : "IfStatement[23455-23549]:IfStatement[23584-23678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23505-23549]:Block[23634-23678]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23523-23535]:ReturnStatement[23652-23664]"
    }, {
      "left" : "msg = xrecv();",
      "right" : "msg = xrecv();",
      "info" : "ExpressionStatement[23562-23576]:ExpressionStatement[23691-23705]"
    }, {
      "left" : "if (msg != null)",
      "right" : "if (msg != null)",
      "info" : "IfStatement[23590-23672]:IfStatement[23719-23801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23607-23672]:Block[23736-23801]"
    }, {
      "left" : "ticks = 0;",
      "right" : "ticks = 0;",
      "info" : "ExpressionStatement[23625-23635]:ExpressionStatement[23754-23764]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23652-23658]:BreakStatement[23781-23787]"
    }, {
      "left" : "if (errno.get() != ZError.EAGAIN)",
      "right" : "if (errno.get() != ZError.EAGAIN)",
      "info" : "IfStatement[23686-23764]:IfStatement[23815-23893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23720-23764]:Block[23849-23893]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23738-23750]:ReturnStatement[23867-23879]"
    }, {
      "left" : "block = true;",
      "right" : "block = true;",
      "info" : "ExpressionStatement[23778-23791]:ExpressionStatement[23907-23920]"
    }, {
      "left" : "if (timeout > 0)",
      "right" : "if (timeout > 0)",
      "info" : "IfStatement[23804-24024]:IfStatement[23933-24153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23821-24024]:Block[23950-24153]"
    }, {
      "left" : "timeout = (int) (end - Clock.nowMS());",
      "right" : "timeout = (int) (end - Clock.nowMS());",
      "info" : "ExpressionStatement[23839-23877]:ExpressionStatement[23968-24006]"
    }, {
      "left" : "if (timeout <= 0)",
      "right" : "if (timeout <= 0)",
      "info" : "IfStatement[23894-24010]:IfStatement[24023-24139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23912-24010]:Block[24041-24139]"
    }, {
      "left" : "errno.set(ZError.EAGAIN);",
      "right" : "errno.set(ZError.EAGAIN);",
      "info" : "ExpressionStatement[23934-23959]:ExpressionStatement[24063-24088]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23980-23992]:ReturnStatement[24109-24121]"
    }, {
      "left" : "extractFlags(msg);",
      "right" : "extractFlags(msg);",
      "info" : "ExpressionStatement[24044-24062]:ExpressionStatement[24173-24191]"
    }, {
      "left" : "return msg;",
      "right" : "return msg;",
      "info" : "ReturnStatement[24071-24082]:ReturnStatement[24200-24211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24119-24390]:Block[24248-24519]"
    }, {
      "left" : "tag = 0xdeadbeef;",
      "right" : "tag = 0xdeadbeef;",
      "info" : "ExpressionStatement[24165-24182]:ExpressionStatement[24294-24311]"
    }, {
      "left" : "sendReap(this);",
      "right" : "sendReap(this);",
      "info" : "ExpressionStatement[24369-24384]:ExpressionStatement[24498-24513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24545-24577]:Block[24674-24706]"
    }, {
      "left" : "return xhasIn();",
      "right" : "return xhasIn();",
      "info" : "ReturnStatement[24555-24571]:ReturnStatement[24684-24700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24604-24637]:Block[24733-24766]"
    }, {
      "left" : "return xhasOut();",
      "right" : "return xhasOut();",
      "info" : "ReturnStatement[24614-24631]:ReturnStatement[24743-24760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24781-25136]:Block[24910-25265]"
    }, {
      "left" : "this.poller = poller;",
      "right" : "this.poller = poller;",
      "info" : "ExpressionStatement[24841-24862]:ExpressionStatement[24970-24991]"
    }, {
      "left" : "handle = mailbox.getFd();",
      "right" : "handle = mailbox.getFd();",
      "info" : "ExpressionStatement[24871-24896]:ExpressionStatement[25000-25025]"
    }, {
      "left" : "this.poller.addHandle(handle, this);",
      "right" : "this.poller.addHandle(handle, this);",
      "info" : "ExpressionStatement[24905-24941]:ExpressionStatement[25034-25070]"
    }, {
      "left" : "this.poller.setPollIn(handle);",
      "right" : "this.poller.setPollIn(handle);",
      "info" : "ExpressionStatement[24950-24980]:ExpressionStatement[25079-25109]"
    }, {
      "left" : "terminate();",
      "right" : "terminate();",
      "info" : "ExpressionStatement[25094-25106]:ExpressionStatement[25223-25235]"
    }, {
      "left" : "checkDestroy();",
      "right" : "checkDestroy();",
      "info" : "ExpressionStatement[25115-25130]:ExpressionStatement[25244-25259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25458-27441]:Block[25587-27570]"
    }, {
      "left" : "Command cmd;",
      "right" : "Command cmd;",
      "info" : "VariableDeclarationStatement[25468-25480]:VariableDeclarationStatement[25597-25609]"
    }, {
      "left" : "if (timeout != 0)",
      "right" : "if (timeout != 0)",
      "info" : "IfStatement[25489-27009]:IfStatement[25618-27138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25507-25628]:Block[25636-25757]"
    }, {
      "left" : "cmd = mailbox.recv(timeout);",
      "right" : "cmd = mailbox.recv(timeout);",
      "info" : "ExpressionStatement[25590-25618]:ExpressionStatement[25719-25747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25642-27009]:Block[25771-27138]"
    }, {
      "left" : "long tsc = 0;",
      "right" : "long tsc = 0;",
      "info" : "VariableDeclarationStatement[25894-25907]:VariableDeclarationStatement[26023-26036]"
    }, {
      "left" : "if (tsc != 0 && throttle)",
      "right" : "if (tsc != 0 && throttle)",
      "info" : "IfStatement[26430-26885]:IfStatement[26559-27014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26456-26885]:Block[26585-27014]"
    }, {
      "left" : "if (tsc >= lastTsc && tsc - lastTsc <= Config.MAX_COMMAND_DELAY.getValue())",
      "right" : "if (tsc >= lastTsc && tsc - lastTsc <= Config.MAX_COMMAND_DELAY.getValue())",
      "info" : "IfStatement[26712-26840]:IfStatement[26841-26969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26788-26840]:Block[26917-26969]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[26810-26822]:ReturnStatement[26939-26951]"
    }, {
      "left" : "lastTsc = tsc;",
      "right" : "lastTsc = tsc;",
      "info" : "ExpressionStatement[26857-26871]:ExpressionStatement[26986-27000]"
    }, {
      "left" : "cmd = mailbox.recv(0);",
      "right" : "cmd = mailbox.recv(0);",
      "info" : "ExpressionStatement[26977-26999]:ExpressionStatement[27106-27128]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[27081-27260]:WhileStatement[27210-27389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27094-27260]:Block[27223-27389]"
    }, {
      "left" : "if (cmd == null)",
      "right" : "if (cmd == null)",
      "info" : "IfStatement[27108-27163]:IfStatement[27237-27292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27125-27163]:Block[27254-27292]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27143-27149]:BreakStatement[27272-27278]"
    }, {
      "left" : "cmd.destination().processCommand(cmd);",
      "right" : "cmd.destination().processCommand(cmd);",
      "info" : "ExpressionStatement[27177-27215]:ExpressionStatement[27306-27344]"
    }, {
      "left" : "cmd = mailbox.recv(0);",
      "right" : "cmd = mailbox.recv(0);",
      "info" : "ExpressionStatement[27228-27250]:ExpressionStatement[27357-27379]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[27269-27413]:IfStatement[27398-27542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27288-27413]:Block[27417-27542]"
    }, {
      "left" : "errno.set(ZError.ETERM);",
      "right" : "errno.set(ZError.ETERM);",
      "info" : "ExpressionStatement[27302-27326]:ExpressionStatement[27431-27455]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[27390-27403]:ReturnStatement[27519-27532]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[27423-27435]:ReturnStatement[27552-27564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27494-27872]:Block[27623-28001]"
    }, {
      "left" : "stopMonitor();",
      "right" : "stopMonitor();",
      "info" : "ExpressionStatement[27821-27835]:ExpressionStatement[27950-27964]"
    }, {
      "left" : "ctxTerminated = true;",
      "right" : "ctxTerminated = true;",
      "info" : "ExpressionStatement[27844-27865]:ExpressionStatement[27973-27994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27934-27967]:Block[28063-28096]"
    }, {
      "left" : "attachPipe(pipe);",
      "right" : "attachPipe(pipe);",
      "info" : "ExpressionStatement[27944-27961]:ExpressionStatement[28073-28090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28030-28545]:Block[28159-28674]"
    }, {
      "left" : "unregisterEndpoints(this);",
      "right" : "unregisterEndpoints(this);",
      "info" : "ExpressionStatement[28226-28252]:ExpressionStatement[28355-28381]"
    }, {
      "left" : "for (int i = 0; i != pipes.size(); ++i)",
      "right" : "for (int i = 0; i != pipes.size(); ++i)",
      "info" : "ForStatement[28311-28405]:ForStatement[28440-28534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28351-28405]:Block[28480-28534]"
    }, {
      "left" : "pipes.get(i).terminate(false);",
      "right" : "pipes.get(i).terminate(false);",
      "info" : "ExpressionStatement[28365-28395]:ExpressionStatement[28494-28524]"
    }, {
      "left" : "registerTermAcks(pipes.size());",
      "right" : "registerTermAcks(pipes.size());",
      "info" : "ExpressionStatement[28414-28445]:ExpressionStatement[28543-28574]"
    }, {
      "left" : "super.processTerm(linger);",
      "right" : "super.processTerm(linger);",
      "info" : "ExpressionStatement[28513-28539]:ExpressionStatement[28642-28668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28649-28682]:Block[28778-28811]"
    }, {
      "left" : "destroyed = true;",
      "right" : "destroyed = true;",
      "info" : "ExpressionStatement[28659-28676]:ExpressionStatement[28788-28805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28910-28939]:Block[29039-29068]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[28920-28933]:ReturnStatement[29049-29062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28977-29006]:Block[29106-29135]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[28987-29000]:ReturnStatement[29116-29129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29049-29122]:Block[29178-29251]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Must Override\");",
      "right" : "throw new UnsupportedOperationException(\"Must Override\");",
      "info" : "ThrowStatement[29059-29116]:ThrowStatement[29188-29245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29159-29188]:Block[29288-29317]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[29169-29182]:ReturnStatement[29298-29311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29220-29293]:Block[29349-29422]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Must Override\");",
      "right" : "throw new UnsupportedOperationException(\"Must Override\");",
      "info" : "ThrowStatement[29230-29287]:ThrowStatement[29359-29416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29344-29417]:Block[29473-29546]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Must Override\");",
      "right" : "throw new UnsupportedOperationException(\"Must Override\");",
      "info" : "ThrowStatement[29354-29411]:ThrowStatement[29483-29540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29469-29542]:Block[29598-29671]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Must Override\");",
      "right" : "throw new UnsupportedOperationException(\"Must Override\");",
      "info" : "ThrowStatement[29479-29536]:ThrowStatement[29608-29665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29588-29661]:Block[29717-29790]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Must override\");",
      "right" : "throw new UnsupportedOperationException(\"Must override\");",
      "info" : "ThrowStatement[29598-29655]:ThrowStatement[29727-29784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29707-30131]:Block[29836-30260]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[29986-30100]:TryStatement[30115-30229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29990-30040]:Block[30119-30169]"
    }, {
      "left" : "processCommands(0, false);",
      "right" : "processCommands(0, false);",
      "info" : "ExpressionStatement[30004-30030]:ExpressionStatement[30133-30159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30089-30100]:Block[30218-30229]"
    }, {
      "left" : "checkDestroy();",
      "right" : "checkDestroy();",
      "info" : "ExpressionStatement[30110-30125]:ExpressionStatement[30239-30254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30178-30236]:Block[30307-30365]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[30188-30230]:ThrowStatement[30317-30359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30287-30345]:Block[30416-30474]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[30297-30339]:ThrowStatement[30426-30468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30395-30453]:Block[30524-30582]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[30405-30447]:ThrowStatement[30534-30576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30508-30566]:Block[30637-30695]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[30518-30560]:ThrowStatement[30647-30689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30748-31202]:Block[30877-31331]"
    }, {
      "left" : "if (destroyed)",
      "right" : "if (destroyed)",
      "info" : "IfStatement[30842-31196]:IfStatement[30971-31325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30857-31196]:Block[30986-31325]"
    }, {
      "left" : "poller.removeHandle(handle);",
      "right" : "poller.removeHandle(handle);",
      "info" : "ExpressionStatement[30931-30959]:ExpressionStatement[31060-31088]"
    }, {
      "left" : "destroySocket(this);",
      "right" : "destroySocket(this);",
      "info" : "ExpressionStatement[31024-31044]:ExpressionStatement[31153-31173]"
    }, {
      "left" : "sendReaped();",
      "right" : "sendReaped();",
      "info" : "ExpressionStatement[31108-31121]:ExpressionStatement[31237-31250]"
    }, {
      "left" : "super.processDestroy();",
      "right" : "super.processDestroy();",
      "info" : "ExpressionStatement[31163-31186]:ExpressionStatement[31292-31315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31263-31300]:Block[31392-31429]"
    }, {
      "left" : "xreadActivated(pipe);",
      "right" : "xreadActivated(pipe);",
      "info" : "ExpressionStatement[31273-31294]:ExpressionStatement[31402-31423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31362-31400]:Block[31491-31529]"
    }, {
      "left" : "xwriteActivated(pipe);",
      "right" : "xwriteActivated(pipe);",
      "info" : "ExpressionStatement[31372-31394]:ExpressionStatement[31501-31523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31456-31663]:Block[31585-31792]"
    }, {
      "left" : "if (options.delayAttachOnConnect == 1)",
      "right" : "if (options.delayAttachOnConnect == 1)",
      "info" : "IfStatement[31466-31657]:IfStatement[31595-31786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31505-31551]:Block[31634-31680]"
    }, {
      "left" : "pipe.terminate(false);",
      "right" : "pipe.terminate(false);",
      "info" : "ExpressionStatement[31519-31541]:ExpressionStatement[31648-31670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31565-31657]:Block[31694-31786]"
    }, {
      "left" : "xhiccuped(pipe);",
      "right" : "xhiccuped(pipe);",
      "info" : "ExpressionStatement[31631-31647]:ExpressionStatement[31760-31776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31725-32342]:Block[31854-32471]"
    }, {
      "left" : "xpipeTerminated(pipe);",
      "right" : "xpipeTerminated(pipe);",
      "info" : "ExpressionStatement[31807-31829]:ExpressionStatement[31936-31958]"
    }, {
      "left" : "Iterator<Entry<String, Pipe>> it = inprocs.entrySet().iterator();",
      "right" : "Iterator<Entry<String, Pipe>> it = inprocs.entrySet().iterator();",
      "info" : "VariableDeclarationStatement[31880-31945]:VariableDeclarationStatement[32009-32074]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[31954-32100]:WhileStatement[32083-32229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31975-32100]:Block[32104-32229]"
    }, {
      "left" : "if (it.next().getValue() == pipe)",
      "right" : "if (it.next().getValue() == pipe)",
      "info" : "IfStatement[31989-32090]:IfStatement[32118-32219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32023-32090]:Block[32152-32219]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[32041-32053]:ExpressionStatement[32170-32182]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32070-32076]:BreakStatement[32199-32205]"
    }, {
      "left" : "pipes.remove(pipe);",
      "right" : "pipes.remove(pipe);",
      "info" : "ExpressionStatement[32243-32262]:ExpressionStatement[32372-32391]"
    }, {
      "left" : "if (isTerminating())",
      "right" : "if (isTerminating())",
      "info" : "IfStatement[32271-32336]:IfStatement[32400-32465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32292-32336]:Block[32421-32465]"
    }, {
      "left" : "unregisterTermAck();",
      "right" : "unregisterTermAck();",
      "info" : "ExpressionStatement[32306-32326]:ExpressionStatement[32435-32455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32495-32737]:Block[32624-32866]"
    }, {
      "left" : "if ((msg.flags() & Msg.IDENTITY) > 0)",
      "right" : "if ((msg.flags() & Msg.IDENTITY) > 0)",
      "info" : "IfStatement[32575-32667]:IfStatement[32704-32796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32613-32667]:Block[32742-32796]"
    }, {
      "left" : "assert (options.recvIdentity);",
      "right" : "assert (options.recvIdentity);",
      "info" : "AssertStatement[32627-32657]:AssertStatement[32756-32786]"
    }, {
      "left" : "rcvmore = msg.hasMore();",
      "right" : "rcvmore = msg.hasMore();",
      "info" : "ExpressionStatement[32707-32731]:ExpressionStatement[32836-32860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32801-34375]:Block[32930-34504]"
    }, {
      "left" : "boolean rc;",
      "right" : "boolean rc;",
      "info" : "VariableDeclarationStatement[32811-32822]:VariableDeclarationStatement[32940-32951]"
    }, {
      "left" : "if (ctxTerminated)",
      "right" : "if (ctxTerminated)",
      "info" : "IfStatement[32831-32916]:IfStatement[32960-33045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32850-32916]:Block[32979-33045]"
    }, {
      "left" : "throw new ZError.CtxTerminatedException();",
      "right" : "throw new ZError.CtxTerminatedException();",
      "info" : "ThrowStatement[32864-32906]:ThrowStatement[32993-33035]"
    }, {
      "left" : "if (addr == null)",
      "right" : "if (addr == null)",
      "info" : "IfStatement[32988-33069]:IfStatement[33117-33198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33006-33069]:Block[33135-33198]"
    }, {
      "left" : "stopMonitor();",
      "right" : "stopMonitor();",
      "info" : "ExpressionStatement[33020-33034]:ExpressionStatement[33149-33163]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[33047-33059]:ReturnStatement[33176-33188]"
    }, {
      "left" : "URI uri;",
      "right" : "URI uri;",
      "info" : "VariableDeclarationStatement[33111-33119]:VariableDeclarationStatement[33240-33248]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[33128-33276]:TryStatement[33257-33405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33132-33176]:Block[33261-33305]"
    }, {
      "left" : "uri = new URI(addr);",
      "right" : "uri = new URI(addr);",
      "info" : "ExpressionStatement[33146-33166]:ExpressionStatement[33275-33295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33214-33276]:Block[33343-33405]"
    }, {
      "left" : "throw new IllegalArgumentException(e);",
      "right" : "throw new IllegalArgumentException(e);",
      "info" : "ThrowStatement[33228-33266]:ThrowStatement[33357-33395]"
    }, {
      "left" : "String protocol = uri.getScheme();",
      "right" : "String protocol = uri.getScheme();",
      "info" : "VariableDeclarationStatement[33285-33319]:VariableDeclarationStatement[33414-33448]"
    }, {
      "left" : "String address = uri.getAuthority();",
      "right" : "String address = uri.getAuthority();",
      "info" : "VariableDeclarationStatement[33328-33364]:VariableDeclarationStatement[33457-33493]"
    }, {
      "left" : "String path = uri.getPath();",
      "right" : "String path = uri.getPath();",
      "info" : "VariableDeclarationStatement[33373-33401]:VariableDeclarationStatement[33502-33530]"
    }, {
      "left" : "if (address == null)",
      "right" : "if (address == null)",
      "info" : "IfStatement[33410-33470]:IfStatement[33539-33599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33431-33470]:Block[33560-33599]"
    }, {
      "left" : "address = path;",
      "right" : "address = path;",
      "info" : "ExpressionStatement[33445-33460]:ExpressionStatement[33574-33589]"
    }, {
      "left" : "checkProtocol(protocol);",
      "right" : "checkProtocol(protocol);",
      "info" : "ExpressionStatement[33480-33504]:ExpressionStatement[33609-33633]"
    }, {
      "left" : "if (!protocol.equals(\"inproc\"))",
      "right" : "if (!protocol.equals(\"inproc\"))",
      "info" : "IfStatement[33574-33718]:IfStatement[33703-33847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33606-33718]:Block[33735-33847]"
    }, {
      "left" : "stopMonitor();",
      "right" : "stopMonitor();",
      "info" : "ExpressionStatement[33620-33634]:ExpressionStatement[33749-33763]"
    }, {
      "left" : "throw new IllegalArgumentException(\"inproc socket required\");",
      "right" : "throw new IllegalArgumentException(\"inproc socket required\");",
      "info" : "ThrowStatement[33647-33708]:ThrowStatement[33776-33837]"
    }, {
      "left" : "monitorEvents = events;",
      "right" : "monitorEvents = events;",
      "info" : "ExpressionStatement[33766-33789]:ExpressionStatement[33895-33918]"
    }, {
      "left" : "monitorSocket = getCtx().createSocket(ZMQ.ZMQ_PAIR);",
      "right" : "monitorSocket = getCtx().createSocket(ZMQ.ZMQ_PAIR);",
      "info" : "ExpressionStatement[33799-33851]:ExpressionStatement[33928-33980]"
    }, {
      "left" : "if (monitorSocket == null)",
      "right" : "if (monitorSocket == null)",
      "info" : "IfStatement[33860-33924]:IfStatement[33989-34053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33887-33924]:Block[34016-34053]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[33901-33914]:ReturnStatement[34030-34043]"
    }, {
      "left" : "int linger = 0;",
      "right" : "int linger = 0;",
      "info" : "VariableDeclarationStatement[34003-34018]:VariableDeclarationStatement[34132-34147]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[34027-34209]:TryStatement[34156-34338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34031-34106]:Block[34160-34235]"
    }, {
      "left" : "monitorSocket.setSocketOpt(ZMQ.ZMQ_LINGER, linger);",
      "right" : "monitorSocket.setSocketOpt(ZMQ.ZMQ_LINGER, linger);",
      "info" : "ExpressionStatement[34045-34096]:ExpressionStatement[34174-34225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34150-34209]:Block[34279-34338]"
    }, {
      "left" : "stopMonitor();",
      "right" : "stopMonitor();",
      "info" : "ExpressionStatement[34164-34178]:ExpressionStatement[34293-34307]"
    }, {
      "left" : "throw e;",
      "right" : "throw e;",
      "info" : "ThrowStatement[34191-34199]:ThrowStatement[34320-34328]"
    }, {
      "left" : "rc = monitorSocket.bind(addr);",
      "right" : "rc = monitorSocket.bind(addr);",
      "info" : "ExpressionStatement[34264-34294]:ExpressionStatement[34393-34423]"
    }, {
      "left" : "if (!rc)",
      "right" : "if (!rc)",
      "info" : "IfStatement[34303-34350]:IfStatement[34432-34479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34312-34350]:Block[34441-34479]"
    }, {
      "left" : "stopMonitor();",
      "right" : "stopMonitor();",
      "info" : "ExpressionStatement[34326-34340]:ExpressionStatement[34455-34469]"
    }, {
      "left" : "return rc;",
      "right" : "return rc;",
      "info" : "ReturnStatement[34359-34369]:ReturnStatement[34488-34498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34448-34620]:Block[34577-34749]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CONNECTED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CONNECTED) == 0)",
      "info" : "IfStatement[34458-34541]:IfStatement[34587-34670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34510-34541]:Block[34639-34670]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[34524-34531]:ReturnStatement[34653-34660]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CONNECTED, addr, ch));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CONNECTED, addr, ch));",
      "info" : "ExpressionStatement[34551-34614]:ExpressionStatement[34680-34743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34686-34873]:Block[34815-35002]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CONNECT_DELAYED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CONNECT_DELAYED) == 0)",
      "info" : "IfStatement[34696-34785]:IfStatement[34825-34914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34754-34785]:Block[34883-34914]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[34768-34775]:ReturnStatement[34897-34904]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CONNECT_DELAYED, addr, errno));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CONNECT_DELAYED, addr, errno));",
      "info" : "ExpressionStatement[34795-34867]:ExpressionStatement[34924-34996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34942-35132]:Block[35071-35261]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CONNECT_RETRIED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CONNECT_RETRIED) == 0)",
      "info" : "IfStatement[34952-35041]:IfStatement[35081-35170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35010-35041]:Block[35139-35170]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[35024-35031]:ReturnStatement[35153-35160]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CONNECT_RETRIED, addr, interval));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CONNECT_RETRIED, addr, interval));",
      "info" : "ExpressionStatement[35051-35126]:ExpressionStatement[35180-35255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35205-35377]:Block[35334-35506]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_LISTENING) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_LISTENING) == 0)",
      "info" : "IfStatement[35215-35298]:IfStatement[35344-35427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35267-35298]:Block[35396-35427]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[35281-35288]:ReturnStatement[35410-35417]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_LISTENING, addr, ch));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_LISTENING, addr, ch));",
      "info" : "ExpressionStatement[35308-35371]:ExpressionStatement[35437-35500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35441-35620]:Block[35570-35749]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_BIND_FAILED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_BIND_FAILED) == 0)",
      "info" : "IfStatement[35451-35536]:IfStatement[35580-35665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35505-35536]:Block[35634-35665]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[35519-35526]:ReturnStatement[35648-35655]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_BIND_FAILED, addr, errno));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_BIND_FAILED, addr, errno));",
      "info" : "ExpressionStatement[35546-35614]:ExpressionStatement[35675-35743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35691-35861]:Block[35820-35990]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_ACCEPTED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_ACCEPTED) == 0)",
      "info" : "IfStatement[35701-35783]:IfStatement[35830-35912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35752-35783]:Block[35881-35912]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[35766-35773]:ReturnStatement[35895-35902]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_ACCEPTED, addr, ch));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_ACCEPTED, addr, ch));",
      "info" : "ExpressionStatement[35793-35855]:ExpressionStatement[35922-35984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35925-36108]:Block[36054-36237]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_ACCEPT_FAILED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_ACCEPT_FAILED) == 0)",
      "info" : "IfStatement[35935-36022]:IfStatement[36064-36151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35991-36022]:Block[36120-36151]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36005-36012]:ReturnStatement[36134-36141]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_ACCEPT_FAILED, addr, errno));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_ACCEPT_FAILED, addr, errno));",
      "info" : "ExpressionStatement[36032-36102]:ExpressionStatement[36161-36231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36177-36343]:Block[36306-36472]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CLOSED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CLOSED) == 0)",
      "info" : "IfStatement[36187-36267]:IfStatement[36316-36396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36236-36267]:Block[36365-36396]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36250-36257]:ReturnStatement[36379-36386]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CLOSED, addr, ch));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CLOSED, addr, ch));",
      "info" : "ExpressionStatement[36277-36337]:ExpressionStatement[36406-36466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36406-36587]:Block[36535-36716]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CLOSE_FAILED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_CLOSE_FAILED) == 0)",
      "info" : "IfStatement[36416-36502]:IfStatement[36545-36631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36471-36502]:Block[36600-36631]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36485-36492]:ReturnStatement[36614-36621]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CLOSE_FAILED, addr, errno));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_CLOSE_FAILED, addr, errno));",
      "info" : "ExpressionStatement[36512-36581]:ExpressionStatement[36641-36710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36662-36840]:Block[36791-36969]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_DISCONNECTED) == 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_DISCONNECTED) == 0)",
      "info" : "IfStatement[36672-36758]:IfStatement[36801-36887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36727-36758]:Block[36856-36887]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36741-36748]:ReturnStatement[36870-36877]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_DISCONNECTED, addr, ch));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_DISCONNECTED, addr, ch));",
      "info" : "ExpressionStatement[36768-36834]:ExpressionStatement[36897-36963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36895-37006]:Block[37024-37135]"
    }, {
      "left" : "if (monitorSocket == null)",
      "right" : "if (monitorSocket == null)",
      "info" : "IfStatement[36905-36963]:IfStatement[37034-37092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36932-36963]:Block[37061-37092]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36946-36953]:ReturnStatement[37075-37082]"
    }, {
      "left" : "event.write(monitorSocket);",
      "right" : "event.write(monitorSocket);",
      "info" : "ExpressionStatement[36973-37000]:ExpressionStatement[37102-37129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37045-37368]:Block[37174-37497]"
    }, {
      "left" : "if (monitorSocket != null)",
      "right" : "if (monitorSocket != null)",
      "info" : "IfStatement[37055-37362]:IfStatement[37184-37491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37082-37362]:Block[37211-37491]"
    }, {
      "left" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_MONITOR_STOPPED) != 0)",
      "right" : "if ((monitorEvents & ZMQ.ZMQ_EVENT_MONITOR_STOPPED) != 0)",
      "info" : "IfStatement[37096-37252]:IfStatement[37225-37381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37154-37252]:Block[37283-37381]"
    }, {
      "left" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_MONITOR_STOPPED, \"\", 0));",
      "right" : "monitorEvent(new ZMQ.Event(ZMQ.ZMQ_EVENT_MONITOR_STOPPED, \"\", 0));",
      "info" : "ExpressionStatement[37172-37238]:ExpressionStatement[37301-37367]"
    }, {
      "left" : "monitorSocket.close();",
      "right" : "monitorSocket.close();",
      "info" : "ExpressionStatement[37265-37287]:ExpressionStatement[37394-37416]"
    }, {
      "left" : "monitorSocket = null;",
      "right" : "monitorSocket = null;",
      "info" : "ExpressionStatement[37300-37321]:ExpressionStatement[37429-37450]"
    }, {
      "left" : "monitorEvents = 0;",
      "right" : "monitorEvents = 0;",
      "info" : "ExpressionStatement[37334-37352]:ExpressionStatement[37463-37481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37417-37488]:Block[37546-37617]"
    }, {
      "left" : "return super.toString() + \"[\" + options.socketId + \"]\";",
      "right" : "return super.toString() + \"[\" + options.socketId + \"]\";",
      "info" : "ReturnStatement[37427-37482]:ReturnStatement[37556-37611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37531-37570]:Block[37660-37699]"
    }, {
      "left" : "return mailbox.getFd();",
      "right" : "return mailbox.getFd();",
      "info" : "ReturnStatement[37541-37564]:ReturnStatement[37670-37693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37607-38188]:Block[37736-38317]"
    }, {
      "left" : "switch (options.type) {\n        case ZMQ.ZMQ_PAIR:\n            return \"PAIR\";\n        case ZMQ.ZMQ_PUB:\n            return \"PUB\";\n        case ZMQ.ZMQ_SUB:\n            return \"SUB\";\n        case ZMQ.ZMQ_REQ:\n            return \"REQ\";\n        case ZMQ.ZMQ_REP:\n            return \"REP\";\n        case ZMQ.ZMQ_DEALER:\n            return \"DEALER\";\n        case ZMQ.ZMQ_ROUTER:\n            return \"ROUTER\";\n        case ZMQ.ZMQ_PULL:\n            return \"PULL\";\n        case ZMQ.ZMQ_PUSH:\n            return \"PUSH\";\n        default:\n            return \"UNKOWN\";\n        }",
      "right" : "switch (options.type) {\n        case ZMQ.ZMQ_PAIR:\n            return \"PAIR\";\n        case ZMQ.ZMQ_PUB:\n            return \"PUB\";\n        case ZMQ.ZMQ_SUB:\n            return \"SUB\";\n        case ZMQ.ZMQ_REQ:\n            return \"REQ\";\n        case ZMQ.ZMQ_REP:\n            return \"REP\";\n        case ZMQ.ZMQ_DEALER:\n            return \"DEALER\";\n        case ZMQ.ZMQ_ROUTER:\n            return \"ROUTER\";\n        case ZMQ.ZMQ_PULL:\n            return \"PULL\";\n        case ZMQ.ZMQ_PUSH:\n            return \"PUSH\";\n        default:\n            return \"UNKOWN\";\n        }",
      "info" : "SwitchStatement[37617-38182]:SwitchStatement[37746-38311]"
    }, {
      "left" : "case ZMQ.ZMQ_PAIR:",
      "right" : "case ZMQ.ZMQ_PAIR:",
      "info" : "SwitchCase[37649-37667]:SwitchCase[37778-37796]"
    }, {
      "left" : "return \"PAIR\";",
      "right" : "return \"PAIR\";",
      "info" : "ReturnStatement[37680-37694]:ReturnStatement[37809-37823]"
    }, {
      "left" : "case ZMQ.ZMQ_PUB:",
      "right" : "case ZMQ.ZMQ_PUB:",
      "info" : "SwitchCase[37703-37720]:SwitchCase[37832-37849]"
    }, {
      "left" : "return \"PUB\";",
      "right" : "return \"PUB\";",
      "info" : "ReturnStatement[37733-37746]:ReturnStatement[37862-37875]"
    }, {
      "left" : "case ZMQ.ZMQ_SUB:",
      "right" : "case ZMQ.ZMQ_SUB:",
      "info" : "SwitchCase[37755-37772]:SwitchCase[37884-37901]"
    }, {
      "left" : "return \"SUB\";",
      "right" : "return \"SUB\";",
      "info" : "ReturnStatement[37785-37798]:ReturnStatement[37914-37927]"
    }, {
      "left" : "case ZMQ.ZMQ_REQ:",
      "right" : "case ZMQ.ZMQ_REQ:",
      "info" : "SwitchCase[37807-37824]:SwitchCase[37936-37953]"
    }, {
      "left" : "return \"REQ\";",
      "right" : "return \"REQ\";",
      "info" : "ReturnStatement[37837-37850]:ReturnStatement[37966-37979]"
    }, {
      "left" : "case ZMQ.ZMQ_REP:",
      "right" : "case ZMQ.ZMQ_REP:",
      "info" : "SwitchCase[37859-37876]:SwitchCase[37988-38005]"
    }, {
      "left" : "return \"REP\";",
      "right" : "return \"REP\";",
      "info" : "ReturnStatement[37889-37902]:ReturnStatement[38018-38031]"
    }, {
      "left" : "case ZMQ.ZMQ_DEALER:",
      "right" : "case ZMQ.ZMQ_DEALER:",
      "info" : "SwitchCase[37911-37931]:SwitchCase[38040-38060]"
    }, {
      "left" : "return \"DEALER\";",
      "right" : "return \"DEALER\";",
      "info" : "ReturnStatement[37944-37960]:ReturnStatement[38073-38089]"
    }, {
      "left" : "case ZMQ.ZMQ_ROUTER:",
      "right" : "case ZMQ.ZMQ_ROUTER:",
      "info" : "SwitchCase[37969-37989]:SwitchCase[38098-38118]"
    }, {
      "left" : "return \"ROUTER\";",
      "right" : "return \"ROUTER\";",
      "info" : "ReturnStatement[38002-38018]:ReturnStatement[38131-38147]"
    }, {
      "left" : "case ZMQ.ZMQ_PULL:",
      "right" : "case ZMQ.ZMQ_PULL:",
      "info" : "SwitchCase[38027-38045]:SwitchCase[38156-38174]"
    }, {
      "left" : "return \"PULL\";",
      "right" : "return \"PULL\";",
      "info" : "ReturnStatement[38058-38072]:ReturnStatement[38187-38201]"
    }, {
      "left" : "case ZMQ.ZMQ_PUSH:",
      "right" : "case ZMQ.ZMQ_PUSH:",
      "info" : "SwitchCase[38081-38099]:SwitchCase[38210-38228]"
    }, {
      "left" : "return \"PUSH\";",
      "right" : "return \"PUSH\";",
      "info" : "ReturnStatement[38112-38126]:ReturnStatement[38241-38255]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[38135-38143]:SwitchCase[38264-38272]"
    }, {
      "left" : "return \"UNKOWN\";",
      "right" : "return \"UNKOWN\";",
      "info" : "ReturnStatement[38156-38172]:ReturnStatement[38285-38301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38217-38252]:Block[38346-38381]"
    }, {
      "left" : "return errno.get();",
      "right" : "return errno.get();",
      "info" : "ReturnStatement[38227-38246]:ReturnStatement[38356-38375]"
    } ]
  },
  "interFileMappings" : { }
}