{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsdocToEs6TypedConverterTest",
      "right" : "JsdocToEs6TypedConverterTest",
      "info" : "TypeDeclaration[720-2988]:TypeDeclaration[2570-10200]"
    }, {
      "left" : "public void setUp()",
      "right" : "public void setUp()",
      "info" : "MethodDeclaration[998-1149]:MethodDeclaration[2848-2999]"
    }, {
      "left" : "protected CompilerOptions getOptions()",
      "right" : "protected CompilerOptions getOptions()",
      "info" : "MethodDeclaration[1153-1339]:MethodDeclaration[3003-3189]"
    }, {
      "left" : "public CompilerPass getProcessor(Compiler compiler)",
      "right" : "public CompilerPass getProcessor(Compiler compiler)",
      "info" : "MethodDeclaration[1343-1463]:MethodDeclaration[3193-3313]"
    }, {
      "left" : "protected int getNumRepetitions()",
      "right" : "protected int getNumRepetitions()",
      "info" : "MethodDeclaration[1467-1532]:MethodDeclaration[3317-3382]"
    }, {
      "left" : "public void testVariableDeclaration()",
      "right" : "public void testVariableDeclaration()",
      "info" : "MethodDeclaration[1536-1647]:MethodDeclaration[3386-3497]"
    }, {
      "left" : "public void testVariableDeclarationWithoutDeclaredType() throws Exception",
      "right" : "public void testVariableDeclarationWithoutDeclaredType() throws Exception",
      "info" : "MethodDeclaration[1651-1768]:MethodDeclaration[3501-3618]"
    }, {
      "left" : "public void testFunctionReturnType() throws Exception",
      "right" : "public void testFunctionReturnType() throws Exception",
      "info" : "MethodDeclaration[1772-1912]:MethodDeclaration[3622-3762]"
    }, {
      "left" : "public void testFunctionParameterTypes() throws Exception",
      "right" : "public void testFunctionParameterTypes() throws Exception",
      "info" : "MethodDeclaration[1916-2100]:MethodDeclaration[3766-3950]"
    }, {
      "left" : "public void testFunctionInsideAssignment() throws Exception",
      "right" : "public void testFunctionInsideAssignment() throws Exception",
      "info" : "MethodDeclaration[2104-2340]:MethodDeclaration[3954-4190]"
    }, {
      "left" : "public void testNestedFunctions() throws Exception",
      "right" : "public void testNestedFunctions() throws Exception",
      "info" : "MethodDeclaration[2344-2654]:MethodDeclaration[4194-4504]"
    }, {
      "left" : "public void testUnknownType() throws Exception",
      "right" : "public void testUnknownType() throws Exception",
      "info" : "MethodDeclaration[2658-2762]:MethodDeclaration[4508-4612]"
    }, {
      "left" : "public void testUndefinedType() throws Exception",
      "right" : "public void testUndefinedType() throws Exception",
      "info" : "MethodDeclaration[2877-2986]:MethodDeclaration[4727-4836]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1030-1149]:Block[2880-2999]"
    }, {
      "left" : "setAcceptedLanguage(LanguageMode.ECMASCRIPT6_TYPED);",
      "right" : "setAcceptedLanguage(LanguageMode.ECMASCRIPT6_TYPED);",
      "info" : "ExpressionStatement[1036-1088]:ExpressionStatement[2886-2938]"
    }, {
      "left" : "enableAstValidation(true);",
      "right" : "enableAstValidation(true);",
      "info" : "ExpressionStatement[1093-1119]:ExpressionStatement[2943-2969]"
    }, {
      "left" : "compareJsDoc = false;",
      "right" : "compareJsDoc = false;",
      "info" : "ExpressionStatement[1124-1145]:ExpressionStatement[2974-2995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1204-1339]:Block[3054-3189]"
    }, {
      "left" : "CompilerOptions options = super.getOptions();",
      "right" : "CompilerOptions options = super.getOptions();",
      "info" : "VariableDeclarationStatement[1210-1255]:VariableDeclarationStatement[3060-3105]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED);",
      "right" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED);",
      "info" : "ExpressionStatement[1260-1315]:ExpressionStatement[3110-3165]"
    }, {
      "left" : "return options;",
      "right" : "return options;",
      "info" : "ReturnStatement[1320-1335]:ReturnStatement[3170-3185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1407-1463]:Block[3257-3313]"
    }, {
      "left" : "return new JsdocToEs6TypedConverter(compiler);",
      "right" : "return new JsdocToEs6TypedConverter(compiler);",
      "info" : "ReturnStatement[1413-1459]:ReturnStatement[3263-3309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1513-1532]:Block[3363-3382]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[1519-1528]:ReturnStatement[3369-3378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1574-1647]:Block[3424-3497]"
    }, {
      "left" : "test(\"/** @type {string} */ var print;\", \"var print: string;\");",
      "right" : "test(\"/** @type {string} */ var print;\", \"var print: string;\");",
      "info" : "ExpressionStatement[1580-1643]:ExpressionStatement[3430-3493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1725-1768]:Block[3575-3618]"
    }, {
      "left" : "test(\"var print;\", \"var print;\");",
      "right" : "test(\"var print;\", \"var print;\");",
      "info" : "ExpressionStatement[1731-1764]:ExpressionStatement[3581-3614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1826-1912]:Block[3676-3762]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\");",
      "right" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\");",
      "info" : "ExpressionStatement[1832-1908]:ExpressionStatement[3682-3758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1974-2100]:Block[3824-3950]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\");",
      "right" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\");",
      "info" : "ExpressionStatement[1980-2096]:ExpressionStatement[3830-3946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2164-2340]:Block[4014-4190]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\");",
      "right" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\");",
      "info" : "ExpressionStatement[2170-2336]:ExpressionStatement[4020-4186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2395-2654]:Block[4245-4504]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\");",
      "right" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\");",
      "info" : "ExpressionStatement[2401-2650]:ExpressionStatement[4251-4500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2705-2762]:Block[4555-4612]"
    }, {
      "left" : "test(\"/** @type {?} */ var n;\", \"var n: any;\");",
      "right" : "test(\"/** @type {?} */ var n;\", \"var n: any;\");",
      "info" : "ExpressionStatement[2711-2758]:ExpressionStatement[4561-4608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2926-2986]:Block[4776-4836]"
    }, {
      "left" : "test(\"/** @type {undefined} */ var n;\", \"var n;\");",
      "right" : "test(\"/** @type {undefined} */ var n;\", \"var n;\");",
      "info" : "ExpressionStatement[2932-2982]:ExpressionStatement[4782-4832]"
    } ]
  },
  "interFileMappings" : { }
}