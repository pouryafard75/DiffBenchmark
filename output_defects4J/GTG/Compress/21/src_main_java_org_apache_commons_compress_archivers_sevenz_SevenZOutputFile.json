{
  "matchedElements" : [
 {
    "left" : "class : SevenZOutputFile",
    "right" : "class : SevenZOutputFile",
    "info" : "TypeDeclaration[1332-23932]:TypeDeclaration[1332-23899]"
  }, {
    "left" : "file",
    "right" : "file",
    "info" : "FieldDeclaration[1411-1447]:FieldDeclaration[1411-1447]"
  }, {
    "left" : "files",
    "right" : "files",
    "info" : "FieldDeclaration[1452-1535]:FieldDeclaration[1452-1535]"
  }, {
    "left" : "numNonEmptyStreams",
    "right" : "numNonEmptyStreams",
    "info" : "FieldDeclaration[1540-1575]:FieldDeclaration[1540-1575]"
  }, {
    "left" : "crc32",
    "right" : "crc32",
    "info" : "FieldDeclaration[1580-1614]:FieldDeclaration[1580-1614]"
  }, {
    "left" : "compressedCrc32",
    "right" : "compressedCrc32",
    "info" : "FieldDeclaration[1619-1663]:FieldDeclaration[1619-1663]"
  }, {
    "left" : "fileBytesWritten",
    "right" : "fileBytesWritten",
    "info" : "FieldDeclaration[1668-1702]:FieldDeclaration[1668-1702]"
  }, {
    "left" : "finished",
    "right" : "finished",
    "info" : "FieldDeclaration[1707-1740]:FieldDeclaration[1707-1740]"
  }, {
    "left" : "currentOutputStream",
    "right" : "currentOutputStream",
    "info" : "FieldDeclaration[1745-1794]:FieldDeclaration[1745-1794]"
  }, {
    "left" : "contentCompression",
    "right" : "contentCompression",
    "info" : "FieldDeclaration[1799-1860]:FieldDeclaration[1799-1860]"
  }, {
    "left" : "public SevenZOutputFile(filename ) : ",
    "right" : "public SevenZOutputFile(filename ) : ",
    "info" : "MethodDeclaration[1870-2219]:MethodDeclaration[1870-2219]"
  }, {
    "left" : "public setContentCompression(method ) : void",
    "right" : "public setContentCompression(method ) : void",
    "info" : "MethodDeclaration[2229-2621]:MethodDeclaration[2229-2621]"
  }, {
    "left" : "public close() : void",
    "right" : "public close() : void",
    "info" : "MethodDeclaration[2627-2868]:MethodDeclaration[2627-2868]"
  }, {
    "left" : "public createArchiveEntry(inputFile , entryName ) : ",
    "right" : "public createArchiveEntry(inputFile , entryName ) : ",
    "info" : "MethodDeclaration[2878-3503]:MethodDeclaration[2878-3503]"
  }, {
    "left" : "public putArchiveEntry(archiveEntry ) : void",
    "right" : "public putArchiveEntry(archiveEntry ) : void",
    "info" : "MethodDeclaration[3509-3974]:MethodDeclaration[3509-3974]"
  }, {
    "left" : "public closeArchiveEntry() : void",
    "right" : "public closeArchiveEntry() : void",
    "info" : "MethodDeclaration[3984-5000]:MethodDeclaration[3984-5000]"
  }, {
    "left" : "public write(b int) : void",
    "right" : "public write(b int) : void",
    "info" : "MethodDeclaration[5010-5253]:MethodDeclaration[5010-5253]"
  }, {
    "left" : "public write(b ) : void",
    "right" : "public write(b ) : void",
    "info" : "MethodDeclaration[5263-5509]:MethodDeclaration[5263-5509]"
  }, {
    "left" : "public write(b , off int, len int) : void",
    "right" : "public write(b , off int, len int) : void",
    "info" : "MethodDeclaration[5519-5967]:MethodDeclaration[5519-5967]"
  }, {
    "left" : "public finish() : void",
    "right" : "public finish() : void",
    "info" : "MethodDeclaration[5977-7743]:MethodDeclaration[5977-7743]"
  }, {
    "left" : "private getCurrentOutputStream() : ",
    "right" : "private getCurrentOutputStream() : ",
    "info" : "MethodDeclaration[7954-8174]:MethodDeclaration[7954-8174]"
  }, {
    "left" : "private setupFileOutputStream() : ",
    "right" : "private setupFileOutputStream() : ",
    "info" : "MethodDeclaration[8180-9138]:MethodDeclaration[8180-9138]"
  }, {
    "left" : "public write(b int) : void",
    "right" : "public write(b int) : void",
    "info" : "MethodDeclaration[8557-8709]:MethodDeclaration[8557-8709]"
  }, {
    "left" : "public write(b ) : void",
    "right" : "public write(b ) : void",
    "info" : "MethodDeclaration[8727-8882]:MethodDeclaration[8727-8882]"
  }, {
    "left" : "public write(b , off int, len int) : void",
    "right" : "public write(b , off int, len int) : void",
    "info" : "MethodDeclaration[8900-9121]:MethodDeclaration[8900-9121]"
  }, {
    "left" : "private writeHeader(header ) : void",
    "right" : "private writeHeader(header ) : void",
    "info" : "MethodDeclaration[9144-9406]:MethodDeclaration[9144-9406]"
  }, {
    "left" : "private writeStreamsInfo(header ) : void",
    "right" : "private writeStreamsInfo(header ) : void",
    "info" : "MethodDeclaration[9416-9704]:MethodDeclaration[9416-9704]"
  }, {
    "left" : "private writePackInfo(header ) : void",
    "right" : "private writePackInfo(header ) : void",
    "info" : "MethodDeclaration[9714-10470]:MethodDeclaration[9714-10470]"
  }, {
    "left" : "private writeUnpackInfo(header ) : void",
    "right" : "private writeUnpackInfo(header ) : void",
    "info" : "MethodDeclaration[10480-11344]:MethodDeclaration[10480-11344]"
  }, {
    "left" : "private writeFolder(header ) : void",
    "right" : "private writeFolder(header ) : void",
    "info" : "MethodDeclaration[11354-11902]:MethodDeclaration[11354-11902]"
  }, {
    "left" : "private writeSubStreamsInfo(header ) : void",
    "right" : "private writeSubStreamsInfo(header ) : void",
    "info" : "MethodDeclaration[11912-12351]:MethodDeclaration[11912-12351]"
  }, {
    "left" : "private writeFilesInfo(header ) : void",
    "right" : "private writeFilesInfo(header ) : void",
    "info" : "MethodDeclaration[12361-12843]:MethodDeclaration[12361-12843]"
  }, {
    "left" : "private writeFileEmptyStreams(header ) : void",
    "right" : "private writeFileEmptyStreams(header ) : void",
    "info" : "MethodDeclaration[12853-13810]:MethodDeclaration[12853-13810]"
  }, {
    "left" : "private writeFileEmptyFiles(header ) : void",
    "right" : "private writeFileEmptyFiles(header ) : void",
    "info" : "MethodDeclaration[13820-14762]:MethodDeclaration[13820-14762]"
  }, {
    "left" : "private writeFileAntiItems(header ) : void",
    "right" : "private writeFileAntiItems(header ) : void",
    "info" : "MethodDeclaration[14772-15693]:MethodDeclaration[14772-15693]"
  }, {
    "left" : "private writeFileNames(header ) : void",
    "right" : "private writeFileNames(header ) : void",
    "info" : "MethodDeclaration[15703-16291]:MethodDeclaration[15703-16291]"
  }, {
    "left" : "private writeFileCTimes(header ) : void",
    "right" : "private writeFileCTimes(header ) : void",
    "info" : "MethodDeclaration[16297-17693]:MethodDeclaration[16297-17693]"
  }, {
    "left" : "private writeFileATimes(header ) : void",
    "right" : "private writeFileATimes(header ) : void",
    "info" : "MethodDeclaration[17699-19079]:MethodDeclaration[17699-19079]"
  }, {
    "left" : "private writeFileMTimes(header ) : void",
    "right" : "private writeFileMTimes(header ) : void",
    "info" : "MethodDeclaration[19085-20513]:MethodDeclaration[19085-20513]"
  }, {
    "left" : "private writeFileWindowsAttributes(header ) : void",
    "right" : "private writeFileWindowsAttributes(header ) : void",
    "info" : "MethodDeclaration[20519-21916]:MethodDeclaration[20519-21916]"
  }, {
    "left" : "private writeUint64(header , value long) : void",
    "right" : "private writeUint64(header , value long) : void",
    "info" : "MethodDeclaration[21922-22463]:MethodDeclaration[21922-22463]"
  }, {
    "left" : "private writeBits(header , bits , length int) : void",
    "right" : "private writeBits(header , bits , length int) : void",
    "info" : "MethodDeclaration[22469-22972]:MethodDeclaration[22469-22939]"
  }, {
    "left" : "class : OutputStreamWrapper",
    "right" : "class : OutputStreamWrapper",
    "info" : "TypeDeclaration[22978-23930]:TypeDeclaration[22945-23897]"
  }, {
    "left" : "public write(b int) : void",
    "right" : "public write(b int) : void",
    "info" : "MethodDeclaration[23043-23220]:MethodDeclaration[23010-23187]"
  }, {
    "left" : "public write(b ) : void",
    "right" : "public write(b ) : void",
    "info" : "MethodDeclaration[23234-23376]:MethodDeclaration[23201-23343]"
  }, {
    "left" : "public write(b , off int, len int) : void",
    "right" : "public write(b , off int, len int) : void",
    "info" : "MethodDeclaration[23390-23637]:MethodDeclaration[23357-23604]"
  }, {
    "left" : "public flush() : void",
    "right" : "public flush() : void",
    "info" : "MethodDeclaration[23647-23768]:MethodDeclaration[23614-23735]"
  }, {
    "left" : "public close() : void",
    "right" : "public close() : void",
    "info" : "MethodDeclaration[23778-23924]:MethodDeclaration[23745-23891]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2042-2048]:Modifier[2042-2048]"
  }, {
    "left" : "SevenZOutputFile",
    "right" : "SevenZOutputFile",
    "info" : "SimpleName[2049-2065]:SimpleName[2049-2065]"
  }, {
    "left" : "final File filename",
    "right" : "final File filename",
    "info" : "SingleVariableDeclaration[2066-2085]:SingleVariableDeclaration[2066-2085]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[2094-2105]:SimpleType[2094-2105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2106-2219]:Block[2106-2219]"
  }, {
    "left" : "file = new RandomAccessFile(filename, \"rw\");",
    "right" : "file = new RandomAccessFile(filename, \"rw\");",
    "info" : "ExpressionStatement[2116-2160]:ExpressionStatement[2116-2160]"
  }, {
    "left" : "file.seek(SevenZFile.SIGNATURE_HEADER_SIZE);",
    "right" : "file.seek(SevenZFile.SIGNATURE_HEADER_SIZE);",
    "info" : "ExpressionStatement[2169-2213]:ExpressionStatement[2169-2213]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2517-2523]:Modifier[2517-2523]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2524-2528]:PrimitiveType[2524-2528]"
  }, {
    "left" : "setContentCompression",
    "right" : "setContentCompression",
    "info" : "SimpleName[2529-2550]:SimpleName[2529-2550]"
  }, {
    "left" : "SevenZMethod method",
    "right" : "SevenZMethod method",
    "info" : "SingleVariableDeclaration[2551-2570]:SingleVariableDeclaration[2551-2570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2572-2621]:Block[2572-2621]"
  }, {
    "left" : "this.contentCompression = method;",
    "right" : "this.contentCompression = method;",
    "info" : "ExpressionStatement[2582-2615]:ExpressionStatement[2582-2615]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2743-2749]:Modifier[2743-2749]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2750-2754]:PrimitiveType[2750-2754]"
  }, {
    "left" : "close",
    "right" : "close",
    "info" : "SimpleName[2755-2760]:SimpleName[2755-2760]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[2770-2781]:SimpleType[2770-2781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2782-2868]:Block[2782-2868]"
  }, {
    "left" : "if (!finished)",
    "right" : "if (!finished)",
    "info" : "IfStatement[2792-2840]:IfStatement[2792-2840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2807-2840]:Block[2807-2840]"
  }, {
    "left" : "finish();",
    "right" : "finish();",
    "info" : "ExpressionStatement[2821-2830]:ExpressionStatement[2821-2830]"
  }, {
    "left" : "file.close();",
    "right" : "file.close();",
    "info" : "ExpressionStatement[2849-2862]:ExpressionStatement[2849-2862]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3127-3133]:Modifier[3127-3133]"
  }, {
    "left" : "SevenZArchiveEntry",
    "right" : "SevenZArchiveEntry",
    "info" : "SimpleType[3134-3152]:SimpleType[3134-3152]"
  }, {
    "left" : "createArchiveEntry",
    "right" : "createArchiveEntry",
    "info" : "SimpleName[3153-3171]:SimpleName[3153-3171]"
  }, {
    "left" : "final File inputFile",
    "right" : "final File inputFile",
    "info" : "SingleVariableDeclaration[3172-3192]:SingleVariableDeclaration[3172-3192]"
  }, {
    "left" : "final String entryName",
    "right" : "final String entryName",
    "info" : "SingleVariableDeclaration[3206-3228]:SingleVariableDeclaration[3206-3228]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[3237-3248]:SimpleType[3237-3248]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3249-3503]:Block[3249-3503]"
  }, {
    "left" : "final SevenZArchiveEntry entry = new SevenZArchiveEntry();",
    "right" : "final SevenZArchiveEntry entry = new SevenZArchiveEntry();",
    "info" : "VariableDeclarationStatement[3259-3317]:VariableDeclarationStatement[3259-3317]"
  }, {
    "left" : "entry.setDirectory(inputFile.isDirectory());",
    "right" : "entry.setDirectory(inputFile.isDirectory());",
    "info" : "ExpressionStatement[3326-3370]:ExpressionStatement[3326-3370]"
  }, {
    "left" : "entry.setName(entryName);",
    "right" : "entry.setName(entryName);",
    "info" : "ExpressionStatement[3379-3404]:ExpressionStatement[3379-3404]"
  }, {
    "left" : "entry.setLastModifiedDate(new Date(inputFile.lastModified()));",
    "right" : "entry.setLastModifiedDate(new Date(inputFile.lastModified()));",
    "info" : "ExpressionStatement[3413-3475]:ExpressionStatement[3413-3475]"
  }, {
    "left" : "return entry;",
    "right" : "return entry;",
    "info" : "ReturnStatement[3484-3497]:ReturnStatement[3484-3497]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3785-3791]:Modifier[3785-3791]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3792-3796]:PrimitiveType[3792-3796]"
  }, {
    "left" : "putArchiveEntry",
    "right" : "putArchiveEntry",
    "info" : "SimpleName[3797-3812]:SimpleName[3797-3812]"
  }, {
    "left" : "final ArchiveEntry archiveEntry",
    "right" : "final ArchiveEntry archiveEntry",
    "info" : "SingleVariableDeclaration[3813-3844]:SingleVariableDeclaration[3813-3844]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[3853-3864]:SimpleType[3853-3864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3865-3974]:Block[3865-3974]"
  }, {
    "left" : "final SevenZArchiveEntry entry = (SevenZArchiveEntry) archiveEntry;",
    "right" : "final SevenZArchiveEntry entry = (SevenZArchiveEntry) archiveEntry;",
    "info" : "VariableDeclarationStatement[3875-3942]:VariableDeclarationStatement[3875-3942]"
  }, {
    "left" : "files.add(entry);",
    "right" : "files.add(entry);",
    "info" : "ExpressionStatement[3951-3968]:ExpressionStatement[3951-3968]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4060-4066]:Modifier[4060-4066]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4067-4071]:PrimitiveType[4067-4071]"
  }, {
    "left" : "closeArchiveEntry",
    "right" : "closeArchiveEntry",
    "info" : "SimpleName[4072-4089]:SimpleName[4072-4089]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[4099-4110]:SimpleType[4099-4110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4111-5000]:Block[4111-5000]"
  }, {
    "left" : "if (currentOutputStream != null)",
    "right" : "if (currentOutputStream != null)",
    "info" : "IfStatement[4121-4247]:IfStatement[4121-4247]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4154-4247]:Block[4154-4247]"
  }, {
    "left" : "currentOutputStream.flush();",
    "right" : "currentOutputStream.flush();",
    "info" : "ExpressionStatement[4168-4196]:ExpressionStatement[4168-4196]"
  }, {
    "left" : "currentOutputStream.close();",
    "right" : "currentOutputStream.close();",
    "info" : "ExpressionStatement[4209-4237]:ExpressionStatement[4209-4237]"
  }, {
    "left" : "final SevenZArchiveEntry entry = files.get(files.size() - 1);",
    "right" : "final SevenZArchiveEntry entry = files.get(files.size() - 1);",
    "info" : "VariableDeclarationStatement[4257-4318]:VariableDeclarationStatement[4257-4318]"
  }, {
    "left" : "if (fileBytesWritten > 0)",
    "right" : "if (fileBytesWritten > 0)",
    "info" : "IfStatement[4327-4872]:IfStatement[4327-4872]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4353-4710]:Block[4353-4710]"
  }, {
    "left" : "entry.setHasStream(true);",
    "right" : "entry.setHasStream(true);",
    "info" : "ExpressionStatement[4367-4392]:ExpressionStatement[4367-4392]"
  }, {
    "left" : "++numNonEmptyStreams;",
    "right" : "++numNonEmptyStreams;",
    "info" : "ExpressionStatement[4405-4426]:ExpressionStatement[4405-4426]"
  }, {
    "left" : "entry.setSize(currentOutputStream.getBytesWritten());",
    "right" : "entry.setSize(currentOutputStream.getBytesWritten());",
    "info" : "ExpressionStatement[4439-4492]:ExpressionStatement[4439-4492]"
  }, {
    "left" : "entry.setCompressedSize(fileBytesWritten);",
    "right" : "entry.setCompressedSize(fileBytesWritten);",
    "info" : "ExpressionStatement[4505-4547]:ExpressionStatement[4505-4547]"
  }, {
    "left" : "entry.setCrcValue(crc32.getValue());",
    "right" : "entry.setCrcValue(crc32.getValue());",
    "info" : "ExpressionStatement[4560-4596]:ExpressionStatement[4560-4596]"
  }, {
    "left" : "entry.setCompressedCrcValue(compressedCrc32.getValue());",
    "right" : "entry.setCompressedCrcValue(compressedCrc32.getValue());",
    "info" : "ExpressionStatement[4609-4665]:ExpressionStatement[4609-4665]"
  }, {
    "left" : "entry.setHasCrc(true);",
    "right" : "entry.setHasCrc(true);",
    "info" : "ExpressionStatement[4678-4700]:ExpressionStatement[4678-4700]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4716-4872]:Block[4716-4872]"
  }, {
    "left" : "entry.setHasStream(false);",
    "right" : "entry.setHasStream(false);",
    "info" : "ExpressionStatement[4730-4756]:ExpressionStatement[4730-4756]"
  }, {
    "left" : "entry.setSize(0);",
    "right" : "entry.setSize(0);",
    "info" : "ExpressionStatement[4769-4786]:ExpressionStatement[4769-4786]"
  }, {
    "left" : "entry.setCompressedSize(0);",
    "right" : "entry.setCompressedSize(0);",
    "info" : "ExpressionStatement[4799-4826]:ExpressionStatement[4799-4826]"
  }, {
    "left" : "entry.setHasCrc(false);",
    "right" : "entry.setHasCrc(false);",
    "info" : "ExpressionStatement[4839-4862]:ExpressionStatement[4839-4862]"
  }, {
    "left" : "currentOutputStream = null;",
    "right" : "currentOutputStream = null;",
    "info" : "ExpressionStatement[4881-4908]:ExpressionStatement[4881-4908]"
  }, {
    "left" : "crc32.reset();",
    "right" : "crc32.reset();",
    "info" : "ExpressionStatement[4917-4931]:ExpressionStatement[4917-4931]"
  }, {
    "left" : "compressedCrc32.reset();",
    "right" : "compressedCrc32.reset();",
    "info" : "ExpressionStatement[4940-4964]:ExpressionStatement[4940-4964]"
  }, {
    "left" : "fileBytesWritten = 0;",
    "right" : "fileBytesWritten = 0;",
    "info" : "ExpressionStatement[4973-4994]:ExpressionStatement[4973-4994]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5153-5159]:Modifier[5153-5159]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5160-5164]:PrimitiveType[5160-5164]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[5165-5170]:SimpleName[5165-5170]"
  }, {
    "left" : "final int b",
    "right" : "final int b",
    "info" : "SingleVariableDeclaration[5171-5182]:SingleVariableDeclaration[5171-5182]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5191-5202]:SimpleType[5191-5202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5203-5253]:Block[5203-5253]"
  }, {
    "left" : "getCurrentOutputStream().write(b);",
    "right" : "getCurrentOutputStream().write(b);",
    "info" : "ExpressionStatement[5213-5247]:ExpressionStatement[5213-5247]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5418-5424]:Modifier[5418-5424]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5425-5429]:PrimitiveType[5425-5429]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[5430-5435]:SimpleName[5430-5435]"
  }, {
    "left" : "final byte[] b",
    "right" : "final byte[] b",
    "info" : "SingleVariableDeclaration[5436-5450]:SingleVariableDeclaration[5436-5450]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5459-5470]:SimpleType[5459-5470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5471-5509]:Block[5471-5509]"
  }, {
    "left" : "write(b, 0, b.length);",
    "right" : "write(b, 0, b.length);",
    "info" : "ExpressionStatement[5481-5503]:ExpressionStatement[5481-5503]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5787-5793]:Modifier[5787-5793]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5794-5798]:PrimitiveType[5794-5798]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[5799-5804]:SimpleName[5799-5804]"
  }, {
    "left" : "final byte[] b",
    "right" : "final byte[] b",
    "info" : "SingleVariableDeclaration[5805-5819]:SingleVariableDeclaration[5805-5819]"
  }, {
    "left" : "final int off",
    "right" : "final int off",
    "info" : "SingleVariableDeclaration[5821-5834]:SingleVariableDeclaration[5821-5834]"
  }, {
    "left" : "final int len",
    "right" : "final int len",
    "info" : "SingleVariableDeclaration[5836-5849]:SingleVariableDeclaration[5836-5849]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5858-5869]:SimpleType[5858-5869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5870-5967]:Block[5870-5967]"
  }, {
    "left" : "if (len > 0)",
    "right" : "if (len > 0)",
    "info" : "IfStatement[5880-5961]:IfStatement[5880-5961]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5893-5961]:Block[5893-5961]"
  }, {
    "left" : "getCurrentOutputStream().write(b, off, len);",
    "right" : "getCurrentOutputStream().write(b, off, len);",
    "info" : "ExpressionStatement[5907-5951]:ExpressionStatement[5907-5951]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6135-6141]:Modifier[6135-6141]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6142-6146]:PrimitiveType[6142-6146]"
  }, {
    "left" : "finish",
    "right" : "finish",
    "info" : "SimpleName[6147-6153]:SimpleName[6147-6153]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[6163-6174]:SimpleType[6163-6174]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6175-7743]:Block[6175-7743]"
  }, {
    "left" : "if (finished)",
    "right" : "if (finished)",
    "info" : "IfStatement[6185-6287]:IfStatement[6185-6287]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6199-6287]:Block[6199-6287]"
  }, {
    "left" : "throw new IOException(\"This archive has already been finished\");",
    "right" : "throw new IOException(\"This archive has already been finished\");",
    "info" : "ThrowStatement[6213-6277]:ThrowStatement[6213-6277]"
  }, {
    "left" : "finished = true;",
    "right" : "finished = true;",
    "info" : "ExpressionStatement[6296-6312]:ExpressionStatement[6296-6312]"
  }, {
    "left" : "final long headerPosition = file.getFilePointer();",
    "right" : "final long headerPosition = file.getFilePointer();",
    "info" : "VariableDeclarationStatement[6330-6380]:VariableDeclarationStatement[6330-6380]"
  }, {
    "left" : "final ByteArrayOutputStream headerBaos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream headerBaos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[6398-6467]:VariableDeclarationStatement[6398-6467]"
  }, {
    "left" : "final DataOutputStream header = new DataOutputStream(headerBaos);",
    "right" : "final DataOutputStream header = new DataOutputStream(headerBaos);",
    "info" : "VariableDeclarationStatement[6476-6541]:VariableDeclarationStatement[6476-6541]"
  }, {
    "left" : "writeHeader(header);",
    "right" : "writeHeader(header);",
    "info" : "ExpressionStatement[6559-6579]:ExpressionStatement[6559-6579]"
  }, {
    "left" : "header.flush();",
    "right" : "header.flush();",
    "info" : "ExpressionStatement[6588-6603]:ExpressionStatement[6588-6603]"
  }, {
    "left" : "final byte[] headerBytes = headerBaos.toByteArray();",
    "right" : "final byte[] headerBytes = headerBaos.toByteArray();",
    "info" : "VariableDeclarationStatement[6612-6664]:VariableDeclarationStatement[6612-6664]"
  }, {
    "left" : "file.write(headerBytes);",
    "right" : "file.write(headerBytes);",
    "info" : "ExpressionStatement[6673-6697]:ExpressionStatement[6673-6697]"
  }, {
    "left" : "final CRC32 crc32 = new CRC32();",
    "right" : "final CRC32 crc32 = new CRC32();",
    "info" : "VariableDeclarationStatement[6715-6747]:VariableDeclarationStatement[6715-6747]"
  }, {
    "left" : "file.seek(0);",
    "right" : "file.seek(0);",
    "info" : "ExpressionStatement[6793-6806]:ExpressionStatement[6793-6806]"
  }, {
    "left" : "file.write(SevenZFile.sevenZSignature);",
    "right" : "file.write(SevenZFile.sevenZSignature);",
    "info" : "ExpressionStatement[6815-6854]:ExpressionStatement[6815-6854]"
  }, {
    "left" : "file.write(0);",
    "right" : "file.write(0);",
    "info" : "ExpressionStatement[6882-6896]:ExpressionStatement[6882-6896]"
  }, {
    "left" : "file.write(2);",
    "right" : "file.write(2);",
    "info" : "ExpressionStatement[6905-6919]:ExpressionStatement[6905-6919]"
  }, {
    "left" : "final ByteArrayOutputStream startHeaderBaos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream startHeaderBaos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[6961-7035]:VariableDeclarationStatement[6961-7035]"
  }, {
    "left" : "final DataOutputStream startHeaderStream = new DataOutputStream(startHeaderBaos);",
    "right" : "final DataOutputStream startHeaderStream = new DataOutputStream(startHeaderBaos);",
    "info" : "VariableDeclarationStatement[7044-7125]:VariableDeclarationStatement[7044-7125]"
  }, {
    "left" : "startHeaderStream.writeLong(Long.reverseBytes(headerPosition - SevenZFile.SIGNATURE_HEADER_SIZE));",
    "right" : "startHeaderStream.writeLong(Long.reverseBytes(headerPosition - SevenZFile.SIGNATURE_HEADER_SIZE));",
    "info" : "ExpressionStatement[7134-7232]:ExpressionStatement[7134-7232]"
  }, {
    "left" : "startHeaderStream.writeLong(Long.reverseBytes(0xffffFFFFL & headerBytes.length));",
    "right" : "startHeaderStream.writeLong(Long.reverseBytes(0xffffFFFFL & headerBytes.length));",
    "info" : "ExpressionStatement[7241-7322]:ExpressionStatement[7241-7322]"
  }, {
    "left" : "crc32.reset();",
    "right" : "crc32.reset();",
    "info" : "ExpressionStatement[7331-7345]:ExpressionStatement[7331-7345]"
  }, {
    "left" : "crc32.update(headerBytes);",
    "right" : "crc32.update(headerBytes);",
    "info" : "ExpressionStatement[7354-7380]:ExpressionStatement[7354-7380]"
  }, {
    "left" : "startHeaderStream.writeInt(Integer.reverseBytes((int)crc32.getValue()));",
    "right" : "startHeaderStream.writeInt(Integer.reverseBytes((int)crc32.getValue()));",
    "info" : "ExpressionStatement[7389-7461]:ExpressionStatement[7389-7461]"
  }, {
    "left" : "startHeaderStream.flush();",
    "right" : "startHeaderStream.flush();",
    "info" : "ExpressionStatement[7470-7496]:ExpressionStatement[7470-7496]"
  }, {
    "left" : "final byte[] startHeaderBytes = startHeaderBaos.toByteArray();",
    "right" : "final byte[] startHeaderBytes = startHeaderBaos.toByteArray();",
    "info" : "VariableDeclarationStatement[7505-7567]:VariableDeclarationStatement[7505-7567]"
  }, {
    "left" : "crc32.reset();",
    "right" : "crc32.reset();",
    "info" : "ExpressionStatement[7576-7590]:ExpressionStatement[7576-7590]"
  }, {
    "left" : "crc32.update(startHeaderBytes);",
    "right" : "crc32.update(startHeaderBytes);",
    "info" : "ExpressionStatement[7599-7630]:ExpressionStatement[7599-7630]"
  }, {
    "left" : "file.writeInt(Integer.reverseBytes((int) crc32.getValue()));",
    "right" : "file.writeInt(Integer.reverseBytes((int) crc32.getValue()));",
    "info" : "ExpressionStatement[7639-7699]:ExpressionStatement[7639-7699]"
  }, {
    "left" : "file.write(startHeaderBytes);",
    "right" : "file.write(startHeaderBytes);",
    "info" : "ExpressionStatement[7708-7737]:ExpressionStatement[7708-7737]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[7954-7961]:Modifier[7954-7961]"
  }, {
    "left" : "OutputStream",
    "right" : "OutputStream",
    "info" : "SimpleType[7962-7974]:SimpleType[7962-7974]"
  }, {
    "left" : "getCurrentOutputStream",
    "right" : "getCurrentOutputStream",
    "info" : "SimpleName[7975-7997]:SimpleName[7975-7997]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8007-8018]:SimpleType[8007-8018]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8019-8174]:Block[8019-8174]"
  }, {
    "left" : "if (currentOutputStream == null)",
    "right" : "if (currentOutputStream == null)",
    "info" : "IfStatement[8029-8132]:IfStatement[8029-8132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8062-8132]:Block[8062-8132]"
  }, {
    "left" : "currentOutputStream = setupFileOutputStream();",
    "right" : "currentOutputStream = setupFileOutputStream();",
    "info" : "ExpressionStatement[8076-8122]:ExpressionStatement[8076-8122]"
  }, {
    "left" : "return currentOutputStream;",
    "right" : "return currentOutputStream;",
    "info" : "ReturnStatement[8141-8168]:ReturnStatement[8141-8168]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[8180-8187]:Modifier[8180-8187]"
  }, {
    "left" : "CountingOutputStream",
    "right" : "CountingOutputStream",
    "info" : "SimpleType[8188-8208]:SimpleType[8188-8208]"
  }, {
    "left" : "setupFileOutputStream",
    "right" : "setupFileOutputStream",
    "info" : "SimpleName[8209-8230]:SimpleName[8209-8230]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8240-8251]:SimpleType[8240-8251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8252-9138]:Block[8252-9138]"
  }, {
    "left" : "OutputStream out = new OutputStreamWrapper();",
    "right" : "OutputStream out = new OutputStreamWrapper();",
    "info" : "VariableDeclarationStatement[8262-8307]:VariableDeclarationStatement[8262-8307]"
  }, {
    "left" : "return new CountingOutputStream(Coders\n                                        .addEncoder(out,\n                                                    contentCompression,\n                                                    null)) {\n            @Override\n            public void write(final int b) throws IOException {\n                super.write(b);\n                crc32.update(b);\n            }\n    \n            @Override\n            public void write(final byte[] b) throws IOException {\n                super.write(b);\n                crc32.update(b);\n            }\n    \n            @Override\n            public void write(final byte[] b, final int off, final int len)\n                throws IOException {\n                super.write(b, off, len);\n                crc32.update(b, off, len);\n            }\n        };",
    "right" : "return new CountingOutputStream(Coders\n                                        .addEncoder(out,\n                                                    contentCompression,\n                                                    null)) {\n            @Override\n            public void write(final int b) throws IOException {\n                super.write(b);\n                crc32.update(b);\n            }\n    \n            @Override\n            public void write(final byte[] b) throws IOException {\n                super.write(b);\n                crc32.update(b);\n            }\n    \n            @Override\n            public void write(final byte[] b, final int off, final int len)\n                throws IOException {\n                super.write(b, off, len);\n                crc32.update(b, off, len);\n            }\n        };",
    "info" : "ReturnStatement[8316-9132]:ReturnStatement[8316-9132]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8557-8566]:MarkerAnnotation[8557-8566]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8579-8585]:Modifier[8579-8585]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8586-8590]:PrimitiveType[8586-8590]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[8591-8596]:SimpleName[8591-8596]"
  }, {
    "left" : "final int b",
    "right" : "final int b",
    "info" : "SingleVariableDeclaration[8597-8608]:SingleVariableDeclaration[8597-8608]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8617-8628]:SimpleType[8617-8628]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8629-8709]:Block[8629-8709]"
  }, {
    "left" : "super.write(b);",
    "right" : "super.write(b);",
    "info" : "ExpressionStatement[8647-8662]:ExpressionStatement[8647-8662]"
  }, {
    "left" : "crc32.update(b);",
    "right" : "crc32.update(b);",
    "info" : "ExpressionStatement[8679-8695]:ExpressionStatement[8679-8695]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8727-8736]:MarkerAnnotation[8727-8736]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8749-8755]:Modifier[8749-8755]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8756-8760]:PrimitiveType[8756-8760]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[8761-8766]:SimpleName[8761-8766]"
  }, {
    "left" : "final byte[] b",
    "right" : "final byte[] b",
    "info" : "SingleVariableDeclaration[8767-8781]:SingleVariableDeclaration[8767-8781]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8790-8801]:SimpleType[8790-8801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8802-8882]:Block[8802-8882]"
  }, {
    "left" : "super.write(b);",
    "right" : "super.write(b);",
    "info" : "ExpressionStatement[8820-8835]:ExpressionStatement[8820-8835]"
  }, {
    "left" : "crc32.update(b);",
    "right" : "crc32.update(b);",
    "info" : "ExpressionStatement[8852-8868]:ExpressionStatement[8852-8868]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8900-8909]:MarkerAnnotation[8900-8909]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8922-8928]:Modifier[8922-8928]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8929-8933]:PrimitiveType[8929-8933]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[8934-8939]:SimpleName[8934-8939]"
  }, {
    "left" : "final byte[] b",
    "right" : "final byte[] b",
    "info" : "SingleVariableDeclaration[8940-8954]:SingleVariableDeclaration[8940-8954]"
  }, {
    "left" : "final int off",
    "right" : "final int off",
    "info" : "SingleVariableDeclaration[8956-8969]:SingleVariableDeclaration[8956-8969]"
  }, {
    "left" : "final int len",
    "right" : "final int len",
    "info" : "SingleVariableDeclaration[8971-8984]:SingleVariableDeclaration[8971-8984]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[9009-9020]:SimpleType[9009-9020]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9021-9121]:Block[9021-9121]"
  }, {
    "left" : "super.write(b, off, len);",
    "right" : "super.write(b, off, len);",
    "info" : "ExpressionStatement[9039-9064]:ExpressionStatement[9039-9064]"
  }, {
    "left" : "crc32.update(b, off, len);",
    "right" : "crc32.update(b, off, len);",
    "info" : "ExpressionStatement[9081-9107]:ExpressionStatement[9081-9107]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[9144-9151]:Modifier[9144-9151]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9152-9156]:PrimitiveType[9152-9156]"
  }, {
    "left" : "writeHeader",
    "right" : "writeHeader",
    "info" : "SimpleName[9157-9168]:SimpleName[9157-9168]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[9169-9192]:SingleVariableDeclaration[9169-9192]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[9201-9212]:SimpleType[9201-9212]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9213-9406]:Block[9213-9406]"
  }, {
    "left" : "header.write(NID.kHeader);",
    "right" : "header.write(NID.kHeader);",
    "info" : "ExpressionStatement[9223-9249]:ExpressionStatement[9223-9249]"
  }, {
    "left" : "header.write(NID.kMainStreamsInfo);",
    "right" : "header.write(NID.kMainStreamsInfo);",
    "info" : "ExpressionStatement[9267-9302]:ExpressionStatement[9267-9302]"
  }, {
    "left" : "writeStreamsInfo(header);",
    "right" : "writeStreamsInfo(header);",
    "info" : "ExpressionStatement[9311-9336]:ExpressionStatement[9311-9336]"
  }, {
    "left" : "writeFilesInfo(header);",
    "right" : "writeFilesInfo(header);",
    "info" : "ExpressionStatement[9345-9368]:ExpressionStatement[9345-9368]"
  }, {
    "left" : "header.write(NID.kEnd);",
    "right" : "header.write(NID.kEnd);",
    "info" : "ExpressionStatement[9377-9400]:ExpressionStatement[9377-9400]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[9416-9423]:Modifier[9416-9423]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9424-9428]:PrimitiveType[9424-9428]"
  }, {
    "left" : "writeStreamsInfo",
    "right" : "writeStreamsInfo",
    "info" : "SimpleName[9429-9445]:SimpleName[9429-9445]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[9446-9469]:SingleVariableDeclaration[9446-9469]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[9478-9489]:SimpleType[9478-9489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9490-9704]:Block[9490-9704]"
  }, {
    "left" : "if (numNonEmptyStreams > 0)",
    "right" : "if (numNonEmptyStreams > 0)",
    "info" : "IfStatement[9500-9611]:IfStatement[9500-9611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9528-9611]:Block[9528-9611]"
  }, {
    "left" : "writePackInfo(header);",
    "right" : "writePackInfo(header);",
    "info" : "ExpressionStatement[9542-9564]:ExpressionStatement[9542-9564]"
  }, {
    "left" : "writeUnpackInfo(header);",
    "right" : "writeUnpackInfo(header);",
    "info" : "ExpressionStatement[9577-9601]:ExpressionStatement[9577-9601]"
  }, {
    "left" : "writeSubStreamsInfo(header);",
    "right" : "writeSubStreamsInfo(header);",
    "info" : "ExpressionStatement[9629-9657]:ExpressionStatement[9629-9657]"
  }, {
    "left" : "header.write(NID.kEnd);",
    "right" : "header.write(NID.kEnd);",
    "info" : "ExpressionStatement[9675-9698]:ExpressionStatement[9675-9698]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[9714-9721]:Modifier[9714-9721]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9722-9726]:PrimitiveType[9722-9726]"
  }, {
    "left" : "writePackInfo",
    "right" : "writePackInfo",
    "info" : "SimpleName[9727-9740]:SimpleName[9727-9740]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[9741-9764]:SingleVariableDeclaration[9741-9764]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[9773-9784]:SimpleType[9773-9784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9785-10470]:Block[9785-10470]"
  }, {
    "left" : "header.write(NID.kPackInfo);",
    "right" : "header.write(NID.kPackInfo);",
    "info" : "ExpressionStatement[9795-9823]:ExpressionStatement[9795-9823]"
  }, {
    "left" : "writeUint64(header, 0);",
    "right" : "writeUint64(header, 0);",
    "info" : "ExpressionStatement[9841-9864]:ExpressionStatement[9841-9864]"
  }, {
    "left" : "writeUint64(header, 0xffffFFFFL & numNonEmptyStreams);",
    "right" : "writeUint64(header, 0xffffFFFFL & numNonEmptyStreams);",
    "info" : "ExpressionStatement[9873-9927]:ExpressionStatement[9873-9927]"
  }, {
    "left" : "header.write(NID.kSize);",
    "right" : "header.write(NID.kSize);",
    "info" : "ExpressionStatement[9945-9969]:ExpressionStatement[9945-9969]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[9978-10149]:EnhancedForStatement[9978-10149]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10023-10149]:Block[10023-10149]"
  }, {
    "left" : "if (entry.hasStream())",
    "right" : "if (entry.hasStream())",
    "info" : "IfStatement[10037-10139]:IfStatement[10037-10139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10060-10139]:Block[10060-10139]"
  }, {
    "left" : "writeUint64(header, entry.getCompressedSize());",
    "right" : "writeUint64(header, entry.getCompressedSize());",
    "info" : "ExpressionStatement[10078-10125]:ExpressionStatement[10078-10125]"
  }, {
    "left" : "header.write(NID.kCRC);",
    "right" : "header.write(NID.kCRC);",
    "info" : "ExpressionStatement[10167-10190]:ExpressionStatement[10167-10190]"
  }, {
    "left" : "header.write(1);",
    "right" : "header.write(1);",
    "info" : "ExpressionStatement[10199-10215]:ExpressionStatement[10199-10215]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[10224-10423]:EnhancedForStatement[10224-10423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10269-10423]:Block[10269-10423]"
  }, {
    "left" : "if (entry.hasStream())",
    "right" : "if (entry.hasStream())",
    "info" : "IfStatement[10283-10413]:IfStatement[10283-10413]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10306-10413]:Block[10306-10413]"
  }, {
    "left" : "header.writeInt(Integer.reverseBytes((int) entry.getCompressedCrcValue()));",
    "right" : "header.writeInt(Integer.reverseBytes((int) entry.getCompressedCrcValue()));",
    "info" : "ExpressionStatement[10324-10399]:ExpressionStatement[10324-10399]"
  }, {
    "left" : "header.write(NID.kEnd);",
    "right" : "header.write(NID.kEnd);",
    "info" : "ExpressionStatement[10441-10464]:ExpressionStatement[10441-10464]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10480-10487]:Modifier[10480-10487]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10488-10492]:PrimitiveType[10488-10492]"
  }, {
    "left" : "writeUnpackInfo",
    "right" : "writeUnpackInfo",
    "info" : "SimpleName[10493-10508]:SimpleName[10493-10508]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[10509-10532]:SingleVariableDeclaration[10509-10532]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[10541-10552]:SimpleType[10541-10552]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10553-11344]:Block[10553-11344]"
  }, {
    "left" : "header.write(NID.kUnpackInfo);",
    "right" : "header.write(NID.kUnpackInfo);",
    "info" : "ExpressionStatement[10563-10593]:ExpressionStatement[10563-10593]"
  }, {
    "left" : "header.write(NID.kFolder);",
    "right" : "header.write(NID.kFolder);",
    "info" : "ExpressionStatement[10611-10637]:ExpressionStatement[10611-10637]"
  }, {
    "left" : "writeUint64(header, numNonEmptyStreams);",
    "right" : "writeUint64(header, numNonEmptyStreams);",
    "info" : "ExpressionStatement[10646-10686]:ExpressionStatement[10646-10686]"
  }, {
    "left" : "header.write(0);",
    "right" : "header.write(0);",
    "info" : "ExpressionStatement[10695-10711]:ExpressionStatement[10695-10711]"
  }, {
    "left" : "for (int i = 0; i < numNonEmptyStreams; i++)",
    "right" : "for (int i = 0; i < numNonEmptyStreams; i++)",
    "info" : "ForStatement[10720-10809]:ForStatement[10720-10809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10765-10809]:Block[10765-10809]"
  }, {
    "left" : "writeFolder(header);",
    "right" : "writeFolder(header);",
    "info" : "ExpressionStatement[10779-10799]:ExpressionStatement[10779-10799]"
  }, {
    "left" : "header.write(NID.kCodersUnpackSize);",
    "right" : "header.write(NID.kCodersUnpackSize);",
    "info" : "ExpressionStatement[10827-10863]:ExpressionStatement[10827-10863]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[10872-11033]:EnhancedForStatement[10872-11033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10917-11033]:Block[10917-11033]"
  }, {
    "left" : "if (entry.hasStream())",
    "right" : "if (entry.hasStream())",
    "info" : "IfStatement[10931-11023]:IfStatement[10931-11023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10954-11023]:Block[10954-11023]"
  }, {
    "left" : "writeUint64(header, entry.getSize());",
    "right" : "writeUint64(header, entry.getSize());",
    "info" : "ExpressionStatement[10972-11009]:ExpressionStatement[10972-11009]"
  }, {
    "left" : "header.write(NID.kCRC);",
    "right" : "header.write(NID.kCRC);",
    "info" : "ExpressionStatement[11051-11074]:ExpressionStatement[11051-11074]"
  }, {
    "left" : "header.write(1);",
    "right" : "header.write(1);",
    "info" : "ExpressionStatement[11083-11099]:ExpressionStatement[11083-11099]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[11108-11297]:EnhancedForStatement[11108-11297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11153-11297]:Block[11153-11297]"
  }, {
    "left" : "if (entry.hasStream())",
    "right" : "if (entry.hasStream())",
    "info" : "IfStatement[11167-11287]:IfStatement[11167-11287]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11190-11287]:Block[11190-11287]"
  }, {
    "left" : "header.writeInt(Integer.reverseBytes((int) entry.getCrcValue()));",
    "right" : "header.writeInt(Integer.reverseBytes((int) entry.getCrcValue()));",
    "info" : "ExpressionStatement[11208-11273]:ExpressionStatement[11208-11273]"
  }, {
    "left" : "header.write(NID.kEnd);",
    "right" : "header.write(NID.kEnd);",
    "info" : "ExpressionStatement[11315-11338]:ExpressionStatement[11315-11338]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11354-11361]:Modifier[11354-11361]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11362-11366]:PrimitiveType[11362-11366]"
  }, {
    "left" : "writeFolder",
    "right" : "writeFolder",
    "info" : "SimpleName[11367-11378]:SimpleName[11367-11378]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[11379-11402]:SingleVariableDeclaration[11379-11402]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[11411-11422]:SimpleType[11411-11422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11423-11902]:Block[11423-11902]"
  }, {
    "left" : "writeUint64(header, 1);",
    "right" : "writeUint64(header, 1);",
    "info" : "ExpressionStatement[11454-11477]:ExpressionStatement[11454-11477]"
  }, {
    "left" : "byte[] id = contentCompression.getId();",
    "right" : "byte[] id = contentCompression.getId();",
    "info" : "VariableDeclarationStatement[11486-11525]:VariableDeclarationStatement[11486-11525]"
  }, {
    "left" : "byte[] properties = contentCompression.getProperties();",
    "right" : "byte[] properties = contentCompression.getProperties();",
    "info" : "VariableDeclarationStatement[11534-11589]:VariableDeclarationStatement[11534-11589]"
  }, {
    "left" : "int codecFlags = id.length;",
    "right" : "int codecFlags = id.length;",
    "info" : "VariableDeclarationStatement[11599-11626]:VariableDeclarationStatement[11599-11626]"
  }, {
    "left" : "if (properties.length > 0)",
    "right" : "if (properties.length > 0)",
    "info" : "IfStatement[11635-11705]:IfStatement[11635-11705]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11662-11705]:Block[11662-11705]"
  }, {
    "left" : "codecFlags |= 0x20;",
    "right" : "codecFlags |= 0x20;",
    "info" : "ExpressionStatement[11676-11695]:ExpressionStatement[11676-11695]"
  }, {
    "left" : "header.write(codecFlags);",
    "right" : "header.write(codecFlags);",
    "info" : "ExpressionStatement[11714-11739]:ExpressionStatement[11714-11739]"
  }, {
    "left" : "header.write(id);",
    "right" : "header.write(id);",
    "info" : "ExpressionStatement[11748-11765]:ExpressionStatement[11748-11765]"
  }, {
    "left" : "if (properties.length > 0)",
    "right" : "if (properties.length > 0)",
    "info" : "IfStatement[11775-11896]:IfStatement[11775-11896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11802-11896]:Block[11802-11896]"
  }, {
    "left" : "header.write(properties.length);",
    "right" : "header.write(properties.length);",
    "info" : "ExpressionStatement[11816-11848]:ExpressionStatement[11816-11848]"
  }, {
    "left" : "header.write(properties);",
    "right" : "header.write(properties);",
    "info" : "ExpressionStatement[11861-11886]:ExpressionStatement[11861-11886]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11912-11919]:Modifier[11912-11919]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11920-11924]:PrimitiveType[11920-11924]"
  }, {
    "left" : "writeSubStreamsInfo",
    "right" : "writeSubStreamsInfo",
    "info" : "SimpleName[11925-11944]:SimpleName[11925-11944]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[11945-11968]:SingleVariableDeclaration[11945-11968]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[11977-11988]:SimpleType[11977-11988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11989-12351]:Block[11989-12351]"
  }, {
    "left" : "header.write(NID.kSubStreamsInfo);",
    "right" : "header.write(NID.kSubStreamsInfo);",
    "info" : "ExpressionStatement[11999-12033]:ExpressionStatement[11999-12033]"
  }, {
    "left" : "header.write(NID.kEnd);",
    "right" : "header.write(NID.kEnd);",
    "info" : "ExpressionStatement[12322-12345]:ExpressionStatement[12322-12345]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12361-12368]:Modifier[12361-12368]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12369-12373]:PrimitiveType[12369-12373]"
  }, {
    "left" : "writeFilesInfo",
    "right" : "writeFilesInfo",
    "info" : "SimpleName[12374-12388]:SimpleName[12374-12388]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[12389-12412]:SingleVariableDeclaration[12389-12412]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[12421-12432]:SimpleType[12421-12432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12433-12843]:Block[12433-12843]"
  }, {
    "left" : "header.write(NID.kFilesInfo);",
    "right" : "header.write(NID.kFilesInfo);",
    "info" : "ExpressionStatement[12443-12472]:ExpressionStatement[12443-12472]"
  }, {
    "left" : "writeUint64(header, files.size());",
    "right" : "writeUint64(header, files.size());",
    "info" : "ExpressionStatement[12490-12524]:ExpressionStatement[12490-12524]"
  }, {
    "left" : "writeFileEmptyStreams(header);",
    "right" : "writeFileEmptyStreams(header);",
    "info" : "ExpressionStatement[12534-12564]:ExpressionStatement[12534-12564]"
  }, {
    "left" : "writeFileEmptyFiles(header);",
    "right" : "writeFileEmptyFiles(header);",
    "info" : "ExpressionStatement[12573-12601]:ExpressionStatement[12573-12601]"
  }, {
    "left" : "writeFileAntiItems(header);",
    "right" : "writeFileAntiItems(header);",
    "info" : "ExpressionStatement[12610-12637]:ExpressionStatement[12610-12637]"
  }, {
    "left" : "writeFileNames(header);",
    "right" : "writeFileNames(header);",
    "info" : "ExpressionStatement[12646-12669]:ExpressionStatement[12646-12669]"
  }, {
    "left" : "writeFileCTimes(header);",
    "right" : "writeFileCTimes(header);",
    "info" : "ExpressionStatement[12678-12702]:ExpressionStatement[12678-12702]"
  }, {
    "left" : "writeFileATimes(header);",
    "right" : "writeFileATimes(header);",
    "info" : "ExpressionStatement[12711-12735]:ExpressionStatement[12711-12735]"
  }, {
    "left" : "writeFileMTimes(header);",
    "right" : "writeFileMTimes(header);",
    "info" : "ExpressionStatement[12744-12768]:ExpressionStatement[12744-12768]"
  }, {
    "left" : "writeFileWindowsAttributes(header);",
    "right" : "writeFileWindowsAttributes(header);",
    "info" : "ExpressionStatement[12777-12812]:ExpressionStatement[12777-12812]"
  }, {
    "left" : "header.write(0);",
    "right" : "header.write(0);",
    "info" : "ExpressionStatement[12821-12837]:ExpressionStatement[12821-12837]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12853-12860]:Modifier[12853-12860]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12861-12865]:PrimitiveType[12861-12865]"
  }, {
    "left" : "writeFileEmptyStreams",
    "right" : "writeFileEmptyStreams",
    "info" : "SimpleName[12866-12887]:SimpleName[12866-12887]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[12888-12911]:SingleVariableDeclaration[12888-12911]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[12920-12931]:SimpleType[12920-12931]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12932-13810]:Block[12932-13810]"
  }, {
    "left" : "boolean hasEmptyStreams = false;",
    "right" : "boolean hasEmptyStreams = false;",
    "info" : "VariableDeclarationStatement[12942-12974]:VariableDeclarationStatement[12942-12974]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[12983-13154]:EnhancedForStatement[12983-13154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13028-13154]:Block[13028-13154]"
  }, {
    "left" : "if (!entry.hasStream())",
    "right" : "if (!entry.hasStream())",
    "info" : "IfStatement[13042-13144]:IfStatement[13042-13144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13066-13144]:Block[13066-13144]"
  }, {
    "left" : "hasEmptyStreams = true;",
    "right" : "hasEmptyStreams = true;",
    "info" : "ExpressionStatement[13084-13107]:ExpressionStatement[13084-13107]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[13124-13130]:BreakStatement[13124-13130]"
  }, {
    "left" : "if (hasEmptyStreams)",
    "right" : "if (hasEmptyStreams)",
    "info" : "IfStatement[13163-13804]:IfStatement[13163-13804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13184-13804]:Block[13184-13804]"
  }, {
    "left" : "header.write(NID.kEmptyStream);",
    "right" : "header.write(NID.kEmptyStream);",
    "info" : "ExpressionStatement[13198-13229]:ExpressionStatement[13198-13229]"
  }, {
    "left" : "final BitSet emptyStreams = new BitSet(files.size());",
    "right" : "final BitSet emptyStreams = new BitSet(files.size());",
    "info" : "VariableDeclarationStatement[13242-13295]:VariableDeclarationStatement[13242-13295]"
  }, {
    "left" : "for (int i = 0; i < files.size(); i++)",
    "right" : "for (int i = 0; i < files.size(); i++)",
    "info" : "ForStatement[13308-13426]:ForStatement[13308-13426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13347-13426]:Block[13347-13426]"
  }, {
    "left" : "emptyStreams.set(i, !files.get(i).hasStream());",
    "right" : "emptyStreams.set(i, !files.get(i).hasStream());",
    "info" : "ExpressionStatement[13365-13412]:ExpressionStatement[13365-13412]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[13439-13502]:VariableDeclarationStatement[13439-13502]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[13515-13571]:VariableDeclarationStatement[13515-13571]"
  }, {
    "left" : "writeBits(out, emptyStreams, files.size());",
    "right" : "writeBits(out, emptyStreams, files.size());",
    "info" : "ExpressionStatement[13584-13627]:ExpressionStatement[13584-13627]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[13640-13652]:ExpressionStatement[13640-13652]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[13665-13708]:VariableDeclarationStatement[13665-13708]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[13721-13758]:ExpressionStatement[13721-13758]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[13771-13794]:ExpressionStatement[13771-13794]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13820-13827]:Modifier[13820-13827]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13828-13832]:PrimitiveType[13828-13832]"
  }, {
    "left" : "writeFileEmptyFiles",
    "right" : "writeFileEmptyFiles",
    "info" : "SimpleName[13833-13852]:SimpleName[13833-13852]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[13853-13876]:SingleVariableDeclaration[13853-13876]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[13885-13896]:SimpleType[13885-13896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13897-14762]:Block[13897-14762]"
  }, {
    "left" : "boolean hasEmptyFiles = false;",
    "right" : "boolean hasEmptyFiles = false;",
    "info" : "VariableDeclarationStatement[13907-13937]:VariableDeclarationStatement[13907-13937]"
  }, {
    "left" : "int emptyStreamCounter = 0;",
    "right" : "int emptyStreamCounter = 0;",
    "info" : "VariableDeclarationStatement[13946-13973]:VariableDeclarationStatement[13946-13973]"
  }, {
    "left" : "final BitSet emptyFiles = new BitSet(0);",
    "right" : "final BitSet emptyFiles = new BitSet(0);",
    "info" : "VariableDeclarationStatement[13982-14022]:VariableDeclarationStatement[13982-14022]"
  }, {
    "left" : "for (int i = 0; i < files.size(); i++)",
    "right" : "for (int i = 0; i < files.size(); i++)",
    "info" : "ForStatement[14031-14303]:ForStatement[14031-14303]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14070-14303]:Block[14070-14303]"
  }, {
    "left" : "if (!files.get(i).hasStream())",
    "right" : "if (!files.get(i).hasStream())",
    "info" : "IfStatement[14084-14293]:IfStatement[14084-14293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14115-14293]:Block[14115-14293]"
  }, {
    "left" : "boolean isDir = files.get(i).isDirectory();",
    "right" : "boolean isDir = files.get(i).isDirectory();",
    "info" : "VariableDeclarationStatement[14133-14176]:VariableDeclarationStatement[14133-14176]"
  }, {
    "left" : "emptyFiles.set(emptyStreamCounter++, !isDir);",
    "right" : "emptyFiles.set(emptyStreamCounter++, !isDir);",
    "info" : "ExpressionStatement[14193-14238]:ExpressionStatement[14193-14238]"
  }, {
    "left" : "hasEmptyFiles |= !isDir;",
    "right" : "hasEmptyFiles |= !isDir;",
    "info" : "ExpressionStatement[14255-14279]:ExpressionStatement[14255-14279]"
  }, {
    "left" : "if (hasEmptyFiles)",
    "right" : "if (hasEmptyFiles)",
    "info" : "IfStatement[14312-14756]:IfStatement[14312-14756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14331-14756]:Block[14331-14756]"
  }, {
    "left" : "header.write(NID.kEmptyFile);",
    "right" : "header.write(NID.kEmptyFile);",
    "info" : "ExpressionStatement[14345-14374]:ExpressionStatement[14345-14374]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[14387-14450]:VariableDeclarationStatement[14387-14450]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[14463-14519]:VariableDeclarationStatement[14463-14519]"
  }, {
    "left" : "writeBits(out, emptyFiles, emptyStreamCounter);",
    "right" : "writeBits(out, emptyFiles, emptyStreamCounter);",
    "info" : "ExpressionStatement[14532-14579]:ExpressionStatement[14532-14579]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[14592-14604]:ExpressionStatement[14592-14604]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[14617-14660]:VariableDeclarationStatement[14617-14660]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[14673-14710]:ExpressionStatement[14673-14710]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[14723-14746]:ExpressionStatement[14723-14746]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14772-14779]:Modifier[14772-14779]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14780-14784]:PrimitiveType[14780-14784]"
  }, {
    "left" : "writeFileAntiItems",
    "right" : "writeFileAntiItems",
    "info" : "SimpleName[14785-14803]:SimpleName[14785-14803]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[14804-14827]:SingleVariableDeclaration[14804-14827]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[14836-14847]:SimpleType[14836-14847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14848-15693]:Block[14848-15693]"
  }, {
    "left" : "boolean hasAntiItems = false;",
    "right" : "boolean hasAntiItems = false;",
    "info" : "VariableDeclarationStatement[14858-14887]:VariableDeclarationStatement[14858-14887]"
  }, {
    "left" : "final BitSet antiItems = new BitSet(0);",
    "right" : "final BitSet antiItems = new BitSet(0);",
    "info" : "VariableDeclarationStatement[14896-14935]:VariableDeclarationStatement[14896-14935]"
  }, {
    "left" : "int antiItemCounter = 0;",
    "right" : "int antiItemCounter = 0;",
    "info" : "VariableDeclarationStatement[14944-14968]:VariableDeclarationStatement[14944-14968]"
  }, {
    "left" : "for (int i = 0; i < files.size(); i++)",
    "right" : "for (int i = 0; i < files.size(); i++)",
    "info" : "ForStatement[14977-15244]:ForStatement[14977-15244]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15016-15244]:Block[15016-15244]"
  }, {
    "left" : "if (!files.get(i).hasStream())",
    "right" : "if (!files.get(i).hasStream())",
    "info" : "IfStatement[15030-15234]:IfStatement[15030-15234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15061-15234]:Block[15061-15234]"
  }, {
    "left" : "boolean isAnti = files.get(i).isAntiItem();",
    "right" : "boolean isAnti = files.get(i).isAntiItem();",
    "info" : "VariableDeclarationStatement[15079-15122]:VariableDeclarationStatement[15079-15122]"
  }, {
    "left" : "antiItems.set(antiItemCounter++, isAnti);",
    "right" : "antiItems.set(antiItemCounter++, isAnti);",
    "info" : "ExpressionStatement[15139-15180]:ExpressionStatement[15139-15180]"
  }, {
    "left" : "hasAntiItems |= isAnti;",
    "right" : "hasAntiItems |= isAnti;",
    "info" : "ExpressionStatement[15197-15220]:ExpressionStatement[15197-15220]"
  }, {
    "left" : "if (hasAntiItems)",
    "right" : "if (hasAntiItems)",
    "info" : "IfStatement[15253-15687]:IfStatement[15253-15687]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15271-15687]:Block[15271-15687]"
  }, {
    "left" : "header.write(NID.kAnti);",
    "right" : "header.write(NID.kAnti);",
    "info" : "ExpressionStatement[15285-15309]:ExpressionStatement[15285-15309]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[15322-15385]:VariableDeclarationStatement[15322-15385]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[15398-15454]:VariableDeclarationStatement[15398-15454]"
  }, {
    "left" : "writeBits(out, antiItems, antiItemCounter);",
    "right" : "writeBits(out, antiItems, antiItemCounter);",
    "info" : "ExpressionStatement[15467-15510]:ExpressionStatement[15467-15510]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[15523-15535]:ExpressionStatement[15523-15535]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[15548-15591]:VariableDeclarationStatement[15548-15591]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[15604-15641]:ExpressionStatement[15604-15641]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[15654-15677]:ExpressionStatement[15654-15677]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15703-15710]:Modifier[15703-15710]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15711-15715]:PrimitiveType[15711-15715]"
  }, {
    "left" : "writeFileNames",
    "right" : "writeFileNames",
    "info" : "SimpleName[15716-15730]:SimpleName[15716-15730]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[15731-15754]:SingleVariableDeclaration[15731-15754]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[15763-15774]:SimpleType[15763-15774]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15775-16291]:Block[15775-16291]"
  }, {
    "left" : "header.write(NID.kName);",
    "right" : "header.write(NID.kName);",
    "info" : "ExpressionStatement[15785-15809]:ExpressionStatement[15785-15809]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[15827-15890]:VariableDeclarationStatement[15827-15890]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[15899-15955]:VariableDeclarationStatement[15899-15955]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[15964-15977]:ExpressionStatement[15964-15977]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[15986-16134]:EnhancedForStatement[15986-16134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16031-16134]:Block[16031-16134]"
  }, {
    "left" : "out.write(entry.getName().getBytes(\"UTF-16LE\"));",
    "right" : "out.write(entry.getName().getBytes(\"UTF-16LE\"));",
    "info" : "ExpressionStatement[16045-16093]:ExpressionStatement[16045-16093]"
  }, {
    "left" : "out.writeShort(0);",
    "right" : "out.writeShort(0);",
    "info" : "ExpressionStatement[16106-16124]:ExpressionStatement[16106-16124]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[16143-16155]:ExpressionStatement[16143-16155]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[16164-16207]:VariableDeclarationStatement[16164-16207]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[16216-16253]:ExpressionStatement[16216-16253]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[16262-16285]:ExpressionStatement[16262-16285]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16297-16304]:Modifier[16297-16304]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16305-16309]:PrimitiveType[16305-16309]"
  }, {
    "left" : "writeFileCTimes",
    "right" : "writeFileCTimes",
    "info" : "SimpleName[16310-16325]:SimpleName[16310-16325]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[16326-16349]:SingleVariableDeclaration[16326-16349]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[16358-16369]:SimpleType[16358-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16370-17693]:Block[16370-17693]"
  }, {
    "left" : "int numCreationDates = 0;",
    "right" : "int numCreationDates = 0;",
    "info" : "VariableDeclarationStatement[16380-16405]:VariableDeclarationStatement[16380-16405]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[16414-16566]:EnhancedForStatement[16414-16566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16459-16566]:Block[16459-16566]"
  }, {
    "left" : "if (entry.getHasCreationDate())",
    "right" : "if (entry.getHasCreationDate())",
    "info" : "IfStatement[16473-16556]:IfStatement[16473-16556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16505-16556]:Block[16505-16556]"
  }, {
    "left" : "++numCreationDates;",
    "right" : "++numCreationDates;",
    "info" : "ExpressionStatement[16523-16542]:ExpressionStatement[16523-16542]"
  }, {
    "left" : "if (numCreationDates > 0)",
    "right" : "if (numCreationDates > 0)",
    "info" : "IfStatement[16575-17687]:IfStatement[16575-17687]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16601-17687]:Block[16601-17687]"
  }, {
    "left" : "header.write(NID.kCTime);",
    "right" : "header.write(NID.kCTime);",
    "info" : "ExpressionStatement[16615-16640]:ExpressionStatement[16615-16640]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[16654-16717]:VariableDeclarationStatement[16654-16717]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[16730-16786]:VariableDeclarationStatement[16730-16786]"
  }, {
    "left" : "if (numCreationDates != files.size())",
    "right" : "if (numCreationDates != files.size())",
    "info" : "IfStatement[16799-17196]:IfStatement[16799-17196]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16837-17145]:Block[16837-17145]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[16855-16868]:ExpressionStatement[16855-16868]"
  }, {
    "left" : "final BitSet cTimes = new BitSet(files.size());",
    "right" : "final BitSet cTimes = new BitSet(files.size());",
    "info" : "VariableDeclarationStatement[16885-16932]:VariableDeclarationStatement[16885-16932]"
  }, {
    "left" : "for (int i = 0; i < files.size(); i++)",
    "right" : "for (int i = 0; i < files.size(); i++)",
    "info" : "ForStatement[16949-17077]:ForStatement[16949-17077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16988-17077]:Block[16988-17077]"
  }, {
    "left" : "cTimes.set(i, files.get(i).getHasCreationDate());",
    "right" : "cTimes.set(i, files.get(i).getHasCreationDate());",
    "info" : "ExpressionStatement[17010-17059]:ExpressionStatement[17010-17059]"
  }, {
    "left" : "writeBits(out, cTimes, files.size());",
    "right" : "writeBits(out, cTimes, files.size());",
    "info" : "ExpressionStatement[17094-17131]:ExpressionStatement[17094-17131]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17151-17196]:Block[17151-17196]"
  }, {
    "left" : "out.write(1);",
    "right" : "out.write(1);",
    "info" : "ExpressionStatement[17169-17182]:ExpressionStatement[17169-17182]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[17209-17222]:ExpressionStatement[17209-17222]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[17235-17510]:EnhancedForStatement[17235-17510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17280-17510]:Block[17280-17510]"
  }, {
    "left" : "if (entry.getHasCreationDate())",
    "right" : "if (entry.getHasCreationDate())",
    "info" : "IfStatement[17298-17496]:IfStatement[17298-17496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17330-17496]:Block[17330-17496]"
  }, {
    "left" : "out.writeLong(Long.reverseBytes(\n                            SevenZArchiveEntry.javaTimeToNtfsTime(entry.getCreationDate())));",
    "right" : "out.writeLong(Long.reverseBytes(\n                            SevenZArchiveEntry.javaTimeToNtfsTime(entry.getCreationDate())));",
    "info" : "ExpressionStatement[17352-17478]:ExpressionStatement[17352-17478]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[17523-17535]:ExpressionStatement[17523-17535]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[17548-17591]:VariableDeclarationStatement[17548-17591]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[17604-17641]:ExpressionStatement[17604-17641]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[17654-17677]:ExpressionStatement[17654-17677]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[17699-17706]:Modifier[17699-17706]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17707-17711]:PrimitiveType[17707-17711]"
  }, {
    "left" : "writeFileATimes",
    "right" : "writeFileATimes",
    "info" : "SimpleName[17712-17727]:SimpleName[17712-17727]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[17728-17751]:SingleVariableDeclaration[17728-17751]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[17760-17771]:SimpleType[17760-17771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17772-19079]:Block[17772-19079]"
  }, {
    "left" : "int numAccessDates = 0;",
    "right" : "int numAccessDates = 0;",
    "info" : "VariableDeclarationStatement[17782-17805]:VariableDeclarationStatement[17782-17805]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[17814-17962]:EnhancedForStatement[17814-17962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17859-17962]:Block[17859-17962]"
  }, {
    "left" : "if (entry.getHasAccessDate())",
    "right" : "if (entry.getHasAccessDate())",
    "info" : "IfStatement[17873-17952]:IfStatement[17873-17952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17903-17952]:Block[17903-17952]"
  }, {
    "left" : "++numAccessDates;",
    "right" : "++numAccessDates;",
    "info" : "ExpressionStatement[17921-17938]:ExpressionStatement[17921-17938]"
  }, {
    "left" : "if (numAccessDates > 0)",
    "right" : "if (numAccessDates > 0)",
    "info" : "IfStatement[17971-19073]:IfStatement[17971-19073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17995-19073]:Block[17995-19073]"
  }, {
    "left" : "header.write(NID.kATime);",
    "right" : "header.write(NID.kATime);",
    "info" : "ExpressionStatement[18009-18034]:ExpressionStatement[18009-18034]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[18048-18111]:VariableDeclarationStatement[18048-18111]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[18124-18180]:VariableDeclarationStatement[18124-18180]"
  }, {
    "left" : "if (numAccessDates != files.size())",
    "right" : "if (numAccessDates != files.size())",
    "info" : "IfStatement[18193-18586]:IfStatement[18193-18586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18229-18535]:Block[18229-18535]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[18247-18260]:ExpressionStatement[18247-18260]"
  }, {
    "left" : "final BitSet aTimes = new BitSet(files.size());",
    "right" : "final BitSet aTimes = new BitSet(files.size());",
    "info" : "VariableDeclarationStatement[18277-18324]:VariableDeclarationStatement[18277-18324]"
  }, {
    "left" : "for (int i = 0; i < files.size(); i++)",
    "right" : "for (int i = 0; i < files.size(); i++)",
    "info" : "ForStatement[18341-18467]:ForStatement[18341-18467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18380-18467]:Block[18380-18467]"
  }, {
    "left" : "aTimes.set(i, files.get(i).getHasAccessDate());",
    "right" : "aTimes.set(i, files.get(i).getHasAccessDate());",
    "info" : "ExpressionStatement[18402-18449]:ExpressionStatement[18402-18449]"
  }, {
    "left" : "writeBits(out, aTimes, files.size());",
    "right" : "writeBits(out, aTimes, files.size());",
    "info" : "ExpressionStatement[18484-18521]:ExpressionStatement[18484-18521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18541-18586]:Block[18541-18586]"
  }, {
    "left" : "out.write(1);",
    "right" : "out.write(1);",
    "info" : "ExpressionStatement[18559-18572]:ExpressionStatement[18559-18572]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[18599-18612]:ExpressionStatement[18599-18612]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[18625-18896]:EnhancedForStatement[18625-18896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18670-18896]:Block[18670-18896]"
  }, {
    "left" : "if (entry.getHasAccessDate())",
    "right" : "if (entry.getHasAccessDate())",
    "info" : "IfStatement[18688-18882]:IfStatement[18688-18882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18718-18882]:Block[18718-18882]"
  }, {
    "left" : "out.writeLong(Long.reverseBytes(\n                            SevenZArchiveEntry.javaTimeToNtfsTime(entry.getAccessDate())));",
    "right" : "out.writeLong(Long.reverseBytes(\n                            SevenZArchiveEntry.javaTimeToNtfsTime(entry.getAccessDate())));",
    "info" : "ExpressionStatement[18740-18864]:ExpressionStatement[18740-18864]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[18909-18921]:ExpressionStatement[18909-18921]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[18934-18977]:VariableDeclarationStatement[18934-18977]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[18990-19027]:ExpressionStatement[18990-19027]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[19040-19063]:ExpressionStatement[19040-19063]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19085-19092]:Modifier[19085-19092]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19093-19097]:PrimitiveType[19093-19097]"
  }, {
    "left" : "writeFileMTimes",
    "right" : "writeFileMTimes",
    "info" : "SimpleName[19098-19113]:SimpleName[19098-19113]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[19114-19137]:SingleVariableDeclaration[19114-19137]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[19146-19157]:SimpleType[19146-19157]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19158-20513]:Block[19158-20513]"
  }, {
    "left" : "int numLastModifiedDates = 0;",
    "right" : "int numLastModifiedDates = 0;",
    "info" : "VariableDeclarationStatement[19168-19197]:VariableDeclarationStatement[19168-19197]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[19206-19366]:EnhancedForStatement[19206-19366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19251-19366]:Block[19251-19366]"
  }, {
    "left" : "if (entry.getHasLastModifiedDate())",
    "right" : "if (entry.getHasLastModifiedDate())",
    "info" : "IfStatement[19265-19356]:IfStatement[19265-19356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19301-19356]:Block[19301-19356]"
  }, {
    "left" : "++numLastModifiedDates;",
    "right" : "++numLastModifiedDates;",
    "info" : "ExpressionStatement[19319-19342]:ExpressionStatement[19319-19342]"
  }, {
    "left" : "if (numLastModifiedDates > 0)",
    "right" : "if (numLastModifiedDates > 0)",
    "info" : "IfStatement[19375-20507]:IfStatement[19375-20507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19405-20507]:Block[19405-20507]"
  }, {
    "left" : "header.write(NID.kMTime);",
    "right" : "header.write(NID.kMTime);",
    "info" : "ExpressionStatement[19419-19444]:ExpressionStatement[19419-19444]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[19458-19521]:VariableDeclarationStatement[19458-19521]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[19534-19590]:VariableDeclarationStatement[19534-19590]"
  }, {
    "left" : "if (numLastModifiedDates != files.size())",
    "right" : "if (numLastModifiedDates != files.size())",
    "info" : "IfStatement[19603-20008]:IfStatement[19603-20008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19645-19957]:Block[19645-19957]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[19663-19676]:ExpressionStatement[19663-19676]"
  }, {
    "left" : "final BitSet mTimes = new BitSet(files.size());",
    "right" : "final BitSet mTimes = new BitSet(files.size());",
    "info" : "VariableDeclarationStatement[19693-19740]:VariableDeclarationStatement[19693-19740]"
  }, {
    "left" : "for (int i = 0; i < files.size(); i++)",
    "right" : "for (int i = 0; i < files.size(); i++)",
    "info" : "ForStatement[19757-19889]:ForStatement[19757-19889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19796-19889]:Block[19796-19889]"
  }, {
    "left" : "mTimes.set(i, files.get(i).getHasLastModifiedDate());",
    "right" : "mTimes.set(i, files.get(i).getHasLastModifiedDate());",
    "info" : "ExpressionStatement[19818-19871]:ExpressionStatement[19818-19871]"
  }, {
    "left" : "writeBits(out, mTimes, files.size());",
    "right" : "writeBits(out, mTimes, files.size());",
    "info" : "ExpressionStatement[19906-19943]:ExpressionStatement[19906-19943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19963-20008]:Block[19963-20008]"
  }, {
    "left" : "out.write(1);",
    "right" : "out.write(1);",
    "info" : "ExpressionStatement[19981-19994]:ExpressionStatement[19981-19994]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[20021-20034]:ExpressionStatement[20021-20034]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[20047-20330]:EnhancedForStatement[20047-20330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20092-20330]:Block[20092-20330]"
  }, {
    "left" : "if (entry.getHasLastModifiedDate())",
    "right" : "if (entry.getHasLastModifiedDate())",
    "info" : "IfStatement[20110-20316]:IfStatement[20110-20316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20146-20316]:Block[20146-20316]"
  }, {
    "left" : "out.writeLong(Long.reverseBytes(\n                            SevenZArchiveEntry.javaTimeToNtfsTime(entry.getLastModifiedDate())));",
    "right" : "out.writeLong(Long.reverseBytes(\n                            SevenZArchiveEntry.javaTimeToNtfsTime(entry.getLastModifiedDate())));",
    "info" : "ExpressionStatement[20168-20298]:ExpressionStatement[20168-20298]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[20343-20355]:ExpressionStatement[20343-20355]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[20368-20411]:VariableDeclarationStatement[20368-20411]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[20424-20461]:ExpressionStatement[20424-20461]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[20474-20497]:ExpressionStatement[20474-20497]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20519-20526]:Modifier[20519-20526]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20527-20531]:PrimitiveType[20527-20531]"
  }, {
    "left" : "writeFileWindowsAttributes",
    "right" : "writeFileWindowsAttributes",
    "info" : "SimpleName[20532-20558]:SimpleName[20532-20558]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[20559-20582]:SingleVariableDeclaration[20559-20582]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[20591-20602]:SimpleType[20591-20602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20603-21916]:Block[20603-21916]"
  }, {
    "left" : "int numWindowsAttributes = 0;",
    "right" : "int numWindowsAttributes = 0;",
    "info" : "VariableDeclarationStatement[20613-20642]:VariableDeclarationStatement[20613-20642]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[20651-20812]:EnhancedForStatement[20651-20812]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20696-20812]:Block[20696-20812]"
  }, {
    "left" : "if (entry.getHasWindowsAttributes())",
    "right" : "if (entry.getHasWindowsAttributes())",
    "info" : "IfStatement[20710-20802]:IfStatement[20710-20802]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20747-20802]:Block[20747-20802]"
  }, {
    "left" : "++numWindowsAttributes;",
    "right" : "++numWindowsAttributes;",
    "info" : "ExpressionStatement[20765-20788]:ExpressionStatement[20765-20788]"
  }, {
    "left" : "if (numWindowsAttributes > 0)",
    "right" : "if (numWindowsAttributes > 0)",
    "info" : "IfStatement[20821-21910]:IfStatement[20821-21910]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20851-21910]:Block[20851-21910]"
  }, {
    "left" : "header.write(NID.kWinAttributes);",
    "right" : "header.write(NID.kWinAttributes);",
    "info" : "ExpressionStatement[20865-20898]:ExpressionStatement[20865-20898]"
  }, {
    "left" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[20912-20975]:VariableDeclarationStatement[20912-20975]"
  }, {
    "left" : "final DataOutputStream out = new DataOutputStream(baos);",
    "right" : "final DataOutputStream out = new DataOutputStream(baos);",
    "info" : "VariableDeclarationStatement[20988-21044]:VariableDeclarationStatement[20988-21044]"
  }, {
    "left" : "if (numWindowsAttributes != files.size())",
    "right" : "if (numWindowsAttributes != files.size())",
    "info" : "IfStatement[21057-21475]:IfStatement[21057-21475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21099-21424]:Block[21099-21424]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[21117-21130]:ExpressionStatement[21117-21130]"
  }, {
    "left" : "final BitSet attributes = new BitSet(files.size());",
    "right" : "final BitSet attributes = new BitSet(files.size());",
    "info" : "VariableDeclarationStatement[21147-21198]:VariableDeclarationStatement[21147-21198]"
  }, {
    "left" : "for (int i = 0; i < files.size(); i++)",
    "right" : "for (int i = 0; i < files.size(); i++)",
    "info" : "ForStatement[21215-21352]:ForStatement[21215-21352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21254-21352]:Block[21254-21352]"
  }, {
    "left" : "attributes.set(i, files.get(i).getHasWindowsAttributes());",
    "right" : "attributes.set(i, files.get(i).getHasWindowsAttributes());",
    "info" : "ExpressionStatement[21276-21334]:ExpressionStatement[21276-21334]"
  }, {
    "left" : "writeBits(out, attributes, files.size());",
    "right" : "writeBits(out, attributes, files.size());",
    "info" : "ExpressionStatement[21369-21410]:ExpressionStatement[21369-21410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21430-21475]:Block[21430-21475]"
  }, {
    "left" : "out.write(1);",
    "right" : "out.write(1);",
    "info" : "ExpressionStatement[21448-21461]:ExpressionStatement[21448-21461]"
  }, {
    "left" : "out.write(0);",
    "right" : "out.write(0);",
    "info" : "ExpressionStatement[21488-21501]:ExpressionStatement[21488-21501]"
  }, {
    "left" : "for (final SevenZArchiveEntry entry : files)",
    "right" : "for (final SevenZArchiveEntry entry : files)",
    "info" : "EnhancedForStatement[21514-21733]:EnhancedForStatement[21514-21733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21559-21733]:Block[21559-21733]"
  }, {
    "left" : "if (entry.getHasWindowsAttributes())",
    "right" : "if (entry.getHasWindowsAttributes())",
    "info" : "IfStatement[21577-21719]:IfStatement[21577-21719]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21614-21719]:Block[21614-21719]"
  }, {
    "left" : "out.writeInt(Integer.reverseBytes(entry.getWindowsAttributes()));",
    "right" : "out.writeInt(Integer.reverseBytes(entry.getWindowsAttributes()));",
    "info" : "ExpressionStatement[21636-21701]:ExpressionStatement[21636-21701]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[21746-21758]:ExpressionStatement[21746-21758]"
  }, {
    "left" : "final byte[] contents = baos.toByteArray();",
    "right" : "final byte[] contents = baos.toByteArray();",
    "info" : "VariableDeclarationStatement[21771-21814]:VariableDeclarationStatement[21771-21814]"
  }, {
    "left" : "writeUint64(header, contents.length);",
    "right" : "writeUint64(header, contents.length);",
    "info" : "ExpressionStatement[21827-21864]:ExpressionStatement[21827-21864]"
  }, {
    "left" : "header.write(contents);",
    "right" : "header.write(contents);",
    "info" : "ExpressionStatement[21877-21900]:ExpressionStatement[21877-21900]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21922-21929]:Modifier[21922-21929]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21930-21934]:PrimitiveType[21930-21934]"
  }, {
    "left" : "writeUint64",
    "right" : "writeUint64",
    "info" : "SimpleName[21935-21946]:SimpleName[21935-21946]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[21947-21970]:SingleVariableDeclaration[21947-21970]"
  }, {
    "left" : "long value",
    "right" : "long value",
    "info" : "SingleVariableDeclaration[21972-21982]:SingleVariableDeclaration[21972-21982]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[21991-22002]:SimpleType[21991-22002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22003-22463]:Block[22003-22463]"
  }, {
    "left" : "int firstByte = 0;",
    "right" : "int firstByte = 0;",
    "info" : "VariableDeclarationStatement[22013-22031]:VariableDeclarationStatement[22013-22031]"
  }, {
    "left" : "int mask = 0x80;",
    "right" : "int mask = 0x80;",
    "info" : "VariableDeclarationStatement[22040-22056]:VariableDeclarationStatement[22040-22056]"
  }, {
    "left" : "int i;",
    "right" : "int i;",
    "info" : "VariableDeclarationStatement[22065-22071]:VariableDeclarationStatement[22065-22071]"
  }, {
    "left" : "for (i = 0; i < 8; i++)",
    "right" : "for (i = 0; i < 8; i++)",
    "info" : "ForStatement[22080-22311]:ForStatement[22080-22311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22104-22311]:Block[22104-22311]"
  }, {
    "left" : "if (value < ((1L << ( 7  * (i + 1)))))",
    "right" : "if (value < ((1L << ( 7  * (i + 1)))))",
    "info" : "IfStatement[22118-22245]:IfStatement[22118-22245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22157-22245]:Block[22157-22245]"
  }, {
    "left" : "firstByte |= (value >>> (8 * i));",
    "right" : "firstByte |= (value >>> (8 * i));",
    "info" : "ExpressionStatement[22175-22208]:ExpressionStatement[22175-22208]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22225-22231]:BreakStatement[22225-22231]"
  }, {
    "left" : "firstByte |= mask;",
    "right" : "firstByte |= mask;",
    "info" : "ExpressionStatement[22258-22276]:ExpressionStatement[22258-22276]"
  }, {
    "left" : "mask >>>= 1;",
    "right" : "mask >>>= 1;",
    "info" : "ExpressionStatement[22289-22301]:ExpressionStatement[22289-22301]"
  }, {
    "left" : "header.write(firstByte);",
    "right" : "header.write(firstByte);",
    "info" : "ExpressionStatement[22320-22344]:ExpressionStatement[22320-22344]"
  }, {
    "left" : "for (; i > 0; i--)",
    "right" : "for (; i > 0; i--)",
    "info" : "ForStatement[22353-22457]:ForStatement[22353-22457]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22372-22457]:Block[22372-22457]"
  }, {
    "left" : "header.write((int) (0xff & value));",
    "right" : "header.write((int) (0xff & value));",
    "info" : "ExpressionStatement[22386-22421]:ExpressionStatement[22386-22421]"
  }, {
    "left" : "value >>>= 8;",
    "right" : "value >>>= 8;",
    "info" : "ExpressionStatement[22434-22447]:ExpressionStatement[22434-22447]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22469-22476]:Modifier[22469-22476]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22477-22481]:PrimitiveType[22477-22481]"
  }, {
    "left" : "writeBits",
    "right" : "writeBits",
    "info" : "SimpleName[22482-22491]:SimpleName[22482-22491]"
  }, {
    "left" : "final DataOutput header",
    "right" : "final DataOutput header",
    "info" : "SingleVariableDeclaration[22492-22515]:SingleVariableDeclaration[22492-22515]"
  }, {
    "left" : "final BitSet bits",
    "right" : "final BitSet bits",
    "info" : "SingleVariableDeclaration[22517-22534]:SingleVariableDeclaration[22517-22534]"
  }, {
    "left" : "final int length",
    "right" : "final int length",
    "info" : "SingleVariableDeclaration[22536-22552]:SingleVariableDeclaration[22536-22552]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[22561-22572]:SimpleType[22561-22572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22573-22972]:Block[22573-22939]"
  }, {
    "left" : "int cache = 0;",
    "right" : "int cache = 0;",
    "info" : "VariableDeclarationStatement[22583-22597]:VariableDeclarationStatement[22583-22597]"
  }, {
    "left" : "int shift = 7;",
    "right" : "int shift = 7;",
    "info" : "VariableDeclarationStatement[22606-22620]:VariableDeclarationStatement[22606-22620]"
  }, {
    "left" : "for (int i = 0; i < length; i++)",
    "right" : "for (int i = 0; i < length; i++)",
    "info" : "ForStatement[22629-22884]:ForStatement[22629-22864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22662-22884]:Block[22662-22864]"
  }, {
    "left" : "cache |= ((bits.get(i) ? 1 : 0) << shift);",
    "right" : "cache |= ((bits.get(i) ? 1 : 0) << shift);",
    "info" : "ExpressionStatement[22676-22718]:ExpressionStatement[22676-22718]"
  }, {
    "left" : "--shift",
    "right" : "--shift",
    "info" : "PrefixExpression[22731-22738]:PrefixExpression[22735-22742]"
  }, {
    "left" : "if (shift == 0)",
    "right" : "if (--shift < 0)",
    "info" : "IfStatement[22752-22874]:IfStatement[22731-22854]"
  }, {
    "left" : "==",
    "right" : "<",
    "info" : "INFIX_EXPRESSION_OPERATOR[22762-22764]:INFIX_EXPRESSION_OPERATOR[22743-22744]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22768-22874]:Block[22748-22854]"
  }, {
    "left" : "header.write(cache);",
    "right" : "header.write(cache);",
    "info" : "ExpressionStatement[22786-22806]:ExpressionStatement[22766-22786]"
  }, {
    "left" : "shift = 7;",
    "right" : "shift = 7;",
    "info" : "ExpressionStatement[22823-22833]:ExpressionStatement[22803-22813]"
  }, {
    "left" : "cache = 0;",
    "right" : "cache = 0;",
    "info" : "ExpressionStatement[22850-22860]:ExpressionStatement[22830-22840]"
  }, {
    "left" : "if (length > 0 && shift > 0)",
    "right" : "if (shift != 7)",
    "info" : "IfStatement[22893-22966]:IfStatement[22873-22933]"
  }, {
    "left" : "shift > 0",
    "right" : "shift != 7",
    "info" : "InfixExpression[22911-22920]:InfixExpression[22877-22887]"
  }, {
    "left" : ">",
    "right" : "!=",
    "info" : "INFIX_EXPRESSION_OPERATOR[22917-22918]:INFIX_EXPRESSION_OPERATOR[22883-22885]"
  }, {
    "left" : "0",
    "right" : "7",
    "info" : "NumberLiteral[22919-22920]:NumberLiteral[22886-22887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22922-22966]:Block[22889-22933]"
  }, {
    "left" : "header.write(cache);",
    "right" : "header.write(cache);",
    "info" : "ExpressionStatement[22936-22956]:ExpressionStatement[22903-22923]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22978-22985]:Modifier[22945-22952]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[22986-22991]:TYPE_DECLARATION_KIND[22953-22958]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23043-23052]:MarkerAnnotation[23010-23019]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23061-23067]:Modifier[23028-23034]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23068-23072]:PrimitiveType[23035-23039]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[23073-23078]:SimpleName[23040-23045]"
  }, {
    "left" : "final int b",
    "right" : "final int b",
    "info" : "SingleVariableDeclaration[23079-23090]:SingleVariableDeclaration[23046-23057]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[23099-23110]:SimpleType[23066-23077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23111-23220]:Block[23078-23187]"
  }, {
    "left" : "file.write(b);",
    "right" : "file.write(b);",
    "info" : "ExpressionStatement[23125-23139]:ExpressionStatement[23092-23106]"
  }, {
    "left" : "compressedCrc32.update(b);",
    "right" : "compressedCrc32.update(b);",
    "info" : "ExpressionStatement[23152-23178]:ExpressionStatement[23119-23145]"
  }, {
    "left" : "fileBytesWritten++;",
    "right" : "fileBytesWritten++;",
    "info" : "ExpressionStatement[23191-23210]:ExpressionStatement[23158-23177]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23234-23243]:MarkerAnnotation[23201-23210]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23252-23258]:Modifier[23219-23225]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23259-23263]:PrimitiveType[23226-23230]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[23264-23269]:SimpleName[23231-23236]"
  }, {
    "left" : "final byte[] b",
    "right" : "final byte[] b",
    "info" : "SingleVariableDeclaration[23270-23284]:SingleVariableDeclaration[23237-23251]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[23293-23304]:SimpleType[23260-23271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23305-23376]:Block[23272-23343]"
  }, {
    "left" : "OutputStreamWrapper.this.write(b, 0, b.length);",
    "right" : "OutputStreamWrapper.this.write(b, 0, b.length);",
    "info" : "ExpressionStatement[23319-23366]:ExpressionStatement[23286-23333]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23390-23399]:MarkerAnnotation[23357-23366]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23408-23414]:Modifier[23375-23381]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23415-23419]:PrimitiveType[23382-23386]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[23420-23425]:SimpleName[23387-23392]"
  }, {
    "left" : "final byte[] b",
    "right" : "final byte[] b",
    "info" : "SingleVariableDeclaration[23426-23440]:SingleVariableDeclaration[23393-23407]"
  }, {
    "left" : "final int off",
    "right" : "final int off",
    "info" : "SingleVariableDeclaration[23442-23455]:SingleVariableDeclaration[23409-23422]"
  }, {
    "left" : "final int len",
    "right" : "final int len",
    "info" : "SingleVariableDeclaration[23457-23470]:SingleVariableDeclaration[23424-23437]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[23491-23502]:SimpleType[23458-23469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23503-23637]:Block[23470-23604]"
  }, {
    "left" : "file.write(b, off, len);",
    "right" : "file.write(b, off, len);",
    "info" : "ExpressionStatement[23517-23541]:ExpressionStatement[23484-23508]"
  }, {
    "left" : "compressedCrc32.update(b, off, len);",
    "right" : "compressedCrc32.update(b, off, len);",
    "info" : "ExpressionStatement[23554-23590]:ExpressionStatement[23521-23557]"
  }, {
    "left" : "fileBytesWritten += len;",
    "right" : "fileBytesWritten += len;",
    "info" : "ExpressionStatement[23603-23627]:ExpressionStatement[23570-23594]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23647-23656]:MarkerAnnotation[23614-23623]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23665-23671]:Modifier[23632-23638]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23672-23676]:PrimitiveType[23639-23643]"
  }, {
    "left" : "flush",
    "right" : "flush",
    "info" : "SimpleName[23677-23682]:SimpleName[23644-23649]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[23692-23703]:SimpleType[23659-23670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23704-23768]:Block[23671-23735]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23778-23787]:MarkerAnnotation[23745-23754]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23796-23802]:Modifier[23763-23769]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23803-23807]:PrimitiveType[23770-23774]"
  }, {
    "left" : "close",
    "right" : "close",
    "info" : "SimpleName[23808-23813]:SimpleName[23775-23780]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[23823-23834]:SimpleType[23790-23801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23835-23924]:Block[23802-23891]"
  } ]
}