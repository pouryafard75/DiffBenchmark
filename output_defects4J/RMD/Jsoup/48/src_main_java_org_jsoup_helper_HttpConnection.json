{
  "matchedElements" : [
 {
    "left" : "class : HttpConnection",
    "right" : "class : HttpConnection",
    "info" : "TypeDeclaration[748-35217]:TypeDeclaration[748-35706]"
  }, {
    "left" : "CONTENT_ENCODING",
    "right" : "CONTENT_ENCODING",
    "info" : "FieldDeclaration[893-959]:FieldDeclaration[893-959]"
  }, {
    "left" : "CONTENT_TYPE",
    "right" : "CONTENT_TYPE",
    "info" : "FieldDeclaration[964-1022]:FieldDeclaration[964-1022]"
  }, {
    "left" : "MULTIPART_FORM_DATA",
    "right" : "MULTIPART_FORM_DATA",
    "info" : "FieldDeclaration[1027-1099]:FieldDeclaration[1027-1099]"
  }, {
    "left" : "FORM_URL_ENCODED",
    "right" : "FORM_URL_ENCODED",
    "info" : "FieldDeclaration[1104-1187]:FieldDeclaration[1104-1187]"
  }, {
    "left" : "public connect(url ) : ",
    "right" : "public connect(url ) : ",
    "info" : "MethodDeclaration[1193-1334]:MethodDeclaration[1193-1334]"
  }, {
    "left" : "public connect(url ) : ",
    "right" : "public connect(url ) : ",
    "info" : "MethodDeclaration[1340-1478]:MethodDeclaration[1340-1478]"
  }, {
    "left" : "private encodeUrl(url ) : ",
    "right" : "private encodeUrl(url ) : ",
    "info" : "MethodDeclaration[1481-1603]:MethodDeclaration[1481-1603]"
  }, {
    "left" : "private encodeMimeName(val ) : ",
    "right" : "private encodeMimeName(val ) : ",
    "info" : "MethodDeclaration[1609-1759]:MethodDeclaration[1609-1759]"
  }, {
    "left" : "req",
    "right" : "req",
    "info" : "FieldDeclaration[1765-1796]:FieldDeclaration[1765-1796]"
  }, {
    "left" : "res",
    "right" : "res",
    "info" : "FieldDeclaration[1801-1833]:FieldDeclaration[1801-1833]"
  }, {
    "left" : "private HttpConnection()",
    "right" : "private HttpConnection()",
    "info" : "MethodDeclaration[1836-1927]:MethodDeclaration[1836-1927]"
  }, {
    "left" : "public url(url ) : ",
    "right" : "public url(url ) : ",
    "info" : "MethodDeclaration[1933-2014]:MethodDeclaration[1933-2014]"
  }, {
    "left" : "public url(url ) : ",
    "right" : "public url(url ) : ",
    "info" : "MethodDeclaration[2020-2331]:MethodDeclaration[2020-2331]"
  }, {
    "left" : "public userAgent(userAgent ) : ",
    "right" : "public userAgent(userAgent ) : ",
    "info" : "MethodDeclaration[2337-2524]:MethodDeclaration[2337-2524]"
  }, {
    "left" : "public timeout(millis int) : ",
    "right" : "public timeout(millis int) : ",
    "info" : "MethodDeclaration[2530-2625]:MethodDeclaration[2530-2625]"
  }, {
    "left" : "public maxBodySize(bytes int) : ",
    "right" : "public maxBodySize(bytes int) : ",
    "info" : "MethodDeclaration[2631-2732]:MethodDeclaration[2631-2732]"
  }, {
    "left" : "public followRedirects(followRedirects boolean) : ",
    "right" : "public followRedirects(followRedirects boolean) : ",
    "info" : "MethodDeclaration[2738-2871]:MethodDeclaration[2738-2871]"
  }, {
    "left" : "public referrer(referrer ) : ",
    "right" : "public referrer(referrer ) : ",
    "info" : "MethodDeclaration[2877-3055]:MethodDeclaration[2877-3055]"
  }, {
    "left" : "public method(method ) : ",
    "right" : "public method(method ) : ",
    "info" : "MethodDeclaration[3061-3157]:MethodDeclaration[3061-3157]"
  }, {
    "left" : "public ignoreHttpErrors(ignoreHttpErrors boolean) : ",
    "right" : "public ignoreHttpErrors(ignoreHttpErrors boolean) : ",
    "info" : "MethodDeclaration[3163-3285]:MethodDeclaration[3163-3285]"
  }, {
    "left" : "public ignoreContentType(ignoreContentType boolean) : ",
    "right" : "public ignoreContentType(ignoreContentType boolean) : ",
    "info" : "MethodDeclaration[3291-3432]:MethodDeclaration[3291-3432]"
  }, {
    "left" : "public validateTLSCertificates(value boolean) : ",
    "right" : "public validateTLSCertificates(value boolean) : ",
    "info" : "MethodDeclaration[3438-3567]:MethodDeclaration[3438-3567]"
  }, {
    "left" : "public data(key , value ) : ",
    "right" : "public data(key , value ) : ",
    "info" : "MethodDeclaration[3573-3695]:MethodDeclaration[3573-3695]"
  }, {
    "left" : "public data(key , filename , inputStream ) : ",
    "right" : "public data(key , filename , inputStream ) : ",
    "info" : "MethodDeclaration[3701-3867]:MethodDeclaration[3701-3867]"
  }, {
    "left" : "public data(data ) : ",
    "right" : "public data(data ) : ",
    "info" : "MethodDeclaration[3873-4158]:MethodDeclaration[3873-4158]"
  }, {
    "left" : "public data() : ",
    "right" : "public data() : ",
    "info" : "MethodDeclaration[4164-4733]:MethodDeclaration[4164-4733]"
  }, {
    "left" : "public data(data ) : ",
    "right" : "public data(data ) : ",
    "info" : "MethodDeclaration[4739-4979]:MethodDeclaration[4739-4979]"
  }, {
    "left" : "public header(name , value ) : ",
    "right" : "public header(name , value ) : ",
    "info" : "MethodDeclaration[4985-5098]:MethodDeclaration[4985-5098]"
  }, {
    "left" : "public cookie(name , value ) : ",
    "right" : "public cookie(name , value ) : ",
    "info" : "MethodDeclaration[5104-5217]:MethodDeclaration[5104-5217]"
  }, {
    "left" : "public cookies(cookies ...) : ",
    "right" : "public cookies(cookies ...) : ",
    "info" : "MethodDeclaration[5223-5509]:MethodDeclaration[5223-5509]"
  }, {
    "left" : "public parser(parser ) : ",
    "right" : "public parser(parser ) : ",
    "info" : "MethodDeclaration[5515-5611]:MethodDeclaration[5515-5611]"
  }, {
    "left" : "public get() : ",
    "right" : "public get() : ",
    "info" : "MethodDeclaration[5617-5744]:MethodDeclaration[5617-5744]"
  }, {
    "left" : "public post() : ",
    "right" : "public post() : ",
    "info" : "MethodDeclaration[5750-5879]:MethodDeclaration[5750-5879]"
  }, {
    "left" : "public execute() : ",
    "right" : "public execute() : ",
    "info" : "MethodDeclaration[5885-6005]:MethodDeclaration[5885-6005]"
  }, {
    "left" : "public request() : ",
    "right" : "public request() : ",
    "info" : "MethodDeclaration[6011-6074]:MethodDeclaration[6011-6074]"
  }, {
    "left" : "public request(request ) : ",
    "right" : "public request(request ) : ",
    "info" : "MethodDeclaration[6080-6185]:MethodDeclaration[6080-6185]"
  }, {
    "left" : "public response() : ",
    "right" : "public response() : ",
    "info" : "MethodDeclaration[6191-6256]:MethodDeclaration[6191-6256]"
  }, {
    "left" : "public response(response ) : ",
    "right" : "public response(response ) : ",
    "info" : "MethodDeclaration[6262-6371]:MethodDeclaration[6262-6371]"
  }, {
    "left" : "public postDataCharset(charset ) : ",
    "right" : "public postDataCharset(charset ) : ",
    "info" : "MethodDeclaration[6377-6493]:MethodDeclaration[6377-6493]"
  }, {
    "left" : "class : Base",
    "right" : "class : Base",
    "info" : "TypeDeclaration[6499-10618]:TypeDeclaration[6499-10618]"
  }, {
    "left" : "url",
    "right" : "url",
    "info" : "FieldDeclaration[6638-6646]:FieldDeclaration[6638-6646]"
  }, {
    "left" : "method",
    "right" : "method",
    "info" : "FieldDeclaration[6655-6669]:FieldDeclaration[6655-6669]"
  }, {
    "left" : "headers",
    "right" : "headers",
    "info" : "FieldDeclaration[6678-6706]:FieldDeclaration[6678-6706]"
  }, {
    "left" : "cookies",
    "right" : "cookies",
    "info" : "FieldDeclaration[6715-6743]:FieldDeclaration[6715-6743]"
  }, {
    "left" : "private Base()",
    "right" : "private Base()",
    "info" : "MethodDeclaration[6753-6897]:MethodDeclaration[6753-6897]"
  }, {
    "left" : "public url() : ",
    "right" : "public url() : ",
    "info" : "MethodDeclaration[6907-6959]:MethodDeclaration[6907-6959]"
  }, {
    "left" : "public url(url ) : ",
    "right" : "public url(url ) : ",
    "info" : "MethodDeclaration[6969-7118]:MethodDeclaration[6969-7118]"
  }, {
    "left" : "public method() : ",
    "right" : "public method() : ",
    "info" : "MethodDeclaration[7128-7189]:MethodDeclaration[7128-7189]"
  }, {
    "left" : "public method(method ) : ",
    "right" : "public method(method ) : ",
    "info" : "MethodDeclaration[7199-7369]:MethodDeclaration[7199-7369]"
  }, {
    "left" : "public header(name ) : ",
    "right" : "public header(name ) : ",
    "info" : "MethodDeclaration[7379-7543]:MethodDeclaration[7379-7543]"
  }, {
    "left" : "public header(name , value ) : ",
    "right" : "public header(name , value ) : ",
    "info" : "MethodDeclaration[7553-7915]:MethodDeclaration[7553-7915]"
  }, {
    "left" : "public hasHeader(name ) : boolean",
    "right" : "public hasHeader(name ) : boolean",
    "info" : "MethodDeclaration[7925-8103]:MethodDeclaration[7925-8103]"
  }, {
    "left" : "public hasHeaderWithValue(name , value ) : boolean",
    "right" : "public hasHeaderWithValue(name , value ) : boolean",
    "info" : "MethodDeclaration[8113-8365]:MethodDeclaration[8113-8365]"
  }, {
    "left" : "public removeHeader(name ) : ",
    "right" : "public removeHeader(name ) : ",
    "info" : "MethodDeclaration[8375-8722]:MethodDeclaration[8375-8722]"
  }, {
    "left" : "public headers() : ",
    "right" : "public headers() : ",
    "info" : "MethodDeclaration[8732-8808]:MethodDeclaration[8732-8808]"
  }, {
    "left" : "private getHeaderCaseInsensitive(name ) : ",
    "right" : "private getHeaderCaseInsensitive(name ) : ",
    "info" : "MethodDeclaration[8818-9397]:MethodDeclaration[8818-9397]"
  }, {
    "left" : "private scanHeaders(name ) : ",
    "right" : "private scanHeaders(name ) : ",
    "info" : "MethodDeclaration[9407-9728]:MethodDeclaration[9407-9728]"
  }, {
    "left" : "public cookie(name ) : ",
    "right" : "public cookie(name ) : ",
    "info" : "MethodDeclaration[9738-9891]:MethodDeclaration[9738-9891]"
  }, {
    "left" : "public cookie(name , value ) : ",
    "right" : "public cookie(name , value ) : ",
    "info" : "MethodDeclaration[9901-10162]:MethodDeclaration[9901-10162]"
  }, {
    "left" : "public hasCookie(name ) : boolean",
    "right" : "public hasCookie(name ) : boolean",
    "info" : "MethodDeclaration[10172-10337]:MethodDeclaration[10172-10337]"
  }, {
    "left" : "public removeCookie(name ) : ",
    "right" : "public removeCookie(name ) : ",
    "info" : "MethodDeclaration[10347-10526]:MethodDeclaration[10347-10526]"
  }, {
    "left" : "public cookies() : ",
    "right" : "public cookies() : ",
    "info" : "MethodDeclaration[10536-10612]:MethodDeclaration[10536-10612]"
  }, {
    "left" : "class : Request",
    "right" : "class : Request",
    "info" : "TypeDeclaration[10624-14111]:TypeDeclaration[10624-14111]"
  }, {
    "left" : "timeoutMilliseconds",
    "right" : "timeoutMilliseconds",
    "info" : "FieldDeclaration[10740-10772]:FieldDeclaration[10740-10772]"
  }, {
    "left" : "maxBodySizeBytes",
    "right" : "maxBodySizeBytes",
    "info" : "FieldDeclaration[10781-10810]:FieldDeclaration[10781-10810]"
  }, {
    "left" : "followRedirects",
    "right" : "followRedirects",
    "info" : "FieldDeclaration[10819-10851]:FieldDeclaration[10819-10851]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "FieldDeclaration[10860-10903]:FieldDeclaration[10860-10903]"
  }, {
    "left" : "ignoreHttpErrors",
    "right" : "ignoreHttpErrors",
    "info" : "FieldDeclaration[10912-10953]:FieldDeclaration[10912-10953]"
  }, {
    "left" : "ignoreContentType",
    "right" : "ignoreContentType",
    "info" : "FieldDeclaration[10962-11004]:FieldDeclaration[10962-11004]"
  }, {
    "left" : "parser",
    "right" : "parser",
    "info" : "FieldDeclaration[11013-11035]:FieldDeclaration[11013-11035]"
  }, {
    "left" : "parserDefined",
    "right" : "parserDefined",
    "info" : "FieldDeclaration[11044-11082]:FieldDeclaration[11044-11082]"
  }, {
    "left" : "validateTSLCertificates",
    "right" : "validateTSLCertificates",
    "info" : "FieldDeclaration[11136-11183]:FieldDeclaration[11136-11183]"
  }, {
    "left" : "postDataCharset",
    "right" : "postDataCharset",
    "info" : "FieldDeclaration[11192-11249]:FieldDeclaration[11192-11249]"
  }, {
    "left" : "private Request()",
    "right" : "private Request()",
    "info" : "MethodDeclaration[11259-11597]:MethodDeclaration[11259-11597]"
  }, {
    "left" : "public timeout() : int",
    "right" : "public timeout() : int",
    "info" : "MethodDeclaration[11607-11679]:MethodDeclaration[11607-11679]"
  }, {
    "left" : "public timeout(millis int) : ",
    "right" : "public timeout(millis int) : ",
    "info" : "MethodDeclaration[11689-11900]:MethodDeclaration[11689-11900]"
  }, {
    "left" : "public maxBodySize() : int",
    "right" : "public maxBodySize() : int",
    "info" : "MethodDeclaration[11910-11983]:MethodDeclaration[11910-11983]"
  }, {
    "left" : "public maxBodySize(bytes int) : ",
    "right" : "public maxBodySize(bytes int) : ",
    "info" : "MethodDeclaration[11993-12200]:MethodDeclaration[11993-12200]"
  }, {
    "left" : "public followRedirects() : boolean",
    "right" : "public followRedirects() : boolean",
    "info" : "MethodDeclaration[12210-12290]:MethodDeclaration[12210-12290]"
  }, {
    "left" : "public followRedirects(followRedirects boolean) : ",
    "right" : "public followRedirects(followRedirects boolean) : ",
    "info" : "MethodDeclaration[12300-12455]:MethodDeclaration[12300-12455]"
  }, {
    "left" : "public ignoreHttpErrors() : boolean",
    "right" : "public ignoreHttpErrors() : boolean",
    "info" : "MethodDeclaration[12465-12547]:MethodDeclaration[12465-12547]"
  }, {
    "left" : "public validateTLSCertificates() : boolean",
    "right" : "public validateTLSCertificates() : boolean",
    "info" : "MethodDeclaration[12557-12653]:MethodDeclaration[12557-12653]"
  }, {
    "left" : "public validateTLSCertificates(value boolean) : void",
    "right" : "public validateTLSCertificates(value boolean) : void",
    "info" : "MethodDeclaration[12663-12770]:MethodDeclaration[12663-12770]"
  }, {
    "left" : "public ignoreHttpErrors(ignoreHttpErrors boolean) : ",
    "right" : "public ignoreHttpErrors(ignoreHttpErrors boolean) : ",
    "info" : "MethodDeclaration[12780-12939]:MethodDeclaration[12780-12939]"
  }, {
    "left" : "public ignoreContentType() : boolean",
    "right" : "public ignoreContentType() : boolean",
    "info" : "MethodDeclaration[12949-13033]:MethodDeclaration[12949-13033]"
  }, {
    "left" : "public ignoreContentType(ignoreContentType boolean) : ",
    "right" : "public ignoreContentType(ignoreContentType boolean) : ",
    "info" : "MethodDeclaration[13043-13206]:MethodDeclaration[13043-13206]"
  }, {
    "left" : "public data(keyval ) : ",
    "right" : "public data(keyval ) : ",
    "info" : "MethodDeclaration[13216-13394]:MethodDeclaration[13216-13394]"
  }, {
    "left" : "public data() : ",
    "right" : "public data() : ",
    "info" : "MethodDeclaration[13404-13484]:MethodDeclaration[13404-13484]"
  }, {
    "left" : "public parser(parser ) : ",
    "right" : "public parser(parser ) : ",
    "info" : "MethodDeclaration[13494-13635]:MethodDeclaration[13494-13635]"
  }, {
    "left" : "public parser() : ",
    "right" : "public parser() : ",
    "info" : "MethodDeclaration[13645-13706]:MethodDeclaration[13645-13706]"
  }, {
    "left" : "public postDataCharset(charset ) : ",
    "right" : "public postDataCharset(charset ) : ",
    "info" : "MethodDeclaration[13716-14016]:MethodDeclaration[13716-14016]"
  }, {
    "left" : "public postDataCharset() : ",
    "right" : "public postDataCharset() : ",
    "info" : "MethodDeclaration[14026-14105]:MethodDeclaration[14026-14105]"
  }, {
    "left" : "class : Response",
    "right" : "class : Response",
    "info" : "TypeDeclaration[14117-33751]:TypeDeclaration[14117-34240]"
  }, {
    "left" : "MAX_REDIRECTS",
    "right" : "MAX_REDIRECTS",
    "info" : "FieldDeclaration[14236-14280]:FieldDeclaration[14236-14280]"
  }, {
    "left" : "sslSocketFactory",
    "right" : "sslSocketFactory",
    "info" : "FieldDeclaration[14289-14338]:FieldDeclaration[14289-14338]"
  }, {
    "left" : "LOCATION",
    "right" : "LOCATION",
    "info" : "FieldDeclaration[14347-14397]:FieldDeclaration[14347-14397]"
  }, {
    "left" : "statusCode",
    "right" : "statusCode",
    "info" : "FieldDeclaration[14406-14429]:FieldDeclaration[14406-14429]"
  }, {
    "left" : "statusMessage",
    "right" : "statusMessage",
    "info" : "FieldDeclaration[14438-14467]:FieldDeclaration[14438-14467]"
  }, {
    "left" : "byteData",
    "right" : "byteData",
    "info" : "FieldDeclaration[14476-14504]:FieldDeclaration[14476-14504]"
  }, {
    "left" : "charset",
    "right" : "charset",
    "info" : "FieldDeclaration[14513-14536]:FieldDeclaration[14513-14536]"
  }, {
    "left" : "contentType",
    "right" : "contentType",
    "info" : "FieldDeclaration[14545-14572]:FieldDeclaration[14545-14572]"
  }, {
    "left" : "executed",
    "right" : "executed",
    "info" : "FieldDeclaration[14581-14614]:FieldDeclaration[14581-14614]"
  }, {
    "left" : "numRedirects",
    "right" : "numRedirects",
    "info" : "FieldDeclaration[14623-14652]:FieldDeclaration[14623-14652]"
  }, {
    "left" : "req",
    "right" : "req",
    "info" : "FieldDeclaration[14661-14692]:FieldDeclaration[14661-14692]"
  }, {
    "left" : "xmlContentTypeRxp",
    "right" : "xmlContentTypeRxp",
    "info" : "FieldDeclaration[14819-14920]:FieldDeclaration[14819-14920]"
  }, {
    "left" : "package Response()",
    "right" : "package Response()",
    "info" : "MethodDeclaration[14930-14973]:MethodDeclaration[14930-14973]"
  }, {
    "left" : "private Response(previousResponse ) : ",
    "right" : "private Response(previousResponse ) : ",
    "info" : "MethodDeclaration[14983-15388]:MethodDeclaration[14983-15388]"
  }, {
    "left" : "package execute(req ) : ",
    "right" : "package execute(req ) : ",
    "info" : "MethodDeclaration[15398-15515]:MethodDeclaration[15398-15515]"
  }, {
    "left" : "package execute(req , previousResponse ) : ",
    "right" : "package execute(req , previousResponse ) : ",
    "info" : "MethodDeclaration[15525-20542]:MethodDeclaration[15525-20542]"
  }, {
    "left" : "public statusCode() : int",
    "right" : "public statusCode() : int",
    "info" : "MethodDeclaration[20552-20618]:MethodDeclaration[20552-20618]"
  }, {
    "left" : "public statusMessage() : ",
    "right" : "public statusMessage() : ",
    "info" : "MethodDeclaration[20628-20703]:MethodDeclaration[20628-20703]"
  }, {
    "left" : "public charset() : ",
    "right" : "public charset() : ",
    "info" : "MethodDeclaration[20713-20776]:MethodDeclaration[20713-20776]"
  }, {
    "left" : "public contentType() : ",
    "right" : "public contentType() : ",
    "info" : "MethodDeclaration[20786-20857]:MethodDeclaration[20786-20857]"
  }, {
    "left" : "public parse() : ",
    "right" : "public parse() : ",
    "info" : "MethodDeclaration[20867-21315]:MethodDeclaration[20867-21315]"
  }, {
    "left" : "public body() : ",
    "right" : "public body() : ",
    "info" : "MethodDeclaration[21325-21909]:MethodDeclaration[21325-21909]"
  }, {
    "left" : "public bodyAsBytes() : ",
    "right" : "public bodyAsBytes() : ",
    "info" : "MethodDeclaration[21919-22128]:MethodDeclaration[21919-22128]"
  }, {
    "left" : "private createConnection(req ) : ",
    "right" : "private createConnection(req ) : ",
    "info" : "MethodDeclaration[22202-23399]:MethodDeclaration[22202-23399]"
  }, {
    "left" : "private getInsecureVerifier() : ",
    "right" : "private getInsecureVerifier() : ",
    "info" : "MethodDeclaration[23409-23934]:MethodDeclaration[23409-23934]"
  }, {
    "left" : "public verify(urlHostName , session ) : boolean",
    "right" : "public verify(urlHostName , session ) : boolean",
    "info" : "MethodDeclaration[23795-23909]:MethodDeclaration[23795-23909]"
  }, {
    "left" : "private initUnSecureTSL() : void",
    "right" : "private initUnSecureTSL() : void",
    "info" : "MethodDeclaration[23944-25722]:MethodDeclaration[23944-25722]"
  }, {
    "left" : "public checkClientTrusted(chain , authType ) : void",
    "right" : "public checkClientTrusted(chain , authType ) : void",
    "info" : "MethodDeclaration[24587-24695]:MethodDeclaration[24587-24695]"
  }, {
    "left" : "public checkServerTrusted(chain , authType ) : void",
    "right" : "public checkServerTrusted(chain , authType ) : void",
    "info" : "MethodDeclaration[24717-24825]:MethodDeclaration[24717-24825]"
  }, {
    "left" : "public getAcceptedIssuers() : ",
    "right" : "public getAcceptedIssuers() : ",
    "info" : "MethodDeclaration[24847-24953]:MethodDeclaration[24847-24953]"
  }, {
    "left" : "private setupFromConnection(conn , previousResponse ) : void",
    "right" : "private setupFromConnection(conn , previousResponse ) : void",
    "info" : "MethodDeclaration[25779-26670]:MethodDeclaration[25779-26670]"
  }, {
    "left" : "private createHeaderMap(conn ) : ",
    "right" : "private createHeaderMap(conn ) : ",
    "info" : "MethodDeclaration[26680-27684]:MethodDeclaration[26680-27684]"
  }, {
    "left" : "package processResponseHeaders(resHeaders ...) : void",
    "right" : "package processResponseHeaders(resHeaders ...) : void",
    "info" : "MethodDeclaration[27694-28967]:MethodDeclaration[27694-29456]"
  }, {
    "left" : "private setOutputContentType(req ) : ",
    "right" : "private setOutputContentType(req ) : ",
    "info" : "MethodDeclaration[28977-29792]:MethodDeclaration[29466-30281]"
  }, {
    "left" : "private writePost(req , outputStream , bound ) : void",
    "right" : "private writePost(req , outputStream , bound ) : void",
    "info" : "MethodDeclaration[29802-31890]:MethodDeclaration[30291-32379]"
  }, {
    "left" : "private getRequestCookieString(req ) : ",
    "right" : "private getRequestCookieString(req ) : ",
    "info" : "MethodDeclaration[31900-32517]:MethodDeclaration[32389-33006]"
  }, {
    "left" : "private serialiseRequestUrl(req ) : void",
    "right" : "private serialiseRequestUrl(req ) : void",
    "info" : "MethodDeclaration[32592-33745]:MethodDeclaration[33081-34234]"
  }, {
    "left" : "class : KeyVal",
    "right" : "class : KeyVal",
    "info" : "TypeDeclaration[33757-35215]:TypeDeclaration[34246-35704]"
  }, {
    "left" : "key",
    "right" : "key",
    "info" : "FieldDeclaration[33823-33842]:FieldDeclaration[34312-34331]"
  }, {
    "left" : "value",
    "right" : "value",
    "info" : "FieldDeclaration[33851-33872]:FieldDeclaration[34340-34361]"
  }, {
    "left" : "stream",
    "right" : "stream",
    "info" : "FieldDeclaration[33881-33908]:FieldDeclaration[34370-34397]"
  }, {
    "left" : "public create(key , value ) : ",
    "right" : "public create(key , value ) : ",
    "info" : "MethodDeclaration[33918-34038]:MethodDeclaration[34407-34527]"
  }, {
    "left" : "public create(key , filename , stream ) : ",
    "right" : "public create(key , filename , stream ) : ",
    "info" : "MethodDeclaration[34048-34214]:MethodDeclaration[34537-34703]"
  }, {
    "left" : "private KeyVal()",
    "right" : "private KeyVal()",
    "info" : "MethodDeclaration[34224-34243]:MethodDeclaration[34713-34732]"
  }, {
    "left" : "public key(key ) : ",
    "right" : "public key(key ) : ",
    "info" : "MethodDeclaration[34253-34413]:MethodDeclaration[34742-34902]"
  }, {
    "left" : "public key() : ",
    "right" : "public key() : ",
    "info" : "MethodDeclaration[34423-34478]:MethodDeclaration[34912-34967]"
  }, {
    "left" : "public value(value ) : ",
    "right" : "public value(value ) : ",
    "info" : "MethodDeclaration[34488-34658]:MethodDeclaration[34977-35147]"
  }, {
    "left" : "public value() : ",
    "right" : "public value() : ",
    "info" : "MethodDeclaration[34668-34727]:MethodDeclaration[35157-35216]"
  }, {
    "left" : "public inputStream(inputStream ) : ",
    "right" : "public inputStream(inputStream ) : ",
    "info" : "MethodDeclaration[34737-34938]:MethodDeclaration[35226-35427]"
  }, {
    "left" : "public inputStream() : ",
    "right" : "public inputStream() : ",
    "info" : "MethodDeclaration[34948-35019]:MethodDeclaration[35437-35508]"
  }, {
    "left" : "public hasInputStream() : boolean",
    "right" : "public hasInputStream() : boolean",
    "info" : "MethodDeclaration[35029-35107]:MethodDeclaration[35518-35596]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[35117-35209]:MethodDeclaration[35606-35698]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[837-843]:Modifier[837-843]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[844-849]:TYPE_DECLARATION_KIND[844-849]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1193-1199]:Modifier[1193-1199]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1200-1206]:Modifier[1200-1206]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[1207-1217]:SimpleType[1207-1217]"
  }, {
    "left" : "connect",
    "right" : "connect",
    "info" : "SimpleName[1218-1225]:SimpleName[1218-1225]"
  }, {
    "left" : "String url",
    "right" : "String url",
    "info" : "SingleVariableDeclaration[1226-1236]:SingleVariableDeclaration[1226-1236]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1238-1334]:Block[1238-1334]"
  }, {
    "left" : "Connection con = new HttpConnection();",
    "right" : "Connection con = new HttpConnection();",
    "info" : "VariableDeclarationStatement[1248-1286]:VariableDeclarationStatement[1248-1286]"
  }, {
    "left" : "con.url(url);",
    "right" : "con.url(url);",
    "info" : "ExpressionStatement[1295-1308]:ExpressionStatement[1295-1308]"
  }, {
    "left" : "return con;",
    "right" : "return con;",
    "info" : "ReturnStatement[1317-1328]:ReturnStatement[1317-1328]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1340-1346]:Modifier[1340-1346]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1347-1353]:Modifier[1347-1353]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[1354-1364]:SimpleType[1354-1364]"
  }, {
    "left" : "connect",
    "right" : "connect",
    "info" : "SimpleName[1365-1372]:SimpleName[1365-1372]"
  }, {
    "left" : "URL url",
    "right" : "URL url",
    "info" : "SingleVariableDeclaration[1373-1380]:SingleVariableDeclaration[1373-1380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1382-1478]:Block[1382-1478]"
  }, {
    "left" : "Connection con = new HttpConnection();",
    "right" : "Connection con = new HttpConnection();",
    "info" : "VariableDeclarationStatement[1392-1430]:VariableDeclarationStatement[1392-1430]"
  }, {
    "left" : "con.url(url);",
    "right" : "con.url(url);",
    "info" : "ExpressionStatement[1439-1452]:ExpressionStatement[1439-1452]"
  }, {
    "left" : "return con;",
    "right" : "return con;",
    "info" : "ReturnStatement[1461-1472]:ReturnStatement[1461-1472]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1481-1488]:Modifier[1481-1488]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1489-1495]:Modifier[1489-1495]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[1496-1502]:SimpleType[1496-1502]"
  }, {
    "left" : "encodeUrl",
    "right" : "encodeUrl",
    "info" : "SimpleName[1503-1512]:SimpleName[1503-1512]"
  }, {
    "left" : "String url",
    "right" : "String url",
    "info" : "SingleVariableDeclaration[1513-1523]:SingleVariableDeclaration[1513-1523]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1525-1603]:Block[1525-1603]"
  }, {
    "left" : "if(url == null)",
    "right" : "if(url == null)",
    "info" : "IfStatement[1529-1560]:IfStatement[1529-1560]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[1548-1560]:ReturnStatement[1548-1560]"
  }, {
    "left" : "return url.replaceAll(\" \", \"%20\");",
    "right" : "return url.replaceAll(\" \", \"%20\");",
    "info" : "ReturnStatement[1566-1600]:ReturnStatement[1566-1600]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1609-1616]:Modifier[1609-1616]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1617-1623]:Modifier[1617-1623]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[1624-1630]:SimpleType[1624-1630]"
  }, {
    "left" : "encodeMimeName",
    "right" : "encodeMimeName",
    "info" : "SimpleName[1631-1645]:SimpleName[1631-1645]"
  }, {
    "left" : "String val",
    "right" : "String val",
    "info" : "SingleVariableDeclaration[1646-1656]:SingleVariableDeclaration[1646-1656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1658-1759]:Block[1658-1759]"
  }, {
    "left" : "if (val == null)",
    "right" : "if (val == null)",
    "info" : "IfStatement[1668-1709]:IfStatement[1668-1709]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[1697-1709]:ReturnStatement[1697-1709]"
  }, {
    "left" : "return val.replaceAll(\"\\\"\", \"%22\");",
    "right" : "return val.replaceAll(\"\\\"\", \"%22\");",
    "info" : "ReturnStatement[1718-1753]:ReturnStatement[1718-1753]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1836-1843]:Modifier[1836-1843]"
  }, {
    "left" : "HttpConnection",
    "right" : "HttpConnection",
    "info" : "SimpleName[1844-1858]:SimpleName[1844-1858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1861-1927]:Block[1861-1927]"
  }, {
    "left" : "req = new Request();",
    "right" : "req = new Request();",
    "info" : "ExpressionStatement[1871-1891]:ExpressionStatement[1871-1891]"
  }, {
    "left" : "res = new Response();",
    "right" : "res = new Response();",
    "info" : "ExpressionStatement[1900-1921]:ExpressionStatement[1900-1921]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1933-1939]:Modifier[1933-1939]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[1940-1950]:SimpleType[1940-1950]"
  }, {
    "left" : "url",
    "right" : "url",
    "info" : "SimpleName[1951-1954]:SimpleName[1951-1954]"
  }, {
    "left" : "URL url",
    "right" : "URL url",
    "info" : "SingleVariableDeclaration[1955-1962]:SingleVariableDeclaration[1955-1962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1964-2014]:Block[1964-2014]"
  }, {
    "left" : "req.url(url);",
    "right" : "req.url(url);",
    "info" : "ExpressionStatement[1974-1987]:ExpressionStatement[1974-1987]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[1996-2008]:ReturnStatement[1996-2008]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2020-2026]:Modifier[2020-2026]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[2027-2037]:SimpleType[2027-2037]"
  }, {
    "left" : "url",
    "right" : "url",
    "info" : "SimpleName[2038-2041]:SimpleName[2038-2041]"
  }, {
    "left" : "String url",
    "right" : "String url",
    "info" : "SingleVariableDeclaration[2042-2052]:SingleVariableDeclaration[2042-2052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2054-2331]:Block[2054-2331]"
  }, {
    "left" : "Validate.notEmpty(url, \"Must supply a valid URL\");",
    "right" : "Validate.notEmpty(url, \"Must supply a valid URL\");",
    "info" : "ExpressionStatement[2064-2114]:ExpressionStatement[2064-2114]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[2123-2304]:TryStatement[2123-2304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2127-2184]:Block[2127-2184]"
  }, {
    "left" : "req.url(new URL(encodeUrl(url)));",
    "right" : "req.url(new URL(encodeUrl(url)));",
    "info" : "ExpressionStatement[2141-2174]:ExpressionStatement[2141-2174]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2217-2304]:Block[2217-2304]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Malformed URL: \" + url, e);",
    "right" : "throw new IllegalArgumentException(\"Malformed URL: \" + url, e);",
    "info" : "ThrowStatement[2231-2294]:ThrowStatement[2231-2294]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2313-2325]:ReturnStatement[2313-2325]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2337-2343]:Modifier[2337-2343]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[2344-2354]:SimpleType[2344-2354]"
  }, {
    "left" : "userAgent",
    "right" : "userAgent",
    "info" : "SimpleName[2355-2364]:SimpleName[2355-2364]"
  }, {
    "left" : "String userAgent",
    "right" : "String userAgent",
    "info" : "SingleVariableDeclaration[2365-2381]:SingleVariableDeclaration[2365-2381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2383-2524]:Block[2383-2524]"
  }, {
    "left" : "Validate.notNull(userAgent, \"User agent must not be null\");",
    "right" : "Validate.notNull(userAgent, \"User agent must not be null\");",
    "info" : "ExpressionStatement[2393-2452]:ExpressionStatement[2393-2452]"
  }, {
    "left" : "req.header(\"User-Agent\", userAgent);",
    "right" : "req.header(\"User-Agent\", userAgent);",
    "info" : "ExpressionStatement[2461-2497]:ExpressionStatement[2461-2497]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2506-2518]:ReturnStatement[2506-2518]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2530-2536]:Modifier[2530-2536]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[2537-2547]:SimpleType[2537-2547]"
  }, {
    "left" : "timeout",
    "right" : "timeout",
    "info" : "SimpleName[2548-2555]:SimpleName[2548-2555]"
  }, {
    "left" : "int millis",
    "right" : "int millis",
    "info" : "SingleVariableDeclaration[2556-2566]:SingleVariableDeclaration[2556-2566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2568-2625]:Block[2568-2625]"
  }, {
    "left" : "req.timeout(millis);",
    "right" : "req.timeout(millis);",
    "info" : "ExpressionStatement[2578-2598]:ExpressionStatement[2578-2598]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2607-2619]:ReturnStatement[2607-2619]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2631-2637]:Modifier[2631-2637]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[2638-2648]:SimpleType[2638-2648]"
  }, {
    "left" : "maxBodySize",
    "right" : "maxBodySize",
    "info" : "SimpleName[2649-2660]:SimpleName[2649-2660]"
  }, {
    "left" : "int bytes",
    "right" : "int bytes",
    "info" : "SingleVariableDeclaration[2661-2670]:SingleVariableDeclaration[2661-2670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2672-2732]:Block[2672-2732]"
  }, {
    "left" : "req.maxBodySize(bytes);",
    "right" : "req.maxBodySize(bytes);",
    "info" : "ExpressionStatement[2682-2705]:ExpressionStatement[2682-2705]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2714-2726]:ReturnStatement[2714-2726]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2738-2744]:Modifier[2738-2744]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[2745-2755]:SimpleType[2745-2755]"
  }, {
    "left" : "followRedirects",
    "right" : "followRedirects",
    "info" : "SimpleName[2756-2771]:SimpleName[2756-2771]"
  }, {
    "left" : "boolean followRedirects",
    "right" : "boolean followRedirects",
    "info" : "SingleVariableDeclaration[2772-2795]:SingleVariableDeclaration[2772-2795]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2797-2871]:Block[2797-2871]"
  }, {
    "left" : "req.followRedirects(followRedirects);",
    "right" : "req.followRedirects(followRedirects);",
    "info" : "ExpressionStatement[2807-2844]:ExpressionStatement[2807-2844]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2853-2865]:ReturnStatement[2853-2865]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2877-2883]:Modifier[2877-2883]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[2884-2894]:SimpleType[2884-2894]"
  }, {
    "left" : "referrer",
    "right" : "referrer",
    "info" : "SimpleName[2895-2903]:SimpleName[2895-2903]"
  }, {
    "left" : "String referrer",
    "right" : "String referrer",
    "info" : "SingleVariableDeclaration[2904-2919]:SingleVariableDeclaration[2904-2919]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2921-3055]:Block[2921-3055]"
  }, {
    "left" : "Validate.notNull(referrer, \"Referrer must not be null\");",
    "right" : "Validate.notNull(referrer, \"Referrer must not be null\");",
    "info" : "ExpressionStatement[2931-2987]:ExpressionStatement[2931-2987]"
  }, {
    "left" : "req.header(\"Referer\", referrer);",
    "right" : "req.header(\"Referer\", referrer);",
    "info" : "ExpressionStatement[2996-3028]:ExpressionStatement[2996-3028]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3037-3049]:ReturnStatement[3037-3049]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3061-3067]:Modifier[3061-3067]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[3068-3078]:SimpleType[3068-3078]"
  }, {
    "left" : "method",
    "right" : "method",
    "info" : "SimpleName[3079-3085]:SimpleName[3079-3085]"
  }, {
    "left" : "Method method",
    "right" : "Method method",
    "info" : "SingleVariableDeclaration[3086-3099]:SingleVariableDeclaration[3086-3099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3101-3157]:Block[3101-3157]"
  }, {
    "left" : "req.method(method);",
    "right" : "req.method(method);",
    "info" : "ExpressionStatement[3111-3130]:ExpressionStatement[3111-3130]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3139-3151]:ReturnStatement[3139-3151]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3163-3169]:Modifier[3163-3169]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[3170-3180]:SimpleType[3170-3180]"
  }, {
    "left" : "ignoreHttpErrors",
    "right" : "ignoreHttpErrors",
    "info" : "SimpleName[3181-3197]:SimpleName[3181-3197]"
  }, {
    "left" : "boolean ignoreHttpErrors",
    "right" : "boolean ignoreHttpErrors",
    "info" : "SingleVariableDeclaration[3198-3222]:SingleVariableDeclaration[3198-3222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3224-3285]:Block[3224-3285]"
  }, {
    "left" : "req.ignoreHttpErrors(ignoreHttpErrors);",
    "right" : "req.ignoreHttpErrors(ignoreHttpErrors);",
    "info" : "ExpressionStatement[3228-3267]:ExpressionStatement[3228-3267]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3270-3282]:ReturnStatement[3270-3282]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3291-3297]:Modifier[3291-3297]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[3298-3308]:SimpleType[3298-3308]"
  }, {
    "left" : "ignoreContentType",
    "right" : "ignoreContentType",
    "info" : "SimpleName[3309-3326]:SimpleName[3309-3326]"
  }, {
    "left" : "boolean ignoreContentType",
    "right" : "boolean ignoreContentType",
    "info" : "SingleVariableDeclaration[3327-3352]:SingleVariableDeclaration[3327-3352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3354-3432]:Block[3354-3432]"
  }, {
    "left" : "req.ignoreContentType(ignoreContentType);",
    "right" : "req.ignoreContentType(ignoreContentType);",
    "info" : "ExpressionStatement[3364-3405]:ExpressionStatement[3364-3405]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3414-3426]:ReturnStatement[3414-3426]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3438-3444]:Modifier[3438-3444]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[3445-3455]:SimpleType[3445-3455]"
  }, {
    "left" : "validateTLSCertificates",
    "right" : "validateTLSCertificates",
    "info" : "SimpleName[3456-3479]:SimpleName[3456-3479]"
  }, {
    "left" : "boolean value",
    "right" : "boolean value",
    "info" : "SingleVariableDeclaration[3480-3493]:SingleVariableDeclaration[3480-3493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3495-3567]:Block[3495-3567]"
  }, {
    "left" : "req.validateTLSCertificates(value);",
    "right" : "req.validateTLSCertificates(value);",
    "info" : "ExpressionStatement[3505-3540]:ExpressionStatement[3505-3540]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3549-3561]:ReturnStatement[3549-3561]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3573-3579]:Modifier[3573-3579]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[3580-3590]:SimpleType[3580-3590]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "SimpleName[3591-3595]:SimpleName[3591-3595]"
  }, {
    "left" : "String key",
    "right" : "String key",
    "info" : "SingleVariableDeclaration[3596-3606]:SingleVariableDeclaration[3596-3606]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[3608-3620]:SingleVariableDeclaration[3608-3620]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3622-3695]:Block[3622-3695]"
  }, {
    "left" : "req.data(KeyVal.create(key, value));",
    "right" : "req.data(KeyVal.create(key, value));",
    "info" : "ExpressionStatement[3632-3668]:ExpressionStatement[3632-3668]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3677-3689]:ReturnStatement[3677-3689]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3701-3707]:Modifier[3701-3707]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[3708-3718]:SimpleType[3708-3718]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "SimpleName[3719-3723]:SimpleName[3719-3723]"
  }, {
    "left" : "String key",
    "right" : "String key",
    "info" : "SingleVariableDeclaration[3724-3734]:SingleVariableDeclaration[3724-3734]"
  }, {
    "left" : "String filename",
    "right" : "String filename",
    "info" : "SingleVariableDeclaration[3736-3751]:SingleVariableDeclaration[3736-3751]"
  }, {
    "left" : "InputStream inputStream",
    "right" : "InputStream inputStream",
    "info" : "SingleVariableDeclaration[3753-3776]:SingleVariableDeclaration[3753-3776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3778-3867]:Block[3778-3867]"
  }, {
    "left" : "req.data(KeyVal.create(key, filename, inputStream));",
    "right" : "req.data(KeyVal.create(key, filename, inputStream));",
    "info" : "ExpressionStatement[3788-3840]:ExpressionStatement[3788-3840]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3849-3861]:ReturnStatement[3849-3861]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3873-3879]:Modifier[3873-3879]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[3880-3890]:SimpleType[3880-3890]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "SimpleName[3891-3895]:SimpleName[3891-3895]"
  }, {
    "left" : "Map<String, String> data",
    "right" : "Map<String, String> data",
    "info" : "SingleVariableDeclaration[3896-3920]:SingleVariableDeclaration[3896-3920]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3922-4158]:Block[3922-4158]"
  }, {
    "left" : "Validate.notNull(data, \"Data map must not be null\");",
    "right" : "Validate.notNull(data, \"Data map must not be null\");",
    "info" : "ExpressionStatement[3932-3984]:ExpressionStatement[3932-3984]"
  }, {
    "left" : "for (Map.Entry<String, String> entry : data.entrySet())",
    "right" : "for (Map.Entry<String, String> entry : data.entrySet())",
    "info" : "EnhancedForStatement[3993-4131]:EnhancedForStatement[3993-4131]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4049-4131]:Block[4049-4131]"
  }, {
    "left" : "req.data(KeyVal.create(entry.getKey(), entry.getValue()));",
    "right" : "req.data(KeyVal.create(entry.getKey(), entry.getValue()));",
    "info" : "ExpressionStatement[4063-4121]:ExpressionStatement[4063-4121]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[4140-4152]:ReturnStatement[4140-4152]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4164-4170]:Modifier[4164-4170]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[4171-4181]:SimpleType[4171-4181]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "SimpleName[4182-4186]:SimpleName[4182-4186]"
  }, {
    "left" : "String... keyvals",
    "right" : "String... keyvals",
    "info" : "SingleVariableDeclaration[4187-4204]:SingleVariableDeclaration[4187-4204]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4206-4733]:Block[4206-4733]"
  }, {
    "left" : "Validate.notNull(keyvals, \"Data key value pairs must not be null\");",
    "right" : "Validate.notNull(keyvals, \"Data key value pairs must not be null\");",
    "info" : "ExpressionStatement[4216-4283]:ExpressionStatement[4216-4283]"
  }, {
    "left" : "Validate.isTrue(keyvals.length %2 == 0, \"Must supply an even number of key value pairs\");",
    "right" : "Validate.isTrue(keyvals.length %2 == 0, \"Must supply an even number of key value pairs\");",
    "info" : "ExpressionStatement[4292-4381]:ExpressionStatement[4292-4381]"
  }, {
    "left" : "for (int i = 0; i < keyvals.length; i += 2)",
    "right" : "for (int i = 0; i < keyvals.length; i += 2)",
    "info" : "ForStatement[4390-4706]:ForStatement[4390-4706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4434-4706]:Block[4434-4706]"
  }, {
    "left" : "String key = keyvals[i];",
    "right" : "String key = keyvals[i];",
    "info" : "VariableDeclarationStatement[4448-4472]:VariableDeclarationStatement[4448-4472]"
  }, {
    "left" : "String value = keyvals[i+1];",
    "right" : "String value = keyvals[i+1];",
    "info" : "VariableDeclarationStatement[4485-4513]:VariableDeclarationStatement[4485-4513]"
  }, {
    "left" : "Validate.notEmpty(key, \"Data key must not be empty\");",
    "right" : "Validate.notEmpty(key, \"Data key must not be empty\");",
    "info" : "ExpressionStatement[4526-4579]:ExpressionStatement[4526-4579]"
  }, {
    "left" : "Validate.notNull(value, \"Data value must not be null\");",
    "right" : "Validate.notNull(value, \"Data value must not be null\");",
    "info" : "ExpressionStatement[4592-4647]:ExpressionStatement[4592-4647]"
  }, {
    "left" : "req.data(KeyVal.create(key, value));",
    "right" : "req.data(KeyVal.create(key, value));",
    "info" : "ExpressionStatement[4660-4696]:ExpressionStatement[4660-4696]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[4715-4727]:ReturnStatement[4715-4727]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4739-4745]:Modifier[4739-4745]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[4746-4756]:SimpleType[4746-4756]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "SimpleName[4757-4761]:SimpleName[4757-4761]"
  }, {
    "left" : "Collection<Connection.KeyVal> data",
    "right" : "Collection<Connection.KeyVal> data",
    "info" : "SingleVariableDeclaration[4762-4796]:SingleVariableDeclaration[4762-4796]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4798-4979]:Block[4798-4979]"
  }, {
    "left" : "Validate.notNull(data, \"Data collection must not be null\");",
    "right" : "Validate.notNull(data, \"Data collection must not be null\");",
    "info" : "ExpressionStatement[4808-4867]:ExpressionStatement[4808-4867]"
  }, {
    "left" : "for (Connection.KeyVal entry: data)",
    "right" : "for (Connection.KeyVal entry: data)",
    "info" : "EnhancedForStatement[4876-4952]:EnhancedForStatement[4876-4952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4912-4952]:Block[4912-4952]"
  }, {
    "left" : "req.data(entry);",
    "right" : "req.data(entry);",
    "info" : "ExpressionStatement[4926-4942]:ExpressionStatement[4926-4942]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[4961-4973]:ReturnStatement[4961-4973]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4985-4991]:Modifier[4985-4991]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[4992-5002]:SimpleType[4992-5002]"
  }, {
    "left" : "header",
    "right" : "header",
    "info" : "SimpleName[5003-5009]:SimpleName[5003-5009]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[5010-5021]:SingleVariableDeclaration[5010-5021]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[5023-5035]:SingleVariableDeclaration[5023-5035]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5037-5098]:Block[5037-5098]"
  }, {
    "left" : "req.header(name, value);",
    "right" : "req.header(name, value);",
    "info" : "ExpressionStatement[5047-5071]:ExpressionStatement[5047-5071]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5080-5092]:ReturnStatement[5080-5092]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5104-5110]:Modifier[5104-5110]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[5111-5121]:SimpleType[5111-5121]"
  }, {
    "left" : "cookie",
    "right" : "cookie",
    "info" : "SimpleName[5122-5128]:SimpleName[5122-5128]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[5129-5140]:SingleVariableDeclaration[5129-5140]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[5142-5154]:SingleVariableDeclaration[5142-5154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5156-5217]:Block[5156-5217]"
  }, {
    "left" : "req.cookie(name, value);",
    "right" : "req.cookie(name, value);",
    "info" : "ExpressionStatement[5166-5190]:ExpressionStatement[5166-5190]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5199-5211]:ReturnStatement[5199-5211]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5223-5229]:Modifier[5223-5229]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[5230-5240]:SimpleType[5230-5240]"
  }, {
    "left" : "cookies",
    "right" : "cookies",
    "info" : "SimpleName[5241-5248]:SimpleName[5241-5248]"
  }, {
    "left" : "Map<String, String> cookies",
    "right" : "Map<String, String> cookies",
    "info" : "SingleVariableDeclaration[5249-5276]:SingleVariableDeclaration[5249-5276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5278-5509]:Block[5278-5509]"
  }, {
    "left" : "Validate.notNull(cookies, \"Cookie map must not be null\");",
    "right" : "Validate.notNull(cookies, \"Cookie map must not be null\");",
    "info" : "ExpressionStatement[5288-5345]:ExpressionStatement[5288-5345]"
  }, {
    "left" : "for (Map.Entry<String, String> entry : cookies.entrySet())",
    "right" : "for (Map.Entry<String, String> entry : cookies.entrySet())",
    "info" : "EnhancedForStatement[5354-5482]:EnhancedForStatement[5354-5482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5413-5482]:Block[5413-5482]"
  }, {
    "left" : "req.cookie(entry.getKey(), entry.getValue());",
    "right" : "req.cookie(entry.getKey(), entry.getValue());",
    "info" : "ExpressionStatement[5427-5472]:ExpressionStatement[5427-5472]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5491-5503]:ReturnStatement[5491-5503]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5515-5521]:Modifier[5515-5521]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[5522-5532]:SimpleType[5522-5532]"
  }, {
    "left" : "parser",
    "right" : "parser",
    "info" : "SimpleName[5533-5539]:SimpleName[5533-5539]"
  }, {
    "left" : "Parser parser",
    "right" : "Parser parser",
    "info" : "SingleVariableDeclaration[5540-5553]:SingleVariableDeclaration[5540-5553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5555-5611]:Block[5555-5611]"
  }, {
    "left" : "req.parser(parser);",
    "right" : "req.parser(parser);",
    "info" : "ExpressionStatement[5565-5584]:ExpressionStatement[5565-5584]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5593-5605]:ReturnStatement[5593-5605]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5617-5623]:Modifier[5617-5623]"
  }, {
    "left" : "Document",
    "right" : "Document",
    "info" : "SimpleType[5624-5632]:SimpleType[5624-5632]"
  }, {
    "left" : "get",
    "right" : "get",
    "info" : "SimpleName[5633-5636]:SimpleName[5633-5636]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5646-5657]:SimpleType[5646-5657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5658-5744]:Block[5658-5744]"
  }, {
    "left" : "req.method(Method.GET);",
    "right" : "req.method(Method.GET);",
    "info" : "ExpressionStatement[5668-5691]:ExpressionStatement[5668-5691]"
  }, {
    "left" : "execute();",
    "right" : "execute();",
    "info" : "ExpressionStatement[5700-5710]:ExpressionStatement[5700-5710]"
  }, {
    "left" : "return res.parse();",
    "right" : "return res.parse();",
    "info" : "ReturnStatement[5719-5738]:ReturnStatement[5719-5738]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5750-5756]:Modifier[5750-5756]"
  }, {
    "left" : "Document",
    "right" : "Document",
    "info" : "SimpleType[5757-5765]:SimpleType[5757-5765]"
  }, {
    "left" : "post",
    "right" : "post",
    "info" : "SimpleName[5766-5770]:SimpleName[5766-5770]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5780-5791]:SimpleType[5780-5791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5792-5879]:Block[5792-5879]"
  }, {
    "left" : "req.method(Method.POST);",
    "right" : "req.method(Method.POST);",
    "info" : "ExpressionStatement[5802-5826]:ExpressionStatement[5802-5826]"
  }, {
    "left" : "execute();",
    "right" : "execute();",
    "info" : "ExpressionStatement[5835-5845]:ExpressionStatement[5835-5845]"
  }, {
    "left" : "return res.parse();",
    "right" : "return res.parse();",
    "info" : "ReturnStatement[5854-5873]:ReturnStatement[5854-5873]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5885-5891]:Modifier[5885-5891]"
  }, {
    "left" : "Connection.Response",
    "right" : "Connection.Response",
    "info" : "SimpleType[5892-5911]:SimpleType[5892-5911]"
  }, {
    "left" : "execute",
    "right" : "execute",
    "info" : "SimpleName[5912-5919]:SimpleName[5912-5919]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5929-5940]:SimpleType[5929-5940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5941-6005]:Block[5941-6005]"
  }, {
    "left" : "res = Response.execute(req);",
    "right" : "res = Response.execute(req);",
    "info" : "ExpressionStatement[5951-5979]:ExpressionStatement[5951-5979]"
  }, {
    "left" : "return res;",
    "right" : "return res;",
    "info" : "ReturnStatement[5988-5999]:ReturnStatement[5988-5999]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6011-6017]:Modifier[6011-6017]"
  }, {
    "left" : "Connection.Request",
    "right" : "Connection.Request",
    "info" : "SimpleType[6018-6036]:SimpleType[6018-6036]"
  }, {
    "left" : "request",
    "right" : "request",
    "info" : "SimpleName[6037-6044]:SimpleName[6037-6044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6047-6074]:Block[6047-6074]"
  }, {
    "left" : "return req;",
    "right" : "return req;",
    "info" : "ReturnStatement[6057-6068]:ReturnStatement[6057-6068]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6080-6086]:Modifier[6080-6086]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[6087-6097]:SimpleType[6087-6097]"
  }, {
    "left" : "request",
    "right" : "request",
    "info" : "SimpleName[6098-6105]:SimpleName[6098-6105]"
  }, {
    "left" : "Connection.Request request",
    "right" : "Connection.Request request",
    "info" : "SingleVariableDeclaration[6106-6132]:SingleVariableDeclaration[6106-6132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6134-6185]:Block[6134-6185]"
  }, {
    "left" : "req = request;",
    "right" : "req = request;",
    "info" : "ExpressionStatement[6144-6158]:ExpressionStatement[6144-6158]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[6167-6179]:ReturnStatement[6167-6179]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6191-6197]:Modifier[6191-6197]"
  }, {
    "left" : "Connection.Response",
    "right" : "Connection.Response",
    "info" : "SimpleType[6198-6217]:SimpleType[6198-6217]"
  }, {
    "left" : "response",
    "right" : "response",
    "info" : "SimpleName[6218-6226]:SimpleName[6218-6226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6229-6256]:Block[6229-6256]"
  }, {
    "left" : "return res;",
    "right" : "return res;",
    "info" : "ReturnStatement[6239-6250]:ReturnStatement[6239-6250]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6262-6268]:Modifier[6262-6268]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[6269-6279]:SimpleType[6269-6279]"
  }, {
    "left" : "response",
    "right" : "response",
    "info" : "SimpleName[6280-6288]:SimpleName[6280-6288]"
  }, {
    "left" : "Connection.Response response",
    "right" : "Connection.Response response",
    "info" : "SingleVariableDeclaration[6289-6317]:SingleVariableDeclaration[6289-6317]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6319-6371]:Block[6319-6371]"
  }, {
    "left" : "res = response;",
    "right" : "res = response;",
    "info" : "ExpressionStatement[6329-6344]:ExpressionStatement[6329-6344]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[6353-6365]:ReturnStatement[6353-6365]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6377-6383]:Modifier[6377-6383]"
  }, {
    "left" : "Connection",
    "right" : "Connection",
    "info" : "SimpleType[6384-6394]:SimpleType[6384-6394]"
  }, {
    "left" : "postDataCharset",
    "right" : "postDataCharset",
    "info" : "SimpleName[6395-6410]:SimpleName[6395-6410]"
  }, {
    "left" : "String charset",
    "right" : "String charset",
    "info" : "SingleVariableDeclaration[6411-6425]:SingleVariableDeclaration[6411-6425]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6427-6493]:Block[6427-6493]"
  }, {
    "left" : "req.postDataCharset(charset);",
    "right" : "req.postDataCharset(charset);",
    "info" : "ExpressionStatement[6437-6466]:ExpressionStatement[6437-6466]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[6475-6487]:ReturnStatement[6475-6487]"
  }, {
    "left" : "@SuppressWarnings({\"unchecked\"})",
    "right" : "@SuppressWarnings({\"unchecked\"})",
    "info" : "SingleMemberAnnotation[6499-6531]:SingleMemberAnnotation[6499-6531]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[6536-6543]:Modifier[6536-6543]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6544-6550]:Modifier[6544-6550]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[6551-6559]:Modifier[6551-6559]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[6560-6565]:TYPE_DECLARATION_KIND[6560-6565]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[6753-6760]:Modifier[6753-6760]"
  }, {
    "left" : "Base",
    "right" : "Base",
    "info" : "SimpleName[6761-6765]:SimpleName[6761-6765]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6768-6897]:Block[6768-6897]"
  }, {
    "left" : "headers = new LinkedHashMap<String, String>();",
    "right" : "headers = new LinkedHashMap<String, String>();",
    "info" : "ExpressionStatement[6782-6828]:ExpressionStatement[6782-6828]"
  }, {
    "left" : "cookies = new LinkedHashMap<String, String>();",
    "right" : "cookies = new LinkedHashMap<String, String>();",
    "info" : "ExpressionStatement[6841-6887]:ExpressionStatement[6841-6887]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6907-6913]:Modifier[6907-6913]"
  }, {
    "left" : "URL",
    "right" : "URL",
    "info" : "SimpleType[6914-6917]:SimpleType[6914-6917]"
  }, {
    "left" : "url",
    "right" : "url",
    "info" : "SimpleName[6918-6921]:SimpleName[6918-6921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6924-6959]:Block[6924-6959]"
  }, {
    "left" : "return url;",
    "right" : "return url;",
    "info" : "ReturnStatement[6938-6949]:ReturnStatement[6938-6949]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6969-6975]:Modifier[6969-6975]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[6976-6977]:SimpleType[6976-6977]"
  }, {
    "left" : "url",
    "right" : "url",
    "info" : "SimpleName[6978-6981]:SimpleName[6978-6981]"
  }, {
    "left" : "URL url",
    "right" : "URL url",
    "info" : "SingleVariableDeclaration[6982-6989]:SingleVariableDeclaration[6982-6989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6991-7118]:Block[6991-7118]"
  }, {
    "left" : "Validate.notNull(url, \"URL must not be null\");",
    "right" : "Validate.notNull(url, \"URL must not be null\");",
    "info" : "ExpressionStatement[7005-7051]:ExpressionStatement[7005-7051]"
  }, {
    "left" : "this.url = url;",
    "right" : "this.url = url;",
    "info" : "ExpressionStatement[7064-7079]:ExpressionStatement[7064-7079]"
  }, {
    "left" : "return (T) this;",
    "right" : "return (T) this;",
    "info" : "ReturnStatement[7092-7108]:ReturnStatement[7092-7108]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7128-7134]:Modifier[7128-7134]"
  }, {
    "left" : "Method",
    "right" : "Method",
    "info" : "SimpleType[7135-7141]:SimpleType[7135-7141]"
  }, {
    "left" : "method",
    "right" : "method",
    "info" : "SimpleName[7142-7148]:SimpleName[7142-7148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7151-7189]:Block[7151-7189]"
  }, {
    "left" : "return method;",
    "right" : "return method;",
    "info" : "ReturnStatement[7165-7179]:ReturnStatement[7165-7179]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7199-7205]:Modifier[7199-7205]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[7206-7207]:SimpleType[7206-7207]"
  }, {
    "left" : "method",
    "right" : "method",
    "info" : "SimpleName[7208-7214]:SimpleName[7208-7214]"
  }, {
    "left" : "Method method",
    "right" : "Method method",
    "info" : "SingleVariableDeclaration[7215-7228]:SingleVariableDeclaration[7215-7228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7230-7369]:Block[7230-7369]"
  }, {
    "left" : "Validate.notNull(method, \"Method must not be null\");",
    "right" : "Validate.notNull(method, \"Method must not be null\");",
    "info" : "ExpressionStatement[7244-7296]:ExpressionStatement[7244-7296]"
  }, {
    "left" : "this.method = method;",
    "right" : "this.method = method;",
    "info" : "ExpressionStatement[7309-7330]:ExpressionStatement[7309-7330]"
  }, {
    "left" : "return (T) this;",
    "right" : "return (T) this;",
    "info" : "ReturnStatement[7343-7359]:ReturnStatement[7343-7359]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7379-7385]:Modifier[7379-7385]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[7386-7392]:SimpleType[7386-7392]"
  }, {
    "left" : "header",
    "right" : "header",
    "info" : "SimpleName[7393-7399]:SimpleName[7393-7399]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[7400-7411]:SingleVariableDeclaration[7400-7411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7413-7543]:Block[7413-7543]"
  }, {
    "left" : "Validate.notNull(name, \"Header name must not be null\");",
    "right" : "Validate.notNull(name, \"Header name must not be null\");",
    "info" : "ExpressionStatement[7427-7482]:ExpressionStatement[7427-7482]"
  }, {
    "left" : "return getHeaderCaseInsensitive(name);",
    "right" : "return getHeaderCaseInsensitive(name);",
    "info" : "ReturnStatement[7495-7533]:ReturnStatement[7495-7533]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7553-7559]:Modifier[7553-7559]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[7560-7561]:SimpleType[7560-7561]"
  }, {
    "left" : "header",
    "right" : "header",
    "info" : "SimpleName[7562-7568]:SimpleName[7562-7568]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[7569-7580]:SingleVariableDeclaration[7569-7580]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[7582-7594]:SingleVariableDeclaration[7582-7594]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7596-7915]:Block[7596-7915]"
  }, {
    "left" : "Validate.notEmpty(name, \"Header name must not be empty\");",
    "right" : "Validate.notEmpty(name, \"Header name must not be empty\");",
    "info" : "ExpressionStatement[7610-7667]:ExpressionStatement[7610-7667]"
  }, {
    "left" : "Validate.notNull(value, \"Header value must not be null\");",
    "right" : "Validate.notNull(value, \"Header value must not be null\");",
    "info" : "ExpressionStatement[7680-7737]:ExpressionStatement[7680-7737]"
  }, {
    "left" : "removeHeader(name);",
    "right" : "removeHeader(name);",
    "info" : "ExpressionStatement[7750-7769]:ExpressionStatement[7750-7769]"
  }, {
    "left" : "headers.put(name, value);",
    "right" : "headers.put(name, value);",
    "info" : "ExpressionStatement[7851-7876]:ExpressionStatement[7851-7876]"
  }, {
    "left" : "return (T) this;",
    "right" : "return (T) this;",
    "info" : "ReturnStatement[7889-7905]:ReturnStatement[7889-7905]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7925-7931]:Modifier[7925-7931]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7932-7939]:PrimitiveType[7932-7939]"
  }, {
    "left" : "hasHeader",
    "right" : "hasHeader",
    "info" : "SimpleName[7940-7949]:SimpleName[7940-7949]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[7950-7961]:SingleVariableDeclaration[7950-7961]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7963-8103]:Block[7963-8103]"
  }, {
    "left" : "Validate.notEmpty(name, \"Header name must not be empty\");",
    "right" : "Validate.notEmpty(name, \"Header name must not be empty\");",
    "info" : "ExpressionStatement[7977-8034]:ExpressionStatement[7977-8034]"
  }, {
    "left" : "return getHeaderCaseInsensitive(name) != null;",
    "right" : "return getHeaderCaseInsensitive(name) != null;",
    "info" : "ReturnStatement[8047-8093]:ReturnStatement[8047-8093]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8217-8223]:Modifier[8217-8223]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[8224-8231]:PrimitiveType[8224-8231]"
  }, {
    "left" : "hasHeaderWithValue",
    "right" : "hasHeaderWithValue",
    "info" : "SimpleName[8232-8250]:SimpleName[8232-8250]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[8251-8262]:SingleVariableDeclaration[8251-8262]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[8264-8276]:SingleVariableDeclaration[8264-8276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8278-8365]:Block[8278-8365]"
  }, {
    "left" : "return hasHeader(name) && header(name).equalsIgnoreCase(value);",
    "right" : "return hasHeader(name) && header(name).equalsIgnoreCase(value);",
    "info" : "ReturnStatement[8292-8355]:ReturnStatement[8292-8355]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8375-8381]:Modifier[8375-8381]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[8382-8383]:SimpleType[8382-8383]"
  }, {
    "left" : "removeHeader",
    "right" : "removeHeader",
    "info" : "SimpleName[8384-8396]:SimpleName[8384-8396]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[8397-8408]:SingleVariableDeclaration[8397-8408]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8410-8722]:Block[8410-8722]"
  }, {
    "left" : "Validate.notEmpty(name, \"Header name must not be empty\");",
    "right" : "Validate.notEmpty(name, \"Header name must not be empty\");",
    "info" : "ExpressionStatement[8424-8481]:ExpressionStatement[8424-8481]"
  }, {
    "left" : "Map.Entry<String, String> entry = scanHeaders(name);",
    "right" : "Map.Entry<String, String> entry = scanHeaders(name);",
    "info" : "VariableDeclarationStatement[8494-8546]:VariableDeclarationStatement[8494-8546]"
  }, {
    "left" : "if (entry != null)",
    "right" : "if (entry != null)",
    "info" : "IfStatement[8593-8659]:IfStatement[8593-8659]"
  }, {
    "left" : "headers.remove(entry.getKey());",
    "right" : "headers.remove(entry.getKey());",
    "info" : "ExpressionStatement[8628-8659]:ExpressionStatement[8628-8659]"
  }, {
    "left" : "return (T) this;",
    "right" : "return (T) this;",
    "info" : "ReturnStatement[8696-8712]:ReturnStatement[8696-8712]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8732-8738]:Modifier[8732-8738]"
  }, {
    "left" : "Map<String, String>",
    "right" : "Map<String, String>",
    "info" : "ParameterizedType[8739-8758]:ParameterizedType[8739-8758]"
  }, {
    "left" : "headers",
    "right" : "headers",
    "info" : "SimpleName[8759-8766]:SimpleName[8759-8766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8769-8808]:Block[8769-8808]"
  }, {
    "left" : "return headers;",
    "right" : "return headers;",
    "info" : "ReturnStatement[8783-8798]:ReturnStatement[8783-8798]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[8818-8825]:Modifier[8818-8825]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[8826-8832]:SimpleType[8826-8832]"
  }, {
    "left" : "getHeaderCaseInsensitive",
    "right" : "getHeaderCaseInsensitive",
    "info" : "SimpleName[8833-8857]:SimpleName[8833-8857]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[8858-8869]:SingleVariableDeclaration[8858-8869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8871-9397]:Block[8871-9397]"
  }, {
    "left" : "Validate.notNull(name, \"Header name must not be null\");",
    "right" : "Validate.notNull(name, \"Header name must not be null\");",
    "info" : "ExpressionStatement[8885-8940]:ExpressionStatement[8885-8940]"
  }, {
    "left" : "String value = headers.get(name);",
    "right" : "String value = headers.get(name);",
    "info" : "VariableDeclarationStatement[9043-9076]:VariableDeclarationStatement[9043-9076]"
  }, {
    "left" : "if (value == null)",
    "right" : "if (value == null)",
    "info" : "IfStatement[9089-9164]:IfStatement[9089-9164]"
  }, {
    "left" : "value = headers.get(name.toLowerCase());",
    "right" : "value = headers.get(name.toLowerCase());",
    "info" : "ExpressionStatement[9124-9164]:ExpressionStatement[9124-9164]"
  }, {
    "left" : "if (value == null)",
    "right" : "if (value == null)",
    "info" : "IfStatement[9177-9361]:IfStatement[9177-9361]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9196-9361]:Block[9196-9361]"
  }, {
    "left" : "Map.Entry<String, String> entry = scanHeaders(name);",
    "right" : "Map.Entry<String, String> entry = scanHeaders(name);",
    "info" : "VariableDeclarationStatement[9214-9266]:VariableDeclarationStatement[9214-9266]"
  }, {
    "left" : "if (entry != null)",
    "right" : "if (entry != null)",
    "info" : "IfStatement[9283-9347]:IfStatement[9283-9347]"
  }, {
    "left" : "value = entry.getValue();",
    "right" : "value = entry.getValue();",
    "info" : "ExpressionStatement[9322-9347]:ExpressionStatement[9322-9347]"
  }, {
    "left" : "return value;",
    "right" : "return value;",
    "info" : "ReturnStatement[9374-9387]:ReturnStatement[9374-9387]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[9407-9414]:Modifier[9407-9414]"
  }, {
    "left" : "Map.Entry<String, String>",
    "right" : "Map.Entry<String, String>",
    "info" : "ParameterizedType[9415-9440]:ParameterizedType[9415-9440]"
  }, {
    "left" : "scanHeaders",
    "right" : "scanHeaders",
    "info" : "SimpleName[9441-9452]:SimpleName[9441-9452]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[9453-9464]:SingleVariableDeclaration[9453-9464]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9466-9728]:Block[9466-9728]"
  }, {
    "left" : "String lc = name.toLowerCase();",
    "right" : "String lc = name.toLowerCase();",
    "info" : "VariableDeclarationStatement[9480-9511]:VariableDeclarationStatement[9480-9511]"
  }, {
    "left" : "for (Map.Entry<String, String> entry : headers.entrySet())",
    "right" : "for (Map.Entry<String, String> entry : headers.entrySet())",
    "info" : "EnhancedForStatement[9524-9693]:EnhancedForStatement[9524-9693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9583-9693]:Block[9583-9693]"
  }, {
    "left" : "if (entry.getKey().toLowerCase().equals(lc))",
    "right" : "if (entry.getKey().toLowerCase().equals(lc))",
    "info" : "IfStatement[9601-9679]:IfStatement[9601-9679]"
  }, {
    "left" : "return entry;",
    "right" : "return entry;",
    "info" : "ReturnStatement[9666-9679]:ReturnStatement[9666-9679]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[9706-9718]:ReturnStatement[9706-9718]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9738-9744]:Modifier[9738-9744]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[9745-9751]:SimpleType[9745-9751]"
  }, {
    "left" : "cookie",
    "right" : "cookie",
    "info" : "SimpleName[9752-9758]:SimpleName[9752-9758]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[9759-9770]:SingleVariableDeclaration[9759-9770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9772-9891]:Block[9772-9891]"
  }, {
    "left" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "right" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "info" : "ExpressionStatement[9786-9843]:ExpressionStatement[9786-9843]"
  }, {
    "left" : "return cookies.get(name);",
    "right" : "return cookies.get(name);",
    "info" : "ReturnStatement[9856-9881]:ReturnStatement[9856-9881]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9901-9907]:Modifier[9901-9907]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[9908-9909]:SimpleType[9908-9909]"
  }, {
    "left" : "cookie",
    "right" : "cookie",
    "info" : "SimpleName[9910-9916]:SimpleName[9910-9916]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[9917-9928]:SingleVariableDeclaration[9917-9928]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[9930-9942]:SingleVariableDeclaration[9930-9942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9944-10162]:Block[9944-10162]"
  }, {
    "left" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "right" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "info" : "ExpressionStatement[9958-10015]:ExpressionStatement[9958-10015]"
  }, {
    "left" : "Validate.notNull(value, \"Cookie value must not be null\");",
    "right" : "Validate.notNull(value, \"Cookie value must not be null\");",
    "info" : "ExpressionStatement[10028-10085]:ExpressionStatement[10028-10085]"
  }, {
    "left" : "cookies.put(name, value);",
    "right" : "cookies.put(name, value);",
    "info" : "ExpressionStatement[10098-10123]:ExpressionStatement[10098-10123]"
  }, {
    "left" : "return (T) this;",
    "right" : "return (T) this;",
    "info" : "ReturnStatement[10136-10152]:ReturnStatement[10136-10152]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10172-10178]:Modifier[10172-10178]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[10179-10186]:PrimitiveType[10179-10186]"
  }, {
    "left" : "hasCookie",
    "right" : "hasCookie",
    "info" : "SimpleName[10187-10196]:SimpleName[10187-10196]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[10197-10208]:SingleVariableDeclaration[10197-10208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10210-10337]:Block[10210-10337]"
  }, {
    "left" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "right" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "info" : "ExpressionStatement[10224-10281]:ExpressionStatement[10224-10281]"
  }, {
    "left" : "return cookies.containsKey(name);",
    "right" : "return cookies.containsKey(name);",
    "info" : "ReturnStatement[10294-10327]:ReturnStatement[10294-10327]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10347-10353]:Modifier[10347-10353]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[10354-10355]:SimpleType[10354-10355]"
  }, {
    "left" : "removeCookie",
    "right" : "removeCookie",
    "info" : "SimpleName[10356-10368]:SimpleName[10356-10368]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[10369-10380]:SingleVariableDeclaration[10369-10380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10382-10526]:Block[10382-10526]"
  }, {
    "left" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "right" : "Validate.notEmpty(name, \"Cookie name must not be empty\");",
    "info" : "ExpressionStatement[10396-10453]:ExpressionStatement[10396-10453]"
  }, {
    "left" : "cookies.remove(name);",
    "right" : "cookies.remove(name);",
    "info" : "ExpressionStatement[10466-10487]:ExpressionStatement[10466-10487]"
  }, {
    "left" : "return (T) this;",
    "right" : "return (T) this;",
    "info" : "ReturnStatement[10500-10516]:ReturnStatement[10500-10516]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10536-10542]:Modifier[10536-10542]"
  }, {
    "left" : "Map<String, String>",
    "right" : "Map<String, String>",
    "info" : "ParameterizedType[10543-10562]:ParameterizedType[10543-10562]"
  }, {
    "left" : "cookies",
    "right" : "cookies",
    "info" : "SimpleName[10563-10570]:SimpleName[10563-10570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10573-10612]:Block[10573-10612]"
  }, {
    "left" : "return cookies;",
    "right" : "return cookies;",
    "info" : "ReturnStatement[10587-10602]:ReturnStatement[10587-10602]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10624-10630]:Modifier[10624-10630]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10631-10637]:Modifier[10631-10637]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[10638-10643]:TYPE_DECLARATION_KIND[10638-10643]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11259-11266]:Modifier[11259-11266]"
  }, {
    "left" : "Request",
    "right" : "Request",
    "info" : "SimpleName[11267-11274]:SimpleName[11267-11274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11277-11597]:Block[11277-11597]"
  }, {
    "left" : "timeoutMilliseconds = 3000;",
    "right" : "timeoutMilliseconds = 3000;",
    "info" : "ExpressionStatement[11291-11318]:ExpressionStatement[11291-11318]"
  }, {
    "left" : "maxBodySizeBytes = 1024 * 1024;",
    "right" : "maxBodySizeBytes = 1024 * 1024;",
    "info" : "ExpressionStatement[11331-11362]:ExpressionStatement[11331-11362]"
  }, {
    "left" : "followRedirects = true;",
    "right" : "followRedirects = true;",
    "info" : "ExpressionStatement[11382-11405]:ExpressionStatement[11382-11405]"
  }, {
    "left" : "data = new ArrayList<Connection.KeyVal>();",
    "right" : "data = new ArrayList<Connection.KeyVal>();",
    "info" : "ExpressionStatement[11418-11460]:ExpressionStatement[11418-11460]"
  }, {
    "left" : "method = Method.GET;",
    "right" : "method = Method.GET;",
    "info" : "ExpressionStatement[11473-11493]:ExpressionStatement[11473-11493]"
  }, {
    "left" : "headers.put(\"Accept-Encoding\", \"gzip\");",
    "right" : "headers.put(\"Accept-Encoding\", \"gzip\");",
    "info" : "ExpressionStatement[11506-11545]:ExpressionStatement[11506-11545]"
  }, {
    "left" : "parser = Parser.htmlParser();",
    "right" : "parser = Parser.htmlParser();",
    "info" : "ExpressionStatement[11558-11587]:ExpressionStatement[11558-11587]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11607-11613]:Modifier[11607-11613]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[11614-11617]:PrimitiveType[11614-11617]"
  }, {
    "left" : "timeout",
    "right" : "timeout",
    "info" : "SimpleName[11618-11625]:SimpleName[11618-11625]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11628-11679]:Block[11628-11679]"
  }, {
    "left" : "return timeoutMilliseconds;",
    "right" : "return timeoutMilliseconds;",
    "info" : "ReturnStatement[11642-11669]:ReturnStatement[11642-11669]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11689-11695]:Modifier[11689-11695]"
  }, {
    "left" : "Request",
    "right" : "Request",
    "info" : "SimpleType[11696-11703]:SimpleType[11696-11703]"
  }, {
    "left" : "timeout",
    "right" : "timeout",
    "info" : "SimpleName[11704-11711]:SimpleName[11704-11711]"
  }, {
    "left" : "int millis",
    "right" : "int millis",
    "info" : "SingleVariableDeclaration[11712-11722]:SingleVariableDeclaration[11712-11722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11724-11900]:Block[11724-11900]"
  }, {
    "left" : "Validate.isTrue(millis >= 0, \"Timeout milliseconds must be 0 (infinite) or greater\");",
    "right" : "Validate.isTrue(millis >= 0, \"Timeout milliseconds must be 0 (infinite) or greater\");",
    "info" : "ExpressionStatement[11738-11823]:ExpressionStatement[11738-11823]"
  }, {
    "left" : "timeoutMilliseconds = millis;",
    "right" : "timeoutMilliseconds = millis;",
    "info" : "ExpressionStatement[11836-11865]:ExpressionStatement[11836-11865]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[11878-11890]:ReturnStatement[11878-11890]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11910-11916]:Modifier[11910-11916]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[11917-11920]:PrimitiveType[11917-11920]"
  }, {
    "left" : "maxBodySize",
    "right" : "maxBodySize",
    "info" : "SimpleName[11921-11932]:SimpleName[11921-11932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11935-11983]:Block[11935-11983]"
  }, {
    "left" : "return maxBodySizeBytes;",
    "right" : "return maxBodySizeBytes;",
    "info" : "ReturnStatement[11949-11973]:ReturnStatement[11949-11973]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11993-11999]:Modifier[11993-11999]"
  }, {
    "left" : "Connection.Request",
    "right" : "Connection.Request",
    "info" : "SimpleType[12000-12018]:SimpleType[12000-12018]"
  }, {
    "left" : "maxBodySize",
    "right" : "maxBodySize",
    "info" : "SimpleName[12019-12030]:SimpleName[12019-12030]"
  }, {
    "left" : "int bytes",
    "right" : "int bytes",
    "info" : "SingleVariableDeclaration[12031-12040]:SingleVariableDeclaration[12031-12040]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12042-12200]:Block[12042-12200]"
  }, {
    "left" : "Validate.isTrue(bytes >= 0, \"maxSize must be 0 (unlimited) or larger\");",
    "right" : "Validate.isTrue(bytes >= 0, \"maxSize must be 0 (unlimited) or larger\");",
    "info" : "ExpressionStatement[12056-12127]:ExpressionStatement[12056-12127]"
  }, {
    "left" : "maxBodySizeBytes = bytes;",
    "right" : "maxBodySizeBytes = bytes;",
    "info" : "ExpressionStatement[12140-12165]:ExpressionStatement[12140-12165]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[12178-12190]:ReturnStatement[12178-12190]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12210-12216]:Modifier[12210-12216]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12217-12224]:PrimitiveType[12217-12224]"
  }, {
    "left" : "followRedirects",
    "right" : "followRedirects",
    "info" : "SimpleName[12225-12240]:SimpleName[12225-12240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12243-12290]:Block[12243-12290]"
  }, {
    "left" : "return followRedirects;",
    "right" : "return followRedirects;",
    "info" : "ReturnStatement[12257-12280]:ReturnStatement[12257-12280]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12300-12306]:Modifier[12300-12306]"
  }, {
    "left" : "Connection.Request",
    "right" : "Connection.Request",
    "info" : "SimpleType[12307-12325]:SimpleType[12307-12325]"
  }, {
    "left" : "followRedirects",
    "right" : "followRedirects",
    "info" : "SimpleName[12326-12341]:SimpleName[12326-12341]"
  }, {
    "left" : "boolean followRedirects",
    "right" : "boolean followRedirects",
    "info" : "SingleVariableDeclaration[12342-12365]:SingleVariableDeclaration[12342-12365]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12367-12455]:Block[12367-12455]"
  }, {
    "left" : "this.followRedirects = followRedirects;",
    "right" : "this.followRedirects = followRedirects;",
    "info" : "ExpressionStatement[12381-12420]:ExpressionStatement[12381-12420]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[12433-12445]:ReturnStatement[12433-12445]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12465-12471]:Modifier[12465-12471]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12472-12479]:PrimitiveType[12472-12479]"
  }, {
    "left" : "ignoreHttpErrors",
    "right" : "ignoreHttpErrors",
    "info" : "SimpleName[12480-12496]:SimpleName[12480-12496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12499-12547]:Block[12499-12547]"
  }, {
    "left" : "return ignoreHttpErrors;",
    "right" : "return ignoreHttpErrors;",
    "info" : "ReturnStatement[12513-12537]:ReturnStatement[12513-12537]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12557-12563]:Modifier[12557-12563]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12564-12571]:PrimitiveType[12564-12571]"
  }, {
    "left" : "validateTLSCertificates",
    "right" : "validateTLSCertificates",
    "info" : "SimpleName[12572-12595]:SimpleName[12572-12595]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12598-12653]:Block[12598-12653]"
  }, {
    "left" : "return validateTSLCertificates;",
    "right" : "return validateTSLCertificates;",
    "info" : "ReturnStatement[12612-12643]:ReturnStatement[12612-12643]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12663-12669]:Modifier[12663-12669]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12670-12674]:PrimitiveType[12670-12674]"
  }, {
    "left" : "validateTLSCertificates",
    "right" : "validateTLSCertificates",
    "info" : "SimpleName[12675-12698]:SimpleName[12675-12698]"
  }, {
    "left" : "boolean value",
    "right" : "boolean value",
    "info" : "SingleVariableDeclaration[12699-12712]:SingleVariableDeclaration[12699-12712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12714-12770]:Block[12714-12770]"
  }, {
    "left" : "validateTSLCertificates = value;",
    "right" : "validateTSLCertificates = value;",
    "info" : "ExpressionStatement[12728-12760]:ExpressionStatement[12728-12760]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12780-12786]:Modifier[12780-12786]"
  }, {
    "left" : "Connection.Request",
    "right" : "Connection.Request",
    "info" : "SimpleType[12787-12805]:SimpleType[12787-12805]"
  }, {
    "left" : "ignoreHttpErrors",
    "right" : "ignoreHttpErrors",
    "info" : "SimpleName[12806-12822]:SimpleName[12806-12822]"
  }, {
    "left" : "boolean ignoreHttpErrors",
    "right" : "boolean ignoreHttpErrors",
    "info" : "SingleVariableDeclaration[12823-12847]:SingleVariableDeclaration[12823-12847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12849-12939]:Block[12849-12939]"
  }, {
    "left" : "this.ignoreHttpErrors = ignoreHttpErrors;",
    "right" : "this.ignoreHttpErrors = ignoreHttpErrors;",
    "info" : "ExpressionStatement[12863-12904]:ExpressionStatement[12863-12904]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[12917-12929]:ReturnStatement[12917-12929]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12949-12955]:Modifier[12949-12955]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12956-12963]:PrimitiveType[12956-12963]"
  }, {
    "left" : "ignoreContentType",
    "right" : "ignoreContentType",
    "info" : "SimpleName[12964-12981]:SimpleName[12964-12981]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12984-13033]:Block[12984-13033]"
  }, {
    "left" : "return ignoreContentType;",
    "right" : "return ignoreContentType;",
    "info" : "ReturnStatement[12998-13023]:ReturnStatement[12998-13023]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13043-13049]:Modifier[13043-13049]"
  }, {
    "left" : "Connection.Request",
    "right" : "Connection.Request",
    "info" : "SimpleType[13050-13068]:SimpleType[13050-13068]"
  }, {
    "left" : "ignoreContentType",
    "right" : "ignoreContentType",
    "info" : "SimpleName[13069-13086]:SimpleName[13069-13086]"
  }, {
    "left" : "boolean ignoreContentType",
    "right" : "boolean ignoreContentType",
    "info" : "SingleVariableDeclaration[13087-13112]:SingleVariableDeclaration[13087-13112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13114-13206]:Block[13114-13206]"
  }, {
    "left" : "this.ignoreContentType = ignoreContentType;",
    "right" : "this.ignoreContentType = ignoreContentType;",
    "info" : "ExpressionStatement[13128-13171]:ExpressionStatement[13128-13171]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[13184-13196]:ReturnStatement[13184-13196]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13216-13222]:Modifier[13216-13222]"
  }, {
    "left" : "Request",
    "right" : "Request",
    "info" : "SimpleType[13223-13230]:SimpleType[13223-13230]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "SimpleName[13231-13235]:SimpleName[13231-13235]"
  }, {
    "left" : "Connection.KeyVal keyval",
    "right" : "Connection.KeyVal keyval",
    "info" : "SingleVariableDeclaration[13236-13260]:SingleVariableDeclaration[13236-13260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13262-13394]:Block[13262-13394]"
  }, {
    "left" : "Validate.notNull(keyval, \"Key val must not be null\");",
    "right" : "Validate.notNull(keyval, \"Key val must not be null\");",
    "info" : "ExpressionStatement[13276-13329]:ExpressionStatement[13276-13329]"
  }, {
    "left" : "data.add(keyval);",
    "right" : "data.add(keyval);",
    "info" : "ExpressionStatement[13342-13359]:ExpressionStatement[13342-13359]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[13372-13384]:ReturnStatement[13372-13384]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13404-13410]:Modifier[13404-13410]"
  }, {
    "left" : "Collection<Connection.KeyVal>",
    "right" : "Collection<Connection.KeyVal>",
    "info" : "ParameterizedType[13411-13440]:ParameterizedType[13411-13440]"
  }, {
    "left" : "data",
    "right" : "data",
    "info" : "SimpleName[13441-13445]:SimpleName[13441-13445]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13448-13484]:Block[13448-13484]"
  }, {
    "left" : "return data;",
    "right" : "return data;",
    "info" : "ReturnStatement[13462-13474]:ReturnStatement[13462-13474]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13494-13500]:Modifier[13494-13500]"
  }, {
    "left" : "Request",
    "right" : "Request",
    "info" : "SimpleType[13501-13508]:SimpleType[13501-13508]"
  }, {
    "left" : "parser",
    "right" : "parser",
    "info" : "SimpleName[13509-13515]:SimpleName[13509-13515]"
  }, {
    "left" : "Parser parser",
    "right" : "Parser parser",
    "info" : "SingleVariableDeclaration[13516-13529]:SingleVariableDeclaration[13516-13529]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13531-13635]:Block[13531-13635]"
  }, {
    "left" : "this.parser = parser;",
    "right" : "this.parser = parser;",
    "info" : "ExpressionStatement[13545-13566]:ExpressionStatement[13545-13566]"
  }, {
    "left" : "parserDefined = true;",
    "right" : "parserDefined = true;",
    "info" : "ExpressionStatement[13579-13600]:ExpressionStatement[13579-13600]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[13613-13625]:ReturnStatement[13613-13625]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13645-13651]:Modifier[13645-13651]"
  }, {
    "left" : "Parser",
    "right" : "Parser",
    "info" : "SimpleType[13652-13658]:SimpleType[13652-13658]"
  }, {
    "left" : "parser",
    "right" : "parser",
    "info" : "SimpleName[13659-13665]:SimpleName[13659-13665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13668-13706]:Block[13668-13706]"
  }, {
    "left" : "return parser;",
    "right" : "return parser;",
    "info" : "ReturnStatement[13682-13696]:ReturnStatement[13682-13696]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13716-13722]:Modifier[13716-13722]"
  }, {
    "left" : "Connection.Request",
    "right" : "Connection.Request",
    "info" : "SimpleType[13723-13741]:SimpleType[13723-13741]"
  }, {
    "left" : "postDataCharset",
    "right" : "postDataCharset",
    "info" : "SimpleName[13742-13757]:SimpleName[13742-13757]"
  }, {
    "left" : "String charset",
    "right" : "String charset",
    "info" : "SingleVariableDeclaration[13758-13772]:SingleVariableDeclaration[13758-13772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13774-14016]:Block[13774-14016]"
  }, {
    "left" : "Validate.notNull(charset, \"Charset must not be null\");",
    "right" : "Validate.notNull(charset, \"Charset must not be null\");",
    "info" : "ExpressionStatement[13788-13842]:ExpressionStatement[13788-13842]"
  }, {
    "left" : "if (!Charset.isSupported(charset))",
    "right" : "if (!Charset.isSupported(charset))",
    "info" : "IfStatement[13855-13937]:IfStatement[13855-13937]"
  }, {
    "left" : "throw new IllegalCharsetNameException(charset);",
    "right" : "throw new IllegalCharsetNameException(charset);",
    "info" : "ThrowStatement[13890-13937]:ThrowStatement[13890-13937]"
  }, {
    "left" : "this.postDataCharset = charset;",
    "right" : "this.postDataCharset = charset;",
    "info" : "ExpressionStatement[13950-13981]:ExpressionStatement[13950-13981]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[13994-14006]:ReturnStatement[13994-14006]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14026-14032]:Modifier[14026-14032]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[14033-14039]:SimpleType[14033-14039]"
  }, {
    "left" : "postDataCharset",
    "right" : "postDataCharset",
    "info" : "SimpleName[14040-14055]:SimpleName[14040-14055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14058-14105]:Block[14058-14105]"
  }, {
    "left" : "return postDataCharset;",
    "right" : "return postDataCharset;",
    "info" : "ReturnStatement[14072-14095]:ReturnStatement[14072-14095]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14117-14123]:Modifier[14117-14123]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14124-14130]:Modifier[14124-14130]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[14131-14136]:TYPE_DECLARATION_KIND[14131-14136]"
  }, {
    "left" : "Response",
    "right" : "Response",
    "info" : "SimpleName[14930-14938]:SimpleName[14930-14938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14941-14973]:Block[14941-14973]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[14955-14963]:SuperConstructorInvocation[14955-14963]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14983-14990]:Modifier[14983-14990]"
  }, {
    "left" : "Response",
    "right" : "Response",
    "info" : "SimpleName[14991-14999]:SimpleName[14991-14999]"
  }, {
    "left" : "Response previousResponse",
    "right" : "Response previousResponse",
    "info" : "SingleVariableDeclaration[15000-15025]:SingleVariableDeclaration[15000-15025]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[15034-15045]:SimpleType[15034-15045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15046-15388]:Block[15046-15388]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[15060-15068]:SuperConstructorInvocation[15060-15068]"
  }, {
    "left" : "if (previousResponse != null)",
    "right" : "if (previousResponse != null)",
    "info" : "IfStatement[15081-15378]:IfStatement[15081-15378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15111-15378]:Block[15111-15378]"
  }, {
    "left" : "numRedirects = previousResponse.numRedirects + 1;",
    "right" : "numRedirects = previousResponse.numRedirects + 1;",
    "info" : "ExpressionStatement[15129-15178]:ExpressionStatement[15129-15178]"
  }, {
    "left" : "if (numRedirects >= MAX_REDIRECTS)",
    "right" : "if (numRedirects >= MAX_REDIRECTS)",
    "info" : "IfStatement[15195-15364]:IfStatement[15195-15364]"
  }, {
    "left" : "throw new IOException(String.format(\"Too many redirects occurred trying to load URL %s\", previousResponse.url()));",
    "right" : "throw new IOException(String.format(\"Too many redirects occurred trying to load URL %s\", previousResponse.url()));",
    "info" : "ThrowStatement[15250-15364]:ThrowStatement[15250-15364]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15398-15404]:Modifier[15398-15404]"
  }, {
    "left" : "Response",
    "right" : "Response",
    "info" : "SimpleType[15405-15413]:SimpleType[15405-15413]"
  }, {
    "left" : "execute",
    "right" : "execute",
    "info" : "SimpleName[15414-15421]:SimpleName[15414-15421]"
  }, {
    "left" : "Connection.Request req",
    "right" : "Connection.Request req",
    "info" : "SingleVariableDeclaration[15422-15444]:SingleVariableDeclaration[15422-15444]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[15453-15464]:SimpleType[15453-15464]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15465-15515]:Block[15465-15515]"
  }, {
    "left" : "return execute(req, null);",
    "right" : "return execute(req, null);",
    "info" : "ReturnStatement[15479-15505]:ReturnStatement[15479-15505]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15525-15531]:Modifier[15525-15531]"
  }, {
    "left" : "Response",
    "right" : "Response",
    "info" : "SimpleType[15532-15540]:SimpleType[15532-15540]"
  }, {
    "left" : "execute",
    "right" : "execute",
    "info" : "SimpleName[15541-15548]:SimpleName[15541-15548]"
  }, {
    "left" : "Connection.Request req",
    "right" : "Connection.Request req",
    "info" : "SingleVariableDeclaration[15549-15571]:SingleVariableDeclaration[15549-15571]"
  }, {
    "left" : "Response previousResponse",
    "right" : "Response previousResponse",
    "info" : "SingleVariableDeclaration[15573-15598]:SingleVariableDeclaration[15573-15598]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[15607-15618]:SimpleType[15607-15618]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15619-20542]:Block[15619-20542]"
  }, {
    "left" : "Validate.notNull(req, \"Request must not be null\");",
    "right" : "Validate.notNull(req, \"Request must not be null\");",
    "info" : "ExpressionStatement[15633-15683]:ExpressionStatement[15633-15683]"
  }, {
    "left" : "String protocol = req.url().getProtocol();",
    "right" : "String protocol = req.url().getProtocol();",
    "info" : "VariableDeclarationStatement[15696-15738]:VariableDeclarationStatement[15696-15738]"
  }, {
    "left" : "if (!protocol.equals(\"http\") && !protocol.equals(\"https\"))",
    "right" : "if (!protocol.equals(\"http\") && !protocol.equals(\"https\"))",
    "info" : "IfStatement[15751-15899]:IfStatement[15751-15899]"
  }, {
    "left" : "throw new MalformedURLException(\"Only http & https protocols supported\");",
    "right" : "throw new MalformedURLException(\"Only http & https protocols supported\");",
    "info" : "ThrowStatement[15826-15899]:ThrowStatement[15826-15899]"
  }, {
    "left" : "String mimeBoundary = null;",
    "right" : "String mimeBoundary = null;",
    "info" : "VariableDeclarationStatement[15961-15988]:VariableDeclarationStatement[15961-15988]"
  }, {
    "left" : "if (!req.method().hasBody() && req.data().size() > 0)",
    "right" : "if (!req.method().hasBody() && req.data().size() > 0)",
    "info" : "IfStatement[16001-16243]:IfStatement[16001-16243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16055-16136]:Block[16055-16136]"
  }, {
    "left" : "serialiseRequestUrl(req);",
    "right" : "serialiseRequestUrl(req);",
    "info" : "ExpressionStatement[16073-16098]:ExpressionStatement[16073-16098]"
  }, {
    "left" : "if (req.method().hasBody())",
    "right" : "if (req.method().hasBody())",
    "info" : "IfStatement[16142-16243]:IfStatement[16142-16243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16170-16243]:Block[16170-16243]"
  }, {
    "left" : "mimeBoundary = setOutputContentType(req);",
    "right" : "mimeBoundary = setOutputContentType(req);",
    "info" : "ExpressionStatement[16188-16229]:ExpressionStatement[16188-16229]"
  }, {
    "left" : "HttpURLConnection conn = createConnection(req);",
    "right" : "HttpURLConnection conn = createConnection(req);",
    "info" : "VariableDeclarationStatement[16256-16303]:VariableDeclarationStatement[16256-16303]"
  }, {
    "left" : "Response res;",
    "right" : "Response res;",
    "info" : "VariableDeclarationStatement[16316-16329]:VariableDeclarationStatement[16316-16329]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[16342-20474]:TryStatement[16342-20474]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16346-20184]:Block[16346-20184]"
  }, {
    "left" : "conn.connect();",
    "right" : "conn.connect();",
    "info" : "ExpressionStatement[16364-16379]:ExpressionStatement[16364-16379]"
  }, {
    "left" : "if (conn.getDoOutput())",
    "right" : "if (conn.getDoOutput())",
    "info" : "IfStatement[16396-16493]:IfStatement[16396-16493]"
  }, {
    "left" : "writePost(req, conn.getOutputStream(), mimeBoundary);",
    "right" : "writePost(req, conn.getOutputStream(), mimeBoundary);",
    "info" : "ExpressionStatement[16440-16493]:ExpressionStatement[16440-16493]"
  }, {
    "left" : "int status = conn.getResponseCode();",
    "right" : "int status = conn.getResponseCode();",
    "info" : "VariableDeclarationStatement[16511-16547]:VariableDeclarationStatement[16511-16547]"
  }, {
    "left" : "res = new Response(previousResponse);",
    "right" : "res = new Response(previousResponse);",
    "info" : "ExpressionStatement[16564-16601]:ExpressionStatement[16564-16601]"
  }, {
    "left" : "res.setupFromConnection(conn, previousResponse);",
    "right" : "res.setupFromConnection(conn, previousResponse);",
    "info" : "ExpressionStatement[16618-16666]:ExpressionStatement[16618-16666]"
  }, {
    "left" : "res.req = req;",
    "right" : "res.req = req;",
    "info" : "ExpressionStatement[16683-16697]:ExpressionStatement[16683-16697]"
  }, {
    "left" : "if (res.hasHeader(LOCATION) && req.followRedirects())",
    "right" : "if (res.hasHeader(LOCATION) && req.followRedirects())",
    "info" : "IfStatement[16795-17674]:IfStatement[16795-17674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16849-17674]:Block[16849-17674]"
  }, {
    "left" : "req.method(Method.GET);",
    "right" : "req.method(Method.GET);",
    "info" : "ExpressionStatement[16871-16894]:ExpressionStatement[16871-16894]"
  }, {
    "left" : "req.data().clear();",
    "right" : "req.data().clear();",
    "info" : "ExpressionStatement[16992-17011]:ExpressionStatement[16992-17011]"
  }, {
    "left" : "String location = res.header(LOCATION);",
    "right" : "String location = res.header(LOCATION);",
    "info" : "VariableDeclarationStatement[17033-17072]:VariableDeclarationStatement[17033-17072]"
  }, {
    "left" : "if (location != null && location.startsWith(\"http:/\") && location.charAt(6) != '/')",
    "right" : "if (location != null && location.startsWith(\"http:/\") && location.charAt(6) != '/')",
    "info" : "IfStatement[17093-17290]:IfStatement[17093-17290]"
  }, {
    "left" : "location = location.substring(6);",
    "right" : "location = location.substring(6);",
    "info" : "ExpressionStatement[17257-17290]:ExpressionStatement[17257-17290]"
  }, {
    "left" : "req.url(StringUtil.resolve(req.url(), encodeUrl(location)));",
    "right" : "req.url(StringUtil.resolve(req.url(), encodeUrl(location)));",
    "info" : "ExpressionStatement[17311-17371]:ExpressionStatement[17311-17371]"
  }, {
    "left" : "for (Map.Entry<String, String> cookie : res.cookies.entrySet())",
    "right" : "for (Map.Entry<String, String> cookie : res.cookies.entrySet())",
    "info" : "EnhancedForStatement[17393-17610]:EnhancedForStatement[17393-17610]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17457-17610]:Block[17457-17610]"
  }, {
    "left" : "req.cookie(cookie.getKey(), cookie.getValue());",
    "right" : "req.cookie(cookie.getKey(), cookie.getValue());",
    "info" : "ExpressionStatement[17541-17588]:ExpressionStatement[17541-17588]"
  }, {
    "left" : "return execute(req, res);",
    "right" : "return execute(req, res);",
    "info" : "ReturnStatement[17631-17656]:ReturnStatement[17631-17656]"
  }, {
    "left" : "if ((status < 200 || status >= 400) && !req.ignoreHttpErrors())",
    "right" : "if ((status < 200 || status >= 400) && !req.ignoreHttpErrors())",
    "info" : "IfStatement[17691-17866]:IfStatement[17691-17866]"
  }, {
    "left" : "throw new HttpStatusException(\"HTTP error fetching URL\", status, req.url().toString());",
    "right" : "throw new HttpStatusException(\"HTTP error fetching URL\", status, req.url().toString());",
    "info" : "ThrowStatement[17779-17866]:ThrowStatement[17779-17866]"
  }, {
    "left" : "String contentType = res.contentType();",
    "right" : "String contentType = res.contentType();",
    "info" : "VariableDeclarationStatement[17988-18027]:VariableDeclarationStatement[17988-18027]"
  }, {
    "left" : "if (contentType != null\n                        && !req.ignoreContentType()\n                        && !contentType.startsWith(\"text/\")\n                        && !xmlContentTypeRxp.matcher(contentType).matches())",
    "right" : "if (contentType != null\n                        && !req.ignoreContentType()\n                        && !contentType.startsWith(\"text/\")\n                        && !xmlContentTypeRxp.matcher(contentType).matches())",
    "info" : "IfStatement[18044-18490]:IfStatement[18044-18490]"
  }, {
    "left" : "throw new UnsupportedMimeTypeException(\"Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml\",\n                            contentType, req.url().toString());",
    "right" : "throw new UnsupportedMimeTypeException(\"Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml\",\n                            contentType, req.url().toString());",
    "info" : "ThrowStatement[18303-18490]:ThrowStatement[18303-18490]"
  }, {
    "left" : "if (contentType != null && xmlContentTypeRxp.matcher(contentType).matches())",
    "right" : "if (contentType != null && xmlContentTypeRxp.matcher(contentType).matches())",
    "info" : "IfStatement[18609-18988]:IfStatement[18609-18988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18686-18988]:Block[18686-18988]"
  }, {
    "left" : "if (req instanceof HttpConnection.Request && !((Request) req).parserDefined)",
    "right" : "if (req instanceof HttpConnection.Request && !((Request) req).parserDefined)",
    "info" : "IfStatement[18814-18970]:IfStatement[18814-18970]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18891-18970]:Block[18891-18970]"
  }, {
    "left" : "req.parser(Parser.xmlParser());",
    "right" : "req.parser(Parser.xmlParser());",
    "info" : "ExpressionStatement[18917-18948]:ExpressionStatement[18917-18948]"
  }, {
    "left" : "res.charset = DataUtil.getCharsetFromContentType(res.contentType);",
    "right" : "res.charset = DataUtil.getCharsetFromContentType(res.contentType);",
    "info" : "ExpressionStatement[19006-19072]:ExpressionStatement[19006-19072]"
  }, {
    "left" : "if (conn.getContentLength() != 0)",
    "right" : "if (conn.getContentLength() != 0)",
    "info" : "IfStatement[19135-20170]:IfStatement[19135-20170]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19169-20082]:Block[19169-20082]"
  }, {
    "left" : "InputStream bodyStream = null;",
    "right" : "InputStream bodyStream = null;",
    "info" : "VariableDeclarationStatement[19305-19335]:VariableDeclarationStatement[19305-19335]"
  }, {
    "left" : "InputStream dataStream = null;",
    "right" : "InputStream dataStream = null;",
    "info" : "VariableDeclarationStatement[19356-19386]:VariableDeclarationStatement[19356-19386]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[19407-20064]:TryStatement[19407-20064]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19411-19896]:Block[19411-19896]"
  }, {
    "left" : "dataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();",
    "right" : "dataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();",
    "info" : "ExpressionStatement[19437-19528]:ExpressionStatement[19437-19528]"
  }, {
    "left" : "bodyStream = res.hasHeaderWithValue(CONTENT_ENCODING, \"gzip\") ?\n                                new BufferedInputStream(new GZIPInputStream(dataStream)) :\n                                new BufferedInputStream(dataStream);",
    "right" : "bodyStream = res.hasHeaderWithValue(CONTENT_ENCODING, \"gzip\") ?\n                                new BufferedInputStream(new GZIPInputStream(dataStream)) :\n                                new BufferedInputStream(dataStream);",
    "info" : "ExpressionStatement[19553-19776]:ExpressionStatement[19553-19776]"
  }, {
    "left" : "res.byteData = DataUtil.readToByteBuffer(bodyStream, req.maxBodySize());",
    "right" : "res.byteData = DataUtil.readToByteBuffer(bodyStream, req.maxBodySize());",
    "info" : "ExpressionStatement[19802-19874]:ExpressionStatement[19802-19874]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19905-20064]:Block[19905-20064]"
  }, {
    "left" : "if (bodyStream != null)",
    "right" : "if (bodyStream != null)",
    "info" : "IfStatement[19931-19974]:IfStatement[19931-19974]"
  }, {
    "left" : "bodyStream.close();",
    "right" : "bodyStream.close();",
    "info" : "ExpressionStatement[19955-19974]:ExpressionStatement[19955-19974]"
  }, {
    "left" : "if (dataStream != null)",
    "right" : "if (dataStream != null)",
    "info" : "IfStatement[19999-20042]:IfStatement[19999-20042]"
  }, {
    "left" : "dataStream.close();",
    "right" : "dataStream.close();",
    "info" : "ExpressionStatement[20023-20042]:ExpressionStatement[20023-20042]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20088-20170]:Block[20088-20170]"
  }, {
    "left" : "res.byteData = DataUtil.emptyByteBuffer();",
    "right" : "res.byteData = DataUtil.emptyByteBuffer();",
    "info" : "ExpressionStatement[20110-20152]:ExpressionStatement[20110-20152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20193-20474]:Block[20193-20474]"
  }, {
    "left" : "conn.disconnect();",
    "right" : "conn.disconnect();",
    "info" : "ExpressionStatement[20442-20460]:ExpressionStatement[20442-20460]"
  }, {
    "left" : "res.executed = true;",
    "right" : "res.executed = true;",
    "info" : "ExpressionStatement[20488-20508]:ExpressionStatement[20488-20508]"
  }, {
    "left" : "return res;",
    "right" : "return res;",
    "info" : "ReturnStatement[20521-20532]:ReturnStatement[20521-20532]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20552-20558]:Modifier[20552-20558]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[20559-20562]:PrimitiveType[20559-20562]"
  }, {
    "left" : "statusCode",
    "right" : "statusCode",
    "info" : "SimpleName[20563-20573]:SimpleName[20563-20573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20576-20618]:Block[20576-20618]"
  }, {
    "left" : "return statusCode;",
    "right" : "return statusCode;",
    "info" : "ReturnStatement[20590-20608]:ReturnStatement[20590-20608]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20628-20634]:Modifier[20628-20634]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[20635-20641]:SimpleType[20635-20641]"
  }, {
    "left" : "statusMessage",
    "right" : "statusMessage",
    "info" : "SimpleName[20642-20655]:SimpleName[20642-20655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20658-20703]:Block[20658-20703]"
  }, {
    "left" : "return statusMessage;",
    "right" : "return statusMessage;",
    "info" : "ReturnStatement[20672-20693]:ReturnStatement[20672-20693]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20713-20719]:Modifier[20713-20719]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[20720-20726]:SimpleType[20720-20726]"
  }, {
    "left" : "charset",
    "right" : "charset",
    "info" : "SimpleName[20727-20734]:SimpleName[20727-20734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20737-20776]:Block[20737-20776]"
  }, {
    "left" : "return charset;",
    "right" : "return charset;",
    "info" : "ReturnStatement[20751-20766]:ReturnStatement[20751-20766]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20786-20792]:Modifier[20786-20792]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[20793-20799]:SimpleType[20793-20799]"
  }, {
    "left" : "contentType",
    "right" : "contentType",
    "info" : "SimpleName[20800-20811]:SimpleName[20800-20811]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20814-20857]:Block[20814-20857]"
  }, {
    "left" : "return contentType;",
    "right" : "return contentType;",
    "info" : "ReturnStatement[20828-20847]:ReturnStatement[20828-20847]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20867-20873]:Modifier[20867-20873]"
  }, {
    "left" : "Document",
    "right" : "Document",
    "info" : "SimpleType[20874-20882]:SimpleType[20874-20882]"
  }, {
    "left" : "parse",
    "right" : "parse",
    "info" : "SimpleName[20883-20888]:SimpleName[20883-20888]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[20898-20909]:SimpleType[20898-20909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20910-21315]:Block[20910-21315]"
  }, {
    "left" : "Validate.isTrue(executed, \"Request must be executed (with .execute(), .get(), or .post() before parsing response\");",
    "right" : "Validate.isTrue(executed, \"Request must be executed (with .execute(), .get(), or .post() before parsing response\");",
    "info" : "ExpressionStatement[20924-21039]:ExpressionStatement[20924-21039]"
  }, {
    "left" : "Document doc = DataUtil.parseByteData(byteData, charset, url.toExternalForm(), req.parser());",
    "right" : "Document doc = DataUtil.parseByteData(byteData, charset, url.toExternalForm(), req.parser());",
    "info" : "VariableDeclarationStatement[21052-21145]:VariableDeclarationStatement[21052-21145]"
  }, {
    "left" : "byteData.rewind();",
    "right" : "byteData.rewind();",
    "info" : "ExpressionStatement[21158-21176]:ExpressionStatement[21158-21176]"
  }, {
    "left" : "charset = doc.outputSettings().charset().name();",
    "right" : "charset = doc.outputSettings().charset().name();",
    "info" : "ExpressionStatement[21189-21237]:ExpressionStatement[21189-21237]"
  }, {
    "left" : "return doc;",
    "right" : "return doc;",
    "info" : "ReturnStatement[21294-21305]:ReturnStatement[21294-21305]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21325-21331]:Modifier[21325-21331]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[21332-21338]:SimpleType[21332-21338]"
  }, {
    "left" : "body",
    "right" : "body",
    "info" : "SimpleName[21339-21343]:SimpleName[21339-21343]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21346-21909]:Block[21346-21909]"
  }, {
    "left" : "Validate.isTrue(executed, \"Request must be executed (with .execute(), .get(), or .post() before getting response body\");",
    "right" : "Validate.isTrue(executed, \"Request must be executed (with .execute(), .get(), or .post() before getting response body\");",
    "info" : "ExpressionStatement[21360-21480]:ExpressionStatement[21360-21480]"
  }, {
    "left" : "String body;",
    "right" : "String body;",
    "info" : "VariableDeclarationStatement[21611-21623]:VariableDeclarationStatement[21611-21623]"
  }, {
    "left" : "if (charset == null)",
    "right" : "if (charset == null)",
    "info" : "IfStatement[21636-21843]:IfStatement[21636-21843]"
  }, {
    "left" : "body = Charset.forName(DataUtil.defaultCharset).decode(byteData).toString();",
    "right" : "body = Charset.forName(DataUtil.defaultCharset).decode(byteData).toString();",
    "info" : "ExpressionStatement[21673-21749]:ExpressionStatement[21673-21749]"
  }, {
    "left" : "body = Charset.forName(charset).decode(byteData).toString();",
    "right" : "body = Charset.forName(charset).decode(byteData).toString();",
    "info" : "ExpressionStatement[21783-21843]:ExpressionStatement[21783-21843]"
  }, {
    "left" : "byteData.rewind();",
    "right" : "byteData.rewind();",
    "info" : "ExpressionStatement[21856-21874]:ExpressionStatement[21856-21874]"
  }, {
    "left" : "return body;",
    "right" : "return body;",
    "info" : "ReturnStatement[21887-21899]:ReturnStatement[21887-21899]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21919-21925]:Modifier[21919-21925]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[21926-21932]:ArrayType[21926-21932]"
  }, {
    "left" : "bodyAsBytes",
    "right" : "bodyAsBytes",
    "info" : "SimpleName[21933-21944]:SimpleName[21933-21944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21947-22128]:Block[21947-22128]"
  }, {
    "left" : "Validate.isTrue(executed, \"Request must be executed (with .execute(), .get(), or .post() before getting response body\");",
    "right" : "Validate.isTrue(executed, \"Request must be executed (with .execute(), .get(), or .post() before getting response body\");",
    "info" : "ExpressionStatement[21961-22081]:ExpressionStatement[21961-22081]"
  }, {
    "left" : "return byteData.array();",
    "right" : "return byteData.array();",
    "info" : "ReturnStatement[22094-22118]:ReturnStatement[22094-22118]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22202-22209]:Modifier[22202-22209]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[22210-22216]:Modifier[22210-22216]"
  }, {
    "left" : "HttpURLConnection",
    "right" : "HttpURLConnection",
    "info" : "SimpleType[22217-22234]:SimpleType[22217-22234]"
  }, {
    "left" : "createConnection",
    "right" : "createConnection",
    "info" : "SimpleName[22235-22251]:SimpleName[22235-22251]"
  }, {
    "left" : "Connection.Request req",
    "right" : "Connection.Request req",
    "info" : "SingleVariableDeclaration[22252-22274]:SingleVariableDeclaration[22252-22274]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[22283-22294]:SimpleType[22283-22294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22295-23399]:Block[22295-23399]"
  }, {
    "left" : "HttpURLConnection conn = (HttpURLConnection) req.url().openConnection();",
    "right" : "HttpURLConnection conn = (HttpURLConnection) req.url().openConnection();",
    "info" : "VariableDeclarationStatement[22309-22381]:VariableDeclarationStatement[22309-22381]"
  }, {
    "left" : "conn.setRequestMethod(req.method().name());",
    "right" : "conn.setRequestMethod(req.method().name());",
    "info" : "ExpressionStatement[22395-22438]:ExpressionStatement[22395-22438]"
  }, {
    "left" : "conn.setInstanceFollowRedirects(false);",
    "right" : "conn.setInstanceFollowRedirects(false);",
    "info" : "ExpressionStatement[22451-22490]:ExpressionStatement[22451-22490]"
  }, {
    "left" : "conn.setConnectTimeout(req.timeout());",
    "right" : "conn.setConnectTimeout(req.timeout());",
    "info" : "ExpressionStatement[22547-22585]:ExpressionStatement[22547-22585]"
  }, {
    "left" : "conn.setReadTimeout(req.timeout());",
    "right" : "conn.setReadTimeout(req.timeout());",
    "info" : "ExpressionStatement[22598-22633]:ExpressionStatement[22598-22633]"
  }, {
    "left" : "if (conn instanceof HttpsURLConnection)",
    "right" : "if (conn instanceof HttpsURLConnection)",
    "info" : "IfStatement[22647-22990]:IfStatement[22647-22990]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22687-22990]:Block[22687-22990]"
  }, {
    "left" : "if (!req.validateTLSCertificates())",
    "right" : "if (!req.validateTLSCertificates())",
    "info" : "IfStatement[22705-22976]:IfStatement[22705-22976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22741-22976]:Block[22741-22976]"
  }, {
    "left" : "initUnSecureTSL();",
    "right" : "initUnSecureTSL();",
    "info" : "ExpressionStatement[22763-22781]:ExpressionStatement[22763-22781]"
  }, {
    "left" : "((HttpsURLConnection)conn).setSSLSocketFactory(sslSocketFactory);",
    "right" : "((HttpsURLConnection)conn).setSSLSocketFactory(sslSocketFactory);",
    "info" : "ExpressionStatement[22802-22867]:ExpressionStatement[22802-22867]"
  }, {
    "left" : "((HttpsURLConnection)conn).setHostnameVerifier(getInsecureVerifier());",
    "right" : "((HttpsURLConnection)conn).setHostnameVerifier(getInsecureVerifier());",
    "info" : "ExpressionStatement[22888-22958]:ExpressionStatement[22888-22958]"
  }, {
    "left" : "if (req.method().hasBody())",
    "right" : "if (req.method().hasBody())",
    "info" : "IfStatement[23004-23071]:IfStatement[23004-23071]"
  }, {
    "left" : "conn.setDoOutput(true);",
    "right" : "conn.setDoOutput(true);",
    "info" : "ExpressionStatement[23048-23071]:ExpressionStatement[23048-23071]"
  }, {
    "left" : "if (req.cookies().size() > 0)",
    "right" : "if (req.cookies().size() > 0)",
    "info" : "IfStatement[23084-23193]:IfStatement[23084-23193]"
  }, {
    "left" : "conn.addRequestProperty(\"Cookie\", getRequestCookieString(req));",
    "right" : "conn.addRequestProperty(\"Cookie\", getRequestCookieString(req));",
    "info" : "ExpressionStatement[23130-23193]:ExpressionStatement[23130-23193]"
  }, {
    "left" : "for (Map.Entry<String, String> header : req.headers().entrySet())",
    "right" : "for (Map.Entry<String, String> header : req.headers().entrySet())",
    "info" : "EnhancedForStatement[23206-23364]:EnhancedForStatement[23206-23364]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23272-23364]:Block[23272-23364]"
  }, {
    "left" : "conn.addRequestProperty(header.getKey(), header.getValue());",
    "right" : "conn.addRequestProperty(header.getKey(), header.getValue());",
    "info" : "ExpressionStatement[23290-23350]:ExpressionStatement[23290-23350]"
  }, {
    "left" : "return conn;",
    "right" : "return conn;",
    "info" : "ReturnStatement[23377-23389]:ReturnStatement[23377-23389]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23679-23686]:Modifier[23679-23686]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23687-23693]:Modifier[23687-23693]"
  }, {
    "left" : "HostnameVerifier",
    "right" : "HostnameVerifier",
    "info" : "SimpleType[23694-23710]:SimpleType[23694-23710]"
  }, {
    "left" : "getInsecureVerifier",
    "right" : "getInsecureVerifier",
    "info" : "SimpleName[23711-23730]:SimpleName[23711-23730]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23733-23934]:Block[23733-23934]"
  }, {
    "left" : "return new HostnameVerifier() {\n                public boolean verify(String urlHostName, SSLSession session) {\n                    return true;\n                }\n            };",
    "right" : "return new HostnameVerifier() {\n                public boolean verify(String urlHostName, SSLSession session) {\n                    return true;\n                }\n            };",
    "info" : "ReturnStatement[23747-23924]:ReturnStatement[23747-23924]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23795-23801]:Modifier[23795-23801]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[23802-23809]:PrimitiveType[23802-23809]"
  }, {
    "left" : "verify",
    "right" : "verify",
    "info" : "SimpleName[23810-23816]:SimpleName[23810-23816]"
  }, {
    "left" : "String urlHostName",
    "right" : "String urlHostName",
    "info" : "SingleVariableDeclaration[23817-23835]:SingleVariableDeclaration[23817-23835]"
  }, {
    "left" : "SSLSession session",
    "right" : "SSLSession session",
    "info" : "SingleVariableDeclaration[23837-23855]:SingleVariableDeclaration[23837-23855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23857-23909]:Block[23857-23909]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[23879-23891]:ReturnStatement[23879-23891]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[24269-24276]:Modifier[24269-24276]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[24277-24283]:Modifier[24277-24283]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[24284-24296]:Modifier[24284-24296]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24297-24301]:PrimitiveType[24297-24301]"
  }, {
    "left" : "initUnSecureTSL",
    "right" : "initUnSecureTSL",
    "info" : "SimpleName[24302-24317]:SimpleName[24302-24317]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[24327-24338]:SimpleType[24327-24338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24339-25722]:Block[24339-25722]"
  }, {
    "left" : "if (sslSocketFactory == null)",
    "right" : "if (sslSocketFactory == null)",
    "info" : "IfStatement[24353-25711]:IfStatement[24353-25711]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24383-25711]:Block[24383-25711]"
  }, {
    "left" : "final TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {\n\n                    public void checkClientTrusted(final X509Certificate[] chain, final String authType) {\n                    }\n\n                    public void checkServerTrusted(final X509Certificate[] chain, final String authType) {\n                    }\n\n                    public X509Certificate[] getAcceptedIssuers() {\n                        return null;\n                    }\n                }};",
    "right" : "final TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {\n\n                    public void checkClientTrusted(final X509Certificate[] chain, final String authType) {\n                    }\n\n                    public void checkServerTrusted(final X509Certificate[] chain, final String authType) {\n                    }\n\n                    public X509Certificate[] getAcceptedIssuers() {\n                        return null;\n                    }\n                }};",
    "info" : "VariableDeclarationStatement[24485-24973]:VariableDeclarationStatement[24485-24973]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24587-24593]:Modifier[24587-24593]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24594-24598]:PrimitiveType[24594-24598]"
  }, {
    "left" : "checkClientTrusted",
    "right" : "checkClientTrusted",
    "info" : "SimpleName[24599-24617]:SimpleName[24599-24617]"
  }, {
    "left" : "final X509Certificate[] chain",
    "right" : "final X509Certificate[] chain",
    "info" : "SingleVariableDeclaration[24618-24647]:SingleVariableDeclaration[24618-24647]"
  }, {
    "left" : "final String authType",
    "right" : "final String authType",
    "info" : "SingleVariableDeclaration[24649-24670]:SingleVariableDeclaration[24649-24670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24672-24695]:Block[24672-24695]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24717-24723]:Modifier[24717-24723]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24724-24728]:PrimitiveType[24724-24728]"
  }, {
    "left" : "checkServerTrusted",
    "right" : "checkServerTrusted",
    "info" : "SimpleName[24729-24747]:SimpleName[24729-24747]"
  }, {
    "left" : "final X509Certificate[] chain",
    "right" : "final X509Certificate[] chain",
    "info" : "SingleVariableDeclaration[24748-24777]:SingleVariableDeclaration[24748-24777]"
  }, {
    "left" : "final String authType",
    "right" : "final String authType",
    "info" : "SingleVariableDeclaration[24779-24800]:SingleVariableDeclaration[24779-24800]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24802-24825]:Block[24802-24825]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24847-24853]:Modifier[24847-24853]"
  }, {
    "left" : "X509Certificate[]",
    "right" : "X509Certificate[]",
    "info" : "ArrayType[24854-24871]:ArrayType[24854-24871]"
  }, {
    "left" : "getAcceptedIssuers",
    "right" : "getAcceptedIssuers",
    "info" : "SimpleName[24872-24890]:SimpleName[24872-24890]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24893-24953]:Block[24893-24953]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[24919-24931]:ReturnStatement[24919-24931]"
  }, {
    "left" : "final SSLContext sslContext;",
    "right" : "final SSLContext sslContext;",
    "info" : "VariableDeclarationStatement[25049-25077]:VariableDeclarationStatement[25049-25077]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[25094-25697]:TryStatement[25094-25697]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25098-25425]:Block[25098-25425]"
  }, {
    "left" : "sslContext = SSLContext.getInstance(\"SSL\");",
    "right" : "sslContext = SSLContext.getInstance(\"SSL\");",
    "info" : "ExpressionStatement[25120-25163]:ExpressionStatement[25120-25163]"
  }, {
    "left" : "sslContext.init(null, trustAllCerts, new java.security.SecureRandom());",
    "right" : "sslContext.init(null, trustAllCerts, new java.security.SecureRandom());",
    "info" : "ExpressionStatement[25184-25255]:ExpressionStatement[25184-25255]"
  }, {
    "left" : "sslSocketFactory = sslContext.getSocketFactory();",
    "right" : "sslSocketFactory = sslContext.getSocketFactory();",
    "info" : "ExpressionStatement[25358-25407]:ExpressionStatement[25358-25407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25461-25562]:Block[25461-25562]"
  }, {
    "left" : "throw new IOException(\"Can't create unsecure trust manager\");",
    "right" : "throw new IOException(\"Can't create unsecure trust manager\");",
    "info" : "ThrowStatement[25483-25544]:ThrowStatement[25483-25544]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25596-25697]:Block[25596-25697]"
  }, {
    "left" : "throw new IOException(\"Can't create unsecure trust manager\");",
    "right" : "throw new IOException(\"Can't create unsecure trust manager\");",
    "info" : "ThrowStatement[25618-25679]:ThrowStatement[25618-25679]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25779-25786]:Modifier[25779-25786]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[25787-25791]:PrimitiveType[25787-25791]"
  }, {
    "left" : "setupFromConnection",
    "right" : "setupFromConnection",
    "info" : "SimpleName[25792-25811]:SimpleName[25792-25811]"
  }, {
    "left" : "HttpURLConnection conn",
    "right" : "HttpURLConnection conn",
    "info" : "SingleVariableDeclaration[25812-25834]:SingleVariableDeclaration[25812-25834]"
  }, {
    "left" : "Connection.Response previousResponse",
    "right" : "Connection.Response previousResponse",
    "info" : "SingleVariableDeclaration[25836-25872]:SingleVariableDeclaration[25836-25872]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[25881-25892]:SimpleType[25881-25892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25893-26670]:Block[25893-26670]"
  }, {
    "left" : "method = Method.valueOf(conn.getRequestMethod());",
    "right" : "method = Method.valueOf(conn.getRequestMethod());",
    "info" : "ExpressionStatement[25907-25956]:ExpressionStatement[25907-25956]"
  }, {
    "left" : "url = conn.getURL();",
    "right" : "url = conn.getURL();",
    "info" : "ExpressionStatement[25969-25989]:ExpressionStatement[25969-25989]"
  }, {
    "left" : "statusCode = conn.getResponseCode();",
    "right" : "statusCode = conn.getResponseCode();",
    "info" : "ExpressionStatement[26002-26038]:ExpressionStatement[26002-26038]"
  }, {
    "left" : "statusMessage = conn.getResponseMessage();",
    "right" : "statusMessage = conn.getResponseMessage();",
    "info" : "ExpressionStatement[26051-26093]:ExpressionStatement[26051-26093]"
  }, {
    "left" : "contentType = conn.getContentType();",
    "right" : "contentType = conn.getContentType();",
    "info" : "ExpressionStatement[26106-26142]:ExpressionStatement[26106-26142]"
  }, {
    "left" : "Map<String, List<String>> resHeaders = createHeaderMap(conn);",
    "right" : "Map<String, List<String>> resHeaders = createHeaderMap(conn);",
    "info" : "VariableDeclarationStatement[26156-26217]:VariableDeclarationStatement[26156-26217]"
  }, {
    "left" : "processResponseHeaders(resHeaders);",
    "right" : "processResponseHeaders(resHeaders);",
    "info" : "ExpressionStatement[26230-26265]:ExpressionStatement[26230-26265]"
  }, {
    "left" : "if (previousResponse != null)",
    "right" : "if (previousResponse != null)",
    "info" : "IfStatement[26363-26660]:IfStatement[26363-26660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26393-26660]:Block[26393-26660]"
  }, {
    "left" : "for (Map.Entry<String, String> prevCookie : previousResponse.cookies().entrySet())",
    "right" : "for (Map.Entry<String, String> prevCookie : previousResponse.cookies().entrySet())",
    "info" : "EnhancedForStatement[26411-26646]:EnhancedForStatement[26411-26646]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26494-26646]:Block[26494-26646]"
  }, {
    "left" : "if (!hasCookie(prevCookie.getKey()))",
    "right" : "if (!hasCookie(prevCookie.getKey()))",
    "info" : "IfStatement[26516-26628]:IfStatement[26516-26628]"
  }, {
    "left" : "cookie(prevCookie.getKey(), prevCookie.getValue());",
    "right" : "cookie(prevCookie.getKey(), prevCookie.getValue());",
    "info" : "ExpressionStatement[26577-26628]:ExpressionStatement[26577-26628]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26680-26687]:Modifier[26680-26687]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[26688-26694]:Modifier[26688-26694]"
  }, {
    "left" : "LinkedHashMap<String, List<String>>",
    "right" : "LinkedHashMap<String, List<String>>",
    "info" : "ParameterizedType[26695-26730]:ParameterizedType[26695-26730]"
  }, {
    "left" : "createHeaderMap",
    "right" : "createHeaderMap",
    "info" : "SimpleName[26731-26746]:SimpleName[26731-26746]"
  }, {
    "left" : "HttpURLConnection conn",
    "right" : "HttpURLConnection conn",
    "info" : "SingleVariableDeclaration[26747-26769]:SingleVariableDeclaration[26747-26769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26771-27684]:Block[26771-27684]"
  }, {
    "left" : "final LinkedHashMap<String, List<String>> headers = new LinkedHashMap<String, List<String>>();",
    "right" : "final LinkedHashMap<String, List<String>> headers = new LinkedHashMap<String, List<String>>();",
    "info" : "VariableDeclarationStatement[26882-26976]:VariableDeclarationStatement[26882-26976]"
  }, {
    "left" : "int i = 0;",
    "right" : "int i = 0;",
    "info" : "VariableDeclarationStatement[26989-26999]:VariableDeclarationStatement[26989-26999]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[27012-27646]:WhileStatement[27012-27646]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27025-27646]:Block[27025-27646]"
  }, {
    "left" : "final String key = conn.getHeaderFieldKey(i);",
    "right" : "final String key = conn.getHeaderFieldKey(i);",
    "info" : "VariableDeclarationStatement[27043-27088]:VariableDeclarationStatement[27043-27088]"
  }, {
    "left" : "final String val = conn.getHeaderField(i);",
    "right" : "final String val = conn.getHeaderField(i);",
    "info" : "VariableDeclarationStatement[27105-27147]:VariableDeclarationStatement[27105-27147]"
  }, {
    "left" : "if (key == null && val == null)",
    "right" : "if (key == null && val == null)",
    "info" : "IfStatement[27164-27222]:IfStatement[27164-27222]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[27216-27222]:BreakStatement[27216-27222]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[27239-27243]:ExpressionStatement[27239-27243]"
  }, {
    "left" : "if (key == null || val == null)",
    "right" : "if (key == null || val == null)",
    "info" : "IfStatement[27260-27321]:IfStatement[27260-27321]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[27312-27321]:ContinueStatement[27312-27321]"
  }, {
    "left" : "if (headers.containsKey(key))",
    "right" : "if (headers.containsKey(key))",
    "info" : "IfStatement[27360-27632]:IfStatement[27360-27632]"
  }, {
    "left" : "headers.get(key).add(val);",
    "right" : "headers.get(key).add(val);",
    "info" : "ExpressionStatement[27410-27436]:ExpressionStatement[27410-27436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27458-27632]:Block[27458-27632]"
  }, {
    "left" : "final ArrayList<String> vals = new ArrayList<String>();",
    "right" : "final ArrayList<String> vals = new ArrayList<String>();",
    "info" : "VariableDeclarationStatement[27480-27535]:VariableDeclarationStatement[27480-27535]"
  }, {
    "left" : "vals.add(val);",
    "right" : "vals.add(val);",
    "info" : "ExpressionStatement[27556-27570]:ExpressionStatement[27556-27570]"
  }, {
    "left" : "headers.put(key, vals);",
    "right" : "headers.put(key, vals);",
    "info" : "ExpressionStatement[27591-27614]:ExpressionStatement[27591-27614]"
  }, {
    "left" : "return headers;",
    "right" : "return headers;",
    "info" : "ReturnStatement[27659-27674]:ReturnStatement[27659-27674]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[27694-27698]:PrimitiveType[27694-27698]"
  }, {
    "left" : "processResponseHeaders",
    "right" : "processResponseHeaders",
    "info" : "SimpleName[27699-27721]:SimpleName[27699-27721]"
  }, {
    "left" : "Map<String, List<String>> resHeaders",
    "right" : "Map<String, List<String>> resHeaders",
    "info" : "SingleVariableDeclaration[27722-27758]:SingleVariableDeclaration[27722-27758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27760-28967]:Block[27760-29456]"
  }, {
    "left" : "for (Map.Entry<String, List<String>> entry : resHeaders.entrySet())",
    "right" : "for (Map.Entry<String, List<String>> entry : resHeaders.entrySet())",
    "info" : "EnhancedForStatement[27774-28957]:EnhancedForStatement[27774-29446]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27842-28957]:Block[27842-29446]"
  }, {
    "left" : "String name = entry.getKey();",
    "right" : "String name = entry.getKey();",
    "info" : "VariableDeclarationStatement[27860-27889]:VariableDeclarationStatement[27860-27889]"
  }, {
    "left" : "if (name == null)",
    "right" : "if (name == null)",
    "info" : "IfStatement[27906-27953]:IfStatement[27906-27953]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[27944-27953]:ContinueStatement[27944-27953]"
  }, {
    "left" : "List<String> values = entry.getValue();",
    "right" : "List<String> values = entry.getValue();",
    "info" : "VariableDeclarationStatement[27988-28027]:VariableDeclarationStatement[27988-28027]"
  }, {
    "left" : "if (name.equalsIgnoreCase(\"Set-Cookie\"))",
    "right" : "if (name.equalsIgnoreCase(\"Set-Cookie\"))",
    "info" : "IfStatement[28044-28943]:IfStatement[28044-29432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28085-28720]:Block[28085-28720]"
  }, {
    "left" : "for (String value : values)",
    "right" : "for (String value : values)",
    "info" : "EnhancedForStatement[28107-28702]:EnhancedForStatement[28107-28702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28135-28702]:Block[28135-28702]"
  }, {
    "left" : "if (value == null)",
    "right" : "if (value == null)",
    "info" : "IfStatement[28161-28217]:IfStatement[28161-28217]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[28208-28217]:ContinueStatement[28208-28217]"
  }, {
    "left" : "TokenQueue cd = new TokenQueue(value);",
    "right" : "TokenQueue cd = new TokenQueue(value);",
    "info" : "VariableDeclarationStatement[28242-28280]:VariableDeclarationStatement[28242-28280]"
  }, {
    "left" : "String cookieName = cd.chompTo(\"=\").trim();",
    "right" : "String cookieName = cd.chompTo(\"=\").trim();",
    "info" : "VariableDeclarationStatement[28305-28348]:VariableDeclarationStatement[28305-28348]"
  }, {
    "left" : "String cookieVal = cd.consumeTo(\";\").trim();",
    "right" : "String cookieVal = cd.consumeTo(\";\").trim();",
    "info" : "VariableDeclarationStatement[28373-28417]:VariableDeclarationStatement[28373-28417]"
  }, {
    "left" : "if (cookieName.length() > 0)",
    "right" : "if (cookieName.length() > 0)",
    "info" : "IfStatement[28593-28680]:IfStatement[28593-28680]"
  }, {
    "left" : "cookie(cookieName, cookieVal);",
    "right" : "cookie(cookieName, cookieVal);",
    "info" : "ExpressionStatement[28650-28680]:ExpressionStatement[28650-28680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28726-28943]:Block[28726-29432]"
  }, {
    "left" : "if (!values.isEmpty())",
    "right" : "if (values.size() == 1)",
    "info" : "IfStatement[28850-28925]:IfStatement[28850-29414]"
  }, {
    "left" : "values.isEmpty()",
    "right" : "values.size()",
    "info" : "MethodInvocation[28855-28871]:MethodInvocation[28854-28867]"
  }, {
    "left" : "isEmpty",
    "right" : "size",
    "info" : "SimpleName[28862-28869]:SimpleName[28861-28865]"
  }, {
    "left" : "header(name, values.get(0));",
    "right" : "header(name, values.get(0));",
    "info" : "ExpressionStatement[28897-28925]:ExpressionStatement[28898-28926]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28977-28984]:Modifier[29466-29473]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[28985-28991]:Modifier[29474-29480]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[28992-28998]:SimpleType[29481-29487]"
  }, {
    "left" : "setOutputContentType",
    "right" : "setOutputContentType",
    "info" : "SimpleName[28999-29019]:SimpleName[29488-29508]"
  }, {
    "left" : "final Connection.Request req",
    "right" : "final Connection.Request req",
    "info" : "SingleVariableDeclaration[29020-29048]:SingleVariableDeclaration[29509-29537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29050-29792]:Block[29539-30281]"
  }, {
    "left" : "boolean needsMulti = false;",
    "right" : "boolean needsMulti = false;",
    "info" : "VariableDeclarationStatement[29193-29220]:VariableDeclarationStatement[29682-29709]"
  }, {
    "left" : "for (Connection.KeyVal keyVal : req.data())",
    "right" : "for (Connection.KeyVal keyVal : req.data())",
    "info" : "EnhancedForStatement[29233-29423]:EnhancedForStatement[29722-29912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29277-29423]:Block[29766-29912]"
  }, {
    "left" : "if (keyVal.hasInputStream())",
    "right" : "if (keyVal.hasInputStream())",
    "info" : "IfStatement[29295-29409]:IfStatement[29784-29898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29324-29409]:Block[29813-29898]"
  }, {
    "left" : "needsMulti = true;",
    "right" : "needsMulti = true;",
    "info" : "ExpressionStatement[29346-29364]:ExpressionStatement[29835-29853]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[29385-29391]:BreakStatement[29874-29880]"
  }, {
    "left" : "String bound = null;",
    "right" : "String bound = null;",
    "info" : "VariableDeclarationStatement[29436-29456]:VariableDeclarationStatement[29925-29945]"
  }, {
    "left" : "if (needsMulti)",
    "right" : "if (needsMulti)",
    "info" : "IfStatement[29469-29756]:IfStatement[29958-30245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29485-29636]:Block[29974-30125]"
  }, {
    "left" : "bound = DataUtil.mimeBoundary();",
    "right" : "bound = DataUtil.mimeBoundary();",
    "info" : "ExpressionStatement[29503-29535]:ExpressionStatement[29992-30024]"
  }, {
    "left" : "req.header(CONTENT_TYPE, MULTIPART_FORM_DATA + \"; boundary=\" + bound);",
    "right" : "req.header(CONTENT_TYPE, MULTIPART_FORM_DATA + \"; boundary=\" + bound);",
    "info" : "ExpressionStatement[29552-29622]:ExpressionStatement[30041-30111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29642-29756]:Block[30131-30245]"
  }, {
    "left" : "req.header(CONTENT_TYPE, FORM_URL_ENCODED + \"; charset=\" + req.postDataCharset());",
    "right" : "req.header(CONTENT_TYPE, FORM_URL_ENCODED + \"; charset=\" + req.postDataCharset());",
    "info" : "ExpressionStatement[29660-29742]:ExpressionStatement[30149-30231]"
  }, {
    "left" : "return bound;",
    "right" : "return bound;",
    "info" : "ReturnStatement[29769-29782]:ReturnStatement[30258-30271]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[29802-29809]:Modifier[30291-30298]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[29810-29816]:Modifier[30299-30305]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[29817-29821]:PrimitiveType[30306-30310]"
  }, {
    "left" : "writePost",
    "right" : "writePost",
    "info" : "SimpleName[29822-29831]:SimpleName[30311-30320]"
  }, {
    "left" : "final Connection.Request req",
    "right" : "final Connection.Request req",
    "info" : "SingleVariableDeclaration[29832-29860]:SingleVariableDeclaration[30321-30349]"
  }, {
    "left" : "final OutputStream outputStream",
    "right" : "final OutputStream outputStream",
    "info" : "SingleVariableDeclaration[29862-29893]:SingleVariableDeclaration[30351-30382]"
  }, {
    "left" : "final String bound",
    "right" : "final String bound",
    "info" : "SingleVariableDeclaration[29895-29913]:SingleVariableDeclaration[30384-30402]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[29922-29933]:SimpleType[30411-30422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29934-31890]:Block[30423-32379]"
  }, {
    "left" : "final Collection<Connection.KeyVal> data = req.data();",
    "right" : "final Collection<Connection.KeyVal> data = req.data();",
    "info" : "VariableDeclarationStatement[29948-30002]:VariableDeclarationStatement[30437-30491]"
  }, {
    "left" : "final BufferedWriter w = new BufferedWriter(new OutputStreamWriter(outputStream, DataUtil.defaultCharset));",
    "right" : "final BufferedWriter w = new BufferedWriter(new OutputStreamWriter(outputStream, DataUtil.defaultCharset));",
    "info" : "VariableDeclarationStatement[30015-30122]:VariableDeclarationStatement[30504-30611]"
  }, {
    "left" : "if (bound != null)",
    "right" : "if (bound != null)",
    "info" : "IfStatement[30136-31857]:IfStatement[30625-32346]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30155-31309]:Block[30644-31798]"
  }, {
    "left" : "for (Connection.KeyVal keyVal : data)",
    "right" : "for (Connection.KeyVal keyVal : data)",
    "info" : "EnhancedForStatement[30240-31201]:EnhancedForStatement[30729-31690]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30278-31201]:Block[30767-31690]"
  }, {
    "left" : "w.write(\"--\");",
    "right" : "w.write(\"--\");",
    "info" : "ExpressionStatement[30300-30314]:ExpressionStatement[30789-30803]"
  }, {
    "left" : "w.write(bound);",
    "right" : "w.write(bound);",
    "info" : "ExpressionStatement[30335-30350]:ExpressionStatement[30824-30839]"
  }, {
    "left" : "w.write(\"\\r\\n\");",
    "right" : "w.write(\"\\r\\n\");",
    "info" : "ExpressionStatement[30371-30387]:ExpressionStatement[30860-30876]"
  }, {
    "left" : "w.write(\"Content-Disposition: form-data; name=\\\"\");",
    "right" : "w.write(\"Content-Disposition: form-data; name=\\\"\");",
    "info" : "ExpressionStatement[30408-30459]:ExpressionStatement[30897-30948]"
  }, {
    "left" : "w.write(encodeMimeName(keyVal.key()));",
    "right" : "w.write(encodeMimeName(keyVal.key()));",
    "info" : "ExpressionStatement[30480-30518]:ExpressionStatement[30969-31007]"
  }, {
    "left" : "w.write(\"\\\"\");",
    "right" : "w.write(\"\\\"\");",
    "info" : "ExpressionStatement[30559-30573]:ExpressionStatement[31048-31062]"
  }, {
    "left" : "if (keyVal.hasInputStream())",
    "right" : "if (keyVal.hasInputStream())",
    "info" : "IfStatement[30594-31146]:IfStatement[31083-31635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30623-31023]:Block[31112-31512]"
  }, {
    "left" : "w.write(\"; filename=\\\"\");",
    "right" : "w.write(\"; filename=\\\"\");",
    "info" : "ExpressionStatement[30649-30674]:ExpressionStatement[31138-31163]"
  }, {
    "left" : "w.write(encodeMimeName(keyVal.value()));",
    "right" : "w.write(encodeMimeName(keyVal.value()));",
    "info" : "ExpressionStatement[30699-30739]:ExpressionStatement[31188-31228]"
  }, {
    "left" : "w.write(\"\\\"\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n\");",
    "right" : "w.write(\"\\\"\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n\");",
    "info" : "ExpressionStatement[30764-30828]:ExpressionStatement[31253-31317]"
  }, {
    "left" : "w.flush();",
    "right" : "w.flush();",
    "info" : "ExpressionStatement[30853-30863]:ExpressionStatement[31342-31352]"
  }, {
    "left" : "DataUtil.crossStreams(keyVal.inputStream(), outputStream);",
    "right" : "DataUtil.crossStreams(keyVal.inputStream(), outputStream);",
    "info" : "ExpressionStatement[30897-30955]:ExpressionStatement[31386-31444]"
  }, {
    "left" : "outputStream.flush();",
    "right" : "outputStream.flush();",
    "info" : "ExpressionStatement[30980-31001]:ExpressionStatement[31469-31490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31029-31146]:Block[31518-31635]"
  }, {
    "left" : "w.write(\"\\r\\n\\r\\n\");",
    "right" : "w.write(\"\\r\\n\\r\\n\");",
    "info" : "ExpressionStatement[31055-31075]:ExpressionStatement[31544-31564]"
  }, {
    "left" : "w.write(keyVal.value());",
    "right" : "w.write(keyVal.value());",
    "info" : "ExpressionStatement[31100-31124]:ExpressionStatement[31589-31613]"
  }, {
    "left" : "w.write(\"\\r\\n\");",
    "right" : "w.write(\"\\r\\n\");",
    "info" : "ExpressionStatement[31167-31183]:ExpressionStatement[31656-31672]"
  }, {
    "left" : "w.write(\"--\");",
    "right" : "w.write(\"--\");",
    "info" : "ExpressionStatement[31218-31232]:ExpressionStatement[31707-31721]"
  }, {
    "left" : "w.write(bound);",
    "right" : "w.write(bound);",
    "info" : "ExpressionStatement[31249-31264]:ExpressionStatement[31738-31753]"
  }, {
    "left" : "w.write(\"--\");",
    "right" : "w.write(\"--\");",
    "info" : "ExpressionStatement[31281-31295]:ExpressionStatement[31770-31784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31315-31857]:Block[31804-32346]"
  }, {
    "left" : "boolean first = true;",
    "right" : "boolean first = true;",
    "info" : "VariableDeclarationStatement[31406-31427]:VariableDeclarationStatement[31895-31916]"
  }, {
    "left" : "for (Connection.KeyVal keyVal : data)",
    "right" : "for (Connection.KeyVal keyVal : data)",
    "info" : "EnhancedForStatement[31444-31843]:EnhancedForStatement[31933-32332]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31482-31843]:Block[31971-32332]"
  }, {
    "left" : "if (!first)",
    "right" : "if (!first)",
    "info" : "IfStatement[31504-31618]:IfStatement[31993-32107]"
  }, {
    "left" : "w.append('&');",
    "right" : "w.append('&');",
    "info" : "ExpressionStatement[31540-31554]:ExpressionStatement[32029-32043]"
  }, {
    "left" : "first = false;",
    "right" : "first = false;",
    "info" : "ExpressionStatement[31604-31618]:ExpressionStatement[32093-32107]"
  }, {
    "left" : "w.write(URLEncoder.encode(keyVal.key(), req.postDataCharset()));",
    "right" : "w.write(URLEncoder.encode(keyVal.key(), req.postDataCharset()));",
    "info" : "ExpressionStatement[31640-31704]:ExpressionStatement[32129-32193]"
  }, {
    "left" : "w.write('=');",
    "right" : "w.write('=');",
    "info" : "ExpressionStatement[31725-31738]:ExpressionStatement[32214-32227]"
  }, {
    "left" : "w.write(URLEncoder.encode(keyVal.value(), req.postDataCharset()));",
    "right" : "w.write(URLEncoder.encode(keyVal.value(), req.postDataCharset()));",
    "info" : "ExpressionStatement[31759-31825]:ExpressionStatement[32248-32314]"
  }, {
    "left" : "w.close();",
    "right" : "w.close();",
    "info" : "ExpressionStatement[31870-31880]:ExpressionStatement[32359-32369]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[31900-31907]:Modifier[32389-32396]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[31908-31914]:Modifier[32397-32403]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[31915-31921]:SimpleType[32404-32410]"
  }, {
    "left" : "getRequestCookieString",
    "right" : "getRequestCookieString",
    "info" : "SimpleName[31922-31944]:SimpleName[32411-32433]"
  }, {
    "left" : "Connection.Request req",
    "right" : "Connection.Request req",
    "info" : "SingleVariableDeclaration[31945-31967]:SingleVariableDeclaration[32434-32456]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31969-32517]:Block[32458-33006]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder();",
    "right" : "StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[31983-32022]:VariableDeclarationStatement[32472-32511]"
  }, {
    "left" : "boolean first = true;",
    "right" : "boolean first = true;",
    "info" : "VariableDeclarationStatement[32035-32056]:VariableDeclarationStatement[32524-32545]"
  }, {
    "left" : "for (Map.Entry<String, String> cookie : req.cookies().entrySet())",
    "right" : "for (Map.Entry<String, String> cookie : req.cookies().entrySet())",
    "info" : "EnhancedForStatement[32069-32473]:EnhancedForStatement[32558-32962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32135-32473]:Block[32624-32962]"
  }, {
    "left" : "if (!first)",
    "right" : "if (!first)",
    "info" : "IfStatement[32153-32257]:IfStatement[32642-32746]"
  }, {
    "left" : "sb.append(\"; \");",
    "right" : "sb.append(\"; \");",
    "info" : "ExpressionStatement[32185-32201]:ExpressionStatement[32674-32690]"
  }, {
    "left" : "first = false;",
    "right" : "first = false;",
    "info" : "ExpressionStatement[32243-32257]:ExpressionStatement[32732-32746]"
  }, {
    "left" : "sb.append(cookie.getKey()).append('=').append(cookie.getValue());",
    "right" : "sb.append(cookie.getKey()).append('=').append(cookie.getValue());",
    "info" : "ExpressionStatement[32274-32339]:ExpressionStatement[32763-32828]"
  }, {
    "left" : "return sb.toString();",
    "right" : "return sb.toString();",
    "info" : "ReturnStatement[32486-32507]:ReturnStatement[32975-32996]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[32592-32599]:Modifier[33081-33088]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[32600-32606]:Modifier[33089-33095]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[32607-32611]:PrimitiveType[33096-33100]"
  }, {
    "left" : "serialiseRequestUrl",
    "right" : "serialiseRequestUrl",
    "info" : "SimpleName[32612-32631]:SimpleName[33101-33120]"
  }, {
    "left" : "Connection.Request req",
    "right" : "Connection.Request req",
    "info" : "SingleVariableDeclaration[32632-32654]:SingleVariableDeclaration[33121-33143]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[32663-32674]:SimpleType[33152-33163]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32675-33745]:Block[33164-34234]"
  }, {
    "left" : "URL in = req.url();",
    "right" : "URL in = req.url();",
    "info" : "VariableDeclarationStatement[32689-32708]:VariableDeclarationStatement[33178-33197]"
  }, {
    "left" : "StringBuilder url = new StringBuilder();",
    "right" : "StringBuilder url = new StringBuilder();",
    "info" : "VariableDeclarationStatement[32721-32761]:VariableDeclarationStatement[33210-33250]"
  }, {
    "left" : "boolean first = true;",
    "right" : "boolean first = true;",
    "info" : "VariableDeclarationStatement[32774-32795]:VariableDeclarationStatement[33263-33284]"
  }, {
    "left" : "url\n                .append(in.getProtocol())\n                .append(\"://\")\n                .append(in.getAuthority()) // includes host, port\n                .append(in.getPath())\n                .append(\"?\");",
    "right" : "url\n                .append(in.getProtocol())\n                .append(\"://\")\n                .append(in.getAuthority()) // includes host, port\n                .append(in.getPath())\n                .append(\"?\");",
    "info" : "ExpressionStatement[32865-33075]:ExpressionStatement[33354-33564]"
  }, {
    "left" : "if (in.getQuery() != null)",
    "right" : "if (in.getQuery() != null)",
    "info" : "IfStatement[33088-33204]:IfStatement[33577-33693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33115-33204]:Block[33604-33693]"
  }, {
    "left" : "url.append(in.getQuery());",
    "right" : "url.append(in.getQuery());",
    "info" : "ExpressionStatement[33133-33159]:ExpressionStatement[33622-33648]"
  }, {
    "left" : "first = false;",
    "right" : "first = false;",
    "info" : "ExpressionStatement[33176-33190]:ExpressionStatement[33665-33679]"
  }, {
    "left" : "for (Connection.KeyVal keyVal : req.data())",
    "right" : "for (Connection.KeyVal keyVal : req.data())",
    "info" : "EnhancedForStatement[33217-33625]:EnhancedForStatement[33706-34114]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33261-33625]:Block[33750-34114]"
  }, {
    "left" : "if (!first)",
    "right" : "if (!first)",
    "info" : "IfStatement[33279-33383]:IfStatement[33768-33872]"
  }, {
    "left" : "url.append('&');",
    "right" : "url.append('&');",
    "info" : "ExpressionStatement[33311-33327]:ExpressionStatement[33800-33816]"
  }, {
    "left" : "first = false;",
    "right" : "first = false;",
    "info" : "ExpressionStatement[33369-33383]:ExpressionStatement[33858-33872]"
  }, {
    "left" : "url\n                    .append(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset))\n                    .append('=')\n                    .append(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));",
    "right" : "url\n                    .append(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset))\n                    .append('=')\n                    .append(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));",
    "info" : "ExpressionStatement[33400-33611]:ExpressionStatement[33889-34100]"
  }, {
    "left" : "req.url(new URL(url.toString()));",
    "right" : "req.url(new URL(url.toString()));",
    "info" : "ExpressionStatement[33638-33671]:ExpressionStatement[34127-34160]"
  }, {
    "left" : "req.data().clear();",
    "right" : "req.data().clear();",
    "info" : "ExpressionStatement[33684-33703]:ExpressionStatement[34173-34192]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33757-33763]:Modifier[34246-34252]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[33764-33770]:Modifier[34253-34259]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[33771-33776]:TYPE_DECLARATION_KIND[34260-34265]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33918-33924]:Modifier[34407-34413]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[33925-33931]:Modifier[34414-34420]"
  }, {
    "left" : "KeyVal",
    "right" : "KeyVal",
    "info" : "SimpleType[33932-33938]:SimpleType[34421-34427]"
  }, {
    "left" : "create",
    "right" : "create",
    "info" : "SimpleName[33939-33945]:SimpleName[34428-34434]"
  }, {
    "left" : "String key",
    "right" : "String key",
    "info" : "SingleVariableDeclaration[33946-33956]:SingleVariableDeclaration[34435-34445]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[33958-33970]:SingleVariableDeclaration[34447-34459]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33972-34038]:Block[34461-34527]"
  }, {
    "left" : "return new KeyVal().key(key).value(value);",
    "right" : "return new KeyVal().key(key).value(value);",
    "info" : "ReturnStatement[33986-34028]:ReturnStatement[34475-34517]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34048-34054]:Modifier[34537-34543]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[34055-34061]:Modifier[34544-34550]"
  }, {
    "left" : "KeyVal",
    "right" : "KeyVal",
    "info" : "SimpleType[34062-34068]:SimpleType[34551-34557]"
  }, {
    "left" : "create",
    "right" : "create",
    "info" : "SimpleName[34069-34075]:SimpleName[34558-34564]"
  }, {
    "left" : "String key",
    "right" : "String key",
    "info" : "SingleVariableDeclaration[34076-34086]:SingleVariableDeclaration[34565-34575]"
  }, {
    "left" : "String filename",
    "right" : "String filename",
    "info" : "SingleVariableDeclaration[34088-34103]:SingleVariableDeclaration[34577-34592]"
  }, {
    "left" : "InputStream stream",
    "right" : "InputStream stream",
    "info" : "SingleVariableDeclaration[34105-34123]:SingleVariableDeclaration[34594-34612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34125-34214]:Block[34614-34703]"
  }, {
    "left" : "return new KeyVal().key(key).value(filename).inputStream(stream);",
    "right" : "return new KeyVal().key(key).value(filename).inputStream(stream);",
    "info" : "ReturnStatement[34139-34204]:ReturnStatement[34628-34693]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[34224-34231]:Modifier[34713-34720]"
  }, {
    "left" : "KeyVal",
    "right" : "KeyVal",
    "info" : "SimpleName[34232-34238]:SimpleName[34721-34727]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34241-34243]:Block[34730-34732]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34253-34259]:Modifier[34742-34748]"
  }, {
    "left" : "KeyVal",
    "right" : "KeyVal",
    "info" : "SimpleType[34260-34266]:SimpleType[34749-34755]"
  }, {
    "left" : "key",
    "right" : "key",
    "info" : "SimpleName[34267-34270]:SimpleName[34756-34759]"
  }, {
    "left" : "String key",
    "right" : "String key",
    "info" : "SingleVariableDeclaration[34271-34281]:SingleVariableDeclaration[34760-34770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34283-34413]:Block[34772-34902]"
  }, {
    "left" : "Validate.notEmpty(key, \"Data key must not be empty\");",
    "right" : "Validate.notEmpty(key, \"Data key must not be empty\");",
    "info" : "ExpressionStatement[34297-34350]:ExpressionStatement[34786-34839]"
  }, {
    "left" : "this.key = key;",
    "right" : "this.key = key;",
    "info" : "ExpressionStatement[34363-34378]:ExpressionStatement[34852-34867]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[34391-34403]:ReturnStatement[34880-34892]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34423-34429]:Modifier[34912-34918]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[34430-34436]:SimpleType[34919-34925]"
  }, {
    "left" : "key",
    "right" : "key",
    "info" : "SimpleName[34437-34440]:SimpleName[34926-34929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34443-34478]:Block[34932-34967]"
  }, {
    "left" : "return key;",
    "right" : "return key;",
    "info" : "ReturnStatement[34457-34468]:ReturnStatement[34946-34957]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34488-34494]:Modifier[34977-34983]"
  }, {
    "left" : "KeyVal",
    "right" : "KeyVal",
    "info" : "SimpleType[34495-34501]:SimpleType[34984-34990]"
  }, {
    "left" : "value",
    "right" : "value",
    "info" : "SimpleName[34502-34507]:SimpleName[34991-34996]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[34508-34520]:SingleVariableDeclaration[34997-35009]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34522-34658]:Block[35011-35147]"
  }, {
    "left" : "Validate.notNull(value, \"Data value must not be null\");",
    "right" : "Validate.notNull(value, \"Data value must not be null\");",
    "info" : "ExpressionStatement[34536-34591]:ExpressionStatement[35025-35080]"
  }, {
    "left" : "this.value = value;",
    "right" : "this.value = value;",
    "info" : "ExpressionStatement[34604-34623]:ExpressionStatement[35093-35112]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[34636-34648]:ReturnStatement[35125-35137]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34668-34674]:Modifier[35157-35163]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[34675-34681]:SimpleType[35164-35170]"
  }, {
    "left" : "value",
    "right" : "value",
    "info" : "SimpleName[34682-34687]:SimpleName[35171-35176]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34690-34727]:Block[35179-35216]"
  }, {
    "left" : "return value;",
    "right" : "return value;",
    "info" : "ReturnStatement[34704-34717]:ReturnStatement[35193-35206]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34737-34743]:Modifier[35226-35232]"
  }, {
    "left" : "KeyVal",
    "right" : "KeyVal",
    "info" : "SimpleType[34744-34750]:SimpleType[35233-35239]"
  }, {
    "left" : "inputStream",
    "right" : "inputStream",
    "info" : "SimpleName[34751-34762]:SimpleName[35240-35251]"
  }, {
    "left" : "InputStream inputStream",
    "right" : "InputStream inputStream",
    "info" : "SingleVariableDeclaration[34763-34786]:SingleVariableDeclaration[35252-35275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34788-34938]:Block[35277-35427]"
  }, {
    "left" : "Validate.notNull(value, \"Data input stream must not be null\");",
    "right" : "Validate.notNull(value, \"Data input stream must not be null\");",
    "info" : "ExpressionStatement[34802-34864]:ExpressionStatement[35291-35353]"
  }, {
    "left" : "this.stream = inputStream;",
    "right" : "this.stream = inputStream;",
    "info" : "ExpressionStatement[34877-34903]:ExpressionStatement[35366-35392]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[34916-34928]:ReturnStatement[35405-35417]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34948-34954]:Modifier[35437-35443]"
  }, {
    "left" : "InputStream",
    "right" : "InputStream",
    "info" : "SimpleType[34955-34966]:SimpleType[35444-35455]"
  }, {
    "left" : "inputStream",
    "right" : "inputStream",
    "info" : "SimpleName[34967-34978]:SimpleName[35456-35467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34981-35019]:Block[35470-35508]"
  }, {
    "left" : "return stream;",
    "right" : "return stream;",
    "info" : "ReturnStatement[34995-35009]:ReturnStatement[35484-35498]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35029-35035]:Modifier[35518-35524]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[35036-35043]:PrimitiveType[35525-35532]"
  }, {
    "left" : "hasInputStream",
    "right" : "hasInputStream",
    "info" : "SimpleName[35044-35058]:SimpleName[35533-35547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35061-35107]:Block[35550-35596]"
  }, {
    "left" : "return stream != null;",
    "right" : "return stream != null;",
    "info" : "ReturnStatement[35075-35097]:ReturnStatement[35564-35586]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[35117-35126]:MarkerAnnotation[35606-35615]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35135-35141]:Modifier[35624-35630]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[35142-35148]:SimpleType[35631-35637]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[35149-35157]:SimpleName[35638-35646]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35160-35209]:Block[35649-35698]"
  }, {
    "left" : "return key + \"=\" + value;",
    "right" : "return key + \"=\" + value;",
    "info" : "ReturnStatement[35174-35199]:ReturnStatement[35663-35688]"
  } ]
}