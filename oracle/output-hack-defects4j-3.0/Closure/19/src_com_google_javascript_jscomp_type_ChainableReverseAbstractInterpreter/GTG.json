{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "TypeDeclaration[2278-21311]:TypeDeclaration[2278-21349]"
    }, {
      "left" : "protected final CodingConvention convention;",
      "right" : "protected final CodingConvention convention;",
      "info" : "FieldDeclaration[2466-2510]:FieldDeclaration[2466-2510]"
    }, {
      "left" : "final JSTypeRegistry typeRegistry;",
      "right" : "final JSTypeRegistry typeRegistry;",
      "info" : "FieldDeclaration[2513-2547]:FieldDeclaration[2513-2547]"
    }, {
      "left" : "private ChainableReverseAbstractInterpreter firstLink;",
      "right" : "private ChainableReverseAbstractInterpreter firstLink;",
      "info" : "FieldDeclaration[2550-2604]:FieldDeclaration[2550-2604]"
    }, {
      "left" : "private ChainableReverseAbstractInterpreter nextLink;",
      "right" : "private ChainableReverseAbstractInterpreter nextLink;",
      "info" : "FieldDeclaration[2607-2660]:FieldDeclaration[2607-2660]"
    }, {
      "left" : "public ChainableReverseAbstractInterpreter(CodingConvention convention,\n      JSTypeRegistry typeRegistry)",
      "right" : "public ChainableReverseAbstractInterpreter(CodingConvention convention,\n      JSTypeRegistry typeRegistry)",
      "info" : "MethodDeclaration[2664-3071]:MethodDeclaration[2664-3071]"
    }, {
      "left" : "public ChainableReverseAbstractInterpreter append(\n      ChainableReverseAbstractInterpreter lastLink)",
      "right" : "public ChainableReverseAbstractInterpreter append(\n      ChainableReverseAbstractInterpreter lastLink)",
      "info" : "MethodDeclaration[3075-3648]:MethodDeclaration[3075-3648]"
    }, {
      "left" : "public ChainableReverseAbstractInterpreter getFirst()",
      "right" : "public ChainableReverseAbstractInterpreter getFirst()",
      "info" : "MethodDeclaration[3652-3785]:MethodDeclaration[3652-3785]"
    }, {
      "left" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "right" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "info" : "MethodDeclaration[3789-4097]:MethodDeclaration[3789-4097]"
    }, {
      "left" : "protected FlowScope nextPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "right" : "protected FlowScope nextPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "info" : "MethodDeclaration[4101-4501]:MethodDeclaration[4101-4501]"
    }, {
      "left" : "protected JSType getTypeIfRefinable(Node node, FlowScope scope)",
      "right" : "protected JSType getTypeIfRefinable(Node node, FlowScope scope)",
      "info" : "MethodDeclaration[4505-5729]:MethodDeclaration[4505-5729]"
    }, {
      "left" : "protected void declareNameInScope(FlowScope scope, Node node, JSType type)",
      "right" : "protected void declareNameInScope(FlowScope scope, Node node, JSType type)",
      "info" : "MethodDeclaration[5733-6707]:MethodDeclaration[5733-6745]"
    }, {
      "left" : "private final Visitor<JSType> restrictUndefinedVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null && enumElementType.getPrimitiveType().equals(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return getNativeType(NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(VOID_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "right" : "private final Visitor<JSType> restrictUndefinedVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null && enumElementType.getPrimitiveType().equals(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return getNativeType(NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(VOID_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "info" : "FieldDeclaration[6711-8819]:FieldDeclaration[6749-8857]"
    }, {
      "left" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "right" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "info" : "MethodDeclaration[6863-7188]:MethodDeclaration[6901-7226]"
    }, {
      "left" : "public JSType caseAllType()",
      "right" : "public JSType caseAllType()",
      "info" : "MethodDeclaration[7196-7370]:MethodDeclaration[7234-7408]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[7378-7482]:MethodDeclaration[7416-7520]"
    }, {
      "left" : "public JSType caseNoType()",
      "right" : "public JSType caseNoType()",
      "info" : "MethodDeclaration[7490-7581]:MethodDeclaration[7528-7619]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[7589-7690]:MethodDeclaration[7627-7728]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[7698-7794]:MethodDeclaration[7736-7832]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[7802-7897]:MethodDeclaration[7840-7935]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[7905-8004]:MethodDeclaration[7943-8042]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[8012-8104]:MethodDeclaration[8050-8142]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[8112-8211]:MethodDeclaration[8150-8249]"
    }, {
      "left" : "public JSType caseUnionType(UnionType type)",
      "right" : "public JSType caseUnionType(UnionType type)",
      "info" : "MethodDeclaration[8219-8354]:MethodDeclaration[8257-8392]"
    }, {
      "left" : "public JSType caseUnknownType()",
      "right" : "public JSType caseUnknownType()",
      "info" : "MethodDeclaration[8362-8463]:MethodDeclaration[8400-8501]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[8471-8546]:MethodDeclaration[8509-8584]"
    }, {
      "left" : "public JSType caseParameterizedType(ParameterizedType type)",
      "right" : "public JSType caseParameterizedType(ParameterizedType type)",
      "info" : "MethodDeclaration[8554-8676]:MethodDeclaration[8592-8714]"
    }, {
      "left" : "public JSType caseTemplateType(TemplateType templateType)",
      "right" : "public JSType caseTemplateType(TemplateType templateType)",
      "info" : "MethodDeclaration[8684-8812]:MethodDeclaration[8722-8850]"
    }, {
      "left" : "private final Visitor<JSType> restrictNullVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null && enumElementType.getPrimitiveType().equals(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(NULL_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return getNativeType(VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "right" : "private final Visitor<JSType> restrictNullVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null && enumElementType.getPrimitiveType().equals(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(NULL_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return getNativeType(VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "info" : "FieldDeclaration[8824-10922]:FieldDeclaration[8862-10960]"
    }, {
      "left" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "right" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "info" : "MethodDeclaration[8966-9291]:MethodDeclaration[9004-9329]"
    }, {
      "left" : "public JSType caseAllType()",
      "right" : "public JSType caseAllType()",
      "info" : "MethodDeclaration[9299-9473]:MethodDeclaration[9337-9511]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[9481-9585]:MethodDeclaration[9519-9623]"
    }, {
      "left" : "public JSType caseNoType()",
      "right" : "public JSType caseNoType()",
      "info" : "MethodDeclaration[9593-9684]:MethodDeclaration[9631-9722]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[9692-9793]:MethodDeclaration[9730-9831]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[9801-9897]:MethodDeclaration[9839-9935]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[9905-9980]:MethodDeclaration[9943-10018]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[9988-10087]:MethodDeclaration[10026-10125]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[10095-10187]:MethodDeclaration[10133-10225]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[10195-10294]:MethodDeclaration[10233-10332]"
    }, {
      "left" : "public JSType caseUnionType(UnionType type)",
      "right" : "public JSType caseUnionType(UnionType type)",
      "info" : "MethodDeclaration[10302-10437]:MethodDeclaration[10340-10475]"
    }, {
      "left" : "public JSType caseUnknownType()",
      "right" : "public JSType caseUnknownType()",
      "info" : "MethodDeclaration[10445-10546]:MethodDeclaration[10483-10584]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[10554-10649]:MethodDeclaration[10592-10687]"
    }, {
      "left" : "public JSType caseParameterizedType(ParameterizedType type)",
      "right" : "public JSType caseParameterizedType(ParameterizedType type)",
      "info" : "MethodDeclaration[10657-10779]:MethodDeclaration[10695-10817]"
    }, {
      "left" : "public JSType caseTemplateType(TemplateType templateType)",
      "right" : "public JSType caseTemplateType(TemplateType templateType)",
      "info" : "MethodDeclaration[10787-10915]:MethodDeclaration[10825-10953]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "TypeDeclaration[10926-13319]:TypeDeclaration[10964-13357]"
    }, {
      "left" : "protected abstract JSType caseTopType(JSType topType);",
      "right" : "protected abstract JSType caseTopType(JSType topType);",
      "info" : "MethodDeclaration[11136-11456]:MethodDeclaration[11174-11494]"
    }, {
      "left" : "public JSType caseAllType()",
      "right" : "public JSType caseAllType()",
      "info" : "MethodDeclaration[11462-11562]:MethodDeclaration[11500-11600]"
    }, {
      "left" : "public JSType caseUnknownType()",
      "right" : "public JSType caseUnknownType()",
      "info" : "MethodDeclaration[11568-11676]:MethodDeclaration[11606-11714]"
    }, {
      "left" : "public JSType caseUnionType(UnionType type)",
      "right" : "public JSType caseUnionType(UnionType type)",
      "info" : "MethodDeclaration[11682-12168]:MethodDeclaration[11720-12206]"
    }, {
      "left" : "public JSType caseNoType()",
      "right" : "public JSType caseNoType()",
      "info" : "MethodDeclaration[12174-12259]:MethodDeclaration[12212-12297]"
    }, {
      "left" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "right" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "info" : "MethodDeclaration[12265-13065]:MethodDeclaration[12303-13103]"
    }, {
      "left" : "public JSType caseParameterizedType(ParameterizedType type)",
      "right" : "public JSType caseParameterizedType(ParameterizedType type)",
      "info" : "MethodDeclaration[13071-13187]:MethodDeclaration[13109-13225]"
    }, {
      "left" : "public JSType caseTemplateType(TemplateType templateType)",
      "right" : "public JSType caseTemplateType(TemplateType templateType)",
      "info" : "MethodDeclaration[13193-13315]:MethodDeclaration[13231-13353]"
    }, {
      "left" : "RestrictByTrueTypeOfResultVisitor",
      "right" : "RestrictByTrueTypeOfResultVisitor",
      "info" : "TypeDeclaration[13323-14311]:TypeDeclaration[13361-14349]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[13664-13737]:MethodDeclaration[13702-13775]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[13743-13815]:MethodDeclaration[13781-13853]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[13821-13911]:MethodDeclaration[13859-13949]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[13917-13986]:MethodDeclaration[13955-14024]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[13992-14063]:MethodDeclaration[14030-14101]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[14069-14155]:MethodDeclaration[14107-14193]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[14161-14232]:MethodDeclaration[14199-14270]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[14238-14307]:MethodDeclaration[14276-14345]"
    }, {
      "left" : "RestrictByFalseTypeOfResultVisitor",
      "right" : "RestrictByFalseTypeOfResultVisitor",
      "info" : "TypeDeclaration[14315-15529]:TypeDeclaration[14353-15567]"
    }, {
      "left" : "protected JSType caseTopType(JSType topType)",
      "right" : "protected JSType caseTopType(JSType topType)",
      "info" : "MethodDeclaration[14656-14744]:MethodDeclaration[14694-14782]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[14750-14848]:MethodDeclaration[14788-14886]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[14854-14949]:MethodDeclaration[14892-14987]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[14955-15045]:MethodDeclaration[14993-15083]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[15051-15140]:MethodDeclaration[15089-15178]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[15146-15239]:MethodDeclaration[15184-15277]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[15245-15331]:MethodDeclaration[15283-15369]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[15337-15430]:MethodDeclaration[15375-15468]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[15436-15525]:MethodDeclaration[15474-15563]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor",
      "right" : "RestrictByOneTypeOfResultVisitor",
      "info" : "TypeDeclaration[15533-18184]:TypeDeclaration[15571-18222]"
    }, {
      "left" : "private final String value;",
      "right" : "private final String value;",
      "info" : "FieldDeclaration[15716-15859]:FieldDeclaration[15754-15897]"
    }, {
      "left" : "private final boolean resultEqualsValue;",
      "right" : "private final boolean resultEqualsValue;",
      "info" : "FieldDeclaration[15865-16083]:FieldDeclaration[15903-16121]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor(String value, boolean resultEqualsValue)",
      "right" : "RestrictByOneTypeOfResultVisitor(String value, boolean resultEqualsValue)",
      "info" : "MethodDeclaration[16089-16246]:MethodDeclaration[16127-16284]"
    }, {
      "left" : "private boolean matchesExpectation(String result)",
      "right" : "private boolean matchesExpectation(String result)",
      "info" : "MethodDeclaration[16252-16548]:MethodDeclaration[16290-16586]"
    }, {
      "left" : "protected JSType caseTopType(JSType topType)",
      "right" : "protected JSType caseTopType(JSType topType)",
      "info" : "MethodDeclaration[16554-16845]:MethodDeclaration[16592-16883]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[16851-17042]:MethodDeclaration[16889-17080]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[17048-17182]:MethodDeclaration[17086-17220]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[17188-17318]:MethodDeclaration[17226-17356]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[17324-17451]:MethodDeclaration[17362-17489]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[17457-17588]:MethodDeclaration[17495-17626]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[17594-17907]:MethodDeclaration[17632-17945]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[17913-18044]:MethodDeclaration[17951-18082]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[18050-18180]:MethodDeclaration[18088-18218]"
    }, {
      "left" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
      "right" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
      "info" : "MethodDeclaration[18188-18405]:MethodDeclaration[18226-18443]"
    }, {
      "left" : "protected final JSType getRestrictedWithoutNull(JSType type)",
      "right" : "protected final JSType getRestrictedWithoutNull(JSType type)",
      "info" : "MethodDeclaration[18409-18611]:MethodDeclaration[18447-18649]"
    }, {
      "left" : "JSType getRestrictedByTypeOfResult(JSType type, String value,\n                                     boolean resultEqualsValue)",
      "right" : "JSType getRestrictedByTypeOfResult(JSType type, String value,\n                                     boolean resultEqualsValue)",
      "info" : "MethodDeclaration[18615-20317]:MethodDeclaration[18653-20355]"
    }, {
      "left" : "JSType getNativeType(JSTypeNative typeId)",
      "right" : "JSType getNativeType(JSTypeNative typeId)",
      "info" : "MethodDeclaration[20321-20415]:MethodDeclaration[20359-20453]"
    }, {
      "left" : "private JSType getNativeTypeForTypeOf(String value)",
      "right" : "private JSType getNativeTypeForTypeOf(String value)",
      "info" : "MethodDeclaration[20419-21309]:MethodDeclaration[20457-21347]"
    } ],
    "mappings" : [
 {
      "left" : "ReverseAbstractInterpreter",
      "right" : "ReverseAbstractInterpreter",
      "info" : "SimpleType[2435-2461]:SimpleType[2435-2461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2800-2806]:Modifier[2800-2806]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "SimpleName[2807-2842]:SimpleName[2807-2842]"
    }, {
      "left" : "CodingConvention convention",
      "right" : "CodingConvention convention",
      "info" : "SingleVariableDeclaration[2843-2870]:SingleVariableDeclaration[2843-2870]"
    }, {
      "left" : "JSTypeRegistry typeRegistry",
      "right" : "JSTypeRegistry typeRegistry",
      "info" : "SingleVariableDeclaration[2878-2905]:SingleVariableDeclaration[2878-2905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2907-3071]:Block[2907-3071]"
    }, {
      "left" : "Preconditions.checkNotNull(convention);",
      "right" : "Preconditions.checkNotNull(convention);",
      "info" : "ExpressionStatement[2913-2952]:ExpressionStatement[2913-2952]"
    }, {
      "left" : "this.convention = convention;",
      "right" : "this.convention = convention;",
      "info" : "ExpressionStatement[2957-2986]:ExpressionStatement[2957-2986]"
    }, {
      "left" : "this.typeRegistry = typeRegistry;",
      "right" : "this.typeRegistry = typeRegistry;",
      "info" : "ExpressionStatement[2991-3024]:ExpressionStatement[2991-3024]"
    }, {
      "left" : "firstLink = this;",
      "right" : "firstLink = this;",
      "info" : "ExpressionStatement[3029-3046]:ExpressionStatement[3029-3046]"
    }, {
      "left" : "nextLink = null;",
      "right" : "nextLink = null;",
      "info" : "ExpressionStatement[3051-3067]:ExpressionStatement[3051-3067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3388-3394]:Modifier[3388-3394]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "SimpleType[3395-3430]:SimpleType[3395-3430]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[3431-3437]:SimpleName[3431-3437]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter lastLink",
      "right" : "ChainableReverseAbstractInterpreter lastLink",
      "info" : "SingleVariableDeclaration[3445-3489]:SingleVariableDeclaration[3445-3489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3491-3648]:Block[3491-3648]"
    }, {
      "left" : "Preconditions.checkArgument(lastLink.nextLink == null);",
      "right" : "Preconditions.checkArgument(lastLink.nextLink == null);",
      "info" : "ExpressionStatement[3497-3552]:ExpressionStatement[3497-3552]"
    }, {
      "left" : "this.nextLink = lastLink;",
      "right" : "this.nextLink = lastLink;",
      "info" : "ExpressionStatement[3557-3582]:ExpressionStatement[3557-3582]"
    }, {
      "left" : "lastLink.firstLink = this.firstLink;",
      "right" : "lastLink.firstLink = this.firstLink;",
      "info" : "ExpressionStatement[3587-3623]:ExpressionStatement[3587-3623]"
    }, {
      "left" : "return lastLink;",
      "right" : "return lastLink;",
      "info" : "ReturnStatement[3628-3644]:ReturnStatement[3628-3644]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3704-3710]:Modifier[3704-3710]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "SimpleType[3711-3746]:SimpleType[3711-3746]"
    }, {
      "left" : "getFirst",
      "right" : "getFirst",
      "info" : "SimpleName[3747-3755]:SimpleName[3747-3755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3758-3785]:Block[3758-3785]"
    }, {
      "left" : "return firstLink;",
      "right" : "return firstLink;",
      "info" : "ReturnStatement[3764-3781]:ReturnStatement[3764-3781]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3866-3875]:Modifier[3866-3875]"
    }, {
      "left" : "FlowScope",
      "right" : "FlowScope",
      "info" : "SimpleType[3876-3885]:SimpleType[3876-3885]"
    }, {
      "left" : "firstPreciserScopeKnowingConditionOutcome",
      "right" : "firstPreciserScopeKnowingConditionOutcome",
      "info" : "SimpleName[3886-3927]:SimpleName[3886-3927]"
    }, {
      "left" : "Node condition",
      "right" : "Node condition",
      "info" : "SingleVariableDeclaration[3928-3942]:SingleVariableDeclaration[3928-3942]"
    }, {
      "left" : "FlowScope blindScope",
      "right" : "FlowScope blindScope",
      "info" : "SingleVariableDeclaration[3950-3970]:SingleVariableDeclaration[3950-3970]"
    }, {
      "left" : "boolean outcome",
      "right" : "boolean outcome",
      "info" : "SingleVariableDeclaration[3972-3987]:SingleVariableDeclaration[3972-3987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3989-4097]:Block[3989-4097]"
    }, {
      "left" : "return firstLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome);",
      "right" : "return firstLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome);",
      "info" : "ReturnStatement[3995-4093]:ReturnStatement[3995-4093]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4240-4249]:Modifier[4240-4249]"
    }, {
      "left" : "FlowScope",
      "right" : "FlowScope",
      "info" : "SimpleType[4250-4259]:SimpleType[4250-4259]"
    }, {
      "left" : "nextPreciserScopeKnowingConditionOutcome",
      "right" : "nextPreciserScopeKnowingConditionOutcome",
      "info" : "SimpleName[4260-4300]:SimpleName[4260-4300]"
    }, {
      "left" : "Node condition",
      "right" : "Node condition",
      "info" : "SingleVariableDeclaration[4301-4315]:SingleVariableDeclaration[4301-4315]"
    }, {
      "left" : "FlowScope blindScope",
      "right" : "FlowScope blindScope",
      "info" : "SingleVariableDeclaration[4323-4343]:SingleVariableDeclaration[4323-4343]"
    }, {
      "left" : "boolean outcome",
      "right" : "boolean outcome",
      "info" : "SingleVariableDeclaration[4345-4360]:SingleVariableDeclaration[4345-4360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4362-4501]:Block[4362-4501]"
    }, {
      "left" : "return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome) : blindScope;",
      "right" : "return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome) : blindScope;",
      "info" : "ReturnStatement[4368-4497]:ReturnStatement[4368-4497]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4727-4736]:Modifier[4727-4736]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[4737-4743]:SimpleType[4737-4743]"
    }, {
      "left" : "getTypeIfRefinable",
      "right" : "getTypeIfRefinable",
      "info" : "SimpleName[4744-4762]:SimpleName[4744-4762]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[4763-4772]:SingleVariableDeclaration[4763-4772]"
    }, {
      "left" : "FlowScope scope",
      "right" : "FlowScope scope",
      "info" : "SingleVariableDeclaration[4774-4789]:SingleVariableDeclaration[4774-4789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4791-5729]:Block[4791-5729]"
    }, {
      "left" : "switch (node.getType()) {\n      case Token.NAME:\n        StaticSlot<JSType> nameVar = scope.getSlot(node.getString());\n        if (nameVar != null) {\n          JSType nameVarType = nameVar.getType();\n          if (nameVarType == null) {\n            nameVarType = node.getJSType();\n          }\n          return nameVarType;\n        }\n        return null;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        if (qualifiedName == null) {\n          return null;\n        }\n        StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);\n        JSType propVarType = null;\n        if (propVar != null) {\n          propVarType = propVar.getType();\n        }\n        if (propVarType == null) {\n          propVarType = node.getJSType();\n        }\n        if (propVarType == null) {\n          propVarType = getNativeType(UNKNOWN_TYPE);\n        }\n        return propVarType;\n    }",
      "right" : "switch (node.getType()) {\n      case Token.NAME:\n        StaticSlot<JSType> nameVar = scope.getSlot(node.getString());\n        if (nameVar != null) {\n          JSType nameVarType = nameVar.getType();\n          if (nameVarType == null) {\n            nameVarType = node.getJSType();\n          }\n          return nameVarType;\n        }\n        return null;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        if (qualifiedName == null) {\n          return null;\n        }\n        StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);\n        JSType propVarType = null;\n        if (propVar != null) {\n          propVarType = propVar.getType();\n        }\n        if (propVarType == null) {\n          propVarType = node.getJSType();\n        }\n        if (propVarType == null) {\n          propVarType = getNativeType(UNKNOWN_TYPE);\n        }\n        return propVarType;\n    }",
      "info" : "SwitchStatement[4797-5708]:SwitchStatement[4797-5708]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.NAME:",
      "info" : "SwitchCase[4829-4845]:SwitchCase[4829-4845]"
    }, {
      "left" : "StaticSlot<JSType> nameVar = scope.getSlot(node.getString());",
      "right" : "StaticSlot<JSType> nameVar = scope.getSlot(node.getString());",
      "info" : "VariableDeclarationStatement[4854-4915]:VariableDeclarationStatement[4854-4915]"
    }, {
      "left" : "if (nameVar != null)",
      "right" : "if (nameVar != null)",
      "info" : "IfStatement[4924-5129]:IfStatement[4924-5129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4945-5129]:Block[4945-5129]"
    }, {
      "left" : "JSType nameVarType = nameVar.getType();",
      "right" : "JSType nameVarType = nameVar.getType();",
      "info" : "VariableDeclarationStatement[4957-4996]:VariableDeclarationStatement[4957-4996]"
    }, {
      "left" : "if (nameVarType == null)",
      "right" : "if (nameVarType == null)",
      "info" : "IfStatement[5007-5089]:IfStatement[5007-5089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5032-5089]:Block[5032-5089]"
    }, {
      "left" : "nameVarType = node.getJSType();",
      "right" : "nameVarType = node.getJSType();",
      "info" : "ExpressionStatement[5046-5077]:ExpressionStatement[5046-5077]"
    }, {
      "left" : "return nameVarType;",
      "right" : "return nameVarType;",
      "info" : "ReturnStatement[5100-5119]:ReturnStatement[5100-5119]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5138-5150]:ReturnStatement[5138-5150]"
    }, {
      "left" : "case Token.GETPROP:",
      "right" : "case Token.GETPROP:",
      "info" : "SwitchCase[5158-5177]:SwitchCase[5158-5177]"
    }, {
      "left" : "String qualifiedName = node.getQualifiedName();",
      "right" : "String qualifiedName = node.getQualifiedName();",
      "info" : "VariableDeclarationStatement[5186-5233]:VariableDeclarationStatement[5186-5233]"
    }, {
      "left" : "if (qualifiedName == null)",
      "right" : "if (qualifiedName == null)",
      "info" : "IfStatement[5242-5303]:IfStatement[5242-5303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5269-5303]:Block[5269-5303]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5281-5293]:ReturnStatement[5281-5293]"
    }, {
      "left" : "StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);",
      "right" : "StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);",
      "info" : "VariableDeclarationStatement[5312-5370]:VariableDeclarationStatement[5312-5370]"
    }, {
      "left" : "JSType propVarType = null;",
      "right" : "JSType propVarType = null;",
      "info" : "VariableDeclarationStatement[5379-5405]:VariableDeclarationStatement[5379-5405]"
    }, {
      "left" : "if (propVar != null)",
      "right" : "if (propVar != null)",
      "info" : "IfStatement[5414-5489]:IfStatement[5414-5489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5435-5489]:Block[5435-5489]"
    }, {
      "left" : "propVarType = propVar.getType();",
      "right" : "propVarType = propVar.getType();",
      "info" : "ExpressionStatement[5447-5479]:ExpressionStatement[5447-5479]"
    }, {
      "left" : "if (propVarType == null)",
      "right" : "if (propVarType == null)",
      "info" : "IfStatement[5498-5576]:IfStatement[5498-5576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5523-5576]:Block[5523-5576]"
    }, {
      "left" : "propVarType = node.getJSType();",
      "right" : "propVarType = node.getJSType();",
      "info" : "ExpressionStatement[5535-5566]:ExpressionStatement[5535-5566]"
    }, {
      "left" : "if (propVarType == null)",
      "right" : "if (propVarType == null)",
      "info" : "IfStatement[5585-5674]:IfStatement[5585-5674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5610-5674]:Block[5610-5674]"
    }, {
      "left" : "propVarType = getNativeType(UNKNOWN_TYPE);",
      "right" : "propVarType = getNativeType(UNKNOWN_TYPE);",
      "info" : "ExpressionStatement[5622-5664]:ExpressionStatement[5622-5664]"
    }, {
      "left" : "return propVarType;",
      "right" : "return propVarType;",
      "info" : "ReturnStatement[5683-5702]:ReturnStatement[5683-5702]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5713-5725]:ReturnStatement[5713-5725]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5966-5975]:Modifier[5966-5975]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5976-5980]:PrimitiveType[5976-5980]"
    }, {
      "left" : "declareNameInScope",
      "right" : "declareNameInScope",
      "info" : "SimpleName[5981-5999]:SimpleName[5981-5999]"
    }, {
      "left" : "FlowScope scope",
      "right" : "FlowScope scope",
      "info" : "SingleVariableDeclaration[6000-6015]:SingleVariableDeclaration[6000-6015]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[6017-6026]:SingleVariableDeclaration[6017-6026]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[6028-6039]:SingleVariableDeclaration[6028-6039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6041-6707]:Block[6041-6745]"
    }, {
      "left" : "switch (node.getType()) {\n      case Token.NAME:\n        scope.inferSlotType(node.getString(), type);\n        break;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        Preconditions.checkNotNull(qualifiedName);\n\n        JSType origType = node.getJSType();\n        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;\n        scope.inferQualifiedSlot(node, qualifiedName, origType, type);\n        break;\n\n        // \"this\" references aren't currently modeled in the CFG.\n\n      default:\n        throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());\n    }",
      "right" : "switch (node.getType()) {\n      case Token.NAME:\n        scope.inferSlotType(node.getString(), type);\n        break;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        Preconditions.checkNotNull(qualifiedName);\n\n        JSType origType = node.getJSType();\n        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;\n        scope.inferQualifiedSlot(node, qualifiedName, origType, type);\n        break;\n\n      case Token.THIS:\n        // \"this\" references aren't currently modeled in the CFG.\n        break;\n\n      default:\n        throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());\n    }",
      "info" : "SwitchStatement[6047-6703]:SwitchStatement[6047-6741]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.NAME:",
      "info" : "SwitchCase[6079-6095]:SwitchCase[6079-6095]"
    }, {
      "left" : "scope.inferSlotType(node.getString(), type);",
      "right" : "scope.inferSlotType(node.getString(), type);",
      "info" : "ExpressionStatement[6104-6148]:ExpressionStatement[6104-6148]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6157-6163]:BreakStatement[6157-6163]"
    }, {
      "left" : "case Token.GETPROP:",
      "right" : "case Token.GETPROP:",
      "info" : "SwitchCase[6171-6190]:SwitchCase[6171-6190]"
    }, {
      "left" : "String qualifiedName = node.getQualifiedName();",
      "right" : "String qualifiedName = node.getQualifiedName();",
      "info" : "VariableDeclarationStatement[6199-6246]:VariableDeclarationStatement[6199-6246]"
    }, {
      "left" : "Preconditions.checkNotNull(qualifiedName);",
      "right" : "Preconditions.checkNotNull(qualifiedName);",
      "info" : "ExpressionStatement[6255-6297]:ExpressionStatement[6255-6297]"
    }, {
      "left" : "JSType origType = node.getJSType();",
      "right" : "JSType origType = node.getJSType();",
      "info" : "VariableDeclarationStatement[6307-6342]:VariableDeclarationStatement[6307-6342]"
    }, {
      "left" : "origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;",
      "right" : "origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;",
      "info" : "ExpressionStatement[6351-6420]:ExpressionStatement[6351-6420]"
    }, {
      "left" : "scope.inferQualifiedSlot(node, qualifiedName, origType, type);",
      "right" : "scope.inferQualifiedSlot(node, qualifiedName, origType, type);",
      "info" : "ExpressionStatement[6429-6491]:ExpressionStatement[6429-6491]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6500-6506]:BreakStatement[6500-6506]"
    }, {
      "left" : "default:",
      "right" : "case Token.THIS:",
      "info" : "SwitchCase[6581-6589]:SwitchCase[6514-6530]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());",
      "right" : "throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());",
      "info" : "ThrowStatement[6598-6697]:ThrowStatement[6636-6735]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6863-6872]:MarkerAnnotation[6901-6910]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6879-6885]:Modifier[6917-6923]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[6886-6892]:SimpleType[6924-6930]"
    }, {
      "left" : "caseEnumElementType",
      "right" : "caseEnumElementType",
      "info" : "SimpleName[6893-6912]:SimpleName[6931-6950]"
    }, {
      "left" : "EnumElementType enumElementType",
      "right" : "EnumElementType enumElementType",
      "info" : "SingleVariableDeclaration[6913-6944]:SingleVariableDeclaration[6951-6982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6946-7188]:Block[6984-7226]"
    }, {
      "left" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "right" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "info" : "VariableDeclarationStatement[6956-7017]:VariableDeclarationStatement[6994-7055]"
    }, {
      "left" : "if (type != null && enumElementType.getPrimitiveType().equals(type))",
      "right" : "if (type != null && enumElementType.getPrimitiveType().equals(type))",
      "info" : "IfStatement[7026-7180]:IfStatement[7064-7218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7095-7140]:Block[7133-7178]"
    }, {
      "left" : "return enumElementType;",
      "right" : "return enumElementType;",
      "info" : "ReturnStatement[7107-7130]:ReturnStatement[7145-7168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7146-7180]:Block[7184-7218]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[7158-7170]:ReturnStatement[7196-7208]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7196-7205]:MarkerAnnotation[7234-7243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7212-7218]:Modifier[7250-7256]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7219-7225]:SimpleType[7257-7263]"
    }, {
      "left" : "caseAllType",
      "right" : "caseAllType",
      "info" : "SimpleName[7226-7237]:SimpleName[7264-7275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7240-7370]:Block[7278-7408]"
    }, {
      "left" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);",
      "right" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);",
      "info" : "ReturnStatement[7250-7362]:ReturnStatement[7288-7400]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7378-7387]:MarkerAnnotation[7416-7425]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7394-7400]:Modifier[7432-7438]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7401-7407]:SimpleType[7439-7445]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[7408-7424]:SimpleName[7446-7462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7427-7482]:Block[7465-7520]"
    }, {
      "left" : "return getNativeType(NO_OBJECT_TYPE);",
      "right" : "return getNativeType(NO_OBJECT_TYPE);",
      "info" : "ReturnStatement[7437-7474]:ReturnStatement[7475-7512]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7490-7499]:MarkerAnnotation[7528-7537]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7506-7512]:Modifier[7544-7550]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7513-7519]:SimpleType[7551-7557]"
    }, {
      "left" : "caseNoType",
      "right" : "caseNoType",
      "info" : "SimpleName[7520-7530]:SimpleName[7558-7568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7533-7581]:Block[7571-7619]"
    }, {
      "left" : "return getNativeType(NO_TYPE);",
      "right" : "return getNativeType(NO_TYPE);",
      "info" : "ReturnStatement[7543-7573]:ReturnStatement[7581-7611]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7589-7598]:MarkerAnnotation[7627-7636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7605-7611]:Modifier[7643-7649]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7612-7618]:SimpleType[7650-7656]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[7619-7634]:SimpleName[7657-7672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7637-7690]:Block[7675-7728]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[7647-7682]:ReturnStatement[7685-7720]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7698-7707]:MarkerAnnotation[7736-7745]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7714-7720]:Modifier[7752-7758]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7721-7727]:SimpleType[7759-7765]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[7728-7744]:SimpleName[7766-7782]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[7745-7762]:SingleVariableDeclaration[7783-7800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7764-7794]:Block[7802-7832]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[7774-7786]:ReturnStatement[7812-7824]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7802-7811]:MarkerAnnotation[7840-7849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7818-7824]:Modifier[7856-7862]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7825-7831]:SimpleType[7863-7869]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[7832-7844]:SimpleName[7870-7882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7847-7897]:Block[7885-7935]"
    }, {
      "left" : "return getNativeType(NULL_TYPE);",
      "right" : "return getNativeType(NULL_TYPE);",
      "info" : "ReturnStatement[7857-7889]:ReturnStatement[7895-7927]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7905-7914]:MarkerAnnotation[7943-7952]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7921-7927]:Modifier[7959-7965]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7928-7934]:SimpleType[7966-7972]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[7935-7949]:SimpleName[7973-7987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7952-8004]:Block[7990-8042]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[7962-7996]:ReturnStatement[8000-8034]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8012-8021]:MarkerAnnotation[8050-8059]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8028-8034]:Modifier[8066-8072]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8035-8041]:SimpleType[8073-8079]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[8042-8056]:SimpleName[8080-8094]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[8057-8072]:SingleVariableDeclaration[8095-8110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8074-8104]:Block[8112-8142]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[8084-8096]:ReturnStatement[8122-8134]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8112-8121]:MarkerAnnotation[8150-8159]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8128-8134]:Modifier[8166-8172]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8135-8141]:SimpleType[8173-8179]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[8142-8156]:SimpleName[8180-8194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8159-8211]:Block[8197-8249]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[8169-8203]:ReturnStatement[8207-8241]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8219-8228]:MarkerAnnotation[8257-8266]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8235-8241]:Modifier[8273-8279]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8242-8248]:SimpleType[8280-8286]"
    }, {
      "left" : "caseUnionType",
      "right" : "caseUnionType",
      "info" : "SimpleName[8249-8262]:SimpleName[8287-8300]"
    }, {
      "left" : "UnionType type",
      "right" : "UnionType type",
      "info" : "SingleVariableDeclaration[8263-8277]:SingleVariableDeclaration[8301-8315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8279-8354]:Block[8317-8392]"
    }, {
      "left" : "return type.getRestrictedUnion(getNativeType(VOID_TYPE));",
      "right" : "return type.getRestrictedUnion(getNativeType(VOID_TYPE));",
      "info" : "ReturnStatement[8289-8346]:ReturnStatement[8327-8384]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8362-8371]:MarkerAnnotation[8400-8409]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8378-8384]:Modifier[8416-8422]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8385-8391]:SimpleType[8423-8429]"
    }, {
      "left" : "caseUnknownType",
      "right" : "caseUnknownType",
      "info" : "SimpleName[8392-8407]:SimpleName[8430-8445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8410-8463]:Block[8448-8501]"
    }, {
      "left" : "return getNativeType(UNKNOWN_TYPE);",
      "right" : "return getNativeType(UNKNOWN_TYPE);",
      "info" : "ReturnStatement[8420-8455]:ReturnStatement[8458-8493]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8471-8480]:MarkerAnnotation[8509-8518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8487-8493]:Modifier[8525-8531]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8494-8500]:SimpleType[8532-8538]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[8501-8513]:SimpleName[8539-8551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8516-8546]:Block[8554-8584]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8526-8538]:ReturnStatement[8564-8576]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8554-8563]:MarkerAnnotation[8592-8601]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8570-8576]:Modifier[8608-8614]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8577-8583]:SimpleType[8615-8621]"
    }, {
      "left" : "caseParameterizedType",
      "right" : "caseParameterizedType",
      "info" : "SimpleName[8584-8605]:SimpleName[8622-8643]"
    }, {
      "left" : "ParameterizedType type",
      "right" : "ParameterizedType type",
      "info" : "SingleVariableDeclaration[8606-8628]:SingleVariableDeclaration[8644-8666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8630-8676]:Block[8668-8714]"
    }, {
      "left" : "return caseObjectType(type);",
      "right" : "return caseObjectType(type);",
      "info" : "ReturnStatement[8640-8668]:ReturnStatement[8678-8706]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8684-8693]:MarkerAnnotation[8722-8731]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8700-8706]:Modifier[8738-8744]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8707-8713]:SimpleType[8745-8751]"
    }, {
      "left" : "caseTemplateType",
      "right" : "caseTemplateType",
      "info" : "SimpleName[8714-8730]:SimpleName[8752-8768]"
    }, {
      "left" : "TemplateType templateType",
      "right" : "TemplateType templateType",
      "info" : "SingleVariableDeclaration[8731-8756]:SingleVariableDeclaration[8769-8794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8758-8812]:Block[8796-8850]"
    }, {
      "left" : "return caseObjectType(templateType);",
      "right" : "return caseObjectType(templateType);",
      "info" : "ReturnStatement[8768-8804]:ReturnStatement[8806-8842]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8966-8975]:MarkerAnnotation[9004-9013]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8982-8988]:Modifier[9020-9026]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8989-8995]:SimpleType[9027-9033]"
    }, {
      "left" : "caseEnumElementType",
      "right" : "caseEnumElementType",
      "info" : "SimpleName[8996-9015]:SimpleName[9034-9053]"
    }, {
      "left" : "EnumElementType enumElementType",
      "right" : "EnumElementType enumElementType",
      "info" : "SingleVariableDeclaration[9016-9047]:SingleVariableDeclaration[9054-9085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9049-9291]:Block[9087-9329]"
    }, {
      "left" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "right" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "info" : "VariableDeclarationStatement[9059-9120]:VariableDeclarationStatement[9097-9158]"
    }, {
      "left" : "if (type != null && enumElementType.getPrimitiveType().equals(type))",
      "right" : "if (type != null && enumElementType.getPrimitiveType().equals(type))",
      "info" : "IfStatement[9129-9283]:IfStatement[9167-9321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9198-9243]:Block[9236-9281]"
    }, {
      "left" : "return enumElementType;",
      "right" : "return enumElementType;",
      "info" : "ReturnStatement[9210-9233]:ReturnStatement[9248-9271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9249-9283]:Block[9287-9321]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[9261-9273]:ReturnStatement[9299-9311]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9299-9308]:MarkerAnnotation[9337-9346]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9315-9321]:Modifier[9353-9359]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9322-9328]:SimpleType[9360-9366]"
    }, {
      "left" : "caseAllType",
      "right" : "caseAllType",
      "info" : "SimpleName[9329-9340]:SimpleName[9367-9378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9343-9473]:Block[9381-9511]"
    }, {
      "left" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);",
      "right" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);",
      "info" : "ReturnStatement[9353-9465]:ReturnStatement[9391-9503]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9481-9490]:MarkerAnnotation[9519-9528]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9497-9503]:Modifier[9535-9541]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9504-9510]:SimpleType[9542-9548]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[9511-9527]:SimpleName[9549-9565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9530-9585]:Block[9568-9623]"
    }, {
      "left" : "return getNativeType(NO_OBJECT_TYPE);",
      "right" : "return getNativeType(NO_OBJECT_TYPE);",
      "info" : "ReturnStatement[9540-9577]:ReturnStatement[9578-9615]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9593-9602]:MarkerAnnotation[9631-9640]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9609-9615]:Modifier[9647-9653]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9616-9622]:SimpleType[9654-9660]"
    }, {
      "left" : "caseNoType",
      "right" : "caseNoType",
      "info" : "SimpleName[9623-9633]:SimpleName[9661-9671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9636-9684]:Block[9674-9722]"
    }, {
      "left" : "return getNativeType(NO_TYPE);",
      "right" : "return getNativeType(NO_TYPE);",
      "info" : "ReturnStatement[9646-9676]:ReturnStatement[9684-9714]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9692-9701]:MarkerAnnotation[9730-9739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9708-9714]:Modifier[9746-9752]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9715-9721]:SimpleType[9753-9759]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[9722-9737]:SimpleName[9760-9775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9740-9793]:Block[9778-9831]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[9750-9785]:ReturnStatement[9788-9823]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9801-9810]:MarkerAnnotation[9839-9848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9817-9823]:Modifier[9855-9861]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9824-9830]:SimpleType[9862-9868]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[9831-9847]:SimpleName[9869-9885]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[9848-9865]:SingleVariableDeclaration[9886-9903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9867-9897]:Block[9905-9935]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[9877-9889]:ReturnStatement[9915-9927]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9905-9914]:MarkerAnnotation[9943-9952]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9921-9927]:Modifier[9959-9965]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9928-9934]:SimpleType[9966-9972]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[9935-9947]:SimpleName[9973-9985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9950-9980]:Block[9988-10018]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9960-9972]:ReturnStatement[9998-10010]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9988-9997]:MarkerAnnotation[10026-10035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10004-10010]:Modifier[10042-10048]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10011-10017]:SimpleType[10049-10055]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[10018-10032]:SimpleName[10056-10070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10035-10087]:Block[10073-10125]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[10045-10079]:ReturnStatement[10083-10117]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10095-10104]:MarkerAnnotation[10133-10142]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10111-10117]:Modifier[10149-10155]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10118-10124]:SimpleType[10156-10162]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[10125-10139]:SimpleName[10163-10177]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[10140-10155]:SingleVariableDeclaration[10178-10193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10157-10187]:Block[10195-10225]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[10167-10179]:ReturnStatement[10205-10217]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10195-10204]:MarkerAnnotation[10233-10242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10211-10217]:Modifier[10249-10255]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10218-10224]:SimpleType[10256-10262]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[10225-10239]:SimpleName[10263-10277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10242-10294]:Block[10280-10332]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[10252-10286]:ReturnStatement[10290-10324]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10302-10311]:MarkerAnnotation[10340-10349]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10318-10324]:Modifier[10356-10362]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10325-10331]:SimpleType[10363-10369]"
    }, {
      "left" : "caseUnionType",
      "right" : "caseUnionType",
      "info" : "SimpleName[10332-10345]:SimpleName[10370-10383]"
    }, {
      "left" : "UnionType type",
      "right" : "UnionType type",
      "info" : "SingleVariableDeclaration[10346-10360]:SingleVariableDeclaration[10384-10398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10362-10437]:Block[10400-10475]"
    }, {
      "left" : "return type.getRestrictedUnion(getNativeType(NULL_TYPE));",
      "right" : "return type.getRestrictedUnion(getNativeType(NULL_TYPE));",
      "info" : "ReturnStatement[10372-10429]:ReturnStatement[10410-10467]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10445-10454]:MarkerAnnotation[10483-10492]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10461-10467]:Modifier[10499-10505]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10468-10474]:SimpleType[10506-10512]"
    }, {
      "left" : "caseUnknownType",
      "right" : "caseUnknownType",
      "info" : "SimpleName[10475-10490]:SimpleName[10513-10528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10493-10546]:Block[10531-10584]"
    }, {
      "left" : "return getNativeType(UNKNOWN_TYPE);",
      "right" : "return getNativeType(UNKNOWN_TYPE);",
      "info" : "ReturnStatement[10503-10538]:ReturnStatement[10541-10576]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10554-10563]:MarkerAnnotation[10592-10601]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10570-10576]:Modifier[10608-10614]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10577-10583]:SimpleType[10615-10621]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[10584-10596]:SimpleName[10622-10634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10599-10649]:Block[10637-10687]"
    }, {
      "left" : "return getNativeType(VOID_TYPE);",
      "right" : "return getNativeType(VOID_TYPE);",
      "info" : "ReturnStatement[10609-10641]:ReturnStatement[10647-10679]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10657-10666]:MarkerAnnotation[10695-10704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10673-10679]:Modifier[10711-10717]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10680-10686]:SimpleType[10718-10724]"
    }, {
      "left" : "caseParameterizedType",
      "right" : "caseParameterizedType",
      "info" : "SimpleName[10687-10708]:SimpleName[10725-10746]"
    }, {
      "left" : "ParameterizedType type",
      "right" : "ParameterizedType type",
      "info" : "SingleVariableDeclaration[10709-10731]:SingleVariableDeclaration[10747-10769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10733-10779]:Block[10771-10817]"
    }, {
      "left" : "return caseObjectType(type);",
      "right" : "return caseObjectType(type);",
      "info" : "ReturnStatement[10743-10771]:ReturnStatement[10781-10809]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10787-10796]:MarkerAnnotation[10825-10834]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10803-10809]:Modifier[10841-10847]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10810-10816]:SimpleType[10848-10854]"
    }, {
      "left" : "caseTemplateType",
      "right" : "caseTemplateType",
      "info" : "SimpleName[10817-10833]:SimpleName[10855-10871]"
    }, {
      "left" : "TemplateType templateType",
      "right" : "TemplateType templateType",
      "info" : "SingleVariableDeclaration[10834-10859]:SingleVariableDeclaration[10872-10897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10861-10915]:Block[10899-10953]"
    }, {
      "left" : "return caseObjectType(templateType);",
      "right" : "return caseObjectType(templateType);",
      "info" : "ReturnStatement[10871-10907]:ReturnStatement[10909-10945]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[11051-11059]:Modifier[11089-11097]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[11060-11065]:TYPE_DECLARATION_KIND[11098-11103]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleName[11066-11095]:SimpleName[11104-11133]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11402-11411]:Modifier[11440-11449]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[11412-11420]:Modifier[11450-11458]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11421-11427]:SimpleType[11459-11465]"
    }, {
      "left" : "caseTopType",
      "right" : "caseTopType",
      "info" : "SimpleName[11428-11439]:SimpleName[11466-11477]"
    }, {
      "left" : "JSType topType",
      "right" : "JSType topType",
      "info" : "SingleVariableDeclaration[11440-11454]:SingleVariableDeclaration[11478-11492]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11462-11471]:MarkerAnnotation[11500-11509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11476-11482]:Modifier[11514-11520]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11483-11489]:SimpleType[11521-11527]"
    }, {
      "left" : "caseAllType",
      "right" : "caseAllType",
      "info" : "SimpleName[11490-11501]:SimpleName[11528-11539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11504-11562]:Block[11542-11600]"
    }, {
      "left" : "return caseTopType(getNativeType(ALL_TYPE));",
      "right" : "return caseTopType(getNativeType(ALL_TYPE));",
      "info" : "ReturnStatement[11512-11556]:ReturnStatement[11550-11594]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11568-11577]:MarkerAnnotation[11606-11615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11582-11588]:Modifier[11620-11626]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11589-11595]:SimpleType[11627-11633]"
    }, {
      "left" : "caseUnknownType",
      "right" : "caseUnknownType",
      "info" : "SimpleName[11596-11611]:SimpleName[11634-11649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11614-11676]:Block[11652-11714]"
    }, {
      "left" : "return caseTopType(getNativeType(UNKNOWN_TYPE));",
      "right" : "return caseTopType(getNativeType(UNKNOWN_TYPE));",
      "info" : "ReturnStatement[11622-11670]:ReturnStatement[11660-11708]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11682-11691]:MarkerAnnotation[11720-11729]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11696-11702]:Modifier[11734-11740]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11703-11709]:SimpleType[11741-11747]"
    }, {
      "left" : "caseUnionType",
      "right" : "caseUnionType",
      "info" : "SimpleName[11710-11723]:SimpleName[11748-11761]"
    }, {
      "left" : "UnionType type",
      "right" : "UnionType type",
      "info" : "SingleVariableDeclaration[11724-11738]:SingleVariableDeclaration[11762-11776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11740-12168]:Block[11778-12206]"
    }, {
      "left" : "JSType restricted = null;",
      "right" : "JSType restricted = null;",
      "info" : "VariableDeclarationStatement[11748-11773]:VariableDeclarationStatement[11786-11811]"
    }, {
      "left" : "for (JSType alternate : type.getAlternates())",
      "right" : "for (JSType alternate : type.getAlternates())",
      "info" : "EnhancedForStatement[11780-12137]:EnhancedForStatement[11818-12175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11826-12137]:Block[11864-12175]"
    }, {
      "left" : "JSType restrictedAlternate = alternate.visit(this);",
      "right" : "JSType restrictedAlternate = alternate.visit(this);",
      "info" : "VariableDeclarationStatement[11836-11887]:VariableDeclarationStatement[11874-11925]"
    }, {
      "left" : "if (restrictedAlternate != null)",
      "right" : "if (restrictedAlternate != null)",
      "info" : "IfStatement[11896-12129]:IfStatement[11934-12167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11929-12129]:Block[11967-12167]"
    }, {
      "left" : "if (restricted == null)",
      "right" : "if (restricted == null)",
      "info" : "IfStatement[11941-12119]:IfStatement[11979-12157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11965-12024]:Block[12003-12062]"
    }, {
      "left" : "restricted = restrictedAlternate;",
      "right" : "restricted = restrictedAlternate;",
      "info" : "ExpressionStatement[11979-12012]:ExpressionStatement[12017-12050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12030-12119]:Block[12068-12157]"
    }, {
      "left" : "restricted = restrictedAlternate.getLeastSupertype(restricted);",
      "right" : "restricted = restrictedAlternate.getLeastSupertype(restricted);",
      "info" : "ExpressionStatement[12044-12107]:ExpressionStatement[12082-12145]"
    }, {
      "left" : "return restricted;",
      "right" : "return restricted;",
      "info" : "ReturnStatement[12144-12162]:ReturnStatement[12182-12200]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12174-12183]:MarkerAnnotation[12212-12221]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12188-12194]:Modifier[12226-12232]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[12195-12201]:SimpleType[12233-12239]"
    }, {
      "left" : "caseNoType",
      "right" : "caseNoType",
      "info" : "SimpleName[12202-12212]:SimpleName[12240-12250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12215-12259]:Block[12253-12297]"
    }, {
      "left" : "return getNativeType(NO_TYPE);",
      "right" : "return getNativeType(NO_TYPE);",
      "info" : "ReturnStatement[12223-12253]:ReturnStatement[12261-12291]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12265-12274]:MarkerAnnotation[12303-12312]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12279-12285]:Modifier[12317-12323]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[12286-12292]:SimpleType[12324-12330]"
    }, {
      "left" : "caseEnumElementType",
      "right" : "caseEnumElementType",
      "info" : "SimpleName[12293-12312]:SimpleName[12331-12350]"
    }, {
      "left" : "EnumElementType enumElementType",
      "right" : "EnumElementType enumElementType",
      "info" : "SingleVariableDeclaration[12313-12344]:SingleVariableDeclaration[12351-12382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12346-13065]:Block[12384-13103]"
    }, {
      "left" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "right" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "info" : "VariableDeclarationStatement[12845-12906]:VariableDeclarationStatement[12883-12944]"
    }, {
      "left" : "if (type != null && enumElementType.getPrimitiveType().equals(type))",
      "right" : "if (type != null && enumElementType.getPrimitiveType().equals(type))",
      "info" : "IfStatement[12913-13059]:IfStatement[12951-13097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12982-13023]:Block[13020-13061]"
    }, {
      "left" : "return enumElementType;",
      "right" : "return enumElementType;",
      "info" : "ReturnStatement[12992-13015]:ReturnStatement[13030-13053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13029-13059]:Block[13067-13097]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[13039-13051]:ReturnStatement[13077-13089]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13071-13080]:MarkerAnnotation[13109-13118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13085-13091]:Modifier[13123-13129]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13092-13098]:SimpleType[13130-13136]"
    }, {
      "left" : "caseParameterizedType",
      "right" : "caseParameterizedType",
      "info" : "SimpleName[13099-13120]:SimpleName[13137-13158]"
    }, {
      "left" : "ParameterizedType type",
      "right" : "ParameterizedType type",
      "info" : "SingleVariableDeclaration[13121-13143]:SingleVariableDeclaration[13159-13181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13145-13187]:Block[13183-13225]"
    }, {
      "left" : "return caseObjectType(type);",
      "right" : "return caseObjectType(type);",
      "info" : "ReturnStatement[13153-13181]:ReturnStatement[13191-13219]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13193-13202]:MarkerAnnotation[13231-13240]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13207-13213]:Modifier[13245-13251]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13214-13220]:SimpleType[13252-13258]"
    }, {
      "left" : "caseTemplateType",
      "right" : "caseTemplateType",
      "info" : "SimpleName[13221-13237]:SimpleName[13259-13275]"
    }, {
      "left" : "TemplateType templateType",
      "right" : "TemplateType templateType",
      "info" : "SingleVariableDeclaration[13238-13263]:SingleVariableDeclaration[13276-13301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13265-13315]:Block[13303-13353]"
    }, {
      "left" : "return caseObjectType(templateType);",
      "right" : "return caseObjectType(templateType);",
      "info" : "ReturnStatement[13273-13309]:ReturnStatement[13311-13347]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[13565-13573]:Modifier[13603-13611]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[13574-13579]:TYPE_DECLARATION_KIND[13612-13617]"
    }, {
      "left" : "RestrictByTrueTypeOfResultVisitor",
      "right" : "RestrictByTrueTypeOfResultVisitor",
      "info" : "SimpleName[13580-13613]:SimpleName[13618-13651]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleType[13628-13657]:SimpleType[13666-13695]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13664-13673]:MarkerAnnotation[13702-13711]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13678-13684]:Modifier[13716-13722]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13685-13691]:SimpleType[13723-13729]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[13692-13708]:SimpleName[13730-13746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13711-13737]:Block[13749-13775]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13719-13731]:ReturnStatement[13757-13769]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13743-13752]:MarkerAnnotation[13781-13790]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13757-13763]:Modifier[13795-13801]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13764-13770]:SimpleType[13802-13808]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[13771-13786]:SimpleName[13809-13824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13789-13815]:Block[13827-13853]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13797-13809]:ReturnStatement[13835-13847]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13821-13830]:MarkerAnnotation[13859-13868]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13835-13841]:Modifier[13873-13879]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13842-13848]:SimpleType[13880-13886]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[13849-13865]:SimpleName[13887-13903]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[13866-13883]:SingleVariableDeclaration[13904-13921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13885-13911]:Block[13923-13949]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13893-13905]:ReturnStatement[13931-13943]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13917-13926]:MarkerAnnotation[13955-13964]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13931-13937]:Modifier[13969-13975]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13938-13944]:SimpleType[13976-13982]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[13945-13957]:SimpleName[13983-13995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13960-13986]:Block[13998-14024]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13968-13980]:ReturnStatement[14006-14018]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13992-14001]:MarkerAnnotation[14030-14039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14006-14012]:Modifier[14044-14050]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14013-14019]:SimpleType[14051-14057]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[14020-14034]:SimpleName[14058-14072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14037-14063]:Block[14075-14101]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14045-14057]:ReturnStatement[14083-14095]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14069-14078]:MarkerAnnotation[14107-14116]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14083-14089]:Modifier[14121-14127]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14090-14096]:SimpleType[14128-14134]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[14097-14111]:SimpleName[14135-14149]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[14112-14127]:SingleVariableDeclaration[14150-14165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14129-14155]:Block[14167-14193]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14137-14149]:ReturnStatement[14175-14187]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14161-14170]:MarkerAnnotation[14199-14208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14175-14181]:Modifier[14213-14219]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14182-14188]:SimpleType[14220-14226]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[14189-14203]:SimpleName[14227-14241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14206-14232]:Block[14244-14270]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14214-14226]:ReturnStatement[14252-14264]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14238-14247]:MarkerAnnotation[14276-14285]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14252-14258]:Modifier[14290-14296]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14259-14265]:SimpleType[14297-14303]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[14266-14278]:SimpleName[14304-14316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14281-14307]:Block[14319-14345]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14289-14301]:ReturnStatement[14327-14339]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[14556-14564]:Modifier[14594-14602]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[14565-14570]:TYPE_DECLARATION_KIND[14603-14608]"
    }, {
      "left" : "RestrictByFalseTypeOfResultVisitor",
      "right" : "RestrictByFalseTypeOfResultVisitor",
      "info" : "SimpleName[14571-14605]:SimpleName[14609-14643]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleType[14620-14649]:SimpleType[14658-14687]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14656-14665]:MarkerAnnotation[14694-14703]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14670-14679]:Modifier[14708-14717]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14680-14686]:SimpleType[14718-14724]"
    }, {
      "left" : "caseTopType",
      "right" : "caseTopType",
      "info" : "SimpleName[14687-14698]:SimpleName[14725-14736]"
    }, {
      "left" : "JSType topType",
      "right" : "JSType topType",
      "info" : "SingleVariableDeclaration[14699-14713]:SingleVariableDeclaration[14737-14751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14715-14744]:Block[14753-14782]"
    }, {
      "left" : "return topType;",
      "right" : "return topType;",
      "info" : "ReturnStatement[14723-14738]:ReturnStatement[14761-14776]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14750-14759]:MarkerAnnotation[14788-14797]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14764-14770]:Modifier[14802-14808]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14771-14777]:SimpleType[14809-14815]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[14778-14794]:SimpleName[14816-14832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14797-14848]:Block[14835-14886]"
    }, {
      "left" : "return getNativeType(NO_OBJECT_TYPE);",
      "right" : "return getNativeType(NO_OBJECT_TYPE);",
      "info" : "ReturnStatement[14805-14842]:ReturnStatement[14843-14880]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14854-14863]:MarkerAnnotation[14892-14901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14868-14874]:Modifier[14906-14912]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14875-14881]:SimpleType[14913-14919]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[14882-14897]:SimpleName[14920-14935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14900-14949]:Block[14938-14987]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[14908-14943]:ReturnStatement[14946-14981]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14955-14964]:MarkerAnnotation[14993-15002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14969-14975]:Modifier[15007-15013]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14976-14982]:SimpleType[15014-15020]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[14983-14999]:SimpleName[15021-15037]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[15000-15017]:SingleVariableDeclaration[15038-15055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15019-15045]:Block[15057-15083]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[15027-15039]:ReturnStatement[15065-15077]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15051-15060]:MarkerAnnotation[15089-15098]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15065-15071]:Modifier[15103-15109]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15072-15078]:SimpleType[15110-15116]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[15079-15091]:SimpleName[15117-15129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15094-15140]:Block[15132-15178]"
    }, {
      "left" : "return getNativeType(NULL_TYPE);",
      "right" : "return getNativeType(NULL_TYPE);",
      "info" : "ReturnStatement[15102-15134]:ReturnStatement[15140-15172]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15146-15155]:MarkerAnnotation[15184-15193]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15160-15166]:Modifier[15198-15204]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15167-15173]:SimpleType[15205-15211]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[15174-15188]:SimpleName[15212-15226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15191-15239]:Block[15229-15277]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[15199-15233]:ReturnStatement[15237-15271]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15245-15254]:MarkerAnnotation[15283-15292]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15259-15265]:Modifier[15297-15303]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15266-15272]:SimpleType[15304-15310]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[15273-15287]:SimpleName[15311-15325]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[15288-15303]:SingleVariableDeclaration[15326-15341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15305-15331]:Block[15343-15369]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[15313-15325]:ReturnStatement[15351-15363]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15337-15346]:MarkerAnnotation[15375-15384]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15351-15357]:Modifier[15389-15395]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15358-15364]:SimpleType[15396-15402]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[15365-15379]:SimpleName[15403-15417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15382-15430]:Block[15420-15468]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[15390-15424]:ReturnStatement[15428-15462]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15436-15445]:MarkerAnnotation[15474-15483]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15450-15456]:Modifier[15488-15494]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15457-15463]:SimpleType[15495-15501]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[15464-15476]:SimpleName[15502-15514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15479-15525]:Block[15517-15563]"
    }, {
      "left" : "return getNativeType(VOID_TYPE);",
      "right" : "return getNativeType(VOID_TYPE);",
      "info" : "ReturnStatement[15487-15519]:ReturnStatement[15525-15557]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15619-15626]:Modifier[15657-15664]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[15627-15632]:TYPE_DECLARATION_KIND[15665-15670]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor",
      "right" : "RestrictByOneTypeOfResultVisitor",
      "info" : "SimpleName[15633-15665]:SimpleName[15671-15703]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleType[15680-15709]:SimpleType[15718-15747]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor",
      "right" : "RestrictByOneTypeOfResultVisitor",
      "info" : "SimpleName[16089-16121]:SimpleName[16127-16159]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[16122-16134]:SingleVariableDeclaration[16160-16172]"
    }, {
      "left" : "boolean resultEqualsValue",
      "right" : "boolean resultEqualsValue",
      "info" : "SingleVariableDeclaration[16136-16161]:SingleVariableDeclaration[16174-16199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16163-16246]:Block[16201-16284]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[16171-16190]:ExpressionStatement[16209-16228]"
    }, {
      "left" : "this.resultEqualsValue = resultEqualsValue;",
      "right" : "this.resultEqualsValue = resultEqualsValue;",
      "info" : "ExpressionStatement[16197-16240]:ExpressionStatement[16235-16278]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16435-16442]:Modifier[16473-16480]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16443-16450]:PrimitiveType[16481-16488]"
    }, {
      "left" : "matchesExpectation",
      "right" : "matchesExpectation",
      "info" : "SimpleName[16451-16469]:SimpleName[16489-16507]"
    }, {
      "left" : "String result",
      "right" : "String result",
      "info" : "SingleVariableDeclaration[16470-16483]:SingleVariableDeclaration[16508-16521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16485-16548]:Block[16523-16586]"
    }, {
      "left" : "return result.equals(value) == resultEqualsValue;",
      "right" : "return result.equals(value) == resultEqualsValue;",
      "info" : "ReturnStatement[16493-16542]:ReturnStatement[16531-16580]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16554-16563]:MarkerAnnotation[16592-16601]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[16568-16577]:Modifier[16606-16615]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[16578-16584]:SimpleType[16616-16622]"
    }, {
      "left" : "caseTopType",
      "right" : "caseTopType",
      "info" : "SimpleName[16585-16596]:SimpleName[16623-16634]"
    }, {
      "left" : "JSType topType",
      "right" : "JSType topType",
      "info" : "SingleVariableDeclaration[16597-16611]:SingleVariableDeclaration[16635-16649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16613-16845]:Block[16651-16883]"
    }, {
      "left" : "JSType result = topType;",
      "right" : "JSType result = topType;",
      "info" : "VariableDeclarationStatement[16621-16645]:VariableDeclarationStatement[16659-16683]"
    }, {
      "left" : "if (resultEqualsValue)",
      "right" : "if (resultEqualsValue)",
      "info" : "IfStatement[16652-16818]:IfStatement[16690-16856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16675-16818]:Block[16713-16856]"
    }, {
      "left" : "JSType typeByName = getNativeTypeForTypeOf(value);",
      "right" : "JSType typeByName = getNativeTypeForTypeOf(value);",
      "info" : "VariableDeclarationStatement[16685-16735]:VariableDeclarationStatement[16723-16773]"
    }, {
      "left" : "if (typeByName != null)",
      "right" : "if (typeByName != null)",
      "info" : "IfStatement[16744-16810]:IfStatement[16782-16848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16768-16810]:Block[16806-16848]"
    }, {
      "left" : "result = typeByName;",
      "right" : "result = typeByName;",
      "info" : "ExpressionStatement[16780-16800]:ExpressionStatement[16818-16838]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[16825-16839]:ReturnStatement[16863-16877]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16851-16860]:MarkerAnnotation[16889-16898]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16865-16871]:Modifier[16903-16909]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[16872-16878]:SimpleType[16910-16916]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[16879-16895]:SimpleName[16917-16933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16898-17042]:Block[16936-17080]"
    }, {
      "left" : "return (value.equals(\"object\") || value.equals(\"function\")) ==\n          resultEqualsValue ? getNativeType(NO_OBJECT_TYPE) : null;",
      "right" : "return (value.equals(\"object\") || value.equals(\"function\")) ==\n          resultEqualsValue ? getNativeType(NO_OBJECT_TYPE) : null;",
      "info" : "ReturnStatement[16906-17036]:ReturnStatement[16944-17074]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17048-17057]:MarkerAnnotation[17086-17095]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17062-17068]:Modifier[17100-17106]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17069-17075]:SimpleType[17107-17113]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[17076-17091]:SimpleName[17114-17129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17094-17182]:Block[17132-17220]"
    }, {
      "left" : "return matchesExpectation(\"boolean\") ? getNativeType(BOOLEAN_TYPE) : null;",
      "right" : "return matchesExpectation(\"boolean\") ? getNativeType(BOOLEAN_TYPE) : null;",
      "info" : "ReturnStatement[17102-17176]:ReturnStatement[17140-17214]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17188-17197]:MarkerAnnotation[17226-17235]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17202-17208]:Modifier[17240-17246]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17209-17215]:SimpleType[17247-17253]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[17216-17232]:SimpleName[17254-17270]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[17233-17250]:SingleVariableDeclaration[17271-17288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17252-17318]:Block[17290-17356]"
    }, {
      "left" : "return matchesExpectation(\"function\") ? type : null;",
      "right" : "return matchesExpectation(\"function\") ? type : null;",
      "info" : "ReturnStatement[17260-17312]:ReturnStatement[17298-17350]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17324-17333]:MarkerAnnotation[17362-17371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17338-17344]:Modifier[17376-17382]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17345-17351]:SimpleType[17383-17389]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[17352-17364]:SimpleName[17390-17402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17367-17451]:Block[17405-17489]"
    }, {
      "left" : "return matchesExpectation(\"object\") ? getNativeType(NULL_TYPE) : null;",
      "right" : "return matchesExpectation(\"object\") ? getNativeType(NULL_TYPE) : null;",
      "info" : "ReturnStatement[17375-17445]:ReturnStatement[17413-17483]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17457-17466]:MarkerAnnotation[17495-17504]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17471-17477]:Modifier[17509-17515]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17478-17484]:SimpleType[17516-17522]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[17485-17499]:SimpleName[17523-17537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17502-17588]:Block[17540-17626]"
    }, {
      "left" : "return matchesExpectation(\"number\") ? getNativeType(NUMBER_TYPE) : null;",
      "right" : "return matchesExpectation(\"number\") ? getNativeType(NUMBER_TYPE) : null;",
      "info" : "ReturnStatement[17510-17582]:ReturnStatement[17548-17620]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17594-17603]:MarkerAnnotation[17632-17641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17608-17614]:Modifier[17646-17652]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17615-17621]:SimpleType[17653-17659]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[17622-17636]:SimpleName[17660-17674]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[17637-17652]:SingleVariableDeclaration[17675-17690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17654-17907]:Block[17692-17945]"
    }, {
      "left" : "if (value.equals(\"function\"))",
      "right" : "if (value.equals(\"function\"))",
      "info" : "IfStatement[17662-17844]:IfStatement[17700-17882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17692-17844]:Block[17730-17882]"
    }, {
      "left" : "JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "right" : "JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "info" : "VariableDeclarationStatement[17702-17756]:VariableDeclarationStatement[17740-17794]"
    }, {
      "left" : "return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;",
      "right" : "return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;",
      "info" : "ReturnStatement[17765-17836]:ReturnStatement[17803-17874]"
    }, {
      "left" : "return matchesExpectation(\"object\") ? type : null;",
      "right" : "return matchesExpectation(\"object\") ? type : null;",
      "info" : "ReturnStatement[17851-17901]:ReturnStatement[17889-17939]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17913-17922]:MarkerAnnotation[17951-17960]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17927-17933]:Modifier[17965-17971]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17934-17940]:SimpleType[17972-17978]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[17941-17955]:SimpleName[17979-17993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17958-18044]:Block[17996-18082]"
    }, {
      "left" : "return matchesExpectation(\"string\") ? getNativeType(STRING_TYPE) : null;",
      "right" : "return matchesExpectation(\"string\") ? getNativeType(STRING_TYPE) : null;",
      "info" : "ReturnStatement[17966-18038]:ReturnStatement[18004-18076]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18050-18059]:MarkerAnnotation[18088-18097]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18064-18070]:Modifier[18102-18108]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18071-18077]:SimpleType[18109-18115]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[18078-18090]:SimpleName[18116-18128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18093-18180]:Block[18131-18218]"
    }, {
      "left" : "return matchesExpectation(\"undefined\") ? getNativeType(VOID_TYPE) : null;",
      "right" : "return matchesExpectation(\"undefined\") ? getNativeType(VOID_TYPE) : null;",
      "info" : "ReturnStatement[18101-18174]:ReturnStatement[18139-18212]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18263-18272]:Modifier[18301-18310]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18273-18278]:Modifier[18311-18316]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18279-18285]:SimpleType[18317-18323]"
    }, {
      "left" : "getRestrictedWithoutUndefined",
      "right" : "getRestrictedWithoutUndefined",
      "info" : "SimpleName[18286-18315]:SimpleName[18324-18353]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[18316-18327]:SingleVariableDeclaration[18354-18365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18329-18405]:Block[18367-18443]"
    }, {
      "left" : "return type == null ? null : type.visit(restrictUndefinedVisitor);",
      "right" : "return type == null ? null : type.visit(restrictUndefinedVisitor);",
      "info" : "ReturnStatement[18335-18401]:ReturnStatement[18373-18439]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18479-18488]:Modifier[18517-18526]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18489-18494]:Modifier[18527-18532]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18495-18501]:SimpleType[18533-18539]"
    }, {
      "left" : "getRestrictedWithoutNull",
      "right" : "getRestrictedWithoutNull",
      "info" : "SimpleName[18502-18526]:SimpleName[18540-18564]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[18527-18538]:SingleVariableDeclaration[18565-18576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18540-18611]:Block[18578-18649]"
    }, {
      "left" : "return type == null ? null : type.visit(restrictNullVisitor);",
      "right" : "return type == null ? null : type.visit(restrictNullVisitor);",
      "info" : "ReturnStatement[18546-18607]:ReturnStatement[18584-18645]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[19860-19866]:SimpleType[19898-19904]"
    }, {
      "left" : "getRestrictedByTypeOfResult",
      "right" : "getRestrictedByTypeOfResult",
      "info" : "SimpleName[19867-19894]:SimpleName[19905-19932]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[19895-19906]:SingleVariableDeclaration[19933-19944]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[19908-19920]:SingleVariableDeclaration[19946-19958]"
    }, {
      "left" : "boolean resultEqualsValue",
      "right" : "boolean resultEqualsValue",
      "info" : "SingleVariableDeclaration[19959-19984]:SingleVariableDeclaration[19997-20022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19986-20317]:Block[20024-20355]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[19992-20217]:IfStatement[20030-20255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20010-20217]:Block[20048-20255]"
    }, {
      "left" : "if (resultEqualsValue)",
      "right" : "if (resultEqualsValue)",
      "info" : "IfStatement[20018-20211]:IfStatement[20056-20249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20041-20175]:Block[20079-20213]"
    }, {
      "left" : "JSType result = getNativeTypeForTypeOf(value);",
      "right" : "JSType result = getNativeTypeForTypeOf(value);",
      "info" : "VariableDeclarationStatement[20051-20097]:VariableDeclarationStatement[20089-20135]"
    }, {
      "left" : "return result == null ? getNativeType(UNKNOWN_TYPE) : result;",
      "right" : "return result == null ? getNativeType(UNKNOWN_TYPE) : result;",
      "info" : "ReturnStatement[20106-20167]:ReturnStatement[20144-20205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20181-20211]:Block[20219-20249]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20191-20203]:ReturnStatement[20229-20241]"
    }, {
      "left" : "return type.visit(\n        new RestrictByOneTypeOfResultVisitor(value, resultEqualsValue));",
      "right" : "return type.visit(\n        new RestrictByOneTypeOfResultVisitor(value, resultEqualsValue));",
      "info" : "ReturnStatement[20222-20313]:ReturnStatement[20260-20351]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[20321-20327]:SimpleType[20359-20365]"
    }, {
      "left" : "getNativeType",
      "right" : "getNativeType",
      "info" : "SimpleName[20328-20341]:SimpleName[20366-20379]"
    }, {
      "left" : "JSTypeNative typeId",
      "right" : "JSTypeNative typeId",
      "info" : "SingleVariableDeclaration[20342-20361]:SingleVariableDeclaration[20380-20399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20363-20415]:Block[20401-20453]"
    }, {
      "left" : "return typeRegistry.getNativeType(typeId);",
      "right" : "return typeRegistry.getNativeType(typeId);",
      "info" : "ReturnStatement[20369-20411]:ReturnStatement[20407-20449]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20797-20804]:Modifier[20835-20842]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[20805-20811]:SimpleType[20843-20849]"
    }, {
      "left" : "getNativeTypeForTypeOf",
      "right" : "getNativeTypeForTypeOf",
      "info" : "SimpleName[20812-20834]:SimpleName[20850-20872]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[20835-20847]:SingleVariableDeclaration[20873-20885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20849-21309]:Block[20887-21347]"
    }, {
      "left" : "if (value.equals(\"number\"))",
      "right" : "if (value.equals(\"number\"))",
      "info" : "IfStatement[20855-21305]:IfStatement[20893-21343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20883-20931]:Block[20921-20969]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[20891-20925]:ReturnStatement[20929-20963]"
    }, {
      "left" : "if (value.equals(\"boolean\"))",
      "right" : "if (value.equals(\"boolean\"))",
      "info" : "IfStatement[20937-21305]:IfStatement[20975-21343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20966-21015]:Block[21004-21053]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[20974-21009]:ReturnStatement[21012-21047]"
    }, {
      "left" : "if (value.equals(\"string\"))",
      "right" : "if (value.equals(\"string\"))",
      "info" : "IfStatement[21021-21305]:IfStatement[21059-21343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21049-21097]:Block[21087-21135]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[21057-21091]:ReturnStatement[21095-21129]"
    }, {
      "left" : "if (value.equals(\"undefined\"))",
      "right" : "if (value.equals(\"undefined\"))",
      "info" : "IfStatement[21103-21305]:IfStatement[21141-21343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21134-21180]:Block[21172-21218]"
    }, {
      "left" : "return getNativeType(VOID_TYPE);",
      "right" : "return getNativeType(VOID_TYPE);",
      "info" : "ReturnStatement[21142-21174]:ReturnStatement[21180-21212]"
    }, {
      "left" : "if (value.equals(\"function\"))",
      "right" : "if (value.equals(\"function\"))",
      "info" : "IfStatement[21186-21305]:IfStatement[21224-21343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21216-21273]:Block[21254-21311]"
    }, {
      "left" : "return getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "right" : "return getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "info" : "ReturnStatement[21224-21267]:ReturnStatement[21262-21305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21279-21305]:Block[21317-21343]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21287-21299]:ReturnStatement[21325-21337]"
    } ]
  },
  "interFileMappings" : { }
}