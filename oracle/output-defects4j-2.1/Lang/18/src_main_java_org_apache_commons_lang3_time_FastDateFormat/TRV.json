{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[3480-3627]:FieldDeclaration[3480-3627]"
    }, {
      "left" : "public static final int FULL = DateFormat.FULL;",
      "right" : "public static final int FULL = DateFormat.FULL;",
      "info" : "FieldDeclaration[3633-3745]:FieldDeclaration[3633-3745]"
    }, {
      "left" : "public static final int LONG = DateFormat.LONG;",
      "right" : "public static final int LONG = DateFormat.LONG;",
      "info" : "FieldDeclaration[3750-3862]:FieldDeclaration[3750-3862]"
    }, {
      "left" : "public static final int MEDIUM = DateFormat.MEDIUM;",
      "right" : "public static final int MEDIUM = DateFormat.MEDIUM;",
      "info" : "FieldDeclaration[3867-3985]:FieldDeclaration[3867-3985]"
    }, {
      "left" : "public static final int SHORT = DateFormat.SHORT;",
      "right" : "public static final int SHORT = DateFormat.SHORT;",
      "info" : "FieldDeclaration[3990-4105]:FieldDeclaration[3990-4105]"
    }, {
      "left" : "private static final FormatCache<FastDateFormat> cache= new FormatCache<FastDateFormat>() {\n        @Override\n        protected FastDateFormat createInstance(String pattern,    TimeZone timeZone, Locale locale) {\n            return new FastDateFormat(pattern, timeZone, locale);\n        }\n    };",
      "right" : "private static final FormatCache<FastDateFormat> cache= new FormatCache<FastDateFormat>() {\n        @Override\n        protected FastDateFormat createInstance(String pattern,    TimeZone timeZone, Locale locale) {\n            return new FastDateFormat(pattern, timeZone, locale);\n        }\n    };",
      "info" : "FieldDeclaration[4111-4406]:FieldDeclaration[4111-4406]"
    }, {
      "left" : "protected FastDateFormat createInstance(String pattern,    TimeZone timeZone, Locale locale)",
      "right" : "protected FastDateFormat createInstance(String pattern,    TimeZone timeZone, Locale locale)",
      "info" : "MethodDeclaration[4211-4399]:MethodDeclaration[4211-4399]"
    }, {
      "left" : "private static ConcurrentMap<TimeZoneDisplayKey, String> cTimeZoneDisplayCache =\n        new ConcurrentHashMap<TimeZoneDisplayKey, String>(7);",
      "right" : "private static ConcurrentMap<TimeZoneDisplayKey, String> cTimeZoneDisplayCache =\n        new ConcurrentHashMap<TimeZoneDisplayKey, String>(7);",
      "info" : "FieldDeclaration[4412-4554]:FieldDeclaration[4412-4554]"
    }, {
      "left" : "private final String mPattern;",
      "right" : "private final String mPattern;",
      "info" : "FieldDeclaration[4560-4626]:FieldDeclaration[4560-4626]"
    }, {
      "left" : "private final TimeZone mTimeZone;",
      "right" : "private final TimeZone mTimeZone;",
      "info" : "FieldDeclaration[4631-4702]:FieldDeclaration[4631-4702]"
    }, {
      "left" : "private final Locale mLocale;",
      "right" : "private final Locale mLocale;",
      "info" : "FieldDeclaration[4707-4771]:FieldDeclaration[4707-4771]"
    }, {
      "left" : "private transient Rule[] mRules;",
      "right" : "private transient Rule[] mRules;",
      "info" : "FieldDeclaration[4776-4849]:FieldDeclaration[4776-4849]"
    }, {
      "left" : "private transient int mMaxLengthEstimate;",
      "right" : "private transient int mMaxLengthEstimate;",
      "info" : "FieldDeclaration[4854-4948]:FieldDeclaration[4854-4948]"
    }, {
      "left" : "public static FastDateFormat getInstance()",
      "right" : "public static FastDateFormat getInstance()",
      "info" : "MethodDeclaration[5032-5306]:MethodDeclaration[5032-5306]"
    }, {
      "left" : "public static FastDateFormat getInstance(String pattern)",
      "right" : "public static FastDateFormat getInstance(String pattern)",
      "info" : "MethodDeclaration[5312-5750]:MethodDeclaration[5312-5750]"
    }, {
      "left" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
      "right" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
      "info" : "MethodDeclaration[5756-6299]:MethodDeclaration[5756-6299]"
    }, {
      "left" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
      "right" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
      "info" : "MethodDeclaration[6305-6812]:MethodDeclaration[6305-6812]"
    }, {
      "left" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
      "right" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
      "info" : "MethodDeclaration[6818-7473]:MethodDeclaration[6818-7473]"
    }, {
      "left" : "public static FastDateFormat getDateInstance(int style)",
      "right" : "public static FastDateFormat getDateInstance(int style)",
      "info" : "MethodDeclaration[7557-8046]:MethodDeclaration[7557-8046]"
    }, {
      "left" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
      "right" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
      "info" : "MethodDeclaration[8052-8621]:MethodDeclaration[8052-8621]"
    }, {
      "left" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
      "right" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
      "info" : "MethodDeclaration[8627-9229]:MethodDeclaration[8627-9229]"
    }, {
      "left" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
      "right" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
      "info" : "MethodDeclaration[9239-9889]:MethodDeclaration[9239-9889]"
    }, {
      "left" : "public static FastDateFormat getTimeInstance(int style)",
      "right" : "public static FastDateFormat getTimeInstance(int style)",
      "info" : "MethodDeclaration[9973-10462]:MethodDeclaration[9973-10462]"
    }, {
      "left" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
      "right" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
      "info" : "MethodDeclaration[10468-11037]:MethodDeclaration[10468-11037]"
    }, {
      "left" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone)",
      "right" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone)",
      "info" : "MethodDeclaration[11043-11645]:MethodDeclaration[11043-11645]"
    }, {
      "left" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
      "right" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
      "info" : "MethodDeclaration[11651-12301]:MethodDeclaration[11651-12301]"
    }, {
      "left" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle)",
      "right" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle)",
      "info" : "MethodDeclaration[12385-12991]:MethodDeclaration[12385-12991]"
    }, {
      "left" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
      "right" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
      "info" : "MethodDeclaration[12997-13683]:MethodDeclaration[12997-13683]"
    }, {
      "left" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
      "right" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
      "info" : "MethodDeclaration[13689-14402]:MethodDeclaration[13689-14402]"
    }, {
      "left" : "public static FastDateFormat getDateTimeInstance(\n            int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
      "right" : "public static FastDateFormat getDateTimeInstance(\n            int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
      "info" : "MethodDeclaration[14407-15187]:MethodDeclaration[14407-15187]"
    }, {
      "left" : "static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
      "right" : "static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
      "info" : "MethodDeclaration[15271-16209]:MethodDeclaration[15271-16209]"
    }, {
      "left" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
      "right" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
      "info" : "MethodDeclaration[16312-16814]:MethodDeclaration[16312-16814]"
    }, {
      "left" : "private void init()",
      "right" : "private void init()",
      "info" : "MethodDeclaration[16820-17190]:MethodDeclaration[16820-17190]"
    }, {
      "left" : "protected String parseToken(String pattern, int[] indexRef)",
      "right" : "protected String parseToken(String pattern, int[] indexRef)",
      "info" : "MethodDeclaration[22467-24182]:MethodDeclaration[22486-24201]"
    }, {
      "left" : "protected NumberRule selectNumberRule(int field, int padding)",
      "right" : "protected NumberRule selectNumberRule(int field, int padding)",
      "info" : "MethodDeclaration[24188-24735]:MethodDeclaration[24207-24754]"
    }, {
      "left" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
      "right" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
      "info" : "MethodDeclaration[24841-25695]:MethodDeclaration[24860-25714]"
    }, {
      "left" : "public String format(long millis)",
      "right" : "public String format(long millis)",
      "info" : "MethodDeclaration[25701-25970]:MethodDeclaration[25720-25989]"
    }, {
      "left" : "public String format(Date date)",
      "right" : "public String format(Date date)",
      "info" : "MethodDeclaration[25976-26392]:MethodDeclaration[25995-26411]"
    }, {
      "left" : "public String format(Calendar calendar)",
      "right" : "public String format(Calendar calendar)",
      "info" : "MethodDeclaration[26398-26682]:MethodDeclaration[26417-26701]"
    }, {
      "left" : "public StringBuffer format(long millis, StringBuffer buf)",
      "right" : "public StringBuffer format(long millis, StringBuffer buf)",
      "info" : "MethodDeclaration[26688-27083]:MethodDeclaration[26707-27102]"
    }, {
      "left" : "public StringBuffer format(Date date, StringBuffer buf)",
      "right" : "public StringBuffer format(Date date, StringBuffer buf)",
      "info" : "MethodDeclaration[27089-27583]:MethodDeclaration[27108-27602]"
    }, {
      "left" : "public StringBuffer format(Calendar calendar, StringBuffer buf)",
      "right" : "public StringBuffer format(Calendar calendar, StringBuffer buf)",
      "info" : "MethodDeclaration[27589-27955]:MethodDeclaration[27608-27974]"
    }, {
      "left" : "protected StringBuffer applyRules(Calendar calendar, StringBuffer buf)",
      "right" : "protected StringBuffer applyRules(Calendar calendar, StringBuffer buf)",
      "info" : "MethodDeclaration[27961-28398]:MethodDeclaration[27980-28417]"
    }, {
      "left" : "public Object parseObject(String source, ParsePosition pos)",
      "right" : "public Object parseObject(String source, ParsePosition pos)",
      "info" : "MethodDeclaration[28497-28844]:MethodDeclaration[28516-28863]"
    }, {
      "left" : "public String getPattern()",
      "right" : "public String getPattern()",
      "info" : "MethodDeclaration[28945-29156]:MethodDeclaration[28964-29175]"
    }, {
      "left" : "public TimeZone getTimeZone()",
      "right" : "public TimeZone getTimeZone()",
      "info" : "MethodDeclaration[29162-29410]:MethodDeclaration[29181-29429]"
    }, {
      "left" : "public Locale getLocale()",
      "right" : "public Locale getLocale()",
      "info" : "MethodDeclaration[29416-29576]:MethodDeclaration[29435-29595]"
    }, {
      "left" : "public int getMaxLengthEstimate()",
      "right" : "public int getMaxLengthEstimate()",
      "info" : "MethodDeclaration[29582-29939]:MethodDeclaration[29601-29958]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[30037-30531]:MethodDeclaration[30056-30550]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[30537-30801]:MethodDeclaration[30556-30820]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[30807-31026]:MethodDeclaration[30826-31045]"
    }, {
      "left" : "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[31129-31607]:MethodDeclaration[31148-31626]"
    }, {
      "left" : "Rule",
      "right" : "Rule",
      "info" : "TypeDeclaration[31704-32256]:TypeDeclaration[31723-32275]"
    }, {
      "left" : "int estimateLength();",
      "right" : "int estimateLength();",
      "info" : "MethodDeclaration[31796-31947]:MethodDeclaration[31815-31966]"
    }, {
      "left" : "void appendTo(StringBuffer buffer, Calendar calendar);",
      "right" : "void appendTo(StringBuffer buffer, Calendar calendar);",
      "info" : "MethodDeclaration[31957-32250]:MethodDeclaration[31976-32269]"
    }, {
      "left" : "NumberRule",
      "right" : "NumberRule",
      "info" : "TypeDeclaration[32262-32654]:TypeDeclaration[32281-32673]"
    }, {
      "left" : "void appendTo(StringBuffer buffer, int value);",
      "right" : "void appendTo(StringBuffer buffer, int value);",
      "info" : "MethodDeclaration[32381-32648]:MethodDeclaration[32400-32667]"
    }, {
      "left" : "CharacterLiteral",
      "right" : "CharacterLiteral",
      "info" : "TypeDeclaration[32660-33387]:TypeDeclaration[32679-33406]"
    }, {
      "left" : "private final char mValue;",
      "right" : "private final char mValue;",
      "info" : "FieldDeclaration[32805-32831]:FieldDeclaration[32824-32850]"
    }, {
      "left" : "CharacterLiteral(char value)",
      "right" : "CharacterLiteral(char value)",
      "info" : "MethodDeclaration[32841-33095]:MethodDeclaration[32860-33114]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[33105-33215]:MethodDeclaration[33124-33234]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[33225-33381]:MethodDeclaration[33244-33400]"
    }, {
      "left" : "StringLiteral",
      "right" : "StringLiteral",
      "info" : "TypeDeclaration[33393-34116]:TypeDeclaration[33412-34135]"
    }, {
      "left" : "private final String mValue;",
      "right" : "private final String mValue;",
      "info" : "FieldDeclaration[33525-33553]:FieldDeclaration[33544-33572]"
    }, {
      "left" : "StringLiteral(String value)",
      "right" : "StringLiteral(String value)",
      "info" : "MethodDeclaration[33563-33810]:MethodDeclaration[33582-33829]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[33820-33944]:MethodDeclaration[33839-33963]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[33954-34110]:MethodDeclaration[33973-34129]"
    }, {
      "left" : "TextField",
      "right" : "TextField",
      "info" : "TypeDeclaration[34122-35189]:TypeDeclaration[34141-35208]"
    }, {
      "left" : "private final int mField;",
      "right" : "private final int mField;",
      "info" : "FieldDeclaration[34255-34280]:FieldDeclaration[34274-34299]"
    }, {
      "left" : "private final String[] mValues;",
      "right" : "private final String[] mValues;",
      "info" : "FieldDeclaration[34289-34320]:FieldDeclaration[34308-34339]"
    }, {
      "left" : "TextField(int field, String[] values)",
      "right" : "TextField(int field, String[] values)",
      "info" : "MethodDeclaration[34330-34651]:MethodDeclaration[34349-34670]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[34661-34994]:MethodDeclaration[34680-35013]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[35004-35183]:MethodDeclaration[35023-35202]"
    }, {
      "left" : "UnpaddedNumberField",
      "right" : "UnpaddedNumberField",
      "info" : "TypeDeclaration[35195-36367]:TypeDeclaration[35214-36386]"
    }, {
      "left" : "private final int mField;",
      "right" : "private final int mField;",
      "info" : "FieldDeclaration[35340-35365]:FieldDeclaration[35359-35384]"
    }, {
      "left" : "UnpaddedNumberField(int field)",
      "right" : "UnpaddedNumberField(int field)",
      "info" : "MethodDeclaration[35375-35604]:MethodDeclaration[35394-35623]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[35614-35724]:MethodDeclaration[35633-35743]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[35734-35907]:MethodDeclaration[35753-35926]"
    }, {
      "left" : "public final void appendTo(StringBuffer buffer, int value)",
      "right" : "public final void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[35917-36361]:MethodDeclaration[35936-36380]"
    }, {
      "left" : "UnpaddedMonthField",
      "right" : "UnpaddedMonthField",
      "info" : "TypeDeclaration[36373-37428]:TypeDeclaration[36392-37447]"
    }, {
      "left" : "static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();",
      "right" : "static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();",
      "info" : "FieldDeclaration[36516-36584]:FieldDeclaration[36535-36603]"
    }, {
      "left" : "UnpaddedMonthField()",
      "right" : "UnpaddedMonthField()",
      "info" : "MethodDeclaration[36594-36747]:MethodDeclaration[36613-36766]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[36757-36867]:MethodDeclaration[36776-36886]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[36877-37062]:MethodDeclaration[36896-37081]"
    }, {
      "left" : "public final void appendTo(StringBuffer buffer, int value)",
      "right" : "public final void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[37072-37422]:MethodDeclaration[37091-37441]"
    }, {
      "left" : "PaddedNumberField",
      "right" : "PaddedNumberField",
      "info" : "TypeDeclaration[37434-39292]:TypeDeclaration[37453-39311]"
    }, {
      "left" : "private final int mField;",
      "right" : "private final int mField;",
      "info" : "FieldDeclaration[37574-37599]:FieldDeclaration[37593-37618]"
    }, {
      "left" : "private final int mSize;",
      "right" : "private final int mSize;",
      "info" : "FieldDeclaration[37608-37632]:FieldDeclaration[37627-37651]"
    }, {
      "left" : "PaddedNumberField(int field, int size)",
      "right" : "PaddedNumberField(int field, int size)",
      "info" : "MethodDeclaration[37642-38097]:MethodDeclaration[37661-38116]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[38107-38217]:MethodDeclaration[38126-38236]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[38227-38400]:MethodDeclaration[38246-38419]"
    }, {
      "left" : "public final void appendTo(StringBuffer buffer, int value)",
      "right" : "public final void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[38410-39286]:MethodDeclaration[38429-39305]"
    }, {
      "left" : "TwoDigitNumberField",
      "right" : "TwoDigitNumberField",
      "info" : "TypeDeclaration[39298-40382]:TypeDeclaration[39317-40401]"
    }, {
      "left" : "private final int mField;",
      "right" : "private final int mField;",
      "info" : "FieldDeclaration[39443-39468]:FieldDeclaration[39462-39487]"
    }, {
      "left" : "TwoDigitNumberField(int field)",
      "right" : "TwoDigitNumberField(int field)",
      "info" : "MethodDeclaration[39478-39708]:MethodDeclaration[39497-39727]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[39718-39828]:MethodDeclaration[39737-39847]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[39838-40011]:MethodDeclaration[39857-40030]"
    }, {
      "left" : "public final void appendTo(StringBuffer buffer, int value)",
      "right" : "public final void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[40021-40376]:MethodDeclaration[40040-40395]"
    }, {
      "left" : "TwoDigitYearField",
      "right" : "TwoDigitYearField",
      "info" : "TypeDeclaration[40388-41302]:TypeDeclaration[40407-41321]"
    }, {
      "left" : "static final TwoDigitYearField INSTANCE = new TwoDigitYearField();",
      "right" : "static final TwoDigitYearField INSTANCE = new TwoDigitYearField();",
      "info" : "FieldDeclaration[40529-40595]:FieldDeclaration[40548-40614]"
    }, {
      "left" : "TwoDigitYearField()",
      "right" : "TwoDigitYearField()",
      "info" : "MethodDeclaration[40605-40745]:MethodDeclaration[40624-40764]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[40755-40865]:MethodDeclaration[40774-40884]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[40875-41061]:MethodDeclaration[40894-41080]"
    }, {
      "left" : "public final void appendTo(StringBuffer buffer, int value)",
      "right" : "public final void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[41071-41296]:MethodDeclaration[41090-41315]"
    }, {
      "left" : "TwoDigitMonthField",
      "right" : "TwoDigitMonthField",
      "info" : "TypeDeclaration[41308-42227]:TypeDeclaration[41327-42246]"
    }, {
      "left" : "static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();",
      "right" : "static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();",
      "info" : "FieldDeclaration[41451-41519]:FieldDeclaration[41470-41538]"
    }, {
      "left" : "TwoDigitMonthField()",
      "right" : "TwoDigitMonthField()",
      "info" : "MethodDeclaration[41529-41671]:MethodDeclaration[41548-41690]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[41681-41791]:MethodDeclaration[41700-41810]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[41801-41986]:MethodDeclaration[41820-42005]"
    }, {
      "left" : "public final void appendTo(StringBuffer buffer, int value)",
      "right" : "public final void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[41996-42221]:MethodDeclaration[42015-42240]"
    }, {
      "left" : "TwelveHourField",
      "right" : "TwelveHourField",
      "info" : "TypeDeclaration[42233-43319]:TypeDeclaration[42252-43338]"
    }, {
      "left" : "private final NumberRule mRule;",
      "right" : "private final NumberRule mRule;",
      "info" : "FieldDeclaration[42377-42408]:FieldDeclaration[42396-42427]"
    }, {
      "left" : "TwelveHourField(NumberRule rule)",
      "right" : "TwelveHourField(NumberRule rule)",
      "info" : "MethodDeclaration[42418-42666]:MethodDeclaration[42437-42685]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[42676-42807]:MethodDeclaration[42695-42826]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[42817-43147]:MethodDeclaration[42836-43166]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, int value)",
      "right" : "public void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[43157-43313]:MethodDeclaration[43176-43332]"
    }, {
      "left" : "TwentyFourHourField",
      "right" : "TwentyFourHourField",
      "info" : "TypeDeclaration[43325-44437]:TypeDeclaration[43344-44456]"
    }, {
      "left" : "private final NumberRule mRule;",
      "right" : "private final NumberRule mRule;",
      "info" : "FieldDeclaration[43478-43509]:FieldDeclaration[43497-43528]"
    }, {
      "left" : "TwentyFourHourField(NumberRule rule)",
      "right" : "TwentyFourHourField(NumberRule rule)",
      "info" : "MethodDeclaration[43519-43775]:MethodDeclaration[43538-43794]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[43785-43916]:MethodDeclaration[43804-43935]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[43926-44265]:MethodDeclaration[43945-44284]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, int value)",
      "right" : "public void appendTo(StringBuffer buffer, int value)",
      "info" : "MethodDeclaration[44275-44431]:MethodDeclaration[44294-44450]"
    }, {
      "left" : "TimeZoneNameRule",
      "right" : "TimeZoneNameRule",
      "info" : "TypeDeclaration[44443-45710]:TypeDeclaration[44462-45729]"
    }, {
      "left" : "private final TimeZone mTimeZone;",
      "right" : "private final TimeZone mTimeZone;",
      "info" : "FieldDeclaration[44577-44610]:FieldDeclaration[44596-44629]"
    }, {
      "left" : "private final String mStandard;",
      "right" : "private final String mStandard;",
      "info" : "FieldDeclaration[44619-44650]:FieldDeclaration[44638-44669]"
    }, {
      "left" : "private final String mDaylight;",
      "right" : "private final String mDaylight;",
      "info" : "FieldDeclaration[44659-44690]:FieldDeclaration[44678-44709]"
    }, {
      "left" : "TimeZoneNameRule(TimeZone timeZone, Locale locale, int style)",
      "right" : "TimeZoneNameRule(TimeZone timeZone, Locale locale, int style)",
      "info" : "MethodDeclaration[44700-45198]:MethodDeclaration[44719-45217]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[45208-45365]:MethodDeclaration[45227-45384]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[45375-45704]:MethodDeclaration[45394-45723]"
    }, {
      "left" : "TimeZoneNumberRule",
      "right" : "TimeZoneNumberRule",
      "info" : "TypeDeclaration[45716-47330]:TypeDeclaration[45735-47349]"
    }, {
      "left" : "static final TimeZoneNumberRule INSTANCE_COLON = new TimeZoneNumberRule(true);",
      "right" : "static final TimeZoneNumberRule INSTANCE_COLON = new TimeZoneNumberRule(true);",
      "info" : "FieldDeclaration[45902-45980]:FieldDeclaration[45921-45999]"
    }, {
      "left" : "static final TimeZoneNumberRule INSTANCE_NO_COLON = new TimeZoneNumberRule(false);",
      "right" : "static final TimeZoneNumberRule INSTANCE_NO_COLON = new TimeZoneNumberRule(false);",
      "info" : "FieldDeclaration[45989-46071]:FieldDeclaration[46008-46090]"
    }, {
      "left" : "final boolean mColon;",
      "right" : "final boolean mColon;",
      "info" : "FieldDeclaration[46081-46102]:FieldDeclaration[46100-46121]"
    }, {
      "left" : "TimeZoneNumberRule(boolean colon)",
      "right" : "TimeZoneNumberRule(boolean colon)",
      "info" : "MethodDeclaration[46112-46397]:MethodDeclaration[46131-46416]"
    }, {
      "left" : "public int estimateLength()",
      "right" : "public int estimateLength()",
      "info" : "MethodDeclaration[46407-46517]:MethodDeclaration[46426-46536]"
    }, {
      "left" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "right" : "public void appendTo(StringBuffer buffer, Calendar calendar)",
      "info" : "MethodDeclaration[46527-47324]:MethodDeclaration[46546-47343]"
    }, {
      "left" : "TimeZoneDisplayKey",
      "right" : "TimeZoneDisplayKey",
      "info" : "TypeDeclaration[47414-49039]:TypeDeclaration[47433-49058]"
    }, {
      "left" : "private final TimeZone mTimeZone;",
      "right" : "private final TimeZone mTimeZone;",
      "info" : "FieldDeclaration[47555-47588]:FieldDeclaration[47574-47607]"
    }, {
      "left" : "private final int mStyle;",
      "right" : "private final int mStyle;",
      "info" : "FieldDeclaration[47597-47622]:FieldDeclaration[47616-47641]"
    }, {
      "left" : "private final Locale mLocale;",
      "right" : "private final Locale mLocale;",
      "info" : "FieldDeclaration[47631-47660]:FieldDeclaration[47650-47679]"
    }, {
      "left" : "TimeZoneDisplayKey(TimeZone timeZone,\n                           boolean daylight, int style, Locale locale)",
      "right" : "TimeZoneDisplayKey(TimeZone timeZone,\n                           boolean daylight, int style, Locale locale)",
      "info" : "MethodDeclaration[47670-48305]:MethodDeclaration[47689-48324]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[48315-48499]:MethodDeclaration[48334-48518]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[48509-49033]:MethodDeclaration[48528-49052]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4322-4399]:Block[4322-4399]"
    }, {
      "left" : "return new FastDateFormat(pattern, timeZone, locale);",
      "right" : "return new FastDateFormat(pattern, timeZone, locale);",
      "info" : "ReturnStatement[4336-4389]:ReturnStatement[4336-4389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5231-5306]:Block[5231-5306]"
    }, {
      "left" : "return cache.getDateTimeInstance(SHORT, SHORT, null, null);",
      "right" : "return cache.getDateTimeInstance(SHORT, SHORT, null, null);",
      "info" : "ReturnStatement[5241-5300]:ReturnStatement[5241-5300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5688-5750]:Block[5688-5750]"
    }, {
      "left" : "return cache.getInstance(pattern, null, null);",
      "right" : "return cache.getInstance(pattern, null, null);",
      "info" : "ReturnStatement[5698-5744]:ReturnStatement[5698-5744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6233-6299]:Block[6233-6299]"
    }, {
      "left" : "return cache.getInstance(pattern, timeZone, null);",
      "right" : "return cache.getInstance(pattern, timeZone, null);",
      "info" : "ReturnStatement[6243-6293]:ReturnStatement[6243-6293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6748-6812]:Block[6748-6812]"
    }, {
      "left" : "return cache.getInstance(pattern, null, locale);",
      "right" : "return cache.getInstance(pattern, null, locale);",
      "info" : "ReturnStatement[6758-6806]:ReturnStatement[6758-6806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7405-7473]:Block[7405-7473]"
    }, {
      "left" : "return cache.getInstance(pattern, timeZone, locale);",
      "right" : "return cache.getInstance(pattern, timeZone, locale);",
      "info" : "ReturnStatement[7415-7467]:ReturnStatement[7415-7467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7972-8046]:Block[7972-8046]"
    }, {
      "left" : "return cache.getDateTimeInstance(style, null, null, null);",
      "right" : "return cache.getDateTimeInstance(style, null, null, null);",
      "info" : "ReturnStatement[7982-8040]:ReturnStatement[7982-8040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8545-8621]:Block[8545-8621]"
    }, {
      "left" : "return cache.getDateTimeInstance(style, null, null, locale);",
      "right" : "return cache.getDateTimeInstance(style, null, null, locale);",
      "info" : "ReturnStatement[8555-8615]:ReturnStatement[8555-8615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9151-9229]:Block[9151-9229]"
    }, {
      "left" : "return cache.getDateTimeInstance(style, null, timeZone, null);",
      "right" : "return cache.getDateTimeInstance(style, null, timeZone, null);",
      "info" : "ReturnStatement[9161-9223]:ReturnStatement[9161-9223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9809-9889]:Block[9809-9889]"
    }, {
      "left" : "return cache.getDateTimeInstance(style, null, timeZone, locale);",
      "right" : "return cache.getDateTimeInstance(style, null, timeZone, locale);",
      "info" : "ReturnStatement[9819-9883]:ReturnStatement[9819-9883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10388-10462]:Block[10388-10462]"
    }, {
      "left" : "return cache.getDateTimeInstance(null, style, null, null);",
      "right" : "return cache.getDateTimeInstance(null, style, null, null);",
      "info" : "ReturnStatement[10398-10456]:ReturnStatement[10398-10456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10961-11037]:Block[10961-11037]"
    }, {
      "left" : "return cache.getDateTimeInstance(null, style, null, locale);",
      "right" : "return cache.getDateTimeInstance(null, style, null, locale);",
      "info" : "ReturnStatement[10971-11031]:ReturnStatement[10971-11031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11567-11645]:Block[11567-11645]"
    }, {
      "left" : "return cache.getDateTimeInstance(null, style, timeZone, null);",
      "right" : "return cache.getDateTimeInstance(null, style, timeZone, null);",
      "info" : "ReturnStatement[11577-11639]:ReturnStatement[11577-11639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12221-12301]:Block[12221-12301]"
    }, {
      "left" : "return cache.getDateTimeInstance(null, style, timeZone, locale);",
      "right" : "return cache.getDateTimeInstance(null, style, timeZone, locale);",
      "info" : "ReturnStatement[12231-12295]:ReturnStatement[12231-12295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12908-12991]:Block[12908-12991]"
    }, {
      "left" : "return cache.getDateTimeInstance(dateStyle, timeStyle, null, null);",
      "right" : "return cache.getDateTimeInstance(dateStyle, timeStyle, null, null);",
      "info" : "ReturnStatement[12918-12985]:ReturnStatement[12918-12985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13598-13683]:Block[13598-13683]"
    }, {
      "left" : "return cache.getDateTimeInstance(dateStyle, timeStyle, null, locale);",
      "right" : "return cache.getDateTimeInstance(dateStyle, timeStyle, null, locale);",
      "info" : "ReturnStatement[13608-13677]:ReturnStatement[13608-13677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14321-14402]:Block[14321-14402]"
    }, {
      "left" : "return getDateTimeInstance(dateStyle, timeStyle, timeZone, null);",
      "right" : "return getDateTimeInstance(dateStyle, timeStyle, timeZone, null);",
      "info" : "ReturnStatement[14331-14396]:ReturnStatement[14331-14396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15098-15187]:Block[15098-15187]"
    }, {
      "left" : "return cache.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);",
      "right" : "return cache.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);",
      "info" : "ReturnStatement[15108-15181]:ReturnStatement[15108-15181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15722-16209]:Block[15722-16209]"
    }, {
      "left" : "TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",
      "right" : "TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",
      "info" : "VariableDeclarationStatement[15732-15809]:VariableDeclarationStatement[15732-15809]"
    }, {
      "left" : "String value = cTimeZoneDisplayCache.get(key);",
      "right" : "String value = cTimeZoneDisplayCache.get(key);",
      "info" : "VariableDeclarationStatement[15818-15864]:VariableDeclarationStatement[15818-15864]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[15873-16181]:IfStatement[15873-16181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15892-16181]:Block[15892-16181]"
    }, {
      "left" : "value = tz.getDisplayName(daylight, style, locale);",
      "right" : "value = tz.getDisplayName(daylight, style, locale);",
      "info" : "ExpressionStatement[15969-16020]:ExpressionStatement[15969-16020]"
    }, {
      "left" : "String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",
      "right" : "String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",
      "info" : "VariableDeclarationStatement[16033-16094]:VariableDeclarationStatement[16033-16094]"
    }, {
      "left" : "if (prior != null)",
      "right" : "if (prior != null)",
      "info" : "IfStatement[16107-16171]:IfStatement[16107-16171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16126-16171]:Block[16126-16171]"
    }, {
      "left" : "value= prior;",
      "right" : "value= prior;",
      "info" : "ExpressionStatement[16144-16157]:ExpressionStatement[16144-16157]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[16190-16203]:ReturnStatement[16190-16203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16706-16814]:Block[16706-16814]"
    }, {
      "left" : "mPattern = pattern;",
      "right" : "mPattern = pattern;",
      "info" : "ExpressionStatement[16716-16735]:ExpressionStatement[16716-16735]"
    }, {
      "left" : "mTimeZone = timeZone;",
      "right" : "mTimeZone = timeZone;",
      "info" : "ExpressionStatement[16744-16765]:ExpressionStatement[16744-16765]"
    }, {
      "left" : "mLocale = locale;",
      "right" : "mLocale = locale;",
      "info" : "ExpressionStatement[16774-16791]:ExpressionStatement[16774-16791]"
    }, {
      "left" : "init();",
      "right" : "init();",
      "info" : "ExpressionStatement[16801-16808]:ExpressionStatement[16801-16808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16910-17190]:Block[16910-17190]"
    }, {
      "left" : "List<Rule> rulesList = parsePattern();",
      "right" : "List<Rule> rulesList = parsePattern();",
      "info" : "VariableDeclarationStatement[16920-16958]:VariableDeclarationStatement[16920-16958]"
    }, {
      "left" : "mRules = rulesList.toArray(new Rule[rulesList.size()]);",
      "right" : "mRules = rulesList.toArray(new Rule[rulesList.size()]);",
      "info" : "ExpressionStatement[16967-17022]:ExpressionStatement[16967-17022]"
    }, {
      "left" : "int len = 0;",
      "right" : "int len = 0;",
      "info" : "VariableDeclarationStatement[17032-17044]:VariableDeclarationStatement[17032-17044]"
    }, {
      "left" : "for (int i=mRules.length; --i >= 0)",
      "right" : "for (int i=mRules.length; --i >= 0)",
      "info" : "ForStatement[17053-17149]:ForStatement[17053-17149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17091-17149]:Block[17091-17149]"
    }, {
      "left" : "len += mRules[i].estimateLength();",
      "right" : "len += mRules[i].estimateLength();",
      "info" : "ExpressionStatement[17105-17139]:ExpressionStatement[17105-17139]"
    }, {
      "left" : "mMaxLengthEstimate = len;",
      "right" : "mMaxLengthEstimate = len;",
      "info" : "ExpressionStatement[17159-17184]:ExpressionStatement[17159-17184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22700-24182]:Block[22719-24201]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder();",
      "right" : "StringBuilder buf = new StringBuilder();",
      "info" : "VariableDeclarationStatement[22710-22750]:VariableDeclarationStatement[22729-22769]"
    }, {
      "left" : "int i = indexRef[0];",
      "right" : "int i = indexRef[0];",
      "info" : "VariableDeclarationStatement[22760-22780]:VariableDeclarationStatement[22779-22799]"
    }, {
      "left" : "int length = pattern.length();",
      "right" : "int length = pattern.length();",
      "info" : "VariableDeclarationStatement[22789-22819]:VariableDeclarationStatement[22808-22838]"
    }, {
      "left" : "char c = pattern.charAt(i);",
      "right" : "char c = pattern.charAt(i);",
      "info" : "VariableDeclarationStatement[22829-22856]:VariableDeclarationStatement[22848-22875]"
    }, {
      "left" : "if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')",
      "right" : "if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')",
      "info" : "IfStatement[22865-24119]:IfStatement[22884-24138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22915-23315]:Block[22934-23334]"
    }, {
      "left" : "buf.append(c);",
      "right" : "buf.append(c);",
      "info" : "ExpressionStatement[23025-23039]:ExpressionStatement[23044-23058]"
    }, {
      "left" : "while (i + 1 < length)",
      "right" : "while (i + 1 < length)",
      "info" : "WhileStatement[23053-23305]:WhileStatement[23072-23324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23076-23305]:Block[23095-23324]"
    }, {
      "left" : "char peek = pattern.charAt(i + 1);",
      "right" : "char peek = pattern.charAt(i + 1);",
      "info" : "VariableDeclarationStatement[23094-23128]:VariableDeclarationStatement[23113-23147]"
    }, {
      "left" : "if (peek == c)",
      "right" : "if (peek == c)",
      "info" : "IfStatement[23145-23291]:IfStatement[23164-23310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23160-23239]:Block[23179-23258]"
    }, {
      "left" : "buf.append(c);",
      "right" : "buf.append(c);",
      "info" : "ExpressionStatement[23182-23196]:ExpressionStatement[23201-23215]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[23217-23221]:ExpressionStatement[23236-23240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23245-23291]:Block[23264-23310]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23267-23273]:BreakStatement[23286-23292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23321-24119]:Block[23340-24138]"
    }, {
      "left" : "buf.append('\\'');",
      "right" : "buf.append('\\'');",
      "info" : "ExpressionStatement[23384-23401]:ExpressionStatement[23403-23420]"
    }, {
      "left" : "boolean inLiteral = false;",
      "right" : "boolean inLiteral = false;",
      "info" : "VariableDeclarationStatement[23415-23441]:VariableDeclarationStatement[23434-23460]"
    }, {
      "left" : "for (; i < length; i++)",
      "right" : "for (; i < length; i++)",
      "info" : "ForStatement[23455-24109]:ForStatement[23474-24128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23479-24109]:Block[23498-24128]"
    }, {
      "left" : "c = pattern.charAt(i);",
      "right" : "c = pattern.charAt(i);",
      "info" : "ExpressionStatement[23497-23519]:ExpressionStatement[23516-23538]"
    }, {
      "left" : "if (c == '\\'')",
      "right" : "if (c == '\\'')",
      "info" : "IfStatement[23537-24095]:IfStatement[23556-24114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23552-23867]:Block[23571-23886]"
    }, {
      "left" : "if (i + 1 < length && pattern.charAt(i + 1) == '\\'')",
      "right" : "if (i + 1 < length && pattern.charAt(i + 1) == '\\'')",
      "info" : "IfStatement[23574-23849]:IfStatement[23593-23868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23627-23772]:Block[23646-23791]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[23707-23711]:ExpressionStatement[23726-23730]"
    }, {
      "left" : "buf.append(c);",
      "right" : "buf.append(c);",
      "info" : "ExpressionStatement[23736-23750]:ExpressionStatement[23755-23769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23778-23849]:Block[23797-23868]"
    }, {
      "left" : "inLiteral = !inLiteral;",
      "right" : "inLiteral = !inLiteral;",
      "info" : "ExpressionStatement[23804-23827]:ExpressionStatement[23823-23846]"
    }, {
      "left" : "if (!inLiteral &&\n                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z'))",
      "right" : "if (!inLiteral &&\n                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z'))",
      "info" : "IfStatement[23873-24095]:IfStatement[23892-24114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23964-24035]:Block[23983-24054]"
    }, {
      "left" : "i--;",
      "right" : "i--;",
      "info" : "ExpressionStatement[23986-23990]:ExpressionStatement[24005-24009]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[24011-24017]:BreakStatement[24030-24036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24041-24095]:Block[24060-24114]"
    }, {
      "left" : "buf.append(c);",
      "right" : "buf.append(c);",
      "info" : "ExpressionStatement[24063-24077]:ExpressionStatement[24082-24096]"
    }, {
      "left" : "indexRef[0] = i;",
      "right" : "indexRef[0] = i;",
      "info" : "ExpressionStatement[24129-24145]:ExpressionStatement[24148-24164]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[24154-24176]:ReturnStatement[24173-24195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24482-24735]:Block[24501-24754]"
    }, {
      "left" : "switch (padding) {\n        case 1:\n            return new UnpaddedNumberField(field);\n        case 2:\n            return new TwoDigitNumberField(field);\n        default:\n            return new PaddedNumberField(field, padding);\n        }",
      "right" : "switch (padding) {\n        case 1:\n            return new UnpaddedNumberField(field);\n        case 2:\n            return new TwoDigitNumberField(field);\n        default:\n            return new PaddedNumberField(field, padding);\n        }",
      "info" : "SwitchStatement[24492-24729]:SwitchStatement[24511-24748]"
    }, {
      "left" : "case 1:",
      "right" : "case 1:",
      "info" : "SwitchCase[24519-24526]:SwitchCase[24538-24545]"
    }, {
      "left" : "return new UnpaddedNumberField(field);",
      "right" : "return new UnpaddedNumberField(field);",
      "info" : "ReturnStatement[24539-24577]:ReturnStatement[24558-24596]"
    }, {
      "left" : "case 2:",
      "right" : "case 2:",
      "info" : "SwitchCase[24586-24593]:SwitchCase[24605-24612]"
    }, {
      "left" : "return new TwoDigitNumberField(field);",
      "right" : "return new TwoDigitNumberField(field);",
      "info" : "ReturnStatement[24606-24644]:ReturnStatement[24625-24663]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[24653-24661]:SwitchCase[24672-24680]"
    }, {
      "left" : "return new PaddedNumberField(field, padding);",
      "right" : "return new PaddedNumberField(field, padding);",
      "info" : "ReturnStatement[24674-24719]:ReturnStatement[24693-24738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25230-25695]:Block[25249-25714]"
    }, {
      "left" : "if (obj instanceof Date)",
      "right" : "if (obj instanceof Date)",
      "info" : "IfStatement[25240-25689]:IfStatement[25259-25708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25265-25327]:Block[25284-25346]"
    }, {
      "left" : "return format((Date) obj, toAppendTo);",
      "right" : "return format((Date) obj, toAppendTo);",
      "info" : "ReturnStatement[25279-25317]:ReturnStatement[25298-25336]"
    }, {
      "left" : "if (obj instanceof Calendar)",
      "right" : "if (obj instanceof Calendar)",
      "info" : "IfStatement[25333-25689]:IfStatement[25352-25708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25362-25428]:Block[25381-25447]"
    }, {
      "left" : "return format((Calendar) obj, toAppendTo);",
      "right" : "return format((Calendar) obj, toAppendTo);",
      "info" : "ReturnStatement[25376-25418]:ReturnStatement[25395-25437]"
    }, {
      "left" : "if (obj instanceof Long)",
      "right" : "if (obj instanceof Long)",
      "info" : "IfStatement[25434-25689]:IfStatement[25453-25708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25459-25535]:Block[25478-25554]"
    }, {
      "left" : "return format(((Long) obj).longValue(), toAppendTo);",
      "right" : "return format(((Long) obj).longValue(), toAppendTo);",
      "info" : "ReturnStatement[25473-25525]:ReturnStatement[25492-25544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25541-25689]:Block[25560-25708]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Unknown class: \" +\n                (obj == null ? \"<null>\" : obj.getClass().getName()));",
      "right" : "throw new IllegalArgumentException(\"Unknown class: \" +\n                (obj == null ? \"<null>\" : obj.getClass().getName()));",
      "info" : "ThrowStatement[25555-25679]:ThrowStatement[25574-25698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25922-25970]:Block[25941-25989]"
    }, {
      "left" : "return format(new Date(millis));",
      "right" : "return format(new Date(millis));",
      "info" : "ReturnStatement[25932-25964]:ReturnStatement[25951-25983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26185-26392]:Block[26204-26411]"
    }, {
      "left" : "Calendar c = new GregorianCalendar(mTimeZone, mLocale);",
      "right" : "Calendar c = new GregorianCalendar(mTimeZone, mLocale);",
      "info" : "VariableDeclarationStatement[26195-26250]:VariableDeclarationStatement[26214-26269]"
    }, {
      "left" : "c.setTime(date);",
      "right" : "c.setTime(date);",
      "info" : "ExpressionStatement[26291-26307]:ExpressionStatement[26310-26326]"
    }, {
      "left" : "return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",
      "right" : "return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",
      "info" : "ReturnStatement[26316-26386]:ReturnStatement[26335-26405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26593-26682]:Block[26612-26701]"
    }, {
      "left" : "return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",
      "right" : "return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",
      "info" : "ReturnStatement[26603-26676]:ReturnStatement[26622-26695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27030-27083]:Block[27049-27102]"
    }, {
      "left" : "return format(new Date(millis), buf);",
      "right" : "return format(new Date(millis), buf);",
      "info" : "ReturnStatement[27040-27077]:ReturnStatement[27059-27096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27420-27583]:Block[27439-27602]"
    }, {
      "left" : "Calendar c = new GregorianCalendar(mTimeZone, mLocale);",
      "right" : "Calendar c = new GregorianCalendar(mTimeZone, mLocale);",
      "info" : "VariableDeclarationStatement[27430-27485]:VariableDeclarationStatement[27449-27504]"
    }, {
      "left" : "c.setTime(date);",
      "right" : "c.setTime(date);",
      "info" : "ExpressionStatement[27526-27542]:ExpressionStatement[27545-27561]"
    }, {
      "left" : "return applyRules(c, buf);",
      "right" : "return applyRules(c, buf);",
      "info" : "ReturnStatement[27551-27577]:ReturnStatement[27570-27596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27906-27955]:Block[27925-27974]"
    }, {
      "left" : "return applyRules(calendar, buf);",
      "right" : "return applyRules(calendar, buf);",
      "info" : "ReturnStatement[27916-27949]:ReturnStatement[27935-27968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28284-28398]:Block[28303-28417]"
    }, {
      "left" : "for (Rule rule : mRules)",
      "right" : "for (Rule rule : mRules)",
      "info" : "EnhancedForStatement[28294-28372]:EnhancedForStatement[28313-28391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28319-28372]:Block[28338-28391]"
    }, {
      "left" : "rule.appendTo(buf, calendar);",
      "right" : "rule.appendTo(buf, calendar);",
      "info" : "ExpressionStatement[28333-28362]:ExpressionStatement[28352-28381]"
    }, {
      "left" : "return buf;",
      "right" : "return buf;",
      "info" : "ReturnStatement[28381-28392]:ReturnStatement[28400-28411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28761-28844]:Block[28780-28863]"
    }, {
      "left" : "pos.setIndex(0);",
      "right" : "pos.setIndex(0);",
      "info" : "ExpressionStatement[28771-28787]:ExpressionStatement[28790-28806]"
    }, {
      "left" : "pos.setErrorIndex(0);",
      "right" : "pos.setErrorIndex(0);",
      "info" : "ExpressionStatement[28796-28817]:ExpressionStatement[28815-28836]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[28826-28838]:ReturnStatement[28845-28857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29124-29156]:Block[29143-29175]"
    }, {
      "left" : "return mPattern;",
      "right" : "return mPattern;",
      "info" : "ReturnStatement[29134-29150]:ReturnStatement[29153-29169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29377-29410]:Block[29396-29429]"
    }, {
      "left" : "return mTimeZone;",
      "right" : "return mTimeZone;",
      "info" : "ReturnStatement[29387-29404]:ReturnStatement[29406-29423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29545-29576]:Block[29564-29595]"
    }, {
      "left" : "return mLocale;",
      "right" : "return mLocale;",
      "info" : "ReturnStatement[29555-29570]:ReturnStatement[29574-29589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29897-29939]:Block[29916-29958]"
    }, {
      "left" : "return mMaxLengthEstimate;",
      "right" : "return mMaxLengthEstimate;",
      "info" : "ReturnStatement[29907-29933]:ReturnStatement[29926-29952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30238-30531]:Block[30257-30550]"
    }, {
      "left" : "if (obj instanceof FastDateFormat == false)",
      "right" : "if (obj instanceof FastDateFormat == false)",
      "info" : "IfStatement[30248-30329]:IfStatement[30267-30348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30292-30329]:Block[30311-30348]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[30306-30319]:ReturnStatement[30325-30338]"
    }, {
      "left" : "FastDateFormat other = (FastDateFormat) obj;",
      "right" : "FastDateFormat other = (FastDateFormat) obj;",
      "info" : "VariableDeclarationStatement[30338-30382]:VariableDeclarationStatement[30357-30401]"
    }, {
      "left" : "return mPattern.equals(other.mPattern)\n            && mTimeZone.equals(other.mTimeZone) \n            && mLocale.equals(other.mLocale);",
      "right" : "return mPattern.equals(other.mPattern)\n            && mTimeZone.equals(other.mTimeZone) \n            && mLocale.equals(other.mLocale);",
      "info" : "ReturnStatement[30391-30525]:ReturnStatement[30410-30544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30702-30801]:Block[30721-30820]"
    }, {
      "left" : "return mPattern.hashCode() + 13 * (mTimeZone.hashCode() + 13 * mLocale.hashCode());",
      "right" : "return mPattern.hashCode() + 13 * (mTimeZone.hashCode() + 13 * mLocale.hashCode());",
      "info" : "ReturnStatement[30712-30795]:ReturnStatement[30731-30814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30968-31026]:Block[30987-31045]"
    }, {
      "left" : "return \"FastDateFormat[\" + mPattern + \"]\";",
      "right" : "return \"FastDateFormat[\" + mPattern + \"]\";",
      "info" : "ReturnStatement[30978-31020]:ReturnStatement[30997-31039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31552-31607]:Block[31571-31626]"
    }, {
      "left" : "in.defaultReadObject();",
      "right" : "in.defaultReadObject();",
      "info" : "ExpressionStatement[31562-31585]:ExpressionStatement[31581-31604]"
    }, {
      "left" : "init();",
      "right" : "init();",
      "info" : "ExpressionStatement[31594-31601]:ExpressionStatement[31613-31620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33056-33095]:Block[33075-33114]"
    }, {
      "left" : "mValue = value;",
      "right" : "mValue = value;",
      "info" : "ExpressionStatement[33070-33085]:ExpressionStatement[33089-33104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33182-33215]:Block[33201-33234]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[33196-33205]:ReturnStatement[33215-33224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33335-33381]:Block[33354-33400]"
    }, {
      "left" : "buffer.append(mValue);",
      "right" : "buffer.append(mValue);",
      "info" : "ExpressionStatement[33349-33371]:ExpressionStatement[33368-33390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33771-33810]:Block[33790-33829]"
    }, {
      "left" : "mValue = value;",
      "right" : "mValue = value;",
      "info" : "ExpressionStatement[33785-33800]:ExpressionStatement[33804-33819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33897-33944]:Block[33916-33963]"
    }, {
      "left" : "return mValue.length();",
      "right" : "return mValue.length();",
      "info" : "ReturnStatement[33911-33934]:ReturnStatement[33930-33953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34064-34110]:Block[34083-34129]"
    }, {
      "left" : "buffer.append(mValue);",
      "right" : "buffer.append(mValue);",
      "info" : "ExpressionStatement[34078-34100]:ExpressionStatement[34097-34119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34582-34651]:Block[34601-34670]"
    }, {
      "left" : "mField = field;",
      "right" : "mField = field;",
      "info" : "ExpressionStatement[34596-34611]:ExpressionStatement[34615-34630]"
    }, {
      "left" : "mValues = values;",
      "right" : "mValues = values;",
      "info" : "ExpressionStatement[34624-34641]:ExpressionStatement[34643-34660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34738-34994]:Block[34757-35013]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[34752-34764]:VariableDeclarationStatement[34771-34783]"
    }, {
      "left" : "for (int i=mValues.length; --i >= 0)",
      "right" : "for (int i=mValues.length; --i >= 0)",
      "info" : "ForStatement[34777-34960]:ForStatement[34796-34979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34816-34960]:Block[34835-34979]"
    }, {
      "left" : "int len = mValues[i].length();",
      "right" : "int len = mValues[i].length();",
      "info" : "VariableDeclarationStatement[34834-34864]:VariableDeclarationStatement[34853-34883]"
    }, {
      "left" : "if (len > max)",
      "right" : "if (len > max)",
      "info" : "IfStatement[34881-34946]:IfStatement[34900-34965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34896-34946]:Block[34915-34965]"
    }, {
      "left" : "max = len;",
      "right" : "max = len;",
      "info" : "ExpressionStatement[34918-34928]:ExpressionStatement[34937-34947]"
    }, {
      "left" : "return max;",
      "right" : "return max;",
      "info" : "ReturnStatement[34973-34984]:ReturnStatement[34992-35003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35114-35183]:Block[35133-35202]"
    }, {
      "left" : "buffer.append(mValues[calendar.get(mField)]);",
      "right" : "buffer.append(mValues[calendar.get(mField)]);",
      "info" : "ExpressionStatement[35128-35173]:ExpressionStatement[35147-35192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35565-35604]:Block[35584-35623]"
    }, {
      "left" : "mField = field;",
      "right" : "mField = field;",
      "info" : "ExpressionStatement[35579-35594]:ExpressionStatement[35598-35613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35691-35724]:Block[35710-35743]"
    }, {
      "left" : "return 4;",
      "right" : "return 4;",
      "info" : "ReturnStatement[35705-35714]:ReturnStatement[35724-35733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35844-35907]:Block[35863-35926]"
    }, {
      "left" : "appendTo(buffer, calendar.get(mField));",
      "right" : "appendTo(buffer, calendar.get(mField));",
      "info" : "ExpressionStatement[35858-35897]:ExpressionStatement[35877-35916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36025-36361]:Block[36044-36380]"
    }, {
      "left" : "if (value < 10)",
      "right" : "if (value < 10)",
      "info" : "IfStatement[36039-36351]:IfStatement[36058-36370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36055-36122]:Block[36074-36141]"
    }, {
      "left" : "buffer.append((char)(value + '0'));",
      "right" : "buffer.append((char)(value + '0'));",
      "info" : "ExpressionStatement[36073-36108]:ExpressionStatement[36092-36127]"
    }, {
      "left" : "if (value < 100)",
      "right" : "if (value < 100)",
      "info" : "IfStatement[36128-36351]:IfStatement[36147-36370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36145-36274]:Block[36164-36293]"
    }, {
      "left" : "buffer.append((char)(value / 10 + '0'));",
      "right" : "buffer.append((char)(value / 10 + '0'));",
      "info" : "ExpressionStatement[36163-36203]:ExpressionStatement[36182-36222]"
    }, {
      "left" : "buffer.append((char)(value % 10 + '0'));",
      "right" : "buffer.append((char)(value % 10 + '0'));",
      "info" : "ExpressionStatement[36220-36260]:ExpressionStatement[36239-36279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36280-36351]:Block[36299-36370]"
    }, {
      "left" : "buffer.append(Integer.toString(value));",
      "right" : "buffer.append(Integer.toString(value));",
      "info" : "ExpressionStatement[36298-36337]:ExpressionStatement[36317-36356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36715-36747]:Block[36734-36766]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[36729-36737]:SuperConstructorInvocation[36748-36756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36834-36867]:Block[36853-36886]"
    }, {
      "left" : "return 2;",
      "right" : "return 2;",
      "info" : "ReturnStatement[36848-36857]:ReturnStatement[36867-36876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36987-37062]:Block[37006-37081]"
    }, {
      "left" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
      "right" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
      "info" : "ExpressionStatement[37001-37052]:ExpressionStatement[37020-37071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37180-37422]:Block[37199-37441]"
    }, {
      "left" : "if (value < 10)",
      "right" : "if (value < 10)",
      "info" : "IfStatement[37194-37412]:IfStatement[37213-37431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37210-37277]:Block[37229-37296]"
    }, {
      "left" : "buffer.append((char)(value + '0'));",
      "right" : "buffer.append((char)(value + '0'));",
      "info" : "ExpressionStatement[37228-37263]:ExpressionStatement[37247-37282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37283-37412]:Block[37302-37431]"
    }, {
      "left" : "buffer.append((char)(value / 10 + '0'));",
      "right" : "buffer.append((char)(value / 10 + '0'));",
      "info" : "ExpressionStatement[37301-37341]:ExpressionStatement[37320-37360]"
    }, {
      "left" : "buffer.append((char)(value % 10 + '0'));",
      "right" : "buffer.append((char)(value % 10 + '0'));",
      "info" : "ExpressionStatement[37358-37398]:ExpressionStatement[37377-37417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37862-38097]:Block[37881-38116]"
    }, {
      "left" : "if (size < 3)",
      "right" : "if (size < 3)",
      "info" : "IfStatement[37876-38033]:IfStatement[37895-38052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37890-38033]:Block[37909-38052]"
    }, {
      "left" : "throw new IllegalArgumentException();",
      "right" : "throw new IllegalArgumentException();",
      "info" : "ThrowStatement[37982-38019]:ThrowStatement[38001-38038]"
    }, {
      "left" : "mField = field;",
      "right" : "mField = field;",
      "info" : "ExpressionStatement[38046-38061]:ExpressionStatement[38065-38080]"
    }, {
      "left" : "mSize = size;",
      "right" : "mSize = size;",
      "info" : "ExpressionStatement[38074-38087]:ExpressionStatement[38093-38106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38184-38217]:Block[38203-38236]"
    }, {
      "left" : "return 4;",
      "right" : "return 4;",
      "info" : "ReturnStatement[38198-38207]:ReturnStatement[38217-38226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38337-38400]:Block[38356-38419]"
    }, {
      "left" : "appendTo(buffer, calendar.get(mField));",
      "right" : "appendTo(buffer, calendar.get(mField));",
      "info" : "ExpressionStatement[38351-38390]:ExpressionStatement[38370-38409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38518-39286]:Block[38537-39305]"
    }, {
      "left" : "if (value < 100)",
      "right" : "if (value < 100)",
      "info" : "IfStatement[38532-39276]:IfStatement[38551-39295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38549-38786]:Block[38568-38805]"
    }, {
      "left" : "for (int i = mSize; --i >= 2)",
      "right" : "for (int i = mSize; --i >= 2)",
      "info" : "ForStatement[38567-38658]:ForStatement[38586-38677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38599-38658]:Block[38618-38677]"
    }, {
      "left" : "buffer.append('0');",
      "right" : "buffer.append('0');",
      "info" : "ExpressionStatement[38621-38640]:ExpressionStatement[38640-38659]"
    }, {
      "left" : "buffer.append((char)(value / 10 + '0'));",
      "right" : "buffer.append((char)(value / 10 + '0'));",
      "info" : "ExpressionStatement[38675-38715]:ExpressionStatement[38694-38734]"
    }, {
      "left" : "buffer.append((char)(value % 10 + '0'));",
      "right" : "buffer.append((char)(value % 10 + '0'));",
      "info" : "ExpressionStatement[38732-38772]:ExpressionStatement[38751-38791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38792-39276]:Block[38811-39295]"
    }, {
      "left" : "int digits;",
      "right" : "int digits;",
      "info" : "VariableDeclarationStatement[38810-38821]:VariableDeclarationStatement[38829-38840]"
    }, {
      "left" : "if (value < 1000)",
      "right" : "if (value < 1000)",
      "info" : "IfStatement[38838-39093]:IfStatement[38857-39112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38856-38907]:Block[38875-38926]"
    }, {
      "left" : "digits = 3;",
      "right" : "digits = 3;",
      "info" : "ExpressionStatement[38878-38889]:ExpressionStatement[38897-38908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38913-39093]:Block[38932-39112]"
    }, {
      "left" : "Validate.isTrue(value > -1, \"Negative values should not be possible\", value);",
      "right" : "Validate.isTrue(value > -1, \"Negative values should not be possible\", value);",
      "info" : "ExpressionStatement[38935-39012]:ExpressionStatement[38954-39031]"
    }, {
      "left" : "digits = Integer.toString(value).length();",
      "right" : "digits = Integer.toString(value).length();",
      "info" : "ExpressionStatement[39033-39075]:ExpressionStatement[39052-39094]"
    }, {
      "left" : "for (int i = mSize; --i >= digits)",
      "right" : "for (int i = mSize; --i >= digits)",
      "info" : "ForStatement[39110-39206]:ForStatement[39129-39225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39147-39206]:Block[39166-39225]"
    }, {
      "left" : "buffer.append('0');",
      "right" : "buffer.append('0');",
      "info" : "ExpressionStatement[39169-39188]:ExpressionStatement[39188-39207]"
    }, {
      "left" : "buffer.append(Integer.toString(value));",
      "right" : "buffer.append(Integer.toString(value));",
      "info" : "ExpressionStatement[39223-39262]:ExpressionStatement[39242-39281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39669-39708]:Block[39688-39727]"
    }, {
      "left" : "mField = field;",
      "right" : "mField = field;",
      "info" : "ExpressionStatement[39683-39698]:ExpressionStatement[39702-39717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39795-39828]:Block[39814-39847]"
    }, {
      "left" : "return 2;",
      "right" : "return 2;",
      "info" : "ReturnStatement[39809-39818]:ReturnStatement[39828-39837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39948-40011]:Block[39967-40030]"
    }, {
      "left" : "appendTo(buffer, calendar.get(mField));",
      "right" : "appendTo(buffer, calendar.get(mField));",
      "info" : "ExpressionStatement[39962-40001]:ExpressionStatement[39981-40020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40129-40376]:Block[40148-40395]"
    }, {
      "left" : "if (value < 100)",
      "right" : "if (value < 100)",
      "info" : "IfStatement[40143-40366]:IfStatement[40162-40385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40160-40289]:Block[40179-40308]"
    }, {
      "left" : "buffer.append((char)(value / 10 + '0'));",
      "right" : "buffer.append((char)(value / 10 + '0'));",
      "info" : "ExpressionStatement[40178-40218]:ExpressionStatement[40197-40237]"
    }, {
      "left" : "buffer.append((char)(value % 10 + '0'));",
      "right" : "buffer.append((char)(value % 10 + '0'));",
      "info" : "ExpressionStatement[40235-40275]:ExpressionStatement[40254-40294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40295-40366]:Block[40314-40385]"
    }, {
      "left" : "buffer.append(Integer.toString(value));",
      "right" : "buffer.append(Integer.toString(value));",
      "info" : "ExpressionStatement[40313-40352]:ExpressionStatement[40332-40371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40713-40745]:Block[40732-40764]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[40727-40735]:SuperConstructorInvocation[40746-40754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40832-40865]:Block[40851-40884]"
    }, {
      "left" : "return 2;",
      "right" : "return 2;",
      "info" : "ReturnStatement[40846-40855]:ReturnStatement[40865-40874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40985-41061]:Block[41004-41080]"
    }, {
      "left" : "appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",
      "right" : "appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",
      "info" : "ExpressionStatement[40999-41051]:ExpressionStatement[41018-41070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41179-41296]:Block[41198-41315]"
    }, {
      "left" : "buffer.append((char)(value / 10 + '0'));",
      "right" : "buffer.append((char)(value / 10 + '0'));",
      "info" : "ExpressionStatement[41193-41233]:ExpressionStatement[41212-41252]"
    }, {
      "left" : "buffer.append((char)(value % 10 + '0'));",
      "right" : "buffer.append((char)(value % 10 + '0'));",
      "info" : "ExpressionStatement[41246-41286]:ExpressionStatement[41265-41305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41639-41671]:Block[41658-41690]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[41653-41661]:SuperConstructorInvocation[41672-41680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41758-41791]:Block[41777-41810]"
    }, {
      "left" : "return 2;",
      "right" : "return 2;",
      "info" : "ReturnStatement[41772-41781]:ReturnStatement[41791-41800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41911-41986]:Block[41930-42005]"
    }, {
      "left" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
      "right" : "appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",
      "info" : "ExpressionStatement[41925-41976]:ExpressionStatement[41944-41995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42104-42221]:Block[42123-42240]"
    }, {
      "left" : "buffer.append((char)(value / 10 + '0'));",
      "right" : "buffer.append((char)(value / 10 + '0'));",
      "info" : "ExpressionStatement[42118-42158]:ExpressionStatement[42137-42177]"
    }, {
      "left" : "buffer.append((char)(value % 10 + '0'));",
      "right" : "buffer.append((char)(value % 10 + '0'));",
      "info" : "ExpressionStatement[42171-42211]:ExpressionStatement[42190-42230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42629-42666]:Block[42648-42685]"
    }, {
      "left" : "mRule = rule;",
      "right" : "mRule = rule;",
      "info" : "ExpressionStatement[42643-42656]:ExpressionStatement[42662-42675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42753-42807]:Block[42772-42826]"
    }, {
      "left" : "return mRule.estimateLength();",
      "right" : "return mRule.estimateLength();",
      "info" : "ReturnStatement[42767-42797]:ReturnStatement[42786-42816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42927-43147]:Block[42946-43166]"
    }, {
      "left" : "int value = calendar.get(Calendar.HOUR);",
      "right" : "int value = calendar.get(Calendar.HOUR);",
      "info" : "VariableDeclarationStatement[42941-42981]:VariableDeclarationStatement[42960-43000]"
    }, {
      "left" : "if (value == 0)",
      "right" : "if (value == 0)",
      "info" : "IfStatement[42994-43094]:IfStatement[43013-43113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43010-43094]:Block[43029-43113]"
    }, {
      "left" : "value = calendar.getLeastMaximum(Calendar.HOUR) + 1;",
      "right" : "value = calendar.getLeastMaximum(Calendar.HOUR) + 1;",
      "info" : "ExpressionStatement[43028-43080]:ExpressionStatement[43047-43099]"
    }, {
      "left" : "mRule.appendTo(buffer, value);",
      "right" : "mRule.appendTo(buffer, value);",
      "info" : "ExpressionStatement[43107-43137]:ExpressionStatement[43126-43156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43259-43313]:Block[43278-43332]"
    }, {
      "left" : "mRule.appendTo(buffer, value);",
      "right" : "mRule.appendTo(buffer, value);",
      "info" : "ExpressionStatement[43273-43303]:ExpressionStatement[43292-43322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43738-43775]:Block[43757-43794]"
    }, {
      "left" : "mRule = rule;",
      "right" : "mRule = rule;",
      "info" : "ExpressionStatement[43752-43765]:ExpressionStatement[43771-43784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43862-43916]:Block[43881-43935]"
    }, {
      "left" : "return mRule.estimateLength();",
      "right" : "return mRule.estimateLength();",
      "info" : "ReturnStatement[43876-43906]:ReturnStatement[43895-43925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44036-44265]:Block[44055-44284]"
    }, {
      "left" : "int value = calendar.get(Calendar.HOUR_OF_DAY);",
      "right" : "int value = calendar.get(Calendar.HOUR_OF_DAY);",
      "info" : "VariableDeclarationStatement[44050-44097]:VariableDeclarationStatement[44069-44116]"
    }, {
      "left" : "if (value == 0)",
      "right" : "if (value == 0)",
      "info" : "IfStatement[44110-44212]:IfStatement[44129-44231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44126-44212]:Block[44145-44231]"
    }, {
      "left" : "value = calendar.getMaximum(Calendar.HOUR_OF_DAY) + 1;",
      "right" : "value = calendar.getMaximum(Calendar.HOUR_OF_DAY) + 1;",
      "info" : "ExpressionStatement[44144-44198]:ExpressionStatement[44163-44217]"
    }, {
      "left" : "mRule.appendTo(buffer, value);",
      "right" : "mRule.appendTo(buffer, value);",
      "info" : "ExpressionStatement[44225-44255]:ExpressionStatement[44244-44274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44377-44431]:Block[44396-44450]"
    }, {
      "left" : "mRule.appendTo(buffer, value);",
      "right" : "mRule.appendTo(buffer, value);",
      "info" : "ExpressionStatement[44391-44421]:ExpressionStatement[44410-44440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45001-45198]:Block[45020-45217]"
    }, {
      "left" : "mTimeZone = timeZone;",
      "right" : "mTimeZone = timeZone;",
      "info" : "ExpressionStatement[45015-45036]:ExpressionStatement[45034-45055]"
    }, {
      "left" : "mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",
      "right" : "mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",
      "info" : "ExpressionStatement[45050-45113]:ExpressionStatement[45069-45132]"
    }, {
      "left" : "mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",
      "right" : "mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",
      "info" : "ExpressionStatement[45126-45188]:ExpressionStatement[45145-45207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45285-45365]:Block[45304-45384]"
    }, {
      "left" : "return Math.max(mStandard.length(), mDaylight.length());",
      "right" : "return Math.max(mStandard.length(), mDaylight.length());",
      "info" : "ReturnStatement[45299-45355]:ReturnStatement[45318-45374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45485-45704]:Block[45504-45723]"
    }, {
      "left" : "if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0)",
      "right" : "if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0)",
      "info" : "IfStatement[45499-45694]:IfStatement[45518-45713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45574-45631]:Block[45593-45650]"
    }, {
      "left" : "buffer.append(mDaylight);",
      "right" : "buffer.append(mDaylight);",
      "info" : "ExpressionStatement[45592-45617]:ExpressionStatement[45611-45636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45637-45694]:Block[45656-45713]"
    }, {
      "left" : "buffer.append(mStandard);",
      "right" : "buffer.append(mStandard);",
      "info" : "ExpressionStatement[45655-45680]:ExpressionStatement[45674-45699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46358-46397]:Block[46377-46416]"
    }, {
      "left" : "mColon = colon;",
      "right" : "mColon = colon;",
      "info" : "ExpressionStatement[46372-46387]:ExpressionStatement[46391-46406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46484-46517]:Block[46503-46536]"
    }, {
      "left" : "return 5;",
      "right" : "return 5;",
      "info" : "ReturnStatement[46498-46507]:ReturnStatement[46517-46526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46637-47324]:Block[46656-47343]"
    }, {
      "left" : "int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);",
      "right" : "int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);",
      "info" : "VariableDeclarationStatement[46651-46735]:VariableDeclarationStatement[46670-46754]"
    }, {
      "left" : "if (offset < 0)",
      "right" : "if (offset < 0)",
      "info" : "IfStatement[46749-46907]:IfStatement[46768-46926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46765-46850]:Block[46784-46869]"
    }, {
      "left" : "buffer.append('-');",
      "right" : "buffer.append('-');",
      "info" : "ExpressionStatement[46783-46802]:ExpressionStatement[46802-46821]"
    }, {
      "left" : "offset = -offset;",
      "right" : "offset = -offset;",
      "info" : "ExpressionStatement[46819-46836]:ExpressionStatement[46838-46855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46856-46907]:Block[46875-46926]"
    }, {
      "left" : "buffer.append('+');",
      "right" : "buffer.append('+');",
      "info" : "ExpressionStatement[46874-46893]:ExpressionStatement[46893-46912]"
    }, {
      "left" : "int hours = offset / (60 * 60 * 1000);",
      "right" : "int hours = offset / (60 * 60 * 1000);",
      "info" : "VariableDeclarationStatement[46921-46959]:VariableDeclarationStatement[46940-46978]"
    }, {
      "left" : "buffer.append((char)(hours / 10 + '0'));",
      "right" : "buffer.append((char)(hours / 10 + '0'));",
      "info" : "ExpressionStatement[46972-47012]:ExpressionStatement[46991-47031]"
    }, {
      "left" : "buffer.append((char)(hours % 10 + '0'));",
      "right" : "buffer.append((char)(hours % 10 + '0'));",
      "info" : "ExpressionStatement[47025-47065]:ExpressionStatement[47044-47084]"
    }, {
      "left" : "if (mColon)",
      "right" : "if (mColon)",
      "info" : "IfStatement[47079-47142]:IfStatement[47098-47161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47091-47142]:Block[47110-47161]"
    }, {
      "left" : "buffer.append(':');",
      "right" : "buffer.append(':');",
      "info" : "ExpressionStatement[47109-47128]:ExpressionStatement[47128-47147]"
    }, {
      "left" : "int minutes = offset / (60 * 1000) - 60 * hours;",
      "right" : "int minutes = offset / (60 * 1000) - 60 * hours;",
      "info" : "VariableDeclarationStatement[47156-47204]:VariableDeclarationStatement[47175-47223]"
    }, {
      "left" : "buffer.append((char)(minutes / 10 + '0'));",
      "right" : "buffer.append((char)(minutes / 10 + '0'));",
      "info" : "ExpressionStatement[47217-47259]:ExpressionStatement[47236-47278]"
    }, {
      "left" : "buffer.append((char)(minutes % 10 + '0'));",
      "right" : "buffer.append((char)(minutes % 10 + '0'));",
      "info" : "ExpressionStatement[47272-47314]:ExpressionStatement[47291-47333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48123-48305]:Block[48142-48324]"
    }, {
      "left" : "mTimeZone = timeZone;",
      "right" : "mTimeZone = timeZone;",
      "info" : "ExpressionStatement[48137-48158]:ExpressionStatement[48156-48177]"
    }, {
      "left" : "if (daylight)",
      "right" : "if (daylight)",
      "info" : "IfStatement[48171-48237]:IfStatement[48190-48256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48185-48237]:Block[48204-48256]"
    }, {
      "left" : "style |= 0x80000000;",
      "right" : "style |= 0x80000000;",
      "info" : "ExpressionStatement[48203-48223]:ExpressionStatement[48222-48242]"
    }, {
      "left" : "mStyle = style;",
      "right" : "mStyle = style;",
      "info" : "ExpressionStatement[48250-48265]:ExpressionStatement[48269-48284]"
    }, {
      "left" : "mLocale = locale;",
      "right" : "mLocale = locale;",
      "info" : "ExpressionStatement[48278-48295]:ExpressionStatement[48297-48314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48404-48499]:Block[48423-48518]"
    }, {
      "left" : "return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();",
      "right" : "return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();",
      "info" : "ReturnStatement[48418-48489]:ReturnStatement[48437-48508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48610-49033]:Block[48629-49052]"
    }, {
      "left" : "if (this == obj)",
      "right" : "if (this == obj)",
      "info" : "IfStatement[48624-48685]:IfStatement[48643-48704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48641-48685]:Block[48660-48704]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[48659-48671]:ReturnStatement[48678-48690]"
    }, {
      "left" : "if (obj instanceof TimeZoneDisplayKey)",
      "right" : "if (obj instanceof TimeZoneDisplayKey)",
      "info" : "IfStatement[48698-48997]:IfStatement[48717-49016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48737-48997]:Block[48756-49016]"
    }, {
      "left" : "TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;",
      "right" : "TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;",
      "info" : "VariableDeclarationStatement[48755-48806]:VariableDeclarationStatement[48774-48825]"
    }, {
      "left" : "return\n                    mTimeZone.equals(other.mTimeZone) &&\n                    mStyle == other.mStyle &&\n                    mLocale.equals(other.mLocale);",
      "right" : "return\n                    mTimeZone.equals(other.mTimeZone) &&\n                    mStyle == other.mStyle &&\n                    mLocale.equals(other.mLocale);",
      "info" : "ReturnStatement[48823-48983]:ReturnStatement[48842-49002]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[49010-49023]:ReturnStatement[49029-49042]"
    } ]
  },
  "interFileMappings" : { }
}