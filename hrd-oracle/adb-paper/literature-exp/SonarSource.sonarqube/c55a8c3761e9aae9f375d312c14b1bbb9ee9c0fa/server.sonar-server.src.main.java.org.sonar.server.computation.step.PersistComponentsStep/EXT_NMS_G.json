{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "PersistComponentsStep",
      "right" : "PersistComponentsStep",
      "info" : "TypeDeclaration[1734-11899]:TypeDeclaration[1793-12106]"
    }, {
      "left" : "private final DbClient dbClient;",
      "right" : "private final DbClient dbClient;",
      "info" : "FieldDeclaration[1908-1940]:FieldDeclaration[1967-1999]"
    }, {
      "left" : "private final TreeRootHolder treeRootHolder;",
      "right" : "private final TreeRootHolder treeRootHolder;",
      "info" : "FieldDeclaration[1943-1987]:FieldDeclaration[2002-2046]"
    }, {
      "left" : "private final BatchReportReader reportReader;",
      "right" : "private final BatchReportReader reportReader;",
      "info" : "FieldDeclaration[1990-2035]:FieldDeclaration[2049-2094]"
    }, {
      "left" : "private final DbIdsRepository dbIdsRepository;",
      "right" : "private final DbIdsRepository dbIdsRepository;",
      "info" : "FieldDeclaration[2039-2085]:FieldDeclaration[2097-2143]"
    }, {
      "left" : "public PersistComponentsStep(DbClient dbClient, TreeRootHolder treeRootHolder, BatchReportReader reportReader, DbIdsRepository dbIdsRepository)",
      "right" : "public PersistComponentsStep(DbClient dbClient, TreeRootHolder treeRootHolder, BatchReportReader reportReader, DbIdsRepository dbIdsRepository, System2 system2)",
      "info" : "MethodDeclaration[2089-2392]:MethodDeclaration[2180-2528]"
    }, {
      "left" : "public void execute()",
      "right" : "public void execute()",
      "info" : "MethodDeclaration[2396-3058]:MethodDeclaration[2532-3194]"
    }, {
      "left" : "PersisComponent",
      "right" : "PersisComponent",
      "info" : "TypeDeclaration[3062-9631]:TypeDeclaration[3198-10290]"
    }, {
      "left" : "private final BatchReportReader reportReader;",
      "right" : "private final BatchReportReader reportReader;",
      "info" : "FieldDeclaration[3099-3144]:FieldDeclaration[3235-3280]"
    }, {
      "left" : "private final Map<String, ComponentDto> existingComponentDtosByKey;",
      "right" : "private final Map<String, ComponentDto> existingComponentDtosByKey;",
      "info" : "FieldDeclaration[3149-3216]:FieldDeclaration[3285-3352]"
    }, {
      "left" : "private final DbSession dbSession;",
      "right" : "private final DbSession dbSession;",
      "info" : "FieldDeclaration[3221-3255]:FieldDeclaration[3357-3391]"
    }, {
      "left" : "private ComponentDto project;",
      "right" : "private ComponentDto project;",
      "info" : "FieldDeclaration[3261-3290]:FieldDeclaration[3397-3426]"
    }, {
      "left" : "public PersisComponent(DbSession dbSession, Map<String, ComponentDto> existingComponentDtosByKey, BatchReportReader reportReader)",
      "right" : "public PersisComponent(DbSession dbSession, Map<String, ComponentDto> existingComponentDtosByKey, BatchReportReader reportReader)",
      "info" : "MethodDeclaration[3296-3575]:MethodDeclaration[3432-3711]"
    }, {
      "left" : "private void recursivelyProcessComponent(Component component, @Nullable ComponentDto lastModule)",
      "right" : "private void recursivelyProcessComponent(Component component, @Nullable ComponentDto lastModule)",
      "info" : "MethodDeclaration[3581-4634]:MethodDeclaration[3717-4770]"
    }, {
      "left" : "private void processChildren(Component component, ComponentDto lastModule)",
      "right" : "private void processChildren(Component component, ComponentDto lastModule)",
      "info" : "MethodDeclaration[4640-4842]:MethodDeclaration[4776-4978]"
    }, {
      "left" : "private ComponentDto nonNullLastModule(@Nullable ComponentDto lastModule)",
      "right" : "private ComponentDto nonNullLastModule(@Nullable ComponentDto lastModule)",
      "info" : "MethodDeclaration[4848-4985]:MethodDeclaration[4984-5121]"
    }, {
      "left" : "public ComponentDto processProject(Component project, BatchReport.Component reportComponent)",
      "right" : "public ComponentDto processProject(Component project, BatchReport.Component reportComponent)",
      "info" : "MethodDeclaration[4991-5837]:MethodDeclaration[5127-5973]"
    }, {
      "left" : "public ComponentDto processModule(Component module, BatchReport.Component reportComponent, ComponentDto lastModule)",
      "right" : "public ComponentDto processModule(Component module, BatchReport.Component reportComponent, ComponentDto lastModule)",
      "info" : "MethodDeclaration[5843-6917]:MethodDeclaration[5979-7053]"
    }, {
      "left" : "public ComponentDto processDirectory(org.sonar.server.computation.component.Component directory, BatchReport.Component reportComponent, ComponentDto lastModule)",
      "right" : "public ComponentDto processDirectory(org.sonar.server.computation.component.Component directory, BatchReport.Component reportComponent, ComponentDto lastModule)",
      "info" : "MethodDeclaration[6923-7892]:MethodDeclaration[7059-8028]"
    }, {
      "left" : "public void processFile(org.sonar.server.computation.component.Component file, BatchReport.Component reportComponent, ComponentDto lastModule)",
      "right" : "public void processFile(org.sonar.server.computation.component.Component file, BatchReport.Component reportComponent, ComponentDto lastModule)",
      "info" : "MethodDeclaration[7898-8944]:MethodDeclaration[8034-9080]"
    }, {
      "left" : "private ComponentDto persistComponent(int componentRef, ComponentDto componentDto)",
      "right" : "private ComponentDto persistComponent(int componentRef, ComponentDto componentDto)",
      "info" : "MethodDeclaration[8950-9470]:MethodDeclaration[9609-10129]"
    }, {
      "left" : "private void addToCache(Component component, ComponentDto componentDto)",
      "right" : "private void addToCache(Component component, ComponentDto componentDto)",
      "info" : "MethodDeclaration[9476-9626]:MethodDeclaration[10135-10285]"
    }, {
      "left" : "private static ComponentDto createComponentDto(BatchReport.Component reportComponent, Component component)",
      "right" : "private ComponentDto createComponentDto(BatchReport.Component reportComponent, Component component)",
      "info" : "MethodDeclaration[9635-10083]:MethodDeclaration[9086-9603]"
    }, {
      "left" : "private static boolean updateComponent(ComponentDto existingComponent, ComponentDto newComponent)",
      "right" : "private static boolean updateComponent(ComponentDto existingComponent, ComponentDto newComponent)",
      "info" : "MethodDeclaration[10087-11338]:MethodDeclaration[10294-11545]"
    }, {
      "left" : "private static String getFileQualifier(BatchReport.Component reportComponent)",
      "right" : "private static String getFileQualifier(BatchReport.Component reportComponent)",
      "info" : "MethodDeclaration[11342-11511]:MethodDeclaration[11549-11718]"
    }, {
      "left" : "private static Map<String, ComponentDto> componentDtosByKey(List<ComponentDto> components)",
      "right" : "private static Map<String, ComponentDto> componentDtosByKey(List<ComponentDto> components)",
      "info" : "MethodDeclaration[11515-11812]:MethodDeclaration[11722-12019]"
    }, {
      "left" : "public String doApply(ComponentDto input)",
      "right" : "public String doApply(ComponentDto input)",
      "info" : "MethodDeclaration[11705-11800]:MethodDeclaration[11912-12007]"
    }, {
      "left" : "public String getDescription()",
      "right" : "public String getDescription()",
      "info" : "MethodDeclaration[11816-11897]:MethodDeclaration[12023-12104]"
    } ],
    "mappings" : [
 {
      "left" : "ComputationStep",
      "right" : "ComputationStep",
      "info" : "SimpleType[1887-1902]:SimpleType[1946-1961]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2089-2095]:Modifier[2180-2186]"
    }, {
      "left" : "PersistComponentsStep",
      "right" : "PersistComponentsStep",
      "info" : "SimpleName[2096-2117]:SimpleName[2187-2208]"
    }, {
      "left" : "DbClient dbClient",
      "right" : "DbClient dbClient",
      "info" : "SingleVariableDeclaration[2118-2135]:SingleVariableDeclaration[2209-2226]"
    }, {
      "left" : "TreeRootHolder treeRootHolder",
      "right" : "TreeRootHolder treeRootHolder",
      "info" : "SingleVariableDeclaration[2137-2166]:SingleVariableDeclaration[2228-2257]"
    }, {
      "left" : "BatchReportReader reportReader",
      "right" : "BatchReportReader reportReader",
      "info" : "SingleVariableDeclaration[2168-2198]:SingleVariableDeclaration[2259-2289]"
    }, {
      "left" : "DbIdsRepository dbIdsRepository",
      "right" : "DbIdsRepository dbIdsRepository",
      "info" : "SingleVariableDeclaration[2200-2231]:SingleVariableDeclaration[2291-2322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2233-2392]:Block[2341-2528]"
    }, {
      "left" : "this.dbClient = dbClient;",
      "right" : "this.dbClient = dbClient;",
      "info" : "ExpressionStatement[2239-2264]:ExpressionStatement[2347-2372]"
    }, {
      "left" : "this.dbClient = dbClient",
      "right" : "this.system2 = system2",
      "info" : "Assignment[2239-2263]:Assignment[2501-2523]"
    }, {
      "left" : "dbClient",
      "right" : "system2",
      "info" : "SimpleName[2244-2252]:SimpleName[2506-2513]"
    }, {
      "left" : "dbClient",
      "right" : "system2",
      "info" : "SimpleName[2255-2263]:SimpleName[2516-2523]"
    }, {
      "left" : "this.treeRootHolder = treeRootHolder;",
      "right" : "this.treeRootHolder = treeRootHolder;",
      "info" : "ExpressionStatement[2269-2306]:ExpressionStatement[2377-2414]"
    }, {
      "left" : "this.reportReader = reportReader;",
      "right" : "this.reportReader = reportReader;",
      "info" : "ExpressionStatement[2311-2344]:ExpressionStatement[2419-2452]"
    }, {
      "left" : "this.dbIdsRepository = dbIdsRepository;",
      "right" : "this.dbIdsRepository = dbIdsRepository;",
      "info" : "ExpressionStatement[2349-2388]:ExpressionStatement[2457-2496]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2396-2405]:MarkerAnnotation[2532-2541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2408-2414]:Modifier[2544-2550]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2415-2419]:PrimitiveType[2551-2555]"
    }, {
      "left" : "execute",
      "right" : "execute",
      "info" : "SimpleName[2420-2427]:SimpleName[2556-2563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2430-3058]:Block[2566-3194]"
    }, {
      "left" : "DbSession session = dbClient.openSession(false);",
      "right" : "DbSession session = dbClient.openSession(false);",
      "info" : "VariableDeclarationStatement[2436-2484]:VariableDeclarationStatement[2572-2620]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[2489-3054]:TryStatement[2625-3190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2493-3015]:Block[2629-3151]"
    }, {
      "left" : "org.sonar.server.computation.component.Component root = treeRootHolder.getRoot();",
      "right" : "org.sonar.server.computation.component.Component root = treeRootHolder.getRoot();",
      "info" : "VariableDeclarationStatement[2501-2582]:VariableDeclarationStatement[2637-2718]"
    }, {
      "left" : "List<ComponentDto> existingComponents = dbClient.componentDao().selectComponentsFromProjectKey(session, root.getKey());",
      "right" : "List<ComponentDto> existingComponents = dbClient.componentDao().selectComponentsFromProjectKey(session, root.getKey());",
      "info" : "VariableDeclarationStatement[2589-2708]:VariableDeclarationStatement[2725-2844]"
    }, {
      "left" : "Map<String, ComponentDto> existingComponentDtosByKey = componentDtosByKey(existingComponents);",
      "right" : "Map<String, ComponentDto> existingComponentDtosByKey = componentDtosByKey(existingComponents);",
      "info" : "VariableDeclarationStatement[2715-2809]:VariableDeclarationStatement[2851-2945]"
    }, {
      "left" : "PersisComponent persisComponent = new PersisComponent(session, existingComponentDtosByKey, reportReader);",
      "right" : "PersisComponent persisComponent = new PersisComponent(session, existingComponentDtosByKey, reportReader);",
      "info" : "VariableDeclarationStatement[2816-2921]:VariableDeclarationStatement[2952-3057]"
    }, {
      "left" : "persisComponent.recursivelyProcessComponent(root, null);",
      "right" : "persisComponent.recursivelyProcessComponent(root, null);",
      "info" : "ExpressionStatement[2929-2985]:ExpressionStatement[3065-3121]"
    }, {
      "left" : "session.commit();",
      "right" : "session.commit();",
      "info" : "ExpressionStatement[2992-3009]:ExpressionStatement[3128-3145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3024-3054]:Block[3160-3190]"
    }, {
      "left" : "session.close();",
      "right" : "session.close();",
      "info" : "ExpressionStatement[3032-3048]:ExpressionStatement[3168-3184]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3062-3069]:Modifier[3198-3205]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3070-3075]:TYPE_DECLARATION_KIND[3206-3211]"
    }, {
      "left" : "PersisComponent",
      "right" : "PersisComponent",
      "info" : "SimpleName[3076-3091]:SimpleName[3212-3227]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3149-3156]:Modifier[2146-2153]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[3157-3162]:Modifier[2154-2159]"
    }, {
      "left" : "String",
      "right" : "System2",
      "info" : "SimpleType[3167-3173]:SimpleType[2160-2167]"
    }, {
      "left" : "existingComponentDtosByKey",
      "right" : "system2",
      "info" : "SimpleName[3189-3215]:SimpleName[2168-2175]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3296-3302]:Modifier[3432-3438]"
    }, {
      "left" : "PersisComponent",
      "right" : "PersisComponent",
      "info" : "SimpleName[3303-3318]:SimpleName[3439-3454]"
    }, {
      "left" : "DbSession dbSession",
      "right" : "DbSession dbSession",
      "info" : "SingleVariableDeclaration[3319-3338]:SingleVariableDeclaration[3455-3474]"
    }, {
      "left" : "Map<String, ComponentDto> existingComponentDtosByKey",
      "right" : "Map<String, ComponentDto> existingComponentDtosByKey",
      "info" : "SingleVariableDeclaration[3340-3392]:SingleVariableDeclaration[3476-3528]"
    }, {
      "left" : "String",
      "right" : "System2",
      "info" : "SimpleType[3344-3350]:SimpleType[2324-2331]"
    }, {
      "left" : "ComponentDto",
      "right" : "system2",
      "info" : "SimpleName[3352-3364]:SimpleName[2332-2339]"
    }, {
      "left" : "BatchReportReader reportReader",
      "right" : "BatchReportReader reportReader",
      "info" : "SingleVariableDeclaration[3394-3424]:SingleVariableDeclaration[3530-3560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3426-3575]:Block[3562-3711]"
    }, {
      "left" : "this.reportReader = reportReader;",
      "right" : "this.reportReader = reportReader;",
      "info" : "ExpressionStatement[3434-3467]:ExpressionStatement[3570-3603]"
    }, {
      "left" : "this.existingComponentDtosByKey = existingComponentDtosByKey;",
      "right" : "this.existingComponentDtosByKey = existingComponentDtosByKey;",
      "info" : "ExpressionStatement[3474-3535]:ExpressionStatement[3610-3671]"
    }, {
      "left" : "this.dbSession = dbSession;",
      "right" : "this.dbSession = dbSession;",
      "info" : "ExpressionStatement[3542-3569]:ExpressionStatement[3678-3705]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3581-3588]:Modifier[3717-3724]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3589-3593]:PrimitiveType[3725-3729]"
    }, {
      "left" : "recursivelyProcessComponent",
      "right" : "recursivelyProcessComponent",
      "info" : "SimpleName[3594-3621]:SimpleName[3730-3757]"
    }, {
      "left" : "Component component",
      "right" : "Component component",
      "info" : "SingleVariableDeclaration[3622-3641]:SingleVariableDeclaration[3758-3777]"
    }, {
      "left" : "@Nullable ComponentDto lastModule",
      "right" : "@Nullable ComponentDto lastModule",
      "info" : "SingleVariableDeclaration[3643-3676]:SingleVariableDeclaration[3779-3812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3678-4634]:Block[3814-4770]"
    }, {
      "left" : "BatchReport.Component reportComponent = reportReader.readComponent(component.getRef());",
      "right" : "BatchReport.Component reportComponent = reportReader.readComponent(component.getRef());",
      "info" : "VariableDeclarationStatement[3686-3773]:VariableDeclarationStatement[3822-3909]"
    }, {
      "left" : "switch (component.getType()) {\n        case PROJECT:\n          this.project = processProject(component, reportComponent);\n          processChildren(component, project);\n          break;\n        case MODULE:\n          ComponentDto persistedModule = processModule(component, reportComponent, nonNullLastModule(lastModule));\n          processChildren(component, persistedModule);\n          break;\n        case DIRECTORY:\n          processDirectory(component, reportComponent, nonNullLastModule(lastModule));\n          processChildren(component, nonNullLastModule(lastModule));\n          break;\n        case FILE:\n          processFile(component, reportComponent, nonNullLastModule(lastModule));\n          break;\n        default:\n          throw new IllegalStateException(String.format(\"Unsupported component type '%s'\", component.getType()));\n      }",
      "right" : "switch (component.getType()) {\n        case PROJECT:\n          this.project = processProject(component, reportComponent);\n          processChildren(component, project);\n          break;\n        case MODULE:\n          ComponentDto persistedModule = processModule(component, reportComponent, nonNullLastModule(lastModule));\n          processChildren(component, persistedModule);\n          break;\n        case DIRECTORY:\n          processDirectory(component, reportComponent, nonNullLastModule(lastModule));\n          processChildren(component, nonNullLastModule(lastModule));\n          break;\n        case FILE:\n          processFile(component, reportComponent, nonNullLastModule(lastModule));\n          break;\n        default:\n          throw new IllegalStateException(String.format(\"Unsupported component type '%s'\", component.getType()));\n      }",
      "info" : "SwitchStatement[3781-4628]:SwitchStatement[3917-4764]"
    }, {
      "left" : "case PROJECT:",
      "right" : "case PROJECT:",
      "info" : "SwitchCase[3820-3833]:SwitchCase[3956-3969]"
    }, {
      "left" : "this.project = processProject(component, reportComponent);",
      "right" : "this.project = processProject(component, reportComponent);",
      "info" : "ExpressionStatement[3844-3902]:ExpressionStatement[3980-4038]"
    }, {
      "left" : "processChildren(component, project);",
      "right" : "processChildren(component, project);",
      "info" : "ExpressionStatement[3913-3949]:ExpressionStatement[4049-4085]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3960-3966]:BreakStatement[4096-4102]"
    }, {
      "left" : "case MODULE:",
      "right" : "case MODULE:",
      "info" : "SwitchCase[3975-3987]:SwitchCase[4111-4123]"
    }, {
      "left" : "ComponentDto persistedModule = processModule(component, reportComponent, nonNullLastModule(lastModule));",
      "right" : "ComponentDto persistedModule = processModule(component, reportComponent, nonNullLastModule(lastModule));",
      "info" : "VariableDeclarationStatement[3998-4102]:VariableDeclarationStatement[4134-4238]"
    }, {
      "left" : "processChildren(component, persistedModule);",
      "right" : "processChildren(component, persistedModule);",
      "info" : "ExpressionStatement[4113-4157]:ExpressionStatement[4249-4293]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4168-4174]:BreakStatement[4304-4310]"
    }, {
      "left" : "case DIRECTORY:",
      "right" : "case DIRECTORY:",
      "info" : "SwitchCase[4183-4198]:SwitchCase[4319-4334]"
    }, {
      "left" : "processDirectory(component, reportComponent, nonNullLastModule(lastModule));",
      "right" : "processDirectory(component, reportComponent, nonNullLastModule(lastModule));",
      "info" : "ExpressionStatement[4209-4285]:ExpressionStatement[4345-4421]"
    }, {
      "left" : "processChildren(component, nonNullLastModule(lastModule));",
      "right" : "processChildren(component, nonNullLastModule(lastModule));",
      "info" : "ExpressionStatement[4296-4354]:ExpressionStatement[4432-4490]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4365-4371]:BreakStatement[4501-4507]"
    }, {
      "left" : "case FILE:",
      "right" : "case FILE:",
      "info" : "SwitchCase[4380-4390]:SwitchCase[4516-4526]"
    }, {
      "left" : "processFile(component, reportComponent, nonNullLastModule(lastModule));",
      "right" : "processFile(component, reportComponent, nonNullLastModule(lastModule));",
      "info" : "ExpressionStatement[4401-4472]:ExpressionStatement[4537-4608]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4483-4489]:BreakStatement[4619-4625]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[4498-4506]:SwitchCase[4634-4642]"
    }, {
      "left" : "throw new IllegalStateException(String.format(\"Unsupported component type '%s'\", component.getType()));",
      "right" : "throw new IllegalStateException(String.format(\"Unsupported component type '%s'\", component.getType()));",
      "info" : "ThrowStatement[4517-4620]:ThrowStatement[4653-4756]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4640-4647]:Modifier[4776-4783]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4648-4652]:PrimitiveType[4784-4788]"
    }, {
      "left" : "processChildren",
      "right" : "processChildren",
      "info" : "SimpleName[4653-4668]:SimpleName[4789-4804]"
    }, {
      "left" : "Component component",
      "right" : "Component component",
      "info" : "SingleVariableDeclaration[4669-4688]:SingleVariableDeclaration[4805-4824]"
    }, {
      "left" : "ComponentDto lastModule",
      "right" : "ComponentDto lastModule",
      "info" : "SingleVariableDeclaration[4690-4713]:SingleVariableDeclaration[4826-4849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4715-4842]:Block[4851-4978]"
    }, {
      "left" : "for (Component child : component.getChildren())",
      "right" : "for (Component child : component.getChildren())",
      "info" : "EnhancedForStatement[4723-4836]:EnhancedForStatement[4859-4972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4771-4836]:Block[4907-4972]"
    }, {
      "left" : "recursivelyProcessComponent(child, lastModule);",
      "right" : "recursivelyProcessComponent(child, lastModule);",
      "info" : "ExpressionStatement[4781-4828]:ExpressionStatement[4917-4964]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4848-4855]:Modifier[4984-4991]"
    }, {
      "left" : "ComponentDto",
      "right" : "ComponentDto",
      "info" : "SimpleType[4856-4868]:SimpleType[4992-5004]"
    }, {
      "left" : "nonNullLastModule",
      "right" : "nonNullLastModule",
      "info" : "SimpleName[4869-4886]:SimpleName[5005-5022]"
    }, {
      "left" : "@Nullable ComponentDto lastModule",
      "right" : "@Nullable ComponentDto lastModule",
      "info" : "SingleVariableDeclaration[4887-4920]:SingleVariableDeclaration[5023-5056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4922-4985]:Block[5058-5121]"
    }, {
      "left" : "return lastModule == null ? project : lastModule;",
      "right" : "return lastModule == null ? project : lastModule;",
      "info" : "ReturnStatement[4930-4979]:ReturnStatement[5066-5115]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4991-4997]:Modifier[5127-5133]"
    }, {
      "left" : "ComponentDto",
      "right" : "ComponentDto",
      "info" : "SimpleType[4998-5010]:SimpleType[5134-5146]"
    }, {
      "left" : "processProject",
      "right" : "processProject",
      "info" : "SimpleName[5011-5025]:SimpleName[5147-5161]"
    }, {
      "left" : "Component project",
      "right" : "Component project",
      "info" : "SingleVariableDeclaration[5026-5043]:SingleVariableDeclaration[5162-5179]"
    }, {
      "left" : "BatchReport.Component reportComponent",
      "right" : "BatchReport.Component reportComponent",
      "info" : "SingleVariableDeclaration[5045-5082]:SingleVariableDeclaration[5181-5218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5084-5837]:Block[5220-5973]"
    }, {
      "left" : "ComponentDto componentDto = createComponentDto(reportComponent, project);",
      "right" : "ComponentDto componentDto = createComponentDto(reportComponent, project);",
      "info" : "VariableDeclarationStatement[5092-5165]:VariableDeclarationStatement[5228-5301]"
    }, {
      "left" : "componentDto.setScope(Scopes.PROJECT);",
      "right" : "componentDto.setScope(Scopes.PROJECT);",
      "info" : "ExpressionStatement[5173-5211]:ExpressionStatement[5309-5347]"
    }, {
      "left" : "componentDto.setQualifier(Qualifiers.PROJECT);",
      "right" : "componentDto.setQualifier(Qualifiers.PROJECT);",
      "info" : "ExpressionStatement[5218-5264]:ExpressionStatement[5354-5400]"
    }, {
      "left" : "componentDto.setName(reportComponent.getName());",
      "right" : "componentDto.setName(reportComponent.getName());",
      "info" : "ExpressionStatement[5271-5319]:ExpressionStatement[5407-5455]"
    }, {
      "left" : "componentDto.setLongName(componentDto.name());",
      "right" : "componentDto.setLongName(componentDto.name());",
      "info" : "ExpressionStatement[5326-5372]:ExpressionStatement[5462-5508]"
    }, {
      "left" : "if (reportComponent.hasDescription())",
      "right" : "if (reportComponent.hasDescription())",
      "info" : "IfStatement[5379-5497]:IfStatement[5515-5633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5417-5497]:Block[5553-5633]"
    }, {
      "left" : "componentDto.setDescription(reportComponent.getDescription());",
      "right" : "componentDto.setDescription(reportComponent.getDescription());",
      "info" : "ExpressionStatement[5427-5489]:ExpressionStatement[5563-5625]"
    }, {
      "left" : "componentDto.setProjectUuid(componentDto.uuid());",
      "right" : "componentDto.setProjectUuid(componentDto.uuid());",
      "info" : "ExpressionStatement[5504-5553]:ExpressionStatement[5640-5689]"
    }, {
      "left" : "componentDto.setModuleUuidPath(ComponentDto.MODULE_UUID_PATH_SEP + componentDto.uuid() + ComponentDto.MODULE_UUID_PATH_SEP);",
      "right" : "componentDto.setModuleUuidPath(ComponentDto.MODULE_UUID_PATH_SEP + componentDto.uuid() + ComponentDto.MODULE_UUID_PATH_SEP);",
      "info" : "ExpressionStatement[5560-5684]:ExpressionStatement[5696-5820]"
    }, {
      "left" : "ComponentDto projectDto = persistComponent(project.getRef(), componentDto);",
      "right" : "ComponentDto projectDto = persistComponent(project.getRef(), componentDto);",
      "info" : "VariableDeclarationStatement[5692-5767]:VariableDeclarationStatement[5828-5903]"
    }, {
      "left" : "addToCache(project, projectDto);",
      "right" : "addToCache(project, projectDto);",
      "info" : "ExpressionStatement[5774-5806]:ExpressionStatement[5910-5942]"
    }, {
      "left" : "return projectDto;",
      "right" : "return projectDto;",
      "info" : "ReturnStatement[5813-5831]:ReturnStatement[5949-5967]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5843-5849]:Modifier[5979-5985]"
    }, {
      "left" : "ComponentDto",
      "right" : "ComponentDto",
      "info" : "SimpleType[5850-5862]:SimpleType[5986-5998]"
    }, {
      "left" : "processModule",
      "right" : "processModule",
      "info" : "SimpleName[5863-5876]:SimpleName[5999-6012]"
    }, {
      "left" : "Component module",
      "right" : "Component module",
      "info" : "SingleVariableDeclaration[5877-5893]:SingleVariableDeclaration[6013-6029]"
    }, {
      "left" : "BatchReport.Component reportComponent",
      "right" : "BatchReport.Component reportComponent",
      "info" : "SingleVariableDeclaration[5895-5932]:SingleVariableDeclaration[6031-6068]"
    }, {
      "left" : "ComponentDto lastModule",
      "right" : "ComponentDto lastModule",
      "info" : "SingleVariableDeclaration[5934-5957]:SingleVariableDeclaration[6070-6093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5959-6917]:Block[6095-7053]"
    }, {
      "left" : "ComponentDto componentDto = createComponentDto(reportComponent, module);",
      "right" : "ComponentDto componentDto = createComponentDto(reportComponent, module);",
      "info" : "VariableDeclarationStatement[5967-6039]:VariableDeclarationStatement[6103-6175]"
    }, {
      "left" : "componentDto.setScope(Scopes.PROJECT);",
      "right" : "componentDto.setScope(Scopes.PROJECT);",
      "info" : "ExpressionStatement[6047-6085]:ExpressionStatement[6183-6221]"
    }, {
      "left" : "componentDto.setQualifier(Qualifiers.MODULE);",
      "right" : "componentDto.setQualifier(Qualifiers.MODULE);",
      "info" : "ExpressionStatement[6092-6137]:ExpressionStatement[6228-6273]"
    }, {
      "left" : "componentDto.setName(reportComponent.getName());",
      "right" : "componentDto.setName(reportComponent.getName());",
      "info" : "ExpressionStatement[6144-6192]:ExpressionStatement[6280-6328]"
    }, {
      "left" : "componentDto.setLongName(componentDto.name());",
      "right" : "componentDto.setLongName(componentDto.name());",
      "info" : "ExpressionStatement[6199-6245]:ExpressionStatement[6335-6381]"
    }, {
      "left" : "if (reportComponent.hasPath())",
      "right" : "if (reportComponent.hasPath())",
      "info" : "IfStatement[6252-6349]:IfStatement[6388-6485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6283-6349]:Block[6419-6485]"
    }, {
      "left" : "componentDto.setPath(reportComponent.getPath());",
      "right" : "componentDto.setPath(reportComponent.getPath());",
      "info" : "ExpressionStatement[6293-6341]:ExpressionStatement[6429-6477]"
    }, {
      "left" : "if (reportComponent.hasDescription())",
      "right" : "if (reportComponent.hasDescription())",
      "info" : "IfStatement[6356-6474]:IfStatement[6492-6610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6394-6474]:Block[6530-6610]"
    }, {
      "left" : "componentDto.setDescription(reportComponent.getDescription());",
      "right" : "componentDto.setDescription(reportComponent.getDescription());",
      "info" : "ExpressionStatement[6404-6466]:ExpressionStatement[6540-6602]"
    }, {
      "left" : "componentDto.setParentProjectId(project.getId());",
      "right" : "componentDto.setParentProjectId(project.getId());",
      "info" : "ExpressionStatement[6481-6530]:ExpressionStatement[6617-6666]"
    }, {
      "left" : "componentDto.setProjectUuid(lastModule.projectUuid());",
      "right" : "componentDto.setProjectUuid(lastModule.projectUuid());",
      "info" : "ExpressionStatement[6537-6591]:ExpressionStatement[6673-6727]"
    }, {
      "left" : "componentDto.setModuleUuid(lastModule.uuid());",
      "right" : "componentDto.setModuleUuid(lastModule.uuid());",
      "info" : "ExpressionStatement[6598-6644]:ExpressionStatement[6734-6780]"
    }, {
      "left" : "componentDto.setModuleUuidPath(lastModule.moduleUuidPath() + componentDto.uuid() + ComponentDto.MODULE_UUID_PATH_SEP);",
      "right" : "componentDto.setModuleUuidPath(lastModule.moduleUuidPath() + componentDto.uuid() + ComponentDto.MODULE_UUID_PATH_SEP);",
      "info" : "ExpressionStatement[6651-6769]:ExpressionStatement[6787-6905]"
    }, {
      "left" : "ComponentDto moduleDto = persistComponent(module.getRef(), componentDto);",
      "right" : "ComponentDto moduleDto = persistComponent(module.getRef(), componentDto);",
      "info" : "VariableDeclarationStatement[6777-6850]:VariableDeclarationStatement[6913-6986]"
    }, {
      "left" : "addToCache(module, moduleDto);",
      "right" : "addToCache(module, moduleDto);",
      "info" : "ExpressionStatement[6857-6887]:ExpressionStatement[6993-7023]"
    }, {
      "left" : "return moduleDto;",
      "right" : "return moduleDto;",
      "info" : "ReturnStatement[6894-6911]:ReturnStatement[7030-7047]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6923-6929]:Modifier[7059-7065]"
    }, {
      "left" : "ComponentDto",
      "right" : "ComponentDto",
      "info" : "SimpleType[6930-6942]:SimpleType[7066-7078]"
    }, {
      "left" : "processDirectory",
      "right" : "processDirectory",
      "info" : "SimpleName[6943-6959]:SimpleName[7079-7095]"
    }, {
      "left" : "org.sonar.server.computation.component.Component directory",
      "right" : "org.sonar.server.computation.component.Component directory",
      "info" : "SingleVariableDeclaration[6960-7018]:SingleVariableDeclaration[7096-7154]"
    }, {
      "left" : "BatchReport.Component reportComponent",
      "right" : "BatchReport.Component reportComponent",
      "info" : "SingleVariableDeclaration[7020-7057]:SingleVariableDeclaration[7156-7193]"
    }, {
      "left" : "ComponentDto lastModule",
      "right" : "ComponentDto lastModule",
      "info" : "SingleVariableDeclaration[7059-7082]:SingleVariableDeclaration[7195-7218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7084-7892]:Block[7220-8028]"
    }, {
      "left" : "ComponentDto componentDto = createComponentDto(reportComponent, directory);",
      "right" : "ComponentDto componentDto = createComponentDto(reportComponent, directory);",
      "info" : "VariableDeclarationStatement[7092-7167]:VariableDeclarationStatement[7228-7303]"
    }, {
      "left" : "componentDto.setScope(Scopes.DIRECTORY);",
      "right" : "componentDto.setScope(Scopes.DIRECTORY);",
      "info" : "ExpressionStatement[7175-7215]:ExpressionStatement[7311-7351]"
    }, {
      "left" : "componentDto.setQualifier(Qualifiers.DIRECTORY);",
      "right" : "componentDto.setQualifier(Qualifiers.DIRECTORY);",
      "info" : "ExpressionStatement[7222-7270]:ExpressionStatement[7358-7406]"
    }, {
      "left" : "componentDto.setName(reportComponent.getPath());",
      "right" : "componentDto.setName(reportComponent.getPath());",
      "info" : "ExpressionStatement[7277-7325]:ExpressionStatement[7413-7461]"
    }, {
      "left" : "componentDto.setLongName(reportComponent.getPath());",
      "right" : "componentDto.setLongName(reportComponent.getPath());",
      "info" : "ExpressionStatement[7332-7384]:ExpressionStatement[7468-7520]"
    }, {
      "left" : "if (reportComponent.hasPath())",
      "right" : "if (reportComponent.hasPath())",
      "info" : "IfStatement[7391-7488]:IfStatement[7527-7624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7422-7488]:Block[7558-7624]"
    }, {
      "left" : "componentDto.setPath(reportComponent.getPath());",
      "right" : "componentDto.setPath(reportComponent.getPath());",
      "info" : "ExpressionStatement[7432-7480]:ExpressionStatement[7568-7616]"
    }, {
      "left" : "componentDto.setParentProjectId(lastModule.getId());",
      "right" : "componentDto.setParentProjectId(lastModule.getId());",
      "info" : "ExpressionStatement[7496-7548]:ExpressionStatement[7632-7684]"
    }, {
      "left" : "componentDto.setProjectUuid(lastModule.projectUuid());",
      "right" : "componentDto.setProjectUuid(lastModule.projectUuid());",
      "info" : "ExpressionStatement[7555-7609]:ExpressionStatement[7691-7745]"
    }, {
      "left" : "componentDto.setModuleUuid(lastModule.uuid());",
      "right" : "componentDto.setModuleUuid(lastModule.uuid());",
      "info" : "ExpressionStatement[7616-7662]:ExpressionStatement[7752-7798]"
    }, {
      "left" : "componentDto.setModuleUuidPath(lastModule.moduleUuidPath());",
      "right" : "componentDto.setModuleUuidPath(lastModule.moduleUuidPath());",
      "info" : "ExpressionStatement[7669-7729]:ExpressionStatement[7805-7865]"
    }, {
      "left" : "ComponentDto directoryDto = persistComponent(directory.getRef(), componentDto);",
      "right" : "ComponentDto directoryDto = persistComponent(directory.getRef(), componentDto);",
      "info" : "VariableDeclarationStatement[7737-7816]:VariableDeclarationStatement[7873-7952]"
    }, {
      "left" : "addToCache(directory, directoryDto);",
      "right" : "addToCache(directory, directoryDto);",
      "info" : "ExpressionStatement[7823-7859]:ExpressionStatement[7959-7995]"
    }, {
      "left" : "return directoryDto;",
      "right" : "return directoryDto;",
      "info" : "ReturnStatement[7866-7886]:ReturnStatement[8002-8022]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7898-7904]:Modifier[8034-8040]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7905-7909]:PrimitiveType[8041-8045]"
    }, {
      "left" : "processFile",
      "right" : "processFile",
      "info" : "SimpleName[7910-7921]:SimpleName[8046-8057]"
    }, {
      "left" : "org.sonar.server.computation.component.Component file",
      "right" : "org.sonar.server.computation.component.Component file",
      "info" : "SingleVariableDeclaration[7922-7975]:SingleVariableDeclaration[8058-8111]"
    }, {
      "left" : "BatchReport.Component reportComponent",
      "right" : "BatchReport.Component reportComponent",
      "info" : "SingleVariableDeclaration[7977-8014]:SingleVariableDeclaration[8113-8150]"
    }, {
      "left" : "ComponentDto lastModule",
      "right" : "ComponentDto lastModule",
      "info" : "SingleVariableDeclaration[8016-8039]:SingleVariableDeclaration[8152-8175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8041-8944]:Block[8177-9080]"
    }, {
      "left" : "ComponentDto componentDto = createComponentDto(reportComponent, file);",
      "right" : "ComponentDto componentDto = createComponentDto(reportComponent, file);",
      "info" : "VariableDeclarationStatement[8049-8119]:VariableDeclarationStatement[8185-8255]"
    }, {
      "left" : "componentDto.setScope(Scopes.FILE);",
      "right" : "componentDto.setScope(Scopes.FILE);",
      "info" : "ExpressionStatement[8127-8162]:ExpressionStatement[8263-8298]"
    }, {
      "left" : "componentDto.setQualifier(getFileQualifier(reportComponent));",
      "right" : "componentDto.setQualifier(getFileQualifier(reportComponent));",
      "info" : "ExpressionStatement[8169-8230]:ExpressionStatement[8305-8366]"
    }, {
      "left" : "componentDto.setName(FilenameUtils.getName(reportComponent.getPath()));",
      "right" : "componentDto.setName(FilenameUtils.getName(reportComponent.getPath()));",
      "info" : "ExpressionStatement[8237-8308]:ExpressionStatement[8373-8444]"
    }, {
      "left" : "componentDto.setName(FilenameUtils.getName(reportComponent.getPath()))",
      "right" : "componentDto.setCreatedAt(new Date(system2.now()))",
      "info" : "MethodInvocation[8237-8307]:MethodInvocation[9519-9569]"
    }, {
      "left" : "setName",
      "right" : "setCreatedAt",
      "info" : "SimpleName[8250-8257]:SimpleName[9532-9544]"
    }, {
      "left" : "getName",
      "right" : "Date",
      "info" : "SimpleName[8272-8279]:SimpleName[9549-9553]"
    }, {
      "left" : "reportComponent",
      "right" : "system2",
      "info" : "SimpleName[8280-8295]:SimpleName[9554-9561]"
    }, {
      "left" : "reportComponent.getPath()",
      "right" : "system2.now()",
      "info" : "MethodInvocation[8280-8305]:MethodInvocation[9554-9567]"
    }, {
      "left" : "getPath",
      "right" : "now",
      "info" : "SimpleName[8296-8303]:SimpleName[9562-9565]"
    }, {
      "left" : "componentDto.setLongName(reportComponent.getPath());",
      "right" : "componentDto.setLongName(reportComponent.getPath());",
      "info" : "ExpressionStatement[8315-8367]:ExpressionStatement[8451-8503]"
    }, {
      "left" : "if (reportComponent.hasPath())",
      "right" : "if (reportComponent.hasPath())",
      "info" : "IfStatement[8374-8471]:IfStatement[8510-8607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8405-8471]:Block[8541-8607]"
    }, {
      "left" : "componentDto.setPath(reportComponent.getPath());",
      "right" : "componentDto.setPath(reportComponent.getPath());",
      "info" : "ExpressionStatement[8415-8463]:ExpressionStatement[8551-8599]"
    }, {
      "left" : "if (reportComponent.hasLanguage())",
      "right" : "if (reportComponent.hasLanguage())",
      "info" : "IfStatement[8478-8587]:IfStatement[8614-8723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8513-8587]:Block[8649-8723]"
    }, {
      "left" : "componentDto.setLanguage(reportComponent.getLanguage());",
      "right" : "componentDto.setLanguage(reportComponent.getLanguage());",
      "info" : "ExpressionStatement[8523-8579]:ExpressionStatement[8659-8715]"
    }, {
      "left" : "componentDto.setParentProjectId(lastModule.getId());",
      "right" : "componentDto.setParentProjectId(lastModule.getId());",
      "info" : "ExpressionStatement[8595-8647]:ExpressionStatement[8731-8783]"
    }, {
      "left" : "componentDto.setProjectUuid(lastModule.projectUuid());",
      "right" : "componentDto.setProjectUuid(lastModule.projectUuid());",
      "info" : "ExpressionStatement[8654-8708]:ExpressionStatement[8790-8844]"
    }, {
      "left" : "componentDto.setModuleUuid(lastModule.uuid());",
      "right" : "componentDto.setModuleUuid(lastModule.uuid());",
      "info" : "ExpressionStatement[8715-8761]:ExpressionStatement[8851-8897]"
    }, {
      "left" : "componentDto.setModuleUuidPath(lastModule.moduleUuidPath());",
      "right" : "componentDto.setModuleUuidPath(lastModule.moduleUuidPath());",
      "info" : "ExpressionStatement[8768-8828]:ExpressionStatement[8904-8964]"
    }, {
      "left" : "componentDto",
      "right" : "componentDto",
      "info" : "METHOD_INVOCATION_RECEIVER[8768-8780]:METHOD_INVOCATION_RECEIVER[9519-9531]"
    }, {
      "left" : "ComponentDto fileDto = persistComponent(file.getRef(), componentDto);",
      "right" : "ComponentDto fileDto = persistComponent(file.getRef(), componentDto);",
      "info" : "VariableDeclarationStatement[8836-8905]:VariableDeclarationStatement[8972-9041]"
    }, {
      "left" : "addToCache(file, fileDto);",
      "right" : "addToCache(file, fileDto);",
      "info" : "ExpressionStatement[8912-8938]:ExpressionStatement[9048-9074]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8950-8957]:Modifier[9609-9616]"
    }, {
      "left" : "ComponentDto",
      "right" : "ComponentDto",
      "info" : "SimpleType[8958-8970]:SimpleType[9617-9629]"
    }, {
      "left" : "persistComponent",
      "right" : "persistComponent",
      "info" : "SimpleName[8971-8987]:SimpleName[9630-9646]"
    }, {
      "left" : "int componentRef",
      "right" : "int componentRef",
      "info" : "SingleVariableDeclaration[8988-9004]:SingleVariableDeclaration[9647-9663]"
    }, {
      "left" : "ComponentDto componentDto",
      "right" : "ComponentDto componentDto",
      "info" : "SingleVariableDeclaration[9006-9031]:SingleVariableDeclaration[9665-9690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9033-9470]:Block[9692-10129]"
    }, {
      "left" : "ComponentDto existingComponent = existingComponentDtosByKey.get(componentDto.getKey());",
      "right" : "ComponentDto existingComponent = existingComponentDtosByKey.get(componentDto.getKey());",
      "info" : "VariableDeclarationStatement[9041-9128]:VariableDeclarationStatement[9700-9787]"
    }, {
      "left" : "if (existingComponent == null)",
      "right" : "if (existingComponent == null)",
      "info" : "IfStatement[9135-9464]:IfStatement[9794-10123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9166-9269]:Block[9825-9928]"
    }, {
      "left" : "dbClient.componentDao().insert(dbSession, componentDto);",
      "right" : "dbClient.componentDao().insert(dbSession, componentDto);",
      "info" : "ExpressionStatement[9176-9232]:ExpressionStatement[9835-9891]"
    }, {
      "left" : "return componentDto;",
      "right" : "return componentDto;",
      "info" : "ReturnStatement[9241-9261]:ReturnStatement[9900-9920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9275-9464]:Block[9934-10123]"
    }, {
      "left" : "if (updateComponent(existingComponent, componentDto))",
      "right" : "if (updateComponent(existingComponent, componentDto))",
      "info" : "IfStatement[9285-9422]:IfStatement[9944-10081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9339-9422]:Block[9998-10081]"
    }, {
      "left" : "dbClient.componentDao().update(dbSession, existingComponent);",
      "right" : "dbClient.componentDao().update(dbSession, existingComponent);",
      "info" : "ExpressionStatement[9351-9412]:ExpressionStatement[10010-10071]"
    }, {
      "left" : "return existingComponent;",
      "right" : "return existingComponent;",
      "info" : "ReturnStatement[9431-9456]:ReturnStatement[10090-10115]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9476-9483]:Modifier[10135-10142]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9484-9488]:PrimitiveType[10143-10147]"
    }, {
      "left" : "addToCache",
      "right" : "addToCache",
      "info" : "SimpleName[9489-9499]:SimpleName[10148-10158]"
    }, {
      "left" : "Component component",
      "right" : "Component component",
      "info" : "SingleVariableDeclaration[9500-9519]:SingleVariableDeclaration[10159-10178]"
    }, {
      "left" : "ComponentDto componentDto",
      "right" : "ComponentDto componentDto",
      "info" : "SingleVariableDeclaration[9521-9546]:SingleVariableDeclaration[10180-10205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9548-9626]:Block[10207-10285]"
    }, {
      "left" : "dbIdsRepository.setComponentId(component, componentDto.getId());",
      "right" : "dbIdsRepository.setComponentId(component, componentDto.getId());",
      "info" : "ExpressionStatement[9556-9620]:ExpressionStatement[10215-10279]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9635-9642]:Modifier[9086-9093]"
    }, {
      "left" : "ComponentDto",
      "right" : "ComponentDto",
      "info" : "SimpleType[9650-9662]:SimpleType[9094-9106]"
    }, {
      "left" : "createComponentDto",
      "right" : "createComponentDto",
      "info" : "SimpleName[9663-9681]:SimpleName[9107-9125]"
    }, {
      "left" : "BatchReport.Component reportComponent",
      "right" : "BatchReport.Component reportComponent",
      "info" : "SingleVariableDeclaration[9682-9719]:SingleVariableDeclaration[9126-9163]"
    }, {
      "left" : "Component component",
      "right" : "Component component",
      "info" : "SingleVariableDeclaration[9721-9740]:SingleVariableDeclaration[9165-9184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9742-10083]:Block[9186-9603]"
    }, {
      "left" : "String componentKey = component.getKey();",
      "right" : "String componentKey = component.getKey();",
      "info" : "VariableDeclarationStatement[9748-9789]:VariableDeclarationStatement[9194-9235]"
    }, {
      "left" : "String componentUuid = component.getUuid();",
      "right" : "String componentUuid = component.getUuid();",
      "info" : "VariableDeclarationStatement[9794-9837]:VariableDeclarationStatement[9242-9285]"
    }, {
      "left" : "ComponentDto componentDto = new ComponentDto();",
      "right" : "ComponentDto componentDto = new ComponentDto();",
      "info" : "VariableDeclarationStatement[9843-9890]:VariableDeclarationStatement[9293-9340]"
    }, {
      "left" : "componentDto.setUuid(componentUuid);",
      "right" : "componentDto.setUuid(componentUuid);",
      "info" : "ExpressionStatement[9895-9931]:ExpressionStatement[9347-9383]"
    }, {
      "left" : "componentDto.setKey(componentKey);",
      "right" : "componentDto.setKey(componentKey);",
      "info" : "ExpressionStatement[9936-9970]:ExpressionStatement[9390-9424]"
    }, {
      "left" : "componentDto.setDeprecatedKey(componentKey);",
      "right" : "componentDto.setDeprecatedKey(componentKey);",
      "info" : "ExpressionStatement[9975-10019]:ExpressionStatement[9431-9475]"
    }, {
      "left" : "componentDto.setEnabled(true);",
      "right" : "componentDto.setEnabled(true);",
      "info" : "ExpressionStatement[10024-10054]:ExpressionStatement[9482-9512]"
    }, {
      "left" : "return componentDto;",
      "right" : "return componentDto;",
      "info" : "ReturnStatement[10059-10079]:ReturnStatement[9577-9597]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10087-10094]:Modifier[10294-10301]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10095-10101]:Modifier[10302-10308]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10102-10109]:PrimitiveType[10309-10316]"
    }, {
      "left" : "updateComponent",
      "right" : "updateComponent",
      "info" : "SimpleName[10110-10125]:SimpleName[10317-10332]"
    }, {
      "left" : "ComponentDto existingComponent",
      "right" : "ComponentDto existingComponent",
      "info" : "SingleVariableDeclaration[10126-10156]:SingleVariableDeclaration[10333-10363]"
    }, {
      "left" : "ComponentDto newComponent",
      "right" : "ComponentDto newComponent",
      "info" : "SingleVariableDeclaration[10158-10183]:SingleVariableDeclaration[10365-10390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10185-11338]:Block[10392-11545]"
    }, {
      "left" : "boolean isUpdated = false;",
      "right" : "boolean isUpdated = false;",
      "info" : "VariableDeclarationStatement[10191-10217]:VariableDeclarationStatement[10398-10424]"
    }, {
      "left" : "if (!StringUtils.equals(existingComponent.name(), newComponent.name()))",
      "right" : "if (!StringUtils.equals(existingComponent.name(), newComponent.name()))",
      "info" : "IfStatement[10222-10379]:IfStatement[10429-10586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10294-10379]:Block[10501-10586]"
    }, {
      "left" : "existingComponent.setName(newComponent.name());",
      "right" : "existingComponent.setName(newComponent.name());",
      "info" : "ExpressionStatement[10302-10349]:ExpressionStatement[10509-10556]"
    }, {
      "left" : "isUpdated = true;",
      "right" : "isUpdated = true;",
      "info" : "ExpressionStatement[10356-10373]:ExpressionStatement[10563-10580]"
    }, {
      "left" : "if (!StringUtils.equals(existingComponent.description(), newComponent.description()))",
      "right" : "if (!StringUtils.equals(existingComponent.description(), newComponent.description()))",
      "info" : "IfStatement[10384-10569]:IfStatement[10591-10776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10470-10569]:Block[10677-10776]"
    }, {
      "left" : "existingComponent.setDescription(newComponent.description());",
      "right" : "existingComponent.setDescription(newComponent.description());",
      "info" : "ExpressionStatement[10478-10539]:ExpressionStatement[10685-10746]"
    }, {
      "left" : "isUpdated = true;",
      "right" : "isUpdated = true;",
      "info" : "ExpressionStatement[10546-10563]:ExpressionStatement[10753-10770]"
    }, {
      "left" : "if (!StringUtils.equals(existingComponent.path(), newComponent.path()))",
      "right" : "if (!StringUtils.equals(existingComponent.path(), newComponent.path()))",
      "info" : "IfStatement[10574-10731]:IfStatement[10781-10938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10646-10731]:Block[10853-10938]"
    }, {
      "left" : "existingComponent.setPath(newComponent.path());",
      "right" : "existingComponent.setPath(newComponent.path());",
      "info" : "ExpressionStatement[10654-10701]:ExpressionStatement[10861-10908]"
    }, {
      "left" : "isUpdated = true;",
      "right" : "isUpdated = true;",
      "info" : "ExpressionStatement[10708-10725]:ExpressionStatement[10915-10932]"
    }, {
      "left" : "if (!StringUtils.equals(existingComponent.moduleUuid(), newComponent.moduleUuid()))",
      "right" : "if (!StringUtils.equals(existingComponent.moduleUuid(), newComponent.moduleUuid()))",
      "info" : "IfStatement[10736-10917]:IfStatement[10943-11124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10820-10917]:Block[11027-11124]"
    }, {
      "left" : "existingComponent.setModuleUuid(newComponent.moduleUuid());",
      "right" : "existingComponent.setModuleUuid(newComponent.moduleUuid());",
      "info" : "ExpressionStatement[10828-10887]:ExpressionStatement[11035-11094]"
    }, {
      "left" : "isUpdated = true;",
      "right" : "isUpdated = true;",
      "info" : "ExpressionStatement[10894-10911]:ExpressionStatement[11101-11118]"
    }, {
      "left" : "if (!existingComponent.moduleUuidPath().equals(newComponent.moduleUuidPath()))",
      "right" : "if (!existingComponent.moduleUuidPath().equals(newComponent.moduleUuidPath()))",
      "info" : "IfStatement[10922-11106]:IfStatement[11129-11313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11001-11106]:Block[11208-11313]"
    }, {
      "left" : "existingComponent.setModuleUuidPath(newComponent.moduleUuidPath());",
      "right" : "existingComponent.setModuleUuidPath(newComponent.moduleUuidPath());",
      "info" : "ExpressionStatement[11009-11076]:ExpressionStatement[11216-11283]"
    }, {
      "left" : "isUpdated = true;",
      "right" : "isUpdated = true;",
      "info" : "ExpressionStatement[11083-11100]:ExpressionStatement[11290-11307]"
    }, {
      "left" : "if (!ObjectUtils.equals(existingComponent.parentProjectId(), newComponent.parentProjectId()))",
      "right" : "if (!ObjectUtils.equals(existingComponent.parentProjectId(), newComponent.parentProjectId()))",
      "info" : "IfStatement[11111-11312]:IfStatement[11318-11519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11205-11312]:Block[11412-11519]"
    }, {
      "left" : "existingComponent.setParentProjectId(newComponent.parentProjectId());",
      "right" : "existingComponent.setParentProjectId(newComponent.parentProjectId());",
      "info" : "ExpressionStatement[11213-11282]:ExpressionStatement[11420-11489]"
    }, {
      "left" : "isUpdated = true;",
      "right" : "isUpdated = true;",
      "info" : "ExpressionStatement[11289-11306]:ExpressionStatement[11496-11513]"
    }, {
      "left" : "return isUpdated;",
      "right" : "return isUpdated;",
      "info" : "ReturnStatement[11317-11334]:ReturnStatement[11524-11541]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11342-11349]:Modifier[11549-11556]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11350-11356]:Modifier[11557-11563]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11357-11363]:SimpleType[11564-11570]"
    }, {
      "left" : "getFileQualifier",
      "right" : "getFileQualifier",
      "info" : "SimpleName[11364-11380]:SimpleName[11571-11587]"
    }, {
      "left" : "BatchReport.Component reportComponent",
      "right" : "BatchReport.Component reportComponent",
      "info" : "SingleVariableDeclaration[11381-11418]:SingleVariableDeclaration[11588-11625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11420-11511]:Block[11627-11718]"
    }, {
      "left" : "return reportComponent.getIsTest() ? Qualifiers.UNIT_TEST_FILE : Qualifiers.FILE;",
      "right" : "return reportComponent.getIsTest() ? Qualifiers.UNIT_TEST_FILE : Qualifiers.FILE;",
      "info" : "ReturnStatement[11426-11507]:ReturnStatement[11633-11714]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11515-11522]:Modifier[11722-11729]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11523-11529]:Modifier[11730-11736]"
    }, {
      "left" : "Map<String, ComponentDto>",
      "right" : "Map<String, ComponentDto>",
      "info" : "ParameterizedType[11530-11555]:ParameterizedType[11737-11762]"
    }, {
      "left" : "componentDtosByKey",
      "right" : "componentDtosByKey",
      "info" : "SimpleName[11556-11574]:SimpleName[11763-11781]"
    }, {
      "left" : "List<ComponentDto> components",
      "right" : "List<ComponentDto> components",
      "info" : "SingleVariableDeclaration[11575-11604]:SingleVariableDeclaration[11782-11811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11606-11812]:Block[11813-12019]"
    }, {
      "left" : "return Maps.uniqueIndex(components, new NonNullInputFunction<ComponentDto, String>() {\n      @Override\n      public String doApply(ComponentDto input) {\n        return input.key();\n      }\n    });",
      "right" : "return Maps.uniqueIndex(components, new NonNullInputFunction<ComponentDto, String>() {\n      @Override\n      public String doApply(ComponentDto input) {\n        return input.key();\n      }\n    });",
      "info" : "ReturnStatement[11612-11808]:ReturnStatement[11819-12015]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11705-11714]:MarkerAnnotation[11912-11921]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11721-11727]:Modifier[11928-11934]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11728-11734]:SimpleType[11935-11941]"
    }, {
      "left" : "doApply",
      "right" : "doApply",
      "info" : "SimpleName[11735-11742]:SimpleName[11942-11949]"
    }, {
      "left" : "ComponentDto input",
      "right" : "ComponentDto input",
      "info" : "SingleVariableDeclaration[11743-11761]:SingleVariableDeclaration[11950-11968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11763-11800]:Block[11970-12007]"
    }, {
      "left" : "return input.key();",
      "right" : "return input.key();",
      "info" : "ReturnStatement[11773-11792]:ReturnStatement[11980-11999]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11816-11825]:MarkerAnnotation[12023-12032]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11828-11834]:Modifier[12035-12041]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11835-11841]:SimpleType[12042-12048]"
    }, {
      "left" : "getDescription",
      "right" : "getDescription",
      "info" : "SimpleName[11842-11856]:SimpleName[12049-12063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11859-11897]:Block[12066-12104]"
    }, {
      "left" : "return \"Persist components\";",
      "right" : "return \"Persist components\";",
      "info" : "ReturnStatement[11865-11893]:ReturnStatement[12072-12100]"
    } ]
  },
  "interFileMappings" : { }
}