{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "KryoWritableTest",
      "right" : "KryoWritableTest",
      "info" : "TypeDeclaration[1214-5568]:TypeDeclaration[1318-6132]"
    }, {
      "left" : "TestClassA",
      "right" : "TestClassA",
      "info" : "TypeDeclaration[1306-1722]:TypeDeclaration[1410-1826]"
    }, {
      "left" : "final String testObject;",
      "right" : "final String testObject;",
      "info" : "FieldDeclaration[1364-1388]:FieldDeclaration[1468-1492]"
    }, {
      "left" : "final List list;",
      "right" : "final List list;",
      "info" : "FieldDeclaration[1393-1409]:FieldDeclaration[1497-1513]"
    }, {
      "left" : "final int something;",
      "right" : "final int something;",
      "info" : "FieldDeclaration[1414-1434]:FieldDeclaration[1518-1538]"
    }, {
      "left" : "public TestClassA(String testObject, List list, int something)",
      "right" : "public TestClassA(String testObject, List list, int something)",
      "info" : "MethodDeclaration[1440-1604]:MethodDeclaration[1544-1708]"
    }, {
      "left" : "public TestClassA()",
      "right" : "public TestClassA()",
      "info" : "MethodDeclaration[1610-1718]:MethodDeclaration[1714-1822]"
    }, {
      "left" : "public void testTestClassA() throws Exception",
      "right" : "public void testTestClassA() throws Exception",
      "info" : "MethodDeclaration[1726-2204]:MethodDeclaration[1830-2308]"
    }, {
      "left" : "LongKryoWritable",
      "right" : "LongKryoWritable",
      "info" : "TypeDeclaration[2208-2488]:TypeDeclaration[2312-2592]"
    }, {
      "left" : "private long value;",
      "right" : "private long value;",
      "info" : "FieldDeclaration[2272-2291]:FieldDeclaration[2376-2395]"
    }, {
      "left" : "public LongKryoWritable(long value)",
      "right" : "public LongKryoWritable(long value)",
      "info" : "MethodDeclaration[2297-2366]:MethodDeclaration[2401-2470]"
    }, {
      "left" : "public long get()",
      "right" : "public long get()",
      "info" : "MethodDeclaration[2372-2417]:MethodDeclaration[2476-2521]"
    }, {
      "left" : "public void set(long value)",
      "right" : "public void set(long value)",
      "info" : "MethodDeclaration[2423-2484]:MethodDeclaration[2527-2588]"
    }, {
      "left" : "int multiplier = 5000;",
      "right" : "int multiplier = 5000;",
      "info" : "FieldDeclaration[2493-2515]:FieldDeclaration[2597-2619]"
    }, {
      "left" : "int longTestTimes = 1000 * multiplier;",
      "right" : "int longTestTimes = 1000 * multiplier;",
      "info" : "FieldDeclaration[2544-2582]:FieldDeclaration[2648-2686]"
    }, {
      "left" : "public void testLongKryoWritable() throws Exception",
      "right" : "public void testLongKryoWritable() throws Exception",
      "info" : "MethodDeclaration[2586-2906]:MethodDeclaration[2690-3010]"
    }, {
      "left" : "public void testLongWritable() throws Exception",
      "right" : "public void testLongWritable() throws Exception",
      "info" : "MethodDeclaration[2910-3210]:MethodDeclaration[3014-3314]"
    }, {
      "left" : "LongListKryoWritable",
      "right" : "LongListKryoWritable",
      "info" : "TypeDeclaration[3214-3401]:TypeDeclaration[3318-3505]"
    }, {
      "left" : "public LongArrayList value;",
      "right" : "public LongArrayList value;",
      "info" : "FieldDeclaration[3282-3309]:FieldDeclaration[3386-3413]"
    }, {
      "left" : "public LongListKryoWritable(LongArrayList value)",
      "right" : "public LongListKryoWritable(LongArrayList value)",
      "info" : "MethodDeclaration[3315-3397]:MethodDeclaration[3419-3501]"
    }, {
      "left" : "int longListTestTimes = 1 * multiplier;",
      "right" : "int longListTestTimes = 1 * multiplier;",
      "info" : "FieldDeclaration[3405-3444]:FieldDeclaration[3509-3548]"
    }, {
      "left" : "int longListTestSize = 100000;",
      "right" : "int longListTestSize = 100000;",
      "info" : "FieldDeclaration[3447-3477]:FieldDeclaration[3551-3581]"
    }, {
      "left" : "public void testLongListKryoWritable() throws Exception",
      "right" : "public void testLongListKryoWritable() throws Exception",
      "info" : "MethodDeclaration[3481-3969]:MethodDeclaration[3585-4073]"
    }, {
      "left" : "public void testLongListWritable() throws Exception",
      "right" : "public void testLongListWritable() throws Exception",
      "info" : "MethodDeclaration[3973-4496]:MethodDeclaration[4077-4600]"
    }, {
      "left" : "NestedKryoWritable",
      "right" : "NestedKryoWritable",
      "info" : "TypeDeclaration[4500-4755]:TypeDeclaration[4604-4859]"
    }, {
      "left" : "public LongKryoWritable value1;",
      "right" : "public LongKryoWritable value1;",
      "info" : "FieldDeclaration[4569-4600]:FieldDeclaration[4673-4704]"
    }, {
      "left" : "public T value2;",
      "right" : "public T value2;",
      "info" : "FieldDeclaration[4605-4621]:FieldDeclaration[4709-4725]"
    }, {
      "left" : "public NestedKryoWritable(LongKryoWritable value1, T value2)",
      "right" : "public NestedKryoWritable(LongKryoWritable value1, T value2)",
      "info" : "MethodDeclaration[4627-4751]:MethodDeclaration[4731-4855]"
    }, {
      "left" : "public void testNestedKryoWritable() throws Exception",
      "right" : "public void testNestedKryoWritable() throws Exception",
      "info" : "MethodDeclaration[4759-5142]:MethodDeclaration[4863-5246]"
    }, {
      "left" : "public void testRecursiveKryoWritable() throws Exception",
      "right" : "public void testRecursiveKryoWritable() throws Exception",
      "info" : "MethodDeclaration[5146-5566]:MethodDeclaration[5250-5670]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1272-1278]:Modifier[1376-1382]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1279-1284]:TYPE_DECLARATION_KIND[1383-1388]"
    }, {
      "left" : "KryoWritableTest",
      "right" : "KryoWritableTest",
      "info" : "SimpleName[1285-1301]:SimpleName[1389-1405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1306-1312]:Modifier[1410-1416]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1313-1319]:Modifier[1417-1423]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1320-1325]:TYPE_DECLARATION_KIND[1424-1429]"
    }, {
      "left" : "TestClassA",
      "right" : "TestClassA",
      "info" : "SimpleName[1326-1336]:SimpleName[1430-1440]"
    }, {
      "left" : "KryoWritable",
      "right" : "KryoWritable",
      "info" : "SimpleType[1345-1357]:SimpleType[1449-1461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1440-1446]:Modifier[1544-1550]"
    }, {
      "left" : "TestClassA",
      "right" : "TestClassA",
      "info" : "SimpleName[1447-1457]:SimpleName[1551-1561]"
    }, {
      "left" : "String testObject",
      "right" : "String testObject",
      "info" : "SingleVariableDeclaration[1458-1475]:SingleVariableDeclaration[1562-1579]"
    }, {
      "left" : "List list",
      "right" : "List list",
      "info" : "SingleVariableDeclaration[1477-1486]:SingleVariableDeclaration[1581-1590]"
    }, {
      "left" : "int something",
      "right" : "int something",
      "info" : "SingleVariableDeclaration[1488-1501]:SingleVariableDeclaration[1592-1605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1503-1604]:Block[1607-1708]"
    }, {
      "left" : "this.testObject = testObject;",
      "right" : "this.testObject = testObject;",
      "info" : "ExpressionStatement[1511-1540]:ExpressionStatement[1615-1644]"
    }, {
      "left" : "this.list = list;",
      "right" : "this.list = list;",
      "info" : "ExpressionStatement[1547-1564]:ExpressionStatement[1651-1668]"
    }, {
      "left" : "this.something = something;",
      "right" : "this.something = something;",
      "info" : "ExpressionStatement[1571-1598]:ExpressionStatement[1675-1702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1610-1616]:Modifier[1714-1720]"
    }, {
      "left" : "TestClassA",
      "right" : "TestClassA",
      "info" : "SimpleName[1617-1627]:SimpleName[1721-1731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1630-1718]:Block[1734-1822]"
    }, {
      "left" : "this.testObject = null;",
      "right" : "this.testObject = null;",
      "info" : "ExpressionStatement[1638-1661]:ExpressionStatement[1742-1765]"
    }, {
      "left" : "this.list = null;",
      "right" : "this.list = null;",
      "info" : "ExpressionStatement[1668-1685]:ExpressionStatement[1772-1789]"
    }, {
      "left" : "this.something = -1;",
      "right" : "this.something = -1;",
      "info" : "ExpressionStatement[1692-1712]:ExpressionStatement[1796-1816]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[1726-1731]:MarkerAnnotation[1830-1835]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1734-1740]:Modifier[1838-1844]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1734-1740]:Modifier[5682-5688]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1741-1745]:PrimitiveType[1845-1849]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1741-1745]:PrimitiveType[5689-5693]"
    }, {
      "left" : "testTestClassA",
      "right" : "testTestClassA",
      "info" : "SimpleName[1746-1760]:SimpleName[1850-1864]"
    }, {
      "left" : "testTestClassA",
      "right" : "testKryoImmutableMap",
      "info" : "SimpleName[1746-1760]:SimpleName[5694-5714]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1770-1779]:SimpleType[1874-1883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1780-2204]:Block[1884-2308]"
    }, {
      "left" : "String testObject = \"Hello World!\";",
      "right" : "String testObject = \"Hello World!\";",
      "info" : "VariableDeclarationStatement[1786-1821]:VariableDeclarationStatement[1890-1925]"
    }, {
      "left" : "TestClassA res = new TestClassA();",
      "right" : "TestClassA res = new TestClassA();",
      "info" : "VariableDeclarationStatement[1826-1860]:VariableDeclarationStatement[1930-1964]"
    }, {
      "left" : "TestClassA",
      "right" : "Long2IntOpenHashMap",
      "info" : "SimpleName[1826-1836]:SimpleName[5740-5759]"
    }, {
      "left" : "TestClassA res = new TestClassA();",
      "right" : "Long2IntOpenHashMap map = new Long2IntOpenHashMap();",
      "info" : "VariableDeclarationStatement[1826-1860]:VariableDeclarationStatement[5740-5792]"
    }, {
      "left" : "res",
      "right" : "map",
      "info" : "SimpleName[1837-1840]:SimpleName[5760-5763]"
    }, {
      "left" : "TestClassA",
      "right" : "Long2IntOpenHashMap",
      "info" : "SimpleName[1847-1857]:SimpleName[5770-5789]"
    }, {
      "left" : "WritableUtils.copyInto(\n        new TestClassA(testObject, Arrays.asList(1, 2, 3), 5), res, true);",
      "right" : "WritableUtils.copyInto(\n        new TestClassA(testObject, Arrays.asList(1, 2, 3), 5), res, true);",
      "info" : "ExpressionStatement[1865-1963]:ExpressionStatement[1969-2067]"
    }, {
      "left" : "WritableUtils.copyInto(\n        new TestClassA(testObject, Arrays.asList(1, 2, 3), 5), res, true);",
      "right" : "map.put(1, 2);",
      "info" : "ExpressionStatement[1865-1963]:ExpressionStatement[5797-5811]"
    }, {
      "left" : "WritableUtils",
      "right" : "WritableUtils",
      "info" : "METHOD_INVOCATION_RECEIVER[1865-1878]:METHOD_INVOCATION_RECEIVER[5880-5893]"
    }, {
      "left" : "Arrays",
      "right" : "map",
      "info" : "SimpleName[1924-1930]:SimpleName[5797-5800]"
    }, {
      "left" : "Arrays.asList(1, 2, 3)",
      "right" : "map.put(1, 2)",
      "info" : "MethodInvocation[1924-1946]:MethodInvocation[5797-5810]"
    }, {
      "left" : "asList",
      "right" : "put",
      "info" : "SimpleName[1931-1937]:SimpleName[5801-5804]"
    }, {
      "left" : "assertEquals(testObject, res.testObject);",
      "right" : "assertEquals(testObject, res.testObject);",
      "info" : "ExpressionStatement[1969-2010]:ExpressionStatement[2073-2114]"
    }, {
      "left" : "assertEquals(3, res.list.size());",
      "right" : "assertEquals(3, res.list.size());",
      "info" : "ExpressionStatement[2016-2049]:ExpressionStatement[2120-2153]"
    }, {
      "left" : "assertEquals(1, res.list.get(0));",
      "right" : "assertEquals(1, res.list.get(0));",
      "info" : "ExpressionStatement[2054-2087]:ExpressionStatement[2158-2191]"
    }, {
      "left" : "assertEquals",
      "right" : "map",
      "info" : "SimpleName[2054-2066]:SimpleName[5816-5819]"
    }, {
      "left" : "assertEquals(1, res.list.get(0));",
      "right" : "map.put(10, 20);",
      "info" : "ExpressionStatement[2054-2087]:ExpressionStatement[5816-5832]"
    }, {
      "left" : "1",
      "right" : "10",
      "info" : "NumberLiteral[2067-2068]:NumberLiteral[5824-5826]"
    }, {
      "left" : "0",
      "right" : "20",
      "info" : "NumberLiteral[2083-2084]:NumberLiteral[5828-5830]"
    }, {
      "left" : "assertEquals(2, res.list.get(1));",
      "right" : "assertEquals(2, res.list.get(1));",
      "info" : "ExpressionStatement[2092-2125]:ExpressionStatement[2196-2229]"
    }, {
      "left" : "assertEquals(3, res.list.get(2));",
      "right" : "assertEquals(3, res.list.get(2));",
      "info" : "ExpressionStatement[2130-2163]:ExpressionStatement[2234-2267]"
    }, {
      "left" : "assertEquals(5, res.something);",
      "right" : "assertEquals(5, res.something);",
      "info" : "ExpressionStatement[2169-2200]:ExpressionStatement[2273-2304]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2208-2214]:Modifier[2312-2318]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2215-2221]:Modifier[2319-2325]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2222-2227]:TYPE_DECLARATION_KIND[2326-2331]"
    }, {
      "left" : "LongKryoWritable",
      "right" : "LongKryoWritable",
      "info" : "SimpleName[2228-2244]:SimpleName[2332-2348]"
    }, {
      "left" : "KryoWritable",
      "right" : "KryoWritable",
      "info" : "SimpleType[2253-2265]:SimpleType[2357-2369]"
    }, {
      "left" : "KryoWritable",
      "right" : "ImmutableMap",
      "info" : "SimpleName[2253-2265]:SimpleName[5837-5849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2297-2303]:Modifier[2401-2407]"
    }, {
      "left" : "LongKryoWritable",
      "right" : "LongKryoWritable",
      "info" : "SimpleName[2304-2320]:SimpleName[2408-2424]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[2321-2331]:SingleVariableDeclaration[2425-2435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2333-2366]:Block[2437-2470]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[2341-2360]:ExpressionStatement[2445-2464]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2372-2378]:Modifier[2476-2482]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[2379-2383]:PrimitiveType[2483-2487]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[2384-2387]:SimpleName[2488-2491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2390-2417]:Block[2494-2521]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[2398-2411]:ReturnStatement[2502-2515]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2423-2429]:Modifier[2527-2533]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2430-2434]:PrimitiveType[2534-2538]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[2435-2438]:SimpleName[2539-2542]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[2439-2449]:SingleVariableDeclaration[2543-2553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2451-2484]:Block[2555-2588]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[2459-2478]:ExpressionStatement[2563-2582]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[2586-2591]:MarkerAnnotation[2690-2695]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2594-2600]:Modifier[2698-2704]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2601-2605]:PrimitiveType[2705-2709]"
    }, {
      "left" : "testLongKryoWritable",
      "right" : "testLongKryoWritable",
      "info" : "SimpleName[2606-2626]:SimpleName[2710-2730]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2636-2645]:SimpleType[2740-2749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2646-2906]:Block[2750-3010]"
    }, {
      "left" : "LongKryoWritable from = new LongKryoWritable(0);",
      "right" : "LongKryoWritable from = new LongKryoWritable(0);",
      "info" : "VariableDeclarationStatement[2652-2700]:VariableDeclarationStatement[2756-2804]"
    }, {
      "left" : "LongKryoWritable",
      "right" : "Long",
      "info" : "SimpleName[2652-2668]:SimpleName[5850-5854]"
    }, {
      "left" : "LongKryoWritable",
      "right" : "Integer",
      "info" : "SimpleName[2680-2696]:SimpleName[5856-5863]"
    }, {
      "left" : "LongKryoWritable to = new LongKryoWritable(0);",
      "right" : "LongKryoWritable to = new LongKryoWritable(0);",
      "info" : "VariableDeclarationStatement[2705-2751]:VariableDeclarationStatement[2809-2855]"
    }, {
      "left" : "LongKryoWritable",
      "right" : "copy",
      "info" : "SimpleName[2705-2721]:SimpleName[5865-5869]"
    }, {
      "left" : "for (int i = 0; i < longTestTimes; i++)",
      "right" : "for (int i = 0; i < longTestTimes; i++)",
      "info" : "ForStatement[2757-2902]:ForStatement[2861-3006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2797-2902]:Block[2901-3006]"
    }, {
      "left" : "from.set(i);",
      "right" : "from.set(i);",
      "info" : "ExpressionStatement[2805-2817]:ExpressionStatement[2909-2921]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[2824-2863]:ExpressionStatement[2928-2967]"
    }, {
      "left" : "copyInto",
      "right" : "createCopy",
      "info" : "SimpleName[2838-2846]:SimpleName[5894-5904]"
    }, {
      "left" : "assertEquals(i, to.get());",
      "right" : "assertEquals(i, to.get());",
      "info" : "ExpressionStatement[2870-2896]:ExpressionStatement[2974-3000]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[2910-2915]:MarkerAnnotation[3014-3019]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2918-2924]:Modifier[3022-3028]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2925-2929]:PrimitiveType[3029-3033]"
    }, {
      "left" : "testLongWritable",
      "right" : "testLongWritable",
      "info" : "SimpleName[2930-2946]:SimpleName[3034-3050]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2956-2965]:SimpleType[3060-3069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2966-3210]:Block[3070-3314]"
    }, {
      "left" : "LongWritable from = new LongWritable(0);",
      "right" : "LongWritable from = new LongWritable(0);",
      "info" : "VariableDeclarationStatement[2972-3012]:VariableDeclarationStatement[3076-3116]"
    }, {
      "left" : "LongWritable",
      "right" : "KryoWritableWrapper",
      "info" : "SimpleType[2972-2984]:SimpleType[5922-5941]"
    }, {
      "left" : "LongWritable to = new LongWritable(0);",
      "right" : "LongWritable to = new LongWritable(0);",
      "info" : "VariableDeclarationStatement[3017-3055]:VariableDeclarationStatement[3121-3159]"
    }, {
      "left" : "for (int i = 0; i < longTestTimes; i++)",
      "right" : "for (int i = 0; i < longTestTimes; i++)",
      "info" : "ForStatement[3061-3206]:ForStatement[3165-3310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3101-3206]:Block[3205-3310]"
    }, {
      "left" : "from.set(i);",
      "right" : "from.set(i);",
      "info" : "ExpressionStatement[3109-3121]:ExpressionStatement[3213-3225]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[3128-3167]:ExpressionStatement[3232-3271]"
    }, {
      "left" : "WritableUtils",
      "right" : "ImmutableMap",
      "info" : "SimpleName[3128-3141]:SimpleName[5944-5956]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true)",
      "right" : "ImmutableMap.copyOf(map)",
      "info" : "MethodInvocation[3128-3166]:MethodInvocation[5944-5968]"
    }, {
      "left" : "copyInto",
      "right" : "copyOf",
      "info" : "SimpleName[3142-3150]:SimpleName[5957-5963]"
    }, {
      "left" : "from",
      "right" : "map",
      "info" : "SimpleName[3151-3155]:SimpleName[5964-5967]"
    }, {
      "left" : "assertEquals(i, to.get());",
      "right" : "assertEquals(i, to.get());",
      "info" : "ExpressionStatement[3174-3200]:ExpressionStatement[3278-3304]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[3193-3196]:SimpleName[5971-5974]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3214-3220]:Modifier[3318-3324]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3221-3227]:Modifier[3325-3331]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3228-3233]:TYPE_DECLARATION_KIND[3332-3337]"
    }, {
      "left" : "LongListKryoWritable",
      "right" : "LongListKryoWritable",
      "info" : "SimpleName[3234-3254]:SimpleName[3338-3358]"
    }, {
      "left" : "KryoWritable",
      "right" : "KryoWritable",
      "info" : "SimpleType[3263-3275]:SimpleType[3367-3379]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3315-3321]:Modifier[3419-3425]"
    }, {
      "left" : "LongListKryoWritable",
      "right" : "LongListKryoWritable",
      "info" : "SimpleName[3322-3342]:SimpleName[3426-3446]"
    }, {
      "left" : "LongArrayList value",
      "right" : "LongArrayList value",
      "info" : "SingleVariableDeclaration[3343-3362]:SingleVariableDeclaration[3447-3466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3364-3397]:Block[3468-3501]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[3372-3391]:ExpressionStatement[3476-3495]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[3481-3486]:MarkerAnnotation[3585-3590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3489-3495]:Modifier[3593-3599]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3496-3500]:PrimitiveType[3600-3604]"
    }, {
      "left" : "testLongListKryoWritable",
      "right" : "testLongListKryoWritable",
      "info" : "SimpleName[3501-3525]:SimpleName[3605-3629]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[3535-3544]:SimpleType[3639-3648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3545-3969]:Block[3649-4073]"
    }, {
      "left" : "LongArrayList list = new LongArrayList(longListTestSize);",
      "right" : "LongArrayList list = new LongArrayList(longListTestSize);",
      "info" : "VariableDeclarationStatement[3551-3608]:VariableDeclarationStatement[3655-3712]"
    }, {
      "left" : "for (int i = 0; i < longListTestSize; i++)",
      "right" : "for (int i = 0; i < longListTestSize; i++)",
      "info" : "ForStatement[3613-3682]:ForStatement[3717-3786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3656-3682]:Block[3760-3786]"
    }, {
      "left" : "list.add(i);",
      "right" : "list.add(i);",
      "info" : "ExpressionStatement[3664-3676]:ExpressionStatement[3768-3780]"
    }, {
      "left" : "list",
      "right" : "Assert",
      "info" : "METHOD_INVOCATION_RECEIVER[3664-3668]:METHOD_INVOCATION_RECEIVER[5982-5988]"
    }, {
      "left" : "add",
      "right" : "assertEquals",
      "info" : "SimpleName[3669-3672]:SimpleName[5989-6001]"
    }, {
      "left" : "LongListKryoWritable from = new LongListKryoWritable(list);",
      "right" : "LongListKryoWritable from = new LongListKryoWritable(list);",
      "info" : "VariableDeclarationStatement[3688-3747]:VariableDeclarationStatement[3792-3851]"
    }, {
      "left" : "LongListKryoWritable to = new LongListKryoWritable(null);",
      "right" : "LongListKryoWritable to = new LongListKryoWritable(null);",
      "info" : "VariableDeclarationStatement[3752-3809]:VariableDeclarationStatement[3856-3913]"
    }, {
      "left" : "for (int i = 0; i < longListTestTimes; i++)",
      "right" : "for (int i = 0; i < longListTestTimes; i++)",
      "info" : "ForStatement[3815-3965]:ForStatement[3919-4069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3859-3965]:Block[3963-4069]"
    }, {
      "left" : "from.value.set((2 * i) % longListTestSize, 0);",
      "right" : "from.value.set((2 * i) % longListTestSize, 0);",
      "info" : "ExpressionStatement[3867-3913]:ExpressionStatement[3971-4017]"
    }, {
      "left" : "2",
      "right" : "2",
      "info" : "NumberLiteral[3883-3884]:NumberLiteral[6002-6003]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[3920-3959]:ExpressionStatement[4024-4063]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[3973-3978]:MarkerAnnotation[4077-4082]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3981-3987]:Modifier[4085-4091]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3988-3992]:PrimitiveType[4092-4096]"
    }, {
      "left" : "testLongListWritable",
      "right" : "testLongListWritable",
      "info" : "SimpleName[3993-4013]:SimpleName[4097-4117]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4023-4032]:SimpleType[4127-4136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4033-4496]:Block[4137-4600]"
    }, {
      "left" : "BasicLongArrayList from = new BasicLongArrayList(longListTestSize);",
      "right" : "BasicLongArrayList from = new BasicLongArrayList(longListTestSize);",
      "info" : "VariableDeclarationStatement[4039-4106]:VariableDeclarationStatement[4143-4210]"
    }, {
      "left" : "LongWritable value = new LongWritable();",
      "right" : "LongWritable value = new LongWritable();",
      "info" : "VariableDeclarationStatement[4111-4151]:VariableDeclarationStatement[4215-4255]"
    }, {
      "left" : "for (int i = 0; i < longListTestSize; i++)",
      "right" : "for (int i = 0; i < longListTestSize; i++)",
      "info" : "ForStatement[4156-4249]:ForStatement[4260-4353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4199-4249]:Block[4303-4353]"
    }, {
      "left" : "value.set(i);",
      "right" : "value.set(i);",
      "info" : "ExpressionStatement[4207-4220]:ExpressionStatement[4311-4324]"
    }, {
      "left" : "value",
      "right" : "copy",
      "info" : "SimpleName[4207-4212]:SimpleName[6005-6009]"
    }, {
      "left" : "value.set(i)",
      "right" : "copy.size()",
      "info" : "MethodInvocation[4207-4219]:MethodInvocation[6005-6016]"
    }, {
      "left" : "set",
      "right" : "size",
      "info" : "SimpleName[4213-4216]:SimpleName[6010-6014]"
    }, {
      "left" : "from.add(value);",
      "right" : "from.add(value);",
      "info" : "ExpressionStatement[4227-4243]:ExpressionStatement[4331-4347]"
    }, {
      "left" : "add",
      "right" : "assertEquals",
      "info" : "SimpleName[4232-4235]:SimpleName[6030-6042]"
    }, {
      "left" : "BasicLongArrayList to = new BasicLongArrayList(longListTestSize);",
      "right" : "BasicLongArrayList to = new BasicLongArrayList(longListTestSize);",
      "info" : "VariableDeclarationStatement[4255-4320]:VariableDeclarationStatement[4359-4424]"
    }, {
      "left" : "value.set(0);",
      "right" : "value.set(0);",
      "info" : "ExpressionStatement[4325-4338]:ExpressionStatement[4429-4442]"
    }, {
      "left" : "0",
      "right" : "2",
      "info" : "NumberLiteral[4335-4336]:NumberLiteral[6043-6044]"
    }, {
      "left" : "for (int i = 0; i < longListTestTimes; i++)",
      "right" : "for (int i = 0; i < longListTestTimes; i++)",
      "info" : "ForStatement[4344-4492]:ForStatement[4448-4596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4388-4492]:Block[4492-4596]"
    }, {
      "left" : "from.set((2 * i) % longListTestSize, value);",
      "right" : "from.set((2 * i) % longListTestSize, value);",
      "info" : "ExpressionStatement[4396-4440]:ExpressionStatement[4500-4544]"
    }, {
      "left" : "from",
      "right" : "copy",
      "info" : "SimpleName[4396-4400]:SimpleName[6046-6050]"
    }, {
      "left" : "from.set((2 * i) % longListTestSize, value)",
      "right" : "copy.get(1L)",
      "info" : "MethodInvocation[4396-4439]:MethodInvocation[6046-6058]"
    }, {
      "left" : "set",
      "right" : "get",
      "info" : "SimpleName[4401-4404]:SimpleName[6051-6054]"
    }, {
      "left" : "2",
      "right" : "1L",
      "info" : "NumberLiteral[4406-4407]:NumberLiteral[6055-6057]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[4447-4486]:ExpressionStatement[4551-4590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4500-4506]:Modifier[4604-4610]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4507-4513]:Modifier[4611-4617]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[4514-4519]:TYPE_DECLARATION_KIND[4618-4623]"
    }, {
      "left" : "NestedKryoWritable",
      "right" : "NestedKryoWritable",
      "info" : "SimpleName[4520-4538]:SimpleName[4624-4642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4627-4633]:Modifier[4731-4737]"
    }, {
      "left" : "NestedKryoWritable",
      "right" : "NestedKryoWritable",
      "info" : "SimpleName[4634-4652]:SimpleName[4738-4756]"
    }, {
      "left" : "LongKryoWritable value1",
      "right" : "LongKryoWritable value1",
      "info" : "SingleVariableDeclaration[4653-4676]:SingleVariableDeclaration[4757-4780]"
    }, {
      "left" : "T value2",
      "right" : "T value2",
      "info" : "SingleVariableDeclaration[4678-4686]:SingleVariableDeclaration[4782-4790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4688-4751]:Block[4792-4855]"
    }, {
      "left" : "this.value1 = value1;",
      "right" : "this.value1 = value1;",
      "info" : "ExpressionStatement[4696-4717]:ExpressionStatement[4800-4821]"
    }, {
      "left" : "this.value2 = value2;",
      "right" : "this.value2 = value2;",
      "info" : "ExpressionStatement[4724-4745]:ExpressionStatement[4828-4849]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[4759-4764]:MarkerAnnotation[4863-4868]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4767-4773]:Modifier[4871-4877]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4774-4778]:PrimitiveType[4878-4882]"
    }, {
      "left" : "testNestedKryoWritable",
      "right" : "testNestedKryoWritable",
      "info" : "SimpleName[4779-4801]:SimpleName[4883-4905]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4811-4820]:SimpleType[4915-4924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4821-5142]:Block[4925-5246]"
    }, {
      "left" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "right" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "info" : "VariableDeclarationStatement[4827-4876]:VariableDeclarationStatement[4931-4980]"
    }, {
      "left" : "inner",
      "right" : "intValue",
      "info" : "SimpleName[4844-4849]:SimpleName[6059-6067]"
    }, {
      "left" : "NestedKryoWritable<LongKryoWritable> res = new NestedKryoWritable<>(null, null);",
      "right" : "NestedKryoWritable<LongKryoWritable> res = new NestedKryoWritable<>(null, null);",
      "info" : "VariableDeclarationStatement[4881-4961]:VariableDeclarationStatement[4985-5065]"
    }, {
      "left" : "WritableUtils.copyInto(\n        new NestedKryoWritable<>(inner, inner), res, true);",
      "right" : "WritableUtils.copyInto(\n        new NestedKryoWritable<>(inner, inner), res, true);",
      "info" : "ExpressionStatement[4966-5049]:ExpressionStatement[5070-5153]"
    }, {
      "left" : "assertEquals(5, res.value1.get());",
      "right" : "assertEquals(5, res.value1.get());",
      "info" : "ExpressionStatement[5055-5089]:ExpressionStatement[5159-5193]"
    }, {
      "left" : "Assert.assertTrue(res.value1 == res.value2);",
      "right" : "Assert.assertTrue(res.value1 == res.value2);",
      "info" : "ExpressionStatement[5094-5138]:ExpressionStatement[5198-5242]"
    }, {
      "left" : "Assert",
      "right" : "Assert",
      "info" : "METHOD_INVOCATION_RECEIVER[5094-5100]:METHOD_INVOCATION_RECEIVER[6023-6029]"
    }, {
      "left" : "assertTrue",
      "right" : "assertEquals",
      "info" : "SimpleName[5101-5111]:SimpleName[6083-6095]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[5146-5151]:MarkerAnnotation[5250-5255]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[5146-5151]:MarkerAnnotation[5674-5679]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5154-5160]:Modifier[5258-5264]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5161-5165]:PrimitiveType[5265-5269]"
    }, {
      "left" : "testRecursiveKryoWritable",
      "right" : "testRecursiveKryoWritable",
      "info" : "SimpleName[5166-5191]:SimpleName[5270-5295]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[5201-5210]:SimpleType[5305-5314]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[5201-5210]:SimpleType[5724-5733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5211-5566]:Block[5315-5670]"
    }, {
      "left" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "right" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "info" : "VariableDeclarationStatement[5217-5266]:VariableDeclarationStatement[5321-5370]"
    }, {
      "left" : "5",
      "right" : "20",
      "info" : "NumberLiteral[5263-5264]:NumberLiteral[6096-6098]"
    }, {
      "left" : "NestedKryoWritable wanted = new NestedKryoWritable<>(inner, null);",
      "right" : "NestedKryoWritable wanted = new NestedKryoWritable<>(inner, null);",
      "info" : "VariableDeclarationStatement[5271-5337]:VariableDeclarationStatement[5375-5441]"
    }, {
      "left" : "wanted.value2 = wanted;",
      "right" : "wanted.value2 = wanted;",
      "info" : "ExpressionStatement[5342-5365]:ExpressionStatement[5446-5469]"
    }, {
      "left" : "NestedKryoWritable res = new NestedKryoWritable<>(null, null);",
      "right" : "NestedKryoWritable res = new NestedKryoWritable<>(null, null);",
      "info" : "VariableDeclarationStatement[5371-5433]:VariableDeclarationStatement[5475-5537]"
    }, {
      "left" : "WritableUtils.copyInto(wanted, res, true);",
      "right" : "WritableUtils.copyInto(wanted, res, true);",
      "info" : "ExpressionStatement[5438-5480]:ExpressionStatement[5542-5584]"
    }, {
      "left" : "WritableUtils",
      "right" : "copy",
      "info" : "SimpleName[5438-5451]:SimpleName[6100-6104]"
    }, {
      "left" : "WritableUtils.copyInto(wanted, res, true)",
      "right" : "copy.get(10L)",
      "info" : "MethodInvocation[5438-5479]:MethodInvocation[6100-6113]"
    }, {
      "left" : "copyInto",
      "right" : "get",
      "info" : "SimpleName[5452-5460]:SimpleName[6105-6108]"
    }, {
      "left" : "assertEquals(5, res.value1.get());",
      "right" : "assertEquals(5, res.value1.get());",
      "info" : "ExpressionStatement[5486-5520]:ExpressionStatement[5590-5624]"
    }, {
      "left" : "Assert.assertTrue(res == res.value2);",
      "right" : "Assert.assertTrue(res == res.value2);",
      "info" : "ExpressionStatement[5525-5562]:ExpressionStatement[5629-5666]"
    }, {
      "left" : "Assert",
      "right" : "Assert",
      "info" : "METHOD_INVOCATION_RECEIVER[5525-5531]:METHOD_INVOCATION_RECEIVER[6076-6082]"
    }, {
      "left" : "assertTrue",
      "right" : "intValue",
      "info" : "SimpleName[5532-5542]:SimpleName[6114-6122]"
    } ]
  },
  "interFileMappings" : { }
}