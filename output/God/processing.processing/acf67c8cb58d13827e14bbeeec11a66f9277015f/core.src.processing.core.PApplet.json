{
  "matchedElements" : [ {
    "left" : "class : PApplet",
    "right" : "class : PApplet",
    "info" : "TypeDeclaration[2034-495686]:TypeDeclaration[2034-495716]"
  }, {
    "left" : "javaVersionName",
    "right" : "javaVersionName",
    "info" : "FieldDeclaration[3936-4076]:FieldDeclaration[3936-4076]"
  }, {
    "left" : "javaPlatform",
    "right" : "javaPlatform",
    "info" : "FieldDeclaration[4416-4516]:FieldDeclaration[4416-4516]"
  }, {
    "left" : "javaVersion",
    "right" : "javaVersion",
    "info" : "FieldDeclaration[4706-5578]:FieldDeclaration[4706-5578]"
  }, {
    "left" : "platform",
    "right" : "platform",
    "info" : "FieldDeclaration[5848-5985]:FieldDeclaration[5848-5985]"
  }, {
    "left" : "useNativeSelect",
    "right" : "useNativeSelect",
    "info" : "FieldDeclaration[6332-6742]:FieldDeclaration[6332-6742]"
  }, {
    "left" : "g",
    "right" : "g",
    "info" : "FieldDeclaration[6746-6826]:FieldDeclaration[6746-6826]"
  }, {
    "left" : "displayWidth",
    "right" : "displayWidth",
    "info" : "FieldDeclaration[6830-7546]:FieldDeclaration[6830-7546]"
  }, {
    "left" : "displayHeight",
    "right" : "displayHeight",
    "info" : "FieldDeclaration[7550-8268]:FieldDeclaration[7550-8268]"
  }, {
    "left" : "recorder",
    "right" : "recorder",
    "info" : "FieldDeclaration[8272-8359]:FieldDeclaration[8272-8359]"
  }, {
    "left" : "args",
    "right" : "args",
    "info" : "FieldDeclaration[8363-8538]:FieldDeclaration[8363-8538]"
  }, {
    "left" : "sketchPath",
    "right" : "sketchPath",
    "info" : "FieldDeclaration[8542-8777]:FieldDeclaration[8542-8777]"
  }, {
    "left" : "DEBUG",
    "right" : "DEBUG",
    "info" : "FieldDeclaration[8811-8846]:FieldDeclaration[8811-8846]"
  }, {
    "left" : "DEFAULT_WIDTH",
    "right" : "DEFAULT_WIDTH",
    "info" : "FieldDeclaration[8889-8997]:FieldDeclaration[8889-8997]"
  }, {
    "left" : "DEFAULT_HEIGHT",
    "right" : "DEFAULT_HEIGHT",
    "info" : "FieldDeclaration[9000-9045]:FieldDeclaration[9000-9045]"
  }, {
    "left" : "defaultSize",
    "right" : "defaultSize",
    "info" : "FieldDeclaration[9432-9618]:FieldDeclaration[9432-9618]"
  }, {
    "left" : "pixels",
    "right" : "pixels",
    "info" : "FieldDeclaration[9741-10952]:FieldDeclaration[9741-10952]"
  }, {
    "left" : "width",
    "right" : "width",
    "info" : "FieldDeclaration[10956-11493]:FieldDeclaration[10956-11493]"
  }, {
    "left" : "height",
    "right" : "height",
    "info" : "FieldDeclaration[11497-12040]:FieldDeclaration[11497-12040]"
  }, {
    "left" : "pixelWidth",
    "right" : "pixelWidth",
    "info" : "FieldDeclaration[12044-12167]:FieldDeclaration[12044-12167]"
  }, {
    "left" : "pixelHeight",
    "right" : "pixelHeight",
    "info" : "FieldDeclaration[12171-12296]:FieldDeclaration[12171-12296]"
  }, {
    "left" : "mouseX",
    "right" : "mouseX",
    "info" : "FieldDeclaration[12300-12900]:FieldDeclaration[12300-12900]"
  }, {
    "left" : "mouseY",
    "right" : "mouseY",
    "info" : "FieldDeclaration[12904-13497]:FieldDeclaration[12904-13497]"
  }, {
    "left" : "pmouseX",
    "right" : "pmouseX",
    "info" : "FieldDeclaration[13501-15231]:FieldDeclaration[13501-15231]"
  }, {
    "left" : "pmouseY",
    "right" : "pmouseY",
    "info" : "FieldDeclaration[15235-16021]:FieldDeclaration[15235-16021]"
  }, {
    "left" : "dmouseX",
    "right" : "dmouseX",
    "info" : "FieldDeclaration[16025-16250]:FieldDeclaration[16025-16250]"
  }, {
    "left" : "emouseX",
    "right" : "emouseX",
    "info" : "FieldDeclaration[16254-16641]:FieldDeclaration[16254-16641]"
  }, {
    "left" : "firstMouse",
    "right" : "firstMouse",
    "info" : "FieldDeclaration[16645-17171]:FieldDeclaration[16645-17171]"
  }, {
    "left" : "mouseButton",
    "right" : "mouseButton",
    "info" : "FieldDeclaration[17175-18099]:FieldDeclaration[17175-18099]"
  }, {
    "left" : "mousePressed",
    "right" : "mousePressed",
    "info" : "FieldDeclaration[18103-18789]:FieldDeclaration[18103-18789]"
  }, {
    "left" : "mouseEvent",
    "right" : "mouseEvent",
    "info" : "FieldDeclaration[18794-18914]:FieldDeclaration[18794-18914]"
  }, {
    "left" : "key",
    "right" : "key",
    "info" : "FieldDeclaration[18918-20066]:FieldDeclaration[18918-20066]"
  }, {
    "left" : "keyCode",
    "right" : "keyCode",
    "info" : "FieldDeclaration[20070-21818]:FieldDeclaration[20070-21818]"
  }, {
    "left" : "keyPressed",
    "right" : "keyPressed",
    "info" : "FieldDeclaration[21822-22225]:FieldDeclaration[21822-22225]"
  }, {
    "left" : "keyEvent",
    "right" : "keyEvent",
    "info" : "FieldDeclaration[22229-22411]:FieldDeclaration[22229-22411]"
  }, {
    "left" : "focused",
    "right" : "focused",
    "info" : "FieldDeclaration[22415-22896]:FieldDeclaration[22415-22896]"
  }, {
    "left" : "millisOffset",
    "right" : "millisOffset",
    "info" : "FieldDeclaration[23394-23553]:FieldDeclaration[23394-23553]"
  }, {
    "left" : "frameRate",
    "right" : "frameRate",
    "info" : "FieldDeclaration[23557-24078]:FieldDeclaration[23557-24078]"
  }, {
    "left" : "looping",
    "right" : "looping",
    "info" : "FieldDeclaration[24082-24108]:FieldDeclaration[24082-24108]"
  }, {
    "left" : "redraw",
    "right" : "redraw",
    "info" : "FieldDeclaration[24112-24202]:FieldDeclaration[24112-24202]"
  }, {
    "left" : "frameCount",
    "right" : "frameCount",
    "info" : "FieldDeclaration[24206-24629]:FieldDeclaration[24206-24629]"
  }, {
    "left" : "finished",
    "right" : "finished",
    "info" : "FieldDeclaration[24633-24719]:FieldDeclaration[24633-24719]"
  }, {
    "left" : "exitCalled",
    "right" : "exitCalled",
    "info" : "FieldDeclaration[24874-25013]:FieldDeclaration[24874-25013]"
  }, {
    "left" : "ARGS_EDITOR_LOCATION",
    "right" : "ARGS_EDITOR_LOCATION",
    "info" : "FieldDeclaration[25070-25248]:FieldDeclaration[25070-25248]"
  }, {
    "left" : "ARGS_EXTERNAL",
    "right" : "ARGS_EXTERNAL",
    "info" : "FieldDeclaration[25252-25308]:FieldDeclaration[25252-25308]"
  }, {
    "left" : "ARGS_LOCATION",
    "right" : "ARGS_LOCATION",
    "info" : "FieldDeclaration[25312-25619]:FieldDeclaration[25312-25619]"
  }, {
    "left" : "ARGS_DISPLAY",
    "right" : "ARGS_DISPLAY",
    "info" : "FieldDeclaration[25623-25753]:FieldDeclaration[25623-25753]"
  }, {
    "left" : "ARGS_WINDOW_COLOR",
    "right" : "ARGS_WINDOW_COLOR",
    "info" : "FieldDeclaration[25820-25884]:FieldDeclaration[25820-25884]"
  }, {
    "left" : "ARGS_PRESENT",
    "right" : "ARGS_PRESENT",
    "info" : "FieldDeclaration[25888-25942]:FieldDeclaration[25888-25942]"
  }, {
    "left" : "ARGS_STOP_COLOR",
    "right" : "ARGS_STOP_COLOR",
    "info" : "FieldDeclaration[25946-26006]:FieldDeclaration[25946-26006]"
  }, {
    "left" : "ARGS_HIDE_STOP",
    "right" : "ARGS_HIDE_STOP",
    "info" : "FieldDeclaration[26010-26068]:FieldDeclaration[26010-26068]"
  }, {
    "left" : "ARGS_SKETCH_FOLDER",
    "right" : "ARGS_SKETCH_FOLDER",
    "info" : "FieldDeclaration[26072-26339]:FieldDeclaration[26072-26339]"
  }, {
    "left" : "EXTERNAL_STOP",
    "right" : "EXTERNAL_STOP",
    "info" : "FieldDeclaration[26343-26497]:FieldDeclaration[26343-26497]"
  }, {
    "left" : "EXTERNAL_MOVE",
    "right" : "EXTERNAL_MOVE",
    "info" : "FieldDeclaration[26501-26799]:FieldDeclaration[26501-26799]"
  }, {
    "left" : "external",
    "right" : "external",
    "info" : "FieldDeclaration[26803-26881]:FieldDeclaration[26803-26881]"
  }, {
    "left" : "ERROR_MIN_MAX",
    "right" : "ERROR_MIN_MAX",
    "info" : "FieldDeclaration[26885-26972]:FieldDeclaration[26885-26972]"
  }, {
    "left" : "surface",
    "right" : "surface",
    "info" : "FieldDeclaration[27058-27085]:FieldDeclaration[27058-27085]"
  }, {
    "left" : "frame",
    "right" : "frame",
    "info" : "FieldDeclaration[27090-27212]:FieldDeclaration[27090-27212]"
  }, {
    "left" : "public init() : void",
    "right" : "public init() : void",
    "info" : "MethodDeclaration[27434-29233]:MethodDeclaration[27434-29233]"
  }, {
    "left" : "insideSettings",
    "right" : "insideSettings",
    "info" : "FieldDeclaration[29319-29342]:FieldDeclaration[29319-29342]"
  }, {
    "left" : "renderer",
    "right" : "renderer",
    "info" : "FieldDeclaration[29346-29371]:FieldDeclaration[29346-29371]"
  }, {
    "left" : "smooth",
    "right" : "smooth",
    "info" : "FieldDeclaration[29395-29410]:FieldDeclaration[29395-29410]"
  }, {
    "left" : "fullScreen",
    "right" : "fullScreen",
    "info" : "FieldDeclaration[29475-29494]:FieldDeclaration[29475-29494]"
  }, {
    "left" : "display",
    "right" : "display",
    "info" : "FieldDeclaration[29497-29514]:FieldDeclaration[29497-29514]"
  }, {
    "left" : "displayDevices",
    "right" : "displayDevices",
    "info" : "FieldDeclaration[29533-29565]:FieldDeclaration[29533-29565]"
  }, {
    "left" : "pixelDensity",
    "right" : "pixelDensity",
    "info" : "FieldDeclaration[29672-29700]:FieldDeclaration[29672-29700]"
  }, {
    "left" : "outputPath",
    "right" : "outputPath",
    "info" : "FieldDeclaration[29704-29722]:FieldDeclaration[29704-29722]"
  }, {
    "left" : "outputStream",
    "right" : "outputStream",
    "info" : "FieldDeclaration[29725-29751]:FieldDeclaration[29725-29751]"
  }, {
    "left" : "windowColor",
    "right" : "windowColor",
    "info" : "FieldDeclaration[29958-29987]:FieldDeclaration[29958-29987]"
  }, {
    "left" : "package insideSettings(method , ) : boolean",
    "right" : "package insideSettings(method , ) : boolean",
    "info" : "MethodDeclaration[29992-30950]:MethodDeclaration[29992-30950]"
  }, {
    "left" : "package handleSettings() : void",
    "right" : "package handleSettings() : void",
    "info" : "MethodDeclaration[30955-33977]:MethodDeclaration[30955-33977]"
  }, {
    "left" : "public run() : void",
    "right" : "public run() : void",
    "info" : "MethodDeclaration[33275-33673]:MethodDeclaration[33275-33673]"
  }, {
    "left" : "public settings() : void",
    "right" : "public settings() : void",
    "info" : "MethodDeclaration[33982-34444]:MethodDeclaration[33982-34444]"
  }, {
    "left" : "public sketchWidth() : int",
    "right" : "public sketchWidth() : int",
    "info" : "MethodDeclaration[34449-34503]:MethodDeclaration[34449-34503]"
  }, {
    "left" : "public sketchHeight() : int",
    "right" : "public sketchHeight() : int",
    "info" : "MethodDeclaration[34508-34564]:MethodDeclaration[34508-34564]"
  }, {
    "left" : "public sketchRenderer() : ",
    "right" : "public sketchRenderer() : ",
    "info" : "MethodDeclaration[34569-34632]:MethodDeclaration[34569-34632]"
  }, {
    "left" : "public sketchSmooth() : int",
    "right" : "public sketchSmooth() : int",
    "info" : "MethodDeclaration[35316-35372]:MethodDeclaration[35316-35372]"
  }, {
    "left" : "public sketchFullScreen() : boolean",
    "right" : "public sketchFullScreen() : boolean",
    "info" : "MethodDeclaration[35377-35465]:MethodDeclaration[35377-35465]"
  }, {
    "left" : "public sketchDisplay() : int",
    "right" : "public sketchDisplay() : int",
    "info" : "MethodDeclaration[35868-35926]:MethodDeclaration[35868-35926]"
  }, {
    "left" : "public sketchOutputPath() : ",
    "right" : "public sketchOutputPath() : ",
    "info" : "MethodDeclaration[35931-36017]:MethodDeclaration[35931-36017]"
  }, {
    "left" : "public sketchOutputStream() : ",
    "right" : "public sketchOutputStream() : ",
    "info" : "MethodDeclaration[36022-36118]:MethodDeclaration[36022-36118]"
  }, {
    "left" : "public sketchWindowColor() : int",
    "right" : "public sketchWindowColor() : int",
    "info" : "MethodDeclaration[36123-36189]:MethodDeclaration[36123-36189]"
  }, {
    "left" : "public sketchPixelDensity() : int",
    "right" : "public sketchPixelDensity() : int",
    "info" : "MethodDeclaration[36194-36262]:MethodDeclaration[36194-36262]"
  }, {
    "left" : "public displayDensity() : int",
    "right" : "public displayDensity() : int",
    "info" : "MethodDeclaration[36348-36664]:MethodDeclaration[36348-36664]"
  }, {
    "left" : "public displayDensity(display int) : int",
    "right" : "public displayDensity(display int) : int",
    "info" : "MethodDeclaration[36669-38476]:MethodDeclaration[36669-38476]"
  }, {
    "left" : "public pixelDensity(density int) : void",
    "right" : "public pixelDensity(density int) : void",
    "info" : "MethodDeclaration[38480-39106]:MethodDeclaration[38480-39106]"
  }, {
    "left" : "public setSize(width int, height int) : void",
    "right" : "public setSize(width int, height int) : void",
    "info" : "MethodDeclaration[39111-39430]:MethodDeclaration[39111-39430]"
  }, {
    "left" : "public smooth() : void",
    "right" : "public smooth() : void",
    "info" : "MethodDeclaration[39516-39584]:MethodDeclaration[39516-39584]"
  }, {
    "left" : "public smooth(level int) : void",
    "right" : "public smooth(level int) : void",
    "info" : "MethodDeclaration[39588-39855]:MethodDeclaration[39588-39855]"
  }, {
    "left" : "public noSmooth() : void",
    "right" : "public noSmooth() : void",
    "info" : "MethodDeclaration[39859-40048]:MethodDeclaration[39859-40048]"
  }, {
    "left" : "private smoothWarning(method ) : void",
    "right" : "private smoothWarning(method ) : void",
    "info" : "MethodDeclaration[40053-40309]:MethodDeclaration[40053-40309]"
  }, {
    "left" : "public getGraphics() : ",
    "right" : "public getGraphics() : ",
    "info" : "MethodDeclaration[40395-40445]:MethodDeclaration[40395-40445]"
  }, {
    "left" : "public orientation(which int) : void",
    "right" : "public orientation(which int) : void",
    "info" : "MethodDeclaration[40528-40615]:MethodDeclaration[40528-40615]"
  }, {
    "left" : "public start() : void",
    "right" : "public start() : void",
    "info" : "MethodDeclaration[40620-41183]:MethodDeclaration[40620-41183]"
  }, {
    "left" : "public stop() : void",
    "right" : "public stop() : void",
    "info" : "MethodDeclaration[41188-42459]:MethodDeclaration[41188-42459]"
  }, {
    "left" : "public pause() : void",
    "right" : "public pause() : void",
    "info" : "MethodDeclaration[42464-42724]:MethodDeclaration[42464-42724]"
  }, {
    "left" : "public resume() : void",
    "right" : "public resume() : void",
    "info" : "MethodDeclaration[42729-42974]:MethodDeclaration[42729-42974]"
  }, {
    "left" : "registerMap",
    "right" : "registerMap",
    "info" : "FieldDeclaration[43600-43754]:FieldDeclaration[43600-43754]"
  }, {
    "left" : "class : RegisteredMethods",
    "right" : "class : RegisteredMethods",
    "info" : "TypeDeclaration[43759-46801]:TypeDeclaration[43759-46801]"
  }, {
    "left" : "count",
    "right" : "count",
    "info" : "FieldDeclaration[43789-43799]:FieldDeclaration[43789-43799]"
  }, {
    "left" : "objects",
    "right" : "objects",
    "info" : "FieldDeclaration[43804-43821]:FieldDeclaration[43804-43821]"
  }, {
    "left" : "methods",
    "right" : "methods",
    "info" : "FieldDeclaration[43943-43960]:FieldDeclaration[43943-43960]"
  }, {
    "left" : "emptyArgs",
    "right" : "emptyArgs",
    "info" : "FieldDeclaration[43965-44003]:FieldDeclaration[43965-44003]"
  }, {
    "left" : "package handle() : void",
    "right" : "package handle() : void",
    "info" : "MethodDeclaration[44010-44056]:MethodDeclaration[44010-44056]"
  }, {
    "left" : "package handle(args ...) : void",
    "right" : "package handle(args ...) : void",
    "info" : "MethodDeclaration[44063-44833]:MethodDeclaration[44063-44833]"
  }, {
    "left" : "package add(object , method ) : void",
    "right" : "package add(object , method ) : void",
    "info" : "MethodDeclaration[44840-45415]:MethodDeclaration[44840-45415]"
  }, {
    "left" : "public remove(object ) : void",
    "right" : "public remove(object ) : void",
    "info" : "MethodDeclaration[45422-46197]:MethodDeclaration[45422-46197]"
  }, {
    "left" : "protected findIndex(object ) : int",
    "right" : "protected findIndex(object ) : int",
    "info" : "MethodDeclaration[46266-46797]:MethodDeclaration[46266-46797]"
  }, {
    "left" : "public registerMethod(methodName , target ) : void",
    "right" : "public registerMethod(methodName , target ) : void",
    "info" : "MethodDeclaration[46806-48288]:MethodDeclaration[46806-48288]"
  }, {
    "left" : "private registerNoArgs(name , o ) : void",
    "right" : "private registerNoArgs(name , o ) : void",
    "info" : "MethodDeclaration[48293-48875]:MethodDeclaration[48293-48875]"
  }, {
    "left" : "private registerWithArgs(name , o , cargs ...) : void",
    "right" : "private registerWithArgs(name , o , cargs ...) : void",
    "info" : "MethodDeclaration[48880-49473]:MethodDeclaration[48880-49473]"
  }, {
    "left" : "public unregisterMethod(name , target ) : void",
    "right" : "public unregisterMethod(name , target ) : void",
    "info" : "MethodDeclaration[49619-50080]:MethodDeclaration[49619-50080]"
  }, {
    "left" : "protected handleMethods(methodName ) : void",
    "right" : "protected handleMethods(methodName ) : void",
    "info" : "MethodDeclaration[50085-50247]:MethodDeclaration[50085-50247]"
  }, {
    "left" : "protected handleMethods(methodName , args ...) : void",
    "right" : "protected handleMethods(methodName , args ...) : void",
    "info" : "MethodDeclaration[50252-50433]:MethodDeclaration[50252-50433]"
  }, {
    "left" : "public setup() : void",
    "right" : "public setup() : void",
    "info" : "MethodDeclaration[54532-55314]:MethodDeclaration[54532-55314]"
  }, {
    "left" : "public draw() : void",
    "right" : "public draw() : void",
    "info" : "MethodDeclaration[55316-56835]:MethodDeclaration[55316-56835]"
  }, {
    "left" : "public fullScreen() : void",
    "right" : "public fullScreen() : void",
    "info" : "MethodDeclaration[57261-57475]:MethodDeclaration[57261-57475]"
  }, {
    "left" : "public fullScreen(display int) : void",
    "right" : "public fullScreen(display int) : void",
    "info" : "MethodDeclaration[57480-57700]:MethodDeclaration[57480-57700]"
  }, {
    "left" : "public fullScreen(renderer ) : void",
    "right" : "public fullScreen(renderer ) : void",
    "info" : "MethodDeclaration[57703-58268]:MethodDeclaration[57703-58268]"
  }, {
    "left" : "public fullScreen(renderer , display int) : void",
    "right" : "public fullScreen(renderer , display int) : void",
    "info" : "MethodDeclaration[58273-58685]:MethodDeclaration[58273-58685]"
  }, {
    "left" : "public size(width int, height int) : void",
    "right" : "public size(width int, height int) : void",
    "info" : "MethodDeclaration[58690-62904]:MethodDeclaration[58690-62904]"
  }, {
    "left" : "public size(width int, height int, renderer ) : void",
    "right" : "public size(width int, height int, renderer ) : void",
    "info" : "MethodDeclaration[62909-63245]:MethodDeclaration[62909-63245]"
  }, {
    "left" : "public size(width int, height int, renderer , path ) : void",
    "right" : "public size(width int, height int, renderer , path ) : void",
    "info" : "MethodDeclaration[63250-66425]:MethodDeclaration[63250-66425]"
  }, {
    "left" : "public createGraphics(w int, h int) : ",
    "right" : "public createGraphics(w int, h int) : ",
    "info" : "MethodDeclaration[66430-66522]:MethodDeclaration[66430-66522]"
  }, {
    "left" : "public createGraphics(w int, h int, renderer ) : ",
    "right" : "public createGraphics(w int, h int, renderer ) : ",
    "info" : "MethodDeclaration[66527-70128]:MethodDeclaration[66527-70128]"
  }, {
    "left" : "public createGraphics(w int, h int, renderer , path ) : ",
    "right" : "public createGraphics(w int, h int, renderer , path ) : ",
    "info" : "MethodDeclaration[70133-70839]:MethodDeclaration[70133-70839]"
  }, {
    "left" : "protected makeGraphics(w int, h int, renderer , path , primary boolean) : ",
    "right" : "protected makeGraphics(w int, h int, renderer , path , primary boolean) : ",
    "info" : "MethodDeclaration[70984-74798]:MethodDeclaration[70984-74798]"
  }, {
    "left" : "protected createPrimaryGraphics() : ",
    "right" : "protected createPrimaryGraphics() : ",
    "info" : "MethodDeclaration[74803-75061]:MethodDeclaration[74803-75061]"
  }, {
    "left" : "public createImage(w int, h int, format int) : ",
    "right" : "public createImage(w int, h int, format int) : ",
    "info" : "MethodDeclaration[75066-76331]:MethodDeclaration[75066-76331]"
  }, {
    "left" : "insideDraw",
    "right" : "insideDraw",
    "info" : "FieldDeclaration[76403-76432]:FieldDeclaration[76403-76432]"
  }, {
    "left" : "frameRateLastNanos",
    "right" : "frameRateLastNanos",
    "info" : "FieldDeclaration[76436-76535]:FieldDeclaration[76436-76535]"
  }, {
    "left" : "public handleDraw() : void",
    "right" : "public handleDraw() : void",
    "info" : "MethodDeclaration[76540-79458]:MethodDeclaration[76540-79458]"
  }, {
    "left" : "public redraw() : void",
    "right" : "public redraw() : void",
    "info" : "MethodDeclaration[79681-80973]:MethodDeclaration[79681-80973]"
  }, {
    "left" : "public loop() : void",
    "right" : "public loop() : void",
    "info" : "MethodDeclaration[80975-81428]:MethodDeclaration[80975-81428]"
  }, {
    "left" : "public noLoop() : void",
    "right" : "public noLoop() : void",
    "info" : "MethodDeclaration[81430-82742]:MethodDeclaration[81430-82742]"
  }, {
    "left" : "eventQueue",
    "right" : "eventQueue",
    "info" : "FieldDeclaration[82814-82871]:FieldDeclaration[82814-82871]"
  }, {
    "left" : "class : InternalEventQueue",
    "right" : "class : InternalEventQueue",
    "info" : "TypeDeclaration[82876-83558]:TypeDeclaration[82876-83558]"
  }, {
    "left" : "queue",
    "right" : "queue",
    "info" : "FieldDeclaration[82914-82954]:FieldDeclaration[82914-82954]"
  }, {
    "left" : "offset",
    "right" : "offset",
    "info" : "FieldDeclaration[82959-82980]:FieldDeclaration[82959-82980]"
  }, {
    "left" : "count",
    "right" : "count",
    "info" : "FieldDeclaration[82985-83005]:FieldDeclaration[82985-83005]"
  }, {
    "left" : "package add(e ) : void",
    "right" : "package add(e ) : void",
    "info" : "MethodDeclaration[83011-83159]:MethodDeclaration[83011-83159]"
  }, {
    "left" : "package remove() : ",
    "right" : "package remove() : ",
    "info" : "MethodDeclaration[83165-83483]:MethodDeclaration[83165-83483]"
  }, {
    "left" : "package available() : boolean",
    "right" : "package available() : boolean",
    "info" : "MethodDeclaration[83489-83554]:MethodDeclaration[83489-83554]"
  }, {
    "left" : "public postEvent(pe ) : void",
    "right" : "public postEvent(pe ) : void",
    "info" : "MethodDeclaration[83563-83821]:MethodDeclaration[83563-83821]"
  }, {
    "left" : "protected dequeueEvents() : void",
    "right" : "protected dequeueEvents() : void",
    "info" : "MethodDeclaration[83826-84138]:MethodDeclaration[83826-84138]"
  }, {
    "left" : "protected handleMouseEvent(event ) : void",
    "right" : "protected handleMouseEvent(event ) : void",
    "info" : "MethodDeclaration[84210-87177]:MethodDeclaration[84210-87177]"
  }, {
    "left" : "public mousePressed() : void",
    "right" : "public mousePressed() : void",
    "info" : "MethodDeclaration[87182-88205]:MethodDeclaration[87182-88205]"
  }, {
    "left" : "public mousePressed(event ) : void",
    "right" : "public mousePressed(event ) : void",
    "info" : "MethodDeclaration[88210-88278]:MethodDeclaration[88210-88278]"
  }, {
    "left" : "public mouseReleased() : void",
    "right" : "public mouseReleased() : void",
    "info" : "MethodDeclaration[88283-88871]:MethodDeclaration[88283-88871]"
  }, {
    "left" : "public mouseReleased(event ) : void",
    "right" : "public mouseReleased(event ) : void",
    "info" : "MethodDeclaration[88876-88946]:MethodDeclaration[88876-88946]"
  }, {
    "left" : "public mouseClicked() : void",
    "right" : "public mouseClicked() : void",
    "info" : "MethodDeclaration[88951-89765]:MethodDeclaration[88951-89765]"
  }, {
    "left" : "public mouseClicked(event ) : void",
    "right" : "public mouseClicked(event ) : void",
    "info" : "MethodDeclaration[89770-89838]:MethodDeclaration[89770-89838]"
  }, {
    "left" : "public mouseDragged() : void",
    "right" : "public mouseDragged() : void",
    "info" : "MethodDeclaration[89843-90453]:MethodDeclaration[89843-90453]"
  }, {
    "left" : "public mouseDragged(event ) : void",
    "right" : "public mouseDragged(event ) : void",
    "info" : "MethodDeclaration[90458-90526]:MethodDeclaration[90458-90526]"
  }, {
    "left" : "public mouseMoved() : void",
    "right" : "public mouseMoved() : void",
    "info" : "MethodDeclaration[90531-91136]:MethodDeclaration[90531-91136]"
  }, {
    "left" : "public mouseMoved(event ) : void",
    "right" : "public mouseMoved(event ) : void",
    "info" : "MethodDeclaration[91141-91205]:MethodDeclaration[91141-91205]"
  }, {
    "left" : "public mouseEntered() : void",
    "right" : "public mouseEntered() : void",
    "info" : "MethodDeclaration[91210-91240]:MethodDeclaration[91210-91240]"
  }, {
    "left" : "public mouseEntered(event ) : void",
    "right" : "public mouseEntered(event ) : void",
    "info" : "MethodDeclaration[91245-91313]:MethodDeclaration[91245-91313]"
  }, {
    "left" : "public mouseExited() : void",
    "right" : "public mouseExited() : void",
    "info" : "MethodDeclaration[91318-91347]:MethodDeclaration[91318-91347]"
  }, {
    "left" : "public mouseExited(event ) : void",
    "right" : "public mouseExited(event ) : void",
    "info" : "MethodDeclaration[91352-91418]:MethodDeclaration[91352-91418]"
  }, {
    "left" : "public mouseWheel() : void",
    "right" : "public mouseWheel() : void",
    "info" : "MethodDeclaration[91422-91477]:MethodDeclaration[91422-91477]"
  }, {
    "left" : "public mouseWheel(event ) : void",
    "right" : "public mouseWheel(event ) : void",
    "info" : "MethodDeclaration[91481-92174]:MethodDeclaration[91481-92174]"
  }, {
    "left" : "protected handleKeyEvent(event ) : void",
    "right" : "protected handleKeyEvent(event ) : void",
    "info" : "MethodDeclaration[92247-93960]:MethodDeclaration[92247-93960]"
  }, {
    "left" : "public keyPressed() : void",
    "right" : "public keyPressed() : void",
    "info" : "MethodDeclaration[93965-97328]:MethodDeclaration[93965-97328]"
  }, {
    "left" : "public keyPressed(event ) : void",
    "right" : "public keyPressed(event ) : void",
    "info" : "MethodDeclaration[97333-97395]:MethodDeclaration[97333-97395]"
  }, {
    "left" : "public keyReleased() : void",
    "right" : "public keyReleased() : void",
    "info" : "MethodDeclaration[97400-97889]:MethodDeclaration[97400-97889]"
  }, {
    "left" : "public keyReleased(event ) : void",
    "right" : "public keyReleased(event ) : void",
    "info" : "MethodDeclaration[97894-97958]:MethodDeclaration[97894-97958]"
  }, {
    "left" : "public keyTyped() : void",
    "right" : "public keyTyped() : void",
    "info" : "MethodDeclaration[97963-98579]:MethodDeclaration[97963-98579]"
  }, {
    "left" : "public keyTyped(event ) : void",
    "right" : "public keyTyped(event ) : void",
    "info" : "MethodDeclaration[98584-98642]:MethodDeclaration[98584-98642]"
  }, {
    "left" : "public focusGained() : void",
    "right" : "public focusGained() : void",
    "info" : "MethodDeclaration[98853-98882]:MethodDeclaration[98853-98882]"
  }, {
    "left" : "public focusLost() : void",
    "right" : "public focusLost() : void",
    "info" : "MethodDeclaration[98887-98914]:MethodDeclaration[98887-98914]"
  }, {
    "left" : "public millis() : int",
    "right" : "public millis() : int",
    "info" : "MethodDeclaration[99010-99690]:MethodDeclaration[99010-99690]"
  }, {
    "left" : "public second() : int",
    "right" : "public second() : int",
    "info" : "MethodDeclaration[99694-100210]:MethodDeclaration[99694-100210]"
  }, {
    "left" : "public minute() : int",
    "right" : "public minute() : int",
    "info" : "MethodDeclaration[100214-100740]:MethodDeclaration[100214-100740]"
  }, {
    "left" : "public hour() : int",
    "right" : "public hour() : int",
    "info" : "MethodDeclaration[100744-101262]:MethodDeclaration[100744-101262]"
  }, {
    "left" : "public day() : int",
    "right" : "public day() : int",
    "info" : "MethodDeclaration[101266-101997]:MethodDeclaration[101266-101997]"
  }, {
    "left" : "public month() : int",
    "right" : "public month() : int",
    "info" : "MethodDeclaration[102001-102581]:MethodDeclaration[102001-102581]"
  }, {
    "left" : "public year() : int",
    "right" : "public year() : int",
    "info" : "MethodDeclaration[102585-103212]:MethodDeclaration[102585-103212]"
  }, {
    "left" : "public delay(napTime int) : void",
    "right" : "public delay(napTime int) : void",
    "info" : "MethodDeclaration[103321-104248]:MethodDeclaration[103321-104248]"
  }, {
    "left" : "public frameRate(fps float...) : void",
    "right" : "public frameRate(fps float...) : void",
    "info" : "MethodDeclaration[104253-105064]:MethodDeclaration[104253-105064]"
  }, {
    "left" : "public link(url ) : void",
    "right" : "public link(url ) : void",
    "info" : "MethodDeclaration[105136-106138]:MethodDeclaration[105136-106138]"
  }, {
    "left" : "openLauncher",
    "right" : "openLauncher",
    "info" : "FieldDeclaration[106143-106170]:FieldDeclaration[106143-106170]"
  }, {
    "left" : "public launch() : ",
    "right" : "public launch() : ",
    "info" : "MethodDeclaration[106175-109953]:MethodDeclaration[106175-109953]"
  }, {
    "left" : "public exec() : ",
    "right" : "public exec() : ",
    "info" : "MethodDeclaration[109958-110194]:MethodDeclaration[109958-110194]"
  }, {
    "left" : "public die(what ) : void",
    "right" : "public die(what ) : void",
    "info" : "MethodDeclaration[110458-110681]:MethodDeclaration[110458-110681]"
  }, {
    "left" : "public die(what , e ) : void",
    "right" : "public die(what , e ) : void",
    "info" : "MethodDeclaration[110686-110859]:MethodDeclaration[110686-110859]"
  }, {
    "left" : "public exit() : void",
    "right" : "public exit() : void",
    "info" : "MethodDeclaration[110864-112356]:MethodDeclaration[110864-112356]"
  }, {
    "left" : "public exitCalled() : boolean",
    "right" : "public exitCalled() : boolean",
    "info" : "MethodDeclaration[112361-112417]:MethodDeclaration[112361-112417]"
  }, {
    "left" : "public exitActual() : void",
    "right" : "public exitActual() : void",
    "info" : "MethodDeclaration[112422-112800]:MethodDeclaration[112422-112800]"
  }, {
    "left" : "public dispose() : void",
    "right" : "public dispose() : void",
    "info" : "MethodDeclaration[112805-113470]:MethodDeclaration[112805-113470]"
  }, {
    "left" : "public method(name ) : void",
    "right" : "public method(name ) : void",
    "info" : "MethodDeclaration[113543-114461]:MethodDeclaration[113543-114461]"
  }, {
    "left" : "public thread(name ) : void",
    "right" : "public thread(name ) : void",
    "info" : "MethodDeclaration[114466-115282]:MethodDeclaration[114466-115282]"
  }, {
    "left" : "public run() : void",
    "right" : "public run() : void",
    "info" : "MethodDeclaration[115187-115252]:MethodDeclaration[115187-115252]"
  }, {
    "left" : "public save(filename ) : void",
    "right" : "public save(filename ) : void",
    "info" : "MethodDeclaration[115376-116467]:MethodDeclaration[115376-116467]"
  }, {
    "left" : "public saveFrame() : void",
    "right" : "public saveFrame() : void",
    "info" : "MethodDeclaration[116472-116768]:MethodDeclaration[116472-116768]"
  }, {
    "left" : "public saveFrame(filename ) : void",
    "right" : "public saveFrame(filename ) : void",
    "info" : "MethodDeclaration[116773-118793]:MethodDeclaration[116773-118793]"
  }, {
    "left" : "public insertFrame(what ) : ",
    "right" : "public insertFrame(what ) : ",
    "info" : "MethodDeclaration[118798-119520]:MethodDeclaration[118798-119520]"
  }, {
    "left" : "public cursor(kind int) : void",
    "right" : "public cursor(kind int) : void",
    "info" : "MethodDeclaration[119612-119776]:MethodDeclaration[119612-119776]"
  }, {
    "left" : "public cursor(img ) : void",
    "right" : "public cursor(img ) : void",
    "info" : "MethodDeclaration[119781-120001]:MethodDeclaration[119781-120001]"
  }, {
    "left" : "public cursor(img , x int, y int) : void",
    "right" : "public cursor(img , x int, y int) : void",
    "info" : "MethodDeclaration[120006-121364]:MethodDeclaration[120006-121364]"
  }, {
    "left" : "public cursor() : void",
    "right" : "public cursor() : void",
    "info" : "MethodDeclaration[121369-121547]:MethodDeclaration[121369-121547]"
  }, {
    "left" : "public noCursor() : void",
    "right" : "public noCursor() : void",
    "info" : "MethodDeclaration[121552-122035]:MethodDeclaration[121552-122035]"
  }, {
    "left" : "public print(what byte) : void",
    "right" : "public print(what byte) : void",
    "info" : "MethodDeclaration[122104-123687]:MethodDeclaration[122104-123687]"
  }, {
    "left" : "public print(what boolean) : void",
    "right" : "public print(what boolean) : void",
    "info" : "MethodDeclaration[123691-123787]:MethodDeclaration[123691-123787]"
  }, {
    "left" : "public print(what char) : void",
    "right" : "public print(what char) : void",
    "info" : "MethodDeclaration[123791-123884]:MethodDeclaration[123791-123884]"
  }, {
    "left" : "public print(what int) : void",
    "right" : "public print(what int) : void",
    "info" : "MethodDeclaration[123888-123980]:MethodDeclaration[123888-123980]"
  }, {
    "left" : "public print(what long) : void",
    "right" : "public print(what long) : void",
    "info" : "MethodDeclaration[123984-124077]:MethodDeclaration[123984-124077]"
  }, {
    "left" : "public print(what float) : void",
    "right" : "public print(what float) : void",
    "info" : "MethodDeclaration[124081-124175]:MethodDeclaration[124081-124175]"
  }, {
    "left" : "public print(what double) : void",
    "right" : "public print(what double) : void",
    "info" : "MethodDeclaration[124179-124274]:MethodDeclaration[124179-124274]"
  }, {
    "left" : "public print(what ) : void",
    "right" : "public print(what ) : void",
    "info" : "MethodDeclaration[124278-124373]:MethodDeclaration[124278-124373]"
  }, {
    "left" : "public print() : void",
    "right" : "public print() : void",
    "info" : "MethodDeclaration[124377-124784]:MethodDeclaration[124377-124784]"
  }, {
    "left" : "public println() : void",
    "right" : "public println() : void",
    "info" : "MethodDeclaration[125026-126075]:MethodDeclaration[125026-126075]"
  }, {
    "left" : "public println(what byte) : void",
    "right" : "public println(what byte) : void",
    "info" : "MethodDeclaration[126078-126225]:MethodDeclaration[126078-126225]"
  }, {
    "left" : "public println(what boolean) : void",
    "right" : "public println(what boolean) : void",
    "info" : "MethodDeclaration[126229-126329]:MethodDeclaration[126229-126329]"
  }, {
    "left" : "public println(what char) : void",
    "right" : "public println(what char) : void",
    "info" : "MethodDeclaration[126333-126430]:MethodDeclaration[126333-126430]"
  }, {
    "left" : "public println(what int) : void",
    "right" : "public println(what int) : void",
    "info" : "MethodDeclaration[126434-126530]:MethodDeclaration[126434-126530]"
  }, {
    "left" : "public println(what long) : void",
    "right" : "public println(what long) : void",
    "info" : "MethodDeclaration[126534-126631]:MethodDeclaration[126534-126631]"
  }, {
    "left" : "public println(what float) : void",
    "right" : "public println(what float) : void",
    "info" : "MethodDeclaration[126635-126733]:MethodDeclaration[126635-126733]"
  }, {
    "left" : "public println(what double) : void",
    "right" : "public println(what double) : void",
    "info" : "MethodDeclaration[126737-126836]:MethodDeclaration[126737-126836]"
  }, {
    "left" : "public println(what ) : void",
    "right" : "public println(what ) : void",
    "info" : "MethodDeclaration[126840-126939]:MethodDeclaration[126840-126939]"
  }, {
    "left" : "public println() : void",
    "right" : "public println() : void",
    "info" : "MethodDeclaration[126943-127169]:MethodDeclaration[126943-127169]"
  }, {
    "left" : "public println(what ) : void",
    "right" : "public println(what ) : void",
    "info" : "MethodDeclaration[127726-128188]:MethodDeclaration[127726-128188]"
  }, {
    "left" : "public printArray(what ) : void",
    "right" : "public printArray(what ) : void",
    "info" : "MethodDeclaration[128192-130928]:MethodDeclaration[128192-130928]"
  }, {
    "left" : "public debug(msg ) : void",
    "right" : "public debug(msg ) : void",
    "info" : "MethodDeclaration[130933-131004]:MethodDeclaration[130933-131004]"
  }, {
    "left" : "public abs(n float) : float",
    "right" : "public abs(n float) : float",
    "info" : "MethodDeclaration[131624-131968]:MethodDeclaration[131624-131968]"
  }, {
    "left" : "public abs(n int) : int",
    "right" : "public abs(n int) : int",
    "info" : "MethodDeclaration[131972-132041]:MethodDeclaration[131972-132041]"
  }, {
    "left" : "public sq(n float) : float",
    "right" : "public sq(n float) : float",
    "info" : "MethodDeclaration[132043-132485]:MethodDeclaration[132043-132485]"
  }, {
    "left" : "public sqrt(n float) : float",
    "right" : "public sqrt(n float) : float",
    "info" : "MethodDeclaration[132487-133047]:MethodDeclaration[132487-133047]"
  }, {
    "left" : "public log(n float) : float",
    "right" : "public log(n float) : float",
    "info" : "MethodDeclaration[133049-133422]:MethodDeclaration[133049-133422]"
  }, {
    "left" : "public exp(n float) : float",
    "right" : "public exp(n float) : float",
    "info" : "MethodDeclaration[133424-133760]:MethodDeclaration[133424-133760]"
  }, {
    "left" : "public pow(n float, e float) : float",
    "right" : "public pow(n float, e float) : float",
    "info" : "MethodDeclaration[133762-134407]:MethodDeclaration[133762-134407]"
  }, {
    "left" : "public max(a int, b int) : int",
    "right" : "public max(a int, b int) : int",
    "info" : "MethodDeclaration[134409-134787]:MethodDeclaration[134409-134787]"
  }, {
    "left" : "public max(a float, b float) : float",
    "right" : "public max(a float, b float) : float",
    "info" : "MethodDeclaration[134791-134872]:MethodDeclaration[134791-134872]"
  }, {
    "left" : "public max(a int, b int, c int) : int",
    "right" : "public max(a int, b int, c int) : int",
    "info" : "MethodDeclaration[134972-135132]:MethodDeclaration[134972-135132]"
  }, {
    "left" : "public max(a float, b float, c float) : float",
    "right" : "public max(a float, b float, c float) : float",
    "info" : "MethodDeclaration[135137-135259]:MethodDeclaration[135137-135259]"
  }, {
    "left" : "public max(list ) : int",
    "right" : "public max(list ) : int",
    "info" : "MethodDeclaration[135264-135592]:MethodDeclaration[135264-135592]"
  }, {
    "left" : "public max(list ) : float",
    "right" : "public max(list ) : float",
    "info" : "MethodDeclaration[135596-135873]:MethodDeclaration[135596-135873]"
  }, {
    "left" : "public min(a int, b int) : int",
    "right" : "public min(a int, b int) : int",
    "info" : "MethodDeclaration[135878-136438]:MethodDeclaration[135878-136438]"
  }, {
    "left" : "public min(a float, b float) : float",
    "right" : "public min(a float, b float) : float",
    "info" : "MethodDeclaration[136442-136523]:MethodDeclaration[136442-136523]"
  }, {
    "left" : "public min(a int, b int, c int) : int",
    "right" : "public min(a int, b int, c int) : int",
    "info" : "MethodDeclaration[136626-136740]:MethodDeclaration[136626-136740]"
  }, {
    "left" : "public min(a float, b float, c float) : float",
    "right" : "public min(a float, b float, c float) : float",
    "info" : "MethodDeclaration[136742-137173]:MethodDeclaration[136742-137173]"
  }, {
    "left" : "public min(list ) : int",
    "right" : "public min(list ) : int",
    "info" : "MethodDeclaration[137318-137646]:MethodDeclaration[137318-137646]"
  }, {
    "left" : "public min(list ) : float",
    "right" : "public min(list ) : float",
    "info" : "MethodDeclaration[137650-137927]:MethodDeclaration[137650-137927]"
  }, {
    "left" : "public constrain(amt int, low int, high int) : int",
    "right" : "public constrain(amt int, low int, high int) : int",
    "info" : "MethodDeclaration[138416-138543]:MethodDeclaration[138416-138543]"
  }, {
    "left" : "public constrain(amt float, low float, high float) : float",
    "right" : "public constrain(amt float, low float, high float) : float",
    "info" : "MethodDeclaration[138545-139063]:MethodDeclaration[138545-139063]"
  }, {
    "left" : "public sin(angle float) : float",
    "right" : "public sin(angle float) : float",
    "info" : "MethodDeclaration[139065-139605]:MethodDeclaration[139065-139605]"
  }, {
    "left" : "public cos(angle float) : float",
    "right" : "public cos(angle float) : float",
    "info" : "MethodDeclaration[139607-140149]:MethodDeclaration[139607-140149]"
  }, {
    "left" : "public tan(angle float) : float",
    "right" : "public tan(angle float) : float",
    "info" : "MethodDeclaration[140151-140748]:MethodDeclaration[140151-140748]"
  }, {
    "left" : "public asin(value float) : float",
    "right" : "public asin(value float) : float",
    "info" : "MethodDeclaration[140750-141310]:MethodDeclaration[140750-141310]"
  }, {
    "left" : "public acos(value float) : float",
    "right" : "public acos(value float) : float",
    "info" : "MethodDeclaration[141312-141882]:MethodDeclaration[141312-141882]"
  }, {
    "left" : "public atan(value float) : float",
    "right" : "public atan(value float) : float",
    "info" : "MethodDeclaration[141884-142465]:MethodDeclaration[141884-142465]"
  }, {
    "left" : "public atan2(y float, x float) : float",
    "right" : "public atan2(y float, x float) : float",
    "info" : "MethodDeclaration[142467-143275]:MethodDeclaration[142467-143275]"
  }, {
    "left" : "public degrees(radians float...) : float",
    "right" : "public degrees(radians float...) : float",
    "info" : "MethodDeclaration[143277-143936]:MethodDeclaration[143277-143936]"
  }, {
    "left" : "public radians(degrees float...) : float",
    "right" : "public radians(degrees float...) : float",
    "info" : "MethodDeclaration[143938-144597]:MethodDeclaration[143938-144597]"
  }, {
    "left" : "public ceil(n float) : int",
    "right" : "public ceil(n float) : int",
    "info" : "MethodDeclaration[144599-145049]:MethodDeclaration[144599-145049]"
  }, {
    "left" : "public floor(n float) : int",
    "right" : "public floor(n float) : int",
    "info" : "MethodDeclaration[145051-145449]:MethodDeclaration[145051-145449]"
  }, {
    "left" : "public round(n float) : int",
    "right" : "public round(n float) : int",
    "info" : "MethodDeclaration[145451-145861]:MethodDeclaration[145451-145861]"
  }, {
    "left" : "public mag(a float, b float) : float",
    "right" : "public mag(a float, b float) : float",
    "info" : "MethodDeclaration[145866-145959]:MethodDeclaration[145866-145959]"
  }, {
    "left" : "public mag(a float, b float, c float) : float",
    "right" : "public mag(a float, b float, c float) : float",
    "info" : "MethodDeclaration[145961-146686]:MethodDeclaration[145961-146686]"
  }, {
    "left" : "public dist(x1 float, y1 float, x2 float, y2 float) : float",
    "right" : "public dist(x1 float, y1 float, x2 float, y2 float) : float",
    "info" : "MethodDeclaration[146691-146807]:MethodDeclaration[146691-146807]"
  }, {
    "left" : "public dist(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float) : float",
    "right" : "public dist(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float) : float",
    "info" : "MethodDeclaration[146809-147448]:MethodDeclaration[146809-147448]"
  }, {
    "left" : "public lerp(start float, stop float, amt float) : float",
    "right" : "public lerp(start float, stop float, amt float) : float",
    "info" : "MethodDeclaration[147450-148380]:MethodDeclaration[147450-148380]"
  }, {
    "left" : "public norm(value float, start float, stop float) : float",
    "right" : "public norm(value float, start float, stop float) : float",
    "info" : "MethodDeclaration[148384-149179]:MethodDeclaration[148384-149179]"
  }, {
    "left" : "public map(value float, start1 float, stop1 float, start2 float, stop2 float) : float",
    "right" : "public map(value float, start1 float, stop1 float, start2 float, stop2 float) : float",
    "info" : "MethodDeclaration[149183-150307]:MethodDeclaration[149183-150307]"
  }, {
    "left" : "internalRandom",
    "right" : "internalRandom",
    "info" : "FieldDeclaration[150668-150690]:FieldDeclaration[150668-150690]"
  }, {
    "left" : "public random(high float) : float",
    "right" : "public random(high float) : float",
    "info" : "MethodDeclaration[150694-151258]:MethodDeclaration[150694-151258]"
  }, {
    "left" : "public randomGaussian() : float",
    "right" : "public randomGaussian() : float",
    "info" : "MethodDeclaration[151262-152158]:MethodDeclaration[151262-152158]"
  }, {
    "left" : "public random(low float, high float) : float",
    "right" : "public random(low float, high float) : float",
    "info" : "MethodDeclaration[152163-153289]:MethodDeclaration[152163-153289]"
  }, {
    "left" : "public randomSeed(seed long) : void",
    "right" : "public randomSeed(seed long) : void",
    "info" : "MethodDeclaration[153293-153982]:MethodDeclaration[153293-153982]"
  }, {
    "left" : "PERLIN_YWRAPB",
    "right" : "PERLIN_YWRAPB",
    "info" : "FieldDeclaration[154436-154471]:FieldDeclaration[154436-154471]"
  }, {
    "left" : "PERLIN_YWRAP",
    "right" : "PERLIN_YWRAP",
    "info" : "FieldDeclaration[154474-154523]:FieldDeclaration[154474-154523]"
  }, {
    "left" : "PERLIN_ZWRAPB",
    "right" : "PERLIN_ZWRAPB",
    "info" : "FieldDeclaration[154526-154561]:FieldDeclaration[154526-154561]"
  }, {
    "left" : "PERLIN_ZWRAP",
    "right" : "PERLIN_ZWRAP",
    "info" : "FieldDeclaration[154564-154613]:FieldDeclaration[154564-154613]"
  }, {
    "left" : "PERLIN_SIZE",
    "right" : "PERLIN_SIZE",
    "info" : "FieldDeclaration[154616-154652]:FieldDeclaration[154616-154652]"
  }, {
    "left" : "perlin_octaves",
    "right" : "perlin_octaves",
    "info" : "FieldDeclaration[154656-154679]:FieldDeclaration[154656-154679]"
  }, {
    "left" : "perlin_amp_falloff",
    "right" : "perlin_amp_falloff",
    "info" : "FieldDeclaration[154710-154742]:FieldDeclaration[154710-154742]"
  }, {
    "left" : "perlin_TWOPI",
    "right" : "perlin_TWOPI",
    "info" : "FieldDeclaration[154857-154885]:FieldDeclaration[154857-154885]"
  }, {
    "left" : "perlin_cosTable",
    "right" : "perlin_cosTable",
    "info" : "FieldDeclaration[154888-154912]:FieldDeclaration[154888-154912]"
  }, {
    "left" : "perlin",
    "right" : "perlin",
    "info" : "FieldDeclaration[154915-154930]:FieldDeclaration[154915-154930]"
  }, {
    "left" : "perlinRandom",
    "right" : "perlinRandom",
    "info" : "FieldDeclaration[154934-154954]:FieldDeclaration[154934-154954]"
  }, {
    "left" : "public noise(x float) : float",
    "right" : "public noise(x float) : float",
    "info" : "MethodDeclaration[154959-155102]:MethodDeclaration[154959-155102]"
  }, {
    "left" : "public noise(x float, y float) : float",
    "right" : "public noise(x float, y float) : float",
    "info" : "MethodDeclaration[155106-155188]:MethodDeclaration[155106-155188]"
  }, {
    "left" : "public noise(x float, y float, z float) : float",
    "right" : "public noise(x float, y float, z float) : float",
    "info" : "MethodDeclaration[155192-159137]:MethodDeclaration[155192-159137]"
  }, {
    "left" : "private noise_fsc(i float) : float",
    "right" : "private noise_fsc(i float) : float",
    "info" : "MethodDeclaration[159250-159403]:MethodDeclaration[159250-159403]"
  }, {
    "left" : "public noiseDetail(lod int) : void",
    "right" : "public noiseDetail(lod int) : void",
    "info" : "MethodDeclaration[159601-161009]:MethodDeclaration[159601-161009]"
  }, {
    "left" : "public noiseDetail(lod int, falloff float) : void",
    "right" : "public noiseDetail(lod int, falloff float) : void",
    "info" : "MethodDeclaration[161013-161211]:MethodDeclaration[161013-161211]"
  }, {
    "left" : "public noiseSeed(seed long) : void",
    "right" : "public noiseSeed(seed long) : void",
    "info" : "MethodDeclaration[161215-162006]:MethodDeclaration[161215-162006]"
  }, {
    "left" : "loadImageFormats",
    "right" : "loadImageFormats",
    "info" : "FieldDeclaration[162085-162121]:FieldDeclaration[162085-162121]"
  }, {
    "left" : "public loadImage(filename ) : ",
    "right" : "public loadImage(filename ) : ",
    "info" : "MethodDeclaration[162125-164526]:MethodDeclaration[162125-164526]"
  }, {
    "left" : "public loadImage(filename , extension ) : ",
    "right" : "public loadImage(filename , extension ) : ",
    "info" : "MethodDeclaration[164902-169148]:MethodDeclaration[164902-169148]"
  }, {
    "left" : "public requestImage(filename ) : ",
    "right" : "public requestImage(filename ) : ",
    "info" : "MethodDeclaration[169153-169292]:MethodDeclaration[169153-169292]"
  }, {
    "left" : "public requestImage(filename , extension ) : ",
    "right" : "public requestImage(filename , extension ) : ",
    "info" : "MethodDeclaration[169297-170697]:MethodDeclaration[169297-170697]"
  }, {
    "left" : "requestImageMax",
    "right" : "requestImageMax",
    "info" : "FieldDeclaration[171009-171575]:FieldDeclaration[171009-171575]"
  }, {
    "left" : "requestImageCount",
    "right" : "requestImageCount",
    "info" : "FieldDeclaration[171578-171609]:FieldDeclaration[171578-171609]"
  }, {
    "left" : "class : AsyncImageLoader",
    "right" : "class : AsyncImageLoader",
    "info" : "TypeDeclaration[171613-172637]:TypeDeclaration[171613-172637]"
  }, {
    "left" : "filename",
    "right" : "filename",
    "info" : "FieldDeclaration[171657-171673]:FieldDeclaration[171657-171673]"
  }, {
    "left" : "extension",
    "right" : "extension",
    "info" : "FieldDeclaration[171678-171695]:FieldDeclaration[171678-171695]"
  }, {
    "left" : "vessel",
    "right" : "vessel",
    "info" : "FieldDeclaration[171700-171714]:FieldDeclaration[171700-171714]"
  }, {
    "left" : "public AsyncImageLoader(filename , extension , vessel )",
    "right" : "public AsyncImageLoader(filename , extension , vessel )",
    "info" : "MethodDeclaration[171720-171895]:MethodDeclaration[171720-171895]"
  }, {
    "left" : "public run() : void",
    "right" : "public run() : void",
    "info" : "MethodDeclaration[171901-172633]:MethodDeclaration[171901-172633]"
  }, {
    "left" : "protected loadImageIO(filename ) : ",
    "right" : "protected loadImageIO(filename ) : ",
    "info" : "MethodDeclaration[173207-174383]:MethodDeclaration[173207-174383]"
  }, {
    "left" : "protected loadImageTGA(filename ) : ",
    "right" : "protected loadImageTGA(filename ) : ",
    "info" : "MethodDeclaration[174388-180953]:MethodDeclaration[174388-180953]"
  }, {
    "left" : "public loadXML(filename ) : ",
    "right" : "public loadXML(filename ) : ",
    "info" : "MethodDeclaration[181551-181928]:MethodDeclaration[181551-181928]"
  }, {
    "left" : "public loadXML(filename , options ...) : ",
    "right" : "public loadXML(filename , options ...) : ",
    "info" : "MethodDeclaration[182014-182518]:MethodDeclaration[182014-182518]"
  }, {
    "left" : "public parseXML(xmlString ) : ",
    "right" : "public parseXML(xmlString ) : ",
    "info" : "MethodDeclaration[182523-182866]:MethodDeclaration[182523-182866]"
  }, {
    "left" : "public parseXML(xmlString , options ...) : ",
    "right" : "public parseXML(xmlString , options ...) : ",
    "info" : "MethodDeclaration[182871-183056]:MethodDeclaration[182871-183056]"
  }, {
    "left" : "public saveXML(xml , filename ) : boolean",
    "right" : "public saveXML(xml , filename ) : boolean",
    "info" : "MethodDeclaration[183061-183374]:MethodDeclaration[183061-183374]"
  }, {
    "left" : "public saveXML(xml , filename , options ...) : boolean",
    "right" : "public saveXML(xml , filename , options ...) : boolean",
    "info" : "MethodDeclaration[183379-183499]:MethodDeclaration[183379-183499]"
  }, {
    "left" : "public parseJSONObject(input ) : ",
    "right" : "public parseJSONObject(input ) : ",
    "info" : "MethodDeclaration[183504-183609]:MethodDeclaration[183504-183609]"
  }, {
    "left" : "public loadJSONObject(filename ) : ",
    "right" : "public loadJSONObject(filename ) : ",
    "info" : "MethodDeclaration[183614-184006]:MethodDeclaration[183614-184006]"
  }, {
    "left" : "public loadJSONObject(file ) : ",
    "right" : "public loadJSONObject(file ) : ",
    "info" : "MethodDeclaration[184011-184114]:MethodDeclaration[184011-184114]"
  }, {
    "left" : "public saveJSONObject(json , filename ) : boolean",
    "right" : "public saveJSONObject(json , filename ) : boolean",
    "info" : "MethodDeclaration[184119-184448]:MethodDeclaration[184119-184448]"
  }, {
    "left" : "public saveJSONObject(json , filename , options ...) : boolean",
    "right" : "public saveJSONObject(json , filename , options ...) : boolean",
    "info" : "MethodDeclaration[184453-184589]:MethodDeclaration[184453-184589]"
  }, {
    "left" : "public parseJSONArray(input ) : ",
    "right" : "public parseJSONArray(input ) : ",
    "info" : "MethodDeclaration[184594-184696]:MethodDeclaration[184594-184696]"
  }, {
    "left" : "public loadJSONArray(filename ) : ",
    "right" : "public loadJSONArray(filename ) : ",
    "info" : "MethodDeclaration[184701-185091]:MethodDeclaration[184701-185091]"
  }, {
    "left" : "public loadJSONArray(file ) : ",
    "right" : "public loadJSONArray(file ) : ",
    "info" : "MethodDeclaration[185096-185196]:MethodDeclaration[185096-185196]"
  }, {
    "left" : "public saveJSONArray(json , filename ) : boolean",
    "right" : "public saveJSONArray(json , filename ) : boolean",
    "info" : "MethodDeclaration[185201-185529]:MethodDeclaration[185201-185529]"
  }, {
    "left" : "public saveJSONArray(json , filename , options ...) : boolean",
    "right" : "public saveJSONArray(json , filename , options ...) : boolean",
    "info" : "MethodDeclaration[185534-185668]:MethodDeclaration[185534-185668]"
  }, {
    "left" : "public loadTable(filename ) : ",
    "right" : "public loadTable(filename ) : ",
    "info" : "MethodDeclaration[185885-186237]:MethodDeclaration[185885-186237]"
  }, {
    "left" : "public loadTable(filename , options ...) : ",
    "right" : "public loadTable(filename , options ...) : ",
    "info" : "MethodDeclaration[186242-187585]:MethodDeclaration[186242-187585]"
  }, {
    "left" : "public saveTable(table , filename ) : boolean",
    "right" : "public saveTable(table , filename ) : boolean",
    "info" : "MethodDeclaration[187590-187907]:MethodDeclaration[187590-187907]"
  }, {
    "left" : "public saveTable(table , filename , options ...) : boolean",
    "right" : "public saveTable(table , filename , options ...) : boolean",
    "info" : "MethodDeclaration[187912-188692]:MethodDeclaration[187912-188692]"
  }, {
    "left" : "public loadFont(filename ) : ",
    "right" : "public loadFont(filename ) : ",
    "info" : "MethodDeclaration[188779-190870]:MethodDeclaration[188779-190870]"
  }, {
    "left" : "protected createDefaultFont(size float) : ",
    "right" : "protected createDefaultFont(size float) : ",
    "info" : "MethodDeclaration[190875-191233]:MethodDeclaration[190875-191233]"
  }, {
    "left" : "public createFont(name , size float) : ",
    "right" : "public createFont(name , size float) : ",
    "info" : "MethodDeclaration[191238-191339]:MethodDeclaration[191238-191339]"
  }, {
    "left" : "public createFont(name , size float, smooth boolean) : ",
    "right" : "public createFont(name , size float, smooth boolean) : ",
    "info" : "MethodDeclaration[191344-191463]:MethodDeclaration[191344-191463]"
  }, {
    "left" : "public createFont(name , size float, smooth boolean, charset ) : ",
    "right" : "public createFont(name , size float, smooth boolean, charset ) : ",
    "info" : "MethodDeclaration[191468-195232]:MethodDeclaration[191468-195232]"
  }, {
    "left" : "public selectInput(prompt , callback ) : void",
    "right" : "public selectInput(prompt , callback ) : void",
    "info" : "MethodDeclaration[195849-197067]:MethodDeclaration[195849-197067]"
  }, {
    "left" : "public selectInput(prompt , callback , file ) : void",
    "right" : "public selectInput(prompt , callback , file ) : void",
    "info" : "MethodDeclaration[197072-197191]:MethodDeclaration[197072-197191]"
  }, {
    "left" : "public selectInput(prompt , callback , file , callbackObject ) : void",
    "right" : "public selectInput(prompt , callback , file , callbackObject ) : void",
    "info" : "MethodDeclaration[197196-197399]:MethodDeclaration[197196-197399]"
  }, {
    "left" : "public selectInput(prompt , callbackMethod , file , callbackObject , parent ) : void",
    "right" : "public selectInput(prompt , callbackMethod , file , callbackObject , parent ) : void",
    "info" : "MethodDeclaration[197404-197646]:MethodDeclaration[197404-197646]"
  }, {
    "left" : "public selectOutput(prompt , callback ) : void",
    "right" : "public selectOutput(prompt , callback ) : void",
    "info" : "MethodDeclaration[197651-197953]:MethodDeclaration[197651-197953]"
  }, {
    "left" : "public selectOutput(prompt , callback , file ) : void",
    "right" : "public selectOutput(prompt , callback , file ) : void",
    "info" : "MethodDeclaration[197957-198078]:MethodDeclaration[197957-198078]"
  }, {
    "left" : "public selectOutput(prompt , callback , file , callbackObject ) : void",
    "right" : "public selectOutput(prompt , callback , file , callbackObject ) : void",
    "info" : "MethodDeclaration[198083-198288]:MethodDeclaration[198083-198288]"
  }, {
    "left" : "public selectOutput(prompt , callbackMethod , file , callbackObject , parent ) : void",
    "right" : "public selectOutput(prompt , callbackMethod , file , callbackObject , parent ) : void",
    "info" : "MethodDeclaration[198293-198537]:MethodDeclaration[198293-198537]"
  }, {
    "left" : "protected selectImpl(prompt , callbackMethod , defaultSelection , callbackObject , parentFrame , mode int) : void",
    "right" : "protected selectImpl(prompt , callbackMethod , defaultSelection , callbackObject , parentFrame , mode int) : void",
    "info" : "MethodDeclaration[198542-200207]:MethodDeclaration[198542-200207]"
  }, {
    "left" : "public run() : void",
    "right" : "public run() : void",
    "info" : "MethodDeclaration[198951-200195]:MethodDeclaration[198951-200195]"
  }, {
    "left" : "public selectFolder(prompt , callback ) : void",
    "right" : "public selectFolder(prompt , callback ) : void",
    "info" : "MethodDeclaration[200212-200513]:MethodDeclaration[200212-200513]"
  }, {
    "left" : "public selectFolder(prompt , callback , file ) : void",
    "right" : "public selectFolder(prompt , callback , file ) : void",
    "info" : "MethodDeclaration[200518-200639]:MethodDeclaration[200518-200639]"
  }, {
    "left" : "public selectFolder(prompt , callback , file , callbackObject ) : void",
    "right" : "public selectFolder(prompt , callback , file , callbackObject ) : void",
    "info" : "MethodDeclaration[200644-200849]:MethodDeclaration[200644-200849]"
  }, {
    "left" : "public selectFolder(prompt , callbackMethod , defaultSelection , callbackObject , parentFrame ) : void",
    "right" : "public selectFolder(prompt , callbackMethod , defaultSelection , callbackObject , parentFrame ) : void",
    "info" : "MethodDeclaration[200854-202395]:MethodDeclaration[200854-202395]"
  }, {
    "left" : "public run() : void",
    "right" : "public run() : void",
    "info" : "MethodDeclaration[201207-202383]:MethodDeclaration[201207-202383]"
  }, {
    "left" : "private selectCallback(selectedFile , callbackMethod , callbackObject ) : void",
    "right" : "private selectCallback(selectedFile , callbackMethod , callbackObject ) : void",
    "info" : "MethodDeclaration[202400-203128]:MethodDeclaration[202400-203128]"
  }, {
    "left" : "public checkExtension(filename ) : ",
    "right" : "public checkExtension(filename ) : ",
    "info" : "MethodDeclaration[203218-203850]:MethodDeclaration[203218-203850]"
  }, {
    "left" : "public createReader(filename ) : ",
    "right" : "public createReader(filename ) : ",
    "info" : "MethodDeclaration[203949-204943]:MethodDeclaration[203949-204943]"
  }, {
    "left" : "public createReader(file ) : ",
    "right" : "public createReader(file ) : ",
    "info" : "MethodDeclaration[204948-205373]:MethodDeclaration[204948-205373]"
  }, {
    "left" : "public createReader(input ) : ",
    "right" : "public createReader(input ) : ",
    "info" : "MethodDeclaration[205378-205802]:MethodDeclaration[205378-205802]"
  }, {
    "left" : "public createWriter(filename ) : ",
    "right" : "public createWriter(filename ) : ",
    "info" : "MethodDeclaration[205807-206704]:MethodDeclaration[205807-206704]"
  }, {
    "left" : "public createWriter(file ) : ",
    "right" : "public createWriter(file ) : ",
    "info" : "MethodDeclaration[206709-207444]:MethodDeclaration[206709-207444]"
  }, {
    "left" : "public createWriter(output ) : ",
    "right" : "public createWriter(output ) : ",
    "info" : "MethodDeclaration[207448-207956]:MethodDeclaration[207448-207956]"
  }, {
    "left" : "public createInput(filename ) : ",
    "right" : "public createInput(filename ) : ",
    "info" : "MethodDeclaration[208247-211900]:MethodDeclaration[208247-211900]"
  }, {
    "left" : "public createInputRaw(filename ) : ",
    "right" : "public createInputRaw(filename ) : ",
    "info" : "MethodDeclaration[211905-217849]:MethodDeclaration[211905-217849]"
  }, {
    "left" : "public createInput(file ) : ",
    "right" : "public createInput(file ) : ",
    "info" : "MethodDeclaration[217853-218387]:MethodDeclaration[217853-218387]"
  }, {
    "left" : "public loadBytes(filename ) : ",
    "right" : "public loadBytes(filename ) : ",
    "info" : "MethodDeclaration[218392-219806]:MethodDeclaration[218392-219806]"
  }, {
    "left" : "public loadBytes(input ) : ",
    "right" : "public loadBytes(input ) : ",
    "info" : "MethodDeclaration[219810-220318]:MethodDeclaration[219810-220318]"
  }, {
    "left" : "public loadBytes(file ) : ",
    "right" : "public loadBytes(file ) : ",
    "info" : "MethodDeclaration[220322-220583]:MethodDeclaration[220322-220583]"
  }, {
    "left" : "public loadStrings(file ) : ",
    "right" : "public loadStrings(file ) : ",
    "info" : "MethodDeclaration[220587-220917]:MethodDeclaration[220587-220917]"
  }, {
    "left" : "public loadStrings(filename ) : ",
    "right" : "public loadStrings(filename ) : ",
    "info" : "MethodDeclaration[220921-223540]:MethodDeclaration[220921-223540]"
  }, {
    "left" : "public loadStrings(input ) : ",
    "right" : "public loadStrings(input ) : ",
    "info" : "MethodDeclaration[223544-223851]:MethodDeclaration[223544-223851]"
  }, {
    "left" : "public loadStrings(reader ) : ",
    "right" : "public loadStrings(reader ) : ",
    "info" : "MethodDeclaration[223856-224725]:MethodDeclaration[223856-224725]"
  }, {
    "left" : "public createOutput(filename ) : ",
    "right" : "public createOutput(filename ) : ",
    "info" : "MethodDeclaration[224816-226022]:MethodDeclaration[224816-226022]"
  }, {
    "left" : "public createOutput(file ) : ",
    "right" : "public createOutput(file ) : ",
    "info" : "MethodDeclaration[226026-226437]:MethodDeclaration[226026-226437]"
  }, {
    "left" : "public saveStream(target , source ) : boolean",
    "right" : "public saveStream(target , source ) : boolean",
    "info" : "MethodDeclaration[226442-227294]:MethodDeclaration[226442-227294]"
  }, {
    "left" : "public saveStream(target , source ) : boolean",
    "right" : "public saveStream(target , source ) : boolean",
    "info" : "MethodDeclaration[227298-227663]:MethodDeclaration[227298-227663]"
  }, {
    "left" : "public saveStream(target , source ) : boolean",
    "right" : "public saveStream(target , source ) : boolean",
    "info" : "MethodDeclaration[227667-227809]:MethodDeclaration[227667-227809]"
  }, {
    "left" : "public saveStream(target , source ) : boolean",
    "right" : "public saveStream(target , source ) : boolean",
    "info" : "MethodDeclaration[227813-228876]:MethodDeclaration[227813-228876]"
  }, {
    "left" : "public saveStream(target , source ) : void",
    "right" : "public saveStream(target , source ) : void",
    "info" : "MethodDeclaration[228880-229339]:MethodDeclaration[228880-229339]"
  }, {
    "left" : "public saveBytes(filename , data ) : void",
    "right" : "public saveBytes(filename , data ) : void",
    "info" : "MethodDeclaration[229344-230415]:MethodDeclaration[229344-230415]"
  }, {
    "left" : "public saveBytes(file , data ) : void",
    "right" : "public saveBytes(file , data ) : void",
    "info" : "MethodDeclaration[230420-231360]:MethodDeclaration[230420-231360]"
  }, {
    "left" : "public saveBytes(output , data ) : void",
    "right" : "public saveBytes(output , data ) : void",
    "info" : "MethodDeclaration[231365-231631]:MethodDeclaration[231365-231631]"
  }, {
    "left" : "public saveStrings(filename , data ) : void",
    "right" : "public saveStrings(filename , data ) : void",
    "info" : "MethodDeclaration[231642-232910]:MethodDeclaration[231642-232910]"
  }, {
    "left" : "public saveStrings(file , data ) : void",
    "right" : "public saveStrings(file , data ) : void",
    "info" : "MethodDeclaration[232915-233047]:MethodDeclaration[232915-233047]"
  }, {
    "left" : "public saveStrings(output , data ) : void",
    "right" : "public saveStrings(output , data ) : void",
    "info" : "MethodDeclaration[233052-233319]:MethodDeclaration[233052-233319]"
  }, {
    "left" : "protected calcSketchPath() : ",
    "right" : "protected calcSketchPath() : ",
    "info" : "MethodDeclaration[233391-234492]:MethodDeclaration[233391-234492]"
  }, {
    "left" : "public sketchPath() : ",
    "right" : "public sketchPath() : ",
    "info" : "MethodDeclaration[234497-234625]:MethodDeclaration[234497-234625]"
  }, {
    "left" : "public sketchPath(where ) : ",
    "right" : "public sketchPath(where ) : ",
    "info" : "MethodDeclaration[234630-235725]:MethodDeclaration[234630-235725]"
  }, {
    "left" : "public sketchFile(where ) : ",
    "right" : "public sketchFile(where ) : ",
    "info" : "MethodDeclaration[235730-235812]:MethodDeclaration[235730-235812]"
  }, {
    "left" : "public savePath(where ) : ",
    "right" : "public savePath(where ) : ",
    "info" : "MethodDeclaration[235817-236733]:MethodDeclaration[235817-236733]"
  }, {
    "left" : "public saveFile(where ) : ",
    "right" : "public saveFile(where ) : ",
    "info" : "MethodDeclaration[236738-236885]:MethodDeclaration[236738-236885]"
  }, {
    "left" : "desktopFolder",
    "right" : "desktopFolder",
    "info" : "FieldDeclaration[236890-236916]:FieldDeclaration[236890-236916]"
  }, {
    "left" : "public desktopFile(what ) : ",
    "right" : "public desktopFile(what ) : ",
    "info" : "MethodDeclaration[236920-237594]:MethodDeclaration[236920-237594]"
  }, {
    "left" : "public desktopPath(what ) : ",
    "right" : "public desktopPath(what ) : ",
    "info" : "MethodDeclaration[237599-237755]:MethodDeclaration[237599-237755]"
  }, {
    "left" : "public dataPath(where ) : ",
    "right" : "public dataPath(where ) : ",
    "info" : "MethodDeclaration[237760-238705]:MethodDeclaration[237760-238705]"
  }, {
    "left" : "public dataFile(where ) : ",
    "right" : "public dataFile(where ) : ",
    "info" : "MethodDeclaration[238710-239718]:MethodDeclaration[238710-239718]"
  }, {
    "left" : "public createPath(path ) : void",
    "right" : "public createPath(path ) : void",
    "info" : "MethodDeclaration[239978-240233]:MethodDeclaration[239978-240233]"
  }, {
    "left" : "public createPath(file ) : void",
    "right" : "public createPath(file ) : void",
    "info" : "MethodDeclaration[240238-240611]:MethodDeclaration[240238-240611]"
  }, {
    "left" : "public getExtension(filename ) : ",
    "right" : "public getExtension(filename ) : ",
    "info" : "MethodDeclaration[240616-241156]:MethodDeclaration[240616-241156]"
  }, {
    "left" : "public urlEncode(str ) : ",
    "right" : "public urlEncode(str ) : ",
    "info" : "MethodDeclaration[241247-241436]:MethodDeclaration[241247-241436]"
  }, {
    "left" : "public urlDecode(str ) : ",
    "right" : "public urlDecode(str ) : ",
    "info" : "MethodDeclaration[241441-241645]:MethodDeclaration[241441-241645]"
  }, {
    "left" : "public sort(list byte) : ",
    "right" : "public sort(list byte) : ",
    "info" : "MethodDeclaration[241729-242485]:MethodDeclaration[241729-242485]"
  }, {
    "left" : "public sort(list , count int) : ",
    "right" : "public sort(list , count int) : ",
    "info" : "MethodDeclaration[242489-242783]:MethodDeclaration[242489-242783]"
  }, {
    "left" : "public sort(list char) : ",
    "right" : "public sort(list char) : ",
    "info" : "MethodDeclaration[242787-242867]:MethodDeclaration[242787-242867]"
  }, {
    "left" : "public sort(list , count int) : ",
    "right" : "public sort(list , count int) : ",
    "info" : "MethodDeclaration[242871-243086]:MethodDeclaration[242871-243086]"
  }, {
    "left" : "public sort(list int) : ",
    "right" : "public sort(list int) : ",
    "info" : "MethodDeclaration[243090-243168]:MethodDeclaration[243090-243168]"
  }, {
    "left" : "public sort(list , count int) : ",
    "right" : "public sort(list , count int) : ",
    "info" : "MethodDeclaration[243172-243383]:MethodDeclaration[243172-243383]"
  }, {
    "left" : "public sort(list float) : ",
    "right" : "public sort(list float) : ",
    "info" : "MethodDeclaration[243387-243469]:MethodDeclaration[243387-243469]"
  }, {
    "left" : "public sort(list , count int) : ",
    "right" : "public sort(list , count int) : ",
    "info" : "MethodDeclaration[243473-243692]:MethodDeclaration[243473-243692]"
  }, {
    "left" : "public sort(list ) : ",
    "right" : "public sort(list ) : ",
    "info" : "MethodDeclaration[243696-243780]:MethodDeclaration[243696-243780]"
  }, {
    "left" : "public sort(list , count int) : ",
    "right" : "public sort(list , count int) : ",
    "info" : "MethodDeclaration[243784-244007]:MethodDeclaration[243784-244007]"
  }, {
    "left" : "public arrayCopy(src , srcPosition int, dst , dstPosition int, length int) : void",
    "right" : "public arrayCopy(src , srcPosition int, dst , dstPosition int, length int) : void",
    "info" : "MethodDeclaration[244102-245412]:MethodDeclaration[244102-245412]"
  }, {
    "left" : "public arrayCopy(src , dst , length int) : void",
    "right" : "public arrayCopy(src , dst , length int) : void",
    "info" : "MethodDeclaration[245416-245651]:MethodDeclaration[245416-245651]"
  }, {
    "left" : "public arrayCopy(src , dst ) : void",
    "right" : "public arrayCopy(src , dst ) : void",
    "info" : "MethodDeclaration[245655-245944]:MethodDeclaration[245655-245944]"
  }, {
    "left" : "public arraycopy(src , srcPosition int, dst , dstPosition int, length int) : void",
    "right" : "public arraycopy(src , srcPosition int, dst , dstPosition int, length int) : void",
    "info" : "MethodDeclaration[245953-246239]:MethodDeclaration[245953-246239]"
  }, {
    "left" : "public arraycopy(src , dst , length int) : void",
    "right" : "public arraycopy(src , dst , length int) : void",
    "info" : "MethodDeclaration[246243-246413]:MethodDeclaration[246243-246413]"
  }, {
    "left" : "public arraycopy(src , dst ) : void",
    "right" : "public arraycopy(src , dst ) : void",
    "info" : "MethodDeclaration[246417-246589]:MethodDeclaration[246417-246589]"
  }, {
    "left" : "public expand(list boolean) : ",
    "right" : "public expand(list boolean) : ",
    "info" : "MethodDeclaration[246593-247320]:MethodDeclaration[246593-247320]"
  }, {
    "left" : "public expand(list boolean, newSize int) : ",
    "right" : "public expand(list boolean, newSize int) : ",
    "info" : "MethodDeclaration[247324-247576]:MethodDeclaration[247324-247576]"
  }, {
    "left" : "public expand(list byte) : ",
    "right" : "public expand(list byte) : ",
    "info" : "MethodDeclaration[247580-247669]:MethodDeclaration[247580-247669]"
  }, {
    "left" : "public expand(list byte, newSize int) : ",
    "right" : "public expand(list byte, newSize int) : ",
    "info" : "MethodDeclaration[247673-247858]:MethodDeclaration[247673-247858]"
  }, {
    "left" : "public expand(list char) : ",
    "right" : "public expand(list char) : ",
    "info" : "MethodDeclaration[247862-247951]:MethodDeclaration[247862-247951]"
  }, {
    "left" : "public expand(list char, newSize int) : ",
    "right" : "public expand(list char, newSize int) : ",
    "info" : "MethodDeclaration[247955-248140]:MethodDeclaration[247955-248140]"
  }, {
    "left" : "public expand(list int) : ",
    "right" : "public expand(list int) : ",
    "info" : "MethodDeclaration[248144-248231]:MethodDeclaration[248144-248231]"
  }, {
    "left" : "public expand(list int, newSize int) : ",
    "right" : "public expand(list int, newSize int) : ",
    "info" : "MethodDeclaration[248235-248416]:MethodDeclaration[248235-248416]"
  }, {
    "left" : "public expand(list long) : ",
    "right" : "public expand(list long) : ",
    "info" : "MethodDeclaration[248420-248509]:MethodDeclaration[248420-248509]"
  }, {
    "left" : "public expand(list long, newSize int) : ",
    "right" : "public expand(list long, newSize int) : ",
    "info" : "MethodDeclaration[248513-248698]:MethodDeclaration[248513-248698]"
  }, {
    "left" : "public expand(list float) : ",
    "right" : "public expand(list float) : ",
    "info" : "MethodDeclaration[248702-248793]:MethodDeclaration[248702-248793]"
  }, {
    "left" : "public expand(list float, newSize int) : ",
    "right" : "public expand(list float, newSize int) : ",
    "info" : "MethodDeclaration[248797-248986]:MethodDeclaration[248797-248986]"
  }, {
    "left" : "public expand(list double) : ",
    "right" : "public expand(list double) : ",
    "info" : "MethodDeclaration[248990-249083]:MethodDeclaration[248990-249083]"
  }, {
    "left" : "public expand(list double, newSize int) : ",
    "right" : "public expand(list double, newSize int) : ",
    "info" : "MethodDeclaration[249087-249280]:MethodDeclaration[249087-249280]"
  }, {
    "left" : "public expand(list ) : ",
    "right" : "public expand(list ) : ",
    "info" : "MethodDeclaration[249284-249377]:MethodDeclaration[249284-249377]"
  }, {
    "left" : "public expand(list , newSize int) : ",
    "right" : "public expand(list , newSize int) : ",
    "info" : "MethodDeclaration[249381-249630]:MethodDeclaration[249381-249630]"
  }, {
    "left" : "public expand(array ) : ",
    "right" : "public expand(array ) : ",
    "info" : "MethodDeclaration[249633-249760]:MethodDeclaration[249633-249760]"
  }, {
    "left" : "public expand(list , newSize int) : ",
    "right" : "public expand(list , newSize int) : ",
    "info" : "MethodDeclaration[249764-250051]:MethodDeclaration[249764-250051]"
  }, {
    "left" : "public append(array byte, value byte) : ",
    "right" : "public append(array byte, value byte) : ",
    "info" : "MethodDeclaration[250177-251025]:MethodDeclaration[250177-251025]"
  }, {
    "left" : "public append(array char, value char) : ",
    "right" : "public append(array char, value char) : ",
    "info" : "MethodDeclaration[251029-251186]:MethodDeclaration[251029-251186]"
  }, {
    "left" : "public append(array int, value int) : ",
    "right" : "public append(array int, value int) : ",
    "info" : "MethodDeclaration[251190-251344]:MethodDeclaration[251190-251344]"
  }, {
    "left" : "public append(array float, value float) : ",
    "right" : "public append(array float, value float) : ",
    "info" : "MethodDeclaration[251348-251508]:MethodDeclaration[251348-251508]"
  }, {
    "left" : "public append(array , value ) : ",
    "right" : "public append(array , value ) : ",
    "info" : "MethodDeclaration[251512-251675]:MethodDeclaration[251512-251675]"
  }, {
    "left" : "public append(array , value ) : ",
    "right" : "public append(array , value ) : ",
    "info" : "MethodDeclaration[251679-251875]:MethodDeclaration[251679-251875]"
  }, {
    "left" : "public shorten(list boolean) : ",
    "right" : "public shorten(list boolean) : ",
    "info" : "MethodDeclaration[251879-252518]:MethodDeclaration[251879-252518]"
  }, {
    "left" : "public shorten(list byte) : ",
    "right" : "public shorten(list byte) : ",
    "info" : "MethodDeclaration[252522-252612]:MethodDeclaration[252522-252612]"
  }, {
    "left" : "public shorten(list char) : ",
    "right" : "public shorten(list char) : ",
    "info" : "MethodDeclaration[252616-252706]:MethodDeclaration[252616-252706]"
  }, {
    "left" : "public shorten(list int) : ",
    "right" : "public shorten(list int) : ",
    "info" : "MethodDeclaration[252710-252798]:MethodDeclaration[252710-252798]"
  }, {
    "left" : "public shorten(list float) : ",
    "right" : "public shorten(list float) : ",
    "info" : "MethodDeclaration[252802-252894]:MethodDeclaration[252802-252894]"
  }, {
    "left" : "public shorten(list ) : ",
    "right" : "public shorten(list ) : ",
    "info" : "MethodDeclaration[252898-252992]:MethodDeclaration[252898-252992]"
  }, {
    "left" : "public shorten(list ) : ",
    "right" : "public shorten(list ) : ",
    "info" : "MethodDeclaration[252996-253123]:MethodDeclaration[252996-253123]"
  }, {
    "left" : "public splice(list boolean, value boolean, index int) : ",
    "right" : "public splice(list boolean, value boolean, index int) : ",
    "info" : "MethodDeclaration[253128-254374]:MethodDeclaration[253128-254374]"
  }, {
    "left" : "public splice(list boolean, value boolean, index int) : ",
    "right" : "public splice(list boolean, value boolean, index int) : ",
    "info" : "MethodDeclaration[254378-254813]:MethodDeclaration[254378-254813]"
  }, {
    "left" : "public splice(list byte, value byte, index int) : ",
    "right" : "public splice(list byte, value byte, index int) : ",
    "info" : "MethodDeclaration[254817-255176]:MethodDeclaration[254817-255176]"
  }, {
    "left" : "public splice(list byte, value byte, index int) : ",
    "right" : "public splice(list byte, value byte, index int) : ",
    "info" : "MethodDeclaration[255180-255597]:MethodDeclaration[255180-255597]"
  }, {
    "left" : "public splice(list char, value char, index int) : ",
    "right" : "public splice(list char, value char, index int) : ",
    "info" : "MethodDeclaration[255602-255961]:MethodDeclaration[255602-255961]"
  }, {
    "left" : "public splice(list char, value char, index int) : ",
    "right" : "public splice(list char, value char, index int) : ",
    "info" : "MethodDeclaration[255965-256382]:MethodDeclaration[255965-256382]"
  }, {
    "left" : "public splice(list int, value int, index int) : ",
    "right" : "public splice(list int, value int, index int) : ",
    "info" : "MethodDeclaration[256386-256739]:MethodDeclaration[256386-256739]"
  }, {
    "left" : "public splice(list int, value int, index int) : ",
    "right" : "public splice(list int, value int, index int) : ",
    "info" : "MethodDeclaration[256743-257154]:MethodDeclaration[256743-257154]"
  }, {
    "left" : "public splice(list float, value float, index int) : ",
    "right" : "public splice(list float, value float, index int) : ",
    "info" : "MethodDeclaration[257158-257523]:MethodDeclaration[257158-257523]"
  }, {
    "left" : "public splice(list float, value float, index int) : ",
    "right" : "public splice(list float, value float, index int) : ",
    "info" : "MethodDeclaration[257527-257950]:MethodDeclaration[257527-257950]"
  }, {
    "left" : "public splice(list , value , index int) : ",
    "right" : "public splice(list , value , index int) : ",
    "info" : "MethodDeclaration[257954-258325]:MethodDeclaration[257954-258325]"
  }, {
    "left" : "public splice(list , value , index int) : ",
    "right" : "public splice(list , value , index int) : ",
    "info" : "MethodDeclaration[258329-258758]:MethodDeclaration[258329-258758]"
  }, {
    "left" : "public splice(list , value , index int) : ",
    "right" : "public splice(list , value , index int) : ",
    "info" : "MethodDeclaration[258762-259634]:MethodDeclaration[258762-259634]"
  }, {
    "left" : "public subset(list boolean, start int) : ",
    "right" : "public subset(list boolean, start int) : ",
    "info" : "MethodDeclaration[259638-259754]:MethodDeclaration[259638-259754]"
  }, {
    "left" : "public subset(list boolean, start int, count int) : ",
    "right" : "public subset(list boolean, start int, count int) : ",
    "info" : "MethodDeclaration[259757-260959]:MethodDeclaration[259757-260959]"
  }, {
    "left" : "public subset(list byte, start int) : ",
    "right" : "public subset(list byte, start int) : ",
    "info" : "MethodDeclaration[260963-261073]:MethodDeclaration[260963-261073]"
  }, {
    "left" : "public subset(list byte, start int, count int) : ",
    "right" : "public subset(list byte, start int, count int) : ",
    "info" : "MethodDeclaration[261077-261254]:MethodDeclaration[261077-261254]"
  }, {
    "left" : "public subset(list char, start int) : ",
    "right" : "public subset(list char, start int) : ",
    "info" : "MethodDeclaration[261259-261369]:MethodDeclaration[261259-261369]"
  }, {
    "left" : "public subset(list char, start int, count int) : ",
    "right" : "public subset(list char, start int, count int) : ",
    "info" : "MethodDeclaration[261373-261550]:MethodDeclaration[261373-261550]"
  }, {
    "left" : "public subset(list int, start int) : ",
    "right" : "public subset(list int, start int) : ",
    "info" : "MethodDeclaration[261554-261662]:MethodDeclaration[261554-261662]"
  }, {
    "left" : "public subset(list int, start int, count int) : ",
    "right" : "public subset(list int, start int, count int) : ",
    "info" : "MethodDeclaration[261666-261839]:MethodDeclaration[261666-261839]"
  }, {
    "left" : "public subset(list float, start int) : ",
    "right" : "public subset(list float, start int) : ",
    "info" : "MethodDeclaration[261843-261955]:MethodDeclaration[261843-261955]"
  }, {
    "left" : "public subset(list float, start int, count int) : ",
    "right" : "public subset(list float, start int, count int) : ",
    "info" : "MethodDeclaration[261959-262140]:MethodDeclaration[261959-262140]"
  }, {
    "left" : "public subset(list , start int) : ",
    "right" : "public subset(list , start int) : ",
    "info" : "MethodDeclaration[262145-262259]:MethodDeclaration[262145-262259]"
  }, {
    "left" : "public subset(list , start int, count int) : ",
    "right" : "public subset(list , start int, count int) : ",
    "info" : "MethodDeclaration[262263-262448]:MethodDeclaration[262263-262448]"
  }, {
    "left" : "public subset(list , start int) : ",
    "right" : "public subset(list , start int) : ",
    "info" : "MethodDeclaration[262453-262598]:MethodDeclaration[262453-262598]"
  }, {
    "left" : "public subset(list , start int, count int) : ",
    "right" : "public subset(list , start int, count int) : ",
    "info" : "MethodDeclaration[262602-262856]:MethodDeclaration[262602-262856]"
  }, {
    "left" : "public concat(a boolean, b boolean) : ",
    "right" : "public concat(a boolean, b boolean) : ",
    "info" : "MethodDeclaration[262860-263822]:MethodDeclaration[262860-263822]"
  }, {
    "left" : "public concat(a byte, b byte) : ",
    "right" : "public concat(a byte, b byte) : ",
    "info" : "MethodDeclaration[263826-264034]:MethodDeclaration[263826-264034]"
  }, {
    "left" : "public concat(a char, b char) : ",
    "right" : "public concat(a char, b char) : ",
    "info" : "MethodDeclaration[264038-264246]:MethodDeclaration[264038-264246]"
  }, {
    "left" : "public concat(a int, b int) : ",
    "right" : "public concat(a int, b int) : ",
    "info" : "MethodDeclaration[264250-264453]:MethodDeclaration[264250-264453]"
  }, {
    "left" : "public concat(a float, b float) : ",
    "right" : "public concat(a float, b float) : ",
    "info" : "MethodDeclaration[264457-264670]:MethodDeclaration[264457-264670]"
  }, {
    "left" : "public concat(a , b ) : ",
    "right" : "public concat(a , b ) : ",
    "info" : "MethodDeclaration[264674-264892]:MethodDeclaration[264674-264892]"
  }, {
    "left" : "public concat(a , b ) : ",
    "right" : "public concat(a , b ) : ",
    "info" : "MethodDeclaration[264896-265271]:MethodDeclaration[264896-265271]"
  }, {
    "left" : "public reverse(list boolean) : ",
    "right" : "public reverse(list boolean) : ",
    "info" : "MethodDeclaration[265281-265810]:MethodDeclaration[265281-265810]"
  }, {
    "left" : "public reverse(list byte) : ",
    "right" : "public reverse(list byte) : ",
    "info" : "MethodDeclaration[265814-266051]:MethodDeclaration[265814-266051]"
  }, {
    "left" : "public reverse(list char) : ",
    "right" : "public reverse(list char) : ",
    "info" : "MethodDeclaration[266055-266292]:MethodDeclaration[266055-266292]"
  }, {
    "left" : "public reverse(list int) : ",
    "right" : "public reverse(list int) : ",
    "info" : "MethodDeclaration[266296-266529]:MethodDeclaration[266296-266529]"
  }, {
    "left" : "public reverse(list float) : ",
    "right" : "public reverse(list float) : ",
    "info" : "MethodDeclaration[266533-266774]:MethodDeclaration[266533-266774]"
  }, {
    "left" : "public reverse(list ) : ",
    "right" : "public reverse(list ) : ",
    "info" : "MethodDeclaration[266778-267023]:MethodDeclaration[266778-267023]"
  }, {
    "left" : "public reverse(list ) : ",
    "right" : "public reverse(list ) : ",
    "info" : "MethodDeclaration[267027-267356]:MethodDeclaration[267027-267356]"
  }, {
    "left" : "public trim(str ) : ",
    "right" : "public trim(str ) : ",
    "info" : "MethodDeclaration[267443-267996]:MethodDeclaration[267443-267996]"
  }, {
    "left" : "public trim(array ) : ",
    "right" : "public trim(array ) : ",
    "info" : "MethodDeclaration[268000-268314]:MethodDeclaration[268000-268314]"
  }, {
    "left" : "public join(list , separator char) : ",
    "right" : "public join(list , separator char) : ",
    "info" : "MethodDeclaration[268319-269069]:MethodDeclaration[268319-269069]"
  }, {
    "left" : "public join(list , separator ) : ",
    "right" : "public join(list , separator ) : ",
    "info" : "MethodDeclaration[269074-269324]:MethodDeclaration[269074-269324]"
  }, {
    "left" : "public splitTokens(value ) : ",
    "right" : "public splitTokens(value ) : ",
    "info" : "MethodDeclaration[269329-269426]:MethodDeclaration[269329-269426]"
  }, {
    "left" : "public splitTokens(value , delim ) : ",
    "right" : "public splitTokens(value , delim ) : ",
    "info" : "MethodDeclaration[269431-270691]:MethodDeclaration[269431-270691]"
  }, {
    "left" : "public split(value , delim char) : ",
    "right" : "public split(value , delim char) : ",
    "info" : "MethodDeclaration[270696-273636]:MethodDeclaration[270696-273636]"
  }, {
    "left" : "public split(value , delim ) : ",
    "right" : "public split(value , delim ) : ",
    "info" : "MethodDeclaration[273641-274086]:MethodDeclaration[273641-274086]"
  }, {
    "left" : "matchPatterns",
    "right" : "matchPatterns",
    "info" : "FieldDeclaration[274091-274147]:FieldDeclaration[274091-274147]"
  }, {
    "left" : "package matchPattern(regexp ) : ",
    "right" : "package matchPattern(regexp ) : ",
    "info" : "MethodDeclaration[274151-275110]:MethodDeclaration[274151-275110]"
  }, {
    "left" : "public match(str , regexp ) : ",
    "right" : "public match(str , regexp ) : ",
    "info" : "MethodDeclaration[275115-277104]:MethodDeclaration[275115-277104]"
  }, {
    "left" : "public matchAll(str , regexp ) : ",
    "right" : "public matchAll(str , regexp ) : ",
    "info" : "MethodDeclaration[277109-279462]:MethodDeclaration[277109-279462]"
  }, {
    "left" : "public parseBoolean(what int) : boolean",
    "right" : "public parseBoolean(what int) : boolean",
    "info" : "MethodDeclaration[279860-280286]:MethodDeclaration[279860-280286]"
  }, {
    "left" : "public parseBoolean(what ) : boolean",
    "right" : "public parseBoolean(what ) : boolean",
    "info" : "MethodDeclaration[280434-280665]:MethodDeclaration[280434-280665]"
  }, {
    "left" : "public parseBoolean(what int) : ",
    "right" : "public parseBoolean(what int) : ",
    "info" : "MethodDeclaration[281585-281983]:MethodDeclaration[281585-281983]"
  }, {
    "left" : "public parseBoolean(what ) : ",
    "right" : "public parseBoolean(what ) : ",
    "info" : "MethodDeclaration[282293-282529]:MethodDeclaration[282293-282529]"
  }, {
    "left" : "public parseByte(what boolean) : byte",
    "right" : "public parseByte(what boolean) : byte",
    "info" : "MethodDeclaration[282607-282692]:MethodDeclaration[282607-282692]"
  }, {
    "left" : "public parseByte(what char) : byte",
    "right" : "public parseByte(what char) : byte",
    "info" : "MethodDeclaration[282696-282771]:MethodDeclaration[282696-282771]"
  }, {
    "left" : "public parseByte(what int) : byte",
    "right" : "public parseByte(what int) : byte",
    "info" : "MethodDeclaration[282775-282849]:MethodDeclaration[282775-282849]"
  }, {
    "left" : "public parseByte(what float) : byte",
    "right" : "public parseByte(what float) : byte",
    "info" : "MethodDeclaration[282853-282929]:MethodDeclaration[282853-282929]"
  }, {
    "left" : "public parseByte(what boolean) : ",
    "right" : "public parseByte(what boolean) : ",
    "info" : "MethodDeclaration[283147-283364]:MethodDeclaration[283147-283364]"
  }, {
    "left" : "public parseByte(what char) : ",
    "right" : "public parseByte(what char) : ",
    "info" : "MethodDeclaration[283368-283575]:MethodDeclaration[283368-283575]"
  }, {
    "left" : "public parseByte(what int) : ",
    "right" : "public parseByte(what int) : ",
    "info" : "MethodDeclaration[283579-283785]:MethodDeclaration[283579-283785]"
  }, {
    "left" : "public parseByte(what float) : ",
    "right" : "public parseByte(what float) : ",
    "info" : "MethodDeclaration[283789-283997]:MethodDeclaration[283789-283997]"
  }, {
    "left" : "public parseChar(what byte) : char",
    "right" : "public parseChar(what byte) : char",
    "info" : "MethodDeclaration[284442-284526]:MethodDeclaration[284442-284526]"
  }, {
    "left" : "public parseChar(what int) : char",
    "right" : "public parseChar(what int) : char",
    "info" : "MethodDeclaration[284530-284604]:MethodDeclaration[284530-284604]"
  }, {
    "left" : "public parseChar(what byte) : ",
    "right" : "public parseChar(what byte) : ",
    "info" : "MethodDeclaration[285142-285358]:MethodDeclaration[285142-285358]"
  }, {
    "left" : "public parseChar(what int) : ",
    "right" : "public parseChar(what int) : ",
    "info" : "MethodDeclaration[285362-285568]:MethodDeclaration[285362-285568]"
  }, {
    "left" : "public parseInt(what boolean) : int",
    "right" : "public parseInt(what boolean) : int",
    "info" : "MethodDeclaration[286130-286207]:MethodDeclaration[286130-286207]"
  }, {
    "left" : "public parseInt(what byte) : int",
    "right" : "public parseInt(what byte) : int",
    "info" : "MethodDeclaration[286211-286356]:MethodDeclaration[286211-286356]"
  }, {
    "left" : "public parseInt(what char) : int",
    "right" : "public parseInt(what char) : int",
    "info" : "MethodDeclaration[286360-286656]:MethodDeclaration[286360-286656]"
  }, {
    "left" : "public parseInt(what float) : int",
    "right" : "public parseInt(what float) : int",
    "info" : "MethodDeclaration[286660-286785]:MethodDeclaration[286660-286785]"
  }, {
    "left" : "public parseInt(what ) : int",
    "right" : "public parseInt(what ) : int",
    "info" : "MethodDeclaration[286789-286952]:MethodDeclaration[286789-286952]"
  }, {
    "left" : "public parseInt(what , otherwise int) : int",
    "right" : "public parseInt(what , otherwise int) : int",
    "info" : "MethodDeclaration[286956-287409]:MethodDeclaration[286956-287409]"
  }, {
    "left" : "public parseInt(what boolean) : ",
    "right" : "public parseInt(what boolean) : ",
    "info" : "MethodDeclaration[287487-287682]:MethodDeclaration[287487-287682]"
  }, {
    "left" : "public parseInt(what byte) : ",
    "right" : "public parseInt(what byte) : ",
    "info" : "MethodDeclaration[287686-287901]:MethodDeclaration[287686-287901]"
  }, {
    "left" : "public parseInt(what char) : ",
    "right" : "public parseInt(what char) : ",
    "info" : "MethodDeclaration[287905-288089]:MethodDeclaration[287905-288089]"
  }, {
    "left" : "public parseInt(what float) : ",
    "right" : "public parseInt(what float) : ",
    "info" : "MethodDeclaration[288093-288283]:MethodDeclaration[288093-288283]"
  }, {
    "left" : "public parseInt(what ) : ",
    "right" : "public parseInt(what ) : ",
    "info" : "MethodDeclaration[288287-288643]:MethodDeclaration[288287-288643]"
  }, {
    "left" : "public parseInt(what , missing int) : ",
    "right" : "public parseInt(what , missing int) : ",
    "info" : "MethodDeclaration[288647-289312]:MethodDeclaration[288647-289312]"
  }, {
    "left" : "public parseFloat(what int) : float",
    "right" : "public parseFloat(what int) : float",
    "info" : "MethodDeclaration[289485-289696]:MethodDeclaration[289485-289696]"
  }, {
    "left" : "public parseFloat(what ) : float",
    "right" : "public parseFloat(what ) : float",
    "info" : "MethodDeclaration[289700-289795]:MethodDeclaration[289700-289795]"
  }, {
    "left" : "public parseFloat(what , otherwise float) : float",
    "right" : "public parseFloat(what , otherwise float) : float",
    "info" : "MethodDeclaration[289799-289989]:MethodDeclaration[289799-289989]"
  }, {
    "left" : "public parseFloat(what byte) : ",
    "right" : "public parseFloat(what byte) : ",
    "info" : "MethodDeclaration[290511-290715]:MethodDeclaration[290511-290715]"
  }, {
    "left" : "public parseFloat(what int) : ",
    "right" : "public parseFloat(what int) : ",
    "info" : "MethodDeclaration[290719-290922]:MethodDeclaration[290719-290922]"
  }, {
    "left" : "public parseFloat(what ) : ",
    "right" : "public parseFloat(what ) : ",
    "info" : "MethodDeclaration[290926-291025]:MethodDeclaration[290926-291025]"
  }, {
    "left" : "public parseFloat(what , missing float) : ",
    "right" : "public parseFloat(what , missing float) : ",
    "info" : "MethodDeclaration[291029-291361]:MethodDeclaration[291029-291361]"
  }, {
    "left" : "public str(x boolean) : ",
    "right" : "public str(x boolean) : ",
    "info" : "MethodDeclaration[291439-291516]:MethodDeclaration[291439-291516]"
  }, {
    "left" : "public str(x byte) : ",
    "right" : "public str(x byte) : ",
    "info" : "MethodDeclaration[291520-291594]:MethodDeclaration[291520-291594]"
  }, {
    "left" : "public str(x char) : ",
    "right" : "public str(x char) : ",
    "info" : "MethodDeclaration[291598-291672]:MethodDeclaration[291598-291672]"
  }, {
    "left" : "public str(x int) : ",
    "right" : "public str(x int) : ",
    "info" : "MethodDeclaration[291676-291749]:MethodDeclaration[291676-291749]"
  }, {
    "left" : "public str(x float) : ",
    "right" : "public str(x float) : ",
    "info" : "MethodDeclaration[291753-291828]:MethodDeclaration[291753-291828]"
  }, {
    "left" : "public str(x boolean) : ",
    "right" : "public str(x boolean) : ",
    "info" : "MethodDeclaration[291906-292078]:MethodDeclaration[291906-292078]"
  }, {
    "left" : "public str(x byte) : ",
    "right" : "public str(x byte) : ",
    "info" : "MethodDeclaration[292082-292251]:MethodDeclaration[292082-292251]"
  }, {
    "left" : "public str(x char) : ",
    "right" : "public str(x char) : ",
    "info" : "MethodDeclaration[292255-292424]:MethodDeclaration[292255-292424]"
  }, {
    "left" : "public str(x int) : ",
    "right" : "public str(x int) : ",
    "info" : "MethodDeclaration[292428-292596]:MethodDeclaration[292428-292596]"
  }, {
    "left" : "public str(x float) : ",
    "right" : "public str(x float) : ",
    "info" : "MethodDeclaration[292600-292770]:MethodDeclaration[292600-292770]"
  }, {
    "left" : "int_nf",
    "right" : "int_nf",
    "info" : "FieldDeclaration[292870-292948]:FieldDeclaration[292870-292948]"
  }, {
    "left" : "int_nf_digits",
    "right" : "int_nf_digits",
    "info" : "FieldDeclaration[292951-292984]:FieldDeclaration[292951-292984]"
  }, {
    "left" : "int_nf_commas",
    "right" : "int_nf_commas",
    "info" : "FieldDeclaration[292987-293024]:FieldDeclaration[292987-293024]"
  }, {
    "left" : "public nf(num int, digits int) : ",
    "right" : "public nf(num int, digits int) : ",
    "info" : "MethodDeclaration[293028-293249]:MethodDeclaration[293028-293249]"
  }, {
    "left" : "public nf(num int, digits int) : ",
    "right" : "public nf(num int, digits int) : ",
    "info" : "MethodDeclaration[293253-294604]:MethodDeclaration[293253-294604]"
  }, {
    "left" : "public nfc(num int) : ",
    "right" : "public nfc(num int) : ",
    "info" : "MethodDeclaration[294606-295512]:MethodDeclaration[294606-295512]"
  }, {
    "left" : "public nfc(num int) : ",
    "right" : "public nfc(num int) : ",
    "info" : "MethodDeclaration[295517-296132]:MethodDeclaration[295517-296132]"
  }, {
    "left" : "public nfs(num int, digits int) : ",
    "right" : "public nfs(num int, digits int) : ",
    "info" : "MethodDeclaration[296368-297229]:MethodDeclaration[296368-297229]"
  }, {
    "left" : "public nfs(num int, digits int) : ",
    "right" : "public nfs(num int, digits int) : ",
    "info" : "MethodDeclaration[297233-297456]:MethodDeclaration[297233-297456]"
  }, {
    "left" : "public nfp(num int, digits int) : ",
    "right" : "public nfp(num int, digits int) : ",
    "info" : "MethodDeclaration[297617-298437]:MethodDeclaration[297617-298437]"
  }, {
    "left" : "public nfp(num int, digits int) : ",
    "right" : "public nfp(num int, digits int) : ",
    "info" : "MethodDeclaration[298441-298664]:MethodDeclaration[298441-298664]"
  }, {
    "left" : "float_nf",
    "right" : "float_nf",
    "info" : "FieldDeclaration[298767-298804]:FieldDeclaration[298767-298804]"
  }, {
    "left" : "float_nf_left",
    "right" : "float_nf_left",
    "info" : "FieldDeclaration[298807-298856]:FieldDeclaration[298807-298856]"
  }, {
    "left" : "float_nf_commas",
    "right" : "float_nf_commas",
    "info" : "FieldDeclaration[298859-298898]:FieldDeclaration[298859-298898]"
  }, {
    "left" : "public nf(num float, left int, right int) : ",
    "right" : "public nf(num float, left int, right int) : ",
    "info" : "MethodDeclaration[298902-299139]:MethodDeclaration[298902-299139]"
  }, {
    "left" : "public nf(num float, left int, right int) : ",
    "right" : "public nf(num float, left int, right int) : ",
    "info" : "MethodDeclaration[299140-299935]:MethodDeclaration[299140-299935]"
  }, {
    "left" : "public nfc(num float, right int) : ",
    "right" : "public nfc(num float, right int) : ",
    "info" : "MethodDeclaration[299937-300277]:MethodDeclaration[299937-300277]"
  }, {
    "left" : "public nfc(num float, right int) : ",
    "right" : "public nfc(num float, right int) : ",
    "info" : "MethodDeclaration[300282-300818]:MethodDeclaration[300282-300818]"
  }, {
    "left" : "public nfs(num float, left int, right int) : ",
    "right" : "public nfs(num float, left int, right int) : ",
    "info" : "MethodDeclaration[300822-301255]:MethodDeclaration[300822-301255]"
  }, {
    "left" : "public nfs(num float, left int, right int) : ",
    "right" : "public nfs(num float, left int, right int) : ",
    "info" : "MethodDeclaration[301259-301398]:MethodDeclaration[301259-301398]"
  }, {
    "left" : "public nfp(num float, left int, right int) : ",
    "right" : "public nfp(num float, left int, right int) : ",
    "info" : "MethodDeclaration[301401-301793]:MethodDeclaration[301401-301793]"
  }, {
    "left" : "public nfp(num float, left int, right int) : ",
    "right" : "public nfp(num float, left int, right int) : ",
    "info" : "MethodDeclaration[301797-301936]:MethodDeclaration[301797-301936]"
  }, {
    "left" : "public hex(value byte) : ",
    "right" : "public hex(value byte) : ",
    "info" : "MethodDeclaration[302037-302843]:MethodDeclaration[302037-302843]"
  }, {
    "left" : "public hex(value char) : ",
    "right" : "public hex(value char) : ",
    "info" : "MethodDeclaration[302847-302921]:MethodDeclaration[302847-302921]"
  }, {
    "left" : "public hex(value int) : ",
    "right" : "public hex(value int) : ",
    "info" : "MethodDeclaration[302925-302998]:MethodDeclaration[302925-302998]"
  }, {
    "left" : "public hex(value int, digits int) : ",
    "right" : "public hex(value int, digits int) : ",
    "info" : "MethodDeclaration[302999-303456]:MethodDeclaration[302999-303456]"
  }, {
    "left" : "public unhex(value ) : int",
    "right" : "public unhex(value ) : int",
    "info" : "MethodDeclaration[303459-304009]:MethodDeclaration[303459-304009]"
  }, {
    "left" : "public binary(value byte) : ",
    "right" : "public binary(value byte) : ",
    "info" : "MethodDeclaration[304019-304226]:MethodDeclaration[304019-304226]"
  }, {
    "left" : "public binary(value char) : ",
    "right" : "public binary(value char) : ",
    "info" : "MethodDeclaration[304230-304477]:MethodDeclaration[304230-304477]"
  }, {
    "left" : "public binary(value int) : ",
    "right" : "public binary(value int) : ",
    "info" : "MethodDeclaration[304481-304794]:MethodDeclaration[304481-304794]"
  }, {
    "left" : "public binary(value int, digits int) : ",
    "right" : "public binary(value int, digits int) : ",
    "info" : "MethodDeclaration[304940-306172]:MethodDeclaration[304940-306172]"
  }, {
    "left" : "public unbinary(value ) : int",
    "right" : "public unbinary(value ) : int",
    "info" : "MethodDeclaration[306176-306682]:MethodDeclaration[306176-306682]"
  }, {
    "left" : "public color(gray int) : int",
    "right" : "public color(gray int) : int",
    "info" : "MethodDeclaration[306886-307787]:MethodDeclaration[306886-307787]"
  }, {
    "left" : "public color(fgray float) : int",
    "right" : "public color(fgray float) : int",
    "info" : "MethodDeclaration[307792-308134]:MethodDeclaration[307792-308134]"
  }, {
    "left" : "public color(gray int, alpha int) : int",
    "right" : "public color(gray int, alpha int) : int",
    "info" : "MethodDeclaration[308139-308711]:MethodDeclaration[308139-308711]"
  }, {
    "left" : "public color(fgray float, falpha float) : int",
    "right" : "public color(fgray float, falpha float) : int",
    "info" : "MethodDeclaration[308716-309116]:MethodDeclaration[308716-309116]"
  }, {
    "left" : "public color(v1 int, v2 int, v3 int) : int",
    "right" : "public color(v1 int, v2 int, v3 int) : int",
    "info" : "MethodDeclaration[309121-309689]:MethodDeclaration[309121-309689]"
  }, {
    "left" : "public color(v1 int, v2 int, v3 int, alpha int) : int",
    "right" : "public color(v1 int, v2 int, v3 int, alpha int) : int",
    "info" : "MethodDeclaration[309694-310114]:MethodDeclaration[309694-310114]"
  }, {
    "left" : "public color(v1 float, v2 float, v3 float) : int",
    "right" : "public color(v1 float, v2 float, v3 float) : int",
    "info" : "MethodDeclaration[310119-310472]:MethodDeclaration[310119-310472]"
  }, {
    "left" : "public color(v1 float, v2 float, v3 float, alpha float) : int",
    "right" : "public color(v1 float, v2 float, v3 float, alpha float) : int",
    "info" : "MethodDeclaration[310477-310925]:MethodDeclaration[310477-310925]"
  }, {
    "left" : "public lerpColor(c1 int, c2 int, amt float) : int",
    "right" : "public lerpColor(c1 int, c2 int, amt float) : int",
    "info" : "MethodDeclaration[310930-311872]:MethodDeclaration[310930-311872]"
  }, {
    "left" : "public blendColor(c1 int, c2 int, mode int) : int",
    "right" : "public blendColor(c1 int, c2 int, mode int) : int",
    "info" : "MethodDeclaration[311877-311981]:MethodDeclaration[311877-311981]"
  }, {
    "left" : "package frameMoved(x int, y int) : void",
    "right" : "package frameMoved(x int, y int) : void",
    "info" : "MethodDeclaration[312054-312238]:MethodDeclaration[312054-312238]"
  }, {
    "left" : "package frameResized(w int, h int) : void",
    "right" : "package frameResized(w int, h int) : void",
    "info" : "MethodDeclaration[312243-312281]:MethodDeclaration[312243-312281]"
  }, {
    "left" : "public main(args ...) : void",
    "right" : "public main(args ...) : void",
    "info" : "MethodDeclaration[312364-316043]:MethodDeclaration[312364-316043]"
  }, {
    "left" : "public main(mainClass ) : void",
    "right" : "public main(mainClass ) : void",
    "info" : "MethodDeclaration[316048-316359]:MethodDeclaration[316048-316359]"
  }, {
    "left" : "public main(mainClass , sketchArgs ...) : void",
    "right" : "public main(mainClass , sketchArgs ...) : void",
    "info" : "MethodDeclaration[316364-317081]:MethodDeclaration[316364-317081]"
  }, {
    "left" : "public runSketch(args , constructedSketch ) : void",
    "right" : "public runSketch(args , constructedSketch ) : void",
    "info" : "MethodDeclaration[317389-317641]:MethodDeclaration[317389-325164]"
  }, {
    "left" : "protected initSurface() : ",
    "right" : "protected initSurface() : ",
    "info" : "MethodDeclaration[325139-326478]:MethodDeclaration[325169-326508]"
  }, {
    "left" : "public setResizable(resizable boolean) : void",
    "right" : "public setResizable(resizable boolean) : void",
    "info" : "MethodDeclaration[325509-325671]:MethodDeclaration[325539-325701]"
  }, {
    "left" : "public setVisible(visible boolean) : void",
    "right" : "public setVisible(visible boolean) : void",
    "info" : "MethodDeclaration[325681-325833]:MethodDeclaration[325711-325863]"
  }, {
    "left" : "public setTitle(title ) : void",
    "right" : "public setTitle(title ) : void",
    "info" : "MethodDeclaration[325843-325984]:MethodDeclaration[325873-326014]"
  }, {
    "left" : "private deprecationWarning(method ) : void",
    "right" : "private deprecationWarning(method ) : void",
    "info" : "MethodDeclaration[325994-326202]:MethodDeclaration[326024-326232]"
  }, {
    "left" : "public hideMenuBar() : void",
    "right" : "public hideMenuBar() : void",
    "info" : "MethodDeclaration[327323-327684]:MethodDeclaration[327353-327714]"
  }, {
    "left" : "protected runSketch(args ...) : void",
    "right" : "protected runSketch(args ...) : void",
    "info" : "MethodDeclaration[327689-328383]:MethodDeclaration[327719-328413]"
  }, {
    "left" : "protected runSketch() : void",
    "right" : "protected runSketch() : void",
    "info" : "MethodDeclaration[328388-328494]:MethodDeclaration[328418-328524]"
  }, {
    "left" : "public beginRecord(renderer , filename ) : ",
    "right" : "public beginRecord(renderer , filename ) : ",
    "info" : "MethodDeclaration[328566-329638]:MethodDeclaration[328596-329668]"
  }, {
    "left" : "public beginRecord(recorder ) : void",
    "right" : "public beginRecord(recorder ) : void",
    "info" : "MethodDeclaration[329643-329850]:MethodDeclaration[329673-329880]"
  }, {
    "left" : "public endRecord() : void",
    "right" : "public endRecord() : void",
    "info" : "MethodDeclaration[329854-330251]:MethodDeclaration[329884-330281]"
  }, {
    "left" : "public beginRaw(renderer , filename ) : ",
    "right" : "public beginRaw(renderer , filename ) : ",
    "info" : "MethodDeclaration[330256-332160]:MethodDeclaration[330286-332190]"
  }, {
    "left" : "public beginRaw(rawGraphics ...) : void",
    "right" : "public beginRaw(rawGraphics ...) : void",
    "info" : "MethodDeclaration[332166-332570]:MethodDeclaration[332196-332600]"
  }, {
    "left" : "public endRaw() : void",
    "right" : "public endRaw() : void",
    "info" : "MethodDeclaration[332575-332914]:MethodDeclaration[332605-332944]"
  }, {
    "left" : "public loadPixels() : void",
    "right" : "public loadPixels() : void",
    "info" : "MethodDeclaration[333168-334254]:MethodDeclaration[333198-334284]"
  }, {
    "left" : "public updatePixels() : void",
    "right" : "public updatePixels() : void",
    "info" : "MethodDeclaration[334257-335362]:MethodDeclaration[334287-335392]"
  }, {
    "left" : "public updatePixels(x1 int, y1 int, x2 int, y2 int) : void",
    "right" : "public updatePixels(x1 int, y1 int, x2 int, y2 int) : void",
    "info" : "MethodDeclaration[335366-335668]:MethodDeclaration[335396-335698]"
  }, {
    "left" : "public beginPGL() : ",
    "right" : "public beginPGL() : ",
    "info" : "MethodDeclaration[335984-336036]:MethodDeclaration[336014-336066]"
  }, {
    "left" : "public endPGL() : void",
    "right" : "public endPGL() : void",
    "info" : "MethodDeclaration[336041-336128]:MethodDeclaration[336071-336158]"
  }, {
    "left" : "public flush() : void",
    "right" : "public flush() : void",
    "info" : "MethodDeclaration[336133-336217]:MethodDeclaration[336163-336247]"
  }, {
    "left" : "public hint(which int) : void",
    "right" : "public hint(which int) : void",
    "info" : "MethodDeclaration[336222-336322]:MethodDeclaration[336252-336352]"
  }, {
    "left" : "public beginShape() : void",
    "right" : "public beginShape() : void",
    "info" : "MethodDeclaration[336327-336477]:MethodDeclaration[336357-336507]"
  }, {
    "left" : "public beginShape(kind int) : void",
    "right" : "public beginShape(kind int) : void",
    "info" : "MethodDeclaration[336482-338675]:MethodDeclaration[336512-338705]"
  }, {
    "left" : "public edge(edge boolean) : void",
    "right" : "public edge(edge boolean) : void",
    "info" : "MethodDeclaration[338680-338917]:MethodDeclaration[338710-338947]"
  }, {
    "left" : "public normal(nx float, ny float, nz float) : void",
    "right" : "public normal(nx float, ny float, nz float) : void",
    "info" : "MethodDeclaration[338922-339791]:MethodDeclaration[338952-339821]"
  }, {
    "left" : "public attrib(name , ) : void",
    "right" : "public attrib(name , ) : void",
    "info" : "MethodDeclaration[339796-339935]:MethodDeclaration[339826-339965]"
  }, {
    "left" : "public attrib(name , ) : void",
    "right" : "public attrib(name , ) : void",
    "info" : "MethodDeclaration[339940-340077]:MethodDeclaration[339970-340107]"
  }, {
    "left" : "public attrib(name , ) : void",
    "right" : "public attrib(name , ) : void",
    "info" : "MethodDeclaration[340082-340223]:MethodDeclaration[340112-340253]"
  }, {
    "left" : "public textureMode(mode int) : void",
    "right" : "public textureMode(mode int) : void",
    "info" : "MethodDeclaration[340228-341069]:MethodDeclaration[340258-341099]"
  }, {
    "left" : "public textureWrap(wrap int) : void",
    "right" : "public textureWrap(wrap int) : void",
    "info" : "MethodDeclaration[341074-341498]:MethodDeclaration[341104-341528]"
  }, {
    "left" : "public texture(image ) : void",
    "right" : "public texture(image ) : void",
    "info" : "MethodDeclaration[341503-342358]:MethodDeclaration[341533-342388]"
  }, {
    "left" : "public noTexture() : void",
    "right" : "public noTexture() : void",
    "info" : "MethodDeclaration[342363-342578]:MethodDeclaration[342393-342608]"
  }, {
    "left" : "public vertex(x float, y float) : void",
    "right" : "public vertex(x float, y float) : void",
    "info" : "MethodDeclaration[342583-342694]:MethodDeclaration[342613-342724]"
  }, {
    "left" : "public vertex(x float, y float, z float) : void",
    "right" : "public vertex(x float, y float, z float) : void",
    "info" : "MethodDeclaration[342699-342825]:MethodDeclaration[342729-342855]"
  }, {
    "left" : "public vertex(v ) : void",
    "right" : "public vertex(v ) : void",
    "info" : "MethodDeclaration[342830-343128]:MethodDeclaration[342860-343158]"
  }, {
    "left" : "public vertex(x float, y float, u float, v float) : void",
    "right" : "public vertex(x float, y float, u float, v float) : void",
    "info" : "MethodDeclaration[343133-343274]:MethodDeclaration[343163-343304]"
  }, {
    "left" : "public vertex(x float, y float, z float, u float, v float) : void",
    "right" : "public vertex(x float, y float, z float, u float, v float) : void",
    "info" : "MethodDeclaration[343277-345001]:MethodDeclaration[343307-345031]"
  }, {
    "left" : "public beginContour() : void",
    "right" : "public beginContour() : void",
    "info" : "MethodDeclaration[345006-345149]:MethodDeclaration[345036-345179]"
  }, {
    "left" : "public endContour() : void",
    "right" : "public endContour() : void",
    "info" : "MethodDeclaration[345154-345291]:MethodDeclaration[345184-345321]"
  }, {
    "left" : "public endShape() : void",
    "right" : "public endShape() : void",
    "info" : "MethodDeclaration[345296-345389]:MethodDeclaration[345326-345419]"
  }, {
    "left" : "public endShape(mode int) : void",
    "right" : "public endShape(mode int) : void",
    "info" : "MethodDeclaration[345394-346132]:MethodDeclaration[345424-346162]"
  }, {
    "left" : "public loadShape(filename ) : ",
    "right" : "public loadShape(filename ) : ",
    "info" : "MethodDeclaration[346137-346360]:MethodDeclaration[346167-346390]"
  }, {
    "left" : "public loadShape(filename , options ...) : ",
    "right" : "public loadShape(filename , options ...) : ",
    "info" : "MethodDeclaration[346365-346497]:MethodDeclaration[346395-346527]"
  }, {
    "left" : "public createShape() : ",
    "right" : "public createShape() : ",
    "info" : "MethodDeclaration[346502-346675]:MethodDeclaration[346532-346705]"
  }, {
    "left" : "public createShape(type int) : ",
    "right" : "public createShape(type int) : ",
    "info" : "MethodDeclaration[346680-346753]:MethodDeclaration[346710-346783]"
  }, {
    "left" : "public createShape(kind int, ) : ",
    "right" : "public createShape(kind int, ) : ",
    "info" : "MethodDeclaration[346758-346997]:MethodDeclaration[346788-347027]"
  }, {
    "left" : "public loadShader(fragFilename ) : ",
    "right" : "public loadShader(fragFilename ) : ",
    "info" : "MethodDeclaration[347002-347366]:MethodDeclaration[347032-347396]"
  }, {
    "left" : "public loadShader(fragFilename , vertFilename ) : ",
    "right" : "public loadShader(fragFilename , vertFilename ) : ",
    "info" : "MethodDeclaration[347371-347561]:MethodDeclaration[347401-347591]"
  }, {
    "left" : "public shader(shader ) : void",
    "right" : "public shader(shader ) : void",
    "info" : "MethodDeclaration[347566-347933]:MethodDeclaration[347596-347963]"
  }, {
    "left" : "public shader(shader , kind int) : void",
    "right" : "public shader(shader , kind int) : void",
    "info" : "MethodDeclaration[347938-348153]:MethodDeclaration[347968-348183]"
  }, {
    "left" : "public resetShader() : void",
    "right" : "public resetShader() : void",
    "info" : "MethodDeclaration[348158-348480]:MethodDeclaration[348188-348510]"
  }, {
    "left" : "public resetShader(kind int) : void",
    "right" : "public resetShader(kind int) : void",
    "info" : "MethodDeclaration[348485-348683]:MethodDeclaration[348515-348713]"
  }, {
    "left" : "public filter(shader ) : void",
    "right" : "public filter(shader ) : void",
    "info" : "MethodDeclaration[348688-348861]:MethodDeclaration[348718-348891]"
  }, {
    "left" : "public clip(a float, b float, c float, d float) : void",
    "right" : "public clip(a float, b float, c float, d float) : void",
    "info" : "MethodDeclaration[349115-349250]:MethodDeclaration[349145-349280]"
  }, {
    "left" : "public noClip() : void",
    "right" : "public noClip() : void",
    "info" : "MethodDeclaration[349297-349384]:MethodDeclaration[349327-349414]"
  }, {
    "left" : "public blendMode(mode int) : void",
    "right" : "public blendMode(mode int) : void",
    "info" : "MethodDeclaration[349389-349753]:MethodDeclaration[349419-349783]"
  }, {
    "left" : "public bezierVertex(x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "right" : "public bezierVertex(x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "info" : "MethodDeclaration[349758-350019]:MethodDeclaration[349788-350049]"
  }, {
    "left" : "public bezierVertex(x2 float, y2 float, z2 float, x3 float, y3 float, z3 float, x4 float, y4 float, z4 float) : void",
    "right" : "public bezierVertex(x2 float, y2 float, z2 float, x3 float, y3 float, z3 float, x4 float, y4 float, z4 float) : void",
    "info" : "MethodDeclaration[350022-351911]:MethodDeclaration[350052-351941]"
  }, {
    "left" : "public quadraticVertex(cx float, cy float, x3 float, y3 float) : void",
    "right" : "public quadraticVertex(cx float, cy float, x3 float, y3 float) : void",
    "info" : "MethodDeclaration[351916-352675]:MethodDeclaration[351946-352705]"
  }, {
    "left" : "public quadraticVertex(cx float, cy float, cz float, x3 float, y3 float, z3 float) : void",
    "right" : "public quadraticVertex(cx float, cy float, cz float, x3 float, y3 float, z3 float) : void",
    "info" : "MethodDeclaration[352680-353043]:MethodDeclaration[352710-353073]"
  }, {
    "left" : "public curveVertex(x float, y float) : void",
    "right" : "public curveVertex(x float, y float) : void",
    "info" : "MethodDeclaration[353047-354585]:MethodDeclaration[353077-354615]"
  }, {
    "left" : "public curveVertex(x float, y float, z float) : void",
    "right" : "public curveVertex(x float, y float, z float) : void",
    "info" : "MethodDeclaration[354590-354788]:MethodDeclaration[354620-354818]"
  }, {
    "left" : "public point(x float, y float) : void",
    "right" : "public point(x float, y float) : void",
    "info" : "MethodDeclaration[354793-355519]:MethodDeclaration[354823-355549]"
  }, {
    "left" : "public point(x float, y float, z float) : void",
    "right" : "public point(x float, y float, z float) : void",
    "info" : "MethodDeclaration[355524-355699]:MethodDeclaration[355554-355729]"
  }, {
    "left" : "public line(x1 float, y1 float, x2 float, y2 float) : void",
    "right" : "public line(x1 float, y1 float, x2 float, y2 float) : void",
    "info" : "MethodDeclaration[355704-356998]:MethodDeclaration[355734-357028]"
  }, {
    "left" : "public line(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float) : void",
    "right" : "public line(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float) : void",
    "info" : "MethodDeclaration[357003-357312]:MethodDeclaration[357033-357342]"
  }, {
    "left" : "public triangle(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float) : void",
    "right" : "public triangle(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float) : void",
    "info" : "MethodDeclaration[357317-358206]:MethodDeclaration[357347-358236]"
  }, {
    "left" : "public quad(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "right" : "public quad(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "info" : "MethodDeclaration[358211-359296]:MethodDeclaration[358241-359326]"
  }, {
    "left" : "public rectMode(mode int) : void",
    "right" : "public rectMode(mode int) : void",
    "info" : "MethodDeclaration[359301-360691]:MethodDeclaration[359331-360721]"
  }, {
    "left" : "public rect(a float, b float, c float, d float) : void",
    "right" : "public rect(a float, b float, c float, d float) : void",
    "info" : "MethodDeclaration[360696-361620]:MethodDeclaration[360726-361650]"
  }, {
    "left" : "public rect(a float, b float, c float, d float, r float) : void",
    "right" : "public rect(a float, b float, c float, d float, r float) : void",
    "info" : "MethodDeclaration[361625-361828]:MethodDeclaration[361655-361858]"
  }, {
    "left" : "public rect(a float, b float, c float, d float, tl float, tr float, br float, bl float) : void",
    "right" : "public rect(a float, b float, c float, d float, tl float, tr float, br float, bl float) : void",
    "info" : "MethodDeclaration[361833-362247]:MethodDeclaration[361863-362277]"
  }, {
    "left" : "public ellipseMode(mode int) : void",
    "right" : "public ellipseMode(mode int) : void",
    "info" : "MethodDeclaration[362252-363392]:MethodDeclaration[362282-363422]"
  }, {
    "left" : "public ellipse(a float, b float, c float, d float) : void",
    "right" : "public ellipse(a float, b float, c float, d float) : void",
    "info" : "MethodDeclaration[363397-364250]:MethodDeclaration[363427-364280]"
  }, {
    "left" : "public arc(a float, b float, c float, d float, start float, stop float) : void",
    "right" : "public arc(a float, b float, c float, d float, start float, stop float) : void",
    "info" : "MethodDeclaration[364255-365427]:MethodDeclaration[364285-365457]"
  }, {
    "left" : "public arc(a float, b float, c float, d float, start float, stop float, mode int) : void",
    "right" : "public arc(a float, b float, c float, d float, start float, stop float, mode int) : void",
    "info" : "MethodDeclaration[365487-365710]:MethodDeclaration[365517-365740]"
  }, {
    "left" : "public box(size float) : void",
    "right" : "public box(size float) : void",
    "info" : "MethodDeclaration[365715-366142]:MethodDeclaration[365745-366172]"
  }, {
    "left" : "public box(w float, h float, d float) : void",
    "right" : "public box(w float, h float, d float) : void",
    "info" : "MethodDeclaration[366147-366438]:MethodDeclaration[366177-366468]"
  }, {
    "left" : "public sphereDetail(res int) : void",
    "right" : "public sphereDetail(res int) : void",
    "info" : "MethodDeclaration[366443-367805]:MethodDeclaration[366473-367835]"
  }, {
    "left" : "public sphereDetail(ures int, vres int) : void",
    "right" : "public sphereDetail(ures int, vres int) : void",
    "info" : "MethodDeclaration[367810-368122]:MethodDeclaration[367840-368152]"
  }, {
    "left" : "public sphere(r float) : void",
    "right" : "public sphere(r float) : void",
    "info" : "MethodDeclaration[368127-369203]:MethodDeclaration[368157-369233]"
  }, {
    "left" : "public bezierPoint(a float, b float, c float, d float, t float) : float",
    "right" : "public bezierPoint(a float, b float, c float, d float, t float) : float",
    "info" : "MethodDeclaration[369208-370949]:MethodDeclaration[369238-370979]"
  }, {
    "left" : "public bezierTangent(a float, b float, c float, d float, t float) : float",
    "right" : "public bezierTangent(a float, b float, c float, d float, t float) : float",
    "info" : "MethodDeclaration[370954-371985]:MethodDeclaration[370984-372015]"
  }, {
    "left" : "public bezierDetail(detail int) : void",
    "right" : "public bezierDetail(detail int) : void",
    "info" : "MethodDeclaration[371990-372701]:MethodDeclaration[372020-372731]"
  }, {
    "left" : "public bezier(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "right" : "public bezier(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "info" : "MethodDeclaration[372706-372994]:MethodDeclaration[372736-373024]"
  }, {
    "left" : "public bezier(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float, x3 float, y3 float, z3 float, x4 float, y4 float, z4 float) : void",
    "right" : "public bezier(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float, x3 float, y3 float, z3 float, x4 float, y4 float, z4 float) : void",
    "info" : "MethodDeclaration[372999-375703]:MethodDeclaration[373029-375733]"
  }, {
    "left" : "public curvePoint(a float, b float, c float, d float, t float) : float",
    "right" : "public curvePoint(a float, b float, c float, d float, t float) : float",
    "info" : "MethodDeclaration[375708-376731]:MethodDeclaration[375738-376761]"
  }, {
    "left" : "public curveTangent(a float, b float, c float, d float, t float) : float",
    "right" : "public curveTangent(a float, b float, c float, d float, t float) : float",
    "info" : "MethodDeclaration[376736-377777]:MethodDeclaration[376766-377807]"
  }, {
    "left" : "public curveDetail(detail int) : void",
    "right" : "public curveDetail(detail int) : void",
    "info" : "MethodDeclaration[377782-378481]:MethodDeclaration[377812-378511]"
  }, {
    "left" : "public curveTightness(tightness float) : void",
    "right" : "public curveTightness(tightness float) : void",
    "info" : "MethodDeclaration[378486-379527]:MethodDeclaration[378516-379557]"
  }, {
    "left" : "public curve(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "right" : "public curve(x1 float, y1 float, x2 float, y2 float, x3 float, y3 float, x4 float, y4 float) : void",
    "info" : "MethodDeclaration[379532-381663]:MethodDeclaration[379562-381693]"
  }, {
    "left" : "public curve(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float, x3 float, y3 float, z3 float, x4 float, y4 float, z4 float) : void",
    "right" : "public curve(x1 float, y1 float, z1 float, x2 float, y2 float, z2 float, x3 float, y3 float, z3 float, x4 float, y4 float, z4 float) : void",
    "info" : "MethodDeclaration[381669-382250]:MethodDeclaration[381699-382280]"
  }, {
    "left" : "public imageMode(mode int) : void",
    "right" : "public imageMode(mode int) : void",
    "info" : "MethodDeclaration[382255-383465]:MethodDeclaration[382285-383495]"
  }, {
    "left" : "public image(img , a float, b float) : void",
    "right" : "public image(img , a float, b float) : void",
    "info" : "MethodDeclaration[383470-385231]:MethodDeclaration[383500-385261]"
  }, {
    "left" : "public image(img , a float, b float, c float, d float) : void",
    "right" : "public image(img , a float, b float, c float, d float) : void",
    "info" : "MethodDeclaration[385236-385491]:MethodDeclaration[385266-385521]"
  }, {
    "left" : "public image(img , a float, b float, c float, d float, u1 int, v1 int, u2 int, v2 int) : void",
    "right" : "public image(img , a float, b float, c float, d float, u1 int, v1 int, u2 int, v2 int) : void",
    "info" : "MethodDeclaration[385496-385978]:MethodDeclaration[385526-386008]"
  }, {
    "left" : "public shapeMode(mode int) : void",
    "right" : "public shapeMode(mode int) : void",
    "info" : "MethodDeclaration[385983-387132]:MethodDeclaration[386013-387162]"
  }, {
    "left" : "public shape(shape ) : void",
    "right" : "public shape(shape ) : void",
    "info" : "MethodDeclaration[387137-387243]:MethodDeclaration[387167-387273]"
  }, {
    "left" : "public shape(shape , x float, y float) : void",
    "right" : "public shape(shape , x float, y float) : void",
    "info" : "MethodDeclaration[387248-388727]:MethodDeclaration[387278-388757]"
  }, {
    "left" : "public shape(shape , a float, b float, c float, d float) : void",
    "right" : "public shape(shape , a float, b float, c float, d float) : void",
    "info" : "MethodDeclaration[388732-389073]:MethodDeclaration[388762-389103]"
  }, {
    "left" : "public textAlign(alignX int) : void",
    "right" : "public textAlign(alignX int) : void",
    "info" : "MethodDeclaration[389078-389196]:MethodDeclaration[389108-389226]"
  }, {
    "left" : "public textAlign(alignX int, alignY int) : void",
    "right" : "public textAlign(alignX int, alignY int) : void",
    "info" : "MethodDeclaration[389201-391321]:MethodDeclaration[389231-391351]"
  }, {
    "left" : "public textAscent() : float",
    "right" : "public textAscent() : float",
    "info" : "MethodDeclaration[391326-391837]:MethodDeclaration[391356-391867]"
  }, {
    "left" : "public textDescent() : float",
    "right" : "public textDescent() : float",
    "info" : "MethodDeclaration[391842-392356]:MethodDeclaration[391872-392386]"
  }, {
    "left" : "public textFont(which ) : void",
    "right" : "public textFont(which ) : void",
    "info" : "MethodDeclaration[392361-393948]:MethodDeclaration[392391-393978]"
  }, {
    "left" : "public textFont(which , size float) : void",
    "right" : "public textFont(which , size float) : void",
    "info" : "MethodDeclaration[393953-394163]:MethodDeclaration[393983-394193]"
  }, {
    "left" : "public textLeading(leading float) : void",
    "right" : "public textLeading(leading float) : void",
    "info" : "MethodDeclaration[394168-394829]:MethodDeclaration[394198-394859]"
  }, {
    "left" : "public textMode(mode int) : void",
    "right" : "public textMode(mode int) : void",
    "info" : "MethodDeclaration[394834-396434]:MethodDeclaration[394864-396464]"
  }, {
    "left" : "public textSize(size float) : void",
    "right" : "public textSize(size float) : void",
    "info" : "MethodDeclaration[396439-397046]:MethodDeclaration[396469-397076]"
  }, {
    "left" : "public textWidth(c char) : float",
    "right" : "public textWidth(c char) : float",
    "info" : "MethodDeclaration[397051-397165]:MethodDeclaration[397081-397195]"
  }, {
    "left" : "public textWidth(str ) : float",
    "right" : "public textWidth(str ) : float",
    "info" : "MethodDeclaration[397170-397677]:MethodDeclaration[397200-397707]"
  }, {
    "left" : "public textWidth(chars , start int, length int) : float",
    "right" : "public textWidth(chars , start int, length int) : float",
    "info" : "MethodDeclaration[397682-397820]:MethodDeclaration[397712-397850]"
  }, {
    "left" : "public text(c char, x float, y float) : void",
    "right" : "public text(c char, x float, y float) : void",
    "info" : "MethodDeclaration[397825-399440]:MethodDeclaration[397855-399470]"
  }, {
    "left" : "public text(c char, x float, y float, z float) : void",
    "right" : "public text(c char, x float, y float, z float) : void",
    "info" : "MethodDeclaration[399445-399626]:MethodDeclaration[399475-399656]"
  }, {
    "left" : "public text(str , x float, y float) : void",
    "right" : "public text(str , x float, y float) : void",
    "info" : "MethodDeclaration[399631-399969]:MethodDeclaration[399661-399999]"
  }, {
    "left" : "public text(chars , start int, stop int, x float, y float) : void",
    "right" : "public text(chars , start int, stop int, x float, y float) : void",
    "info" : "MethodDeclaration[399974-400591]:MethodDeclaration[400004-400621]"
  }, {
    "left" : "public text(str , x float, y float, z float) : void",
    "right" : "public text(str , x float, y float, z float) : void",
    "info" : "MethodDeclaration[400596-400794]:MethodDeclaration[400626-400824]"
  }, {
    "left" : "public text(chars , start int, stop int, x float, y float, z float) : void",
    "right" : "public text(chars , start int, stop int, x float, y float, z float) : void",
    "info" : "MethodDeclaration[400799-401013]:MethodDeclaration[400829-401043]"
  }, {
    "left" : "public text(str , x1 float, y1 float, x2 float, y2 float) : void",
    "right" : "public text(str , x1 float, y1 float, x2 float, y2 float) : void",
    "info" : "MethodDeclaration[401018-402068]:MethodDeclaration[401048-402098]"
  }, {
    "left" : "public text(num int, x float, y float) : void",
    "right" : "public text(num int, x float, y float) : void",
    "info" : "MethodDeclaration[402073-402197]:MethodDeclaration[402103-402227]"
  }, {
    "left" : "public text(num int, x float, y float, z float) : void",
    "right" : "public text(num int, x float, y float, z float) : void",
    "info" : "MethodDeclaration[402202-402341]:MethodDeclaration[402232-402371]"
  }, {
    "left" : "public text(num float, x float, y float) : void",
    "right" : "public text(num float, x float, y float) : void",
    "info" : "MethodDeclaration[402346-402832]:MethodDeclaration[402376-402862]"
  }, {
    "left" : "public text(num float, x float, y float, z float) : void",
    "right" : "public text(num float, x float, y float, z float) : void",
    "info" : "MethodDeclaration[402837-402978]:MethodDeclaration[402867-403008]"
  }, {
    "left" : "public pushMatrix() : void",
    "right" : "public pushMatrix() : void",
    "info" : "MethodDeclaration[402983-403994]:MethodDeclaration[403013-404024]"
  }, {
    "left" : "public popMatrix() : void",
    "right" : "public popMatrix() : void",
    "info" : "MethodDeclaration[403999-404753]:MethodDeclaration[404029-404783]"
  }, {
    "left" : "public translate(x float, y float) : void",
    "right" : "public translate(x float, y float) : void",
    "info" : "MethodDeclaration[404758-406217]:MethodDeclaration[404788-406247]"
  }, {
    "left" : "public translate(x float, y float, z float) : void",
    "right" : "public translate(x float, y float, z float) : void",
    "info" : "MethodDeclaration[406222-406412]:MethodDeclaration[406252-406442]"
  }, {
    "left" : "public rotate(angle float) : void",
    "right" : "public rotate(angle float) : void",
    "info" : "MethodDeclaration[406417-407856]:MethodDeclaration[406447-407886]"
  }, {
    "left" : "public rotateX(angle float) : void",
    "right" : "public rotateX(angle float) : void",
    "info" : "MethodDeclaration[407861-409267]:MethodDeclaration[407891-409297]"
  }, {
    "left" : "public rotateY(angle float) : void",
    "right" : "public rotateY(angle float) : void",
    "info" : "MethodDeclaration[409272-410679]:MethodDeclaration[409302-410709]"
  }, {
    "left" : "public rotateZ(angle float) : void",
    "right" : "public rotateZ(angle float) : void",
    "info" : "MethodDeclaration[410684-412091]:MethodDeclaration[410714-412121]"
  }, {
    "left" : "public rotate(angle float, x float, y float, z float) : void",
    "right" : "public rotate(angle float, x float, y float, z float) : void",
    "info" : "MethodDeclaration[412096-412397]:MethodDeclaration[412126-412427]"
  }, {
    "left" : "public scale(s float...) : void",
    "right" : "public scale(s float...) : void",
    "info" : "MethodDeclaration[412402-413814]:MethodDeclaration[412432-413844]"
  }, {
    "left" : "public scale(x float, y float) : void",
    "right" : "public scale(x float, y float) : void",
    "info" : "MethodDeclaration[413819-414286]:MethodDeclaration[413849-414316]"
  }, {
    "left" : "public scale(x float, y float, z float) : void",
    "right" : "public scale(x float, y float, z float) : void",
    "info" : "MethodDeclaration[414291-414485]:MethodDeclaration[414321-414515]"
  }, {
    "left" : "public shearX(angle float) : void",
    "right" : "public shearX(angle float) : void",
    "info" : "MethodDeclaration[414490-415956]:MethodDeclaration[414520-415986]"
  }, {
    "left" : "public shearY(angle float) : void",
    "right" : "public shearY(angle float) : void",
    "info" : "MethodDeclaration[415961-417427]:MethodDeclaration[415991-417457]"
  }, {
    "left" : "public resetMatrix() : void",
    "right" : "public resetMatrix() : void",
    "info" : "MethodDeclaration[417432-417922]:MethodDeclaration[417462-417952]"
  }, {
    "left" : "public applyMatrix(source ) : void",
    "right" : "public applyMatrix(source ) : void",
    "info" : "MethodDeclaration[417927-418590]:MethodDeclaration[417957-418620]"
  }, {
    "left" : "public applyMatrix(source ) : void",
    "right" : "public applyMatrix(source ) : void",
    "info" : "MethodDeclaration[418595-418725]:MethodDeclaration[418625-418755]"
  }, {
    "left" : "public applyMatrix(n00 float, n01 float, n02 float, n10 float, n11 float, n12 float) : void",
    "right" : "public applyMatrix(n00 float, n01 float, n02 float, n10 float, n11 float, n12 float) : void",
    "info" : "MethodDeclaration[418730-419404]:MethodDeclaration[418760-419434]"
  }, {
    "left" : "public applyMatrix(source ) : void",
    "right" : "public applyMatrix(source ) : void",
    "info" : "MethodDeclaration[419409-419539]:MethodDeclaration[419439-419569]"
  }, {
    "left" : "public applyMatrix(n00 float, n01 float, n02 float, n03 float, n10 float, n11 float, n12 float, n13 float, n20 float, n21 float, n22 float, n23 float, n30 float, n31 float, n32 float, n33 float) : void",
    "right" : "public applyMatrix(n00 float, n01 float, n02 float, n03 float, n10 float, n11 float, n12 float, n13 float, n20 float, n21 float, n22 float, n23 float, n30 float, n31 float, n32 float, n33 float) : void",
    "info" : "MethodDeclaration[419544-420756]:MethodDeclaration[419574-420786]"
  }, {
    "left" : "public getMatrix() : ",
    "right" : "public getMatrix() : ",
    "info" : "MethodDeclaration[420761-420819]:MethodDeclaration[420791-420849]"
  }, {
    "left" : "public getMatrix(target ) : ",
    "right" : "public getMatrix(target ) : ",
    "info" : "MethodDeclaration[420824-421031]:MethodDeclaration[420854-421061]"
  }, {
    "left" : "public getMatrix(target ) : ",
    "right" : "public getMatrix(target ) : ",
    "info" : "MethodDeclaration[421036-421243]:MethodDeclaration[421066-421273]"
  }, {
    "left" : "public setMatrix(source ) : void",
    "right" : "public setMatrix(source ) : void",
    "info" : "MethodDeclaration[421248-421453]:MethodDeclaration[421278-421483]"
  }, {
    "left" : "public setMatrix(source ) : void",
    "right" : "public setMatrix(source ) : void",
    "info" : "MethodDeclaration[421458-421671]:MethodDeclaration[421488-421701]"
  }, {
    "left" : "public setMatrix(source ) : void",
    "right" : "public setMatrix(source ) : void",
    "info" : "MethodDeclaration[421676-421889]:MethodDeclaration[421706-421919]"
  }, {
    "left" : "public printMatrix() : void",
    "right" : "public printMatrix() : void",
    "info" : "MethodDeclaration[421894-422363]:MethodDeclaration[421924-422393]"
  }, {
    "left" : "public beginCamera() : void",
    "right" : "public beginCamera() : void",
    "info" : "MethodDeclaration[422368-423997]:MethodDeclaration[422398-424027]"
  }, {
    "left" : "public endCamera() : void",
    "right" : "public endCamera() : void",
    "info" : "MethodDeclaration[424002-424549]:MethodDeclaration[424032-424579]"
  }, {
    "left" : "public camera() : void",
    "right" : "public camera() : void",
    "info" : "MethodDeclaration[424554-425566]:MethodDeclaration[424584-425596]"
  }, {
    "left" : "public camera(eyeX float, eyeY float, eyeZ float, centerX float, centerY float, centerZ float, upX float, upY float, upZ float) : void",
    "right" : "public camera(eyeX float, eyeY float, eyeZ float, centerX float, centerY float, centerZ float, upX float, upY float, upZ float) : void",
    "info" : "MethodDeclaration[425569-426353]:MethodDeclaration[425599-426383]"
  }, {
    "left" : "public printCamera() : void",
    "right" : "public printCamera() : void",
    "info" : "MethodDeclaration[426356-426782]:MethodDeclaration[426386-426812]"
  }, {
    "left" : "public ortho() : void",
    "right" : "public ortho() : void",
    "info" : "MethodDeclaration[426787-427548]:MethodDeclaration[426817-427578]"
  }, {
    "left" : "public ortho(left float, right float, bottom float, top float) : void",
    "right" : "public ortho(left float, right float, bottom float, top float) : void",
    "info" : "MethodDeclaration[427553-427973]:MethodDeclaration[427583-428003]"
  }, {
    "left" : "public ortho(left float, right float, bottom float, top float, near float, far float) : void",
    "right" : "public ortho(left float, right float, bottom float, top float, near float, far float) : void",
    "info" : "MethodDeclaration[427978-428389]:MethodDeclaration[428008-428419]"
  }, {
    "left" : "public perspective() : void",
    "right" : "public perspective() : void",
    "info" : "MethodDeclaration[428394-429379]:MethodDeclaration[428424-429409]"
  }, {
    "left" : "public perspective(fovy float, aspect float, zNear float, zFar float) : void",
    "right" : "public perspective(fovy float, aspect float, zNear float, zFar float) : void",
    "info" : "MethodDeclaration[429384-429824]:MethodDeclaration[429414-429854]"
  }, {
    "left" : "public frustum(left float, right float, bottom float, top float, near float, far float) : void",
    "right" : "public frustum(left float, right float, bottom float, top float, near float, far float) : void",
    "info" : "MethodDeclaration[429829-431001]:MethodDeclaration[429859-431031]"
  }, {
    "left" : "public printProjection() : void",
    "right" : "public printProjection() : void",
    "info" : "MethodDeclaration[431006-431463]:MethodDeclaration[431036-431493]"
  }, {
    "left" : "public screenX(x float, y float) : float",
    "right" : "public screenX(x float, y float) : float",
    "info" : "MethodDeclaration[431468-431998]:MethodDeclaration[431498-432028]"
  }, {
    "left" : "public screenY(x float, y float) : float",
    "right" : "public screenY(x float, y float) : float",
    "info" : "MethodDeclaration[432003-432533]:MethodDeclaration[432033-432563]"
  }, {
    "left" : "public screenX(x float, y float, z float) : float",
    "right" : "public screenX(x float, y float, z float) : float",
    "info" : "MethodDeclaration[432538-432677]:MethodDeclaration[432568-432707]"
  }, {
    "left" : "public screenY(x float, y float, z float) : float",
    "right" : "public screenY(x float, y float, z float) : float",
    "info" : "MethodDeclaration[432682-432821]:MethodDeclaration[432712-432851]"
  }, {
    "left" : "public screenZ(x float, y float, z float) : float",
    "right" : "public screenZ(x float, y float, z float) : float",
    "info" : "MethodDeclaration[432826-433411]:MethodDeclaration[432856-433441]"
  }, {
    "left" : "public modelX(x float, y float, z float) : float",
    "right" : "public modelX(x float, y float, z float) : float",
    "info" : "MethodDeclaration[433416-434639]:MethodDeclaration[433446-434669]"
  }, {
    "left" : "public modelY(x float, y float, z float) : float",
    "right" : "public modelY(x float, y float, z float) : float",
    "info" : "MethodDeclaration[434644-435868]:MethodDeclaration[434674-435898]"
  }, {
    "left" : "public modelZ(x float, y float, z float) : float",
    "right" : "public modelZ(x float, y float, z float) : float",
    "info" : "MethodDeclaration[435873-437097]:MethodDeclaration[435903-437127]"
  }, {
    "left" : "public pushStyle() : void",
    "right" : "public pushStyle() : void",
    "info" : "MethodDeclaration[437102-438262]:MethodDeclaration[437132-438292]"
  }, {
    "left" : "public popStyle() : void",
    "right" : "public popStyle() : void",
    "info" : "MethodDeclaration[438267-439033]:MethodDeclaration[438297-439063]"
  }, {
    "left" : "public style(s ...) : void",
    "right" : "public style(s ...) : void",
    "info" : "MethodDeclaration[439038-439132]:MethodDeclaration[439068-439162]"
  }, {
    "left" : "public strokeWeight(weight float) : void",
    "right" : "public strokeWeight(weight float) : void",
    "info" : "MethodDeclaration[439137-440233]:MethodDeclaration[439167-440263]"
  }, {
    "left" : "public strokeJoin(join int) : void",
    "right" : "public strokeJoin(join int) : void",
    "info" : "MethodDeclaration[440238-441139]:MethodDeclaration[440268-441169]"
  }, {
    "left" : "public strokeCap(cap int) : void",
    "right" : "public strokeCap(cap int) : void",
    "info" : "MethodDeclaration[441144-442072]:MethodDeclaration[441174-442102]"
  }, {
    "left" : "public noStroke() : void",
    "right" : "public noStroke() : void",
    "info" : "MethodDeclaration[442077-442565]:MethodDeclaration[442107-442595]"
  }, {
    "left" : "public stroke(rgb int) : void",
    "right" : "public stroke(rgb int) : void",
    "info" : "MethodDeclaration[442570-444138]:MethodDeclaration[442600-444168]"
  }, {
    "left" : "public stroke(rgb int, alpha float) : void",
    "right" : "public stroke(rgb int, alpha float) : void",
    "info" : "MethodDeclaration[444143-444322]:MethodDeclaration[444173-444352]"
  }, {
    "left" : "public stroke(gray float) : void",
    "right" : "public stroke(gray float) : void",
    "info" : "MethodDeclaration[444327-444503]:MethodDeclaration[444357-444533]"
  }, {
    "left" : "public stroke(gray float, alpha float) : void",
    "right" : "public stroke(gray float, alpha float) : void",
    "info" : "MethodDeclaration[444508-444640]:MethodDeclaration[444538-444670]"
  }, {
    "left" : "public stroke(v1 float, v2 float, v3 float) : void",
    "right" : "public stroke(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[444645-445034]:MethodDeclaration[444675-445064]"
  }, {
    "left" : "public stroke(v1 float, v2 float, v3 float, alpha float) : void",
    "right" : "public stroke(v1 float, v2 float, v3 float, alpha float) : void",
    "info" : "MethodDeclaration[445039-445201]:MethodDeclaration[445069-445231]"
  }, {
    "left" : "public noTint() : void",
    "right" : "public noTint() : void",
    "info" : "MethodDeclaration[445206-445697]:MethodDeclaration[445236-445727]"
  }, {
    "left" : "public tint(rgb int) : void",
    "right" : "public tint(rgb int) : void",
    "info" : "MethodDeclaration[445702-447292]:MethodDeclaration[445732-447322]"
  }, {
    "left" : "public tint(rgb int, alpha float) : void",
    "right" : "public tint(rgb int, alpha float) : void",
    "info" : "MethodDeclaration[447297-447469]:MethodDeclaration[447327-447499]"
  }, {
    "left" : "public tint(gray float) : void",
    "right" : "public tint(gray float) : void",
    "info" : "MethodDeclaration[447474-447644]:MethodDeclaration[447504-447674]"
  }, {
    "left" : "public tint(gray float, alpha float) : void",
    "right" : "public tint(gray float, alpha float) : void",
    "info" : "MethodDeclaration[447649-447775]:MethodDeclaration[447679-447805]"
  }, {
    "left" : "public tint(v1 float, v2 float, v3 float) : void",
    "right" : "public tint(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[447778-448126]:MethodDeclaration[447808-448156]"
  }, {
    "left" : "public tint(v1 float, v2 float, v3 float, alpha float) : void",
    "right" : "public tint(v1 float, v2 float, v3 float, alpha float) : void",
    "info" : "MethodDeclaration[448131-448287]:MethodDeclaration[448161-448317]"
  }, {
    "left" : "public noFill() : void",
    "right" : "public noFill() : void",
    "info" : "MethodDeclaration[448292-448790]:MethodDeclaration[448322-448820]"
  }, {
    "left" : "public fill(rgb int) : void",
    "right" : "public fill(rgb int) : void",
    "info" : "MethodDeclaration[448795-450455]:MethodDeclaration[448825-450485]"
  }, {
    "left" : "public fill(rgb int, alpha float) : void",
    "right" : "public fill(rgb int, alpha float) : void",
    "info" : "MethodDeclaration[450460-450631]:MethodDeclaration[450490-450661]"
  }, {
    "left" : "public fill(gray float) : void",
    "right" : "public fill(gray float) : void",
    "info" : "MethodDeclaration[450636-450812]:MethodDeclaration[450666-450842]"
  }, {
    "left" : "public fill(gray float, alpha float) : void",
    "right" : "public fill(gray float, alpha float) : void",
    "info" : "MethodDeclaration[450817-450943]:MethodDeclaration[450847-450973]"
  }, {
    "left" : "public fill(v1 float, v2 float, v3 float) : void",
    "right" : "public fill(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[450948-451304]:MethodDeclaration[450978-451334]"
  }, {
    "left" : "public fill(v1 float, v2 float, v3 float, alpha float) : void",
    "right" : "public fill(v1 float, v2 float, v3 float, alpha float) : void",
    "info" : "MethodDeclaration[451309-451465]:MethodDeclaration[451339-451495]"
  }, {
    "left" : "public ambient(rgb int) : void",
    "right" : "public ambient(rgb int) : void",
    "info" : "MethodDeclaration[451470-452451]:MethodDeclaration[451500-452481]"
  }, {
    "left" : "public ambient(gray float) : void",
    "right" : "public ambient(gray float) : void",
    "info" : "MethodDeclaration[452454-452635]:MethodDeclaration[452484-452665]"
  }, {
    "left" : "public ambient(v1 float, v2 float, v3 float) : void",
    "right" : "public ambient(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[452638-452995]:MethodDeclaration[452668-453025]"
  }, {
    "left" : "public specular(rgb int) : void",
    "right" : "public specular(rgb int) : void",
    "info" : "MethodDeclaration[453000-453921]:MethodDeclaration[453030-453951]"
  }, {
    "left" : "public specular(gray float) : void",
    "right" : "public specular(gray float) : void",
    "info" : "MethodDeclaration[453924-454101]:MethodDeclaration[453954-454131]"
  }, {
    "left" : "public specular(v1 float, v2 float, v3 float) : void",
    "right" : "public specular(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[454104-454464]:MethodDeclaration[454134-454494]"
  }, {
    "left" : "public shininess(shine float) : void",
    "right" : "public shininess(shine float) : void",
    "info" : "MethodDeclaration[454469-455148]:MethodDeclaration[454499-455178]"
  }, {
    "left" : "public emissive(rgb int) : void",
    "right" : "public emissive(rgb int) : void",
    "info" : "MethodDeclaration[455153-455838]:MethodDeclaration[455183-455868]"
  }, {
    "left" : "public emissive(gray float) : void",
    "right" : "public emissive(gray float) : void",
    "info" : "MethodDeclaration[455843-456024]:MethodDeclaration[455873-456054]"
  }, {
    "left" : "public emissive(v1 float, v2 float, v3 float) : void",
    "right" : "public emissive(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[456029-456397]:MethodDeclaration[456059-456427]"
  }, {
    "left" : "public lights() : void",
    "right" : "public lights() : void",
    "info" : "MethodDeclaration[456402-457481]:MethodDeclaration[456432-457511]"
  }, {
    "left" : "public noLights() : void",
    "right" : "public noLights() : void",
    "info" : "MethodDeclaration[457486-458045]:MethodDeclaration[457516-458075]"
  }, {
    "left" : "public ambientLight(v1 float, v2 float, v3 float) : void",
    "right" : "public ambientLight(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[458050-459454]:MethodDeclaration[458080-459484]"
  }, {
    "left" : "public ambientLight(v1 float, v2 float, v3 float, x float, y float, z float) : void",
    "right" : "public ambientLight(v1 float, v2 float, v3 float, x float, y float, z float) : void",
    "info" : "MethodDeclaration[459459-459816]:MethodDeclaration[459489-459846]"
  }, {
    "left" : "public directionalLight(v1 float, v2 float, v3 float, nx float, ny float, nz float) : void",
    "right" : "public directionalLight(v1 float, v2 float, v3 float, nx float, ny float, nz float) : void",
    "info" : "MethodDeclaration[459821-461698]:MethodDeclaration[459851-461728]"
  }, {
    "left" : "public pointLight(v1 float, v2 float, v3 float, x float, y float, z float) : void",
    "right" : "public pointLight(v1 float, v2 float, v3 float, x float, y float, z float) : void",
    "info" : "MethodDeclaration[461703-463171]:MethodDeclaration[461733-463201]"
  }, {
    "left" : "public spotLight(v1 float, v2 float, v3 float, x float, y float, z float, nx float, ny float, nz float, angle float, concentration float) : void",
    "right" : "public spotLight(v1 float, v2 float, v3 float, x float, y float, z float, nx float, ny float, nz float, angle float, concentration float) : void",
    "info" : "MethodDeclaration[463176-465176]:MethodDeclaration[463206-465206]"
  }, {
    "left" : "public lightFalloff(constant float, linear float, quadratic float) : void",
    "right" : "public lightFalloff(constant float, linear float, quadratic float) : void",
    "info" : "MethodDeclaration[465181-466926]:MethodDeclaration[465211-466956]"
  }, {
    "left" : "public lightSpecular(v1 float, v2 float, v3 float) : void",
    "right" : "public lightSpecular(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[466931-468290]:MethodDeclaration[466961-468320]"
  }, {
    "left" : "public background(rgb int) : void",
    "right" : "public background(rgb int) : void",
    "info" : "MethodDeclaration[468295-470140]:MethodDeclaration[468325-470170]"
  }, {
    "left" : "public background(rgb int, alpha float) : void",
    "right" : "public background(rgb int, alpha float) : void",
    "info" : "MethodDeclaration[470145-470340]:MethodDeclaration[470175-470370]"
  }, {
    "left" : "public background(gray float) : void",
    "right" : "public background(gray float) : void",
    "info" : "MethodDeclaration[470345-470533]:MethodDeclaration[470375-470563]"
  }, {
    "left" : "public background(gray float, alpha float) : void",
    "right" : "public background(gray float, alpha float) : void",
    "info" : "MethodDeclaration[470538-470682]:MethodDeclaration[470568-470712]"
  }, {
    "left" : "public background(v1 float, v2 float, v3 float) : void",
    "right" : "public background(v1 float, v2 float, v3 float) : void",
    "info" : "MethodDeclaration[470687-471073]:MethodDeclaration[470717-471103]"
  }, {
    "left" : "public background(v1 float, v2 float, v3 float, alpha float) : void",
    "right" : "public background(v1 float, v2 float, v3 float, alpha float) : void",
    "info" : "MethodDeclaration[471078-471252]:MethodDeclaration[471108-471282]"
  }, {
    "left" : "public clear() : void",
    "right" : "public clear() : void",
    "info" : "MethodDeclaration[471257-471380]:MethodDeclaration[471287-471410]"
  }, {
    "left" : "public background(image ) : void",
    "right" : "public background(image ) : void",
    "info" : "MethodDeclaration[471385-472219]:MethodDeclaration[471415-472249]"
  }, {
    "left" : "public colorMode(mode int) : void",
    "right" : "public colorMode(mode int) : void",
    "info" : "MethodDeclaration[472224-473293]:MethodDeclaration[472254-473323]"
  }, {
    "left" : "public colorMode(mode int, max float) : void",
    "right" : "public colorMode(mode int, max float) : void",
    "info" : "MethodDeclaration[473298-473488]:MethodDeclaration[473328-473518]"
  }, {
    "left" : "public colorMode(mode int, max1 float, max2 float, max3 float) : void",
    "right" : "public colorMode(mode int, max1 float, max2 float, max3 float) : void",
    "info" : "MethodDeclaration[473493-473940]:MethodDeclaration[473523-473970]"
  }, {
    "left" : "public colorMode(mode int, max1 float, max2 float, max3 float, maxA float) : void",
    "right" : "public colorMode(mode int, max1 float, max2 float, max3 float, maxA float) : void",
    "info" : "MethodDeclaration[473945-474226]:MethodDeclaration[473975-474256]"
  }, {
    "left" : "public alpha(rgb int) : float",
    "right" : "public alpha(rgb int) : float",
    "info" : "MethodDeclaration[474231-474737]:MethodDeclaration[474261-474767]"
  }, {
    "left" : "public red(rgb int) : float",
    "right" : "public red(rgb int) : float",
    "info" : "MethodDeclaration[474742-475852]:MethodDeclaration[474772-475882]"
  }, {
    "left" : "public green(rgb int) : float",
    "right" : "public green(rgb int) : float",
    "info" : "MethodDeclaration[475857-476983]:MethodDeclaration[475887-477013]"
  }, {
    "left" : "public blue(rgb int) : float",
    "right" : "public blue(rgb int) : float",
    "info" : "MethodDeclaration[476988-478094]:MethodDeclaration[477018-478124]"
  }, {
    "left" : "public hue(rgb int) : float",
    "right" : "public hue(rgb int) : float",
    "info" : "MethodDeclaration[478099-478599]:MethodDeclaration[478129-478629]"
  }, {
    "left" : "public saturation(rgb int) : float",
    "right" : "public saturation(rgb int) : float",
    "info" : "MethodDeclaration[478604-479125]:MethodDeclaration[478634-479155]"
  }, {
    "left" : "public brightness(rgb int) : float",
    "right" : "public brightness(rgb int) : float",
    "info" : "MethodDeclaration[479130-479656]:MethodDeclaration[479160-479686]"
  }, {
    "left" : "public lerpColor(c1 int, c2 int, amt float, mode int) : int",
    "right" : "public lerpColor(c1 int, c2 int, amt float, mode int) : int",
    "info" : "MethodDeclaration[479661-479941]:MethodDeclaration[479691-479971]"
  }, {
    "left" : "public showDepthWarning(method ) : void",
    "right" : "public showDepthWarning(method ) : void",
    "info" : "MethodDeclaration[479946-480182]:MethodDeclaration[479976-480212]"
  }, {
    "left" : "public showDepthWarningXYZ(method ) : void",
    "right" : "public showDepthWarningXYZ(method ) : void",
    "info" : "MethodDeclaration[480187-480496]:MethodDeclaration[480217-480526]"
  }, {
    "left" : "public showMethodWarning(method ) : void",
    "right" : "public showMethodWarning(method ) : void",
    "info" : "MethodDeclaration[480501-480683]:MethodDeclaration[480531-480713]"
  }, {
    "left" : "public showVariationWarning(str ) : void",
    "right" : "public showVariationWarning(str ) : void",
    "info" : "MethodDeclaration[480688-480995]:MethodDeclaration[480718-481025]"
  }, {
    "left" : "public showMissingWarning(method ) : void",
    "right" : "public showMissingWarning(method ) : void",
    "info" : "MethodDeclaration[481000-481311]:MethodDeclaration[481030-481341]"
  }, {
    "left" : "public get(x int, y int) : int",
    "right" : "public get(x int, y int) : int",
    "info" : "MethodDeclaration[481316-483807]:MethodDeclaration[481346-483837]"
  }, {
    "left" : "public get(x int, y int, w int, h int) : ",
    "right" : "public get(x int, y int, w int, h int) : ",
    "info" : "MethodDeclaration[483812-483998]:MethodDeclaration[483842-484028]"
  }, {
    "left" : "public get() : ",
    "right" : "public get() : ",
    "info" : "MethodDeclaration[484003-484178]:MethodDeclaration[484033-484208]"
  }, {
    "left" : "public copy() : ",
    "right" : "public copy() : ",
    "info" : "MethodDeclaration[484183-484230]:MethodDeclaration[484213-484260]"
  }, {
    "left" : "public set(x int, y int, c int) : void",
    "right" : "public set(x int, y int, c int) : void",
    "info" : "MethodDeclaration[484235-485725]:MethodDeclaration[484265-485755]"
  }, {
    "left" : "public set(x int, y int, img ) : void",
    "right" : "public set(x int, y int, img ) : void",
    "info" : "MethodDeclaration[485730-486128]:MethodDeclaration[485760-486158]"
  }, {
    "left" : "public mask(img ) : void",
    "right" : "public mask(img ) : void",
    "info" : "MethodDeclaration[486133-487867]:MethodDeclaration[486163-487897]"
  }, {
    "left" : "public filter(kind int) : void",
    "right" : "public filter(kind int) : void",
    "info" : "MethodDeclaration[487872-487975]:MethodDeclaration[487902-488005]"
  }, {
    "left" : "public filter(kind int, param float) : void",
    "right" : "public filter(kind int, param float) : void",
    "info" : "MethodDeclaration[487980-490334]:MethodDeclaration[488010-490364]"
  }, {
    "left" : "public copy(sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int) : void",
    "right" : "public copy(sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int) : void",
    "info" : "MethodDeclaration[490339-491700]:MethodDeclaration[490369-491730]"
  }, {
    "left" : "public copy(src , sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int) : void",
    "right" : "public copy(src , sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int) : void",
    "info" : "MethodDeclaration[491703-492039]:MethodDeclaration[491733-492069]"
  }, {
    "left" : "public blend(sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int, mode int) : void",
    "right" : "public blend(sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int, mode int) : void",
    "info" : "MethodDeclaration[492044-492292]:MethodDeclaration[492074-492322]"
  }, {
    "left" : "public blend(src , sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int, mode int) : void",
    "right" : "public blend(src , sx int, sy int, sw int, sh int, dx int, dy int, dw int, dh int, mode int) : void",
    "info" : "MethodDeclaration[492297-495684]:MethodDeclaration[492327-495714]"
  } ],
  "mappings" : [ {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5996-6328]:Block[5996-6328]"
  }, {
    "left" : "String osname = System.getProperty(\"os.name\");",
    "right" : "String osname = System.getProperty(\"os.name\");",
    "info" : "VariableDeclarationStatement[6002-6048]:VariableDeclarationStatement[6002-6048]"
  }, {
    "left" : "if (osname.indexOf(\"Mac\") != -1)",
    "right" : "if (osname.indexOf(\"Mac\") != -1)",
    "info" : "IfStatement[6054-6324]:IfStatement[6054-6324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6087-6120]:Block[6087-6120]"
  }, {
    "left" : "platform = MACOSX;",
    "right" : "platform = MACOSX;",
    "info" : "ExpressionStatement[6095-6113]:ExpressionStatement[6095-6113]"
  }, {
    "left" : "if (osname.indexOf(\"Windows\") != -1)",
    "right" : "if (osname.indexOf(\"Windows\") != -1)",
    "info" : "IfStatement[6126-6324]:IfStatement[6126-6324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6163-6197]:Block[6163-6197]"
  }, {
    "left" : "platform = WINDOWS;",
    "right" : "platform = WINDOWS;",
    "info" : "ExpressionStatement[6171-6190]:ExpressionStatement[6171-6190]"
  }, {
    "left" : "if (osname.equals(\"Linux\"))",
    "right" : "if (osname.equals(\"Linux\"))",
    "info" : "IfStatement[6203-6324]:IfStatement[6203-6324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6231-6287]:Block[6231-6287]"
  }, {
    "left" : "platform = LINUX;",
    "right" : "platform = LINUX;",
    "info" : "ExpressionStatement[6263-6280]:ExpressionStatement[6263-6280]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6293-6324]:Block[6293-6324]"
  }, {
    "left" : "platform = OTHER;",
    "right" : "platform = OTHER;",
    "info" : "ExpressionStatement[6301-6318]:ExpressionStatement[6301-6318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27611-29233]:Block[27611-29233]"
  }, {
    "left" : "defaultSize = true;",
    "right" : "defaultSize = true;",
    "info" : "ExpressionStatement[27898-27917]:ExpressionStatement[27898-27917]"
  }, {
    "left" : "finished = false;",
    "right" : "finished = false;",
    "info" : "ExpressionStatement[27922-27939]:ExpressionStatement[27922-27939]"
  }, {
    "left" : "looping = true;",
    "right" : "looping = true;",
    "info" : "ExpressionStatement[28027-28042]:ExpressionStatement[28027-28042]"
  }, {
    "left" : "redraw = true;",
    "right" : "redraw = true;",
    "info" : "ExpressionStatement[28047-28061]:ExpressionStatement[28047-28061]"
  }, {
    "left" : "firstMouse = true;",
    "right" : "firstMouse = true;",
    "info" : "ExpressionStatement[28098-28116]:ExpressionStatement[28098-28116]"
  }, {
    "left" : "surface.startThread();",
    "right" : "surface.startThread();",
    "info" : "ExpressionStatement[29207-29229]:ExpressionStatement[29207-29229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30232-30950]:Block[30232-30950]"
  }, {
    "left" : "if (insideSettings)",
    "right" : "if (insideSettings)",
    "info" : "IfStatement[30238-30284]:IfStatement[30238-30284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30258-30284]:Block[30258-30284]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[30266-30278]:ReturnStatement[30266-30278]"
  }, {
    "left" : "final String url = \"https://processing.org/reference/\" + method + \"_.html\";",
    "right" : "final String url = \"https://processing.org/reference/\" + method + \"_.html\";",
    "info" : "VariableDeclarationStatement[30289-30364]:VariableDeclarationStatement[30289-30364]"
  }, {
    "left" : "if (!external)",
    "right" : "if (!external)",
    "info" : "IfStatement[30369-30862]:IfStatement[30369-30862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30384-30862]:Block[30384-30862]"
  }, {
    "left" : "StringList argList = new StringList(args);",
    "right" : "StringList argList = new StringList(args);",
    "info" : "VariableDeclarationStatement[30447-30489]:VariableDeclarationStatement[30447-30489]"
  }, {
    "left" : "System.err.println(\"When not using the PDE, \" + method + \"() can only be used inside settings().\");",
    "right" : "System.err.println(\"When not using the PDE, \" + method + \"() can only be used inside settings().\");",
    "info" : "ExpressionStatement[30496-30595]:ExpressionStatement[30496-30595]"
  }, {
    "left" : "System.err.println(\"Remove the \" + method + \"() method from setup(), and add the following:\");",
    "right" : "System.err.println(\"Remove the \" + method + \"() method from setup(), and add the following:\");",
    "info" : "ExpressionStatement[30602-30696]:ExpressionStatement[30602-30696]"
  }, {
    "left" : "System.err.println(\"public void settings() {\");",
    "right" : "System.err.println(\"public void settings() {\");",
    "info" : "ExpressionStatement[30703-30750]:ExpressionStatement[30703-30750]"
  }, {
    "left" : "System.err.println(\"  \" + method + \"(\" + argList.join(\", \") + \");\");",
    "right" : "System.err.println(\"  \" + method + \"(\" + argList.join(\", \") + \");\");",
    "info" : "ExpressionStatement[30757-30825]:ExpressionStatement[30757-30825]"
  }, {
    "left" : "System.err.println(\"}\");",
    "right" : "System.err.println(\"}\");",
    "info" : "ExpressionStatement[30832-30856]:ExpressionStatement[30832-30856]"
  }, {
    "left" : "throw new IllegalStateException(method + \"() cannot be used here, see \" + url);",
    "right" : "throw new IllegalStateException(method + \"() cannot be used here, see \" + url);",
    "info" : "ThrowStatement[30867-30946]:ThrowStatement[30867-30946]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30977-33977]:Block[30977-33977]"
  }, {
    "left" : "insideSettings = true;",
    "right" : "insideSettings = true;",
    "info" : "ExpressionStatement[30983-31005]:ExpressionStatement[30983-31005]"
  }, {
    "left" : "GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();",
    "right" : "GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();",
    "info" : "VariableDeclarationStatement[31413-31488]:VariableDeclarationStatement[31413-31488]"
  }, {
    "left" : "GraphicsDevice device = ge.getDefaultScreenDevice();",
    "right" : "GraphicsDevice device = ge.getDefaultScreenDevice();",
    "info" : "VariableDeclarationStatement[31493-31545]:VariableDeclarationStatement[31493-31545]"
  }, {
    "left" : "displayDevices = ge.getScreenDevices();",
    "right" : "displayDevices = ge.getScreenDevices();",
    "info" : "ExpressionStatement[31550-31589]:ExpressionStatement[31550-31589]"
  }, {
    "left" : "if (display > 0 && display <= displayDevices.length)",
    "right" : "if (display > 0 && display <= displayDevices.length)",
    "info" : "IfStatement[31753-31855]:IfStatement[31753-31855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31806-31855]:Block[31806-31855]"
  }, {
    "left" : "device = displayDevices[display-1];",
    "right" : "device = displayDevices[display-1];",
    "info" : "ExpressionStatement[31814-31849]:ExpressionStatement[31814-31849]"
  }, {
    "left" : "DisplayMode displayMode = device.getDisplayMode();",
    "right" : "DisplayMode displayMode = device.getDisplayMode();",
    "info" : "VariableDeclarationStatement[31932-31982]:VariableDeclarationStatement[31932-31982]"
  }, {
    "left" : "displayWidth = displayMode.getWidth();",
    "right" : "displayWidth = displayMode.getWidth();",
    "info" : "ExpressionStatement[31987-32025]:ExpressionStatement[31987-32025]"
  }, {
    "left" : "displayHeight = displayMode.getHeight();",
    "right" : "displayHeight = displayMode.getHeight();",
    "info" : "ExpressionStatement[32030-32070]:ExpressionStatement[32030-32070]"
  }, {
    "left" : "settings();",
    "right" : "settings();",
    "info" : "ExpressionStatement[32228-32239]:ExpressionStatement[32228-32239]"
  }, {
    "left" : "if (display == SPAN && platform == MACOSX)",
    "right" : "if (display == SPAN && platform == MACOSX)",
    "info" : "IfStatement[32245-33944]:IfStatement[32245-33944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32288-33944]:Block[32288-33944]"
  }, {
    "left" : "Process p = exec(\"defaults\", \"read\", \"com.apple.spaces\", \"spans-displays\");",
    "right" : "Process p = exec(\"defaults\", \"read\", \"com.apple.spaces\", \"spans-displays\");",
    "info" : "VariableDeclarationStatement[32409-32484]:VariableDeclarationStatement[32409-32484]"
  }, {
    "left" : "BufferedReader outReader = createReader(p.getInputStream());",
    "right" : "BufferedReader outReader = createReader(p.getInputStream());",
    "info" : "VariableDeclarationStatement[32491-32551]:VariableDeclarationStatement[32491-32551]"
  }, {
    "left" : "BufferedReader errReader = createReader(p.getErrorStream());",
    "right" : "BufferedReader errReader = createReader(p.getErrorStream());",
    "info" : "VariableDeclarationStatement[32558-32618]:VariableDeclarationStatement[32558-32618]"
  }, {
    "left" : "StringBuilder stdout = new StringBuilder();",
    "right" : "StringBuilder stdout = new StringBuilder();",
    "info" : "VariableDeclarationStatement[32625-32668]:VariableDeclarationStatement[32625-32668]"
  }, {
    "left" : "StringBuilder stderr = new StringBuilder();",
    "right" : "StringBuilder stderr = new StringBuilder();",
    "info" : "VariableDeclarationStatement[32675-32718]:VariableDeclarationStatement[32675-32718]"
  }, {
    "left" : "String line = null;",
    "right" : "String line = null;",
    "info" : "VariableDeclarationStatement[32725-32744]:VariableDeclarationStatement[32725-32744]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[32751-33019]:TryStatement[32751-33019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32755-32958]:Block[32755-32958]"
  }, {
    "left" : "while ((line = outReader.readLine()) != null)",
    "right" : "while ((line = outReader.readLine()) != null)",
    "info" : "WhileStatement[32765-32853]:WhileStatement[32765-32853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32811-32853]:Block[32811-32853]"
  }, {
    "left" : "stdout.append(line);",
    "right" : "stdout.append(line);",
    "info" : "ExpressionStatement[32823-32843]:ExpressionStatement[32823-32843]"
  }, {
    "left" : "while ((line = errReader.readLine()) != null)",
    "right" : "while ((line = errReader.readLine()) != null)",
    "info" : "WhileStatement[32862-32950]:WhileStatement[32862-32950]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32908-32950]:Block[32908-32950]"
  }, {
    "left" : "stderr.append(line);",
    "right" : "stderr.append(line);",
    "info" : "ExpressionStatement[32920-32940]:ExpressionStatement[32920-32940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32981-33019]:Block[32981-33019]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[32991-33011]:ExpressionStatement[32991-33011]"
  }, {
    "left" : "int resultCode = -1;",
    "right" : "int resultCode = -1;",
    "info" : "VariableDeclarationStatement[33027-33047]:VariableDeclarationStatement[33027-33047]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[33054-33136]:TryStatement[33054-33136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33058-33101]:Block[33058-33101]"
  }, {
    "left" : "resultCode = p.waitFor();",
    "right" : "resultCode = p.waitFor();",
    "info" : "ExpressionStatement[33068-33093]:ExpressionStatement[33068-33093]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33133-33136]:Block[33133-33136]"
  }, {
    "left" : "String result = trim(stdout.toString());",
    "right" : "String result = trim(stdout.toString());",
    "info" : "VariableDeclarationStatement[33144-33184]:VariableDeclarationStatement[33144-33184]"
  }, {
    "left" : "if (\"0\".equals(result))",
    "right" : "if (\"0\".equals(result))",
    "info" : "IfStatement[33191-33938]:IfStatement[33191-33938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33215-33693]:Block[33215-33693]"
  }, {
    "left" : "EventQueue.invokeLater(new Runnable() {\n          public void run() {\n            final String msg =\n              \"To use fullScreen(SPAN), first turn off “Displays have separate spaces”\\n\" +\n              \"in System Preferences \\u2192 Mission Control. Then log out and log back in.\";\n            JOptionPane.showMessageDialog(null, msg, \"Apple's Defaults Stink\",\n                                          JOptionPane.WARNING_MESSAGE);\n          }\n        });",
    "right" : "EventQueue.invokeLater(new Runnable() {\n          public void run() {\n            final String msg =\n              \"To use fullScreen(SPAN), first turn off “Displays have separate spaces”\\n\" +\n              \"in System Preferences \\u2192 Mission Control. Then log out and log back in.\";\n            JOptionPane.showMessageDialog(null, msg, \"Apple's Defaults Stink\",\n                                          JOptionPane.WARNING_MESSAGE);\n          }\n        });",
    "info" : "ExpressionStatement[33225-33685]:ExpressionStatement[33225-33685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33293-33673]:Block[33293-33673]"
  }, {
    "left" : "final String msg =\n              \"To use fullScreen(SPAN), first turn off “Displays have separate spaces”\\n\" +\n              \"in System Preferences \\u2192 Mission Control. Then log out and log back in.\";",
    "right" : "final String msg =\n              \"To use fullScreen(SPAN), first turn off “Displays have separate spaces”\\n\" +\n              \"in System Preferences \\u2192 Mission Control. Then log out and log back in.\";",
    "info" : "VariableDeclarationStatement[33307-33510]:VariableDeclarationStatement[33307-33510]"
  }, {
    "left" : "JOptionPane.showMessageDialog(null, msg, \"Apple's Defaults Stink\",\n                                          JOptionPane.WARNING_MESSAGE);",
    "right" : "JOptionPane.showMessageDialog(null, msg, \"Apple's Defaults Stink\",\n                                          JOptionPane.WARNING_MESSAGE);",
    "info" : "ExpressionStatement[33523-33661]:ExpressionStatement[33523-33661]"
  }, {
    "left" : "if (!result.equals(\"1\"))",
    "right" : "if (!result.equals(\"1\"))",
    "info" : "IfStatement[33699-33938]:IfStatement[33699-33938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33724-33938]:Block[33724-33938]"
  }, {
    "left" : "System.err.println(\"Could not check the status of “Displays have separate spaces.”\");",
    "right" : "System.err.println(\"Could not check the status of “Displays have separate spaces.”\");",
    "info" : "ExpressionStatement[33734-33819]:ExpressionStatement[33734-33819]"
  }, {
    "left" : "System.err.format(\"Received message '%s' and result code %d.%n\", trim(stderr.toString()), resultCode);",
    "right" : "System.err.format(\"Received message '%s' and result code %d.%n\", trim(stderr.toString()), resultCode);",
    "info" : "ExpressionStatement[33828-33930]:ExpressionStatement[33828-33930]"
  }, {
    "left" : "insideSettings = false;",
    "right" : "insideSettings = false;",
    "info" : "ExpressionStatement[33950-33973]:ExpressionStatement[33950-33973]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34326-34444]:Block[34326-34444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34480-34503]:Block[34480-34503]"
  }, {
    "left" : "return width;",
    "right" : "return width;",
    "info" : "ReturnStatement[34486-34499]:ReturnStatement[34486-34499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34540-34564]:Block[34540-34564]"
  }, {
    "left" : "return height;",
    "right" : "return height;",
    "info" : "ReturnStatement[34546-34560]:ReturnStatement[34546-34560]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34606-34632]:Block[34606-34632]"
  }, {
    "left" : "return renderer;",
    "right" : "return renderer;",
    "info" : "ReturnStatement[34612-34628]:ReturnStatement[34612-34628]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35348-35372]:Block[35348-35372]"
  }, {
    "left" : "return smooth;",
    "right" : "return smooth;",
    "info" : "ReturnStatement[35354-35368]:ReturnStatement[35354-35368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35417-35465]:Block[35417-35465]"
  }, {
    "left" : "return fullScreen;",
    "right" : "return fullScreen;",
    "info" : "ReturnStatement[35443-35461]:ReturnStatement[35443-35461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35901-35926]:Block[35901-35926]"
  }, {
    "left" : "return display;",
    "right" : "return display;",
    "info" : "ReturnStatement[35907-35922]:ReturnStatement[35907-35922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35970-36017]:Block[35970-36017]"
  }, {
    "left" : "return outputPath;",
    "right" : "return outputPath;",
    "info" : "ReturnStatement[35995-36013]:ReturnStatement[35995-36013]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36069-36118]:Block[36069-36118]"
  }, {
    "left" : "return outputStream;",
    "right" : "return outputStream;",
    "info" : "ReturnStatement[36094-36114]:ReturnStatement[36094-36114]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36160-36189]:Block[36160-36189]"
  }, {
    "left" : "return windowColor;",
    "right" : "return windowColor;",
    "info" : "ReturnStatement[36166-36185]:ReturnStatement[36166-36185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36232-36262]:Block[36232-36262]"
  }, {
    "left" : "return pixelDensity;",
    "right" : "return pixelDensity;",
    "info" : "ReturnStatement[36238-36258]:ReturnStatement[36238-36258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36376-36664]:Block[36376-36664]"
  }, {
    "left" : "if (display == SPAN)",
    "right" : "if (display == SPAN)",
    "info" : "IfStatement[36382-36624]:IfStatement[36382-36624]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36403-36624]:Block[36403-36624]"
  }, {
    "left" : "for (int i = 0; i < displayDevices.length; i++)",
    "right" : "for (int i = 0; i < displayDevices.length; i++)",
    "info" : "ForStatement[36477-36602]:ForStatement[36477-36602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36525-36602]:Block[36525-36602]"
  }, {
    "left" : "if (displayDensity(i) != 2)",
    "right" : "if (displayDensity(i) != 2)",
    "info" : "IfStatement[36535-36594]:IfStatement[36535-36594]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36563-36594]:Block[36563-36594]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[36575-36584]:ReturnStatement[36575-36584]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[36609-36618]:ReturnStatement[36609-36618]"
  }, {
    "left" : "return displayDensity(display);",
    "right" : "return displayDensity(display);",
    "info" : "ReturnStatement[36629-36660]:ReturnStatement[36629-36660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36715-38476]:Block[36715-38476]"
  }, {
    "left" : "if (PApplet.platform == PConstants.MACOSX)",
    "right" : "if (PApplet.platform == PConstants.MACOSX)",
    "info" : "IfStatement[36721-38458]:IfStatement[36721-38458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36764-38458]:Block[36764-38458]"
  }, {
    "left" : "final String javaVendor = System.getProperty(\"java.vendor\");",
    "right" : "final String javaVendor = System.getProperty(\"java.vendor\");",
    "info" : "VariableDeclarationStatement[36999-37059]:VariableDeclarationStatement[36999-37059]"
  }, {
    "left" : "if (javaVendor.contains(\"Oracle\"))",
    "right" : "if (javaVendor.contains(\"Oracle\"))",
    "info" : "IfStatement[37066-38452]:IfStatement[37066-38452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37101-38452]:Block[37101-38452]"
  }, {
    "left" : "GraphicsDevice device;",
    "right" : "GraphicsDevice device;",
    "info" : "VariableDeclarationStatement[37111-37133]:VariableDeclarationStatement[37111-37133]"
  }, {
    "left" : "GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();",
    "right" : "GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();",
    "info" : "VariableDeclarationStatement[37142-37218]:VariableDeclarationStatement[37142-37218]"
  }, {
    "left" : "if (display == -1)",
    "right" : "if (display == -1)",
    "info" : "IfStatement[37228-38074]:IfStatement[37228-38074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37247-37308]:Block[37247-37308]"
  }, {
    "left" : "device = env.getDefaultScreenDevice();",
    "right" : "device = env.getDefaultScreenDevice();",
    "info" : "ExpressionStatement[37259-37297]:ExpressionStatement[37259-37297]"
  }, {
    "left" : "if (display == SPAN)",
    "right" : "if (display == SPAN)",
    "info" : "IfStatement[37314-38074]:IfStatement[37314-38074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37335-37446]:Block[37335-37446]"
  }, {
    "left" : "throw new RuntimeException(\"displayDensity() only works with specific display numbers\");",
    "right" : "throw new RuntimeException(\"displayDensity() only works with specific display numbers\");",
    "info" : "ThrowStatement[37347-37435]:ThrowStatement[37347-37435]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37452-38074]:Block[37452-38074]"
  }, {
    "left" : "GraphicsDevice[] devices = env.getScreenDevices();",
    "right" : "GraphicsDevice[] devices = env.getScreenDevices();",
    "info" : "VariableDeclarationStatement[37464-37514]:VariableDeclarationStatement[37464-37514]"
  }, {
    "left" : "if (display > 0 && display <= devices.length)",
    "right" : "if (display > 0 && display <= devices.length)",
    "info" : "IfStatement[37525-38064]:IfStatement[37525-38064]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37571-37627]:Block[37571-37627]"
  }, {
    "left" : "device = devices[display - 1];",
    "right" : "device = devices[display - 1];",
    "info" : "ExpressionStatement[37585-37615]:ExpressionStatement[37585-37615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37633-38064]:Block[37633-38064]"
  }, {
    "left" : "if (devices.length == 1)",
    "right" : "if (devices.length == 1)",
    "info" : "IfStatement[37647-37969]:IfStatement[37647-37969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37672-37784]:Block[37672-37784]"
  }, {
    "left" : "System.err.println(\"Only one display is currently known, use displayDensity(1).\");",
    "right" : "System.err.println(\"Only one display is currently known, use displayDensity(1).\");",
    "info" : "ExpressionStatement[37688-37770]:ExpressionStatement[37688-37770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37790-37969]:Block[37790-37969]"
  }, {
    "left" : "System.err.format(\"Your displays are numbered %d through %d, \" +\n                \"pass one of those numbers to displayDensity()\", 1, devices.length);",
    "right" : "System.err.format(\"Your displays are numbered %d through %d, \" +\n                \"pass one of those numbers to displayDensity()\", 1, devices.length);",
    "info" : "ExpressionStatement[37806-37955]:ExpressionStatement[37806-37955]"
  }, {
    "left" : "throw new RuntimeException(\"Display \" + display + \" does not exist.\");",
    "right" : "throw new RuntimeException(\"Display \" + display + \" does not exist.\");",
    "info" : "ThrowStatement[37982-38052]:ThrowStatement[37982-38052]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[38084-38444]:TryStatement[38084-38444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38088-38415]:Block[38088-38415]"
  }, {
    "left" : "Field field = device.getClass().getDeclaredField(\"scale\");",
    "right" : "Field field = device.getClass().getDeclaredField(\"scale\");",
    "info" : "VariableDeclarationStatement[38100-38158]:VariableDeclarationStatement[38100-38158]"
  }, {
    "left" : "if (field != null)",
    "right" : "if (field != null)",
    "info" : "IfStatement[38169-38405]:IfStatement[38169-38405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38188-38405]:Block[38188-38405]"
  }, {
    "left" : "field.setAccessible(true);",
    "right" : "field.setAccessible(true);",
    "info" : "ExpressionStatement[38202-38228]:ExpressionStatement[38202-38228]"
  }, {
    "left" : "Object scale = field.get(device);",
    "right" : "Object scale = field.get(device);",
    "info" : "VariableDeclarationStatement[38241-38274]:VariableDeclarationStatement[38241-38274]"
  }, {
    "left" : "if (scale instanceof Integer && ((Integer)scale).intValue() == 2)",
    "right" : "if (scale instanceof Integer && ((Integer)scale).intValue() == 2)",
    "info" : "IfStatement[38288-38393]:IfStatement[38288-38393]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38354-38393]:Block[38354-38393]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[38370-38379]:ReturnStatement[38370-38379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38441-38444]:Block[38441-38444]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[38463-38472]:ReturnStatement[38463-38472]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38583-39106]:Block[38583-39106]"
  }, {
    "left" : "if (density != this.pixelDensity)",
    "right" : "if (density != this.pixelDensity)",
    "info" : "IfStatement[38589-39102]:IfStatement[38589-39102]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38623-39102]:Block[38623-39102]"
  }, {
    "left" : "if (insideSettings(\"pixelDensity\", density))",
    "right" : "if (insideSettings(\"pixelDensity\", density))",
    "info" : "IfStatement[38631-39096]:IfStatement[38631-39096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38676-39096]:Block[38676-39096]"
  }, {
    "left" : "if (density != 1 && density != 2)",
    "right" : "if (density != 1 && density != 2)",
    "info" : "IfStatement[38686-38806]:IfStatement[38686-38806]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38720-38806]:Block[38720-38806]"
  }, {
    "left" : "throw new RuntimeException(\"pixelDensity() can only be 1 or 2\");",
    "right" : "throw new RuntimeException(\"pixelDensity() can only be 1 or 2\");",
    "info" : "ThrowStatement[38732-38796]:ThrowStatement[38732-38796]"
  }, {
    "left" : "if (density == 2 && displayDensity() == 1)",
    "right" : "if (density == 2 && displayDensity() == 1)",
    "info" : "IfStatement[38815-39088]:IfStatement[38815-39088]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38858-39032]:Block[38858-39032]"
  }, {
    "left" : "throw new RuntimeException(\"pixelDensity(2) is not available for this display\");",
    "right" : "throw new RuntimeException(\"pixelDensity(2) is not available for this display\");",
    "info" : "ThrowStatement[38942-39022]:ThrowStatement[38942-39022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39038-39088]:Block[39038-39088]"
  }, {
    "left" : "this.pixelDensity = density;",
    "right" : "this.pixelDensity = density;",
    "info" : "ExpressionStatement[39050-39078]:ExpressionStatement[39050-39078]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39295-39430]:Block[39295-39430]"
  }, {
    "left" : "this.width = width;",
    "right" : "this.width = width;",
    "info" : "ExpressionStatement[39301-39320]:ExpressionStatement[39301-39320]"
  }, {
    "left" : "this.height = height;",
    "right" : "this.height = height;",
    "info" : "ExpressionStatement[39325-39346]:ExpressionStatement[39325-39346]"
  }, {
    "left" : "pixelWidth = width * pixelDensity;",
    "right" : "pixelWidth = width * pixelDensity;",
    "info" : "ExpressionStatement[39351-39385]:ExpressionStatement[39351-39385]"
  }, {
    "left" : "pixelHeight = height * pixelDensity;",
    "right" : "pixelHeight = height * pixelDensity;",
    "info" : "ExpressionStatement[39390-39426]:ExpressionStatement[39390-39426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39564-39584]:Block[39564-39584]"
  }, {
    "left" : "smooth(1);",
    "right" : "smooth(1);",
    "info" : "ExpressionStatement[39570-39580]:ExpressionStatement[39570-39580]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39720-39855]:Block[39720-39855]"
  }, {
    "left" : "if (insideSettings)",
    "right" : "if (insideSettings)",
    "info" : "IfStatement[39726-39851]:IfStatement[39726-39851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39746-39781]:Block[39746-39781]"
  }, {
    "left" : "this.smooth = level;",
    "right" : "this.smooth = level;",
    "info" : "ExpressionStatement[39754-39774]:ExpressionStatement[39754-39774]"
  }, {
    "left" : "if (this.smooth != level)",
    "right" : "if (this.smooth != level)",
    "info" : "IfStatement[39787-39851]:IfStatement[39787-39851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39813-39851]:Block[39813-39851]"
  }, {
    "left" : "smoothWarning(\"smooth\");",
    "right" : "smoothWarning(\"smooth\");",
    "info" : "ExpressionStatement[39821-39845]:ExpressionStatement[39821-39845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39919-40048]:Block[39919-40048]"
  }, {
    "left" : "if (insideSettings)",
    "right" : "if (insideSettings)",
    "info" : "IfStatement[39925-40044]:IfStatement[39925-40044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39945-39976]:Block[39945-39976]"
  }, {
    "left" : "this.smooth = 0;",
    "right" : "this.smooth = 0;",
    "info" : "ExpressionStatement[39953-39969]:ExpressionStatement[39953-39969]"
  }, {
    "left" : "if (this.smooth != 0)",
    "right" : "if (this.smooth != 0)",
    "info" : "IfStatement[39982-40044]:IfStatement[39982-40044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40004-40044]:Block[40004-40044]"
  }, {
    "left" : "smoothWarning(\"noSmooth\");",
    "right" : "smoothWarning(\"noSmooth\");",
    "info" : "ExpressionStatement[40012-40038]:ExpressionStatement[40012-40038]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40095-40309]:Block[40095-40309]"
  }, {
    "left" : "final String where = external ? \"setup\" : \"settings\";",
    "right" : "final String where = external ? \"setup\" : \"settings\";",
    "info" : "VariableDeclarationStatement[40173-40226]:VariableDeclarationStatement[40173-40226]"
  }, {
    "left" : "PGraphics.showWarning(\"%s() can only be used inside %s()\", method, where);",
    "right" : "PGraphics.showWarning(\"%s() can only be used inside %s()\", method, where);",
    "info" : "ExpressionStatement[40231-40305]:ExpressionStatement[40231-40305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40426-40445]:Block[40426-40445]"
  }, {
    "left" : "return g;",
    "right" : "return g;",
    "info" : "ReturnStatement[40432-40441]:ReturnStatement[40432-40441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40563-40615]:Block[40563-40615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41008-41183]:Block[41008-41183]"
  }, {
    "left" : "resume();",
    "right" : "resume();",
    "info" : "ExpressionStatement[41113-41122]:ExpressionStatement[41113-41122]"
  }, {
    "left" : "handleMethods(\"resume\");",
    "right" : "handleMethods(\"resume\");",
    "info" : "ExpressionStatement[41127-41151]:ExpressionStatement[41127-41151]"
  }, {
    "left" : "surface.resumeThread();",
    "right" : "surface.resumeThread();",
    "info" : "ExpressionStatement[41156-41179]:ExpressionStatement[41156-41179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41527-42459]:Block[41527-42459]"
  }, {
    "left" : "pause();",
    "right" : "pause();",
    "info" : "ExpressionStatement[41948-41956]:ExpressionStatement[41948-41956]"
  }, {
    "left" : "handleMethods(\"pause\");",
    "right" : "handleMethods(\"pause\");",
    "info" : "ExpressionStatement[41961-41984]:ExpressionStatement[41961-41984]"
  }, {
    "left" : "surface.pauseThread();",
    "right" : "surface.pauseThread();",
    "info" : "ExpressionStatement[42120-42142]:ExpressionStatement[42120-42142]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42721-42724]:Block[42721-42724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42971-42974]:Block[42971-42974]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44024-44056]:Block[44024-44056]"
  }, {
    "left" : "handle(emptyArgs);",
    "right" : "handle(emptyArgs);",
    "info" : "ExpressionStatement[44032-44050]:ExpressionStatement[44032-44050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44090-44833]:Block[44090-44833]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[44098-44827]:ForStatement[44098-44827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44130-44827]:Block[44130-44827]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[44140-44819]:TryStatement[44140-44819]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44144-44202]:Block[44144-44202]"
  }, {
    "left" : "methods[i].invoke(objects[i], args);",
    "right" : "methods[i].invoke(objects[i], args);",
    "info" : "ExpressionStatement[44156-44192]:ExpressionStatement[44156-44192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44223-44819]:Block[44223-44819]"
  }, {
    "left" : "Throwable t;",
    "right" : "Throwable t;",
    "info" : "VariableDeclarationStatement[44296-44308]:VariableDeclarationStatement[44296-44308]"
  }, {
    "left" : "if (e instanceof InvocationTargetException)",
    "right" : "if (e instanceof InvocationTargetException)",
    "info" : "IfStatement[44319-44521]:IfStatement[44319-44521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44363-44483]:Block[44363-44483]"
  }, {
    "left" : "InvocationTargetException ite = (InvocationTargetException) e;",
    "right" : "InvocationTargetException ite = (InvocationTargetException) e;",
    "info" : "VariableDeclarationStatement[44377-44439]:VariableDeclarationStatement[44377-44439]"
  }, {
    "left" : "t = ite.getCause();",
    "right" : "t = ite.getCause();",
    "info" : "ExpressionStatement[44452-44471]:ExpressionStatement[44452-44471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44489-44521]:Block[44489-44521]"
  }, {
    "left" : "t = e;",
    "right" : "t = e;",
    "info" : "ExpressionStatement[44503-44509]:ExpressionStatement[44503-44509]"
  }, {
    "left" : "if (t instanceof RuntimeException)",
    "right" : "if (t instanceof RuntimeException)",
    "info" : "IfStatement[44596-44809]:IfStatement[44596-44809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44631-44718]:Block[44631-44718]"
  }, {
    "left" : "throw (RuntimeException) t;",
    "right" : "throw (RuntimeException) t;",
    "info" : "ThrowStatement[44679-44706]:ThrowStatement[44679-44706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44724-44809]:Block[44724-44809]"
  }, {
    "left" : "t.printStackTrace();",
    "right" : "t.printStackTrace();",
    "info" : "ExpressionStatement[44777-44797]:ExpressionStatement[44777-44797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44879-45415]:Block[44879-45415]"
  }, {
    "left" : "if (findIndex(object) == -1)",
    "right" : "if (findIndex(object) == -1)",
    "info" : "IfStatement[44887-45409]:IfStatement[44887-45409]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44916-45278]:Block[44916-45278]"
  }, {
    "left" : "if (objects == null)",
    "right" : "if (objects == null)",
    "info" : "IfStatement[44926-45187]:IfStatement[44926-45187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44947-45029]:Block[44947-45029]"
  }, {
    "left" : "objects = new Object[5];",
    "right" : "objects = new Object[5];",
    "info" : "ExpressionStatement[44959-44983]:ExpressionStatement[44959-44983]"
  }, {
    "left" : "methods = new Method[5];",
    "right" : "methods = new Method[5];",
    "info" : "ExpressionStatement[44994-45018]:ExpressionStatement[44994-45018]"
  }, {
    "left" : "if (count == objects.length)",
    "right" : "if (count == objects.length)",
    "info" : "IfStatement[45035-45187]:IfStatement[45035-45187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45064-45187]:Block[45064-45187]"
  }, {
    "left" : "objects = (Object[]) PApplet.expand(objects);",
    "right" : "objects = (Object[]) PApplet.expand(objects);",
    "info" : "ExpressionStatement[45076-45121]:ExpressionStatement[45076-45121]"
  }, {
    "left" : "methods = (Method[]) PApplet.expand(methods);",
    "right" : "methods = (Method[]) PApplet.expand(methods);",
    "info" : "ExpressionStatement[45132-45177]:ExpressionStatement[45132-45177]"
  }, {
    "left" : "objects[count] = object;",
    "right" : "objects[count] = object;",
    "info" : "ExpressionStatement[45196-45220]:ExpressionStatement[45196-45220]"
  }, {
    "left" : "methods[count] = method;",
    "right" : "methods[count] = method;",
    "info" : "ExpressionStatement[45229-45253]:ExpressionStatement[45229-45253]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[45262-45270]:ExpressionStatement[45262-45270]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45284-45409]:Block[45284-45409]"
  }, {
    "left" : "die(method.getName() + \"() already added for this instance of \" +\n            object.getClass().getName());",
    "right" : "die(method.getName() + \"() already added for this instance of \" +\n            object.getClass().getName());",
    "info" : "ExpressionStatement[45294-45401]:ExpressionStatement[45294-45401]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45802-46197]:Block[45802-46197]"
  }, {
    "left" : "int index = findIndex(object);",
    "right" : "int index = findIndex(object);",
    "info" : "VariableDeclarationStatement[45810-45840]:VariableDeclarationStatement[45810-45840]"
  }, {
    "left" : "if (index != -1)",
    "right" : "if (index != -1)",
    "info" : "IfStatement[45847-46191]:IfStatement[45847-46191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45864-46191]:Block[45864-46191]"
  }, {
    "left" : "count--;",
    "right" : "count--;",
    "info" : "ExpressionStatement[45937-45945]:ExpressionStatement[45937-45945]"
  }, {
    "left" : "for (int i = index; i < count; i++)",
    "right" : "for (int i = index; i < count; i++)",
    "info" : "ForStatement[45954-46075]:ForStatement[45954-46075]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45990-46075]:Block[45990-46075]"
  }, {
    "left" : "objects[i] = objects[i+1];",
    "right" : "objects[i] = objects[i+1];",
    "info" : "ExpressionStatement[46002-46028]:ExpressionStatement[46002-46028]"
  }, {
    "left" : "methods[i] = methods[i+1];",
    "right" : "methods[i] = methods[i+1];",
    "info" : "ExpressionStatement[46039-46065]:ExpressionStatement[46039-46065]"
  }, {
    "left" : "objects[count] = null;",
    "right" : "objects[count] = null;",
    "info" : "ExpressionStatement[46130-46152]:ExpressionStatement[46130-46152]"
  }, {
    "left" : "methods[count] = null;",
    "right" : "methods[count] = null;",
    "info" : "ExpressionStatement[46161-46183]:ExpressionStatement[46161-46183]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46305-46797]:Block[46305-46797]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[46313-46774]:ForStatement[46313-46774]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46345-46774]:Block[46345-46774]"
  }, {
    "left" : "if (objects[i] == object)",
    "right" : "if (objects[i] == object)",
    "info" : "IfStatement[46355-46766]:IfStatement[46355-46766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46381-46766]:Block[46381-46766]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[46747-46756]:ReturnStatement[46747-46756]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[46781-46791]:ReturnStatement[46781-46791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47791-48288]:Block[47791-48288]"
  }, {
    "left" : "if (methodName.equals(\"mouseEvent\"))",
    "right" : "if (methodName.equals(\"mouseEvent\"))",
    "info" : "IfStatement[47797-48284]:IfStatement[47797-48284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47834-47939]:Block[47834-47939]"
  }, {
    "left" : "registerWithArgs(\"mouseEvent\", target, new Class[] { processing.event.MouseEvent.class });",
    "right" : "registerWithArgs(\"mouseEvent\", target, new Class[] { processing.event.MouseEvent.class });",
    "info" : "ExpressionStatement[47842-47932]:ExpressionStatement[47842-47932]"
  }, {
    "left" : "if (methodName.equals(\"keyEvent\"))",
    "right" : "if (methodName.equals(\"keyEvent\"))",
    "info" : "IfStatement[47945-48284]:IfStatement[47945-48284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47980-48081]:Block[47980-48081]"
  }, {
    "left" : "registerWithArgs(\"keyEvent\", target, new Class[] { processing.event.KeyEvent.class });",
    "right" : "registerWithArgs(\"keyEvent\", target, new Class[] { processing.event.KeyEvent.class });",
    "info" : "ExpressionStatement[47988-48074]:ExpressionStatement[47988-48074]"
  }, {
    "left" : "if (methodName.equals(\"touchEvent\"))",
    "right" : "if (methodName.equals(\"touchEvent\"))",
    "info" : "IfStatement[48087-48284]:IfStatement[48087-48284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48124-48229]:Block[48124-48229]"
  }, {
    "left" : "registerWithArgs(\"touchEvent\", target, new Class[] { processing.event.TouchEvent.class });",
    "right" : "registerWithArgs(\"touchEvent\", target, new Class[] { processing.event.TouchEvent.class });",
    "info" : "ExpressionStatement[48132-48222]:ExpressionStatement[48132-48222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48235-48284]:Block[48235-48284]"
  }, {
    "left" : "registerNoArgs(methodName, target);",
    "right" : "registerNoArgs(methodName, target);",
    "info" : "ExpressionStatement[48243-48278]:ExpressionStatement[48243-48278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48344-48875]:Block[48344-48875]"
  }, {
    "left" : "RegisteredMethods meth = registerMap.get(name);",
    "right" : "RegisteredMethods meth = registerMap.get(name);",
    "info" : "VariableDeclarationStatement[48350-48397]:VariableDeclarationStatement[48350-48397]"
  }, {
    "left" : "if (meth == null)",
    "right" : "if (meth == null)",
    "info" : "IfStatement[48402-48500]:IfStatement[48402-48500]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48420-48500]:Block[48420-48500]"
  }, {
    "left" : "meth = new RegisteredMethods();",
    "right" : "meth = new RegisteredMethods();",
    "info" : "ExpressionStatement[48428-48459]:ExpressionStatement[48428-48459]"
  }, {
    "left" : "registerMap.put(name, meth);",
    "right" : "registerMap.put(name, meth);",
    "info" : "ExpressionStatement[48466-48494]:ExpressionStatement[48466-48494]"
  }, {
    "left" : "Class<?> c = o.getClass();",
    "right" : "Class<?> c = o.getClass();",
    "info" : "VariableDeclarationStatement[48505-48531]:VariableDeclarationStatement[48505-48531]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[48536-48871]:TryStatement[48536-48871]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48540-48632]:Block[48540-48632]"
  }, {
    "left" : "Method method = c.getMethod(name, new Class[] {});",
    "right" : "Method method = c.getMethod(name, new Class[] {});",
    "info" : "VariableDeclarationStatement[48548-48598]:VariableDeclarationStatement[48548-48598]"
  }, {
    "left" : "meth.add(o, method);",
    "right" : "meth.add(o, method);",
    "info" : "ExpressionStatement[48605-48625]:ExpressionStatement[48605-48625]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48668-48780]:Block[48668-48780]"
  }, {
    "left" : "die(\"There is no public \" + name + \"() method in the class \" +\n          o.getClass().getName());",
    "right" : "die(\"There is no public \" + name + \"() method in the class \" +\n          o.getClass().getName());",
    "info" : "ExpressionStatement[48676-48773]:ExpressionStatement[48676-48773]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48801-48871]:Block[48801-48871]"
  }, {
    "left" : "die(\"Could not register \" + name + \" + () for \" + o, e);",
    "right" : "die(\"Could not register \" + name + \" + () for \" + o, e);",
    "info" : "ExpressionStatement[48809-48865]:ExpressionStatement[48809-48865]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48951-49473]:Block[48951-49473]"
  }, {
    "left" : "RegisteredMethods meth = registerMap.get(name);",
    "right" : "RegisteredMethods meth = registerMap.get(name);",
    "info" : "VariableDeclarationStatement[48957-49004]:VariableDeclarationStatement[48957-49004]"
  }, {
    "left" : "if (meth == null)",
    "right" : "if (meth == null)",
    "info" : "IfStatement[49009-49107]:IfStatement[49009-49107]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49027-49107]:Block[49027-49107]"
  }, {
    "left" : "meth = new RegisteredMethods();",
    "right" : "meth = new RegisteredMethods();",
    "info" : "ExpressionStatement[49035-49066]:ExpressionStatement[49035-49066]"
  }, {
    "left" : "registerMap.put(name, meth);",
    "right" : "registerMap.put(name, meth);",
    "info" : "ExpressionStatement[49073-49101]:ExpressionStatement[49073-49101]"
  }, {
    "left" : "Class<?> c = o.getClass();",
    "right" : "Class<?> c = o.getClass();",
    "info" : "VariableDeclarationStatement[49112-49138]:VariableDeclarationStatement[49112-49138]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[49143-49469]:TryStatement[49143-49469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49147-49230]:Block[49147-49230]"
  }, {
    "left" : "Method method = c.getMethod(name, cargs);",
    "right" : "Method method = c.getMethod(name, cargs);",
    "info" : "VariableDeclarationStatement[49155-49196]:VariableDeclarationStatement[49155-49196]"
  }, {
    "left" : "meth.add(o, method);",
    "right" : "meth.add(o, method);",
    "info" : "ExpressionStatement[49203-49223]:ExpressionStatement[49203-49223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49266-49378]:Block[49266-49378]"
  }, {
    "left" : "die(\"There is no public \" + name + \"() method in the class \" +\n          o.getClass().getName());",
    "right" : "die(\"There is no public \" + name + \"() method in the class \" +\n          o.getClass().getName());",
    "info" : "ExpressionStatement[49274-49371]:ExpressionStatement[49274-49371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49399-49469]:Block[49399-49469]"
  }, {
    "left" : "die(\"Could not register \" + name + \" + () for \" + o, e);",
    "right" : "die(\"Could not register \" + name + \" + () for \" + o, e);",
    "info" : "ExpressionStatement[49407-49463]:ExpressionStatement[49407-49463]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49676-50080]:Block[49676-50080]"
  }, {
    "left" : "RegisteredMethods meth = registerMap.get(name);",
    "right" : "RegisteredMethods meth = registerMap.get(name);",
    "info" : "VariableDeclarationStatement[49682-49729]:VariableDeclarationStatement[49682-49729]"
  }, {
    "left" : "if (meth == null)",
    "right" : "if (meth == null)",
    "info" : "IfStatement[49734-49836]:IfStatement[49734-49836]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49752-49836]:Block[49752-49836]"
  }, {
    "left" : "die(\"No registered methods with the name \" + name + \"() were found.\");",
    "right" : "die(\"No registered methods with the name \" + name + \"() were found.\");",
    "info" : "ExpressionStatement[49760-49830]:ExpressionStatement[49760-49830]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[49841-50076]:TryStatement[49841-50076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49845-49981]:Block[49845-49981]"
  }, {
    "left" : "meth.remove(target);",
    "right" : "meth.remove(target);",
    "info" : "ExpressionStatement[49955-49975]:ExpressionStatement[49955-49975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50002-50076]:Block[50002-50076]"
  }, {
    "left" : "die(\"Could not unregister \" + name + \"() for \" + target, e);",
    "right" : "die(\"Could not unregister \" + name + \"() for \" + target, e);",
    "info" : "ExpressionStatement[50010-50070]:ExpressionStatement[50010-50070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50133-50247]:Block[50133-50247]"
  }, {
    "left" : "RegisteredMethods meth = registerMap.get(methodName);",
    "right" : "RegisteredMethods meth = registerMap.get(methodName);",
    "info" : "VariableDeclarationStatement[50139-50192]:VariableDeclarationStatement[50139-50192]"
  }, {
    "left" : "if (meth != null)",
    "right" : "if (meth != null)",
    "info" : "IfStatement[50197-50243]:IfStatement[50197-50243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50215-50243]:Block[50215-50243]"
  }, {
    "left" : "meth.handle();",
    "right" : "meth.handle();",
    "info" : "ExpressionStatement[50223-50237]:ExpressionStatement[50223-50237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50315-50433]:Block[50315-50433]"
  }, {
    "left" : "RegisteredMethods meth = registerMap.get(methodName);",
    "right" : "RegisteredMethods meth = registerMap.get(methodName);",
    "info" : "VariableDeclarationStatement[50321-50374]:VariableDeclarationStatement[50321-50374]"
  }, {
    "left" : "if (meth != null)",
    "right" : "if (meth != null)",
    "info" : "IfStatement[50379-50429]:IfStatement[50379-50429]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50397-50429]:Block[50397-50429]"
  }, {
    "left" : "meth.handle(args);",
    "right" : "meth.handle(args);",
    "info" : "ExpressionStatement[50405-50423]:ExpressionStatement[50405-50423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55309-55314]:Block[55309-55314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56708-56835]:Block[56708-56835]"
  }, {
    "left" : "finished = true;",
    "right" : "finished = true;",
    "info" : "ExpressionStatement[56815-56831]:ExpressionStatement[56815-56831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57359-57475]:Block[57359-57475]"
  }, {
    "left" : "if (!fullScreen)",
    "right" : "if (!fullScreen)",
    "info" : "IfStatement[57365-57471]:IfStatement[57365-57471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57382-57471]:Block[57382-57471]"
  }, {
    "left" : "if (insideSettings(\"fullScreen\"))",
    "right" : "if (insideSettings(\"fullScreen\"))",
    "info" : "IfStatement[57390-57465]:IfStatement[57390-57465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57424-57465]:Block[57424-57465]"
  }, {
    "left" : "this.fullScreen = true;",
    "right" : "this.fullScreen = true;",
    "info" : "ExpressionStatement[57434-57457]:ExpressionStatement[57434-57457]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57516-57700]:Block[57516-57700]"
  }, {
    "left" : "if (!fullScreen || display != this.display)",
    "right" : "if (!fullScreen || display != this.display)",
    "info" : "IfStatement[57522-57696]:IfStatement[57522-57696]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57566-57696]:Block[57566-57696]"
  }, {
    "left" : "if (insideSettings(\"fullScreen\", display))",
    "right" : "if (insideSettings(\"fullScreen\", display))",
    "info" : "IfStatement[57574-57690]:IfStatement[57574-57690]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57617-57690]:Block[57617-57690]"
  }, {
    "left" : "this.fullScreen = true;",
    "right" : "this.fullScreen = true;",
    "info" : "ExpressionStatement[57627-57650]:ExpressionStatement[57627-57650]"
  }, {
    "left" : "this.display = display;",
    "right" : "this.display = display;",
    "info" : "ExpressionStatement[57659-57682]:ExpressionStatement[57659-57682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58065-58268]:Block[58065-58268]"
  }, {
    "left" : "if (!fullScreen ||\n        !renderer.equals(this.renderer))",
    "right" : "if (!fullScreen ||\n        !renderer.equals(this.renderer))",
    "info" : "IfStatement[58071-58264]:IfStatement[58071-58264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58131-58264]:Block[58131-58264]"
  }, {
    "left" : "if (insideSettings(\"fullScreen\", renderer))",
    "right" : "if (insideSettings(\"fullScreen\", renderer))",
    "info" : "IfStatement[58139-58258]:IfStatement[58139-58258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58183-58258]:Block[58183-58258]"
  }, {
    "left" : "this.fullScreen = true;",
    "right" : "this.fullScreen = true;",
    "info" : "ExpressionStatement[58193-58216]:ExpressionStatement[58193-58216]"
  }, {
    "left" : "this.renderer = renderer;",
    "right" : "this.renderer = renderer;",
    "info" : "ExpressionStatement[58225-58250]:ExpressionStatement[58225-58250]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58406-58685]:Block[58406-58685]"
  }, {
    "left" : "if (!fullScreen ||\n        !renderer.equals(this.renderer) ||\n        display != this.display)",
    "right" : "if (!fullScreen ||\n        !renderer.equals(this.renderer) ||\n        display != this.display)",
    "info" : "IfStatement[58412-58681]:IfStatement[58412-58681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58507-58681]:Block[58507-58681]"
  }, {
    "left" : "if (insideSettings(\"fullScreen\", renderer, display))",
    "right" : "if (insideSettings(\"fullScreen\", renderer, display))",
    "info" : "IfStatement[58515-58675]:IfStatement[58515-58675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58568-58675]:Block[58568-58675]"
  }, {
    "left" : "this.fullScreen = true;",
    "right" : "this.fullScreen = true;",
    "info" : "ExpressionStatement[58578-58601]:ExpressionStatement[58578-58601]"
  }, {
    "left" : "this.renderer = renderer;",
    "right" : "this.renderer = renderer;",
    "info" : "ExpressionStatement[58610-58635]:ExpressionStatement[58610-58635]"
  }, {
    "left" : "this.display = display;",
    "right" : "this.display = display;",
    "info" : "ExpressionStatement[58644-58667]:ExpressionStatement[58644-58667]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62445-62904]:Block[62445-62904]"
  }, {
    "left" : "if (width != this.width ||\n        height != this.height)",
    "right" : "if (width != this.width ||\n        height != this.height)",
    "info" : "IfStatement[62718-62900]:IfStatement[62718-62900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62776-62900]:Block[62776-62900]"
  }, {
    "left" : "if (insideSettings(\"size\", width, height))",
    "right" : "if (insideSettings(\"size\", width, height))",
    "info" : "IfStatement[62784-62894]:IfStatement[62784-62894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62827-62894]:Block[62827-62894]"
  }, {
    "left" : "this.width = width;",
    "right" : "this.width = width;",
    "info" : "ExpressionStatement[62837-62856]:ExpressionStatement[62837-62856]"
  }, {
    "left" : "this.height = height;",
    "right" : "this.height = height;",
    "info" : "ExpressionStatement[62865-62886]:ExpressionStatement[62865-62886]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62966-63245]:Block[62966-63245]"
  }, {
    "left" : "if (width != this.width ||\n        height != this.height ||\n        !renderer.equals(this.renderer))",
    "right" : "if (width != this.width ||\n        height != this.height ||\n        !renderer.equals(this.renderer))",
    "info" : "IfStatement[62972-63241]:IfStatement[62972-63241]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63073-63241]:Block[63073-63241]"
  }, {
    "left" : "if (insideSettings(\"size\", width, height, renderer))",
    "right" : "if (insideSettings(\"size\", width, height, renderer))",
    "info" : "IfStatement[63081-63235]:IfStatement[63081-63235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63134-63235]:Block[63134-63235]"
  }, {
    "left" : "this.width = width;",
    "right" : "this.width = width;",
    "info" : "ExpressionStatement[63144-63163]:ExpressionStatement[63144-63163]"
  }, {
    "left" : "this.height = height;",
    "right" : "this.height = height;",
    "info" : "ExpressionStatement[63172-63193]:ExpressionStatement[63172-63193]"
  }, {
    "left" : "this.renderer = renderer;",
    "right" : "this.renderer = renderer;",
    "info" : "ExpressionStatement[63202-63227]:ExpressionStatement[63202-63227]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63347-66425]:Block[63347-66425]"
  }, {
    "left" : "if (width != this.width ||\n        height != this.height ||\n        !renderer.equals(this.renderer))",
    "right" : "if (width != this.width ||\n        height != this.height ||\n        !renderer.equals(this.renderer))",
    "info" : "IfStatement[63547-63854]:IfStatement[63547-63854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63648-63854]:Block[63648-63854]"
  }, {
    "left" : "if (insideSettings(\"size\", width, height, renderer, path))",
    "right" : "if (insideSettings(\"size\", width, height, renderer, path))",
    "info" : "IfStatement[63656-63848]:IfStatement[63656-63848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63715-63848]:Block[63715-63848]"
  }, {
    "left" : "this.width = width;",
    "right" : "this.width = width;",
    "info" : "ExpressionStatement[63725-63744]:ExpressionStatement[63725-63744]"
  }, {
    "left" : "this.height = height;",
    "right" : "this.height = height;",
    "info" : "ExpressionStatement[63753-63774]:ExpressionStatement[63753-63774]"
  }, {
    "left" : "this.renderer = renderer;",
    "right" : "this.renderer = renderer;",
    "info" : "ExpressionStatement[63783-63808]:ExpressionStatement[63783-63808]"
  }, {
    "left" : "this.outputPath = path;",
    "right" : "this.outputPath = path;",
    "info" : "ExpressionStatement[63817-63840]:ExpressionStatement[63817-63840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66476-66522]:Block[66476-66522]"
  }, {
    "left" : "return createGraphics(w, h, JAVA2D);",
    "right" : "return createGraphics(w, h, JAVA2D);",
    "info" : "ReturnStatement[66482-66518]:ReturnStatement[66482-66518]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70074-70128]:Block[70074-70128]"
  }, {
    "left" : "return createGraphics(w, h, renderer, null);",
    "right" : "return createGraphics(w, h, renderer, null);",
    "info" : "ReturnStatement[70080-70124]:ReturnStatement[70080-70124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70463-70839]:Block[70463-70839]"
  }, {
    "left" : "return makeGraphics(w, h, renderer, path, false);",
    "right" : "return makeGraphics(w, h, renderer, path, false);",
    "info" : "ReturnStatement[70469-70518]:ReturnStatement[70469-70518]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71323-74798]:Block[71323-74798]"
  }, {
    "left" : "if (!primary && !g.isGL())",
    "right" : "if (!primary && !g.isGL())",
    "info" : "IfStatement[71715-72040]:IfStatement[71715-72040]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71742-72040]:Block[71742-72040]"
  }, {
    "left" : "if (renderer.equals(P2D))",
    "right" : "if (renderer.equals(P2D))",
    "info" : "IfStatement[71750-72034]:IfStatement[71750-72034]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71776-71884]:Block[71776-71884]"
  }, {
    "left" : "throw new RuntimeException(\"createGraphics() with P2D requires size() to use P2D or P3D\");",
    "right" : "throw new RuntimeException(\"createGraphics() with P2D requires size() to use P2D or P3D\");",
    "info" : "ThrowStatement[71786-71876]:ThrowStatement[71786-71876]"
  }, {
    "left" : "if (renderer.equals(P3D))",
    "right" : "if (renderer.equals(P3D))",
    "info" : "IfStatement[71890-72034]:IfStatement[71890-72034]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71916-72034]:Block[71916-72034]"
  }, {
    "left" : "throw new RuntimeException(\"createGraphics() with P3D or OPENGL requires size() to use P2D or P3D\");",
    "right" : "throw new RuntimeException(\"createGraphics() with P3D or OPENGL requires size() to use P2D or P3D\");",
    "info" : "ThrowStatement[71926-72026]:ThrowStatement[71926-72026]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[72046-74794]:TryStatement[72046-74794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72050-72628]:Block[72050-72628]"
  }, {
    "left" : "Class<?> rendererClass =\n        Thread.currentThread().getContextClassLoader().loadClass(renderer);",
    "right" : "Class<?> rendererClass =\n        Thread.currentThread().getContextClassLoader().loadClass(renderer);",
    "info" : "VariableDeclarationStatement[72058-72158]:VariableDeclarationStatement[72058-72158]"
  }, {
    "left" : "Constructor<?> constructor = rendererClass.getConstructor(new Class[] { });",
    "right" : "Constructor<?> constructor = rendererClass.getConstructor(new Class[] { });",
    "info" : "VariableDeclarationStatement[72166-72241]:VariableDeclarationStatement[72166-72241]"
  }, {
    "left" : "PGraphics pg = (PGraphics) constructor.newInstance();",
    "right" : "PGraphics pg = (PGraphics) constructor.newInstance();",
    "info" : "VariableDeclarationStatement[72248-72301]:VariableDeclarationStatement[72248-72301]"
  }, {
    "left" : "pg.setParent(this);",
    "right" : "pg.setParent(this);",
    "info" : "ExpressionStatement[72309-72328]:ExpressionStatement[72309-72328]"
  }, {
    "left" : "pg.setPrimary(primary);",
    "right" : "pg.setPrimary(primary);",
    "info" : "ExpressionStatement[72335-72358]:ExpressionStatement[72335-72358]"
  }, {
    "left" : "if (path != null)",
    "right" : "if (path != null)",
    "info" : "IfStatement[72365-72428]:IfStatement[72365-72428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72383-72428]:Block[72383-72428]"
  }, {
    "left" : "pg.setPath(savePath(path));",
    "right" : "pg.setPath(savePath(path));",
    "info" : "ExpressionStatement[72393-72420]:ExpressionStatement[72393-72420]"
  }, {
    "left" : "pg.setSize(w, h);",
    "right" : "pg.setSize(w, h);",
    "info" : "ExpressionStatement[72548-72565]:ExpressionStatement[72548-72565]"
  }, {
    "left" : "return pg;",
    "right" : "return pg;",
    "info" : "ReturnStatement[72611-72621]:ReturnStatement[72611-72621]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72667-73340]:Block[72667-73340]"
  }, {
    "left" : "String msg = ite.getTargetException().getMessage();",
    "right" : "String msg = ite.getTargetException().getMessage();",
    "info" : "VariableDeclarationStatement[72675-72726]:VariableDeclarationStatement[72675-72726]"
  }, {
    "left" : "if ((msg != null) &&\n          (msg.indexOf(\"no jogl in java.library.path\") != -1))",
    "right" : "if ((msg != null) &&\n          (msg.indexOf(\"no jogl in java.library.path\") != -1))",
    "info" : "IfStatement[72733-73333]:IfStatement[72733-73333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72817-73039]:Block[72817-73039]"
  }, {
    "left" : "throw new RuntimeException(\"The jogl library folder needs to be \" +\n          \"specified with -Djava.library.path=/path/to/jogl\");",
    "right" : "throw new RuntimeException(\"The jogl library folder needs to be \" +\n          \"specified with -Djava.library.path=/path/to/jogl\");",
    "info" : "ThrowStatement[72900-73030]:ThrowStatement[72900-73030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73045-73333]:Block[73045-73333]"
  }, {
    "left" : "ite.getTargetException().printStackTrace();",
    "right" : "ite.getTargetException().printStackTrace();",
    "info" : "ExpressionStatement[73055-73098]:ExpressionStatement[73055-73098]"
  }, {
    "left" : "Throwable target = ite.getTargetException();",
    "right" : "Throwable target = ite.getTargetException();",
    "info" : "VariableDeclarationStatement[73107-73151]:VariableDeclarationStatement[73107-73151]"
  }, {
    "left" : "if (platform == MACOSX)",
    "right" : "if (platform == MACOSX)",
    "info" : "IfStatement[73160-73268]:IfStatement[73160-73268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73184-73268]:Block[73184-73268]"
  }, {
    "left" : "target.printStackTrace(System.out);",
    "right" : "target.printStackTrace(System.out);",
    "info" : "ExpressionStatement[73196-73231]:ExpressionStatement[73196-73231]"
  }, {
    "left" : "throw new RuntimeException(target.getMessage());",
    "right" : "throw new RuntimeException(target.getMessage());",
    "info" : "ThrowStatement[73277-73325]:ThrowStatement[73277-73325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73377-73944]:Block[73377-73944]"
  }, {
    "left" : "if (external)",
    "right" : "if (external)",
    "info" : "IfStatement[73615-73937]:IfStatement[73615-73937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73629-73792]:Block[73629-73792]"
  }, {
    "left" : "throw new RuntimeException(\"You need to use \\\"Import Library\\\" \" +\n                                   \"to add \" + renderer + \" to your sketch.\");",
    "right" : "throw new RuntimeException(\"You need to use \\\"Import Library\\\" \" +\n                                   \"to add \" + renderer + \" to your sketch.\");",
    "info" : "ThrowStatement[73639-73784]:ThrowStatement[73639-73784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73798-73937]:Block[73798-73937]"
  }, {
    "left" : "throw new RuntimeException(\"The \" + renderer +\n                                   \" renderer is not in the class path.\");",
    "right" : "throw new RuntimeException(\"The \" + renderer +\n                                   \" renderer is not in the class path.\");",
    "info" : "ThrowStatement[73808-73929]:ThrowStatement[73808-73929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73965-74794]:Block[73965-74794]"
  }, {
    "left" : "if ((e instanceof IllegalArgumentException) ||\n          (e instanceof NoSuchMethodException) ||\n          (e instanceof IllegalAccessException))",
    "right" : "if ((e instanceof IllegalArgumentException) ||\n          (e instanceof NoSuchMethodException) ||\n          (e instanceof IllegalAccessException))",
    "info" : "IfStatement[73973-74788]:IfStatement[73973-74788]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74119-74580]:Block[74119-74580]"
  }, {
    "left" : "if (e.getMessage().contains(\"cannot be <= 0\"))",
    "right" : "if (e.getMessage().contains(\"cannot be <= 0\"))",
    "info" : "IfStatement[74129-74572]:IfStatement[74129-74572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74176-74367]:Block[74176-74367]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[74326-74356]:ThrowStatement[74326-74356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74373-74572]:Block[74373-74572]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[74385-74405]:ExpressionStatement[74385-74405]"
  }, {
    "left" : "String msg = renderer + \" needs to be updated \" +\n            \"for the current release of Processing.\";",
    "right" : "String msg = renderer + \" needs to be updated \" +\n            \"for the current release of Processing.\";",
    "info" : "VariableDeclarationStatement[74416-74519]:VariableDeclarationStatement[74416-74519]"
  }, {
    "left" : "throw new RuntimeException(msg);",
    "right" : "throw new RuntimeException(msg);",
    "info" : "ThrowStatement[74530-74562]:ThrowStatement[74530-74562]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74586-74788]:Block[74586-74788]"
  }, {
    "left" : "if (platform == MACOSX)",
    "right" : "if (platform == MACOSX)",
    "info" : "IfStatement[74596-74699]:IfStatement[74596-74699]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74620-74699]:Block[74620-74699]"
  }, {
    "left" : "e.printStackTrace(System.out);",
    "right" : "e.printStackTrace(System.out);",
    "info" : "ExpressionStatement[74632-74662]:ExpressionStatement[74632-74662]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[74708-74728]:ExpressionStatement[74708-74728]"
  }, {
    "left" : "throw new RuntimeException(e.getMessage());",
    "right" : "throw new RuntimeException(e.getMessage());",
    "info" : "ThrowStatement[74737-74780]:ThrowStatement[74737-74780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74932-75061]:Block[74932-75061]"
  }, {
    "left" : "return makeGraphics(sketchWidth(), sketchHeight(),\n                        sketchRenderer(), sketchOutputPath(), true);",
    "right" : "return makeGraphics(sketchWidth(), sketchHeight(),\n                        sketchRenderer(), sketchOutputPath(), true);",
    "info" : "ReturnStatement[74938-75057]:ReturnStatement[74938-75057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76217-76331]:Block[76217-76331]"
  }, {
    "left" : "PImage image = new PImage(w, h, format);",
    "right" : "PImage image = new PImage(w, h, format);",
    "info" : "VariableDeclarationStatement[76223-76263]:VariableDeclarationStatement[76223-76263]"
  }, {
    "left" : "image.parent = this;",
    "right" : "image.parent = this;",
    "info" : "ExpressionStatement[76268-76288]:ExpressionStatement[76268-76288]"
  }, {
    "left" : "return image;",
    "right" : "return image;",
    "info" : "ReturnStatement[76314-76327]:ReturnStatement[76314-76327]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76565-79458]:Block[76565-79458]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[76750-76772]:IfStatement[76750-76772]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[76765-76772]:ReturnStatement[76765-76772]"
  }, {
    "left" : "if (!looping && !redraw)",
    "right" : "if (!looping && !redraw)",
    "info" : "IfStatement[76777-76809]:IfStatement[76777-76809]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[76802-76809]:ReturnStatement[76802-76809]"
  }, {
    "left" : "if (insideDraw)",
    "right" : "if (insideDraw)",
    "info" : "IfStatement[77318-77429]:IfStatement[77318-77429]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77334-77429]:Block[77334-77429]"
  }, {
    "left" : "System.err.println(\"handleDraw() called before finishing\");",
    "right" : "System.err.println(\"handleDraw() called before finishing\");",
    "info" : "ExpressionStatement[77342-77401]:ExpressionStatement[77342-77401]"
  }, {
    "left" : "System.exit(1);",
    "right" : "System.exit(1);",
    "info" : "ExpressionStatement[77408-77423]:ExpressionStatement[77408-77423]"
  }, {
    "left" : "insideDraw = true;",
    "right" : "insideDraw = true;",
    "info" : "ExpressionStatement[77435-77453]:ExpressionStatement[77435-77453]"
  }, {
    "left" : "g.beginDraw();",
    "right" : "g.beginDraw();",
    "info" : "ExpressionStatement[77458-77472]:ExpressionStatement[77458-77472]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[77477-77534]:IfStatement[77477-77534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77499-77534]:Block[77499-77534]"
  }, {
    "left" : "recorder.beginDraw();",
    "right" : "recorder.beginDraw();",
    "info" : "ExpressionStatement[77507-77528]:ExpressionStatement[77507-77528]"
  }, {
    "left" : "long now = System.nanoTime();",
    "right" : "long now = System.nanoTime();",
    "info" : "VariableDeclarationStatement[77540-77569]:VariableDeclarationStatement[77540-77569]"
  }, {
    "left" : "if (frameCount == 0)",
    "right" : "if (frameCount == 0)",
    "info" : "IfStatement[77575-79160]:IfStatement[77575-79160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77596-78001]:Block[77596-78001]"
  }, {
    "left" : "setup();",
    "right" : "setup();",
    "info" : "ExpressionStatement[77762-77770]:ExpressionStatement[77762-77770]"
  }, {
    "left" : "defaultSize = false;",
    "right" : "defaultSize = false;",
    "info" : "ExpressionStatement[77974-77994]:ExpressionStatement[77974-77994]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[78007-79160]:Block[78007-79160]"
  }, {
    "left" : "double rate = 1000000.0 / ((now - frameRateLastNanos) / 1000000.0);",
    "right" : "double rate = 1000000.0 / ((now - frameRateLastNanos) / 1000000.0);",
    "info" : "VariableDeclarationStatement[78098-78165]:VariableDeclarationStatement[78098-78165]"
  }, {
    "left" : "float instantaneousRate = (float) (rate / 1000.0);",
    "right" : "float instantaneousRate = (float) (rate / 1000.0);",
    "info" : "VariableDeclarationStatement[78172-78222]:VariableDeclarationStatement[78172-78222]"
  }, {
    "left" : "frameRate = (frameRate * 0.9f) + (instantaneousRate * 0.1f);",
    "right" : "frameRate = (frameRate * 0.9f) + (instantaneousRate * 0.1f);",
    "info" : "ExpressionStatement[78229-78289]:ExpressionStatement[78229-78289]"
  }, {
    "left" : "if (frameCount != 0)",
    "right" : "if (frameCount != 0)",
    "info" : "IfStatement[78297-78357]:IfStatement[78297-78357]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[78318-78357]:Block[78318-78357]"
  }, {
    "left" : "handleMethods(\"pre\");",
    "right" : "handleMethods(\"pre\");",
    "info" : "ExpressionStatement[78328-78349]:ExpressionStatement[78328-78349]"
  }, {
    "left" : "pmouseX = dmouseX;",
    "right" : "pmouseX = dmouseX;",
    "info" : "ExpressionStatement[78495-78513]:ExpressionStatement[78495-78513]"
  }, {
    "left" : "pmouseY = dmouseY;",
    "right" : "pmouseY = dmouseY;",
    "info" : "ExpressionStatement[78520-78538]:ExpressionStatement[78520-78538]"
  }, {
    "left" : "draw();",
    "right" : "draw();",
    "info" : "ExpressionStatement[78583-78590]:ExpressionStatement[78583-78590]"
  }, {
    "left" : "dmouseX = mouseX;",
    "right" : "dmouseX = mouseX;",
    "info" : "ExpressionStatement[78709-78726]:ExpressionStatement[78709-78726]"
  }, {
    "left" : "dmouseY = mouseY;",
    "right" : "dmouseY = mouseY;",
    "info" : "ExpressionStatement[78733-78750]:ExpressionStatement[78733-78750]"
  }, {
    "left" : "dequeueEvents();",
    "right" : "dequeueEvents();",
    "info" : "ExpressionStatement[78980-78996]:ExpressionStatement[78980-78996]"
  }, {
    "left" : "handleMethods(\"draw\");",
    "right" : "handleMethods(\"draw\");",
    "info" : "ExpressionStatement[79004-79026]:ExpressionStatement[79004-79026]"
  }, {
    "left" : "redraw = false;",
    "right" : "redraw = false;",
    "info" : "ExpressionStatement[79034-79049]:ExpressionStatement[79034-79049]"
  }, {
    "left" : "g.endDraw();",
    "right" : "g.endDraw();",
    "info" : "ExpressionStatement[79165-79177]:ExpressionStatement[79165-79177]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[79263-79318]:IfStatement[79263-79318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79285-79318]:Block[79285-79318]"
  }, {
    "left" : "recorder.endDraw();",
    "right" : "recorder.endDraw();",
    "info" : "ExpressionStatement[79293-79312]:ExpressionStatement[79293-79312]"
  }, {
    "left" : "insideDraw = false;",
    "right" : "insideDraw = false;",
    "info" : "ExpressionStatement[79323-79342]:ExpressionStatement[79323-79342]"
  }, {
    "left" : "if (frameCount != 0)",
    "right" : "if (frameCount != 0)",
    "info" : "IfStatement[79348-79405]:IfStatement[79348-79405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79369-79405]:Block[79369-79405]"
  }, {
    "left" : "handleMethods(\"post\");",
    "right" : "handleMethods(\"post\");",
    "info" : "ExpressionStatement[79377-79399]:ExpressionStatement[79377-79399]"
  }, {
    "left" : "frameRateLastNanos = now;",
    "right" : "frameRateLastNanos = now;",
    "info" : "ExpressionStatement[79411-79436]:ExpressionStatement[79411-79436]"
  }, {
    "left" : "frameCount++;",
    "right" : "frameCount++;",
    "info" : "ExpressionStatement[79441-79454]:ExpressionStatement[79441-79454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[80596-80973]:Block[80596-80973]"
  }, {
    "left" : "if (!looping)",
    "right" : "if (!looping)",
    "info" : "IfStatement[80602-80969]:IfStatement[80602-80969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[80616-80969]:Block[80616-80969]"
  }, {
    "left" : "redraw = true;",
    "right" : "redraw = true;",
    "info" : "ExpressionStatement[80624-80638]:ExpressionStatement[80624-80638]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81375-81428]:Block[81375-81428]"
  }, {
    "left" : "if (!looping)",
    "right" : "if (!looping)",
    "info" : "IfStatement[81381-81424]:IfStatement[81381-81424]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81395-81424]:Block[81395-81424]"
  }, {
    "left" : "looping = true;",
    "right" : "looping = true;",
    "info" : "ExpressionStatement[81403-81418]:ExpressionStatement[81403-81418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[82689-82742]:Block[82689-82742]"
  }, {
    "left" : "if (looping)",
    "right" : "if (looping)",
    "info" : "IfStatement[82695-82738]:IfStatement[82695-82738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[82708-82738]:Block[82708-82738]"
  }, {
    "left" : "looping = false;",
    "right" : "looping = false;",
    "info" : "ExpressionStatement[82716-82732]:ExpressionStatement[82716-82732]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83042-83159]:Block[83042-83159]"
  }, {
    "left" : "if (count == queue.length)",
    "right" : "if (count == queue.length)",
    "info" : "IfStatement[83050-83127]:IfStatement[83050-83127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83077-83127]:Block[83077-83127]"
  }, {
    "left" : "queue = (Event[]) expand(queue);",
    "right" : "queue = (Event[]) expand(queue);",
    "info" : "ExpressionStatement[83087-83119]:ExpressionStatement[83087-83119]"
  }, {
    "left" : "queue[count++] = e;",
    "right" : "queue[count++] = e;",
    "info" : "ExpressionStatement[83134-83153]:ExpressionStatement[83134-83153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83193-83483]:Block[83193-83483]"
  }, {
    "left" : "if (offset == count)",
    "right" : "if (offset == count)",
    "info" : "IfStatement[83201-83303]:IfStatement[83201-83303]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83222-83303]:Block[83222-83303]"
  }, {
    "left" : "throw new RuntimeException(\"Nothing left on the event queue.\");",
    "right" : "throw new RuntimeException(\"Nothing left on the event queue.\");",
    "info" : "ThrowStatement[83232-83295]:ThrowStatement[83232-83295]"
  }, {
    "left" : "Event outgoing = queue[offset++];",
    "right" : "Event outgoing = queue[offset++];",
    "info" : "VariableDeclarationStatement[83310-83343]:VariableDeclarationStatement[83310-83343]"
  }, {
    "left" : "if (offset == count)",
    "right" : "if (offset == count)",
    "info" : "IfStatement[83350-83454]:IfStatement[83350-83454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83371-83454]:Block[83371-83454]"
  }, {
    "left" : "offset = 0;",
    "right" : "offset = 0;",
    "info" : "ExpressionStatement[83416-83427]:ExpressionStatement[83416-83427]"
  }, {
    "left" : "count = 0;",
    "right" : "count = 0;",
    "info" : "ExpressionStatement[83436-83446]:ExpressionStatement[83436-83446]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[83461-83477]:ReturnStatement[83461-83477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83522-83554]:Block[83522-83554]"
  }, {
    "left" : "return count != 0;",
    "right" : "return count != 0;",
    "info" : "ReturnStatement[83530-83548]:ReturnStatement[83530-83548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83742-83821]:Block[83742-83821]"
  }, {
    "left" : "eventQueue.add(pe);",
    "right" : "eventQueue.add(pe);",
    "info" : "ExpressionStatement[83748-83767]:ExpressionStatement[83748-83767]"
  }, {
    "left" : "if (!looping)",
    "right" : "if (!looping)",
    "info" : "IfStatement[83773-83817]:IfStatement[83773-83817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83787-83817]:Block[83787-83817]"
  }, {
    "left" : "dequeueEvents();",
    "right" : "dequeueEvents();",
    "info" : "ExpressionStatement[83795-83811]:ExpressionStatement[83795-83811]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83857-84138]:Block[83857-84138]"
  }, {
    "left" : "while (eventQueue.available())",
    "right" : "while (eventQueue.available())",
    "info" : "WhileStatement[83863-84134]:WhileStatement[83863-84134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83894-84134]:Block[83894-84134]"
  }, {
    "left" : "Event e = eventQueue.remove();",
    "right" : "Event e = eventQueue.remove();",
    "info" : "VariableDeclarationStatement[83902-83932]:VariableDeclarationStatement[83902-83932]"
  }, {
    "left" : "switch (e.getFlavor()) {\n      case Event.MOUSE:\n        handleMouseEvent((MouseEvent) e);\n        break;\n      case Event.KEY:\n        handleKeyEvent((KeyEvent) e);\n        break;\n      }",
    "right" : "switch (e.getFlavor()) {\n      case Event.MOUSE:\n        handleMouseEvent((MouseEvent) e);\n        break;\n      case Event.KEY:\n        handleKeyEvent((KeyEvent) e);\n        break;\n      }",
    "info" : "SwitchStatement[83940-84128]:SwitchStatement[83940-84128]"
  }, {
    "left" : "case Event.MOUSE:",
    "right" : "case Event.MOUSE:",
    "info" : "SwitchCase[83971-83988]:SwitchCase[83971-83988]"
  }, {
    "left" : "handleMouseEvent((MouseEvent) e);",
    "right" : "handleMouseEvent((MouseEvent) e);",
    "info" : "ExpressionStatement[83997-84030]:ExpressionStatement[83997-84030]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[84039-84045]:BreakStatement[84039-84045]"
  }, {
    "left" : "case Event.KEY:",
    "right" : "case Event.KEY:",
    "info" : "SwitchCase[84052-84067]:SwitchCase[84052-84067]"
  }, {
    "left" : "handleKeyEvent((KeyEvent) e);",
    "right" : "handleKeyEvent((KeyEvent) e);",
    "info" : "ExpressionStatement[84076-84105]:ExpressionStatement[84076-84105]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[84114-84120]:BreakStatement[84114-84120]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[84554-87177]:Block[84554-87177]"
  }, {
    "left" : "final int action = event.getAction();",
    "right" : "final int action = event.getAction();",
    "info" : "VariableDeclarationStatement[85074-85111]:VariableDeclarationStatement[85074-85111]"
  }, {
    "left" : "if (action == MouseEvent.DRAG ||\n        action == MouseEvent.MOVE ||\n        action == MouseEvent.PRESS)",
    "right" : "if (action == MouseEvent.DRAG ||\n        action == MouseEvent.MOVE ||\n        action == MouseEvent.PRESS)",
    "info" : "IfStatement[85116-85337]:IfStatement[85116-85337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85222-85337]:Block[85222-85337]"
  }, {
    "left" : "pmouseX = emouseX;",
    "right" : "pmouseX = emouseX;",
    "info" : "ExpressionStatement[85230-85248]:ExpressionStatement[85230-85248]"
  }, {
    "left" : "pmouseY = emouseY;",
    "right" : "pmouseY = emouseY;",
    "info" : "ExpressionStatement[85255-85273]:ExpressionStatement[85255-85273]"
  }, {
    "left" : "mouseX = event.getX();",
    "right" : "mouseX = event.getX();",
    "info" : "ExpressionStatement[85280-85302]:ExpressionStatement[85280-85302]"
  }, {
    "left" : "mouseY = event.getY();",
    "right" : "mouseY = event.getY();",
    "info" : "ExpressionStatement[85309-85331]:ExpressionStatement[85309-85331]"
  }, {
    "left" : "mouseButton = event.getButton();",
    "right" : "mouseButton = event.getButton();",
    "info" : "ExpressionStatement[85390-85422]:ExpressionStatement[85390-85422]"
  }, {
    "left" : "if (firstMouse)",
    "right" : "if (firstMouse)",
    "info" : "IfStatement[85928-86073]:IfStatement[85928-86073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85944-86073]:Block[85944-86073]"
  }, {
    "left" : "pmouseX = mouseX;",
    "right" : "pmouseX = mouseX;",
    "info" : "ExpressionStatement[85952-85969]:ExpressionStatement[85952-85969]"
  }, {
    "left" : "pmouseY = mouseY;",
    "right" : "pmouseY = mouseY;",
    "info" : "ExpressionStatement[85976-85993]:ExpressionStatement[85976-85993]"
  }, {
    "left" : "dmouseX = mouseX;",
    "right" : "dmouseX = mouseX;",
    "info" : "ExpressionStatement[86000-86017]:ExpressionStatement[86000-86017]"
  }, {
    "left" : "dmouseY = mouseY;",
    "right" : "dmouseY = mouseY;",
    "info" : "ExpressionStatement[86024-86041]:ExpressionStatement[86024-86041]"
  }, {
    "left" : "firstMouse = false;",
    "right" : "firstMouse = false;",
    "info" : "ExpressionStatement[86048-86067]:ExpressionStatement[86048-86067]"
  }, {
    "left" : "mouseEvent = event;",
    "right" : "mouseEvent = event;",
    "info" : "ExpressionStatement[86079-86098]:ExpressionStatement[86079-86098]"
  }, {
    "left" : "switch (action) {\n    case MouseEvent.PRESS:\n      mousePressed = true;\n      break;\n    case MouseEvent.RELEASE:\n      mousePressed = false;\n      break;\n    }",
    "right" : "switch (action) {\n    case MouseEvent.PRESS:\n      mousePressed = true;\n      break;\n    case MouseEvent.RELEASE:\n      mousePressed = false;\n      break;\n    }",
    "info" : "SwitchStatement[86203-86363]:SwitchStatement[86203-86363]"
  }, {
    "left" : "case MouseEvent.PRESS:",
    "right" : "case MouseEvent.PRESS:",
    "info" : "SwitchCase[86225-86247]:SwitchCase[86225-86247]"
  }, {
    "left" : "mousePressed = true;",
    "right" : "mousePressed = true;",
    "info" : "ExpressionStatement[86254-86274]:ExpressionStatement[86254-86274]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86281-86287]:BreakStatement[86281-86287]"
  }, {
    "left" : "case MouseEvent.RELEASE:",
    "right" : "case MouseEvent.RELEASE:",
    "info" : "SwitchCase[86292-86316]:SwitchCase[86292-86316]"
  }, {
    "left" : "mousePressed = false;",
    "right" : "mousePressed = false;",
    "info" : "ExpressionStatement[86323-86344]:ExpressionStatement[86323-86344]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86351-86357]:BreakStatement[86351-86357]"
  }, {
    "left" : "handleMethods(\"mouseEvent\", new Object[] { event });",
    "right" : "handleMethods(\"mouseEvent\", new Object[] { event });",
    "info" : "ExpressionStatement[86369-86421]:ExpressionStatement[86369-86421]"
  }, {
    "left" : "switch (action) {\n    case MouseEvent.PRESS:\n//      mousePressed = true;\n      mousePressed(event);\n      break;\n    case MouseEvent.RELEASE:\n//      mousePressed = false;\n      mouseReleased(event);\n      break;\n    case MouseEvent.CLICK:\n      mouseClicked(event);\n      break;\n    case MouseEvent.DRAG:\n      mouseDragged(event);\n      break;\n    case MouseEvent.MOVE:\n      mouseMoved(event);\n      break;\n    case MouseEvent.ENTER:\n      mouseEntered(event);\n      break;\n    case MouseEvent.EXIT:\n      mouseExited(event);\n      break;\n    case MouseEvent.WHEEL:\n      mouseWheel(event);\n      break;\n    }",
    "right" : "switch (action) {\n    case MouseEvent.PRESS:\n//      mousePressed = true;\n      mousePressed(event);\n      break;\n    case MouseEvent.RELEASE:\n//      mousePressed = false;\n      mouseReleased(event);\n      break;\n    case MouseEvent.CLICK:\n      mouseClicked(event);\n      break;\n    case MouseEvent.DRAG:\n      mouseDragged(event);\n      break;\n    case MouseEvent.MOVE:\n      mouseMoved(event);\n      break;\n    case MouseEvent.ENTER:\n      mouseEntered(event);\n      break;\n    case MouseEvent.EXIT:\n      mouseExited(event);\n      break;\n    case MouseEvent.WHEEL:\n      mouseWheel(event);\n      break;\n    }",
    "info" : "SwitchStatement[86427-87040]:SwitchStatement[86427-87040]"
  }, {
    "left" : "case MouseEvent.PRESS:",
    "right" : "case MouseEvent.PRESS:",
    "info" : "SwitchCase[86449-86471]:SwitchCase[86449-86471]"
  }, {
    "left" : "mousePressed(event);",
    "right" : "mousePressed(event);",
    "info" : "ExpressionStatement[86507-86527]:ExpressionStatement[86507-86527]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86534-86540]:BreakStatement[86534-86540]"
  }, {
    "left" : "case MouseEvent.RELEASE:",
    "right" : "case MouseEvent.RELEASE:",
    "info" : "SwitchCase[86545-86569]:SwitchCase[86545-86569]"
  }, {
    "left" : "mouseReleased(event);",
    "right" : "mouseReleased(event);",
    "info" : "ExpressionStatement[86606-86627]:ExpressionStatement[86606-86627]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86634-86640]:BreakStatement[86634-86640]"
  }, {
    "left" : "case MouseEvent.CLICK:",
    "right" : "case MouseEvent.CLICK:",
    "info" : "SwitchCase[86645-86667]:SwitchCase[86645-86667]"
  }, {
    "left" : "mouseClicked(event);",
    "right" : "mouseClicked(event);",
    "info" : "ExpressionStatement[86674-86694]:ExpressionStatement[86674-86694]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86701-86707]:BreakStatement[86701-86707]"
  }, {
    "left" : "case MouseEvent.DRAG:",
    "right" : "case MouseEvent.DRAG:",
    "info" : "SwitchCase[86712-86733]:SwitchCase[86712-86733]"
  }, {
    "left" : "mouseDragged(event);",
    "right" : "mouseDragged(event);",
    "info" : "ExpressionStatement[86740-86760]:ExpressionStatement[86740-86760]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86767-86773]:BreakStatement[86767-86773]"
  }, {
    "left" : "case MouseEvent.MOVE:",
    "right" : "case MouseEvent.MOVE:",
    "info" : "SwitchCase[86778-86799]:SwitchCase[86778-86799]"
  }, {
    "left" : "mouseMoved(event);",
    "right" : "mouseMoved(event);",
    "info" : "ExpressionStatement[86806-86824]:ExpressionStatement[86806-86824]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86831-86837]:BreakStatement[86831-86837]"
  }, {
    "left" : "case MouseEvent.ENTER:",
    "right" : "case MouseEvent.ENTER:",
    "info" : "SwitchCase[86842-86864]:SwitchCase[86842-86864]"
  }, {
    "left" : "mouseEntered(event);",
    "right" : "mouseEntered(event);",
    "info" : "ExpressionStatement[86871-86891]:ExpressionStatement[86871-86891]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86898-86904]:BreakStatement[86898-86904]"
  }, {
    "left" : "case MouseEvent.EXIT:",
    "right" : "case MouseEvent.EXIT:",
    "info" : "SwitchCase[86909-86930]:SwitchCase[86909-86930]"
  }, {
    "left" : "mouseExited(event);",
    "right" : "mouseExited(event);",
    "info" : "ExpressionStatement[86937-86956]:ExpressionStatement[86937-86956]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[86963-86969]:BreakStatement[86963-86969]"
  }, {
    "left" : "case MouseEvent.WHEEL:",
    "right" : "case MouseEvent.WHEEL:",
    "info" : "SwitchCase[86974-86996]:SwitchCase[86974-86996]"
  }, {
    "left" : "mouseWheel(event);",
    "right" : "mouseWheel(event);",
    "info" : "ExpressionStatement[87003-87021]:ExpressionStatement[87003-87021]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[87028-87034]:BreakStatement[87028-87034]"
  }, {
    "left" : "if ((action == MouseEvent.DRAG) ||\n        (action == MouseEvent.MOVE))",
    "right" : "if ((action == MouseEvent.DRAG) ||\n        (action == MouseEvent.MOVE))",
    "info" : "IfStatement[87046-87173]:IfStatement[87046-87173]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[87118-87173]:Block[87118-87173]"
  }, {
    "left" : "emouseX = mouseX;",
    "right" : "emouseX = mouseX;",
    "info" : "ExpressionStatement[87126-87143]:ExpressionStatement[87126-87143]"
  }, {
    "left" : "emouseY = mouseY;",
    "right" : "emouseY = mouseY;",
    "info" : "ExpressionStatement[87150-87167]:ExpressionStatement[87150-87167]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88202-88205]:Block[88202-88205]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88253-88278]:Block[88253-88278]"
  }, {
    "left" : "mousePressed();",
    "right" : "mousePressed();",
    "info" : "ExpressionStatement[88259-88274]:ExpressionStatement[88259-88274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88868-88871]:Block[88868-88871]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88920-88946]:Block[88920-88946]"
  }, {
    "left" : "mouseReleased();",
    "right" : "mouseReleased();",
    "info" : "ExpressionStatement[88926-88942]:ExpressionStatement[88926-88942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89762-89765]:Block[89762-89765]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89813-89838]:Block[89813-89838]"
  }, {
    "left" : "mouseClicked();",
    "right" : "mouseClicked();",
    "info" : "ExpressionStatement[89819-89834]:ExpressionStatement[89819-89834]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[90450-90453]:Block[90450-90453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[90501-90526]:Block[90501-90526]"
  }, {
    "left" : "mouseDragged();",
    "right" : "mouseDragged();",
    "info" : "ExpressionStatement[90507-90522]:ExpressionStatement[90507-90522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91133-91136]:Block[91133-91136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91182-91205]:Block[91182-91205]"
  }, {
    "left" : "mouseMoved();",
    "right" : "mouseMoved();",
    "info" : "ExpressionStatement[91188-91201]:ExpressionStatement[91188-91201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91237-91240]:Block[91237-91240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91288-91313]:Block[91288-91313]"
  }, {
    "left" : "mouseEntered();",
    "right" : "mouseEntered();",
    "info" : "ExpressionStatement[91294-91309]:ExpressionStatement[91294-91309]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91344-91347]:Block[91344-91347]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91394-91418]:Block[91394-91418]"
  }, {
    "left" : "mouseExited();",
    "right" : "mouseExited();",
    "info" : "ExpressionStatement[91400-91414]:ExpressionStatement[91400-91414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91474-91477]:Block[91474-91477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[92151-92174]:Block[92151-92174]"
  }, {
    "left" : "mouseWheel();",
    "right" : "mouseWheel();",
    "info" : "ExpressionStatement[92157-92170]:ExpressionStatement[92157-92170]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[92293-93960]:Block[92293-93960]"
  }, {
    "left" : "keyEvent = event;",
    "right" : "keyEvent = event;",
    "info" : "ExpressionStatement[92299-92316]:ExpressionStatement[92299-92316]"
  }, {
    "left" : "key = event.getKey();",
    "right" : "key = event.getKey();",
    "info" : "ExpressionStatement[92321-92342]:ExpressionStatement[92321-92342]"
  }, {
    "left" : "keyCode = event.getKeyCode();",
    "right" : "keyCode = event.getKeyCode();",
    "info" : "ExpressionStatement[92347-92376]:ExpressionStatement[92347-92376]"
  }, {
    "left" : "switch (event.getAction()) {\n    case KeyEvent.PRESS:\n      keyPressed = true;\n      keyPressed(keyEvent);\n      break;\n    case KeyEvent.RELEASE:\n      keyPressed = false;\n      keyReleased(keyEvent);\n      break;\n    case KeyEvent.TYPE:\n      keyTyped(keyEvent);\n      break;\n    }",
    "right" : "switch (event.getAction()) {\n    case KeyEvent.PRESS:\n      keyPressed = true;\n      keyPressed(keyEvent);\n      break;\n    case KeyEvent.RELEASE:\n      keyPressed = false;\n      keyReleased(keyEvent);\n      break;\n    case KeyEvent.TYPE:\n      keyTyped(keyEvent);\n      break;\n    }",
    "info" : "SwitchStatement[92382-92665]:SwitchStatement[92382-92665]"
  }, {
    "left" : "case KeyEvent.PRESS:",
    "right" : "case KeyEvent.PRESS:",
    "info" : "SwitchCase[92415-92435]:SwitchCase[92415-92435]"
  }, {
    "left" : "keyPressed = true;",
    "right" : "keyPressed = true;",
    "info" : "ExpressionStatement[92442-92460]:ExpressionStatement[92442-92460]"
  }, {
    "left" : "keyPressed(keyEvent);",
    "right" : "keyPressed(keyEvent);",
    "info" : "ExpressionStatement[92467-92488]:ExpressionStatement[92467-92488]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[92495-92501]:BreakStatement[92495-92501]"
  }, {
    "left" : "case KeyEvent.RELEASE:",
    "right" : "case KeyEvent.RELEASE:",
    "info" : "SwitchCase[92506-92528]:SwitchCase[92506-92528]"
  }, {
    "left" : "keyPressed = false;",
    "right" : "keyPressed = false;",
    "info" : "ExpressionStatement[92535-92554]:ExpressionStatement[92535-92554]"
  }, {
    "left" : "keyReleased(keyEvent);",
    "right" : "keyReleased(keyEvent);",
    "info" : "ExpressionStatement[92561-92583]:ExpressionStatement[92561-92583]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[92590-92596]:BreakStatement[92590-92596]"
  }, {
    "left" : "case KeyEvent.TYPE:",
    "right" : "case KeyEvent.TYPE:",
    "info" : "SwitchCase[92601-92620]:SwitchCase[92601-92620]"
  }, {
    "left" : "keyTyped(keyEvent);",
    "right" : "keyTyped(keyEvent);",
    "info" : "ExpressionStatement[92627-92646]:ExpressionStatement[92627-92646]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[92653-92659]:BreakStatement[92653-92659]"
  }, {
    "left" : "handleMethods(\"keyEvent\", new Object[] { event });",
    "right" : "handleMethods(\"keyEvent\", new Object[] { event });",
    "info" : "ExpressionStatement[92793-92843]:ExpressionStatement[92793-92843]"
  }, {
    "left" : "if (event.getAction() == KeyEvent.PRESS)",
    "right" : "if (event.getAction() == KeyEvent.PRESS)",
    "info" : "IfStatement[92967-93956]:IfStatement[92967-93956]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93008-93956]:Block[93008-93956]"
  }, {
    "left" : "if (key == ESC)",
    "right" : "if (key == ESC)",
    "info" : "IfStatement[93072-93113]:IfStatement[93072-93113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93088-93113]:Block[93088-93113]"
  }, {
    "left" : "exit();",
    "right" : "exit();",
    "info" : "ExpressionStatement[93098-93105]:ExpressionStatement[93098-93105]"
  }, {
    "left" : "if (external &&\n          event.getKeyCode() == 'W' &&\n          ((event.isMetaDown() && platform == MACOSX) ||\n           (event.isControlDown() && platform != MACOSX)))",
    "right" : "if (external &&\n          event.getKeyCode() == 'W' &&\n          ((event.isMetaDown() && platform == MACOSX) ||\n           (event.isControlDown() && platform != MACOSX)))",
    "info" : "IfStatement[93413-93950]:IfStatement[93413-93950]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93584-93950]:Block[93584-93950]"
  }, {
    "left" : "exit();",
    "right" : "exit();",
    "info" : "ExpressionStatement[93935-93942]:ExpressionStatement[93935-93942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97325-97328]:Block[97325-97328]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97372-97395]:Block[97372-97395]"
  }, {
    "left" : "keyPressed();",
    "right" : "keyPressed();",
    "info" : "ExpressionStatement[97378-97391]:ExpressionStatement[97378-97391]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97886-97889]:Block[97886-97889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97934-97958]:Block[97934-97958]"
  }, {
    "left" : "keyReleased();",
    "right" : "keyReleased();",
    "info" : "ExpressionStatement[97940-97954]:ExpressionStatement[97940-97954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98576-98579]:Block[98576-98579]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98621-98642]:Block[98621-98642]"
  }, {
    "left" : "keyTyped();",
    "right" : "keyTyped();",
    "info" : "ExpressionStatement[98627-98638]:ExpressionStatement[98627-98638]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98879-98882]:Block[98879-98882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98911-98914]:Block[98911-98914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[99623-99690]:Block[99623-99690]"
  }, {
    "left" : "return (int) (System.currentTimeMillis() - millisOffset);",
    "right" : "return (int) (System.currentTimeMillis() - millisOffset);",
    "info" : "ReturnStatement[99629-99686]:ReturnStatement[99629-99686]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100149-100210]:Block[100149-100210]"
  }, {
    "left" : "return Calendar.getInstance().get(Calendar.SECOND);",
    "right" : "return Calendar.getInstance().get(Calendar.SECOND);",
    "info" : "ReturnStatement[100155-100206]:ReturnStatement[100155-100206]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100679-100740]:Block[100679-100740]"
  }, {
    "left" : "return Calendar.getInstance().get(Calendar.MINUTE);",
    "right" : "return Calendar.getInstance().get(Calendar.MINUTE);",
    "info" : "ReturnStatement[100685-100736]:ReturnStatement[100685-100736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101196-101262]:Block[101196-101262]"
  }, {
    "left" : "return Calendar.getInstance().get(Calendar.HOUR_OF_DAY);",
    "right" : "return Calendar.getInstance().get(Calendar.HOUR_OF_DAY);",
    "info" : "ReturnStatement[101202-101258]:ReturnStatement[101202-101258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101930-101997]:Block[101930-101997]"
  }, {
    "left" : "return Calendar.getInstance().get(Calendar.DAY_OF_MONTH);",
    "right" : "return Calendar.getInstance().get(Calendar.DAY_OF_MONTH);",
    "info" : "ReturnStatement[101936-101993]:ReturnStatement[101936-101993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[102456-102581]:Block[102456-102581]"
  }, {
    "left" : "return Calendar.getInstance().get(Calendar.MONTH) + 1;",
    "right" : "return Calendar.getInstance().get(Calendar.MONTH) + 1;",
    "info" : "ReturnStatement[102523-102577]:ReturnStatement[102523-102577]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[103153-103212]:Block[103153-103212]"
  }, {
    "left" : "return Calendar.getInstance().get(Calendar.YEAR);",
    "right" : "return Calendar.getInstance().get(Calendar.YEAR);",
    "info" : "ReturnStatement[103159-103208]:ReturnStatement[103159-103208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104093-104248]:Block[104093-104248]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[104153-104228]:TryStatement[104153-104228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104157-104193]:Block[104157-104193]"
  }, {
    "left" : "Thread.sleep(napTime);",
    "right" : "Thread.sleep(napTime);",
    "info" : "ExpressionStatement[104165-104187]:ExpressionStatement[104165-104187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104225-104228]:Block[104225-104228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105028-105064]:Block[105028-105064]"
  }, {
    "left" : "surface.setFrameRate(fps);",
    "right" : "surface.setFrameRate(fps);",
    "info" : "ExpressionStatement[105034-105060]:ExpressionStatement[105034-105060]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105799-106138]:Block[105799-106138]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[105805-106134]:TryStatement[105805-106134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105809-106013]:Block[105809-106013]"
  }, {
    "left" : "if (Desktop.isDesktopSupported())",
    "right" : "if (Desktop.isDesktopSupported())",
    "info" : "IfStatement[105817-106007]:IfStatement[105817-106007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105851-105911]:Block[105851-105911]"
  }, {
    "left" : "Desktop.getDesktop().browse(new URI(url));",
    "right" : "Desktop.getDesktop().browse(new URI(url));",
    "info" : "ExpressionStatement[105861-105903]:ExpressionStatement[105861-105903]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105917-106007]:Block[105917-106007]"
  }, {
    "left" : "launch(url);",
    "right" : "launch(url);",
    "info" : "ExpressionStatement[105987-105999]:ExpressionStatement[105987-105999]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[106036-106070]:Block[106036-106070]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[106044-106064]:ExpressionStatement[106044-106064]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[106100-106134]:Block[106100-106134]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[106108-106128]:ExpressionStatement[106108-106128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108105-109953]:Block[108105-109953]"
  }, {
    "left" : "String[] params = null;",
    "right" : "String[] params = null;",
    "info" : "VariableDeclarationStatement[108111-108134]:VariableDeclarationStatement[108111-108134]"
  }, {
    "left" : "if (platform == WINDOWS)",
    "right" : "if (platform == WINDOWS)",
    "info" : "IfStatement[108140-109606]:IfStatement[108140-109606]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108165-108436]:Block[108165-108436]"
  }, {
    "left" : "params = new String[] { \"cmd\", \"/c\" };",
    "right" : "params = new String[] { \"cmd\", \"/c\" };",
    "info" : "ExpressionStatement[108391-108429]:ExpressionStatement[108391-108429]"
  }, {
    "left" : "if (platform == MACOSX)",
    "right" : "if (platform == MACOSX)",
    "info" : "IfStatement[108442-109606]:IfStatement[108442-109606]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108466-108514]:Block[108466-108514]"
  }, {
    "left" : "params = new String[] { \"open\" };",
    "right" : "params = new String[] { \"open\" };",
    "info" : "ExpressionStatement[108474-108507]:ExpressionStatement[108474-108507]"
  }, {
    "left" : "if (platform == LINUX)",
    "right" : "if (platform == LINUX)",
    "info" : "IfStatement[108520-109606]:IfStatement[108520-109606]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108543-109606]:Block[108543-109606]"
  }, {
    "left" : "if (openLauncher == null)",
    "right" : "if (openLauncher == null)",
    "info" : "IfStatement[108551-108908]:IfStatement[108551-108908]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108577-108908]:Block[108577-108908]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[108624-108900]:TryStatement[108624-108900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108628-108876]:Block[108628-108876]"
  }, {
    "left" : "Process p = Runtime.getRuntime().exec(new String[] { \"gnome-open\" });",
    "right" : "Process p = Runtime.getRuntime().exec(new String[] { \"gnome-open\" });",
    "info" : "VariableDeclarationStatement[108640-108709]:VariableDeclarationStatement[108640-108709]"
  }, {
    "left" : "p.waitFor();",
    "right" : "p.waitFor();",
    "info" : "ExpressionStatement[108737-108749]:ExpressionStatement[108737-108749]"
  }, {
    "left" : "openLauncher = \"gnome-open\";",
    "right" : "openLauncher = \"gnome-open\";",
    "info" : "ExpressionStatement[108838-108866]:ExpressionStatement[108838-108866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108897-108900]:Block[108897-108900]"
  }, {
    "left" : "if (openLauncher == null)",
    "right" : "if (openLauncher == null)",
    "info" : "IfStatement[108915-109186]:IfStatement[108915-109186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108941-109186]:Block[108941-109186]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[108984-109178]:TryStatement[108984-109178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108988-109154]:Block[108988-109154]"
  }, {
    "left" : "Process p = Runtime.getRuntime().exec(new String[] { \"kde-open\" });",
    "right" : "Process p = Runtime.getRuntime().exec(new String[] { \"kde-open\" });",
    "info" : "VariableDeclarationStatement[109000-109067]:VariableDeclarationStatement[109000-109067]"
  }, {
    "left" : "p.waitFor();",
    "right" : "p.waitFor();",
    "info" : "ExpressionStatement[109095-109107]:ExpressionStatement[109095-109107]"
  }, {
    "left" : "openLauncher = \"kde-open\";",
    "right" : "openLauncher = \"kde-open\";",
    "info" : "ExpressionStatement[109118-109144]:ExpressionStatement[109118-109144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109175-109178]:Block[109175-109178]"
  }, {
    "left" : "if (openLauncher == null)",
    "right" : "if (openLauncher == null)",
    "info" : "IfStatement[109193-109363]:IfStatement[109193-109363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109219-109363]:Block[109219-109363]"
  }, {
    "left" : "System.err.println(\"Could not find gnome-open or kde-open, \" +\n                           \"the open() command may not work.\");",
    "right" : "System.err.println(\"Could not find gnome-open or kde-open, \" +\n                           \"the open() command may not work.\");",
    "info" : "ExpressionStatement[109229-109355]:ExpressionStatement[109229-109355]"
  }, {
    "left" : "if (openLauncher != null)",
    "right" : "if (openLauncher != null)",
    "info" : "IfStatement[109370-109453]:IfStatement[109370-109453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109396-109453]:Block[109396-109453]"
  }, {
    "left" : "params = new String[] { openLauncher };",
    "right" : "params = new String[] { openLauncher };",
    "info" : "ExpressionStatement[109406-109445]:ExpressionStatement[109406-109445]"
  }, {
    "left" : "if (params != null)",
    "right" : "if (params != null)",
    "info" : "IfStatement[109611-109949]:IfStatement[109611-109949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109631-109911]:Block[109631-109911]"
  }, {
    "left" : "if (params[0].equals(args[0]))",
    "right" : "if (params[0].equals(args[0]))",
    "info" : "IfStatement[109706-109905]:IfStatement[109706-109905]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109737-109822]:Block[109737-109822]"
  }, {
    "left" : "return exec(args);",
    "right" : "return exec(args);",
    "info" : "ReturnStatement[109796-109814]:ReturnStatement[109796-109814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109828-109905]:Block[109828-109905]"
  }, {
    "left" : "params = concat(params, args);",
    "right" : "params = concat(params, args);",
    "info" : "ExpressionStatement[109838-109868]:ExpressionStatement[109838-109868]"
  }, {
    "left" : "return exec(params);",
    "right" : "return exec(params);",
    "info" : "ReturnStatement[109877-109897]:ReturnStatement[109877-109897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109917-109949]:Block[109917-109949]"
  }, {
    "left" : "return exec(args);",
    "right" : "return exec(args);",
    "info" : "ReturnStatement[109925-109943]:ReturnStatement[109925-109943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110001-110194]:Block[110001-110194]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[110007-110190]:TryStatement[110007-110190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110011-110064]:Block[110011-110064]"
  }, {
    "left" : "return Runtime.getRuntime().exec(args);",
    "right" : "return Runtime.getRuntime().exec(args);",
    "info" : "ReturnStatement[110019-110058]:ReturnStatement[110019-110058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110085-110190]:Block[110085-110190]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[110093-110113]:ExpressionStatement[110093-110113]"
  }, {
    "left" : "throw new RuntimeException(\"Could not open \" + join(args, ' '));",
    "right" : "throw new RuntimeException(\"Could not open \" + join(args, ' '));",
    "info" : "ThrowStatement[110120-110184]:ThrowStatement[110120-110184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110623-110681]:Block[110623-110681]"
  }, {
    "left" : "dispose();",
    "right" : "dispose();",
    "info" : "ExpressionStatement[110629-110639]:ExpressionStatement[110629-110639]"
  }, {
    "left" : "throw new RuntimeException(what);",
    "right" : "throw new RuntimeException(what);",
    "info" : "ThrowStatement[110644-110677]:ThrowStatement[110644-110677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110799-110859]:Block[110799-110859]"
  }, {
    "left" : "if (e != null)",
    "right" : "if (e != null)",
    "info" : "IfStatement[110805-110840]:IfStatement[110805-110840]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[110820-110840]:ExpressionStatement[110820-110840]"
  }, {
    "left" : "die(what);",
    "right" : "die(what);",
    "info" : "ExpressionStatement[110845-110855]:ExpressionStatement[110845-110855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[111742-112356]:Block[111742-112356]"
  }, {
    "left" : "if (surface.isStopped())",
    "right" : "if (surface.isStopped())",
    "info" : "IfStatement[111748-112352]:IfStatement[111748-112352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[111773-111923]:Block[111773-111923]"
  }, {
    "left" : "exitActual();",
    "right" : "exitActual();",
    "info" : "ExpressionStatement[111903-111916]:ExpressionStatement[111903-111916]"
  }, {
    "left" : "if (looping)",
    "right" : "if (looping)",
    "info" : "IfStatement[111929-112352]:IfStatement[111929-112352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[111942-112162]:Block[111942-112162]"
  }, {
    "left" : "finished = true;",
    "right" : "finished = true;",
    "info" : "ExpressionStatement[112004-112020]:ExpressionStatement[112004-112020]"
  }, {
    "left" : "exitCalled = true;",
    "right" : "exitCalled = true;",
    "info" : "ExpressionStatement[112137-112155]:ExpressionStatement[112137-112155]"
  }, {
    "left" : "if (!looping)",
    "right" : "if (!looping)",
    "info" : "IfStatement[112168-112352]:IfStatement[112168-112352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112182-112352]:Block[112182-112352]"
  }, {
    "left" : "dispose();",
    "right" : "dispose();",
    "info" : "ExpressionStatement[112294-112304]:ExpressionStatement[112294-112304]"
  }, {
    "left" : "exitActual();",
    "right" : "exitActual();",
    "info" : "ExpressionStatement[112333-112346]:ExpressionStatement[112333-112346]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112389-112417]:Block[112389-112417]"
  }, {
    "left" : "return exitCalled;",
    "right" : "return exitCalled;",
    "info" : "ReturnStatement[112395-112413]:ReturnStatement[112395-112413]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112668-112800]:Block[112668-112800]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[112674-112796]:TryStatement[112674-112796]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112678-112707]:Block[112678-112707]"
  }, {
    "left" : "System.exit(0);",
    "right" : "System.exit(0);",
    "info" : "ExpressionStatement[112686-112701]:ExpressionStatement[112686-112701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112736-112796]:Block[112736-112796]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113125-113470]:Block[113125-113470]"
  }, {
    "left" : "finished = true;",
    "right" : "finished = true;",
    "info" : "ExpressionStatement[113161-113177]:ExpressionStatement[113161-113177]"
  }, {
    "left" : "if (surface.stopThread())",
    "right" : "if (surface.stopThread())",
    "info" : "IfStatement[113265-113466]:IfStatement[113265-113466]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113291-113466]:Block[113291-113466]"
  }, {
    "left" : "if (g != null)",
    "right" : "if (g != null)",
    "info" : "IfStatement[113328-113373]:IfStatement[113328-113373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113343-113373]:Block[113343-113373]"
  }, {
    "left" : "g.dispose();",
    "right" : "g.dispose();",
    "info" : "ExpressionStatement[113353-113365]:ExpressionStatement[113353-113365]"
  }, {
    "left" : "handleMethods(\"dispose\");",
    "right" : "handleMethods(\"dispose\");",
    "info" : "ExpressionStatement[113435-113460]:ExpressionStatement[113435-113460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113863-114461]:Block[113863-114461]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[113869-114457]:TryStatement[113869-114457]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113873-113992]:Block[113873-113992]"
  }, {
    "left" : "Method method = getClass().getMethod(name, new Class[] {});",
    "right" : "Method method = getClass().getMethod(name, new Class[] {});",
    "info" : "VariableDeclarationStatement[113881-113940]:VariableDeclarationStatement[113881-113940]"
  }, {
    "left" : "method.invoke(this, new Object[] { });",
    "right" : "method.invoke(this, new Object[] { });",
    "info" : "ExpressionStatement[113947-113985]:ExpressionStatement[113947-113985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114028-114062]:Block[114028-114062]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[114036-114056]:ExpressionStatement[114036-114056]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114096-114130]:Block[114096-114130]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[114104-114124]:ExpressionStatement[114104-114124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114167-114222]:Block[114167-114222]"
  }, {
    "left" : "e.getTargetException().printStackTrace();",
    "right" : "e.getTargetException().printStackTrace();",
    "info" : "ExpressionStatement[114175-114216]:ExpressionStatement[114175-114216]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114258-114402]:Block[114258-114402]"
  }, {
    "left" : "System.err.println(\"There is no public \" + name + \"() method \" +\n                         \"in the class \" + getClass().getName());",
    "right" : "System.err.println(\"There is no public \" + name + \"() method \" +\n                         \"in the class \" + getClass().getName());",
    "info" : "ExpressionStatement[114266-114396]:ExpressionStatement[114266-114396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114423-114457]:Block[114423-114457]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[114431-114451]:ExpressionStatement[114431-114451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115145-115282]:Block[115145-115282]"
  }, {
    "left" : "Thread later = new Thread() {\n      @Override\n      public void run() {\n        method(name);\n      }\n    };",
    "right" : "Thread later = new Thread() {\n      @Override\n      public void run() {\n        method(name);\n      }\n    };",
    "info" : "VariableDeclarationStatement[115151-115259]:VariableDeclarationStatement[115151-115259]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115221-115252]:Block[115221-115252]"
  }, {
    "left" : "method(name);",
    "right" : "method(name);",
    "info" : "ExpressionStatement[115231-115244]:ExpressionStatement[115231-115244]"
  }, {
    "left" : "later.start();",
    "right" : "later.start();",
    "info" : "ExpressionStatement[115264-115278]:ExpressionStatement[115264-115278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[116430-116467]:Block[116430-116467]"
  }, {
    "left" : "g.save(savePath(filename));",
    "right" : "g.save(savePath(filename));",
    "info" : "ExpressionStatement[116436-116463]:ExpressionStatement[116436-116463]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[116508-116768]:Block[116508-116768]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[116514-116764]:TryStatement[116514-116764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[116518-116589]:Block[116518-116589]"
  }, {
    "left" : "g.save(savePath(\"screen-\" + nf(frameCount, 4) + \".tif\"));",
    "right" : "g.save(savePath(\"screen-\" + nf(frameCount, 4) + \".tif\"));",
    "info" : "ExpressionStatement[116526-116583]:ExpressionStatement[116526-116583]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[116619-116764]:Block[116619-116764]"
  }, {
    "left" : "System.err.println(\"Can't use saveFrame() when running in a browser, \" +\n                         \"unless using a signed applet.\");",
    "right" : "System.err.println(\"Can't use saveFrame() when running in a browser, \" +\n                         \"unless using a signed applet.\");",
    "info" : "ExpressionStatement[116627-116758]:ExpressionStatement[116627-116758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118550-118793]:Block[118550-118793]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[118556-118789]:TryStatement[118556-118789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118560-118614]:Block[118560-118614]"
  }, {
    "left" : "g.save(savePath(insertFrame(filename)));",
    "right" : "g.save(savePath(insertFrame(filename)));",
    "info" : "ExpressionStatement[118568-118608]:ExpressionStatement[118568-118608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118644-118789]:Block[118644-118789]"
  }, {
    "left" : "System.err.println(\"Can't use saveFrame() when running in a browser, \" +\n                         \"unless using a signed applet.\");",
    "right" : "System.err.println(\"Can't use saveFrame() when running in a browser, \" +\n                         \"unless using a signed applet.\");",
    "info" : "ExpressionStatement[118652-118783]:ExpressionStatement[118652-118783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119171-119520]:Block[119171-119520]"
  }, {
    "left" : "int first = what.indexOf('#');",
    "right" : "int first = what.indexOf('#');",
    "info" : "VariableDeclarationStatement[119177-119207]:VariableDeclarationStatement[119177-119207]"
  }, {
    "left" : "int last = what.lastIndexOf('#');",
    "right" : "int last = what.lastIndexOf('#');",
    "info" : "VariableDeclarationStatement[119212-119245]:VariableDeclarationStatement[119212-119245]"
  }, {
    "left" : "if ((first != -1) && (last - first > 0))",
    "right" : "if ((first != -1) && (last - first > 0))",
    "info" : "IfStatement[119251-119485]:IfStatement[119251-119485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119292-119485]:Block[119292-119485]"
  }, {
    "left" : "String prefix = what.substring(0, first);",
    "right" : "String prefix = what.substring(0, first);",
    "info" : "VariableDeclarationStatement[119300-119341]:VariableDeclarationStatement[119300-119341]"
  }, {
    "left" : "int count = last - first + 1;",
    "right" : "int count = last - first + 1;",
    "info" : "VariableDeclarationStatement[119348-119377]:VariableDeclarationStatement[119348-119377]"
  }, {
    "left" : "String suffix = what.substring(last + 1);",
    "right" : "String suffix = what.substring(last + 1);",
    "info" : "VariableDeclarationStatement[119384-119425]:VariableDeclarationStatement[119384-119425]"
  }, {
    "left" : "return prefix + nf(frameCount, count) + suffix;",
    "right" : "return prefix + nf(frameCount, count) + suffix;",
    "info" : "ReturnStatement[119432-119479]:ReturnStatement[119432-119479]"
  }, {
    "left" : "return what;",
    "right" : "return what;",
    "info" : "ReturnStatement[119490-119502]:ReturnStatement[119490-119502]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119742-119776]:Block[119742-119776]"
  }, {
    "left" : "surface.setCursor(kind);",
    "right" : "surface.setCursor(kind);",
    "info" : "ExpressionStatement[119748-119772]:ExpressionStatement[119748-119772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119952-120001]:Block[119952-120001]"
  }, {
    "left" : "cursor(img, img.width/2, img.height/2);",
    "right" : "cursor(img, img.width/2, img.height/2);",
    "info" : "ExpressionStatement[119958-119997]:ExpressionStatement[119958-119997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[121325-121364]:Block[121325-121364]"
  }, {
    "left" : "surface.setCursor(img, x, y);",
    "right" : "surface.setCursor(img, x, y);",
    "info" : "ExpressionStatement[121331-121360]:ExpressionStatement[121331-121360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[121516-121547]:Block[121516-121547]"
  }, {
    "left" : "surface.showCursor();",
    "right" : "surface.showCursor();",
    "info" : "ExpressionStatement[121522-121543]:ExpressionStatement[121522-121543]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122004-122035]:Block[122004-122035]"
  }, {
    "left" : "surface.hideCursor();",
    "right" : "surface.hideCursor();",
    "info" : "ExpressionStatement[122010-122031]:ExpressionStatement[122010-122031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123630-123687]:Block[123630-123687]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[123636-123659]:ExpressionStatement[123636-123659]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[123664-123683]:ExpressionStatement[123664-123683]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123730-123787]:Block[123730-123787]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[123736-123759]:ExpressionStatement[123736-123759]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[123764-123783]:ExpressionStatement[123764-123783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123827-123884]:Block[123827-123884]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[123833-123856]:ExpressionStatement[123833-123856]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[123861-123880]:ExpressionStatement[123861-123880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123923-123980]:Block[123923-123980]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[123929-123952]:ExpressionStatement[123929-123952]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[123957-123976]:ExpressionStatement[123957-123976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124020-124077]:Block[124020-124077]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[124026-124049]:ExpressionStatement[124026-124049]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[124054-124073]:ExpressionStatement[124054-124073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124118-124175]:Block[124118-124175]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[124124-124147]:ExpressionStatement[124124-124147]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[124152-124171]:ExpressionStatement[124152-124171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124217-124274]:Block[124217-124274]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[124223-124246]:ExpressionStatement[124223-124246]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[124251-124270]:ExpressionStatement[124251-124270]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124316-124373]:Block[124316-124373]"
  }, {
    "left" : "System.out.print(what);",
    "right" : "System.out.print(what);",
    "info" : "ExpressionStatement[124322-124345]:ExpressionStatement[124322-124345]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[124350-124369]:ExpressionStatement[124350-124369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124491-124784]:Block[124491-124784]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder();",
    "right" : "StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[124497-124536]:VariableDeclarationStatement[124497-124536]"
  }, {
    "left" : "for (Object o : variables)",
    "right" : "for (Object o : variables)",
    "info" : "EnhancedForStatement[124541-124743]:EnhancedForStatement[124541-124743]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124568-124743]:Block[124568-124743]"
  }, {
    "left" : "if (sb.length() != 0)",
    "right" : "if (sb.length() != 0)",
    "info" : "IfStatement[124576-124631]:IfStatement[124576-124631]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124598-124631]:Block[124598-124631]"
  }, {
    "left" : "sb.append(\" \");",
    "right" : "sb.append(\" \");",
    "info" : "ExpressionStatement[124608-124623]:ExpressionStatement[124608-124623]"
  }, {
    "left" : "if (o == null)",
    "right" : "if (o == null)",
    "info" : "IfStatement[124638-124737]:IfStatement[124638-124737]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124653-124689]:Block[124653-124689]"
  }, {
    "left" : "sb.append(\"null\");",
    "right" : "sb.append(\"null\");",
    "info" : "ExpressionStatement[124663-124681]:ExpressionStatement[124663-124681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124695-124737]:Block[124695-124737]"
  }, {
    "left" : "sb.append(o.toString());",
    "right" : "sb.append(o.toString());",
    "info" : "ExpressionStatement[124705-124729]:ExpressionStatement[124705-124729]"
  }, {
    "left" : "System.out.print(sb.toString());",
    "right" : "System.out.print(sb.toString());",
    "info" : "ExpressionStatement[124748-124780]:ExpressionStatement[124748-124780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126044-126075]:Block[126044-126075]"
  }, {
    "left" : "System.out.println();",
    "right" : "System.out.println();",
    "info" : "ExpressionStatement[126050-126071]:ExpressionStatement[126050-126071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126166-126225]:Block[126166-126225]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126172-126197]:ExpressionStatement[126172-126197]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126202-126221]:ExpressionStatement[126202-126221]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126270-126329]:Block[126270-126329]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126276-126301]:ExpressionStatement[126276-126301]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126306-126325]:ExpressionStatement[126306-126325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126371-126430]:Block[126371-126430]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126377-126402]:ExpressionStatement[126377-126402]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126407-126426]:ExpressionStatement[126407-126426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126471-126530]:Block[126471-126530]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126477-126502]:ExpressionStatement[126477-126502]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126507-126526]:ExpressionStatement[126507-126526]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126572-126631]:Block[126572-126631]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126578-126603]:ExpressionStatement[126578-126603]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126608-126627]:ExpressionStatement[126608-126627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126674-126733]:Block[126674-126733]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126680-126705]:ExpressionStatement[126680-126705]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126710-126729]:ExpressionStatement[126710-126729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126777-126836]:Block[126777-126836]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126783-126808]:ExpressionStatement[126783-126808]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126813-126832]:ExpressionStatement[126813-126832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126880-126939]:Block[126880-126939]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[126886-126911]:ExpressionStatement[126886-126911]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[126916-126935]:ExpressionStatement[126916-126935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127059-127169]:Block[127059-127169]"
  }, {
    "left" : "print(variables);",
    "right" : "print(variables);",
    "info" : "ExpressionStatement[127133-127150]:ExpressionStatement[127133-127150]"
  }, {
    "left" : "println();",
    "right" : "println();",
    "info" : "ExpressionStatement[127155-127165]:ExpressionStatement[127155-127165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127969-128188]:Block[127969-128188]"
  }, {
    "left" : "if (what == null)",
    "right" : "if (what == null)",
    "info" : "IfStatement[127975-128184]:IfStatement[127975-128184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127993-128034]:Block[127993-128034]"
  }, {
    "left" : "System.out.println(\"null\");",
    "right" : "System.out.println(\"null\");",
    "info" : "ExpressionStatement[128001-128028]:ExpressionStatement[128001-128028]"
  }, {
    "left" : "if (what.getClass().isArray())",
    "right" : "if (what.getClass().isArray())",
    "info" : "IfStatement[128040-128184]:IfStatement[128040-128184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128071-128102]:Block[128071-128102]"
  }, {
    "left" : "printArray(what);",
    "right" : "printArray(what);",
    "info" : "ExpressionStatement[128079-128096]:ExpressionStatement[128079-128096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128108-128184]:Block[128108-128184]"
  }, {
    "left" : "System.out.println(what.toString());",
    "right" : "System.out.println(what.toString());",
    "info" : "ExpressionStatement[128116-128152]:ExpressionStatement[128116-128152]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[128159-128178]:ExpressionStatement[128159-128178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128482-130928]:Block[128482-130928]"
  }, {
    "left" : "if (what == null)",
    "right" : "if (what == null)",
    "info" : "IfStatement[128488-130900]:IfStatement[128488-130900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128506-128609]:Block[128506-128609]"
  }, {
    "left" : "System.out.println(\"null\");",
    "right" : "System.out.println(\"null\");",
    "info" : "ExpressionStatement[128575-128602]:ExpressionStatement[128575-128602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128615-130900]:Block[128615-130900]"
  }, {
    "left" : "String name = what.getClass().getName();",
    "right" : "String name = what.getClass().getName();",
    "info" : "VariableDeclarationStatement[128623-128663]:VariableDeclarationStatement[128623-128663]"
  }, {
    "left" : "if (name.charAt(0) == '[')",
    "right" : "if (name.charAt(0) == '[')",
    "info" : "IfStatement[128670-130894]:IfStatement[128670-130894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128697-130828]:Block[128697-130828]"
  }, {
    "left" : "switch (name.charAt(1)) {\n        case '[':\n          // don't even mess with multi-dimensional arrays (case '[')\n          // or anything else that's not int, float, boolean, char\n          System.out.println(what);\n          break;\n\n        case 'L':\n          // print a 1D array of objects as individual elements\n          Object poo[] = (Object[]) what;\n          for (int i = 0; i < poo.length; i++) {\n            if (poo[i] instanceof String) {\n              System.out.println(\"[\" + i + \"] \\\"\" + poo[i] + \"\\\"\");\n            } else {\n              System.out.println(\"[\" + i + \"] \" + poo[i]);\n            }\n          }\n          break;\n\n        case 'Z':  // boolean\n          boolean zz[] = (boolean[]) what;\n          for (int i = 0; i < zz.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + zz[i]);\n          }\n          break;\n\n        case 'B':  // byte\n          byte bb[] = (byte[]) what;\n          for (int i = 0; i < bb.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + bb[i]);\n          }\n          break;\n\n        case 'C':  // char\n          char cc[] = (char[]) what;\n          for (int i = 0; i < cc.length; i++) {\n            System.out.println(\"[\" + i + \"] '\" + cc[i] + \"'\");\n          }\n          break;\n\n        case 'I':  // int\n          int ii[] = (int[]) what;\n          for (int i = 0; i < ii.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + ii[i]);\n          }\n          break;\n\n        case 'J':  // int\n          long jj[] = (long[]) what;\n          for (int i = 0; i < jj.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + jj[i]);\n          }\n          break;\n\n        case 'F':  // float\n          float ff[] = (float[]) what;\n          for (int i = 0; i < ff.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + ff[i]);\n          }\n          break;\n\n        case 'D':  // double\n          double dd[] = (double[]) what;\n          for (int i = 0; i < dd.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + dd[i]);\n          }\n          break;\n\n        default:\n          System.out.println(what);\n        }",
    "right" : "switch (name.charAt(1)) {\n        case '[':\n          // don't even mess with multi-dimensional arrays (case '[')\n          // or anything else that's not int, float, boolean, char\n          System.out.println(what);\n          break;\n\n        case 'L':\n          // print a 1D array of objects as individual elements\n          Object poo[] = (Object[]) what;\n          for (int i = 0; i < poo.length; i++) {\n            if (poo[i] instanceof String) {\n              System.out.println(\"[\" + i + \"] \\\"\" + poo[i] + \"\\\"\");\n            } else {\n              System.out.println(\"[\" + i + \"] \" + poo[i]);\n            }\n          }\n          break;\n\n        case 'Z':  // boolean\n          boolean zz[] = (boolean[]) what;\n          for (int i = 0; i < zz.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + zz[i]);\n          }\n          break;\n\n        case 'B':  // byte\n          byte bb[] = (byte[]) what;\n          for (int i = 0; i < bb.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + bb[i]);\n          }\n          break;\n\n        case 'C':  // char\n          char cc[] = (char[]) what;\n          for (int i = 0; i < cc.length; i++) {\n            System.out.println(\"[\" + i + \"] '\" + cc[i] + \"'\");\n          }\n          break;\n\n        case 'I':  // int\n          int ii[] = (int[]) what;\n          for (int i = 0; i < ii.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + ii[i]);\n          }\n          break;\n\n        case 'J':  // int\n          long jj[] = (long[]) what;\n          for (int i = 0; i < jj.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + jj[i]);\n          }\n          break;\n\n        case 'F':  // float\n          float ff[] = (float[]) what;\n          for (int i = 0; i < ff.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + ff[i]);\n          }\n          break;\n\n        case 'D':  // double\n          double dd[] = (double[]) what;\n          for (int i = 0; i < dd.length; i++) {\n            System.out.println(\"[\" + i + \"] \" + dd[i]);\n          }\n          break;\n\n        default:\n          System.out.println(what);\n        }",
    "info" : "SwitchStatement[128707-130820]:SwitchStatement[128707-130820]"
  }, {
    "left" : "case '[':",
    "right" : "case '[':",
    "info" : "SwitchCase[128741-128750]:SwitchCase[128741-128750]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[128898-128923]:ExpressionStatement[128898-128923]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[128934-128940]:BreakStatement[128934-128940]"
  }, {
    "left" : "case 'L':",
    "right" : "case 'L':",
    "info" : "SwitchCase[128950-128959]:SwitchCase[128950-128959]"
  }, {
    "left" : "Object poo[] = (Object[]) what;",
    "right" : "Object poo[] = (Object[]) what;",
    "info" : "VariableDeclarationStatement[129034-129065]:VariableDeclarationStatement[129034-129065]"
  }, {
    "left" : "for (int i = 0; i < poo.length; i++)",
    "right" : "for (int i = 0; i < poo.length; i++)",
    "info" : "ForStatement[129076-129332]:ForStatement[129076-129332]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129113-129332]:Block[129113-129332]"
  }, {
    "left" : "if (poo[i] instanceof String)",
    "right" : "if (poo[i] instanceof String)",
    "info" : "IfStatement[129127-129320]:IfStatement[129127-129320]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129157-129240]:Block[129157-129240]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \\\"\" + poo[i] + \"\\\"\");",
    "right" : "System.out.println(\"[\" + i + \"] \\\"\" + poo[i] + \"\\\"\");",
    "info" : "ExpressionStatement[129173-129226]:ExpressionStatement[129173-129226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129246-129320]:Block[129246-129320]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \" + poo[i]);",
    "right" : "System.out.println(\"[\" + i + \"] \" + poo[i]);",
    "info" : "ExpressionStatement[129262-129306]:ExpressionStatement[129262-129306]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[129343-129349]:BreakStatement[129343-129349]"
  }, {
    "left" : "case 'Z':",
    "right" : "case 'Z':",
    "info" : "SwitchCase[129359-129368]:SwitchCase[129359-129368]"
  }, {
    "left" : "boolean zz[] = (boolean[]) what;",
    "right" : "boolean zz[] = (boolean[]) what;",
    "info" : "VariableDeclarationStatement[129391-129423]:VariableDeclarationStatement[129391-129423]"
  }, {
    "left" : "for (int i = 0; i < zz.length; i++)",
    "right" : "for (int i = 0; i < zz.length; i++)",
    "info" : "ForStatement[129434-129539]:ForStatement[129434-129539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129470-129539]:Block[129470-129539]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \" + zz[i]);",
    "right" : "System.out.println(\"[\" + i + \"] \" + zz[i]);",
    "info" : "ExpressionStatement[129484-129527]:ExpressionStatement[129484-129527]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[129550-129556]:BreakStatement[129550-129556]"
  }, {
    "left" : "case 'B':",
    "right" : "case 'B':",
    "info" : "SwitchCase[129566-129575]:SwitchCase[129566-129575]"
  }, {
    "left" : "byte bb[] = (byte[]) what;",
    "right" : "byte bb[] = (byte[]) what;",
    "info" : "VariableDeclarationStatement[129595-129621]:VariableDeclarationStatement[129595-129621]"
  }, {
    "left" : "for (int i = 0; i < bb.length; i++)",
    "right" : "for (int i = 0; i < bb.length; i++)",
    "info" : "ForStatement[129632-129737]:ForStatement[129632-129737]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129668-129737]:Block[129668-129737]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \" + bb[i]);",
    "right" : "System.out.println(\"[\" + i + \"] \" + bb[i]);",
    "info" : "ExpressionStatement[129682-129725]:ExpressionStatement[129682-129725]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[129748-129754]:BreakStatement[129748-129754]"
  }, {
    "left" : "case 'C':",
    "right" : "case 'C':",
    "info" : "SwitchCase[129764-129773]:SwitchCase[129764-129773]"
  }, {
    "left" : "char cc[] = (char[]) what;",
    "right" : "char cc[] = (char[]) what;",
    "info" : "VariableDeclarationStatement[129793-129819]:VariableDeclarationStatement[129793-129819]"
  }, {
    "left" : "for (int i = 0; i < cc.length; i++)",
    "right" : "for (int i = 0; i < cc.length; i++)",
    "info" : "ForStatement[129830-129942]:ForStatement[129830-129942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129866-129942]:Block[129866-129942]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] '\" + cc[i] + \"'\");",
    "right" : "System.out.println(\"[\" + i + \"] '\" + cc[i] + \"'\");",
    "info" : "ExpressionStatement[129880-129930]:ExpressionStatement[129880-129930]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[129953-129959]:BreakStatement[129953-129959]"
  }, {
    "left" : "case 'I':",
    "right" : "case 'I':",
    "info" : "SwitchCase[129969-129978]:SwitchCase[129969-129978]"
  }, {
    "left" : "int ii[] = (int[]) what;",
    "right" : "int ii[] = (int[]) what;",
    "info" : "VariableDeclarationStatement[129997-130021]:VariableDeclarationStatement[129997-130021]"
  }, {
    "left" : "for (int i = 0; i < ii.length; i++)",
    "right" : "for (int i = 0; i < ii.length; i++)",
    "info" : "ForStatement[130032-130137]:ForStatement[130032-130137]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[130068-130137]:Block[130068-130137]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \" + ii[i]);",
    "right" : "System.out.println(\"[\" + i + \"] \" + ii[i]);",
    "info" : "ExpressionStatement[130082-130125]:ExpressionStatement[130082-130125]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[130148-130154]:BreakStatement[130148-130154]"
  }, {
    "left" : "case 'J':",
    "right" : "case 'J':",
    "info" : "SwitchCase[130164-130173]:SwitchCase[130164-130173]"
  }, {
    "left" : "long jj[] = (long[]) what;",
    "right" : "long jj[] = (long[]) what;",
    "info" : "VariableDeclarationStatement[130192-130218]:VariableDeclarationStatement[130192-130218]"
  }, {
    "left" : "for (int i = 0; i < jj.length; i++)",
    "right" : "for (int i = 0; i < jj.length; i++)",
    "info" : "ForStatement[130229-130334]:ForStatement[130229-130334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[130265-130334]:Block[130265-130334]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \" + jj[i]);",
    "right" : "System.out.println(\"[\" + i + \"] \" + jj[i]);",
    "info" : "ExpressionStatement[130279-130322]:ExpressionStatement[130279-130322]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[130345-130351]:BreakStatement[130345-130351]"
  }, {
    "left" : "case 'F':",
    "right" : "case 'F':",
    "info" : "SwitchCase[130361-130370]:SwitchCase[130361-130370]"
  }, {
    "left" : "float ff[] = (float[]) what;",
    "right" : "float ff[] = (float[]) what;",
    "info" : "VariableDeclarationStatement[130391-130419]:VariableDeclarationStatement[130391-130419]"
  }, {
    "left" : "for (int i = 0; i < ff.length; i++)",
    "right" : "for (int i = 0; i < ff.length; i++)",
    "info" : "ForStatement[130430-130535]:ForStatement[130430-130535]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[130466-130535]:Block[130466-130535]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \" + ff[i]);",
    "right" : "System.out.println(\"[\" + i + \"] \" + ff[i]);",
    "info" : "ExpressionStatement[130480-130523]:ExpressionStatement[130480-130523]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[130546-130552]:BreakStatement[130546-130552]"
  }, {
    "left" : "case 'D':",
    "right" : "case 'D':",
    "info" : "SwitchCase[130562-130571]:SwitchCase[130562-130571]"
  }, {
    "left" : "double dd[] = (double[]) what;",
    "right" : "double dd[] = (double[]) what;",
    "info" : "VariableDeclarationStatement[130593-130623]:VariableDeclarationStatement[130593-130623]"
  }, {
    "left" : "for (int i = 0; i < dd.length; i++)",
    "right" : "for (int i = 0; i < dd.length; i++)",
    "info" : "ForStatement[130634-130739]:ForStatement[130634-130739]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[130670-130739]:Block[130670-130739]"
  }, {
    "left" : "System.out.println(\"[\" + i + \"] \" + dd[i]);",
    "right" : "System.out.println(\"[\" + i + \"] \" + dd[i]);",
    "info" : "ExpressionStatement[130684-130727]:ExpressionStatement[130684-130727]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[130750-130756]:BreakStatement[130750-130756]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[130766-130774]:SwitchCase[130766-130774]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[130785-130810]:ExpressionStatement[130785-130810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[130834-130894]:Block[130834-130894]"
  }, {
    "left" : "System.out.println(what);",
    "right" : "System.out.println(what);",
    "info" : "ExpressionStatement[130861-130886]:ExpressionStatement[130861-130886]"
  }, {
    "left" : "System.out.flush();",
    "right" : "System.out.flush();",
    "info" : "ExpressionStatement[130905-130924]:ExpressionStatement[130905-130924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[130970-131004]:Block[130970-131004]"
  }, {
    "left" : "if (DEBUG)",
    "right" : "if (DEBUG)",
    "info" : "IfStatement[130976-131000]:IfStatement[130976-131000]"
  }, {
    "left" : "println(msg);",
    "right" : "println(msg);",
    "info" : "ExpressionStatement[130987-131000]:ExpressionStatement[130987-131000]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[131934-131968]:Block[131934-131968]"
  }, {
    "left" : "return (n < 0) ? -n : n;",
    "right" : "return (n < 0) ? -n : n;",
    "info" : "ReturnStatement[131940-131964]:ReturnStatement[131940-131964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132007-132041]:Block[132007-132041]"
  }, {
    "left" : "return (n < 0) ? -n : n;",
    "right" : "return (n < 0) ? -n : n;",
    "info" : "ReturnStatement[132013-132037]:ReturnStatement[132013-132037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132464-132485]:Block[132464-132485]"
  }, {
    "left" : "return n*n;",
    "right" : "return n*n;",
    "info" : "ReturnStatement[132470-132481]:ReturnStatement[132470-132481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[133010-133047]:Block[133010-133047]"
  }, {
    "left" : "return (float)Math.sqrt(n);",
    "right" : "return (float)Math.sqrt(n);",
    "info" : "ReturnStatement[133016-133043]:ReturnStatement[133016-133043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[133386-133422]:Block[133386-133422]"
  }, {
    "left" : "return (float)Math.log(n);",
    "right" : "return (float)Math.log(n);",
    "info" : "ReturnStatement[133392-133418]:ReturnStatement[133392-133418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[133724-133760]:Block[133724-133760]"
  }, {
    "left" : "return (float)Math.exp(n);",
    "right" : "return (float)Math.exp(n);",
    "info" : "ReturnStatement[133730-133756]:ReturnStatement[133730-133756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134368-134407]:Block[134368-134407]"
  }, {
    "left" : "return (float)Math.pow(n, e);",
    "right" : "return (float)Math.pow(n, e);",
    "info" : "ReturnStatement[134374-134403]:ReturnStatement[134374-134403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134754-134787]:Block[134754-134787]"
  }, {
    "left" : "return (a > b) ? a : b;",
    "right" : "return (a > b) ? a : b;",
    "info" : "ReturnStatement[134760-134783]:ReturnStatement[134760-134783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134839-134872]:Block[134839-134872]"
  }, {
    "left" : "return (a > b) ? a : b;",
    "right" : "return (a > b) ? a : b;",
    "info" : "ReturnStatement[134845-134868]:ReturnStatement[134845-134868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135067-135132]:Block[135067-135132]"
  }, {
    "left" : "return (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);",
    "right" : "return (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);",
    "info" : "ReturnStatement[135073-135128]:ReturnStatement[135073-135128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135194-135259]:Block[135194-135259]"
  }, {
    "left" : "return (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);",
    "right" : "return (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);",
    "info" : "ReturnStatement[135200-135255]:ReturnStatement[135200-135255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135361-135592]:Block[135361-135592]"
  }, {
    "left" : "if (list.length == 0)",
    "right" : "if (list.length == 0)",
    "info" : "IfStatement[135367-135459]:IfStatement[135367-135459]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135389-135459]:Block[135389-135459]"
  }, {
    "left" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "right" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "info" : "ThrowStatement[135397-135453]:ThrowStatement[135397-135453]"
  }, {
    "left" : "int max = list[0];",
    "right" : "int max = list[0];",
    "info" : "VariableDeclarationStatement[135464-135482]:VariableDeclarationStatement[135464-135482]"
  }, {
    "left" : "for (int i = 1; i < list.length; i++)",
    "right" : "for (int i = 1; i < list.length; i++)",
    "info" : "ForStatement[135487-135572]:ForStatement[135487-135572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135525-135572]:Block[135525-135572]"
  }, {
    "left" : "if (list[i] > max)",
    "right" : "if (list[i] > max)",
    "info" : "IfStatement[135533-135566]:IfStatement[135533-135566]"
  }, {
    "left" : "max = list[i];",
    "right" : "max = list[i];",
    "info" : "ExpressionStatement[135552-135566]:ExpressionStatement[135552-135566]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[135577-135588]:ReturnStatement[135577-135588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135640-135873]:Block[135640-135873]"
  }, {
    "left" : "if (list.length == 0)",
    "right" : "if (list.length == 0)",
    "info" : "IfStatement[135646-135738]:IfStatement[135646-135738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135668-135738]:Block[135668-135738]"
  }, {
    "left" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "right" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "info" : "ThrowStatement[135676-135732]:ThrowStatement[135676-135732]"
  }, {
    "left" : "float max = list[0];",
    "right" : "float max = list[0];",
    "info" : "VariableDeclarationStatement[135743-135763]:VariableDeclarationStatement[135743-135763]"
  }, {
    "left" : "for (int i = 1; i < list.length; i++)",
    "right" : "for (int i = 1; i < list.length; i++)",
    "info" : "ForStatement[135768-135853]:ForStatement[135768-135853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135806-135853]:Block[135806-135853]"
  }, {
    "left" : "if (list[i] > max)",
    "right" : "if (list[i] > max)",
    "info" : "IfStatement[135814-135847]:IfStatement[135814-135847]"
  }, {
    "left" : "max = list[i];",
    "right" : "max = list[i];",
    "info" : "ExpressionStatement[135833-135847]:ExpressionStatement[135833-135847]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[135858-135869]:ReturnStatement[135858-135869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136405-136438]:Block[136405-136438]"
  }, {
    "left" : "return (a < b) ? a : b;",
    "right" : "return (a < b) ? a : b;",
    "info" : "ReturnStatement[136411-136434]:ReturnStatement[136411-136434]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136490-136523]:Block[136490-136523]"
  }, {
    "left" : "return (a < b) ? a : b;",
    "right" : "return (a < b) ? a : b;",
    "info" : "ReturnStatement[136496-136519]:ReturnStatement[136496-136519]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136675-136740]:Block[136675-136740]"
  }, {
    "left" : "return (a < b) ? ((a < c) ? a : c) : ((b < c) ? b : c);",
    "right" : "return (a < b) ? ((a < c) ? a : c) : ((b < c) ? b : c);",
    "info" : "ReturnStatement[136681-136736]:ReturnStatement[136681-136736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137108-137173]:Block[137108-137173]"
  }, {
    "left" : "return (a < b) ? ((a < c) ? a : c) : ((b < c) ? b : c);",
    "right" : "return (a < b) ? ((a < c) ? a : c) : ((b < c) ? b : c);",
    "info" : "ReturnStatement[137114-137169]:ReturnStatement[137114-137169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137415-137646]:Block[137415-137646]"
  }, {
    "left" : "if (list.length == 0)",
    "right" : "if (list.length == 0)",
    "info" : "IfStatement[137421-137513]:IfStatement[137421-137513]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137443-137513]:Block[137443-137513]"
  }, {
    "left" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "right" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "info" : "ThrowStatement[137451-137507]:ThrowStatement[137451-137507]"
  }, {
    "left" : "int min = list[0];",
    "right" : "int min = list[0];",
    "info" : "VariableDeclarationStatement[137518-137536]:VariableDeclarationStatement[137518-137536]"
  }, {
    "left" : "for (int i = 1; i < list.length; i++)",
    "right" : "for (int i = 1; i < list.length; i++)",
    "info" : "ForStatement[137541-137626]:ForStatement[137541-137626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137579-137626]:Block[137579-137626]"
  }, {
    "left" : "if (list[i] < min)",
    "right" : "if (list[i] < min)",
    "info" : "IfStatement[137587-137620]:IfStatement[137587-137620]"
  }, {
    "left" : "min = list[i];",
    "right" : "min = list[i];",
    "info" : "ExpressionStatement[137606-137620]:ExpressionStatement[137606-137620]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[137631-137642]:ReturnStatement[137631-137642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137694-137927]:Block[137694-137927]"
  }, {
    "left" : "if (list.length == 0)",
    "right" : "if (list.length == 0)",
    "info" : "IfStatement[137700-137792]:IfStatement[137700-137792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137722-137792]:Block[137722-137792]"
  }, {
    "left" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "right" : "throw new ArrayIndexOutOfBoundsException(ERROR_MIN_MAX);",
    "info" : "ThrowStatement[137730-137786]:ThrowStatement[137730-137786]"
  }, {
    "left" : "float min = list[0];",
    "right" : "float min = list[0];",
    "info" : "VariableDeclarationStatement[137797-137817]:VariableDeclarationStatement[137797-137817]"
  }, {
    "left" : "for (int i = 1; i < list.length; i++)",
    "right" : "for (int i = 1; i < list.length; i++)",
    "info" : "ForStatement[137822-137907]:ForStatement[137822-137907]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137860-137907]:Block[137860-137907]"
  }, {
    "left" : "if (list[i] < min)",
    "right" : "if (list[i] < min)",
    "info" : "IfStatement[137868-137901]:IfStatement[137868-137901]"
  }, {
    "left" : "min = list[i];",
    "right" : "min = list[i];",
    "info" : "ExpressionStatement[137887-137901]:ExpressionStatement[137887-137901]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[137912-137923]:ReturnStatement[137912-137923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138478-138543]:Block[138478-138543]"
  }, {
    "left" : "return (amt < low) ? low : ((amt > high) ? high : amt);",
    "right" : "return (amt < low) ? low : ((amt > high) ? high : amt);",
    "info" : "ReturnStatement[138484-138539]:ReturnStatement[138484-138539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138998-139063]:Block[138998-139063]"
  }, {
    "left" : "return (amt < low) ? low : ((amt > high) ? high : amt);",
    "right" : "return (amt < low) ? low : ((amt > high) ? high : amt);",
    "info" : "ReturnStatement[139004-139059]:ReturnStatement[139004-139059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[139565-139605]:Block[139565-139605]"
  }, {
    "left" : "return (float)Math.sin(angle);",
    "right" : "return (float)Math.sin(angle);",
    "info" : "ReturnStatement[139571-139601]:ReturnStatement[139571-139601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140109-140149]:Block[140109-140149]"
  }, {
    "left" : "return (float)Math.cos(angle);",
    "right" : "return (float)Math.cos(angle);",
    "info" : "ReturnStatement[140115-140145]:ReturnStatement[140115-140145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140708-140748]:Block[140708-140748]"
  }, {
    "left" : "return (float)Math.tan(angle);",
    "right" : "return (float)Math.tan(angle);",
    "info" : "ReturnStatement[140714-140744]:ReturnStatement[140714-140744]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141269-141310]:Block[141269-141310]"
  }, {
    "left" : "return (float)Math.asin(value);",
    "right" : "return (float)Math.asin(value);",
    "info" : "ReturnStatement[141275-141306]:ReturnStatement[141275-141306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141841-141882]:Block[141841-141882]"
  }, {
    "left" : "return (float)Math.acos(value);",
    "right" : "return (float)Math.acos(value);",
    "info" : "ReturnStatement[141847-141878]:ReturnStatement[141847-141878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142424-142465]:Block[142424-142465]"
  }, {
    "left" : "return (float)Math.atan(value);",
    "right" : "return (float)Math.atan(value);",
    "info" : "ReturnStatement[142430-142461]:ReturnStatement[142430-142461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143234-143275]:Block[143234-143275]"
  }, {
    "left" : "return (float)Math.atan2(y, x);",
    "right" : "return (float)Math.atan2(y, x);",
    "info" : "ReturnStatement[143240-143271]:ReturnStatement[143240-143271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143898-143936]:Block[143898-143936]"
  }, {
    "left" : "return radians * RAD_TO_DEG;",
    "right" : "return radians * RAD_TO_DEG;",
    "info" : "ReturnStatement[143904-143932]:ReturnStatement[143904-143932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144559-144597]:Block[144559-144597]"
  }, {
    "left" : "return degrees * DEG_TO_RAD;",
    "right" : "return degrees * DEG_TO_RAD;",
    "info" : "ReturnStatement[144565-144593]:ReturnStatement[144565-144593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145013-145049]:Block[145013-145049]"
  }, {
    "left" : "return (int) Math.ceil(n);",
    "right" : "return (int) Math.ceil(n);",
    "info" : "ReturnStatement[145019-145045]:ReturnStatement[145019-145045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145412-145449]:Block[145412-145449]"
  }, {
    "left" : "return (int) Math.floor(n);",
    "right" : "return (int) Math.floor(n);",
    "info" : "ReturnStatement[145418-145445]:ReturnStatement[145418-145445]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145830-145861]:Block[145830-145861]"
  }, {
    "left" : "return Math.round(n);",
    "right" : "return Math.round(n);",
    "info" : "ReturnStatement[145836-145857]:ReturnStatement[145836-145857]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145914-145959]:Block[145914-145959]"
  }, {
    "left" : "return (float)Math.sqrt(a*a + b*b);",
    "right" : "return (float)Math.sqrt(a*a + b*b);",
    "info" : "ReturnStatement[145920-145955]:ReturnStatement[145920-145955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146635-146686]:Block[146635-146686]"
  }, {
    "left" : "return (float)Math.sqrt(a*a + b*b + c*c);",
    "right" : "return (float)Math.sqrt(a*a + b*b + c*c);",
    "info" : "ReturnStatement[146641-146682]:ReturnStatement[146641-146682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146762-146807]:Block[146762-146807]"
  }, {
    "left" : "return sqrt(sq(x2-x1) + sq(y2-y1));",
    "right" : "return sqrt(sq(x2-x1) + sq(y2-y1));",
    "info" : "ReturnStatement[146768-146803]:ReturnStatement[146768-146803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147391-147448]:Block[147391-147448]"
  }, {
    "left" : "return sqrt(sq(x2-x1) + sq(y2-y1) + sq(z2-z1));",
    "right" : "return sqrt(sq(x2-x1) + sq(y2-y1) + sq(z2-z1));",
    "info" : "ReturnStatement[147397-147444]:ReturnStatement[147397-147444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[148336-148380]:Block[148336-148380]"
  }, {
    "left" : "return start + (stop-start) * amt;",
    "right" : "return start + (stop-start) * amt;",
    "info" : "ReturnStatement[148342-148376]:ReturnStatement[148342-148376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[149129-149179]:Block[149129-149179]"
  }, {
    "left" : "return (value - start) / (stop - start);",
    "right" : "return (value - start) / (stop - start);",
    "info" : "ReturnStatement[149135-149175]:ReturnStatement[149135-149175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150224-150307]:Block[150224-150307]"
  }, {
    "left" : "return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1));",
    "right" : "return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1));",
    "info" : "ReturnStatement[150230-150303]:ReturnStatement[150230-150303]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150749-151258]:Block[150749-151258]"
  }, {
    "left" : "if (high == 0 || high != high)",
    "right" : "if (high == 0 || high != high)",
    "info" : "IfStatement[150813-150867]:IfStatement[150813-150867]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150844-150867]:Block[150844-150867]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[150852-150861]:ReturnStatement[150852-150861]"
  }, {
    "left" : "if (internalRandom == null)",
    "right" : "if (internalRandom == null)",
    "info" : "IfStatement[150873-150945]:IfStatement[150873-150945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150901-150945]:Block[150901-150945]"
  }, {
    "left" : "internalRandom = new Random();",
    "right" : "internalRandom = new Random();",
    "info" : "ExpressionStatement[150909-150939]:ExpressionStatement[150909-150939]"
  }, {
    "left" : "float value = 0;",
    "right" : "float value = 0;",
    "info" : "VariableDeclarationStatement[151133-151149]:VariableDeclarationStatement[151133-151149]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[151154-151236]:DoStatement[151154-151236]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[151157-151213]:Block[151157-151213]"
  }, {
    "left" : "value = internalRandom.nextFloat() * high;",
    "right" : "value = internalRandom.nextFloat() * high;",
    "info" : "ExpressionStatement[151165-151207]:ExpressionStatement[151165-151207]"
  }, {
    "left" : "return value;",
    "right" : "return value;",
    "info" : "ReturnStatement[151241-151254]:ReturnStatement[151241-151254]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152026-152158]:Block[152026-152158]"
  }, {
    "left" : "if (internalRandom == null)",
    "right" : "if (internalRandom == null)",
    "info" : "IfStatement[152032-152104]:IfStatement[152032-152104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152060-152104]:Block[152060-152104]"
  }, {
    "left" : "internalRandom = new Random();",
    "right" : "internalRandom = new Random();",
    "info" : "ExpressionStatement[152068-152098]:ExpressionStatement[152068-152098]"
  }, {
    "left" : "return (float) internalRandom.nextGaussian();",
    "right" : "return (float) internalRandom.nextGaussian();",
    "info" : "ReturnStatement[152109-152154]:ReturnStatement[152109-152154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[153191-153289]:Block[153191-153289]"
  }, {
    "left" : "if (low >= high)",
    "right" : "if (low >= high)",
    "info" : "IfStatement[153197-153225]:IfStatement[153197-153225]"
  }, {
    "left" : "return low;",
    "right" : "return low;",
    "info" : "ReturnStatement[153214-153225]:ReturnStatement[153214-153225]"
  }, {
    "left" : "float diff = high - low;",
    "right" : "float diff = high - low;",
    "info" : "VariableDeclarationStatement[153230-153254]:VariableDeclarationStatement[153230-153254]"
  }, {
    "left" : "return random(diff) + low;",
    "right" : "return random(diff) + low;",
    "info" : "ReturnStatement[153259-153285]:ReturnStatement[153259-153285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[153866-153982]:Block[153866-153982]"
  }, {
    "left" : "if (internalRandom == null)",
    "right" : "if (internalRandom == null)",
    "info" : "IfStatement[153872-153944]:IfStatement[153872-153944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[153900-153944]:Block[153900-153944]"
  }, {
    "left" : "internalRandom = new Random();",
    "right" : "internalRandom = new Random();",
    "info" : "ExpressionStatement[153908-153938]:ExpressionStatement[153908-153938]"
  }, {
    "left" : "internalRandom.setSeed(seed);",
    "right" : "internalRandom.setSeed(seed);",
    "info" : "ExpressionStatement[153949-153978]:ExpressionStatement[153949-153978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154999-155102]:Block[154999-155102]"
  }, {
    "left" : "return noise(x, 0f, 0f);",
    "right" : "return noise(x, 0f, 0f);",
    "info" : "ReturnStatement[155074-155098]:ReturnStatement[155074-155098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155155-155188]:Block[155155-155188]"
  }, {
    "left" : "return noise(x, y, 0f);",
    "right" : "return noise(x, y, 0f);",
    "info" : "ReturnStatement[155161-155184]:ReturnStatement[155161-155184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157445-159137]:Block[157445-159137]"
  }, {
    "left" : "if (perlin == null)",
    "right" : "if (perlin == null)",
    "info" : "IfStatement[157451-157977]:IfStatement[157451-157977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157471-157977]:Block[157471-157977]"
  }, {
    "left" : "if (perlinRandom == null)",
    "right" : "if (perlinRandom == null)",
    "info" : "IfStatement[157479-157551]:IfStatement[157479-157551]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157505-157551]:Block[157505-157551]"
  }, {
    "left" : "perlinRandom = new Random();",
    "right" : "perlinRandom = new Random();",
    "info" : "ExpressionStatement[157515-157543]:ExpressionStatement[157515-157543]"
  }, {
    "left" : "perlin = new float[PERLIN_SIZE + 1];",
    "right" : "perlin = new float[PERLIN_SIZE + 1];",
    "info" : "ExpressionStatement[157558-157594]:ExpressionStatement[157558-157594]"
  }, {
    "left" : "for (int i = 0; i < PERLIN_SIZE + 1; i++)",
    "right" : "for (int i = 0; i < PERLIN_SIZE + 1; i++)",
    "info" : "ForStatement[157601-157722]:ForStatement[157601-157722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157643-157722]:Block[157643-157722]"
  }, {
    "left" : "perlin[i] = perlinRandom.nextFloat();",
    "right" : "perlin[i] = perlinRandom.nextFloat();",
    "info" : "ExpressionStatement[157653-157690]:ExpressionStatement[157653-157690]"
  }, {
    "left" : "perlin_cosTable = PGraphics.cosLUT;",
    "right" : "perlin_cosTable = PGraphics.cosLUT;",
    "info" : "ExpressionStatement[157855-157890]:ExpressionStatement[157855-157890]"
  }, {
    "left" : "perlin_TWOPI = perlin_PI = PGraphics.SINCOS_LENGTH;",
    "right" : "perlin_TWOPI = perlin_PI = PGraphics.SINCOS_LENGTH;",
    "info" : "ExpressionStatement[157897-157948]:ExpressionStatement[157897-157948]"
  }, {
    "left" : "perlin_PI >>= 1;",
    "right" : "perlin_PI >>= 1;",
    "info" : "ExpressionStatement[157955-157971]:ExpressionStatement[157955-157971]"
  }, {
    "left" : "if (x<0)",
    "right" : "if (x<0)",
    "info" : "IfStatement[157983-157997]:IfStatement[157983-157997]"
  }, {
    "left" : "x=-x;",
    "right" : "x=-x;",
    "info" : "ExpressionStatement[157992-157997]:ExpressionStatement[157992-157997]"
  }, {
    "left" : "if (y<0)",
    "right" : "if (y<0)",
    "info" : "IfStatement[158002-158016]:IfStatement[158002-158016]"
  }, {
    "left" : "y=-y;",
    "right" : "y=-y;",
    "info" : "ExpressionStatement[158011-158016]:ExpressionStatement[158011-158016]"
  }, {
    "left" : "if (z<0)",
    "right" : "if (z<0)",
    "info" : "IfStatement[158021-158035]:IfStatement[158021-158035]"
  }, {
    "left" : "z=-z;",
    "right" : "z=-z;",
    "info" : "ExpressionStatement[158030-158035]:ExpressionStatement[158030-158035]"
  }, {
    "left" : "int xi=(int)x, yi=(int)y, zi=(int)z;",
    "right" : "int xi=(int)x, yi=(int)y, zi=(int)z;",
    "info" : "VariableDeclarationStatement[158041-158077]:VariableDeclarationStatement[158041-158077]"
  }, {
    "left" : "float xf = x - xi;",
    "right" : "float xf = x - xi;",
    "info" : "VariableDeclarationStatement[158082-158100]:VariableDeclarationStatement[158082-158100]"
  }, {
    "left" : "float yf = y - yi;",
    "right" : "float yf = y - yi;",
    "info" : "VariableDeclarationStatement[158105-158123]:VariableDeclarationStatement[158105-158123]"
  }, {
    "left" : "float zf = z - zi;",
    "right" : "float zf = z - zi;",
    "info" : "VariableDeclarationStatement[158128-158146]:VariableDeclarationStatement[158128-158146]"
  }, {
    "left" : "float rxf, ryf;",
    "right" : "float rxf, ryf;",
    "info" : "VariableDeclarationStatement[158151-158166]:VariableDeclarationStatement[158151-158166]"
  }, {
    "left" : "float r=0;",
    "right" : "float r=0;",
    "info" : "VariableDeclarationStatement[158172-158182]:VariableDeclarationStatement[158172-158182]"
  }, {
    "left" : "float ampl=0.5f;",
    "right" : "float ampl=0.5f;",
    "info" : "VariableDeclarationStatement[158187-158203]:VariableDeclarationStatement[158187-158203]"
  }, {
    "left" : "float n1,n2,n3;",
    "right" : "float n1,n2,n3;",
    "info" : "VariableDeclarationStatement[158209-158224]:VariableDeclarationStatement[158209-158224]"
  }, {
    "left" : "for (int i=0; i<perlin_octaves; i++)",
    "right" : "for (int i=0; i<perlin_octaves; i++)",
    "info" : "ForStatement[158230-159119]:ForStatement[158230-159119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158267-159119]:Block[158267-159119]"
  }, {
    "left" : "int of=xi+(yi<<PERLIN_YWRAPB)+(zi<<PERLIN_ZWRAPB);",
    "right" : "int of=xi+(yi<<PERLIN_YWRAPB)+(zi<<PERLIN_ZWRAPB);",
    "info" : "VariableDeclarationStatement[158275-158325]:VariableDeclarationStatement[158275-158325]"
  }, {
    "left" : "rxf=noise_fsc(xf);",
    "right" : "rxf=noise_fsc(xf);",
    "info" : "ExpressionStatement[158333-158351]:ExpressionStatement[158333-158351]"
  }, {
    "left" : "ryf=noise_fsc(yf);",
    "right" : "ryf=noise_fsc(yf);",
    "info" : "ExpressionStatement[158358-158376]:ExpressionStatement[158358-158376]"
  }, {
    "left" : "n1  = perlin[of&PERLIN_SIZE];",
    "right" : "n1  = perlin[of&PERLIN_SIZE];",
    "info" : "ExpressionStatement[158384-158413]:ExpressionStatement[158384-158413]"
  }, {
    "left" : "n1 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n1);",
    "right" : "n1 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n1);",
    "info" : "ExpressionStatement[158420-158462]:ExpressionStatement[158420-158462]"
  }, {
    "left" : "n2  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];",
    "right" : "n2  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];",
    "info" : "ExpressionStatement[158469-158513]:ExpressionStatement[158469-158513]"
  }, {
    "left" : "n2 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n2);",
    "right" : "n2 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n2);",
    "info" : "ExpressionStatement[158520-158575]:ExpressionStatement[158520-158575]"
  }, {
    "left" : "n1 += ryf*(n2-n1);",
    "right" : "n1 += ryf*(n2-n1);",
    "info" : "ExpressionStatement[158582-158600]:ExpressionStatement[158582-158600]"
  }, {
    "left" : "of += PERLIN_ZWRAP;",
    "right" : "of += PERLIN_ZWRAP;",
    "info" : "ExpressionStatement[158608-158627]:ExpressionStatement[158608-158627]"
  }, {
    "left" : "n2  = perlin[of&PERLIN_SIZE];",
    "right" : "n2  = perlin[of&PERLIN_SIZE];",
    "info" : "ExpressionStatement[158634-158663]:ExpressionStatement[158634-158663]"
  }, {
    "left" : "n2 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n2);",
    "right" : "n2 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n2);",
    "info" : "ExpressionStatement[158670-158712]:ExpressionStatement[158670-158712]"
  }, {
    "left" : "n3  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];",
    "right" : "n3  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];",
    "info" : "ExpressionStatement[158719-158763]:ExpressionStatement[158719-158763]"
  }, {
    "left" : "n3 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n3);",
    "right" : "n3 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n3);",
    "info" : "ExpressionStatement[158770-158825]:ExpressionStatement[158770-158825]"
  }, {
    "left" : "n2 += ryf*(n3-n2);",
    "right" : "n2 += ryf*(n3-n2);",
    "info" : "ExpressionStatement[158832-158850]:ExpressionStatement[158832-158850]"
  }, {
    "left" : "n1 += noise_fsc(zf)*(n2-n1);",
    "right" : "n1 += noise_fsc(zf)*(n2-n1);",
    "info" : "ExpressionStatement[158858-158886]:ExpressionStatement[158858-158886]"
  }, {
    "left" : "r += n1*ampl;",
    "right" : "r += n1*ampl;",
    "info" : "ExpressionStatement[158894-158907]:ExpressionStatement[158894-158907]"
  }, {
    "left" : "ampl *= perlin_amp_falloff;",
    "right" : "ampl *= perlin_amp_falloff;",
    "info" : "ExpressionStatement[158914-158941]:ExpressionStatement[158914-158941]"
  }, {
    "left" : "xi<<=1;",
    "right" : "xi<<=1;",
    "info" : "ExpressionStatement[158948-158955]:ExpressionStatement[158948-158955]"
  }, {
    "left" : "xf*=2;",
    "right" : "xf*=2;",
    "info" : "ExpressionStatement[158956-158962]:ExpressionStatement[158956-158962]"
  }, {
    "left" : "yi<<=1;",
    "right" : "yi<<=1;",
    "info" : "ExpressionStatement[158969-158976]:ExpressionStatement[158969-158976]"
  }, {
    "left" : "yf*=2;",
    "right" : "yf*=2;",
    "info" : "ExpressionStatement[158977-158983]:ExpressionStatement[158977-158983]"
  }, {
    "left" : "zi<<=1;",
    "right" : "zi<<=1;",
    "info" : "ExpressionStatement[158990-158997]:ExpressionStatement[158990-158997]"
  }, {
    "left" : "zf*=2;",
    "right" : "zf*=2;",
    "info" : "ExpressionStatement[158998-159004]:ExpressionStatement[158998-159004]"
  }, {
    "left" : "if (xf>=1.0f)",
    "right" : "if (xf>=1.0f)",
    "info" : "IfStatement[159012-159041]:IfStatement[159012-159041]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159026-159041]:Block[159026-159041]"
  }, {
    "left" : "xi++;",
    "right" : "xi++;",
    "info" : "ExpressionStatement[159028-159033]:ExpressionStatement[159028-159033]"
  }, {
    "left" : "xf--;",
    "right" : "xf--;",
    "info" : "ExpressionStatement[159034-159039]:ExpressionStatement[159034-159039]"
  }, {
    "left" : "if (yf>=1.0f)",
    "right" : "if (yf>=1.0f)",
    "info" : "IfStatement[159048-159077]:IfStatement[159048-159077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159062-159077]:Block[159062-159077]"
  }, {
    "left" : "yi++;",
    "right" : "yi++;",
    "info" : "ExpressionStatement[159064-159069]:ExpressionStatement[159064-159069]"
  }, {
    "left" : "yf--;",
    "right" : "yf--;",
    "info" : "ExpressionStatement[159070-159075]:ExpressionStatement[159070-159075]"
  }, {
    "left" : "if (zf>=1.0f)",
    "right" : "if (zf>=1.0f)",
    "info" : "IfStatement[159084-159113]:IfStatement[159084-159113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159098-159113]:Block[159098-159113]"
  }, {
    "left" : "zi++;",
    "right" : "zi++;",
    "info" : "ExpressionStatement[159100-159105]:ExpressionStatement[159100-159105]"
  }, {
    "left" : "zf--;",
    "right" : "zf--;",
    "info" : "ExpressionStatement[159106-159111]:ExpressionStatement[159106-159111]"
  }, {
    "left" : "return r;",
    "right" : "return r;",
    "info" : "ReturnStatement[159124-159133]:ReturnStatement[159124-159133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159283-159403]:Block[159283-159403]"
  }, {
    "left" : "return 0.5f*(1.0f-perlin_cosTable[(int)(i*perlin_PI)%perlin_TWOPI]);",
    "right" : "return 0.5f*(1.0f-perlin_cosTable[(int)(i*perlin_PI)%perlin_TWOPI]);",
    "info" : "ReturnStatement[159331-159399]:ReturnStatement[159331-159399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160969-161009]:Block[160969-161009]"
  }, {
    "left" : "if (lod>0)",
    "right" : "if (lod>0)",
    "info" : "IfStatement[160975-161005]:IfStatement[160975-161005]"
  }, {
    "left" : "perlin_octaves=lod;",
    "right" : "perlin_octaves=lod;",
    "info" : "ExpressionStatement[160986-161005]:ExpressionStatement[160986-161005]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161124-161211]:Block[161124-161211]"
  }, {
    "left" : "if (lod>0)",
    "right" : "if (lod>0)",
    "info" : "IfStatement[161130-161160]:IfStatement[161130-161160]"
  }, {
    "left" : "perlin_octaves=lod;",
    "right" : "perlin_octaves=lod;",
    "info" : "ExpressionStatement[161141-161160]:ExpressionStatement[161141-161160]"
  }, {
    "left" : "if (falloff>0)",
    "right" : "if (falloff>0)",
    "info" : "IfStatement[161165-161207]:IfStatement[161165-161207]"
  }, {
    "left" : "perlin_amp_falloff=falloff;",
    "right" : "perlin_amp_falloff=falloff;",
    "info" : "ExpressionStatement[161180-161207]:ExpressionStatement[161180-161207]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161821-162006]:Block[161821-162006]"
  }, {
    "left" : "if (perlinRandom == null)",
    "right" : "if (perlinRandom == null)",
    "info" : "IfStatement[161827-161881]:IfStatement[161827-161881]"
  }, {
    "left" : "perlinRandom = new Random();",
    "right" : "perlinRandom = new Random();",
    "info" : "ExpressionStatement[161853-161881]:ExpressionStatement[161853-161881]"
  }, {
    "left" : "perlinRandom.setSeed(seed);",
    "right" : "perlinRandom.setSeed(seed);",
    "info" : "ExpressionStatement[161886-161913]:ExpressionStatement[161886-161913]"
  }, {
    "left" : "perlin = null;",
    "right" : "perlin = null;",
    "info" : "ExpressionStatement[161988-162002]:ExpressionStatement[161988-162002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[164437-164526]:Block[164437-164526]"
  }, {
    "left" : "return loadImage(filename, null);",
    "right" : "return loadImage(filename, null);",
    "info" : "ReturnStatement[164489-164522]:ReturnStatement[164489-164522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165050-169148]:Block[165050-169148]"
  }, {
    "left" : "if (extension == null)",
    "right" : "if (extension == null)",
    "info" : "IfStatement[165077-165569]:IfStatement[165077-165569]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165100-165569]:Block[165100-165569]"
  }, {
    "left" : "String lower = filename.toLowerCase();",
    "right" : "String lower = filename.toLowerCase();",
    "info" : "VariableDeclarationStatement[165108-165146]:VariableDeclarationStatement[165108-165146]"
  }, {
    "left" : "int dot = filename.lastIndexOf('.');",
    "right" : "int dot = filename.lastIndexOf('.');",
    "info" : "VariableDeclarationStatement[165153-165189]:VariableDeclarationStatement[165153-165189]"
  }, {
    "left" : "if (dot == -1)",
    "right" : "if (dot == -1)",
    "info" : "IfStatement[165196-165274]:IfStatement[165196-165274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165211-165274]:Block[165211-165274]"
  }, {
    "left" : "extension = \"unknown\";",
    "right" : "extension = \"unknown\";",
    "info" : "ExpressionStatement[165221-165243]:ExpressionStatement[165221-165243]"
  }, {
    "left" : "extension = lower.substring(dot + 1);",
    "right" : "extension = lower.substring(dot + 1);",
    "info" : "ExpressionStatement[165281-165318]:ExpressionStatement[165281-165318]"
  }, {
    "left" : "int question = extension.indexOf('?');",
    "right" : "int question = extension.indexOf('?');",
    "info" : "VariableDeclarationStatement[165435-165473]:VariableDeclarationStatement[165435-165473]"
  }, {
    "left" : "if (question != -1)",
    "right" : "if (question != -1)",
    "info" : "IfStatement[165480-165563]:IfStatement[165480-165563]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165500-165563]:Block[165500-165563]"
  }, {
    "left" : "extension = extension.substring(0, question);",
    "right" : "extension = extension.substring(0, question);",
    "info" : "ExpressionStatement[165510-165555]:ExpressionStatement[165510-165555]"
  }, {
    "left" : "extension = extension.toLowerCase();",
    "right" : "extension = extension.toLowerCase();",
    "info" : "ExpressionStatement[165626-165662]:ExpressionStatement[165626-165662]"
  }, {
    "left" : "if (extension.equals(\"tga\"))",
    "right" : "if (extension.equals(\"tga\"))",
    "info" : "IfStatement[165668-165959]:IfStatement[165668-165959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165697-165959]:Block[165697-165959]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[165705-165953]:TryStatement[165705-165953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165709-165871]:Block[165709-165871]"
  }, {
    "left" : "PImage image = loadImageTGA(filename);",
    "right" : "PImage image = loadImageTGA(filename);",
    "info" : "VariableDeclarationStatement[165719-165757]:VariableDeclarationStatement[165719-165757]"
  }, {
    "left" : "return image;",
    "right" : "return image;",
    "info" : "ReturnStatement[165850-165863]:ReturnStatement[165850-165863]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165894-165953]:Block[165894-165953]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[165904-165924]:ExpressionStatement[165904-165924]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[165933-165945]:ReturnStatement[165933-165945]"
  }, {
    "left" : "if (extension.equals(\"tif\") || extension.equals(\"tiff\"))",
    "right" : "if (extension.equals(\"tif\") || extension.equals(\"tiff\"))",
    "info" : "IfStatement[165965-166240]:IfStatement[165965-166240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166022-166240]:Block[166022-166240]"
  }, {
    "left" : "byte bytes[] = loadBytes(filename);",
    "right" : "byte bytes[] = loadBytes(filename);",
    "info" : "VariableDeclarationStatement[166030-166065]:VariableDeclarationStatement[166030-166065]"
  }, {
    "left" : "PImage image =  (bytes == null) ? null : PImage.loadTIFF(bytes);",
    "right" : "PImage image =  (bytes == null) ? null : PImage.loadTIFF(bytes);",
    "info" : "VariableDeclarationStatement[166072-166136]:VariableDeclarationStatement[166072-166136]"
  }, {
    "left" : "return image;",
    "right" : "return image;",
    "info" : "ReturnStatement[166221-166234]:ReturnStatement[166221-166234]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[166433-168517]:TryStatement[166433-168517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166437-168391]:Block[166437-168391]"
  }, {
    "left" : "if (extension.equals(\"jpg\") || extension.equals(\"jpeg\") ||\n          extension.equals(\"gif\") || extension.equals(\"png\") ||\n          extension.equals(\"unknown\"))",
    "right" : "if (extension.equals(\"jpg\") || extension.equals(\"jpeg\") ||\n          extension.equals(\"gif\") || extension.equals(\"png\") ||\n          extension.equals(\"unknown\"))",
    "info" : "IfStatement[166445-168385]:IfStatement[166445-168385]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166607-168385]:Block[166607-168385]"
  }, {
    "left" : "byte bytes[] = loadBytes(filename);",
    "right" : "byte bytes[] = loadBytes(filename);",
    "info" : "VariableDeclarationStatement[166617-166652]:VariableDeclarationStatement[166617-166652]"
  }, {
    "left" : "if (bytes == null)",
    "right" : "if (bytes == null)",
    "info" : "IfStatement[166661-168377]:IfStatement[166661-168377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166680-166714]:Block[166680-166714]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[166692-166704]:ReturnStatement[166692-166704]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166720-168377]:Block[166720-168377]"
  }, {
    "left" : "Image awtImage = new ImageIcon(bytes).getImage();",
    "right" : "Image awtImage = new ImageIcon(bytes).getImage();",
    "info" : "VariableDeclarationStatement[166809-166858]:VariableDeclarationStatement[166809-166858]"
  }, {
    "left" : "if (awtImage instanceof BufferedImage)",
    "right" : "if (awtImage instanceof BufferedImage)",
    "info" : "IfStatement[166870-167833]:IfStatement[166870-167833]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166909-167833]:Block[166909-167833]"
  }, {
    "left" : "BufferedImage buffImage = (BufferedImage) awtImage;",
    "right" : "BufferedImage buffImage = (BufferedImage) awtImage;",
    "info" : "VariableDeclarationStatement[166923-166974]:VariableDeclarationStatement[166923-166974]"
  }, {
    "left" : "int space = buffImage.getColorModel().getColorSpace().getType();",
    "right" : "int space = buffImage.getColorModel().getColorSpace().getType();",
    "info" : "VariableDeclarationStatement[166987-167051]:VariableDeclarationStatement[166987-167051]"
  }, {
    "left" : "if (space == ColorSpace.TYPE_CMYK)",
    "right" : "if (space == ColorSpace.TYPE_CMYK)",
    "info" : "IfStatement[167064-167821]:IfStatement[167064-167821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167099-167821]:Block[167099-167821]"
  }, {
    "left" : "System.err.println(filename + \" is a CMYK image, \" +\n                                 \"only RGB images are supported.\");",
    "right" : "System.err.println(filename + \" is a CMYK image, \" +\n                                 \"only RGB images are supported.\");",
    "info" : "ExpressionStatement[167115-167235]:ExpressionStatement[167115-167235]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[167250-167262]:ReturnStatement[167250-167262]"
  }, {
    "left" : "PImage image = new PImage(awtImage);",
    "right" : "PImage image = new PImage(awtImage);",
    "info" : "VariableDeclarationStatement[167845-167881]:VariableDeclarationStatement[167845-167881]"
  }, {
    "left" : "if (image.width == -1)",
    "right" : "if (image.width == -1)",
    "info" : "IfStatement[167892-168069]:IfStatement[167892-168069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167915-168069]:Block[167915-168069]"
  }, {
    "left" : "System.err.println(\"The file \" + filename +\n                               \" contains bad image data, or may not be an image.\");",
    "right" : "System.err.println(\"The file \" + filename +\n                               \" contains bad image data, or may not be an image.\");",
    "info" : "ExpressionStatement[167929-168057]:ExpressionStatement[167929-168057]"
  }, {
    "left" : "if (extension.equals(\"gif\") || extension.equals(\"png\"))",
    "right" : "if (extension.equals(\"gif\") || extension.equals(\"png\"))",
    "info" : "IfStatement[168151-168252]:IfStatement[168151-168252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168207-168252]:Block[168207-168252]"
  }, {
    "left" : "image.checkAlpha();",
    "right" : "image.checkAlpha();",
    "info" : "ExpressionStatement[168221-168240]:ExpressionStatement[168221-168240]"
  }, {
    "left" : "return image;",
    "right" : "return image;",
    "info" : "ReturnStatement[168354-168367]:ReturnStatement[168354-168367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168412-168517]:Block[168412-168517]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[168491-168511]:ExpressionStatement[168491-168511]"
  }, {
    "left" : "if (loadImageFormats == null)",
    "right" : "if (loadImageFormats == null)",
    "info" : "IfStatement[168523-168617]:IfStatement[168523-168617]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168553-168617]:Block[168553-168617]"
  }, {
    "left" : "loadImageFormats = ImageIO.getReaderFormatNames();",
    "right" : "loadImageFormats = ImageIO.getReaderFormatNames();",
    "info" : "ExpressionStatement[168561-168611]:ExpressionStatement[168561-168611]"
  }, {
    "left" : "if (loadImageFormats != null)",
    "right" : "if (loadImageFormats != null)",
    "info" : "IfStatement[168622-168994]:IfStatement[168622-168994]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168652-168994]:Block[168652-168994]"
  }, {
    "left" : "for (int i = 0; i < loadImageFormats.length; i++)",
    "right" : "for (int i = 0; i < loadImageFormats.length; i++)",
    "info" : "ForStatement[168660-168988]:ForStatement[168660-168988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168710-168988]:Block[168710-168988]"
  }, {
    "left" : "if (extension.equals(loadImageFormats[i]))",
    "right" : "if (extension.equals(loadImageFormats[i]))",
    "info" : "IfStatement[168720-168980]:IfStatement[168720-168980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168763-168980]:Block[168763-168980]"
  }, {
    "left" : "return loadImageIO(filename);",
    "right" : "return loadImageIO(filename);",
    "info" : "ReturnStatement[168775-168804]:ReturnStatement[168775-168804]"
  }, {
    "left" : "System.err.println(\"Could not find a method to load \" + filename);",
    "right" : "System.err.println(\"Could not find a method to load \" + filename);",
    "info" : "ExpressionStatement[169061-169127]:ExpressionStatement[169061-169127]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[169132-169144]:ReturnStatement[169132-169144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169197-169292]:Block[169197-169292]"
  }, {
    "left" : "return requestImage(filename, null);",
    "right" : "return requestImage(filename, null);",
    "info" : "ReturnStatement[169252-169288]:ReturnStatement[169252-169288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170527-170697]:Block[170527-170697]"
  }, {
    "left" : "PImage vessel = createImage(0, 0, ARGB);",
    "right" : "PImage vessel = createImage(0, 0, ARGB);",
    "info" : "VariableDeclarationStatement[170533-170573]:VariableDeclarationStatement[170533-170573]"
  }, {
    "left" : "AsyncImageLoader ail =\n      new AsyncImageLoader(filename, extension, vessel);",
    "right" : "AsyncImageLoader ail =\n      new AsyncImageLoader(filename, extension, vessel);",
    "info" : "VariableDeclarationStatement[170578-170657]:VariableDeclarationStatement[170578-170657]"
  }, {
    "left" : "ail.start();",
    "right" : "ail.start();",
    "info" : "ExpressionStatement[170662-170674]:ExpressionStatement[170662-170674]"
  }, {
    "left" : "return vessel;",
    "right" : "return vessel;",
    "info" : "ReturnStatement[170679-170693]:ReturnStatement[170679-170693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171794-171895]:Block[171794-171895]"
  }, {
    "left" : "this.filename = filename;",
    "right" : "this.filename = filename;",
    "info" : "ExpressionStatement[171802-171827]:ExpressionStatement[171802-171827]"
  }, {
    "left" : "this.extension = extension;",
    "right" : "this.extension = extension;",
    "info" : "ExpressionStatement[171834-171861]:ExpressionStatement[171834-171861]"
  }, {
    "left" : "this.vessel = vessel;",
    "right" : "this.vessel = vessel;",
    "info" : "ExpressionStatement[171868-171889]:ExpressionStatement[171868-171889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171933-172633]:Block[171933-172633]"
  }, {
    "left" : "while (requestImageCount == requestImageMax)",
    "right" : "while (requestImageCount == requestImageMax)",
    "info" : "WhileStatement[171941-172082]:WhileStatement[171941-172082]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171986-172082]:Block[171986-172082]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[171996-172074]:TryStatement[171996-172074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172000-172039]:Block[172000-172039]"
  }, {
    "left" : "Thread.sleep(10);",
    "right" : "Thread.sleep(10);",
    "info" : "ExpressionStatement[172012-172029]:ExpressionStatement[172012-172029]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172071-172074]:Block[172071-172074]"
  }, {
    "left" : "requestImageCount++;",
    "right" : "requestImageCount++;",
    "info" : "ExpressionStatement[172089-172109]:ExpressionStatement[172089-172109]"
  }, {
    "left" : "PImage actual = loadImage(filename, extension);",
    "right" : "PImage actual = loadImage(filename, extension);",
    "info" : "VariableDeclarationStatement[172117-172164]:VariableDeclarationStatement[172117-172164]"
  }, {
    "left" : "if (actual == null)",
    "right" : "if (actual == null)",
    "info" : "IfStatement[172226-172600]:IfStatement[172226-172600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172246-172311]:Block[172246-172311]"
  }, {
    "left" : "vessel.width = -1;",
    "right" : "vessel.width = -1;",
    "info" : "ExpressionStatement[172256-172274]:ExpressionStatement[172256-172274]"
  }, {
    "left" : "vessel.height = -1;",
    "right" : "vessel.height = -1;",
    "info" : "ExpressionStatement[172283-172302]:ExpressionStatement[172283-172302]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172317-172600]:Block[172317-172600]"
  }, {
    "left" : "vessel.width = actual.width;",
    "right" : "vessel.width = actual.width;",
    "info" : "ExpressionStatement[172327-172355]:ExpressionStatement[172327-172355]"
  }, {
    "left" : "vessel.height = actual.height;",
    "right" : "vessel.height = actual.height;",
    "info" : "ExpressionStatement[172364-172394]:ExpressionStatement[172364-172394]"
  }, {
    "left" : "vessel.format = actual.format;",
    "right" : "vessel.format = actual.format;",
    "info" : "ExpressionStatement[172403-172433]:ExpressionStatement[172403-172433]"
  }, {
    "left" : "vessel.pixels = actual.pixels;",
    "right" : "vessel.pixels = actual.pixels;",
    "info" : "ExpressionStatement[172442-172472]:ExpressionStatement[172442-172472]"
  }, {
    "left" : "vessel.pixelWidth = actual.width;",
    "right" : "vessel.pixelWidth = actual.width;",
    "info" : "ExpressionStatement[172482-172515]:ExpressionStatement[172482-172515]"
  }, {
    "left" : "vessel.pixelHeight = actual.height;",
    "right" : "vessel.pixelHeight = actual.height;",
    "info" : "ExpressionStatement[172524-172559]:ExpressionStatement[172524-172559]"
  }, {
    "left" : "vessel.pixelDensity = 1;",
    "right" : "vessel.pixelDensity = 1;",
    "info" : "ExpressionStatement[172568-172592]:ExpressionStatement[172568-172592]"
  }, {
    "left" : "requestImageCount--;",
    "right" : "requestImageCount--;",
    "info" : "ExpressionStatement[172607-172627]:ExpressionStatement[172607-172627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[173317-174383]:Block[173317-174383]"
  }, {
    "left" : "InputStream stream = createInput(filename);",
    "right" : "InputStream stream = createInput(filename);",
    "info" : "VariableDeclarationStatement[173323-173366]:VariableDeclarationStatement[173323-173366]"
  }, {
    "left" : "if (stream == null)",
    "right" : "if (stream == null)",
    "info" : "IfStatement[173371-173493]:IfStatement[173371-173493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[173391-173493]:Block[173391-173493]"
  }, {
    "left" : "System.err.println(\"The image \" + filename + \" could not be found.\");",
    "right" : "System.err.println(\"The image \" + filename + \" could not be found.\");",
    "info" : "ExpressionStatement[173399-173468]:ExpressionStatement[173399-173468]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[173475-173487]:ReturnStatement[173475-173487]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[173499-174379]:TryStatement[173499-174379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[173503-174305]:Block[173503-174305]"
  }, {
    "left" : "BufferedImage bi = ImageIO.read(stream);",
    "right" : "BufferedImage bi = ImageIO.read(stream);",
    "info" : "VariableDeclarationStatement[173511-173551]:VariableDeclarationStatement[173511-173551]"
  }, {
    "left" : "PImage outgoing = new PImage(bi.getWidth(), bi.getHeight());",
    "right" : "PImage outgoing = new PImage(bi.getWidth(), bi.getHeight());",
    "info" : "VariableDeclarationStatement[173558-173618]:VariableDeclarationStatement[173558-173618]"
  }, {
    "left" : "outgoing.parent = this;",
    "right" : "outgoing.parent = this;",
    "info" : "ExpressionStatement[173625-173648]:ExpressionStatement[173625-173648]"
  }, {
    "left" : "bi.getRGB(0, 0, outgoing.width, outgoing.height,\n                outgoing.pixels, 0, outgoing.width);",
    "right" : "bi.getRGB(0, 0, outgoing.width, outgoing.height,\n                outgoing.pixels, 0, outgoing.width);",
    "info" : "ExpressionStatement[173656-173757]:ExpressionStatement[173656-173757]"
  }, {
    "left" : "outgoing.checkAlpha();",
    "right" : "outgoing.checkAlpha();",
    "info" : "ExpressionStatement[174204-174226]:ExpressionStatement[174204-174226]"
  }, {
    "left" : "stream.close();",
    "right" : "stream.close();",
    "info" : "ExpressionStatement[174234-174249]:ExpressionStatement[174234-174249]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[174282-174298]:ReturnStatement[174282-174298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174326-174379]:Block[174326-174379]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[174334-174354]:ExpressionStatement[174334-174354]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[174361-174373]:ReturnStatement[174361-174373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[175015-180953]:Block[175015-180953]"
  }, {
    "left" : "InputStream is = createInput(filename);",
    "right" : "InputStream is = createInput(filename);",
    "info" : "VariableDeclarationStatement[175021-175060]:VariableDeclarationStatement[175021-175060]"
  }, {
    "left" : "if (is == null)",
    "right" : "if (is == null)",
    "info" : "IfStatement[175065-175093]:IfStatement[175065-175093]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[175081-175093]:ReturnStatement[175081-175093]"
  }, {
    "left" : "byte header[] = new byte[18];",
    "right" : "byte header[] = new byte[18];",
    "info" : "VariableDeclarationStatement[175099-175128]:VariableDeclarationStatement[175099-175128]"
  }, {
    "left" : "int offset = 0;",
    "right" : "int offset = 0;",
    "info" : "VariableDeclarationStatement[175133-175148]:VariableDeclarationStatement[175133-175148]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[175153-175310]:DoStatement[175153-175310]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[175156-175289]:Block[175156-175289]"
  }, {
    "left" : "int count = is.read(header, offset, header.length - offset);",
    "right" : "int count = is.read(header, offset, header.length - offset);",
    "info" : "VariableDeclarationStatement[175164-175224]:VariableDeclarationStatement[175164-175224]"
  }, {
    "left" : "if (count == -1)",
    "right" : "if (count == -1)",
    "info" : "IfStatement[175231-175260]:IfStatement[175231-175260]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[175248-175260]:ReturnStatement[175248-175260]"
  }, {
    "left" : "offset += count;",
    "right" : "offset += count;",
    "info" : "ExpressionStatement[175267-175283]:ExpressionStatement[175267-175283]"
  }, {
    "left" : "int format = 0;",
    "right" : "int format = 0;",
    "info" : "VariableDeclarationStatement[175826-175841]:VariableDeclarationStatement[175826-175841]"
  }, {
    "left" : "if (((header[2] == 3) || (header[2] == 11)) &&  // B&W, plus RLE or not\n        (header[16] == 8) &&  // 8 bits\n        ((header[17] == 0x8) || (header[17] == 0x28)))",
    "right" : "if (((header[2] == 3) || (header[2] == 11)) &&  // B&W, plus RLE or not\n        (header[16] == 8) &&  // 8 bits\n        ((header[17] == 0x8) || (header[17] == 0x28)))",
    "info" : "IfStatement[175847-176479]:IfStatement[175847-176479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176014-176063]:Block[176014-176063]"
  }, {
    "left" : "format = ALPHA;",
    "right" : "format = ALPHA;",
    "info" : "ExpressionStatement[176041-176056]:ExpressionStatement[176041-176056]"
  }, {
    "left" : "if (((header[2] == 2) || (header[2] == 10)) &&  // RGB, RLE or not\n               (header[16] == 24) &&  // 24 bits\n               ((header[17] == 0x20) || (header[17] == 0)))",
    "right" : "if (((header[2] == 2) || (header[2] == 10)) &&  // RGB, RLE or not\n               (header[16] == 24) &&  // 24 bits\n               ((header[17] == 0x20) || (header[17] == 0)))",
    "info" : "IfStatement[176069-176479]:IfStatement[176069-176479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176245-176284]:Block[176245-176284]"
  }, {
    "left" : "format = RGB;",
    "right" : "format = RGB;",
    "info" : "ExpressionStatement[176264-176277]:ExpressionStatement[176264-176277]"
  }, {
    "left" : "if (((header[2] == 2) || (header[2] == 10)) &&\n               (header[16] == 32) &&\n               ((header[17] == 0x8) || (header[17] == 0x28)))",
    "right" : "if (((header[2] == 2) || (header[2] == 10)) &&\n               (header[16] == 32) &&\n               ((header[17] == 0x8) || (header[17] == 0x28)))",
    "info" : "IfStatement[176290-176479]:IfStatement[176290-176479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176436-176479]:Block[176436-176479]"
  }, {
    "left" : "format = ARGB;",
    "right" : "format = ARGB;",
    "info" : "ExpressionStatement[176459-176473]:ExpressionStatement[176459-176473]"
  }, {
    "left" : "if (format == 0)",
    "right" : "if (format == 0)",
    "info" : "IfStatement[176485-176759]:IfStatement[176485-176759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176502-176759]:Block[176502-176759]"
  }, {
    "left" : "System.err.println(\"Unknown .tga file format for \" + filename);",
    "right" : "System.err.println(\"Unknown .tga file format for \" + filename);",
    "info" : "ExpressionStatement[176510-176573]:ExpressionStatement[176510-176573]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[176741-176753]:ReturnStatement[176741-176753]"
  }, {
    "left" : "int w = ((header[13] & 0xff) << 8) + (header[12] & 0xff);",
    "right" : "int w = ((header[13] & 0xff) << 8) + (header[12] & 0xff);",
    "info" : "VariableDeclarationStatement[176765-176822]:VariableDeclarationStatement[176765-176822]"
  }, {
    "left" : "int h = ((header[15] & 0xff) << 8) + (header[14] & 0xff);",
    "right" : "int h = ((header[15] & 0xff) << 8) + (header[14] & 0xff);",
    "info" : "VariableDeclarationStatement[176827-176884]:VariableDeclarationStatement[176827-176884]"
  }, {
    "left" : "PImage outgoing = createImage(w, h, format);",
    "right" : "PImage outgoing = createImage(w, h, format);",
    "info" : "VariableDeclarationStatement[176889-176933]:VariableDeclarationStatement[176889-176933]"
  }, {
    "left" : "boolean reversed = (header[17] & 0x20) == 0;",
    "right" : "boolean reversed = (header[17] & 0x20) == 0;",
    "info" : "VariableDeclarationStatement[177180-177224]:VariableDeclarationStatement[177180-177224]"
  }, {
    "left" : "if ((header[2] == 2) || (header[2] == 3))",
    "right" : "if ((header[2] == 2) || (header[2] == 3))",
    "info" : "IfStatement[177230-180912]:IfStatement[177230-180912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177272-178900]:Block[177272-178900]"
  }, {
    "left" : "if (reversed)",
    "right" : "if (reversed)",
    "info" : "IfStatement[177300-178893]:IfStatement[177300-178893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177314-178223]:Block[177314-178223]"
  }, {
    "left" : "int index = (h-1) * w;",
    "right" : "int index = (h-1) * w;",
    "info" : "VariableDeclarationStatement[177324-177346]:VariableDeclarationStatement[177324-177346]"
  }, {
    "left" : "switch (format) {\n        case ALPHA:\n          for (int y = h-1; y >= 0; y--) {\n            for (int x = 0; x < w; x++) {\n              outgoing.pixels[index + x] = is.read();\n            }\n            index -= w;\n          }\n          break;\n        case RGB:\n          for (int y = h-1; y >= 0; y--) {\n            for (int x = 0; x < w; x++) {\n              outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                0xff000000;\n            }\n            index -= w;\n          }\n          break;\n        case ARGB:\n          for (int y = h-1; y >= 0; y--) {\n            for (int x = 0; x < w; x++) {\n              outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                (is.read() << 24);\n            }\n            index -= w;\n          }\n        }",
    "right" : "switch (format) {\n        case ALPHA:\n          for (int y = h-1; y >= 0; y--) {\n            for (int x = 0; x < w; x++) {\n              outgoing.pixels[index + x] = is.read();\n            }\n            index -= w;\n          }\n          break;\n        case RGB:\n          for (int y = h-1; y >= 0; y--) {\n            for (int x = 0; x < w; x++) {\n              outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                0xff000000;\n            }\n            index -= w;\n          }\n          break;\n        case ARGB:\n          for (int y = h-1; y >= 0; y--) {\n            for (int x = 0; x < w; x++) {\n              outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                (is.read() << 24);\n            }\n            index -= w;\n          }\n        }",
    "info" : "SwitchStatement[177355-178215]:SwitchStatement[177355-178215]"
  }, {
    "left" : "case ALPHA:",
    "right" : "case ALPHA:",
    "info" : "SwitchCase[177381-177392]:SwitchCase[177381-177392]"
  }, {
    "left" : "for (int y = h-1; y >= 0; y--)",
    "right" : "for (int y = h-1; y >= 0; y--)",
    "info" : "ForStatement[177403-177581]:ForStatement[177403-177581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177434-177581]:Block[177434-177581]"
  }, {
    "left" : "for (int x = 0; x < w; x++)",
    "right" : "for (int x = 0; x < w; x++)",
    "info" : "ForStatement[177448-177545]:ForStatement[177448-177545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177476-177545]:Block[177476-177545]"
  }, {
    "left" : "outgoing.pixels[index + x] = is.read();",
    "right" : "outgoing.pixels[index + x] = is.read();",
    "info" : "ExpressionStatement[177492-177531]:ExpressionStatement[177492-177531]"
  }, {
    "left" : "index -= w;",
    "right" : "index -= w;",
    "info" : "ExpressionStatement[177558-177569]:ExpressionStatement[177558-177569]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[177592-177598]:BreakStatement[177592-177598]"
  }, {
    "left" : "case RGB:",
    "right" : "case RGB:",
    "info" : "SwitchCase[177607-177616]:SwitchCase[177607-177616]"
  }, {
    "left" : "for (int y = h-1; y >= 0; y--)",
    "right" : "for (int y = h-1; y >= 0; y--)",
    "info" : "ForStatement[177627-177889]:ForStatement[177627-177889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177658-177889]:Block[177658-177889]"
  }, {
    "left" : "for (int x = 0; x < w; x++)",
    "right" : "for (int x = 0; x < w; x++)",
    "info" : "ForStatement[177672-177853]:ForStatement[177672-177853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177700-177853]:Block[177700-177853]"
  }, {
    "left" : "outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                0xff000000;",
    "right" : "outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                0xff000000;",
    "info" : "ExpressionStatement[177716-177839]:ExpressionStatement[177716-177839]"
  }, {
    "left" : "index -= w;",
    "right" : "index -= w;",
    "info" : "ExpressionStatement[177866-177877]:ExpressionStatement[177866-177877]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[177900-177906]:BreakStatement[177900-177906]"
  }, {
    "left" : "case ARGB:",
    "right" : "case ARGB:",
    "info" : "SwitchCase[177915-177925]:SwitchCase[177915-177925]"
  }, {
    "left" : "for (int y = h-1; y >= 0; y--)",
    "right" : "for (int y = h-1; y >= 0; y--)",
    "info" : "ForStatement[177936-178205]:ForStatement[177936-178205]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177967-178205]:Block[177967-178205]"
  }, {
    "left" : "for (int x = 0; x < w; x++)",
    "right" : "for (int x = 0; x < w; x++)",
    "info" : "ForStatement[177981-178169]:ForStatement[177981-178169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178009-178169]:Block[178009-178169]"
  }, {
    "left" : "outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                (is.read() << 24);",
    "right" : "outgoing.pixels[index + x] =\n                is.read() | (is.read() << 8) | (is.read() << 16) |\n                (is.read() << 24);",
    "info" : "ExpressionStatement[178025-178155]:ExpressionStatement[178025-178155]"
  }, {
    "left" : "index -= w;",
    "right" : "index -= w;",
    "info" : "ExpressionStatement[178182-178193]:ExpressionStatement[178182-178193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178229-178893]:Block[178229-178893]"
  }, {
    "left" : "int count = w * h;",
    "right" : "int count = w * h;",
    "info" : "VariableDeclarationStatement[178256-178274]:VariableDeclarationStatement[178256-178274]"
  }, {
    "left" : "switch (format) {\n        case ALPHA:\n          for (int i = 0; i < count; i++) {\n            outgoing.pixels[i] = is.read();\n          }\n          break;\n        case RGB:\n          for (int i = 0; i < count; i++) {\n            outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              0xff000000;\n          }\n          break;\n        case ARGB:\n          for (int i = 0; i < count; i++) {\n            outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              (is.read() << 24);\n          }\n          break;\n        }",
    "right" : "switch (format) {\n        case ALPHA:\n          for (int i = 0; i < count; i++) {\n            outgoing.pixels[i] = is.read();\n          }\n          break;\n        case RGB:\n          for (int i = 0; i < count; i++) {\n            outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              0xff000000;\n          }\n          break;\n        case ARGB:\n          for (int i = 0; i < count; i++) {\n            outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              (is.read() << 24);\n          }\n          break;\n        }",
    "info" : "SwitchStatement[178283-178885]:SwitchStatement[178283-178885]"
  }, {
    "left" : "case ALPHA:",
    "right" : "case ALPHA:",
    "info" : "SwitchCase[178309-178320]:SwitchCase[178309-178320]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[178331-178420]:ForStatement[178331-178420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178363-178420]:Block[178363-178420]"
  }, {
    "left" : "outgoing.pixels[i] = is.read();",
    "right" : "outgoing.pixels[i] = is.read();",
    "info" : "ExpressionStatement[178377-178408]:ExpressionStatement[178377-178408]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[178431-178437]:BreakStatement[178431-178437]"
  }, {
    "left" : "case RGB:",
    "right" : "case RGB:",
    "info" : "SwitchCase[178446-178455]:SwitchCase[178446-178455]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[178466-178635]:ForStatement[178466-178635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178498-178635]:Block[178498-178635]"
  }, {
    "left" : "outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              0xff000000;",
    "right" : "outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              0xff000000;",
    "info" : "ExpressionStatement[178512-178623]:ExpressionStatement[178512-178623]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[178646-178652]:BreakStatement[178646-178652]"
  }, {
    "left" : "case ARGB:",
    "right" : "case ARGB:",
    "info" : "SwitchCase[178661-178671]:SwitchCase[178661-178671]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[178682-178858]:ForStatement[178682-178858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178714-178858]:Block[178714-178858]"
  }, {
    "left" : "outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              (is.read() << 24);",
    "right" : "outgoing.pixels[i] =\n              is.read() | (is.read() << 8) | (is.read() << 16) |\n              (is.read() << 24);",
    "info" : "ExpressionStatement[178728-178846]:ExpressionStatement[178728-178846]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[178869-178875]:BreakStatement[178869-178875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178906-180912]:Block[178906-180912]"
  }, {
    "left" : "int index = 0;",
    "right" : "int index = 0;",
    "info" : "VariableDeclarationStatement[178940-178954]:VariableDeclarationStatement[178940-178954]"
  }, {
    "left" : "int px[] = outgoing.pixels;",
    "right" : "int px[] = outgoing.pixels;",
    "info" : "VariableDeclarationStatement[178961-178988]:VariableDeclarationStatement[178961-178988]"
  }, {
    "left" : "while (index < px.length)",
    "right" : "while (index < px.length)",
    "info" : "WhileStatement[178996-180615]:WhileStatement[178996-180615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179022-180615]:Block[179022-180615]"
  }, {
    "left" : "int num = is.read();",
    "right" : "int num = is.read();",
    "info" : "VariableDeclarationStatement[179032-179052]:VariableDeclarationStatement[179032-179052]"
  }, {
    "left" : "boolean isRLE = (num & 0x80) != 0;",
    "right" : "boolean isRLE = (num & 0x80) != 0;",
    "info" : "VariableDeclarationStatement[179061-179095]:VariableDeclarationStatement[179061-179095]"
  }, {
    "left" : "if (isRLE)",
    "right" : "if (isRLE)",
    "info" : "IfStatement[179104-180607]:IfStatement[179104-180607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179115-179780]:Block[179115-179780]"
  }, {
    "left" : "num -= 127;",
    "right" : "num -= 127;",
    "info" : "ExpressionStatement[179127-179138]:ExpressionStatement[179127-179138]"
  }, {
    "left" : "int pixel = 0;",
    "right" : "int pixel = 0;",
    "info" : "VariableDeclarationStatement[179170-179184]:VariableDeclarationStatement[179170-179184]"
  }, {
    "left" : "switch (format) {\n          case ALPHA:\n            pixel = is.read();\n            break;\n          case RGB:\n            pixel = 0xFF000000 |\n              is.read() | (is.read() << 8) | (is.read() << 16);\n            //(is.read() << 16) | (is.read() << 8) | is.read();\n            break;\n          case ARGB:\n            pixel = is.read() |\n              (is.read() << 8) | (is.read() << 16) | (is.read() << 24);\n            break;\n          }",
    "right" : "switch (format) {\n          case ALPHA:\n            pixel = is.read();\n            break;\n          case RGB:\n            pixel = 0xFF000000 |\n              is.read() | (is.read() << 8) | (is.read() << 16);\n            //(is.read() << 16) | (is.read() << 8) | is.read();\n            break;\n          case ARGB:\n            pixel = is.read() |\n              (is.read() << 8) | (is.read() << 16) | (is.read() << 24);\n            break;\n          }",
    "info" : "SwitchStatement[179195-179640]:SwitchStatement[179195-179640]"
  }, {
    "left" : "case ALPHA:",
    "right" : "case ALPHA:",
    "info" : "SwitchCase[179223-179234]:SwitchCase[179223-179234]"
  }, {
    "left" : "pixel = is.read();",
    "right" : "pixel = is.read();",
    "info" : "ExpressionStatement[179247-179265]:ExpressionStatement[179247-179265]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[179278-179284]:BreakStatement[179278-179284]"
  }, {
    "left" : "case RGB:",
    "right" : "case RGB:",
    "info" : "SwitchCase[179295-179304]:SwitchCase[179295-179304]"
  }, {
    "left" : "pixel = 0xFF000000 |\n              is.read() | (is.read() << 8) | (is.read() << 16);",
    "right" : "pixel = 0xFF000000 |\n              is.read() | (is.read() << 8) | (is.read() << 16);",
    "info" : "ExpressionStatement[179317-179401]:ExpressionStatement[179317-179401]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[179478-179484]:BreakStatement[179478-179484]"
  }, {
    "left" : "case ARGB:",
    "right" : "case ARGB:",
    "info" : "SwitchCase[179495-179505]:SwitchCase[179495-179505]"
  }, {
    "left" : "pixel = is.read() |\n              (is.read() << 8) | (is.read() << 16) | (is.read() << 24);",
    "right" : "pixel = is.read() |\n              (is.read() << 8) | (is.read() << 16) | (is.read() << 24);",
    "info" : "ExpressionStatement[179518-179609]:ExpressionStatement[179518-179609]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[179622-179628]:BreakStatement[179622-179628]"
  }, {
    "left" : "for (int i = 0; i < num; i++)",
    "right" : "for (int i = 0; i < num; i++)",
    "info" : "ForStatement[179651-179770]:ForStatement[179651-179770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179681-179770]:Block[179681-179770]"
  }, {
    "left" : "px[index++] = pixel;",
    "right" : "px[index++] = pixel;",
    "info" : "ExpressionStatement[179695-179715]:ExpressionStatement[179695-179715]"
  }, {
    "left" : "if (index == px.length)",
    "right" : "if (index == px.length)",
    "info" : "IfStatement[179728-179758]:IfStatement[179728-179758]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[179752-179758]:BreakStatement[179752-179758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179786-180607]:Block[179786-180607]"
  }, {
    "left" : "num += 1;",
    "right" : "num += 1;",
    "info" : "ExpressionStatement[179840-179849]:ExpressionStatement[179840-179849]"
  }, {
    "left" : "switch (format) {\n          case ALPHA:\n            for (int i = 0; i < num; i++) {\n              px[index++] = is.read();\n            }\n            break;\n          case RGB:\n            for (int i = 0; i < num; i++) {\n              px[index++] = 0xFF000000 |\n                is.read() | (is.read() << 8) | (is.read() << 16);\n              //(is.read() << 16) | (is.read() << 8) | is.read();\n            }\n            break;\n          case ARGB:\n            for (int i = 0; i < num; i++) {\n              px[index++] = is.read() | //(is.read() << 24) |\n                (is.read() << 8) | (is.read() << 16) | (is.read() << 24);\n              //(is.read() << 16) | (is.read() << 8) | is.read();\n            }\n            break;\n          }",
    "right" : "switch (format) {\n          case ALPHA:\n            for (int i = 0; i < num; i++) {\n              px[index++] = is.read();\n            }\n            break;\n          case RGB:\n            for (int i = 0; i < num; i++) {\n              px[index++] = 0xFF000000 |\n                is.read() | (is.read() << 8) | (is.read() << 16);\n              //(is.read() << 16) | (is.read() << 8) | is.read();\n            }\n            break;\n          case ARGB:\n            for (int i = 0; i < num; i++) {\n              px[index++] = is.read() | //(is.read() << 24) |\n                (is.read() << 8) | (is.read() << 16) | (is.read() << 24);\n              //(is.read() << 16) | (is.read() << 8) | is.read();\n            }\n            break;\n          }",
    "info" : "SwitchStatement[179860-180597]:SwitchStatement[179860-180597]"
  }, {
    "left" : "case ALPHA:",
    "right" : "case ALPHA:",
    "info" : "SwitchCase[179888-179899]:SwitchCase[179888-179899]"
  }, {
    "left" : "for (int i = 0; i < num; i++)",
    "right" : "for (int i = 0; i < num; i++)",
    "info" : "ForStatement[179912-179996]:ForStatement[179912-179996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179942-179996]:Block[179942-179996]"
  }, {
    "left" : "px[index++] = is.read();",
    "right" : "px[index++] = is.read();",
    "info" : "ExpressionStatement[179958-179982]:ExpressionStatement[179958-179982]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[180009-180015]:BreakStatement[180009-180015]"
  }, {
    "left" : "case RGB:",
    "right" : "case RGB:",
    "info" : "SwitchCase[180026-180035]:SwitchCase[180026-180035]"
  }, {
    "left" : "for (int i = 0; i < num; i++)",
    "right" : "for (int i = 0; i < num; i++)",
    "info" : "ForStatement[180048-180266]:ForStatement[180048-180266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180078-180266]:Block[180078-180266]"
  }, {
    "left" : "px[index++] = 0xFF000000 |\n                is.read() | (is.read() << 8) | (is.read() << 16);",
    "right" : "px[index++] = 0xFF000000 |\n                is.read() | (is.read() << 8) | (is.read() << 16);",
    "info" : "ExpressionStatement[180094-180186]:ExpressionStatement[180094-180186]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[180279-180285]:BreakStatement[180279-180285]"
  }, {
    "left" : "case ARGB:",
    "right" : "case ARGB:",
    "info" : "SwitchCase[180296-180306]:SwitchCase[180296-180306]"
  }, {
    "left" : "for (int i = 0; i < num; i++)",
    "right" : "for (int i = 0; i < num; i++)",
    "info" : "ForStatement[180319-180566]:ForStatement[180319-180566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180349-180566]:Block[180349-180566]"
  }, {
    "left" : "px[index++] = is.read() | //(is.read() << 24) |\n                (is.read() << 8) | (is.read() << 16) | (is.read() << 24);",
    "right" : "px[index++] = is.read() | //(is.read() << 24) |\n                (is.read() << 8) | (is.read() << 16) | (is.read() << 24);",
    "info" : "ExpressionStatement[180365-180486]:ExpressionStatement[180365-180486]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[180579-180585]:BreakStatement[180579-180585]"
  }, {
    "left" : "if (!reversed)",
    "right" : "if (!reversed)",
    "info" : "IfStatement[180623-180906]:IfStatement[180623-180906]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180638-180906]:Block[180638-180906]"
  }, {
    "left" : "int[] temp = new int[w];",
    "right" : "int[] temp = new int[w];",
    "info" : "VariableDeclarationStatement[180648-180672]:VariableDeclarationStatement[180648-180672]"
  }, {
    "left" : "for (int y = 0; y < h/2; y++)",
    "right" : "for (int y = 0; y < h/2; y++)",
    "info" : "ForStatement[180681-180898]:ForStatement[180681-180898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180711-180898]:Block[180711-180898]"
  }, {
    "left" : "int z = (h-1) - y;",
    "right" : "int z = (h-1) - y;",
    "info" : "VariableDeclarationStatement[180723-180741]:VariableDeclarationStatement[180723-180741]"
  }, {
    "left" : "System.arraycopy(px, y*w, temp, 0, w);",
    "right" : "System.arraycopy(px, y*w, temp, 0, w);",
    "info" : "ExpressionStatement[180752-180790]:ExpressionStatement[180752-180790]"
  }, {
    "left" : "System.arraycopy(px, z*w, px, y*w, w);",
    "right" : "System.arraycopy(px, z*w, px, y*w, w);",
    "info" : "ExpressionStatement[180801-180839]:ExpressionStatement[180801-180839]"
  }, {
    "left" : "System.arraycopy(temp, 0, px, z*w, w);",
    "right" : "System.arraycopy(temp, 0, px, z*w, w);",
    "info" : "ExpressionStatement[180850-180888]:ExpressionStatement[180850-180888]"
  }, {
    "left" : "is.close();",
    "right" : "is.close();",
    "info" : "ExpressionStatement[180917-180928]:ExpressionStatement[180917-180928]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[180933-180949]:ReturnStatement[180933-180949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[181887-181928]:Block[181887-181928]"
  }, {
    "left" : "return loadXML(filename, null);",
    "right" : "return loadXML(filename, null);",
    "info" : "ReturnStatement[181893-181924]:ReturnStatement[181893-181924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182093-182518]:Block[182093-182518]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[182099-182514]:TryStatement[182099-182514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182103-182293]:Block[182103-182293]"
  }, {
    "left" : "return new XML(createReader(filename), options);",
    "right" : "return new XML(createReader(filename), options);",
    "info" : "ReturnStatement[182111-182159]:ReturnStatement[182111-182159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182316-182361]:Block[182316-182361]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[182324-182354]:ThrowStatement[182324-182354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182401-182446]:Block[182401-182446]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[182409-182439]:ThrowStatement[182409-182439]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182470-182514]:Block[182470-182514]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[182478-182508]:ThrowStatement[182478-182508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182823-182866]:Block[182823-182866]"
  }, {
    "left" : "return parseXML(xmlString, null);",
    "right" : "return parseXML(xmlString, null);",
    "info" : "ReturnStatement[182829-182862]:ReturnStatement[182829-182862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182925-183056]:Block[182925-183056]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[182931-183052]:TryStatement[182931-183052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182935-182987]:Block[182935-182987]"
  }, {
    "left" : "return XML.parse(xmlString, options);",
    "right" : "return XML.parse(xmlString, options);",
    "info" : "ReturnStatement[182943-182980]:ReturnStatement[182943-182980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183008-183052]:Block[183008-183052]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[183016-183046]:ThrowStatement[183016-183046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183328-183374]:Block[183328-183374]"
  }, {
    "left" : "return saveXML(xml, filename, null);",
    "right" : "return saveXML(xml, filename, null);",
    "info" : "ReturnStatement[183334-183370]:ReturnStatement[183334-183370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183444-183499]:Block[183444-183499]"
  }, {
    "left" : "return xml.save(saveFile(filename), options);",
    "right" : "return xml.save(saveFile(filename), options);",
    "info" : "ReturnStatement[183450-183495]:ReturnStatement[183450-183495]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183552-183609]:Block[183552-183609]"
  }, {
    "left" : "return new JSONObject(new StringReader(input));",
    "right" : "return new JSONObject(new StringReader(input));",
    "info" : "ReturnStatement[183558-183605]:ReturnStatement[183558-183605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183950-184006]:Block[183950-184006]"
  }, {
    "left" : "return new JSONObject(createReader(filename));",
    "right" : "return new JSONObject(createReader(filename));",
    "info" : "ReturnStatement[183956-184002]:ReturnStatement[183956-184002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184062-184114]:Block[184062-184114]"
  }, {
    "left" : "return new JSONObject(createReader(file));",
    "right" : "return new JSONObject(createReader(file));",
    "info" : "ReturnStatement[184068-184110]:ReturnStatement[184068-184110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184394-184448]:Block[184394-184448]"
  }, {
    "left" : "return saveJSONObject(json, filename, null);",
    "right" : "return saveJSONObject(json, filename, null);",
    "info" : "ReturnStatement[184400-184444]:ReturnStatement[184400-184444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184533-184589]:Block[184533-184589]"
  }, {
    "left" : "return json.save(saveFile(filename), options);",
    "right" : "return json.save(saveFile(filename), options);",
    "info" : "ReturnStatement[184539-184585]:ReturnStatement[184539-184585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184640-184696]:Block[184640-184696]"
  }, {
    "left" : "return new JSONArray(new StringReader(input));",
    "right" : "return new JSONArray(new StringReader(input));",
    "info" : "ReturnStatement[184646-184692]:ReturnStatement[184646-184692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185036-185091]:Block[185036-185091]"
  }, {
    "left" : "return new JSONArray(createReader(filename));",
    "right" : "return new JSONArray(createReader(filename));",
    "info" : "ReturnStatement[185042-185087]:ReturnStatement[185042-185087]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185145-185196]:Block[185145-185196]"
  }, {
    "left" : "return new JSONArray(createReader(file));",
    "right" : "return new JSONArray(createReader(file));",
    "info" : "ReturnStatement[185151-185192]:ReturnStatement[185151-185192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185476-185529]:Block[185476-185529]"
  }, {
    "left" : "return saveJSONArray(json, filename, null);",
    "right" : "return saveJSONArray(json, filename, null);",
    "info" : "ReturnStatement[185482-185525]:ReturnStatement[185482-185525]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185612-185668]:Block[185612-185668]"
  }, {
    "left" : "return json.save(saveFile(filename), options);",
    "right" : "return json.save(saveFile(filename), options);",
    "info" : "ReturnStatement[185618-185664]:ReturnStatement[185618-185664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186194-186237]:Block[186194-186237]"
  }, {
    "left" : "return loadTable(filename, null);",
    "right" : "return loadTable(filename, null);",
    "info" : "ReturnStatement[186200-186233]:ReturnStatement[186200-186233]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186845-187585]:Block[186845-187585]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[186851-187581]:TryStatement[186851-187581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186855-187505]:Block[186855-187505]"
  }, {
    "left" : "String optionStr = Table.extensionOptions(true, filename, options);",
    "right" : "String optionStr = Table.extensionOptions(true, filename, options);",
    "info" : "VariableDeclarationStatement[186863-186930]:VariableDeclarationStatement[186863-186930]"
  }, {
    "left" : "String[] optionList = trim(split(optionStr, ','));",
    "right" : "String[] optionList = trim(split(optionStr, ','));",
    "info" : "VariableDeclarationStatement[186937-186987]:VariableDeclarationStatement[186937-186987]"
  }, {
    "left" : "Table dictionary = null;",
    "right" : "Table dictionary = null;",
    "info" : "VariableDeclarationStatement[186995-187019]:VariableDeclarationStatement[186995-187019]"
  }, {
    "left" : "for (String opt : optionList)",
    "right" : "for (String opt : optionList)",
    "info" : "EnhancedForStatement[187026-187272]:EnhancedForStatement[187026-187272]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187056-187272]:Block[187056-187272]"
  }, {
    "left" : "if (opt.startsWith(\"dictionary=\"))",
    "right" : "if (opt.startsWith(\"dictionary=\"))",
    "info" : "IfStatement[187066-187264]:IfStatement[187066-187264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187101-187264]:Block[187101-187264]"
  }, {
    "left" : "dictionary = loadTable(opt.substring(opt.indexOf('=') + 1), \"tsv\");",
    "right" : "dictionary = loadTable(opt.substring(opt.indexOf('=') + 1), \"tsv\");",
    "info" : "ExpressionStatement[187113-187180]:ExpressionStatement[187113-187180]"
  }, {
    "left" : "return dictionary.typedParse(createInput(filename), optionStr);",
    "right" : "return dictionary.typedParse(createInput(filename), optionStr);",
    "info" : "ReturnStatement[187191-187254]:ReturnStatement[187191-187254]"
  }, {
    "left" : "InputStream input = createInput(filename);",
    "right" : "InputStream input = createInput(filename);",
    "info" : "VariableDeclarationStatement[187279-187321]:VariableDeclarationStatement[187279-187321]"
  }, {
    "left" : "if (input == null)",
    "right" : "if (input == null)",
    "info" : "IfStatement[187328-187456]:IfStatement[187328-187456]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187347-187456]:Block[187347-187456]"
  }, {
    "left" : "System.err.println(filename + \" does not exist or could not be read\");",
    "right" : "System.err.println(filename + \" does not exist or could not be read\");",
    "info" : "ExpressionStatement[187357-187427]:ExpressionStatement[187357-187427]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[187436-187448]:ReturnStatement[187436-187448]"
  }, {
    "left" : "return new Table(input, optionStr);",
    "right" : "return new Table(input, optionStr);",
    "info" : "ReturnStatement[187463-187498]:ReturnStatement[187463-187498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187528-187581]:Block[187528-187581]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[187536-187556]:ExpressionStatement[187536-187556]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[187563-187575]:ReturnStatement[187563-187575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187857-187907]:Block[187857-187907]"
  }, {
    "left" : "return saveTable(table, filename, null);",
    "right" : "return saveTable(table, filename, null);",
    "info" : "ReturnStatement[187863-187903]:ReturnStatement[187863-187903]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188060-188692]:Block[188060-188692]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[188386-188688]:TryStatement[188386-188688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188390-188611]:Block[188390-188611]"
  }, {
    "left" : "File outputFile = saveFile(filename);",
    "right" : "File outputFile = saveFile(filename);",
    "info" : "VariableDeclarationStatement[188464-188501]:VariableDeclarationStatement[188464-188501]"
  }, {
    "left" : "return table.save(outputFile, options);",
    "right" : "return table.save(outputFile, options);",
    "info" : "ReturnStatement[188565-188604]:ReturnStatement[188565-188604]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188634-188688]:Block[188634-188688]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[188642-188662]:ExpressionStatement[188642-188662]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188669-188682]:ReturnStatement[188669-188682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190413-190870]:Block[190413-190870]"
  }, {
    "left" : "if (!filename.toLowerCase().endsWith(\".vlw\"))",
    "right" : "if (!filename.toLowerCase().endsWith(\".vlw\"))",
    "info" : "IfStatement[190419-190564]:IfStatement[190419-190564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190465-190564]:Block[190465-190564]"
  }, {
    "left" : "throw new IllegalArgumentException(\"loadFont() is for .vlw files, try createFont()\");",
    "right" : "throw new IllegalArgumentException(\"loadFont() is for .vlw files, try createFont()\");",
    "info" : "ThrowStatement[190473-190558]:ThrowStatement[190473-190558]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[190569-190849]:TryStatement[190569-190849]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190573-190661]:Block[190573-190661]"
  }, {
    "left" : "InputStream input = createInput(filename);",
    "right" : "InputStream input = createInput(filename);",
    "info" : "VariableDeclarationStatement[190581-190623]:VariableDeclarationStatement[190581-190623]"
  }, {
    "left" : "return new PFont(input);",
    "right" : "return new PFont(input);",
    "info" : "ReturnStatement[190630-190654]:ReturnStatement[190630-190654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190682-190849]:Block[190682-190849]"
  }, {
    "left" : "die(\"Could not load font \" + filename + \". \" +\n          \"Make sure that the font has been copied \" +\n          \"to the data folder of your sketch.\", e);",
    "right" : "die(\"Could not load font \" + filename + \". \" +\n          \"Make sure that the font has been copied \" +\n          \"to the data folder of your sketch.\", e);",
    "info" : "ExpressionStatement[190690-190843]:ExpressionStatement[190690-190843]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[190854-190866]:ReturnStatement[190854-190866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191002-191233]:Block[191002-191233]"
  }, {
    "left" : "return createFont(\"Lucida Sans\", size, true, null);",
    "right" : "return createFont(\"Lucida Sans\", size, true, null);",
    "info" : "ReturnStatement[191178-191229]:ReturnStatement[191178-191229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191287-191339]:Block[191287-191339]"
  }, {
    "left" : "return createFont(name, size, true, null);",
    "right" : "return createFont(name, size, true, null);",
    "info" : "ReturnStatement[191293-191335]:ReturnStatement[191293-191335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191409-191463]:Block[191409-191463]"
  }, {
    "left" : "return createFont(name, size, smooth, null);",
    "right" : "return createFont(name, size, smooth, null);",
    "info" : "ReturnStatement[191415-191459]:ReturnStatement[191415-191459]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194214-195232]:Block[194214-195232]"
  }, {
    "left" : "String lowerName = name.toLowerCase();",
    "right" : "String lowerName = name.toLowerCase();",
    "info" : "VariableDeclarationStatement[194220-194258]:VariableDeclarationStatement[194220-194258]"
  }, {
    "left" : "Font baseFont = null;",
    "right" : "Font baseFont = null;",
    "info" : "VariableDeclarationStatement[194263-194284]:VariableDeclarationStatement[194263-194284]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[194290-195228]:TryStatement[194290-195228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194294-195083]:Block[194294-195083]"
  }, {
    "left" : "InputStream stream = null;",
    "right" : "InputStream stream = null;",
    "info" : "VariableDeclarationStatement[194302-194328]:VariableDeclarationStatement[194302-194328]"
  }, {
    "left" : "if (lowerName.endsWith(\".otf\") || lowerName.endsWith(\".ttf\"))",
    "right" : "if (lowerName.endsWith(\".otf\") || lowerName.endsWith(\".ttf\"))",
    "info" : "IfStatement[194335-194917]:IfStatement[194335-194917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194397-194861]:Block[194397-194861]"
  }, {
    "left" : "stream = createInput(name);",
    "right" : "stream = createInput(name);",
    "info" : "ExpressionStatement[194407-194434]:ExpressionStatement[194407-194434]"
  }, {
    "left" : "if (stream == null)",
    "right" : "if (stream == null)",
    "info" : "IfStatement[194443-194777]:IfStatement[194443-194777]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194463-194777]:Block[194463-194777]"
  }, {
    "left" : "System.err.println(\"The font \\\"\" + name + \"\\\" \" +\n                             \"is missing or inaccessible, make sure \" +\n                             \"the URL is valid or that the file has been \" +\n                             \"added to your sketch and is readable.\");",
    "right" : "System.err.println(\"The font \\\"\" + name + \"\\\" \" +\n                             \"is missing or inaccessible, make sure \" +\n                             \"the URL is valid or that the file has been \" +\n                             \"added to your sketch and is readable.\");",
    "info" : "ExpressionStatement[194475-194744]:ExpressionStatement[194475-194744]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[194755-194767]:ReturnStatement[194755-194767]"
  }, {
    "left" : "baseFont = Font.createFont(Font.TRUETYPE_FONT, createInput(name));",
    "right" : "baseFont = Font.createFont(Font.TRUETYPE_FONT, createInput(name));",
    "info" : "ExpressionStatement[194786-194852]:ExpressionStatement[194786-194852]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194867-194917]:Block[194867-194917]"
  }, {
    "left" : "baseFont = PFont.findFont(name);",
    "right" : "baseFont = PFont.findFont(name);",
    "info" : "ExpressionStatement[194877-194909]:ExpressionStatement[194877-194909]"
  }, {
    "left" : "return new PFont(baseFont.deriveFont(size * pixelDensity),\n                       smooth, charset, stream != null,\n                       pixelDensity);",
    "right" : "return new PFont(baseFont.deriveFont(size * pixelDensity),\n                       smooth, charset, stream != null,\n                       pixelDensity);",
    "info" : "ReturnStatement[194924-195076]:ReturnStatement[194924-195076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[195104-195228]:Block[195104-195228]"
  }, {
    "left" : "System.err.println(\"Problem with createFont(\\\"\" + name + \"\\\")\");",
    "right" : "System.err.println(\"Problem with createFont(\\\"\" + name + \"\\\")\");",
    "info" : "ExpressionStatement[195112-195176]:ExpressionStatement[195112-195176]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[195183-195203]:ExpressionStatement[195183-195203]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[195210-195222]:ReturnStatement[195210-195222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197021-197067]:Block[197021-197067]"
  }, {
    "left" : "selectInput(prompt, callback, null);",
    "right" : "selectInput(prompt, callback, null);",
    "info" : "ExpressionStatement[197027-197063]:ExpressionStatement[197027-197063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197139-197191]:Block[197139-197191]"
  }, {
    "left" : "selectInput(prompt, callback, file, this);",
    "right" : "selectInput(prompt, callback, file, this);",
    "info" : "ExpressionStatement[197145-197187]:ExpressionStatement[197145-197187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197312-197399]:Block[197312-197399]"
  }, {
    "left" : "selectInput(prompt, callback, file, callbackObject, null);",
    "right" : "selectInput(prompt, callback, file, callbackObject, null);",
    "info" : "ExpressionStatement[197318-197376]:ExpressionStatement[197318-197376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197554-197646]:Block[197554-197646]"
  }, {
    "left" : "selectImpl(prompt, callbackMethod, file, callbackObject, parent, FileDialog.LOAD);",
    "right" : "selectImpl(prompt, callbackMethod, file, callbackObject, parent, FileDialog.LOAD);",
    "info" : "ExpressionStatement[197560-197642]:ExpressionStatement[197560-197642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197906-197953]:Block[197906-197953]"
  }, {
    "left" : "selectOutput(prompt, callback, null);",
    "right" : "selectOutput(prompt, callback, null);",
    "info" : "ExpressionStatement[197912-197949]:ExpressionStatement[197912-197949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198025-198078]:Block[198025-198078]"
  }, {
    "left" : "selectOutput(prompt, callback, file, this);",
    "right" : "selectOutput(prompt, callback, file, this);",
    "info" : "ExpressionStatement[198031-198074]:ExpressionStatement[198031-198074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198201-198288]:Block[198201-198288]"
  }, {
    "left" : "selectOutput(prompt, callback, file, callbackObject, null);",
    "right" : "selectOutput(prompt, callback, file, callbackObject, null);",
    "info" : "ExpressionStatement[198207-198266]:ExpressionStatement[198207-198266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198445-198537]:Block[198445-198537]"
  }, {
    "left" : "selectImpl(prompt, callbackMethod, file, callbackObject, parent, FileDialog.SAVE);",
    "right" : "selectImpl(prompt, callbackMethod, file, callbackObject, parent, FileDialog.SAVE);",
    "info" : "ExpressionStatement[198451-198533]:ExpressionStatement[198451-198533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198899-200207]:Block[198899-200207]"
  }, {
    "left" : "EventQueue.invokeLater(new Runnable() {\n      public void run() {\n        File selectedFile = null;\n\n        if (useNativeSelect) {\n          FileDialog dialog = new FileDialog(parentFrame, prompt, mode);\n          if (defaultSelection != null) {\n            dialog.setDirectory(defaultSelection.getParent());\n            dialog.setFile(defaultSelection.getName());\n          }\n          dialog.setVisible(true);\n          String directory = dialog.getDirectory();\n          String filename = dialog.getFile();\n          if (filename != null) {\n            selectedFile = new File(directory, filename);\n          }\n\n        } else {\n          JFileChooser chooser = new JFileChooser();\n          chooser.setDialogTitle(prompt);\n          if (defaultSelection != null) {\n            chooser.setSelectedFile(defaultSelection);\n          }\n\n          int result = -1;\n          if (mode == FileDialog.SAVE) {\n            result = chooser.showSaveDialog(parentFrame);\n          } else if (mode == FileDialog.LOAD) {\n            result = chooser.showOpenDialog(parentFrame);\n          }\n          if (result == JFileChooser.APPROVE_OPTION) {\n            selectedFile = chooser.getSelectedFile();\n          }\n        }\n        selectCallback(selectedFile, callbackMethod, callbackObject);\n      }\n    });",
    "right" : "EventQueue.invokeLater(new Runnable() {\n      public void run() {\n        File selectedFile = null;\n\n        if (useNativeSelect) {\n          FileDialog dialog = new FileDialog(parentFrame, prompt, mode);\n          if (defaultSelection != null) {\n            dialog.setDirectory(defaultSelection.getParent());\n            dialog.setFile(defaultSelection.getName());\n          }\n          dialog.setVisible(true);\n          String directory = dialog.getDirectory();\n          String filename = dialog.getFile();\n          if (filename != null) {\n            selectedFile = new File(directory, filename);\n          }\n\n        } else {\n          JFileChooser chooser = new JFileChooser();\n          chooser.setDialogTitle(prompt);\n          if (defaultSelection != null) {\n            chooser.setSelectedFile(defaultSelection);\n          }\n\n          int result = -1;\n          if (mode == FileDialog.SAVE) {\n            result = chooser.showSaveDialog(parentFrame);\n          } else if (mode == FileDialog.LOAD) {\n            result = chooser.showOpenDialog(parentFrame);\n          }\n          if (result == JFileChooser.APPROVE_OPTION) {\n            selectedFile = chooser.getSelectedFile();\n          }\n        }\n        selectCallback(selectedFile, callbackMethod, callbackObject);\n      }\n    });",
    "info" : "ExpressionStatement[198905-200203]:ExpressionStatement[198905-200203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198969-200195]:Block[198969-200195]"
  }, {
    "left" : "File selectedFile = null;",
    "right" : "File selectedFile = null;",
    "info" : "VariableDeclarationStatement[198979-199004]:VariableDeclarationStatement[198979-199004]"
  }, {
    "left" : "if (useNativeSelect)",
    "right" : "if (useNativeSelect)",
    "info" : "IfStatement[199014-200117]:IfStatement[199014-200117]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199035-199530]:Block[199035-199530]"
  }, {
    "left" : "FileDialog dialog = new FileDialog(parentFrame, prompt, mode);",
    "right" : "FileDialog dialog = new FileDialog(parentFrame, prompt, mode);",
    "info" : "VariableDeclarationStatement[199047-199109]:VariableDeclarationStatement[199047-199109]"
  }, {
    "left" : "if (defaultSelection != null)",
    "right" : "if (defaultSelection != null)",
    "info" : "IfStatement[199120-199282]:IfStatement[199120-199282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199150-199282]:Block[199150-199282]"
  }, {
    "left" : "dialog.setDirectory(defaultSelection.getParent());",
    "right" : "dialog.setDirectory(defaultSelection.getParent());",
    "info" : "ExpressionStatement[199164-199214]:ExpressionStatement[199164-199214]"
  }, {
    "left" : "dialog.setFile(defaultSelection.getName());",
    "right" : "dialog.setFile(defaultSelection.getName());",
    "info" : "ExpressionStatement[199227-199270]:ExpressionStatement[199227-199270]"
  }, {
    "left" : "dialog.setVisible(true);",
    "right" : "dialog.setVisible(true);",
    "info" : "ExpressionStatement[199293-199317]:ExpressionStatement[199293-199317]"
  }, {
    "left" : "String directory = dialog.getDirectory();",
    "right" : "String directory = dialog.getDirectory();",
    "info" : "VariableDeclarationStatement[199328-199369]:VariableDeclarationStatement[199328-199369]"
  }, {
    "left" : "String filename = dialog.getFile();",
    "right" : "String filename = dialog.getFile();",
    "info" : "VariableDeclarationStatement[199380-199415]:VariableDeclarationStatement[199380-199415]"
  }, {
    "left" : "if (filename != null)",
    "right" : "if (filename != null)",
    "info" : "IfStatement[199426-199519]:IfStatement[199426-199519]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199448-199519]:Block[199448-199519]"
  }, {
    "left" : "selectedFile = new File(directory, filename);",
    "right" : "selectedFile = new File(directory, filename);",
    "info" : "ExpressionStatement[199462-199507]:ExpressionStatement[199462-199507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199536-200117]:Block[199536-200117]"
  }, {
    "left" : "JFileChooser chooser = new JFileChooser();",
    "right" : "JFileChooser chooser = new JFileChooser();",
    "info" : "VariableDeclarationStatement[199548-199590]:VariableDeclarationStatement[199548-199590]"
  }, {
    "left" : "chooser.setDialogTitle(prompt);",
    "right" : "chooser.setDialogTitle(prompt);",
    "info" : "ExpressionStatement[199601-199632]:ExpressionStatement[199601-199632]"
  }, {
    "left" : "if (defaultSelection != null)",
    "right" : "if (defaultSelection != null)",
    "info" : "IfStatement[199643-199741]:IfStatement[199643-199741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199673-199741]:Block[199673-199741]"
  }, {
    "left" : "chooser.setSelectedFile(defaultSelection);",
    "right" : "chooser.setSelectedFile(defaultSelection);",
    "info" : "ExpressionStatement[199687-199729]:ExpressionStatement[199687-199729]"
  }, {
    "left" : "int result = -1;",
    "right" : "int result = -1;",
    "info" : "VariableDeclarationStatement[199753-199769]:VariableDeclarationStatement[199753-199769]"
  }, {
    "left" : "if (mode == FileDialog.SAVE)",
    "right" : "if (mode == FileDialog.SAVE)",
    "info" : "IfStatement[199780-199986]:IfStatement[199780-199986]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199809-199880]:Block[199809-199880]"
  }, {
    "left" : "result = chooser.showSaveDialog(parentFrame);",
    "right" : "result = chooser.showSaveDialog(parentFrame);",
    "info" : "ExpressionStatement[199823-199868]:ExpressionStatement[199823-199868]"
  }, {
    "left" : "if (mode == FileDialog.LOAD)",
    "right" : "if (mode == FileDialog.LOAD)",
    "info" : "IfStatement[199886-199986]:IfStatement[199886-199986]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199915-199986]:Block[199915-199986]"
  }, {
    "left" : "result = chooser.showOpenDialog(parentFrame);",
    "right" : "result = chooser.showOpenDialog(parentFrame);",
    "info" : "ExpressionStatement[199929-199974]:ExpressionStatement[199929-199974]"
  }, {
    "left" : "if (result == JFileChooser.APPROVE_OPTION)",
    "right" : "if (result == JFileChooser.APPROVE_OPTION)",
    "info" : "IfStatement[199997-200107]:IfStatement[199997-200107]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200040-200107]:Block[200040-200107]"
  }, {
    "left" : "selectedFile = chooser.getSelectedFile();",
    "right" : "selectedFile = chooser.getSelectedFile();",
    "info" : "ExpressionStatement[200054-200095]:ExpressionStatement[200054-200095]"
  }, {
    "left" : "selectCallback(selectedFile, callbackMethod, callbackObject);",
    "right" : "selectCallback(selectedFile, callbackMethod, callbackObject);",
    "info" : "ExpressionStatement[200126-200187]:ExpressionStatement[200126-200187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200466-200513]:Block[200466-200513]"
  }, {
    "left" : "selectFolder(prompt, callback, null);",
    "right" : "selectFolder(prompt, callback, null);",
    "info" : "ExpressionStatement[200472-200509]:ExpressionStatement[200472-200509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200586-200639]:Block[200586-200639]"
  }, {
    "left" : "selectFolder(prompt, callback, file, this);",
    "right" : "selectFolder(prompt, callback, file, this);",
    "info" : "ExpressionStatement[200592-200635]:ExpressionStatement[200592-200635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200762-200849]:Block[200762-200849]"
  }, {
    "left" : "selectFolder(prompt, callback, file, callbackObject, null);",
    "right" : "selectFolder(prompt, callback, file, callbackObject, null);",
    "info" : "ExpressionStatement[200768-200827]:ExpressionStatement[200768-200827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201155-202395]:Block[201155-202395]"
  }, {
    "left" : "EventQueue.invokeLater(new Runnable() {\n      public void run() {\n        File selectedFile = null;\n\n        if (platform == MACOSX && useNativeSelect != false) {\n          FileDialog fileDialog =\n            new FileDialog(parentFrame, prompt, FileDialog.LOAD);\n          System.setProperty(\"apple.awt.fileDialogForDirectories\", \"true\");\n          fileDialog.setVisible(true);\n          System.setProperty(\"apple.awt.fileDialogForDirectories\", \"false\");\n          String filename = fileDialog.getFile();\n          if (filename != null) {\n            selectedFile = new File(fileDialog.getDirectory(), fileDialog.getFile());\n          }\n        } else {\n          JFileChooser fileChooser = new JFileChooser();\n          fileChooser.setDialogTitle(prompt);\n          fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n          if (defaultSelection != null) {\n            fileChooser.setSelectedFile(defaultSelection);\n          }\n\n          int result = fileChooser.showOpenDialog(parentFrame);\n          if (result == JFileChooser.APPROVE_OPTION) {\n            selectedFile = fileChooser.getSelectedFile();\n          }\n        }\n        selectCallback(selectedFile, callbackMethod, callbackObject);\n      }\n    });",
    "right" : "EventQueue.invokeLater(new Runnable() {\n      public void run() {\n        File selectedFile = null;\n\n        if (platform == MACOSX && useNativeSelect != false) {\n          FileDialog fileDialog =\n            new FileDialog(parentFrame, prompt, FileDialog.LOAD);\n          System.setProperty(\"apple.awt.fileDialogForDirectories\", \"true\");\n          fileDialog.setVisible(true);\n          System.setProperty(\"apple.awt.fileDialogForDirectories\", \"false\");\n          String filename = fileDialog.getFile();\n          if (filename != null) {\n            selectedFile = new File(fileDialog.getDirectory(), fileDialog.getFile());\n          }\n        } else {\n          JFileChooser fileChooser = new JFileChooser();\n          fileChooser.setDialogTitle(prompt);\n          fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n          if (defaultSelection != null) {\n            fileChooser.setSelectedFile(defaultSelection);\n          }\n\n          int result = fileChooser.showOpenDialog(parentFrame);\n          if (result == JFileChooser.APPROVE_OPTION) {\n            selectedFile = fileChooser.getSelectedFile();\n          }\n        }\n        selectCallback(selectedFile, callbackMethod, callbackObject);\n      }\n    });",
    "info" : "ExpressionStatement[201161-202391]:ExpressionStatement[201161-202391]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201225-202383]:Block[201225-202383]"
  }, {
    "left" : "File selectedFile = null;",
    "right" : "File selectedFile = null;",
    "info" : "VariableDeclarationStatement[201235-201260]:VariableDeclarationStatement[201235-201260]"
  }, {
    "left" : "if (platform == MACOSX && useNativeSelect != false)",
    "right" : "if (platform == MACOSX && useNativeSelect != false)",
    "info" : "IfStatement[201270-202305]:IfStatement[201270-202305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201322-201807]:Block[201322-201807]"
  }, {
    "left" : "FileDialog fileDialog =\n            new FileDialog(parentFrame, prompt, FileDialog.LOAD);",
    "right" : "FileDialog fileDialog =\n            new FileDialog(parentFrame, prompt, FileDialog.LOAD);",
    "info" : "VariableDeclarationStatement[201334-201423]:VariableDeclarationStatement[201334-201423]"
  }, {
    "left" : "System.setProperty(\"apple.awt.fileDialogForDirectories\", \"true\");",
    "right" : "System.setProperty(\"apple.awt.fileDialogForDirectories\", \"true\");",
    "info" : "ExpressionStatement[201434-201499]:ExpressionStatement[201434-201499]"
  }, {
    "left" : "fileDialog.setVisible(true);",
    "right" : "fileDialog.setVisible(true);",
    "info" : "ExpressionStatement[201510-201538]:ExpressionStatement[201510-201538]"
  }, {
    "left" : "System.setProperty(\"apple.awt.fileDialogForDirectories\", \"false\");",
    "right" : "System.setProperty(\"apple.awt.fileDialogForDirectories\", \"false\");",
    "info" : "ExpressionStatement[201549-201615]:ExpressionStatement[201549-201615]"
  }, {
    "left" : "String filename = fileDialog.getFile();",
    "right" : "String filename = fileDialog.getFile();",
    "info" : "VariableDeclarationStatement[201626-201665]:VariableDeclarationStatement[201626-201665]"
  }, {
    "left" : "if (filename != null)",
    "right" : "if (filename != null)",
    "info" : "IfStatement[201676-201797]:IfStatement[201676-201797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201698-201797]:Block[201698-201797]"
  }, {
    "left" : "selectedFile = new File(fileDialog.getDirectory(), fileDialog.getFile());",
    "right" : "selectedFile = new File(fileDialog.getDirectory(), fileDialog.getFile());",
    "info" : "ExpressionStatement[201712-201785]:ExpressionStatement[201712-201785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201813-202305]:Block[201813-202305]"
  }, {
    "left" : "JFileChooser fileChooser = new JFileChooser();",
    "right" : "JFileChooser fileChooser = new JFileChooser();",
    "info" : "VariableDeclarationStatement[201825-201871]:VariableDeclarationStatement[201825-201871]"
  }, {
    "left" : "fileChooser.setDialogTitle(prompt);",
    "right" : "fileChooser.setDialogTitle(prompt);",
    "info" : "ExpressionStatement[201882-201917]:ExpressionStatement[201882-201917]"
  }, {
    "left" : "fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);",
    "right" : "fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);",
    "info" : "ExpressionStatement[201928-201992]:ExpressionStatement[201928-201992]"
  }, {
    "left" : "if (defaultSelection != null)",
    "right" : "if (defaultSelection != null)",
    "info" : "IfStatement[202003-202105]:IfStatement[202003-202105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202033-202105]:Block[202033-202105]"
  }, {
    "left" : "fileChooser.setSelectedFile(defaultSelection);",
    "right" : "fileChooser.setSelectedFile(defaultSelection);",
    "info" : "ExpressionStatement[202047-202093]:ExpressionStatement[202047-202093]"
  }, {
    "left" : "int result = fileChooser.showOpenDialog(parentFrame);",
    "right" : "int result = fileChooser.showOpenDialog(parentFrame);",
    "info" : "VariableDeclarationStatement[202117-202170]:VariableDeclarationStatement[202117-202170]"
  }, {
    "left" : "if (result == JFileChooser.APPROVE_OPTION)",
    "right" : "if (result == JFileChooser.APPROVE_OPTION)",
    "info" : "IfStatement[202181-202295]:IfStatement[202181-202295]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202224-202295]:Block[202224-202295]"
  }, {
    "left" : "selectedFile = fileChooser.getSelectedFile();",
    "right" : "selectedFile = fileChooser.getSelectedFile();",
    "info" : "ExpressionStatement[202238-202283]:ExpressionStatement[202238-202283]"
  }, {
    "left" : "selectCallback(selectedFile, callbackMethod, callbackObject);",
    "right" : "selectCallback(selectedFile, callbackMethod, callbackObject);",
    "info" : "ExpressionStatement[202314-202375]:ExpressionStatement[202314-202375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202574-203128]:Block[202574-203128]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[202580-203124]:TryStatement[202580-203124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202584-202829]:Block[202584-202829]"
  }, {
    "left" : "Class<?> callbackClass = callbackObject.getClass();",
    "right" : "Class<?> callbackClass = callbackObject.getClass();",
    "info" : "VariableDeclarationStatement[202592-202643]:VariableDeclarationStatement[202592-202643]"
  }, {
    "left" : "Method selectMethod =\n        callbackClass.getMethod(callbackMethod, new Class[] { File.class });",
    "right" : "Method selectMethod =\n        callbackClass.getMethod(callbackMethod, new Class[] { File.class });",
    "info" : "VariableDeclarationStatement[202650-202748]:VariableDeclarationStatement[202650-202748]"
  }, {
    "left" : "selectMethod.invoke(callbackObject, new Object[] { selectedFile });",
    "right" : "selectMethod.invoke(callbackObject, new Object[] { selectedFile });",
    "info" : "ExpressionStatement[202755-202822]:ExpressionStatement[202755-202822]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202865-202937]:Block[202865-202937]"
  }, {
    "left" : "System.err.println(callbackMethod + \"() must be public\");",
    "right" : "System.err.println(callbackMethod + \"() must be public\");",
    "info" : "ExpressionStatement[202873-202930]:ExpressionStatement[202873-202930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202976-203013]:Block[202976-203013]"
  }, {
    "left" : "ite.printStackTrace();",
    "right" : "ite.printStackTrace();",
    "info" : "ExpressionStatement[202984-203006]:ExpressionStatement[202984-203006]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203049-203124]:Block[203049-203124]"
  }, {
    "left" : "System.err.println(callbackMethod + \"() could not be found\");",
    "right" : "System.err.println(callbackMethod + \"() could not be found\");",
    "info" : "ExpressionStatement[203057-203118]:ExpressionStatement[203057-203118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203446-203850]:Block[203446-203850]"
  }, {
    "left" : "if (filename.toLowerCase().endsWith(\".gz\"))",
    "right" : "if (filename.toLowerCase().endsWith(\".gz\"))",
    "info" : "IfStatement[203576-203690]:IfStatement[203576-203690]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203620-203690]:Block[203620-203690]"
  }, {
    "left" : "filename = filename.substring(0, filename.length() - 3);",
    "right" : "filename = filename.substring(0, filename.length() - 3);",
    "info" : "ExpressionStatement[203628-203684]:ExpressionStatement[203628-203684]"
  }, {
    "left" : "int dotIndex = filename.lastIndexOf('.');",
    "right" : "int dotIndex = filename.lastIndexOf('.');",
    "info" : "VariableDeclarationStatement[203695-203736]:VariableDeclarationStatement[203695-203736]"
  }, {
    "left" : "if (dotIndex != -1)",
    "right" : "if (dotIndex != -1)",
    "info" : "IfStatement[203741-203829]:IfStatement[203741-203829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203761-203829]:Block[203761-203829]"
  }, {
    "left" : "return filename.substring(dotIndex + 1).toLowerCase();",
    "right" : "return filename.substring(dotIndex + 1).toLowerCase();",
    "info" : "ReturnStatement[203769-203823]:ReturnStatement[203769-203823]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[203834-203846]:ReturnStatement[203834-203846]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204741-204943]:Block[204741-204943]"
  }, {
    "left" : "InputStream is = createInput(filename);",
    "right" : "InputStream is = createInput(filename);",
    "info" : "VariableDeclarationStatement[204747-204786]:VariableDeclarationStatement[204747-204786]"
  }, {
    "left" : "if (is == null)",
    "right" : "if (is == null)",
    "info" : "IfStatement[204791-204910]:IfStatement[204791-204910]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204807-204910]:Block[204807-204910]"
  }, {
    "left" : "System.err.println(filename + \" does not exist or could not be read\");",
    "right" : "System.err.println(filename + \" does not exist or could not be read\");",
    "info" : "ExpressionStatement[204815-204885]:ExpressionStatement[204815-204885]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[204892-204904]:ReturnStatement[204892-204904]"
  }, {
    "left" : "return createReader(is);",
    "right" : "return createReader(is);",
    "info" : "ReturnStatement[204915-204939]:ReturnStatement[204915-204939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205028-205373]:Block[205028-205373]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[205034-205369]:TryStatement[205034-205369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205038-205231]:Block[205038-205231]"
  }, {
    "left" : "InputStream is = new FileInputStream(file);",
    "right" : "InputStream is = new FileInputStream(file);",
    "info" : "VariableDeclarationStatement[205046-205089]:VariableDeclarationStatement[205046-205089]"
  }, {
    "left" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "right" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "info" : "IfStatement[205096-205193]:IfStatement[205096-205193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205146-205193]:Block[205146-205193]"
  }, {
    "left" : "is = new GZIPInputStream(is);",
    "right" : "is = new GZIPInputStream(is);",
    "info" : "ExpressionStatement[205156-205185]:ExpressionStatement[205156-205185]"
  }, {
    "left" : "return createReader(is);",
    "right" : "return createReader(is);",
    "info" : "ReturnStatement[205200-205224]:ReturnStatement[205200-205224]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205254-205369]:Block[205254-205369]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[205333-205363]:ThrowStatement[205333-205363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205596-205802]:Block[205596-205802]"
  }, {
    "left" : "InputStreamReader isr = null;",
    "right" : "InputStreamReader isr = null;",
    "info" : "VariableDeclarationStatement[205602-205631]:VariableDeclarationStatement[205602-205631]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[205636-205741]:TryStatement[205636-205741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205640-205698]:Block[205640-205698]"
  }, {
    "left" : "isr = new InputStreamReader(input, \"UTF-8\");",
    "right" : "isr = new InputStreamReader(input, \"UTF-8\");",
    "info" : "ExpressionStatement[205648-205692]:ExpressionStatement[205648-205692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205738-205741]:Block[205738-205741]"
  }, {
    "left" : "return new BufferedReader(isr);",
    "right" : "return new BufferedReader(isr);",
    "info" : "ReturnStatement[205767-205798]:ReturnStatement[205767-205798]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206654-206704]:Block[206654-206704]"
  }, {
    "left" : "return createWriter(saveFile(filename));",
    "right" : "return createWriter(saveFile(filename));",
    "info" : "ReturnStatement[206660-206700]:ReturnStatement[206660-206700]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206893-207444]:Block[206893-207444]"
  }, {
    "left" : "if (file == null)",
    "right" : "if (file == null)",
    "info" : "IfStatement[206899-207000]:IfStatement[206899-207000]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206917-207000]:Block[206917-207000]"
  }, {
    "left" : "throw new RuntimeException(\"File passed to createWriter() was null\");",
    "right" : "throw new RuntimeException(\"File passed to createWriter() was null\");",
    "info" : "ThrowStatement[206925-206994]:ThrowStatement[206925-206994]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[207005-207440]:TryStatement[207005-207440]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207009-207284]:Block[207009-207284]"
  }, {
    "left" : "createPath(file);",
    "right" : "createPath(file);",
    "info" : "ExpressionStatement[207017-207034]:ExpressionStatement[207017-207034]"
  }, {
    "left" : "OutputStream output = new FileOutputStream(file);",
    "right" : "OutputStream output = new FileOutputStream(file);",
    "info" : "VariableDeclarationStatement[207080-207129]:VariableDeclarationStatement[207080-207129]"
  }, {
    "left" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "right" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "info" : "IfStatement[207136-207242]:IfStatement[207136-207242]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207186-207242]:Block[207186-207242]"
  }, {
    "left" : "output = new GZIPOutputStream(output);",
    "right" : "output = new GZIPOutputStream(output);",
    "info" : "ExpressionStatement[207196-207234]:ExpressionStatement[207196-207234]"
  }, {
    "left" : "return createWriter(output);",
    "right" : "return createWriter(output);",
    "info" : "ReturnStatement[207249-207277]:ReturnStatement[207249-207277]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207305-207440]:Block[207305-207440]"
  }, {
    "left" : "throw new RuntimeException(\"Couldn't create a writer for \" +\n                                 file.getAbsolutePath(), e);",
    "right" : "throw new RuntimeException(\"Couldn't create a writer for \" +\n                                 file.getAbsolutePath(), e);",
    "info" : "ThrowStatement[207313-207434]:ThrowStatement[207313-207434]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207677-207956]:Block[207677-207956]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[207683-207914]:TryStatement[207683-207914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207687-207871]:Block[207687-207871]"
  }, {
    "left" : "BufferedOutputStream bos = new BufferedOutputStream(output, 8192);",
    "right" : "BufferedOutputStream bos = new BufferedOutputStream(output, 8192);",
    "info" : "VariableDeclarationStatement[207695-207761]:VariableDeclarationStatement[207695-207761]"
  }, {
    "left" : "OutputStreamWriter osw = new OutputStreamWriter(bos, \"UTF-8\");",
    "right" : "OutputStreamWriter osw = new OutputStreamWriter(bos, \"UTF-8\");",
    "info" : "VariableDeclarationStatement[207768-207830]:VariableDeclarationStatement[207768-207830]"
  }, {
    "left" : "return new PrintWriter(osw);",
    "right" : "return new PrintWriter(osw);",
    "info" : "ReturnStatement[207837-207865]:ReturnStatement[207837-207865]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207911-207914]:Block[207911-207914]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[207940-207952]:ReturnStatement[207940-207952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211538-211900]:Block[211538-211900]"
  }, {
    "left" : "InputStream input = createInputRaw(filename);",
    "right" : "InputStream input = createInputRaw(filename);",
    "info" : "VariableDeclarationStatement[211544-211589]:VariableDeclarationStatement[211544-211589]"
  }, {
    "left" : "final String lower = filename.toLowerCase();",
    "right" : "final String lower = filename.toLowerCase();",
    "info" : "VariableDeclarationStatement[211594-211638]:VariableDeclarationStatement[211594-211638]"
  }, {
    "left" : "if ((input != null) &&\n        (lower.endsWith(\".gz\") || lower.endsWith(\".svgz\")))",
    "right" : "if ((input != null) &&\n        (lower.endsWith(\".gz\") || lower.endsWith(\".svgz\")))",
    "info" : "IfStatement[211643-211878]:IfStatement[211643-211878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211726-211878]:Block[211726-211878]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[211734-211872]:TryStatement[211734-211872]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211738-211790]:Block[211738-211790]"
  }, {
    "left" : "return new GZIPInputStream(input);",
    "right" : "return new GZIPInputStream(input);",
    "info" : "ReturnStatement[211748-211782]:ReturnStatement[211748-211782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211813-211872]:Block[211813-211872]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[211823-211843]:ExpressionStatement[211823-211843]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[211852-211864]:ReturnStatement[211852-211864]"
  }, {
    "left" : "return input;",
    "right" : "return input;",
    "info" : "ReturnStatement[211883-211896]:ReturnStatement[211883-211896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[212029-217849]:Block[212029-217849]"
  }, {
    "left" : "if (filename == null)",
    "right" : "if (filename == null)",
    "info" : "IfStatement[212035-212069]:IfStatement[212035-212069]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[212057-212069]:ReturnStatement[212057-212069]"
  }, {
    "left" : "if (filename.length() == 0)",
    "right" : "if (filename.length() == 0)",
    "info" : "IfStatement[212075-212263]:IfStatement[212075-212263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[212103-212263]:Block[212103-212263]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[212245-212257]:ReturnStatement[212245-212257]"
  }, {
    "left" : "if (filename.contains(\":\"))",
    "right" : "if (filename.contains(\":\"))",
    "info" : "IfStatement[212421-213778]:IfStatement[212421-213778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[212449-213778]:Block[212449-213778]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[212486-213772]:TryStatement[212486-213772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[212490-213215]:Block[212490-213215]"
  }, {
    "left" : "URL url = new URL(filename);",
    "right" : "URL url = new URL(filename);",
    "info" : "VariableDeclarationStatement[212500-212528]:VariableDeclarationStatement[212500-212528]"
  }, {
    "left" : "URLConnection conn = url.openConnection();",
    "right" : "URLConnection conn = url.openConnection();",
    "info" : "VariableDeclarationStatement[212537-212579]:VariableDeclarationStatement[212537-212579]"
  }, {
    "left" : "HttpURLConnection httpConn = (HttpURLConnection) conn;",
    "right" : "HttpURLConnection httpConn = (HttpURLConnection) conn;",
    "info" : "VariableDeclarationStatement[212588-212642]:VariableDeclarationStatement[212588-212642]"
  }, {
    "left" : "httpConn.setInstanceFollowRedirects(true);",
    "right" : "httpConn.setInstanceFollowRedirects(true);",
    "info" : "ExpressionStatement[212708-212750]:ExpressionStatement[212708-212750]"
  }, {
    "left" : "int response = httpConn.getResponseCode();",
    "right" : "int response = httpConn.getResponseCode();",
    "info" : "VariableDeclarationStatement[212759-212801]:VariableDeclarationStatement[212759-212801]"
  }, {
    "left" : "if (response >= 300 && response < 400)",
    "right" : "if (response >= 300 && response < 400)",
    "info" : "IfStatement[213004-213168]:IfStatement[213004-213168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[213043-213168]:Block[213043-213168]"
  }, {
    "left" : "String newLocation = httpConn.getHeaderField(\"Location\");",
    "right" : "String newLocation = httpConn.getHeaderField(\"Location\");",
    "info" : "VariableDeclarationStatement[213055-213112]:VariableDeclarationStatement[213055-213112]"
  }, {
    "left" : "return createInputRaw(newLocation);",
    "right" : "return createInputRaw(newLocation);",
    "info" : "ReturnStatement[213123-213158]:ReturnStatement[213123-213158]"
  }, {
    "left" : "return conn.getInputStream();",
    "right" : "return conn.getInputStream();",
    "info" : "ReturnStatement[213177-213206]:ReturnStatement[213177-213206]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[213251-213295]:Block[213251-213295]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[213331-213477]:Block[213331-213477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[213500-213772]:Block[213500-213772]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[213571-213591]:ExpressionStatement[213571-213591]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[213672-213684]:ReturnStatement[213672-213684]"
  }, {
    "left" : "InputStream stream = null;",
    "right" : "InputStream stream = null;",
    "info" : "VariableDeclarationStatement[213784-213810]:VariableDeclarationStatement[213784-213810]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[214019-215670]:TryStatement[214019-215670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214023-215605]:Block[214023-215605]"
  }, {
    "left" : "File file = new File(dataPath(filename));",
    "right" : "File file = new File(dataPath(filename));",
    "info" : "VariableDeclarationStatement[214173-214214]:VariableDeclarationStatement[214173-214214]"
  }, {
    "left" : "if (!file.exists())",
    "right" : "if (!file.exists())",
    "info" : "IfStatement[214221-214341]:IfStatement[214221-214341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214241-214341]:Block[214241-214341]"
  }, {
    "left" : "file = sketchFile(filename);",
    "right" : "file = sketchFile(filename);",
    "info" : "ExpressionStatement[214305-214333]:ExpressionStatement[214305-214333]"
  }, {
    "left" : "if (file.isDirectory())",
    "right" : "if (file.isDirectory())",
    "info" : "IfStatement[214349-214403]:IfStatement[214349-214403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214373-214403]:Block[214373-214403]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[214383-214395]:ReturnStatement[214383-214395]"
  }, {
    "left" : "if (file.exists())",
    "right" : "if (file.exists())",
    "info" : "IfStatement[214410-215338]:IfStatement[214410-215338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214429-215338]:Block[214429-215338]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[214439-215330]:TryStatement[214439-215330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214443-215304]:Block[214443-215304]"
  }, {
    "left" : "String filePath = file.getCanonicalPath();",
    "right" : "String filePath = file.getCanonicalPath();",
    "info" : "VariableDeclarationStatement[214498-214540]:VariableDeclarationStatement[214498-214540]"
  }, {
    "left" : "String filenameActual = new File(filePath).getName();",
    "right" : "String filenameActual = new File(filePath).getName();",
    "info" : "VariableDeclarationStatement[214551-214604]:VariableDeclarationStatement[214551-214604]"
  }, {
    "left" : "String filenameShort = new File(filename).getName();",
    "right" : "String filenameShort = new File(filename).getName();",
    "info" : "VariableDeclarationStatement[214684-214736]:VariableDeclarationStatement[214684-214736]"
  }, {
    "left" : "if (!filenameActual.equals(filenameShort))",
    "right" : "if (!filenameActual.equals(filenameShort))",
    "info" : "IfStatement[214972-215294]:IfStatement[214972-215294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215015-215294]:Block[215015-215294]"
  }, {
    "left" : "throw new RuntimeException(\"This file is named \" +\n                                       filenameActual + \" not \" +\n                                       filename + \". Rename the file \" +\n                                       \"or change your code.\");",
    "right" : "throw new RuntimeException(\"This file is named \" +\n                                       filenameActual + \" not \" +\n                                       filename + \". Rename the file \" +\n                                       \"or change your code.\");",
    "info" : "ThrowStatement[215029-215282]:ThrowStatement[215029-215282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215327-215330]:Block[215327-215330]"
  }, {
    "left" : "stream = new FileInputStream(file);",
    "right" : "stream = new FileInputStream(file);",
    "info" : "ExpressionStatement[215400-215435]:ExpressionStatement[215400-215435]"
  }, {
    "left" : "if (stream != null)",
    "right" : "if (stream != null)",
    "info" : "IfStatement[215442-215476]:IfStatement[215442-215476]"
  }, {
    "left" : "return stream;",
    "right" : "return stream;",
    "info" : "ReturnStatement[215462-215476]:ReturnStatement[215462-215476]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215630-215637]:Block[215630-215637]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215667-215670]:Block[215667-215670]"
  }, {
    "left" : "ClassLoader cl = getClass().getClassLoader();",
    "right" : "ClassLoader cl = getClass().getClassLoader();",
    "info" : "VariableDeclarationStatement[215934-215979]:VariableDeclarationStatement[215934-215979]"
  }, {
    "left" : "stream = cl.getResourceAsStream(\"data/\" + filename);",
    "right" : "stream = cl.getResourceAsStream(\"data/\" + filename);",
    "info" : "ExpressionStatement[216108-216160]:ExpressionStatement[216108-216160]"
  }, {
    "left" : "if (stream != null)",
    "right" : "if (stream != null)",
    "info" : "IfStatement[216165-216605]:IfStatement[216165-216605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[216185-216605]:Block[216185-216605]"
  }, {
    "left" : "String cn = stream.getClass().getName();",
    "right" : "String cn = stream.getClass().getName();",
    "info" : "VariableDeclarationStatement[216193-216233]:VariableDeclarationStatement[216193-216233]"
  }, {
    "left" : "if (!cn.equals(\"sun.plugin.cache.EmptyInputStream\"))",
    "right" : "if (!cn.equals(\"sun.plugin.cache.EmptyInputStream\"))",
    "info" : "IfStatement[216514-216599]:IfStatement[216514-216599]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[216567-216599]:Block[216567-216599]"
  }, {
    "left" : "return stream;",
    "right" : "return stream;",
    "info" : "ReturnStatement[216577-216591]:ReturnStatement[216577-216591]"
  }, {
    "left" : "stream = cl.getResourceAsStream(filename);",
    "right" : "stream = cl.getResourceAsStream(filename);",
    "info" : "ExpressionStatement[216807-216849]:ExpressionStatement[216807-216849]"
  }, {
    "left" : "if (stream != null)",
    "right" : "if (stream != null)",
    "info" : "IfStatement[216854-217020]:IfStatement[216854-217020]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[216874-217020]:Block[216874-217020]"
  }, {
    "left" : "String cn = stream.getClass().getName();",
    "right" : "String cn = stream.getClass().getName();",
    "info" : "VariableDeclarationStatement[216882-216922]:VariableDeclarationStatement[216882-216922]"
  }, {
    "left" : "if (!cn.equals(\"sun.plugin.cache.EmptyInputStream\"))",
    "right" : "if (!cn.equals(\"sun.plugin.cache.EmptyInputStream\"))",
    "info" : "IfStatement[216929-217014]:IfStatement[216929-217014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[216982-217014]:Block[216982-217014]"
  }, {
    "left" : "return stream;",
    "right" : "return stream;",
    "info" : "ReturnStatement[216992-217006]:ReturnStatement[216992-217006]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[217026-217827]:TryStatement[217026-217827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217030-217740]:Block[217030-217740]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[217150-217715]:TryStatement[217150-217715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217154-217682]:Block[217154-217682]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[217211-217358]:TryStatement[217211-217358]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217215-217331]:Block[217215-217331]"
  }, {
    "left" : "stream = new FileInputStream(dataPath(filename));",
    "right" : "stream = new FileInputStream(dataPath(filename));",
    "info" : "ExpressionStatement[217227-217276]:ExpressionStatement[217227-217276]"
  }, {
    "left" : "if (stream != null)",
    "right" : "if (stream != null)",
    "info" : "IfStatement[217287-217321]:IfStatement[217287-217321]"
  }, {
    "left" : "return stream;",
    "right" : "return stream;",
    "info" : "ReturnStatement[217307-217321]:ReturnStatement[217307-217321]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217355-217358]:Block[217355-217358]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[217368-217514]:TryStatement[217368-217514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217372-217490]:Block[217372-217490]"
  }, {
    "left" : "stream = new FileInputStream(sketchPath(filename));",
    "right" : "stream = new FileInputStream(sketchPath(filename));",
    "info" : "ExpressionStatement[217384-217435]:ExpressionStatement[217384-217435]"
  }, {
    "left" : "if (stream != null)",
    "right" : "if (stream != null)",
    "info" : "IfStatement[217446-217480]:IfStatement[217446-217480]"
  }, {
    "left" : "return stream;",
    "right" : "return stream;",
    "info" : "ReturnStatement[217466-217480]:ReturnStatement[217466-217480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217511-217514]:Block[217511-217514]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[217536-217673]:TryStatement[217536-217673]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217540-217646]:Block[217540-217646]"
  }, {
    "left" : "stream = new FileInputStream(filename);",
    "right" : "stream = new FileInputStream(filename);",
    "info" : "ExpressionStatement[217552-217591]:ExpressionStatement[217552-217591]"
  }, {
    "left" : "if (stream != null)",
    "right" : "if (stream != null)",
    "info" : "IfStatement[217602-217636]:IfStatement[217602-217636]"
  }, {
    "left" : "return stream;",
    "right" : "return stream;",
    "info" : "ReturnStatement[217622-217636]:ReturnStatement[217622-217636]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217670-217673]:Block[217670-217673]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217712-217715]:Block[217712-217715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217761-217827]:Block[217761-217827]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[217801-217821]:ExpressionStatement[217801-217821]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[217833-217845]:ReturnStatement[217833-217845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217929-218387]:Block[217929-218387]"
  }, {
    "left" : "if (file == null)",
    "right" : "if (file == null)",
    "info" : "IfStatement[217935-218043]:IfStatement[217935-218043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217953-218043]:Block[217953-218043]"
  }, {
    "left" : "throw new IllegalArgumentException(\"File passed to createInput() was null\");",
    "right" : "throw new IllegalArgumentException(\"File passed to createInput() was null\");",
    "info" : "ThrowStatement[217961-218037]:ThrowStatement[217961-218037]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[218048-218383]:TryStatement[218048-218383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[218052-218242]:Block[218052-218242]"
  }, {
    "left" : "InputStream input = new FileInputStream(file);",
    "right" : "InputStream input = new FileInputStream(file);",
    "info" : "VariableDeclarationStatement[218060-218106]:VariableDeclarationStatement[218060-218106]"
  }, {
    "left" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "right" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "info" : "IfStatement[218113-218215]:IfStatement[218113-218215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[218163-218215]:Block[218163-218215]"
  }, {
    "left" : "return new GZIPInputStream(input);",
    "right" : "return new GZIPInputStream(input);",
    "info" : "ReturnStatement[218173-218207]:ReturnStatement[218173-218207]"
  }, {
    "left" : "return input;",
    "right" : "return input;",
    "info" : "ReturnStatement[218222-218235]:ReturnStatement[218222-218235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[218265-218383]:Block[218265-218383]"
  }, {
    "left" : "System.err.println(\"Could not createInput() for \" + file);",
    "right" : "System.err.println(\"Could not createInput() for \" + file);",
    "info" : "ExpressionStatement[218273-218331]:ExpressionStatement[218273-218331]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[218338-218358]:ExpressionStatement[218338-218358]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[218365-218377]:ReturnStatement[218365-218377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219267-219806]:Block[219267-219806]"
  }, {
    "left" : "InputStream is = createInput(filename);",
    "right" : "InputStream is = createInput(filename);",
    "info" : "VariableDeclarationStatement[219273-219312]:VariableDeclarationStatement[219273-219312]"
  }, {
    "left" : "if (is != null)",
    "right" : "if (is != null)",
    "info" : "IfStatement[219317-219524]:IfStatement[219317-219524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219333-219524]:Block[219333-219524]"
  }, {
    "left" : "byte[] outgoing = loadBytes(is);",
    "right" : "byte[] outgoing = loadBytes(is);",
    "info" : "VariableDeclarationStatement[219341-219373]:VariableDeclarationStatement[219341-219373]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[219380-219495]:TryStatement[219380-219495]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219384-219413]:Block[219384-219413]"
  }, {
    "left" : "is.close();",
    "right" : "is.close();",
    "info" : "ExpressionStatement[219394-219405]:ExpressionStatement[219394-219405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219436-219495]:Block[219436-219495]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[219446-219466]:ExpressionStatement[219446-219466]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[219502-219518]:ReturnStatement[219502-219518]"
  }, {
    "left" : "System.err.println(\"The file \\\"\" + filename + \"\\\" \" +\n                       \"is missing or inaccessible, make sure \" +\n                       \"the URL is valid or that the file has been \" +\n                       \"added to your sketch and is readable.\");",
    "right" : "System.err.println(\"The file \\\"\" + filename + \"\\\" \" +\n                       \"is missing or inaccessible, make sure \" +\n                       \"the URL is valid or that the file has been \" +\n                       \"added to your sketch and is readable.\");",
    "info" : "ExpressionStatement[219530-219785]:ExpressionStatement[219530-219785]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[219790-219802]:ReturnStatement[219790-219802]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219887-220318]:Block[219887-220318]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[219893-220297]:TryStatement[219893-220297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219897-220169]:Block[219897-220169]"
  }, {
    "left" : "BufferedInputStream bis = new BufferedInputStream(input);",
    "right" : "BufferedInputStream bis = new BufferedInputStream(input);",
    "info" : "VariableDeclarationStatement[219905-219962]:VariableDeclarationStatement[219905-219962]"
  }, {
    "left" : "ByteArrayOutputStream out = new ByteArrayOutputStream();",
    "right" : "ByteArrayOutputStream out = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[219969-220025]:VariableDeclarationStatement[219969-220025]"
  }, {
    "left" : "int c = bis.read();",
    "right" : "int c = bis.read();",
    "info" : "VariableDeclarationStatement[220033-220052]:VariableDeclarationStatement[220033-220052]"
  }, {
    "left" : "while (c != -1)",
    "right" : "while (c != -1)",
    "info" : "WhileStatement[220059-220130]:WhileStatement[220059-220130]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220075-220130]:Block[220075-220130]"
  }, {
    "left" : "out.write(c);",
    "right" : "out.write(c);",
    "info" : "ExpressionStatement[220085-220098]:ExpressionStatement[220085-220098]"
  }, {
    "left" : "c = bis.read();",
    "right" : "c = bis.read();",
    "info" : "ExpressionStatement[220107-220122]:ExpressionStatement[220107-220122]"
  }, {
    "left" : "return out.toByteArray();",
    "right" : "return out.toByteArray();",
    "info" : "ReturnStatement[220137-220162]:ReturnStatement[220137-220162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220192-220297]:Block[220192-220297]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[220200-220220]:ExpressionStatement[220200-220220]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[220302-220314]:ReturnStatement[220302-220314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220391-220583]:Block[220391-220583]"
  }, {
    "left" : "InputStream is = createInput(file);",
    "right" : "InputStream is = createInput(file);",
    "info" : "VariableDeclarationStatement[220397-220432]:VariableDeclarationStatement[220397-220432]"
  }, {
    "left" : "byte[] byteArr = loadBytes(is);",
    "right" : "byte[] byteArr = loadBytes(is);",
    "info" : "VariableDeclarationStatement[220437-220468]:VariableDeclarationStatement[220437-220468]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[220473-220559]:TryStatement[220473-220559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220477-220502]:Block[220477-220502]"
  }, {
    "left" : "is.close();",
    "right" : "is.close();",
    "info" : "ExpressionStatement[220485-220496]:ExpressionStatement[220485-220496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220525-220559]:Block[220525-220559]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[220533-220553]:ExpressionStatement[220533-220553]"
  }, {
    "left" : "return byteArr;",
    "right" : "return byteArr;",
    "info" : "ReturnStatement[220564-220579]:ReturnStatement[220564-220579]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220660-220917]:Block[220660-220917]"
  }, {
    "left" : "InputStream is = createInput(file);",
    "right" : "InputStream is = createInput(file);",
    "info" : "VariableDeclarationStatement[220666-220701]:VariableDeclarationStatement[220666-220701]"
  }, {
    "left" : "if (is != null)",
    "right" : "if (is != null)",
    "info" : "IfStatement[220706-220896]:IfStatement[220706-220896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220722-220896]:Block[220722-220896]"
  }, {
    "left" : "String[] outgoing = loadStrings(is);",
    "right" : "String[] outgoing = loadStrings(is);",
    "info" : "VariableDeclarationStatement[220730-220766]:VariableDeclarationStatement[220730-220766]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[220773-220867]:TryStatement[220773-220867]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220777-220806]:Block[220777-220806]"
  }, {
    "left" : "is.close();",
    "right" : "is.close();",
    "info" : "ExpressionStatement[220787-220798]:ExpressionStatement[220787-220798]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220829-220867]:Block[220829-220867]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[220839-220859]:ExpressionStatement[220839-220859]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[220874-220890]:ReturnStatement[220874-220890]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[220901-220913]:ReturnStatement[220901-220913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223022-223540]:Block[223022-223540]"
  }, {
    "left" : "InputStream is = createInput(filename);",
    "right" : "InputStream is = createInput(filename);",
    "info" : "VariableDeclarationStatement[223028-223067]:VariableDeclarationStatement[223028-223067]"
  }, {
    "left" : "if (is != null)",
    "right" : "if (is != null)",
    "info" : "IfStatement[223072-223258]:IfStatement[223072-223258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223088-223258]:Block[223088-223258]"
  }, {
    "left" : "String[] strArr = loadStrings(is);",
    "right" : "String[] strArr = loadStrings(is);",
    "info" : "VariableDeclarationStatement[223096-223130]:VariableDeclarationStatement[223096-223130]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[223137-223231]:TryStatement[223137-223231]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223141-223170]:Block[223141-223170]"
  }, {
    "left" : "is.close();",
    "right" : "is.close();",
    "info" : "ExpressionStatement[223151-223162]:ExpressionStatement[223151-223162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223193-223231]:Block[223193-223231]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[223203-223223]:ExpressionStatement[223203-223223]"
  }, {
    "left" : "return strArr;",
    "right" : "return strArr;",
    "info" : "ReturnStatement[223238-223252]:ReturnStatement[223238-223252]"
  }, {
    "left" : "System.err.println(\"The file \\\"\" + filename + \"\\\" \" +\n                       \"is missing or inaccessible, make sure \" +\n                       \"the URL is valid or that the file has been \" +\n                       \"added to your sketch and is readable.\");",
    "right" : "System.err.println(\"The file \\\"\" + filename + \"\\\" \" +\n                       \"is missing or inaccessible, make sure \" +\n                       \"the URL is valid or that the file has been \" +\n                       \"added to your sketch and is readable.\");",
    "info" : "ExpressionStatement[223264-223519]:ExpressionStatement[223264-223519]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[223524-223536]:ReturnStatement[223524-223536]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223625-223851]:Block[223625-223851]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[223631-223830]:TryStatement[223631-223830]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223635-223773]:Block[223635-223773]"
  }, {
    "left" : "BufferedReader reader =\n        new BufferedReader(new InputStreamReader(input, \"UTF-8\"));",
    "right" : "BufferedReader reader =\n        new BufferedReader(new InputStreamReader(input, \"UTF-8\"));",
    "info" : "VariableDeclarationStatement[223643-223733]:VariableDeclarationStatement[223643-223733]"
  }, {
    "left" : "return loadStrings(reader);",
    "right" : "return loadStrings(reader);",
    "info" : "ReturnStatement[223740-223767]:ReturnStatement[223740-223767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223796-223830]:Block[223796-223830]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[223804-223824]:ExpressionStatement[223804-223824]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[223835-223847]:ReturnStatement[223835-223847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223914-224725]:Block[223914-224725]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[223920-224704]:TryStatement[223920-224704]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223924-224581]:Block[223924-224581]"
  }, {
    "left" : "String lines[] = new String[100];",
    "right" : "String lines[] = new String[100];",
    "info" : "VariableDeclarationStatement[223932-223965]:VariableDeclarationStatement[223932-223965]"
  }, {
    "left" : "int lineCount = 0;",
    "right" : "int lineCount = 0;",
    "info" : "VariableDeclarationStatement[223972-223990]:VariableDeclarationStatement[223972-223990]"
  }, {
    "left" : "String line = null;",
    "right" : "String line = null;",
    "info" : "VariableDeclarationStatement[223997-224016]:VariableDeclarationStatement[223997-224016]"
  }, {
    "left" : "while ((line = reader.readLine()) != null)",
    "right" : "while ((line = reader.readLine()) != null)",
    "info" : "WhileStatement[224023-224297]:WhileStatement[224023-224297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[224066-224297]:Block[224066-224297]"
  }, {
    "left" : "if (lineCount == lines.length)",
    "right" : "if (lineCount == lines.length)",
    "info" : "IfStatement[224076-224254]:IfStatement[224076-224254]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[224107-224254]:Block[224107-224254]"
  }, {
    "left" : "String temp[] = new String[lineCount << 1];",
    "right" : "String temp[] = new String[lineCount << 1];",
    "info" : "VariableDeclarationStatement[224119-224162]:VariableDeclarationStatement[224119-224162]"
  }, {
    "left" : "System.arraycopy(lines, 0, temp, 0, lineCount);",
    "right" : "System.arraycopy(lines, 0, temp, 0, lineCount);",
    "info" : "ExpressionStatement[224173-224220]:ExpressionStatement[224173-224220]"
  }, {
    "left" : "lines = temp;",
    "right" : "lines = temp;",
    "info" : "ExpressionStatement[224231-224244]:ExpressionStatement[224231-224244]"
  }, {
    "left" : "lines[lineCount++] = line;",
    "right" : "lines[lineCount++] = line;",
    "info" : "ExpressionStatement[224263-224289]:ExpressionStatement[224263-224289]"
  }, {
    "left" : "reader.close();",
    "right" : "reader.close();",
    "info" : "ExpressionStatement[224304-224319]:ExpressionStatement[224304-224319]"
  }, {
    "left" : "if (lineCount == lines.length)",
    "right" : "if (lineCount == lines.length)",
    "info" : "IfStatement[224327-224389]:IfStatement[224327-224389]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[224358-224389]:Block[224358-224389]"
  }, {
    "left" : "return lines;",
    "right" : "return lines;",
    "info" : "ReturnStatement[224368-224381]:ReturnStatement[224368-224381]"
  }, {
    "left" : "String output[] = new String[lineCount];",
    "right" : "String output[] = new String[lineCount];",
    "info" : "VariableDeclarationStatement[224457-224497]:VariableDeclarationStatement[224457-224497]"
  }, {
    "left" : "System.arraycopy(lines, 0, output, 0, lineCount);",
    "right" : "System.arraycopy(lines, 0, output, 0, lineCount);",
    "info" : "ExpressionStatement[224504-224553]:ExpressionStatement[224504-224553]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[224560-224574]:ReturnStatement[224560-224574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[224604-224704]:Block[224604-224704]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[224612-224632]:ExpressionStatement[224612-224632]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[224709-224721]:ReturnStatement[224709-224721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[225972-226022]:Block[225972-226022]"
  }, {
    "left" : "return createOutput(saveFile(filename));",
    "right" : "return createOutput(saveFile(filename));",
    "info" : "ReturnStatement[225978-226018]:ReturnStatement[225978-226018]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[226104-226437]:Block[226104-226437]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[226110-226416]:TryStatement[226110-226416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[226114-226359]:Block[226114-226359]"
  }, {
    "left" : "createPath(file);",
    "right" : "createPath(file);",
    "info" : "ExpressionStatement[226122-226139]:ExpressionStatement[226122-226139]"
  }, {
    "left" : "FileOutputStream fos = new FileOutputStream(file);",
    "right" : "FileOutputStream fos = new FileOutputStream(file);",
    "info" : "VariableDeclarationStatement[226176-226226]:VariableDeclarationStatement[226176-226226]"
  }, {
    "left" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "right" : "if (file.getName().toLowerCase().endsWith(\".gz\"))",
    "info" : "IfStatement[226233-226334]:IfStatement[226233-226334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[226283-226334]:Block[226283-226334]"
  }, {
    "left" : "return new GZIPOutputStream(fos);",
    "right" : "return new GZIPOutputStream(fos);",
    "info" : "ReturnStatement[226293-226326]:ReturnStatement[226293-226326]"
  }, {
    "left" : "return fos;",
    "right" : "return fos;",
    "info" : "ReturnStatement[226341-226352]:ReturnStatement[226341-226352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[226382-226416]:Block[226382-226416]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[226390-226410]:ExpressionStatement[226390-226410]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[226421-226433]:ReturnStatement[226421-226433]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[227240-227294]:Block[227240-227294]"
  }, {
    "left" : "return saveStream(saveFile(target), source);",
    "right" : "return saveStream(saveFile(target), source);",
    "info" : "ReturnStatement[227246-227290]:ReturnStatement[227246-227290]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[227603-227663]:Block[227603-227663]"
  }, {
    "left" : "return saveStream(target, createInputRaw(source));",
    "right" : "return saveStream(target, createInputRaw(source));",
    "info" : "ReturnStatement[227609-227659]:ReturnStatement[227609-227659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[227755-227809]:Block[227755-227809]"
  }, {
    "left" : "return saveStream(saveFile(target), source);",
    "right" : "return saveStream(saveFile(target), source);",
    "info" : "ReturnStatement[227761-227805]:ReturnStatement[227761-227805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[227906-228876]:Block[227906-228876]"
  }, {
    "left" : "File tempFile = null;",
    "right" : "File tempFile = null;",
    "info" : "VariableDeclarationStatement[227912-227933]:VariableDeclarationStatement[227912-227933]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[227938-228872]:TryStatement[227938-228872]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[227942-228730]:Block[227942-228730]"
  }, {
    "left" : "File parentDir = target.getParentFile();",
    "right" : "File parentDir = target.getParentFile();",
    "info" : "VariableDeclarationStatement[227950-227990]:VariableDeclarationStatement[227950-227990]"
  }, {
    "left" : "createPath(target);",
    "right" : "createPath(target);",
    "info" : "ExpressionStatement[228062-228081]:ExpressionStatement[228062-228081]"
  }, {
    "left" : "tempFile = File.createTempFile(target.getName(), null, parentDir);",
    "right" : "tempFile = File.createTempFile(target.getName(), null, parentDir);",
    "info" : "ExpressionStatement[228088-228154]:ExpressionStatement[228088-228154]"
  }, {
    "left" : "FileOutputStream targetStream = new FileOutputStream(tempFile);",
    "right" : "FileOutputStream targetStream = new FileOutputStream(tempFile);",
    "info" : "VariableDeclarationStatement[228161-228224]:VariableDeclarationStatement[228161-228224]"
  }, {
    "left" : "saveStream(targetStream, source);",
    "right" : "saveStream(targetStream, source);",
    "info" : "ExpressionStatement[228232-228265]:ExpressionStatement[228232-228265]"
  }, {
    "left" : "targetStream.close();",
    "right" : "targetStream.close();",
    "info" : "ExpressionStatement[228272-228293]:ExpressionStatement[228272-228293]"
  }, {
    "left" : "targetStream = null;",
    "right" : "targetStream = null;",
    "info" : "ExpressionStatement[228300-228320]:ExpressionStatement[228300-228320]"
  }, {
    "left" : "if (target.exists())",
    "right" : "if (target.exists())",
    "info" : "IfStatement[228328-228514]:IfStatement[228328-228514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[228349-228514]:Block[228349-228514]"
  }, {
    "left" : "if (!target.delete())",
    "right" : "if (!target.delete())",
    "info" : "IfStatement[228359-228506]:IfStatement[228359-228506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[228381-228506]:Block[228381-228506]"
  }, {
    "left" : "System.err.println(\"Could not replace \" +\n                             target.getAbsolutePath() + \".\");",
    "right" : "System.err.println(\"Could not replace \" +\n                             target.getAbsolutePath() + \".\");",
    "info" : "ExpressionStatement[228393-228496]:ExpressionStatement[228393-228496]"
  }, {
    "left" : "if (!tempFile.renameTo(target))",
    "right" : "if (!tempFile.renameTo(target))",
    "info" : "IfStatement[228521-228704]:IfStatement[228521-228704]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[228553-228704]:Block[228553-228704]"
  }, {
    "left" : "System.err.println(\"Could not rename temporary file \" +\n                           tempFile.getAbsolutePath());",
    "right" : "System.err.println(\"Could not rename temporary file \" +\n                           tempFile.getAbsolutePath());",
    "info" : "ExpressionStatement[228563-228674]:ExpressionStatement[228563-228674]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[228683-228696]:ReturnStatement[228683-228696]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[228711-228723]:ReturnStatement[228711-228723]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[228753-228872]:Block[228753-228872]"
  }, {
    "left" : "if (tempFile != null)",
    "right" : "if (tempFile != null)",
    "info" : "IfStatement[228761-228819]:IfStatement[228761-228819]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[228783-228819]:Block[228783-228819]"
  }, {
    "left" : "tempFile.delete();",
    "right" : "tempFile.delete();",
    "info" : "ExpressionStatement[228793-228811]:ExpressionStatement[228793-228811]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[228826-228846]:ExpressionStatement[228826-228846]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[228853-228866]:ReturnStatement[228853-228866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229029-229339]:Block[229029-229339]"
  }, {
    "left" : "BufferedInputStream bis = new BufferedInputStream(source, 16384);",
    "right" : "BufferedInputStream bis = new BufferedInputStream(source, 16384);",
    "info" : "VariableDeclarationStatement[229035-229100]:VariableDeclarationStatement[229035-229100]"
  }, {
    "left" : "BufferedOutputStream bos = new BufferedOutputStream(target);",
    "right" : "BufferedOutputStream bos = new BufferedOutputStream(target);",
    "info" : "VariableDeclarationStatement[229105-229165]:VariableDeclarationStatement[229105-229165]"
  }, {
    "left" : "byte[] buffer = new byte[8192];",
    "right" : "byte[] buffer = new byte[8192];",
    "info" : "VariableDeclarationStatement[229171-229202]:VariableDeclarationStatement[229171-229202]"
  }, {
    "left" : "int bytesRead;",
    "right" : "int bytesRead;",
    "info" : "VariableDeclarationStatement[229207-229221]:VariableDeclarationStatement[229207-229221]"
  }, {
    "left" : "while ((bytesRead = bis.read(buffer)) != -1)",
    "right" : "while ((bytesRead = bis.read(buffer)) != -1)",
    "info" : "WhileStatement[229226-229317]:WhileStatement[229226-229317]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229271-229317]:Block[229271-229317]"
  }, {
    "left" : "bos.write(buffer, 0, bytesRead);",
    "right" : "bos.write(buffer, 0, bytesRead);",
    "info" : "ExpressionStatement[229279-229311]:ExpressionStatement[229279-229311]"
  }, {
    "left" : "bos.flush();",
    "right" : "bos.flush();",
    "info" : "ExpressionStatement[229323-229335]:ExpressionStatement[229323-229335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[230369-230415]:Block[230369-230415]"
  }, {
    "left" : "saveBytes(saveFile(filename), data);",
    "right" : "saveBytes(saveFile(filename), data);",
    "info" : "ExpressionStatement[230375-230411]:ExpressionStatement[230375-230411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[230568-231360]:Block[230568-231360]"
  }, {
    "left" : "File tempFile = null;",
    "right" : "File tempFile = null;",
    "info" : "VariableDeclarationStatement[230574-230595]:VariableDeclarationStatement[230574-230595]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[230600-231356]:TryStatement[230600-231356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[230604-231175]:Block[230604-231175]"
  }, {
    "left" : "File parentDir = file.getParentFile();",
    "right" : "File parentDir = file.getParentFile();",
    "info" : "VariableDeclarationStatement[230612-230650]:VariableDeclarationStatement[230612-230650]"
  }, {
    "left" : "tempFile = File.createTempFile(file.getName(), null, parentDir);",
    "right" : "tempFile = File.createTempFile(file.getName(), null, parentDir);",
    "info" : "ExpressionStatement[230657-230721]:ExpressionStatement[230657-230721]"
  }, {
    "left" : "OutputStream output = createOutput(tempFile);",
    "right" : "OutputStream output = createOutput(tempFile);",
    "info" : "VariableDeclarationStatement[230729-230774]:VariableDeclarationStatement[230729-230774]"
  }, {
    "left" : "saveBytes(output, data);",
    "right" : "saveBytes(output, data);",
    "info" : "ExpressionStatement[230781-230805]:ExpressionStatement[230781-230805]"
  }, {
    "left" : "output.close();",
    "right" : "output.close();",
    "info" : "ExpressionStatement[230812-230827]:ExpressionStatement[230812-230827]"
  }, {
    "left" : "output = null;",
    "right" : "output = null;",
    "info" : "ExpressionStatement[230834-230848]:ExpressionStatement[230834-230848]"
  }, {
    "left" : "if (file.exists())",
    "right" : "if (file.exists())",
    "info" : "IfStatement[230856-231001]:IfStatement[230856-231001]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[230875-231001]:Block[230875-231001]"
  }, {
    "left" : "if (!file.delete())",
    "right" : "if (!file.delete())",
    "info" : "IfStatement[230885-230993]:IfStatement[230885-230993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[230905-230993]:Block[230905-230993]"
  }, {
    "left" : "System.err.println(\"Could not replace \" + file.getAbsolutePath());",
    "right" : "System.err.println(\"Could not replace \" + file.getAbsolutePath());",
    "info" : "ExpressionStatement[230917-230983]:ExpressionStatement[230917-230983]"
  }, {
    "left" : "if (!tempFile.renameTo(file))",
    "right" : "if (!tempFile.renameTo(file))",
    "info" : "IfStatement[231009-231168]:IfStatement[231009-231168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[231039-231168]:Block[231039-231168]"
  }, {
    "left" : "System.err.println(\"Could not rename temporary file \" +\n                           tempFile.getAbsolutePath());",
    "right" : "System.err.println(\"Could not rename temporary file \" +\n                           tempFile.getAbsolutePath());",
    "info" : "ExpressionStatement[231049-231160]:ExpressionStatement[231049-231160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[231198-231356]:Block[231198-231356]"
  }, {
    "left" : "System.err.println(\"error saving bytes to \" + file);",
    "right" : "System.err.println(\"error saving bytes to \" + file);",
    "info" : "ExpressionStatement[231206-231258]:ExpressionStatement[231206-231258]"
  }, {
    "left" : "if (tempFile != null)",
    "right" : "if (tempFile != null)",
    "info" : "IfStatement[231265-231323]:IfStatement[231265-231323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[231287-231323]:Block[231287-231323]"
  }, {
    "left" : "tempFile.delete();",
    "right" : "tempFile.delete();",
    "info" : "ExpressionStatement[231297-231315]:ExpressionStatement[231297-231315]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[231330-231350]:ExpressionStatement[231330-231350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[231504-231631]:Block[231504-231631]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[231510-231627]:TryStatement[231510-231627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[231514-231570]:Block[231514-231570]"
  }, {
    "left" : "output.write(data);",
    "right" : "output.write(data);",
    "info" : "ExpressionStatement[231522-231541]:ExpressionStatement[231522-231541]"
  }, {
    "left" : "output.flush();",
    "right" : "output.flush();",
    "info" : "ExpressionStatement[231548-231563]:ExpressionStatement[231548-231563]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[231593-231627]:Block[231593-231627]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[231601-231621]:ExpressionStatement[231601-231621]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[232862-232910]:Block[232862-232910]"
  }, {
    "left" : "saveStrings(saveFile(filename), data);",
    "right" : "saveStrings(saveFile(filename), data);",
    "info" : "ExpressionStatement[232868-232906]:ExpressionStatement[232868-232906]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[232999-233047]:Block[232999-233047]"
  }, {
    "left" : "saveStrings(createOutput(file), data);",
    "right" : "saveStrings(createOutput(file), data);",
    "info" : "ExpressionStatement[233005-233043]:ExpressionStatement[233005-233043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233146-233319]:Block[233146-233319]"
  }, {
    "left" : "PrintWriter writer = createWriter(output);",
    "right" : "PrintWriter writer = createWriter(output);",
    "info" : "VariableDeclarationStatement[233152-233194]:VariableDeclarationStatement[233152-233194]"
  }, {
    "left" : "for (int i = 0; i < data.length; i++)",
    "right" : "for (int i = 0; i < data.length; i++)",
    "info" : "ForStatement[233199-233275]:ForStatement[233199-233275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233237-233275]:Block[233237-233275]"
  }, {
    "left" : "writer.println(data[i]);",
    "right" : "writer.println(data[i]);",
    "info" : "ExpressionStatement[233245-233269]:ExpressionStatement[233245-233269]"
  }, {
    "left" : "writer.flush();",
    "right" : "writer.flush();",
    "info" : "ExpressionStatement[233280-233295]:ExpressionStatement[233280-233295]"
  }, {
    "left" : "writer.close();",
    "right" : "writer.close();",
    "info" : "ExpressionStatement[233300-233315]:ExpressionStatement[233300-233315]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233432-234492]:Block[233432-234492]"
  }, {
    "left" : "String folder = null;",
    "right" : "String folder = null;",
    "info" : "VariableDeclarationStatement[233680-233701]:VariableDeclarationStatement[233680-233701]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[233706-234469]:TryStatement[233706-234469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233710-234414]:Block[233710-234414]"
  }, {
    "left" : "folder = System.getProperty(\"user.dir\");",
    "right" : "folder = System.getProperty(\"user.dir\");",
    "info" : "ExpressionStatement[233718-233758]:ExpressionStatement[233718-233758]"
  }, {
    "left" : "if (platform == MACOSX)",
    "right" : "if (platform == MACOSX)",
    "info" : "IfStatement[233892-234408]:IfStatement[233892-234408]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233916-234408]:Block[233916-234408]"
  }, {
    "left" : "String jarPath =\n          PApplet.class.getProtectionDomain().getCodeSource().getLocation().getPath();",
    "right" : "String jarPath =\n          PApplet.class.getProtectionDomain().getCodeSource().getLocation().getPath();",
    "info" : "VariableDeclarationStatement[233926-234029]:VariableDeclarationStatement[233926-234029]"
  }, {
    "left" : "jarPath = urlDecode(jarPath);",
    "right" : "jarPath = urlDecode(jarPath);",
    "info" : "ExpressionStatement[234109-234138]:ExpressionStatement[234109-234138]"
  }, {
    "left" : "if (jarPath.contains(\"Contents/Java/\"))",
    "right" : "if (jarPath.contains(\"Contents/Java/\"))",
    "info" : "IfStatement[234147-234400]:IfStatement[234147-234400]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[234187-234400]:Block[234187-234400]"
  }, {
    "left" : "String appPath = jarPath.substring(0, jarPath.indexOf(\".app\") + 4);",
    "right" : "String appPath = jarPath.substring(0, jarPath.indexOf(\".app\") + 4);",
    "info" : "VariableDeclarationStatement[234199-234266]:VariableDeclarationStatement[234199-234266]"
  }, {
    "left" : "File containingFolder = new File(appPath).getParentFile();",
    "right" : "File containingFolder = new File(appPath).getParentFile();",
    "info" : "VariableDeclarationStatement[234277-234335]:VariableDeclarationStatement[234277-234335]"
  }, {
    "left" : "folder = containingFolder.getAbsolutePath();",
    "right" : "folder = containingFolder.getAbsolutePath();",
    "info" : "ExpressionStatement[234346-234390]:ExpressionStatement[234346-234390]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[234435-234469]:Block[234435-234469]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[234443-234463]:ExpressionStatement[234443-234463]"
  }, {
    "left" : "return folder;",
    "right" : "return folder;",
    "info" : "ReturnStatement[234474-234488]:ReturnStatement[234474-234488]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[234524-234625]:Block[234524-234625]"
  }, {
    "left" : "if (sketchPath == null)",
    "right" : "if (sketchPath == null)",
    "info" : "IfStatement[234530-234598]:IfStatement[234530-234598]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[234554-234598]:Block[234554-234598]"
  }, {
    "left" : "sketchPath = calcSketchPath();",
    "right" : "sketchPath = calcSketchPath();",
    "info" : "ExpressionStatement[234562-234592]:ExpressionStatement[234562-234592]"
  }, {
    "left" : "return sketchPath;",
    "right" : "return sketchPath;",
    "info" : "ReturnStatement[234603-234621]:ReturnStatement[234603-234621]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235330-235725]:Block[235330-235725]"
  }, {
    "left" : "if (sketchPath() == null)",
    "right" : "if (sketchPath() == null)",
    "info" : "IfStatement[235336-235389]:IfStatement[235336-235389]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235362-235389]:Block[235362-235389]"
  }, {
    "left" : "return where;",
    "right" : "return where;",
    "info" : "ReturnStatement[235370-235383]:ReturnStatement[235370-235383]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[235581-235670]:TryStatement[235581-235670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235585-235646]:Block[235585-235646]"
  }, {
    "left" : "if (new File(where).isAbsolute())",
    "right" : "if (new File(where).isAbsolute())",
    "info" : "IfStatement[235593-235640]:IfStatement[235593-235640]"
  }, {
    "left" : "return where;",
    "right" : "return where;",
    "info" : "ReturnStatement[235627-235640]:ReturnStatement[235627-235640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235667-235670]:Block[235667-235670]"
  }, {
    "left" : "return sketchPath() + File.separator + where;",
    "right" : "return sketchPath() + File.separator + where;",
    "info" : "ReturnStatement[235676-235721]:ReturnStatement[235676-235721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235767-235812]:Block[235767-235812]"
  }, {
    "left" : "return new File(sketchPath(where));",
    "right" : "return new File(sketchPath(where));",
    "info" : "ReturnStatement[235773-235808]:ReturnStatement[235773-235808]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[236604-236733]:Block[236604-236733]"
  }, {
    "left" : "if (where == null)",
    "right" : "if (where == null)",
    "info" : "IfStatement[236610-236641]:IfStatement[236610-236641]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[236629-236641]:ReturnStatement[236629-236641]"
  }, {
    "left" : "String filename = sketchPath(where);",
    "right" : "String filename = sketchPath(where);",
    "info" : "VariableDeclarationStatement[236646-236682]:VariableDeclarationStatement[236646-236682]"
  }, {
    "left" : "createPath(filename);",
    "right" : "createPath(filename);",
    "info" : "ExpressionStatement[236687-236708]:ExpressionStatement[236687-236708]"
  }, {
    "left" : "return filename;",
    "right" : "return filename;",
    "info" : "ReturnStatement[236713-236729]:ReturnStatement[236713-236729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[236842-236885]:Block[236842-236885]"
  }, {
    "left" : "return new File(savePath(where));",
    "right" : "return new File(savePath(where));",
    "info" : "ReturnStatement[236848-236881]:ReturnStatement[236848-236881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237021-237594]:Block[237021-237594]"
  }, {
    "left" : "if (desktopFolder == null)",
    "right" : "if (desktopFolder == null)",
    "info" : "IfStatement[237027-237548]:IfStatement[237027-237548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237054-237548]:Block[237054-237548]"
  }, {
    "left" : "desktopFolder = new File(System.getProperty(\"user.home\"), \"Desktop\");",
    "right" : "desktopFolder = new File(System.getProperty(\"user.home\"), \"Desktop\");",
    "info" : "ExpressionStatement[237145-237214]:ExpressionStatement[237145-237214]"
  }, {
    "left" : "if (!desktopFolder.exists())",
    "right" : "if (!desktopFolder.exists())",
    "info" : "IfStatement[237221-237542]:IfStatement[237221-237542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237250-237542]:Block[237250-237542]"
  }, {
    "left" : "if (platform == WINDOWS)",
    "right" : "if (platform == WINDOWS)",
    "info" : "IfStatement[237260-237534]:IfStatement[237260-237534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237285-237421]:Block[237285-237421]"
  }, {
    "left" : "FileSystemView filesys = FileSystemView.getFileSystemView();",
    "right" : "FileSystemView filesys = FileSystemView.getFileSystemView();",
    "info" : "VariableDeclarationStatement[237297-237357]:VariableDeclarationStatement[237297-237357]"
  }, {
    "left" : "desktopFolder = filesys.getHomeDirectory();",
    "right" : "desktopFolder = filesys.getHomeDirectory();",
    "info" : "ExpressionStatement[237368-237411]:ExpressionStatement[237368-237411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237427-237534]:Block[237427-237534]"
  }, {
    "left" : "throw new UnsupportedOperationException(\"Could not find a suitable desktop foldder\");",
    "right" : "throw new UnsupportedOperationException(\"Could not find a suitable desktop foldder\");",
    "info" : "ThrowStatement[237439-237524]:ThrowStatement[237439-237524]"
  }, {
    "left" : "return new File(desktopFolder, what);",
    "right" : "return new File(desktopFolder, what);",
    "info" : "ReturnStatement[237553-237590]:ReturnStatement[237553-237590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237702-237755]:Block[237702-237755]"
  }, {
    "left" : "return desktopFile(what).getAbsolutePath();",
    "right" : "return desktopFile(what).getAbsolutePath();",
    "info" : "ReturnStatement[237708-237751]:ReturnStatement[237708-237751]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238654-238705]:Block[238654-238705]"
  }, {
    "left" : "return dataFile(where).getAbsolutePath();",
    "right" : "return dataFile(where).getAbsolutePath();",
    "info" : "ReturnStatement[238660-238701]:ReturnStatement[238660-238701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238882-239718]:Block[238882-239718]"
  }, {
    "left" : "File why = new File(where);",
    "right" : "File why = new File(where);",
    "info" : "VariableDeclarationStatement[239031-239058]:VariableDeclarationStatement[239031-239058]"
  }, {
    "left" : "if (why.isAbsolute())",
    "right" : "if (why.isAbsolute())",
    "info" : "IfStatement[239063-239096]:IfStatement[239063-239096]"
  }, {
    "left" : "return why;",
    "right" : "return why;",
    "info" : "ReturnStatement[239085-239096]:ReturnStatement[239085-239096]"
  }, {
    "left" : "String jarPath =\n      getClass().getProtectionDomain().getCodeSource().getLocation().getPath();",
    "right" : "String jarPath =\n      getClass().getProtectionDomain().getCodeSource().getLocation().getPath();",
    "info" : "VariableDeclarationStatement[239102-239198]:VariableDeclarationStatement[239102-239198]"
  }, {
    "left" : "if (jarPath.contains(\"Contents/Java/\"))",
    "right" : "if (jarPath.contains(\"Contents/Java/\"))",
    "info" : "IfStatement[239203-239568]:IfStatement[239203-239568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[239243-239568]:Block[239243-239568]"
  }, {
    "left" : "File containingFolder = new File(urlDecode(jarPath)).getParentFile();",
    "right" : "File containingFolder = new File(urlDecode(jarPath)).getParentFile();",
    "info" : "VariableDeclarationStatement[239391-239460]:VariableDeclarationStatement[239391-239460]"
  }, {
    "left" : "File dataFolder = new File(containingFolder, \"data\");",
    "right" : "File dataFolder = new File(containingFolder, \"data\");",
    "info" : "VariableDeclarationStatement[239467-239520]:VariableDeclarationStatement[239467-239520]"
  }, {
    "left" : "return new File(dataFolder, where);",
    "right" : "return new File(dataFolder, where);",
    "info" : "ReturnStatement[239527-239562]:ReturnStatement[239527-239562]"
  }, {
    "left" : "return new File(sketchPath + File.separator + \"data\" + File.separator + where);",
    "right" : "return new File(sketchPath + File.separator + \"data\" + File.separator + where);",
    "info" : "ReturnStatement[239635-239714]:ReturnStatement[239635-239714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[240196-240233]:Block[240196-240233]"
  }, {
    "left" : "createPath(new File(path));",
    "right" : "createPath(new File(path));",
    "info" : "ExpressionStatement[240202-240229]:ExpressionStatement[240202-240229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[240279-240611]:Block[240279-240611]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[240285-240607]:TryStatement[240285-240607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[240289-240453]:Block[240289-240453]"
  }, {
    "left" : "String parent = file.getParent();",
    "right" : "String parent = file.getParent();",
    "info" : "VariableDeclarationStatement[240297-240330]:VariableDeclarationStatement[240297-240330]"
  }, {
    "left" : "if (parent != null)",
    "right" : "if (parent != null)",
    "info" : "IfStatement[240337-240447]:IfStatement[240337-240447]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[240357-240447]:Block[240357-240447]"
  }, {
    "left" : "File unit = new File(parent);",
    "right" : "File unit = new File(parent);",
    "info" : "VariableDeclarationStatement[240367-240396]:VariableDeclarationStatement[240367-240396]"
  }, {
    "left" : "if (!unit.exists())",
    "right" : "if (!unit.exists())",
    "info" : "IfStatement[240405-240439]:IfStatement[240405-240439]"
  }, {
    "left" : "unit.mkdirs();",
    "right" : "unit.mkdirs();",
    "info" : "ExpressionStatement[240425-240439]:ExpressionStatement[240425-240439]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[240483-240607]:Block[240483-240607]"
  }, {
    "left" : "System.err.println(\"You don't have permissions to create \" +\n                         file.getAbsolutePath());",
    "right" : "System.err.println(\"You don't have permissions to create \" +\n                         file.getAbsolutePath());",
    "info" : "ExpressionStatement[240491-240601]:ExpressionStatement[240491-240601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[240667-241156]:Block[240667-241156]"
  }, {
    "left" : "String extension;",
    "right" : "String extension;",
    "info" : "VariableDeclarationStatement[240673-240690]:VariableDeclarationStatement[240673-240690]"
  }, {
    "left" : "String lower = filename.toLowerCase();",
    "right" : "String lower = filename.toLowerCase();",
    "info" : "VariableDeclarationStatement[240696-240734]:VariableDeclarationStatement[240696-240734]"
  }, {
    "left" : "int dot = filename.lastIndexOf('.');",
    "right" : "int dot = filename.lastIndexOf('.');",
    "info" : "VariableDeclarationStatement[240739-240775]:VariableDeclarationStatement[240739-240775]"
  }, {
    "left" : "if (dot == -1)",
    "right" : "if (dot == -1)",
    "info" : "IfStatement[240780-240854]:IfStatement[240780-240854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[240795-240854]:Block[240795-240854]"
  }, {
    "left" : "extension = \"unknown\";",
    "right" : "extension = \"unknown\";",
    "info" : "ExpressionStatement[240803-240825]:ExpressionStatement[240803-240825]"
  }, {
    "left" : "extension = lower.substring(dot + 1);",
    "right" : "extension = lower.substring(dot + 1);",
    "info" : "ExpressionStatement[240859-240896]:ExpressionStatement[240859-240896]"
  }, {
    "left" : "int question = extension.indexOf('?');",
    "right" : "int question = extension.indexOf('?');",
    "info" : "VariableDeclarationStatement[241007-241045]:VariableDeclarationStatement[241007-241045]"
  }, {
    "left" : "if (question != -1)",
    "right" : "if (question != -1)",
    "info" : "IfStatement[241050-241129]:IfStatement[241050-241129]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241070-241129]:Block[241070-241129]"
  }, {
    "left" : "extension = extension.substring(0, question);",
    "right" : "extension = extension.substring(0, question);",
    "info" : "ExpressionStatement[241078-241123]:ExpressionStatement[241078-241123]"
  }, {
    "left" : "return extension;",
    "right" : "return extension;",
    "info" : "ReturnStatement[241135-241152]:ReturnStatement[241135-241152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241290-241436]:Block[241290-241436]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[241296-241432]:TryStatement[241296-241432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241300-241353]:Block[241300-241353]"
  }, {
    "left" : "return URLEncoder.encode(str, \"UTF-8\");",
    "right" : "return URLEncoder.encode(str, \"UTF-8\");",
    "info" : "ReturnStatement[241308-241347]:ReturnStatement[241308-241347]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241393-241432]:Block[241393-241432]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[241414-241426]:ReturnStatement[241414-241426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241484-241645]:Block[241484-241645]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[241490-241641]:TryStatement[241490-241641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241494-241547]:Block[241494-241547]"
  }, {
    "left" : "return URLDecoder.decode(str, \"UTF-8\");",
    "right" : "return URLDecoder.decode(str, \"UTF-8\");",
    "info" : "ReturnStatement[241502-241541]:ReturnStatement[241502-241541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241587-241641]:Block[241587-241641]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[241623-241635]:ReturnStatement[241623-241635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[242444-242485]:Block[242444-242485]"
  }, {
    "left" : "return sort(list, list.length);",
    "right" : "return sort(list, list.length);",
    "info" : "ReturnStatement[242450-242481]:ReturnStatement[242450-242481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[242618-242783]:Block[242618-242783]"
  }, {
    "left" : "byte[] outgoing = new byte[list.length];",
    "right" : "byte[] outgoing = new byte[list.length];",
    "info" : "VariableDeclarationStatement[242624-242664]:VariableDeclarationStatement[242624-242664]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "info" : "ExpressionStatement[242669-242721]:ExpressionStatement[242669-242721]"
  }, {
    "left" : "Arrays.sort(outgoing, 0, count);",
    "right" : "Arrays.sort(outgoing, 0, count);",
    "info" : "ExpressionStatement[242726-242758]:ExpressionStatement[242726-242758]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[242763-242779]:ReturnStatement[242763-242779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[242826-242867]:Block[242826-242867]"
  }, {
    "left" : "return sort(list, list.length);",
    "right" : "return sort(list, list.length);",
    "info" : "ReturnStatement[242832-242863]:ReturnStatement[242832-242863]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[242921-243086]:Block[242921-243086]"
  }, {
    "left" : "char[] outgoing = new char[list.length];",
    "right" : "char[] outgoing = new char[list.length];",
    "info" : "VariableDeclarationStatement[242927-242967]:VariableDeclarationStatement[242927-242967]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "info" : "ExpressionStatement[242972-243024]:ExpressionStatement[242972-243024]"
  }, {
    "left" : "Arrays.sort(outgoing, 0, count);",
    "right" : "Arrays.sort(outgoing, 0, count);",
    "info" : "ExpressionStatement[243029-243061]:ExpressionStatement[243029-243061]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[243066-243082]:ReturnStatement[243066-243082]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[243127-243168]:Block[243127-243168]"
  }, {
    "left" : "return sort(list, list.length);",
    "right" : "return sort(list, list.length);",
    "info" : "ReturnStatement[243133-243164]:ReturnStatement[243133-243164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[243220-243383]:Block[243220-243383]"
  }, {
    "left" : "int[] outgoing = new int[list.length];",
    "right" : "int[] outgoing = new int[list.length];",
    "info" : "VariableDeclarationStatement[243226-243264]:VariableDeclarationStatement[243226-243264]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "info" : "ExpressionStatement[243269-243321]:ExpressionStatement[243269-243321]"
  }, {
    "left" : "Arrays.sort(outgoing, 0, count);",
    "right" : "Arrays.sort(outgoing, 0, count);",
    "info" : "ExpressionStatement[243326-243358]:ExpressionStatement[243326-243358]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[243363-243379]:ReturnStatement[243363-243379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[243428-243469]:Block[243428-243469]"
  }, {
    "left" : "return sort(list, list.length);",
    "right" : "return sort(list, list.length);",
    "info" : "ReturnStatement[243434-243465]:ReturnStatement[243434-243465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[243525-243692]:Block[243525-243692]"
  }, {
    "left" : "float[] outgoing = new float[list.length];",
    "right" : "float[] outgoing = new float[list.length];",
    "info" : "VariableDeclarationStatement[243531-243573]:VariableDeclarationStatement[243531-243573]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "info" : "ExpressionStatement[243578-243630]:ExpressionStatement[243578-243630]"
  }, {
    "left" : "Arrays.sort(outgoing, 0, count);",
    "right" : "Arrays.sort(outgoing, 0, count);",
    "info" : "ExpressionStatement[243635-243667]:ExpressionStatement[243635-243667]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[243672-243688]:ReturnStatement[243672-243688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[243739-243780]:Block[243739-243780]"
  }, {
    "left" : "return sort(list, list.length);",
    "right" : "return sort(list, list.length);",
    "info" : "ReturnStatement[243745-243776]:ReturnStatement[243745-243776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[243838-244007]:Block[243838-244007]"
  }, {
    "left" : "String[] outgoing = new String[list.length];",
    "right" : "String[] outgoing = new String[list.length];",
    "info" : "VariableDeclarationStatement[243844-243888]:VariableDeclarationStatement[243844-243888]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, list.length);",
    "info" : "ExpressionStatement[243893-243945]:ExpressionStatement[243893-243945]"
  }, {
    "left" : "Arrays.sort(outgoing, 0, count);",
    "right" : "Arrays.sort(outgoing, 0, count);",
    "info" : "ExpressionStatement[243950-243982]:ExpressionStatement[243950-243982]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[243987-244003]:ReturnStatement[243987-244003]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[245341-245412]:Block[245341-245412]"
  }, {
    "left" : "System.arraycopy(src, srcPosition, dst, dstPosition, length);",
    "right" : "System.arraycopy(src, srcPosition, dst, dstPosition, length);",
    "info" : "ExpressionStatement[245347-245408]:ExpressionStatement[245347-245408]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[245600-245651]:Block[245600-245651]"
  }, {
    "left" : "System.arraycopy(src, 0, dst, 0, length);",
    "right" : "System.arraycopy(src, 0, dst, 0, length);",
    "info" : "ExpressionStatement[245606-245647]:ExpressionStatement[245606-245647]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[245879-245944]:Block[245879-245944]"
  }, {
    "left" : "System.arraycopy(src, 0, dst, 0, Array.getLength(src));",
    "right" : "System.arraycopy(src, 0, dst, 0, Array.getLength(src));",
    "info" : "ExpressionStatement[245885-245940]:ExpressionStatement[245885-245940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[246168-246239]:Block[246168-246239]"
  }, {
    "left" : "System.arraycopy(src, srcPosition, dst, dstPosition, length);",
    "right" : "System.arraycopy(src, srcPosition, dst, dstPosition, length);",
    "info" : "ExpressionStatement[246174-246235]:ExpressionStatement[246174-246235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[246362-246413]:Block[246362-246413]"
  }, {
    "left" : "System.arraycopy(src, 0, dst, 0, length);",
    "right" : "System.arraycopy(src, 0, dst, 0, length);",
    "info" : "ExpressionStatement[246368-246409]:ExpressionStatement[246368-246409]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[246524-246589]:Block[246524-246589]"
  }, {
    "left" : "System.arraycopy(src, 0, dst, 0, Array.getLength(src));",
    "right" : "System.arraycopy(src, 0, dst, 0, Array.getLength(src));",
    "info" : "ExpressionStatement[246530-246585]:ExpressionStatement[246530-246585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[247272-247320]:Block[247272-247320]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[247278-247316]:ReturnStatement[247278-247316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[247439-247576]:Block[247439-247576]"
  }, {
    "left" : "boolean temp[] = new boolean[newSize];",
    "right" : "boolean temp[] = new boolean[newSize];",
    "info" : "VariableDeclarationStatement[247445-247483]:VariableDeclarationStatement[247445-247483]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[247488-247555]:ExpressionStatement[247488-247555]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[247560-247572]:ReturnStatement[247560-247572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[247621-247669]:Block[247621-247669]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[247627-247665]:ReturnStatement[247627-247665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[247727-247858]:Block[247727-247858]"
  }, {
    "left" : "byte temp[] = new byte[newSize];",
    "right" : "byte temp[] = new byte[newSize];",
    "info" : "VariableDeclarationStatement[247733-247765]:VariableDeclarationStatement[247733-247765]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[247770-247837]:ExpressionStatement[247770-247837]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[247842-247854]:ReturnStatement[247842-247854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[247903-247951]:Block[247903-247951]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[247909-247947]:ReturnStatement[247909-247947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248009-248140]:Block[248009-248140]"
  }, {
    "left" : "char temp[] = new char[newSize];",
    "right" : "char temp[] = new char[newSize];",
    "info" : "VariableDeclarationStatement[248015-248047]:VariableDeclarationStatement[248015-248047]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[248052-248119]:ExpressionStatement[248052-248119]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[248124-248136]:ReturnStatement[248124-248136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248183-248231]:Block[248183-248231]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[248189-248227]:ReturnStatement[248189-248227]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248287-248416]:Block[248287-248416]"
  }, {
    "left" : "int temp[] = new int[newSize];",
    "right" : "int temp[] = new int[newSize];",
    "info" : "VariableDeclarationStatement[248293-248323]:VariableDeclarationStatement[248293-248323]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[248328-248395]:ExpressionStatement[248328-248395]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[248400-248412]:ReturnStatement[248400-248412]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248461-248509]:Block[248461-248509]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[248467-248505]:ReturnStatement[248467-248505]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248567-248698]:Block[248567-248698]"
  }, {
    "left" : "long temp[] = new long[newSize];",
    "right" : "long temp[] = new long[newSize];",
    "info" : "VariableDeclarationStatement[248573-248605]:VariableDeclarationStatement[248573-248605]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[248610-248677]:ExpressionStatement[248610-248677]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[248682-248694]:ReturnStatement[248682-248694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248745-248793]:Block[248745-248793]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[248751-248789]:ReturnStatement[248751-248789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248853-248986]:Block[248853-248986]"
  }, {
    "left" : "float temp[] = new float[newSize];",
    "right" : "float temp[] = new float[newSize];",
    "info" : "VariableDeclarationStatement[248859-248893]:VariableDeclarationStatement[248859-248893]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[248898-248965]:ExpressionStatement[248898-248965]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[248970-248982]:ReturnStatement[248970-248982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249035-249083]:Block[249035-249083]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[249041-249079]:ReturnStatement[249041-249079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249145-249280]:Block[249145-249280]"
  }, {
    "left" : "double temp[] = new double[newSize];",
    "right" : "double temp[] = new double[newSize];",
    "info" : "VariableDeclarationStatement[249151-249187]:VariableDeclarationStatement[249151-249187]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[249192-249259]:ExpressionStatement[249192-249259]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[249264-249276]:ReturnStatement[249264-249276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249329-249377]:Block[249329-249377]"
  }, {
    "left" : "return expand(list, list.length << 1);",
    "right" : "return expand(list, list.length << 1);",
    "info" : "ReturnStatement[249335-249373]:ReturnStatement[249335-249373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249439-249630]:Block[249439-249630]"
  }, {
    "left" : "String temp[] = new String[newSize];",
    "right" : "String temp[] = new String[newSize];",
    "info" : "VariableDeclarationStatement[249445-249481]:VariableDeclarationStatement[249445-249481]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "right" : "System.arraycopy(list, 0, temp, 0, Math.min(newSize, list.length));",
    "info" : "ExpressionStatement[249542-249609]:ExpressionStatement[249542-249609]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[249614-249626]:ReturnStatement[249614-249626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249700-249760]:Block[249700-249760]"
  }, {
    "left" : "return expand(array, Array.getLength(array) << 1);",
    "right" : "return expand(array, Array.getLength(array) << 1);",
    "info" : "ReturnStatement[249706-249756]:ReturnStatement[249706-249756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249818-250051]:Block[249818-250051]"
  }, {
    "left" : "Class<?> type = list.getClass().getComponentType();",
    "right" : "Class<?> type = list.getClass().getComponentType();",
    "info" : "VariableDeclarationStatement[249824-249875]:VariableDeclarationStatement[249824-249875]"
  }, {
    "left" : "Object temp = Array.newInstance(type, newSize);",
    "right" : "Object temp = Array.newInstance(type, newSize);",
    "info" : "VariableDeclarationStatement[249880-249927]:VariableDeclarationStatement[249880-249927]"
  }, {
    "left" : "System.arraycopy(list, 0, temp, 0,\n                     Math.min(Array.getLength(list), newSize));",
    "right" : "System.arraycopy(list, 0, temp, 0,\n                     Math.min(Array.getLength(list), newSize));",
    "info" : "ExpressionStatement[249932-250030]:ExpressionStatement[249932-250030]"
  }, {
    "left" : "return temp;",
    "right" : "return temp;",
    "info" : "ReturnStatement[250035-250047]:ReturnStatement[250035-250047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[250922-251025]:Block[250922-251025]"
  }, {
    "left" : "array = expand(array, array.length + 1);",
    "right" : "array = expand(array, array.length + 1);",
    "info" : "ExpressionStatement[250928-250968]:ExpressionStatement[250928-250968]"
  }, {
    "left" : "array[array.length-1] = value;",
    "right" : "array[array.length-1] = value;",
    "info" : "ExpressionStatement[250973-251003]:ExpressionStatement[250973-251003]"
  }, {
    "left" : "return array;",
    "right" : "return array;",
    "info" : "ReturnStatement[251008-251021]:ReturnStatement[251008-251021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251083-251186]:Block[251083-251186]"
  }, {
    "left" : "array = expand(array, array.length + 1);",
    "right" : "array = expand(array, array.length + 1);",
    "info" : "ExpressionStatement[251089-251129]:ExpressionStatement[251089-251129]"
  }, {
    "left" : "array[array.length-1] = value;",
    "right" : "array[array.length-1] = value;",
    "info" : "ExpressionStatement[251134-251164]:ExpressionStatement[251134-251164]"
  }, {
    "left" : "return array;",
    "right" : "return array;",
    "info" : "ReturnStatement[251169-251182]:ReturnStatement[251169-251182]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251241-251344]:Block[251241-251344]"
  }, {
    "left" : "array = expand(array, array.length + 1);",
    "right" : "array = expand(array, array.length + 1);",
    "info" : "ExpressionStatement[251247-251287]:ExpressionStatement[251247-251287]"
  }, {
    "left" : "array[array.length-1] = value;",
    "right" : "array[array.length-1] = value;",
    "info" : "ExpressionStatement[251292-251322]:ExpressionStatement[251292-251322]"
  }, {
    "left" : "return array;",
    "right" : "return array;",
    "info" : "ReturnStatement[251327-251340]:ReturnStatement[251327-251340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251405-251508]:Block[251405-251508]"
  }, {
    "left" : "array = expand(array, array.length + 1);",
    "right" : "array = expand(array, array.length + 1);",
    "info" : "ExpressionStatement[251411-251451]:ExpressionStatement[251411-251451]"
  }, {
    "left" : "array[array.length-1] = value;",
    "right" : "array[array.length-1] = value;",
    "info" : "ExpressionStatement[251456-251486]:ExpressionStatement[251456-251486]"
  }, {
    "left" : "return array;",
    "right" : "return array;",
    "info" : "ReturnStatement[251491-251504]:ReturnStatement[251491-251504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251572-251675]:Block[251572-251675]"
  }, {
    "left" : "array = expand(array, array.length + 1);",
    "right" : "array = expand(array, array.length + 1);",
    "info" : "ExpressionStatement[251578-251618]:ExpressionStatement[251578-251618]"
  }, {
    "left" : "array[array.length-1] = value;",
    "right" : "array[array.length-1] = value;",
    "info" : "ExpressionStatement[251623-251653]:ExpressionStatement[251623-251653]"
  }, {
    "left" : "return array;",
    "right" : "return array;",
    "info" : "ReturnStatement[251658-251671]:ReturnStatement[251658-251671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251735-251875]:Block[251735-251875]"
  }, {
    "left" : "int length = Array.getLength(array);",
    "right" : "int length = Array.getLength(array);",
    "info" : "VariableDeclarationStatement[251741-251777]:VariableDeclarationStatement[251741-251777]"
  }, {
    "left" : "array = expand(array, length + 1);",
    "right" : "array = expand(array, length + 1);",
    "info" : "ExpressionStatement[251782-251816]:ExpressionStatement[251782-251816]"
  }, {
    "left" : "Array.set(array, length, value);",
    "right" : "Array.set(array, length, value);",
    "info" : "ExpressionStatement[251821-251853]:ExpressionStatement[251821-251853]"
  }, {
    "left" : "return array;",
    "right" : "return array;",
    "info" : "ReturnStatement[251858-251871]:ReturnStatement[251858-251871]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252470-252518]:Block[252470-252518]"
  }, {
    "left" : "return subset(list, 0, list.length-1);",
    "right" : "return subset(list, 0, list.length-1);",
    "info" : "ReturnStatement[252476-252514]:ReturnStatement[252476-252514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252564-252612]:Block[252564-252612]"
  }, {
    "left" : "return subset(list, 0, list.length-1);",
    "right" : "return subset(list, 0, list.length-1);",
    "info" : "ReturnStatement[252570-252608]:ReturnStatement[252570-252608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252658-252706]:Block[252658-252706]"
  }, {
    "left" : "return subset(list, 0, list.length-1);",
    "right" : "return subset(list, 0, list.length-1);",
    "info" : "ReturnStatement[252664-252702]:ReturnStatement[252664-252702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252750-252798]:Block[252750-252798]"
  }, {
    "left" : "return subset(list, 0, list.length-1);",
    "right" : "return subset(list, 0, list.length-1);",
    "info" : "ReturnStatement[252756-252794]:ReturnStatement[252756-252794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252846-252894]:Block[252846-252894]"
  }, {
    "left" : "return subset(list, 0, list.length-1);",
    "right" : "return subset(list, 0, list.length-1);",
    "info" : "ReturnStatement[252852-252890]:ReturnStatement[252852-252890]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252944-252992]:Block[252944-252992]"
  }, {
    "left" : "return subset(list, 0, list.length-1);",
    "right" : "return subset(list, 0, list.length-1);",
    "info" : "ReturnStatement[252950-252988]:ReturnStatement[252950-252988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[253038-253123]:Block[253038-253123]"
  }, {
    "left" : "int length = Array.getLength(list);",
    "right" : "int length = Array.getLength(list);",
    "info" : "VariableDeclarationStatement[253044-253079]:VariableDeclarationStatement[253044-253079]"
  }, {
    "left" : "return subset(list, 0, length - 1);",
    "right" : "return subset(list, 0, length - 1);",
    "info" : "ReturnStatement[253084-253119]:ReturnStatement[253084-253119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[254115-254374]:Block[254115-254374]"
  }, {
    "left" : "boolean outgoing[] = new boolean[list.length + 1];",
    "right" : "boolean outgoing[] = new boolean[list.length + 1];",
    "info" : "VariableDeclarationStatement[254121-254171]:VariableDeclarationStatement[254121-254171]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[254176-254222]:ExpressionStatement[254176-254222]"
  }, {
    "left" : "outgoing[index] = value;",
    "right" : "outgoing[index] = value;",
    "info" : "ExpressionStatement[254227-254251]:ExpressionStatement[254227-254251]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "info" : "ExpressionStatement[254256-254349]:ExpressionStatement[254256-254349]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[254354-254370]:ReturnStatement[254354-254370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[254498-254813]:Block[254498-254813]"
  }, {
    "left" : "boolean outgoing[] = new boolean[list.length + value.length];",
    "right" : "boolean outgoing[] = new boolean[list.length + value.length];",
    "info" : "VariableDeclarationStatement[254504-254565]:VariableDeclarationStatement[254504-254565]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[254570-254616]:ExpressionStatement[254570-254616]"
  }, {
    "left" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "right" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "info" : "ExpressionStatement[254621-254679]:ExpressionStatement[254621-254679]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "info" : "ExpressionStatement[254684-254788]:ExpressionStatement[254684-254788]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[254793-254809]:ReturnStatement[254793-254809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[254923-255176]:Block[254923-255176]"
  }, {
    "left" : "byte outgoing[] = new byte[list.length + 1];",
    "right" : "byte outgoing[] = new byte[list.length + 1];",
    "info" : "VariableDeclarationStatement[254929-254973]:VariableDeclarationStatement[254929-254973]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[254978-255024]:ExpressionStatement[254978-255024]"
  }, {
    "left" : "outgoing[index] = value;",
    "right" : "outgoing[index] = value;",
    "info" : "ExpressionStatement[255029-255053]:ExpressionStatement[255029-255053]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "info" : "ExpressionStatement[255058-255151]:ExpressionStatement[255058-255151]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[255156-255172]:ReturnStatement[255156-255172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[255288-255597]:Block[255288-255597]"
  }, {
    "left" : "byte outgoing[] = new byte[list.length + value.length];",
    "right" : "byte outgoing[] = new byte[list.length + value.length];",
    "info" : "VariableDeclarationStatement[255294-255349]:VariableDeclarationStatement[255294-255349]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[255354-255400]:ExpressionStatement[255354-255400]"
  }, {
    "left" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "right" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "info" : "ExpressionStatement[255405-255463]:ExpressionStatement[255405-255463]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "info" : "ExpressionStatement[255468-255572]:ExpressionStatement[255468-255572]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[255577-255593]:ReturnStatement[255577-255593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[255708-255961]:Block[255708-255961]"
  }, {
    "left" : "char outgoing[] = new char[list.length + 1];",
    "right" : "char outgoing[] = new char[list.length + 1];",
    "info" : "VariableDeclarationStatement[255714-255758]:VariableDeclarationStatement[255714-255758]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[255763-255809]:ExpressionStatement[255763-255809]"
  }, {
    "left" : "outgoing[index] = value;",
    "right" : "outgoing[index] = value;",
    "info" : "ExpressionStatement[255814-255838]:ExpressionStatement[255814-255838]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "info" : "ExpressionStatement[255843-255936]:ExpressionStatement[255843-255936]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[255941-255957]:ReturnStatement[255941-255957]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[256073-256382]:Block[256073-256382]"
  }, {
    "left" : "char outgoing[] = new char[list.length + value.length];",
    "right" : "char outgoing[] = new char[list.length + value.length];",
    "info" : "VariableDeclarationStatement[256079-256134]:VariableDeclarationStatement[256079-256134]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[256139-256185]:ExpressionStatement[256139-256185]"
  }, {
    "left" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "right" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "info" : "ExpressionStatement[256190-256248]:ExpressionStatement[256190-256248]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "info" : "ExpressionStatement[256253-256357]:ExpressionStatement[256253-256357]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[256362-256378]:ReturnStatement[256362-256378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[256488-256739]:Block[256488-256739]"
  }, {
    "left" : "int outgoing[] = new int[list.length + 1];",
    "right" : "int outgoing[] = new int[list.length + 1];",
    "info" : "VariableDeclarationStatement[256494-256536]:VariableDeclarationStatement[256494-256536]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[256541-256587]:ExpressionStatement[256541-256587]"
  }, {
    "left" : "outgoing[index] = value;",
    "right" : "outgoing[index] = value;",
    "info" : "ExpressionStatement[256592-256616]:ExpressionStatement[256592-256616]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "info" : "ExpressionStatement[256621-256714]:ExpressionStatement[256621-256714]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[256719-256735]:ReturnStatement[256719-256735]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[256847-257154]:Block[256847-257154]"
  }, {
    "left" : "int outgoing[] = new int[list.length + value.length];",
    "right" : "int outgoing[] = new int[list.length + value.length];",
    "info" : "VariableDeclarationStatement[256853-256906]:VariableDeclarationStatement[256853-256906]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[256911-256957]:ExpressionStatement[256911-256957]"
  }, {
    "left" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "right" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "info" : "ExpressionStatement[256962-257020]:ExpressionStatement[256962-257020]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "info" : "ExpressionStatement[257025-257129]:ExpressionStatement[257025-257129]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[257134-257150]:ReturnStatement[257134-257150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[257268-257523]:Block[257268-257523]"
  }, {
    "left" : "float outgoing[] = new float[list.length + 1];",
    "right" : "float outgoing[] = new float[list.length + 1];",
    "info" : "VariableDeclarationStatement[257274-257320]:VariableDeclarationStatement[257274-257320]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[257325-257371]:ExpressionStatement[257325-257371]"
  }, {
    "left" : "outgoing[index] = value;",
    "right" : "outgoing[index] = value;",
    "info" : "ExpressionStatement[257376-257400]:ExpressionStatement[257376-257400]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "info" : "ExpressionStatement[257405-257498]:ExpressionStatement[257405-257498]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[257503-257519]:ReturnStatement[257503-257519]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[257639-257950]:Block[257639-257950]"
  }, {
    "left" : "float outgoing[] = new float[list.length + value.length];",
    "right" : "float outgoing[] = new float[list.length + value.length];",
    "info" : "VariableDeclarationStatement[257645-257702]:VariableDeclarationStatement[257645-257702]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[257707-257753]:ExpressionStatement[257707-257753]"
  }, {
    "left" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "right" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "info" : "ExpressionStatement[257758-257816]:ExpressionStatement[257758-257816]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "info" : "ExpressionStatement[257821-257925]:ExpressionStatement[257821-257925]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[257930-257946]:ReturnStatement[257930-257946]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[258068-258325]:Block[258068-258325]"
  }, {
    "left" : "String outgoing[] = new String[list.length + 1];",
    "right" : "String outgoing[] = new String[list.length + 1];",
    "info" : "VariableDeclarationStatement[258074-258122]:VariableDeclarationStatement[258074-258122]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[258127-258173]:ExpressionStatement[258127-258173]"
  }, {
    "left" : "outgoing[index] = value;",
    "right" : "outgoing[index] = value;",
    "info" : "ExpressionStatement[258178-258202]:ExpressionStatement[258178-258202]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + 1,\n                     list.length - index);",
    "info" : "ExpressionStatement[258207-258300]:ExpressionStatement[258207-258300]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[258305-258321]:ReturnStatement[258305-258321]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[258445-258758]:Block[258445-258758]"
  }, {
    "left" : "String outgoing[] = new String[list.length + value.length];",
    "right" : "String outgoing[] = new String[list.length + value.length];",
    "info" : "VariableDeclarationStatement[258451-258510]:VariableDeclarationStatement[258451-258510]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[258515-258561]:ExpressionStatement[258515-258561]"
  }, {
    "left" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "right" : "System.arraycopy(value, 0, outgoing, index, value.length);",
    "info" : "ExpressionStatement[258566-258624]:ExpressionStatement[258566-258624]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + value.length,\n                     list.length - index);",
    "info" : "ExpressionStatement[258629-258733]:ExpressionStatement[258629-258733]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[258738-258754]:ReturnStatement[258738-258754]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[258834-259634]:Block[258834-259634]"
  }, {
    "left" : "Class<?> type = list.getClass().getComponentType();",
    "right" : "Class<?> type = list.getClass().getComponentType();",
    "info" : "VariableDeclarationStatement[258840-258891]:VariableDeclarationStatement[258840-258891]"
  }, {
    "left" : "Object outgoing = null;",
    "right" : "Object outgoing = null;",
    "info" : "VariableDeclarationStatement[258896-258919]:VariableDeclarationStatement[258896-258919]"
  }, {
    "left" : "int length = Array.getLength(list);",
    "right" : "int length = Array.getLength(list);",
    "info" : "VariableDeclarationStatement[258924-258959]:VariableDeclarationStatement[258924-258959]"
  }, {
    "left" : "if (value.getClass().getName().charAt(0) == '[')",
    "right" : "if (value.getClass().getName().charAt(0) == '[')",
    "info" : "IfStatement[259020-259609]:IfStatement[259020-259609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[259069-259374]:Block[259069-259374]"
  }, {
    "left" : "int vlength = Array.getLength(value);",
    "right" : "int vlength = Array.getLength(value);",
    "info" : "VariableDeclarationStatement[259077-259114]:VariableDeclarationStatement[259077-259114]"
  }, {
    "left" : "outgoing = Array.newInstance(type, length + vlength);",
    "right" : "outgoing = Array.newInstance(type, length + vlength);",
    "info" : "ExpressionStatement[259121-259174]:ExpressionStatement[259121-259174]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[259181-259227]:ExpressionStatement[259181-259227]"
  }, {
    "left" : "System.arraycopy(value, 0, outgoing, index, vlength);",
    "right" : "System.arraycopy(value, 0, outgoing, index, vlength);",
    "info" : "ExpressionStatement[259234-259287]:ExpressionStatement[259234-259287]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + vlength, length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + vlength, length - index);",
    "info" : "ExpressionStatement[259294-259367]:ExpressionStatement[259294-259367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[259380-259609]:Block[259380-259609]"
  }, {
    "left" : "outgoing = Array.newInstance(type, length + 1);",
    "right" : "outgoing = Array.newInstance(type, length + 1);",
    "info" : "ExpressionStatement[259388-259435]:ExpressionStatement[259388-259435]"
  }, {
    "left" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "right" : "System.arraycopy(list, 0, outgoing, 0, index);",
    "info" : "ExpressionStatement[259442-259488]:ExpressionStatement[259442-259488]"
  }, {
    "left" : "Array.set(outgoing, index, value);",
    "right" : "Array.set(outgoing, index, value);",
    "info" : "ExpressionStatement[259495-259529]:ExpressionStatement[259495-259529]"
  }, {
    "left" : "System.arraycopy(list, index, outgoing, index + 1, length - index);",
    "right" : "System.arraycopy(list, index, outgoing, index + 1, length - index);",
    "info" : "ExpressionStatement[259536-259603]:ExpressionStatement[259536-259603]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[259614-259630]:ReturnStatement[259614-259630]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[259696-259754]:Block[259696-259754]"
  }, {
    "left" : "return subset(list, start, list.length - start);",
    "right" : "return subset(list, start, list.length - start);",
    "info" : "ReturnStatement[259702-259750]:ReturnStatement[259702-259750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[260839-260959]:Block[260839-260959]"
  }, {
    "left" : "boolean output[] = new boolean[count];",
    "right" : "boolean output[] = new boolean[count];",
    "info" : "VariableDeclarationStatement[260845-260883]:VariableDeclarationStatement[260845-260883]"
  }, {
    "left" : "System.arraycopy(list, start, output, 0, count);",
    "right" : "System.arraycopy(list, start, output, 0, count);",
    "info" : "ExpressionStatement[260888-260936]:ExpressionStatement[260888-260936]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[260941-260955]:ReturnStatement[260941-260955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261015-261073]:Block[261015-261073]"
  }, {
    "left" : "return subset(list, start, list.length - start);",
    "right" : "return subset(list, start, list.length - start);",
    "info" : "ReturnStatement[261021-261069]:ReturnStatement[261021-261069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261140-261254]:Block[261140-261254]"
  }, {
    "left" : "byte output[] = new byte[count];",
    "right" : "byte output[] = new byte[count];",
    "info" : "VariableDeclarationStatement[261146-261178]:VariableDeclarationStatement[261146-261178]"
  }, {
    "left" : "System.arraycopy(list, start, output, 0, count);",
    "right" : "System.arraycopy(list, start, output, 0, count);",
    "info" : "ExpressionStatement[261183-261231]:ExpressionStatement[261183-261231]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[261236-261250]:ReturnStatement[261236-261250]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261311-261369]:Block[261311-261369]"
  }, {
    "left" : "return subset(list, start, list.length - start);",
    "right" : "return subset(list, start, list.length - start);",
    "info" : "ReturnStatement[261317-261365]:ReturnStatement[261317-261365]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261436-261550]:Block[261436-261550]"
  }, {
    "left" : "char output[] = new char[count];",
    "right" : "char output[] = new char[count];",
    "info" : "VariableDeclarationStatement[261442-261474]:VariableDeclarationStatement[261442-261474]"
  }, {
    "left" : "System.arraycopy(list, start, output, 0, count);",
    "right" : "System.arraycopy(list, start, output, 0, count);",
    "info" : "ExpressionStatement[261479-261527]:ExpressionStatement[261479-261527]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[261532-261546]:ReturnStatement[261532-261546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261604-261662]:Block[261604-261662]"
  }, {
    "left" : "return subset(list, start, list.length - start);",
    "right" : "return subset(list, start, list.length - start);",
    "info" : "ReturnStatement[261610-261658]:ReturnStatement[261610-261658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261727-261839]:Block[261727-261839]"
  }, {
    "left" : "int output[] = new int[count];",
    "right" : "int output[] = new int[count];",
    "info" : "VariableDeclarationStatement[261733-261763]:VariableDeclarationStatement[261733-261763]"
  }, {
    "left" : "System.arraycopy(list, start, output, 0, count);",
    "right" : "System.arraycopy(list, start, output, 0, count);",
    "info" : "ExpressionStatement[261768-261816]:ExpressionStatement[261768-261816]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[261821-261835]:ReturnStatement[261821-261835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261897-261955]:Block[261897-261955]"
  }, {
    "left" : "return subset(list, start, list.length - start);",
    "right" : "return subset(list, start, list.length - start);",
    "info" : "ReturnStatement[261903-261951]:ReturnStatement[261903-261951]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[262024-262140]:Block[262024-262140]"
  }, {
    "left" : "float output[] = new float[count];",
    "right" : "float output[] = new float[count];",
    "info" : "VariableDeclarationStatement[262030-262064]:VariableDeclarationStatement[262030-262064]"
  }, {
    "left" : "System.arraycopy(list, start, output, 0, count);",
    "right" : "System.arraycopy(list, start, output, 0, count);",
    "info" : "ExpressionStatement[262069-262117]:ExpressionStatement[262069-262117]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[262122-262136]:ReturnStatement[262122-262136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[262201-262259]:Block[262201-262259]"
  }, {
    "left" : "return subset(list, start, list.length - start);",
    "right" : "return subset(list, start, list.length - start);",
    "info" : "ReturnStatement[262207-262255]:ReturnStatement[262207-262255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[262330-262448]:Block[262330-262448]"
  }, {
    "left" : "String output[] = new String[count];",
    "right" : "String output[] = new String[count];",
    "info" : "VariableDeclarationStatement[262336-262372]:VariableDeclarationStatement[262336-262372]"
  }, {
    "left" : "System.arraycopy(list, start, output, 0, count);",
    "right" : "System.arraycopy(list, start, output, 0, count);",
    "info" : "ExpressionStatement[262377-262425]:ExpressionStatement[262377-262425]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[262430-262444]:ReturnStatement[262430-262444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[262505-262598]:Block[262505-262598]"
  }, {
    "left" : "int length = Array.getLength(list);",
    "right" : "int length = Array.getLength(list);",
    "info" : "VariableDeclarationStatement[262511-262546]:VariableDeclarationStatement[262511-262546]"
  }, {
    "left" : "return subset(list, start, length - start);",
    "right" : "return subset(list, start, length - start);",
    "info" : "ReturnStatement[262551-262594]:ReturnStatement[262551-262594]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[262665-262856]:Block[262665-262856]"
  }, {
    "left" : "Class<?> type = list.getClass().getComponentType();",
    "right" : "Class<?> type = list.getClass().getComponentType();",
    "info" : "VariableDeclarationStatement[262671-262722]:VariableDeclarationStatement[262671-262722]"
  }, {
    "left" : "Object outgoing = Array.newInstance(type, count);",
    "right" : "Object outgoing = Array.newInstance(type, count);",
    "info" : "VariableDeclarationStatement[262727-262776]:VariableDeclarationStatement[262727-262776]"
  }, {
    "left" : "System.arraycopy(list, start, outgoing, 0, count);",
    "right" : "System.arraycopy(list, start, outgoing, 0, count);",
    "info" : "ExpressionStatement[262781-262831]:ExpressionStatement[262781-262831]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[262836-262852]:ReturnStatement[262836-262852]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[263656-263822]:Block[263656-263822]"
  }, {
    "left" : "boolean c[] = new boolean[a.length + b.length];",
    "right" : "boolean c[] = new boolean[a.length + b.length];",
    "info" : "VariableDeclarationStatement[263662-263709]:VariableDeclarationStatement[263662-263709]"
  }, {
    "left" : "System.arraycopy(a, 0, c, 0, a.length);",
    "right" : "System.arraycopy(a, 0, c, 0, a.length);",
    "info" : "ExpressionStatement[263714-263753]:ExpressionStatement[263714-263753]"
  }, {
    "left" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "right" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "info" : "ExpressionStatement[263758-263804]:ExpressionStatement[263758-263804]"
  }, {
    "left" : "return c;",
    "right" : "return c;",
    "info" : "ReturnStatement[263809-263818]:ReturnStatement[263809-263818]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[263874-264034]:Block[263874-264034]"
  }, {
    "left" : "byte c[] = new byte[a.length + b.length];",
    "right" : "byte c[] = new byte[a.length + b.length];",
    "info" : "VariableDeclarationStatement[263880-263921]:VariableDeclarationStatement[263880-263921]"
  }, {
    "left" : "System.arraycopy(a, 0, c, 0, a.length);",
    "right" : "System.arraycopy(a, 0, c, 0, a.length);",
    "info" : "ExpressionStatement[263926-263965]:ExpressionStatement[263926-263965]"
  }, {
    "left" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "right" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "info" : "ExpressionStatement[263970-264016]:ExpressionStatement[263970-264016]"
  }, {
    "left" : "return c;",
    "right" : "return c;",
    "info" : "ReturnStatement[264021-264030]:ReturnStatement[264021-264030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[264086-264246]:Block[264086-264246]"
  }, {
    "left" : "char c[] = new char[a.length + b.length];",
    "right" : "char c[] = new char[a.length + b.length];",
    "info" : "VariableDeclarationStatement[264092-264133]:VariableDeclarationStatement[264092-264133]"
  }, {
    "left" : "System.arraycopy(a, 0, c, 0, a.length);",
    "right" : "System.arraycopy(a, 0, c, 0, a.length);",
    "info" : "ExpressionStatement[264138-264177]:ExpressionStatement[264138-264177]"
  }, {
    "left" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "right" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "info" : "ExpressionStatement[264182-264228]:ExpressionStatement[264182-264228]"
  }, {
    "left" : "return c;",
    "right" : "return c;",
    "info" : "ReturnStatement[264233-264242]:ReturnStatement[264233-264242]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[264295-264453]:Block[264295-264453]"
  }, {
    "left" : "int c[] = new int[a.length + b.length];",
    "right" : "int c[] = new int[a.length + b.length];",
    "info" : "VariableDeclarationStatement[264301-264340]:VariableDeclarationStatement[264301-264340]"
  }, {
    "left" : "System.arraycopy(a, 0, c, 0, a.length);",
    "right" : "System.arraycopy(a, 0, c, 0, a.length);",
    "info" : "ExpressionStatement[264345-264384]:ExpressionStatement[264345-264384]"
  }, {
    "left" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "right" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "info" : "ExpressionStatement[264389-264435]:ExpressionStatement[264389-264435]"
  }, {
    "left" : "return c;",
    "right" : "return c;",
    "info" : "ReturnStatement[264440-264449]:ReturnStatement[264440-264449]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[264508-264670]:Block[264508-264670]"
  }, {
    "left" : "float c[] = new float[a.length + b.length];",
    "right" : "float c[] = new float[a.length + b.length];",
    "info" : "VariableDeclarationStatement[264514-264557]:VariableDeclarationStatement[264514-264557]"
  }, {
    "left" : "System.arraycopy(a, 0, c, 0, a.length);",
    "right" : "System.arraycopy(a, 0, c, 0, a.length);",
    "info" : "ExpressionStatement[264562-264601]:ExpressionStatement[264562-264601]"
  }, {
    "left" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "right" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "info" : "ExpressionStatement[264606-264652]:ExpressionStatement[264606-264652]"
  }, {
    "left" : "return c;",
    "right" : "return c;",
    "info" : "ReturnStatement[264657-264666]:ReturnStatement[264657-264666]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[264728-264892]:Block[264728-264892]"
  }, {
    "left" : "String c[] = new String[a.length + b.length];",
    "right" : "String c[] = new String[a.length + b.length];",
    "info" : "VariableDeclarationStatement[264734-264779]:VariableDeclarationStatement[264734-264779]"
  }, {
    "left" : "System.arraycopy(a, 0, c, 0, a.length);",
    "right" : "System.arraycopy(a, 0, c, 0, a.length);",
    "info" : "ExpressionStatement[264784-264823]:ExpressionStatement[264784-264823]"
  }, {
    "left" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "right" : "System.arraycopy(b, 0, c, a.length, b.length);",
    "info" : "ExpressionStatement[264828-264874]:ExpressionStatement[264828-264874]"
  }, {
    "left" : "return c;",
    "right" : "return c;",
    "info" : "ReturnStatement[264879-264888]:ReturnStatement[264879-264888]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[264944-265271]:Block[264944-265271]"
  }, {
    "left" : "Class<?> type = a.getClass().getComponentType();",
    "right" : "Class<?> type = a.getClass().getComponentType();",
    "info" : "VariableDeclarationStatement[264950-264998]:VariableDeclarationStatement[264950-264998]"
  }, {
    "left" : "int alength = Array.getLength(a);",
    "right" : "int alength = Array.getLength(a);",
    "info" : "VariableDeclarationStatement[265003-265036]:VariableDeclarationStatement[265003-265036]"
  }, {
    "left" : "int blength = Array.getLength(b);",
    "right" : "int blength = Array.getLength(b);",
    "info" : "VariableDeclarationStatement[265041-265074]:VariableDeclarationStatement[265041-265074]"
  }, {
    "left" : "Object outgoing = Array.newInstance(type, alength + blength);",
    "right" : "Object outgoing = Array.newInstance(type, alength + blength);",
    "info" : "VariableDeclarationStatement[265079-265140]:VariableDeclarationStatement[265079-265140]"
  }, {
    "left" : "System.arraycopy(a, 0, outgoing, 0, alength);",
    "right" : "System.arraycopy(a, 0, outgoing, 0, alength);",
    "info" : "ExpressionStatement[265145-265190]:ExpressionStatement[265145-265190]"
  }, {
    "left" : "System.arraycopy(b, 0, outgoing, alength, blength);",
    "right" : "System.arraycopy(b, 0, outgoing, alength, blength);",
    "info" : "ExpressionStatement[265195-265246]:ExpressionStatement[265195-265246]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[265251-265267]:ReturnStatement[265251-265267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[265609-265810]:Block[265609-265810]"
  }, {
    "left" : "boolean outgoing[] = new boolean[list.length];",
    "right" : "boolean outgoing[] = new boolean[list.length];",
    "info" : "VariableDeclarationStatement[265615-265661]:VariableDeclarationStatement[265615-265661]"
  }, {
    "left" : "int length1 = list.length - 1;",
    "right" : "int length1 = list.length - 1;",
    "info" : "VariableDeclarationStatement[265666-265696]:VariableDeclarationStatement[265666-265696]"
  }, {
    "left" : "for (int i = 0; i < list.length; i++)",
    "right" : "for (int i = 0; i < list.length; i++)",
    "info" : "ForStatement[265701-265785]:ForStatement[265701-265785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[265739-265785]:Block[265739-265785]"
  }, {
    "left" : "outgoing[i] = list[length1 - i];",
    "right" : "outgoing[i] = list[length1 - i];",
    "info" : "ExpressionStatement[265747-265779]:ExpressionStatement[265747-265779]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[265790-265806]:ReturnStatement[265790-265806]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[265856-266051]:Block[265856-266051]"
  }, {
    "left" : "byte outgoing[] = new byte[list.length];",
    "right" : "byte outgoing[] = new byte[list.length];",
    "info" : "VariableDeclarationStatement[265862-265902]:VariableDeclarationStatement[265862-265902]"
  }, {
    "left" : "int length1 = list.length - 1;",
    "right" : "int length1 = list.length - 1;",
    "info" : "VariableDeclarationStatement[265907-265937]:VariableDeclarationStatement[265907-265937]"
  }, {
    "left" : "for (int i = 0; i < list.length; i++)",
    "right" : "for (int i = 0; i < list.length; i++)",
    "info" : "ForStatement[265942-266026]:ForStatement[265942-266026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[265980-266026]:Block[265980-266026]"
  }, {
    "left" : "outgoing[i] = list[length1 - i];",
    "right" : "outgoing[i] = list[length1 - i];",
    "info" : "ExpressionStatement[265988-266020]:ExpressionStatement[265988-266020]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[266031-266047]:ReturnStatement[266031-266047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266097-266292]:Block[266097-266292]"
  }, {
    "left" : "char outgoing[] = new char[list.length];",
    "right" : "char outgoing[] = new char[list.length];",
    "info" : "VariableDeclarationStatement[266103-266143]:VariableDeclarationStatement[266103-266143]"
  }, {
    "left" : "int length1 = list.length - 1;",
    "right" : "int length1 = list.length - 1;",
    "info" : "VariableDeclarationStatement[266148-266178]:VariableDeclarationStatement[266148-266178]"
  }, {
    "left" : "for (int i = 0; i < list.length; i++)",
    "right" : "for (int i = 0; i < list.length; i++)",
    "info" : "ForStatement[266183-266267]:ForStatement[266183-266267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266221-266267]:Block[266221-266267]"
  }, {
    "left" : "outgoing[i] = list[length1 - i];",
    "right" : "outgoing[i] = list[length1 - i];",
    "info" : "ExpressionStatement[266229-266261]:ExpressionStatement[266229-266261]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[266272-266288]:ReturnStatement[266272-266288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266336-266529]:Block[266336-266529]"
  }, {
    "left" : "int outgoing[] = new int[list.length];",
    "right" : "int outgoing[] = new int[list.length];",
    "info" : "VariableDeclarationStatement[266342-266380]:VariableDeclarationStatement[266342-266380]"
  }, {
    "left" : "int length1 = list.length - 1;",
    "right" : "int length1 = list.length - 1;",
    "info" : "VariableDeclarationStatement[266385-266415]:VariableDeclarationStatement[266385-266415]"
  }, {
    "left" : "for (int i = 0; i < list.length; i++)",
    "right" : "for (int i = 0; i < list.length; i++)",
    "info" : "ForStatement[266420-266504]:ForStatement[266420-266504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266458-266504]:Block[266458-266504]"
  }, {
    "left" : "outgoing[i] = list[length1 - i];",
    "right" : "outgoing[i] = list[length1 - i];",
    "info" : "ExpressionStatement[266466-266498]:ExpressionStatement[266466-266498]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[266509-266525]:ReturnStatement[266509-266525]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266577-266774]:Block[266577-266774]"
  }, {
    "left" : "float outgoing[] = new float[list.length];",
    "right" : "float outgoing[] = new float[list.length];",
    "info" : "VariableDeclarationStatement[266583-266625]:VariableDeclarationStatement[266583-266625]"
  }, {
    "left" : "int length1 = list.length - 1;",
    "right" : "int length1 = list.length - 1;",
    "info" : "VariableDeclarationStatement[266630-266660]:VariableDeclarationStatement[266630-266660]"
  }, {
    "left" : "for (int i = 0; i < list.length; i++)",
    "right" : "for (int i = 0; i < list.length; i++)",
    "info" : "ForStatement[266665-266749]:ForStatement[266665-266749]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266703-266749]:Block[266703-266749]"
  }, {
    "left" : "outgoing[i] = list[length1 - i];",
    "right" : "outgoing[i] = list[length1 - i];",
    "info" : "ExpressionStatement[266711-266743]:ExpressionStatement[266711-266743]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[266754-266770]:ReturnStatement[266754-266770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266824-267023]:Block[266824-267023]"
  }, {
    "left" : "String outgoing[] = new String[list.length];",
    "right" : "String outgoing[] = new String[list.length];",
    "info" : "VariableDeclarationStatement[266830-266874]:VariableDeclarationStatement[266830-266874]"
  }, {
    "left" : "int length1 = list.length - 1;",
    "right" : "int length1 = list.length - 1;",
    "info" : "VariableDeclarationStatement[266879-266909]:VariableDeclarationStatement[266879-266909]"
  }, {
    "left" : "for (int i = 0; i < list.length; i++)",
    "right" : "for (int i = 0; i < list.length; i++)",
    "info" : "ForStatement[266914-266998]:ForStatement[266914-266998]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[266952-266998]:Block[266952-266998]"
  }, {
    "left" : "outgoing[i] = list[length1 - i];",
    "right" : "outgoing[i] = list[length1 - i];",
    "info" : "ExpressionStatement[266960-266992]:ExpressionStatement[266960-266992]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[267003-267019]:ReturnStatement[267003-267019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[267069-267356]:Block[267069-267356]"
  }, {
    "left" : "Class<?> type = list.getClass().getComponentType();",
    "right" : "Class<?> type = list.getClass().getComponentType();",
    "info" : "VariableDeclarationStatement[267075-267126]:VariableDeclarationStatement[267075-267126]"
  }, {
    "left" : "int length = Array.getLength(list);",
    "right" : "int length = Array.getLength(list);",
    "info" : "VariableDeclarationStatement[267131-267166]:VariableDeclarationStatement[267131-267166]"
  }, {
    "left" : "Object outgoing = Array.newInstance(type, length);",
    "right" : "Object outgoing = Array.newInstance(type, length);",
    "info" : "VariableDeclarationStatement[267171-267221]:VariableDeclarationStatement[267171-267221]"
  }, {
    "left" : "for (int i = 0; i < length; i++)",
    "right" : "for (int i = 0; i < length; i++)",
    "info" : "ForStatement[267226-267331]:ForStatement[267226-267331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[267259-267331]:Block[267259-267331]"
  }, {
    "left" : "Array.set(outgoing, i, Array.get(list, (length - 1) - i));",
    "right" : "Array.set(outgoing, i, Array.get(list, (length - 1) - i));",
    "info" : "ExpressionStatement[267267-267325]:ExpressionStatement[267267-267325]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[267336-267352]:ReturnStatement[267336-267352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[267945-267996]:Block[267945-267996]"
  }, {
    "left" : "return str.replace('\\u00A0', ' ').trim();",
    "right" : "return str.replace('\\u00A0', ' ').trim();",
    "info" : "ReturnStatement[267951-267992]:ReturnStatement[267951-267992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[268087-268314]:Block[268087-268314]"
  }, {
    "left" : "String[] outgoing = new String[array.length];",
    "right" : "String[] outgoing = new String[array.length];",
    "info" : "VariableDeclarationStatement[268093-268138]:VariableDeclarationStatement[268093-268138]"
  }, {
    "left" : "for (int i = 0; i < array.length; i++)",
    "right" : "for (int i = 0; i < array.length; i++)",
    "info" : "ForStatement[268143-268289]:ForStatement[268143-268289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[268182-268289]:Block[268182-268289]"
  }, {
    "left" : "if (array[i] != null)",
    "right" : "if (array[i] != null)",
    "info" : "IfStatement[268190-268283]:IfStatement[268190-268283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[268212-268283]:Block[268212-268283]"
  }, {
    "left" : "outgoing[i] = array[i].replace('\\u00A0', ' ').trim();",
    "right" : "outgoing[i] = array[i].replace('\\u00A0', ' ').trim();",
    "info" : "ExpressionStatement[268222-268275]:ExpressionStatement[268222-268275]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[268294-268310]:ReturnStatement[268294-268310]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[269014-269069]:Block[269014-269069]"
  }, {
    "left" : "return join(list, String.valueOf(separator));",
    "right" : "return join(list, String.valueOf(separator));",
    "info" : "ReturnStatement[269020-269065]:ReturnStatement[269020-269065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[269133-269324]:Block[269133-269324]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder();",
    "right" : "StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[269139-269178]:VariableDeclarationStatement[269139-269178]"
  }, {
    "left" : "for (int i = 0; i < list.length; i++)",
    "right" : "for (int i = 0; i < list.length; i++)",
    "info" : "ForStatement[269183-269294]:ForStatement[269183-269294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[269221-269294]:Block[269221-269294]"
  }, {
    "left" : "if (i != 0)",
    "right" : "if (i != 0)",
    "info" : "IfStatement[269229-269262]:IfStatement[269229-269262]"
  }, {
    "left" : "sb.append(separator);",
    "right" : "sb.append(separator);",
    "info" : "ExpressionStatement[269241-269262]:ExpressionStatement[269241-269262]"
  }, {
    "left" : "sb.append(list[i]);",
    "right" : "sb.append(list[i]);",
    "info" : "ExpressionStatement[269269-269288]:ExpressionStatement[269269-269288]"
  }, {
    "left" : "return sb.toString();",
    "right" : "return sb.toString();",
    "info" : "ReturnStatement[269299-269320]:ReturnStatement[269299-269320]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[269378-269426]:Block[269378-269426]"
  }, {
    "left" : "return splitTokens(value, WHITESPACE);",
    "right" : "return splitTokens(value, WHITESPACE);",
    "info" : "ReturnStatement[269384-269422]:ReturnStatement[269384-269422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[270444-270691]:Block[270444-270691]"
  }, {
    "left" : "StringTokenizer toker = new StringTokenizer(value, delim);",
    "right" : "StringTokenizer toker = new StringTokenizer(value, delim);",
    "info" : "VariableDeclarationStatement[270450-270508]:VariableDeclarationStatement[270450-270508]"
  }, {
    "left" : "String pieces[] = new String[toker.countTokens()];",
    "right" : "String pieces[] = new String[toker.countTokens()];",
    "info" : "VariableDeclarationStatement[270513-270563]:VariableDeclarationStatement[270513-270563]"
  }, {
    "left" : "int index = 0;",
    "right" : "int index = 0;",
    "info" : "VariableDeclarationStatement[270569-270583]:VariableDeclarationStatement[270569-270583]"
  }, {
    "left" : "while (toker.hasMoreTokens())",
    "right" : "while (toker.hasMoreTokens())",
    "info" : "WhileStatement[270588-270668]:WhileStatement[270588-270668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[270618-270668]:Block[270618-270668]"
  }, {
    "left" : "pieces[index++] = toker.nextToken();",
    "right" : "pieces[index++] = toker.nextToken();",
    "info" : "ExpressionStatement[270626-270662]:ExpressionStatement[270626-270662]"
  }, {
    "left" : "return pieces;",
    "right" : "return pieces;",
    "info" : "ReturnStatement[270673-270687]:ReturnStatement[270673-270687]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[272349-273636]:Block[272349-273636]"
  }, {
    "left" : "if (value == null)",
    "right" : "if (value == null)",
    "info" : "IfStatement[272482-272513]:IfStatement[272482-272513]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[272501-272513]:ReturnStatement[272501-272513]"
  }, {
    "left" : "char chars[] = value.toCharArray();",
    "right" : "char chars[] = value.toCharArray();",
    "info" : "VariableDeclarationStatement[272576-272611]:VariableDeclarationStatement[272576-272611]"
  }, {
    "left" : "int splitCount = 0;",
    "right" : "int splitCount = 0;",
    "info" : "VariableDeclarationStatement[272616-272635]:VariableDeclarationStatement[272616-272635]"
  }, {
    "left" : "for (int i = 0; i < chars.length; i++)",
    "right" : "for (int i = 0; i < chars.length; i++)",
    "info" : "ForStatement[272645-272734]:ForStatement[272645-272734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[272684-272734]:Block[272684-272734]"
  }, {
    "left" : "if (chars[i] == delim)",
    "right" : "if (chars[i] == delim)",
    "info" : "IfStatement[272692-272728]:IfStatement[272692-272728]"
  }, {
    "left" : "splitCount++;",
    "right" : "splitCount++;",
    "info" : "ExpressionStatement[272715-272728]:ExpressionStatement[272715-272728]"
  }, {
    "left" : "if (splitCount == 0)",
    "right" : "if (splitCount == 0)",
    "info" : "IfStatement[273020-273133]:IfStatement[273020-273133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[273041-273133]:Block[273041-273133]"
  }, {
    "left" : "String splits[] = new String[1];",
    "right" : "String splits[] = new String[1];",
    "info" : "VariableDeclarationStatement[273049-273081]:VariableDeclarationStatement[273049-273081]"
  }, {
    "left" : "splits[0] = value;",
    "right" : "splits[0] = value;",
    "info" : "ExpressionStatement[273088-273106]:ExpressionStatement[273088-273106]"
  }, {
    "left" : "return splits;",
    "right" : "return splits;",
    "info" : "ReturnStatement[273113-273127]:ReturnStatement[273113-273127]"
  }, {
    "left" : "String splits[] = new String[splitCount + 1];",
    "right" : "String splits[] = new String[splitCount + 1];",
    "info" : "VariableDeclarationStatement[273177-273222]:VariableDeclarationStatement[273177-273222]"
  }, {
    "left" : "int splitIndex = 0;",
    "right" : "int splitIndex = 0;",
    "info" : "VariableDeclarationStatement[273227-273246]:VariableDeclarationStatement[273227-273246]"
  }, {
    "left" : "int startIndex = 0;",
    "right" : "int startIndex = 0;",
    "info" : "VariableDeclarationStatement[273251-273270]:VariableDeclarationStatement[273251-273270]"
  }, {
    "left" : "for (int i = 0; i < chars.length; i++)",
    "right" : "for (int i = 0; i < chars.length; i++)",
    "info" : "ForStatement[273275-273474]:ForStatement[273275-273474]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[273314-273474]:Block[273314-273474]"
  }, {
    "left" : "if (chars[i] == delim)",
    "right" : "if (chars[i] == delim)",
    "info" : "IfStatement[273322-273468]:IfStatement[273322-273468]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[273345-273468]:Block[273345-273468]"
  }, {
    "left" : "splits[splitIndex++] =\n          new String(chars, startIndex, i-startIndex);",
    "right" : "splits[splitIndex++] =\n          new String(chars, startIndex, i-startIndex);",
    "info" : "ExpressionStatement[273355-273432]:ExpressionStatement[273355-273432]"
  }, {
    "left" : "startIndex = i + 1;",
    "right" : "startIndex = i + 1;",
    "info" : "ExpressionStatement[273441-273460]:ExpressionStatement[273441-273460]"
  }, {
    "left" : "splits[splitIndex] =\n        new String(chars, startIndex, chars.length-startIndex);",
    "right" : "splits[splitIndex] =\n        new String(chars, startIndex, chars.length-startIndex);",
    "info" : "ExpressionStatement[273521-273605]:ExpressionStatement[273521-273605]"
  }, {
    "left" : "return splits;",
    "right" : "return splits;",
    "info" : "ReturnStatement[273618-273632]:ReturnStatement[273618-273632]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[273698-274086]:Block[273698-274086]"
  }, {
    "left" : "ArrayList<String> items = new ArrayList<String>();",
    "right" : "ArrayList<String> items = new ArrayList<String>();",
    "info" : "VariableDeclarationStatement[273704-273754]:VariableDeclarationStatement[273704-273754]"
  }, {
    "left" : "int index;",
    "right" : "int index;",
    "info" : "VariableDeclarationStatement[273759-273769]:VariableDeclarationStatement[273759-273769]"
  }, {
    "left" : "int offset = 0;",
    "right" : "int offset = 0;",
    "info" : "VariableDeclarationStatement[273774-273789]:VariableDeclarationStatement[273774-273789]"
  }, {
    "left" : "while ((index = value.indexOf(delim, offset)) != -1)",
    "right" : "while ((index = value.indexOf(delim, offset)) != -1)",
    "info" : "WhileStatement[273794-273942]:WhileStatement[273794-273942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[273847-273942]:Block[273847-273942]"
  }, {
    "left" : "items.add(value.substring(offset, index));",
    "right" : "items.add(value.substring(offset, index));",
    "info" : "ExpressionStatement[273855-273897]:ExpressionStatement[273855-273897]"
  }, {
    "left" : "offset = index + delim.length();",
    "right" : "offset = index + delim.length();",
    "info" : "ExpressionStatement[273904-273936]:ExpressionStatement[273904-273936]"
  }, {
    "left" : "items.add(value.substring(offset));",
    "right" : "items.add(value.substring(offset));",
    "info" : "ExpressionStatement[273947-273982]:ExpressionStatement[273947-273982]"
  }, {
    "left" : "String[] outgoing = new String[items.size()];",
    "right" : "String[] outgoing = new String[items.size()];",
    "info" : "VariableDeclarationStatement[273987-274032]:VariableDeclarationStatement[273987-274032]"
  }, {
    "left" : "items.toArray(outgoing);",
    "right" : "items.toArray(outgoing);",
    "info" : "ExpressionStatement[274037-274061]:ExpressionStatement[274037-274061]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[274066-274082]:ReturnStatement[274066-274082]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[274194-275110]:Block[274194-275110]"
  }, {
    "left" : "Pattern p = null;",
    "right" : "Pattern p = null;",
    "info" : "VariableDeclarationStatement[274200-274217]:VariableDeclarationStatement[274200-274217]"
  }, {
    "left" : "if (matchPatterns == null)",
    "right" : "if (matchPatterns == null)",
    "info" : "IfStatement[274222-274360]:IfStatement[274222-274360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[274249-274310]:Block[274249-274310]"
  }, {
    "left" : "matchPatterns = new HashMap<String, Pattern>();",
    "right" : "matchPatterns = new HashMap<String, Pattern>();",
    "info" : "ExpressionStatement[274257-274304]:ExpressionStatement[274257-274304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[274316-274360]:Block[274316-274360]"
  }, {
    "left" : "p = matchPatterns.get(regexp);",
    "right" : "p = matchPatterns.get(regexp);",
    "info" : "ExpressionStatement[274324-274354]:ExpressionStatement[274324-274354]"
  }, {
    "left" : "if (p == null)",
    "right" : "if (p == null)",
    "info" : "IfStatement[274365-275092]:IfStatement[274365-275092]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[274380-275092]:Block[274380-275092]"
  }, {
    "left" : "if (matchPatterns.size() == 10)",
    "right" : "if (matchPatterns.size() == 10)",
    "info" : "IfStatement[274388-274979]:IfStatement[274388-274979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[274420-274979]:Block[274420-274979]"
  }, {
    "left" : "matchPatterns.clear();",
    "right" : "matchPatterns.clear();",
    "info" : "ExpressionStatement[274949-274971]:ExpressionStatement[274949-274971]"
  }, {
    "left" : "p = Pattern.compile(regexp, Pattern.MULTILINE | Pattern.DOTALL);",
    "right" : "p = Pattern.compile(regexp, Pattern.MULTILINE | Pattern.DOTALL);",
    "info" : "ExpressionStatement[274986-275050]:ExpressionStatement[274986-275050]"
  }, {
    "left" : "matchPatterns.put(regexp, p);",
    "right" : "matchPatterns.put(regexp, p);",
    "info" : "ExpressionStatement[275057-275086]:ExpressionStatement[275057-275086]"
  }, {
    "left" : "return p;",
    "right" : "return p;",
    "info" : "ReturnStatement[275097-275106]:ReturnStatement[275097-275106]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[276804-277104]:Block[276804-277104]"
  }, {
    "left" : "Pattern p = matchPattern(regexp);",
    "right" : "Pattern p = matchPattern(regexp);",
    "info" : "VariableDeclarationStatement[276810-276843]:VariableDeclarationStatement[276810-276843]"
  }, {
    "left" : "Matcher m = p.matcher(str);",
    "right" : "Matcher m = p.matcher(str);",
    "info" : "VariableDeclarationStatement[276848-276875]:VariableDeclarationStatement[276848-276875]"
  }, {
    "left" : "if (m.find())",
    "right" : "if (m.find())",
    "info" : "IfStatement[276880-277083]:IfStatement[276880-277083]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[276894-277083]:Block[276894-277083]"
  }, {
    "left" : "int count = m.groupCount() + 1;",
    "right" : "int count = m.groupCount() + 1;",
    "info" : "VariableDeclarationStatement[276902-276933]:VariableDeclarationStatement[276902-276933]"
  }, {
    "left" : "String[] groups = new String[count];",
    "right" : "String[] groups = new String[count];",
    "info" : "VariableDeclarationStatement[276940-276976]:VariableDeclarationStatement[276940-276976]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[276983-277056]:ForStatement[276983-277056]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[277015-277056]:Block[277015-277056]"
  }, {
    "left" : "groups[i] = m.group(i);",
    "right" : "groups[i] = m.group(i);",
    "info" : "ExpressionStatement[277025-277048]:ExpressionStatement[277025-277048]"
  }, {
    "left" : "return groups;",
    "right" : "return groups;",
    "info" : "ReturnStatement[277063-277077]:ReturnStatement[277063-277077]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[277088-277100]:ReturnStatement[277088-277100]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[278889-279462]:Block[278889-279462]"
  }, {
    "left" : "Pattern p = matchPattern(regexp);",
    "right" : "Pattern p = matchPattern(regexp);",
    "info" : "VariableDeclarationStatement[278895-278928]:VariableDeclarationStatement[278895-278928]"
  }, {
    "left" : "Matcher m = p.matcher(str);",
    "right" : "Matcher m = p.matcher(str);",
    "info" : "VariableDeclarationStatement[278933-278960]:VariableDeclarationStatement[278933-278960]"
  }, {
    "left" : "ArrayList<String[]> results = new ArrayList<String[]>();",
    "right" : "ArrayList<String[]> results = new ArrayList<String[]>();",
    "info" : "VariableDeclarationStatement[278965-279021]:VariableDeclarationStatement[278965-279021]"
  }, {
    "left" : "int count = m.groupCount() + 1;",
    "right" : "int count = m.groupCount() + 1;",
    "info" : "VariableDeclarationStatement[279026-279057]:VariableDeclarationStatement[279026-279057]"
  }, {
    "left" : "while (m.find())",
    "right" : "while (m.find())",
    "info" : "WhileStatement[279062-279236]:WhileStatement[279062-279236]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[279079-279236]:Block[279079-279236]"
  }, {
    "left" : "String[] groups = new String[count];",
    "right" : "String[] groups = new String[count];",
    "info" : "VariableDeclarationStatement[279087-279123]:VariableDeclarationStatement[279087-279123]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[279130-279203]:ForStatement[279130-279203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[279162-279203]:Block[279162-279203]"
  }, {
    "left" : "groups[i] = m.group(i);",
    "right" : "groups[i] = m.group(i);",
    "info" : "ExpressionStatement[279172-279195]:ExpressionStatement[279172-279195]"
  }, {
    "left" : "results.add(groups);",
    "right" : "results.add(groups);",
    "info" : "ExpressionStatement[279210-279230]:ExpressionStatement[279210-279230]"
  }, {
    "left" : "if (results.isEmpty())",
    "right" : "if (results.isEmpty())",
    "info" : "IfStatement[279241-279290]:IfStatement[279241-279290]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[279264-279290]:Block[279264-279290]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[279272-279284]:ReturnStatement[279272-279284]"
  }, {
    "left" : "String[][] matches = new String[results.size()][count];",
    "right" : "String[][] matches = new String[results.size()][count];",
    "info" : "VariableDeclarationStatement[279295-279350]:VariableDeclarationStatement[279295-279350]"
  }, {
    "left" : "for (int i = 0; i < matches.length; i++)",
    "right" : "for (int i = 0; i < matches.length; i++)",
    "info" : "ForStatement[279355-279438]:ForStatement[279355-279438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[279396-279438]:Block[279396-279438]"
  }, {
    "left" : "matches[i] = results.get(i);",
    "right" : "matches[i] = results.get(i);",
    "info" : "ExpressionStatement[279404-279432]:ExpressionStatement[279404-279432]"
  }, {
    "left" : "return matches;",
    "right" : "return matches;",
    "info" : "ReturnStatement[279443-279458]:ReturnStatement[279443-279458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[280257-280286]:Block[280257-280286]"
  }, {
    "left" : "return (what != 0);",
    "right" : "return (what != 0);",
    "info" : "ReturnStatement[280263-280282]:ReturnStatement[280263-280282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[280621-280665]:Block[280621-280665]"
  }, {
    "left" : "return Boolean.parseBoolean(what);",
    "right" : "return Boolean.parseBoolean(what);",
    "info" : "ReturnStatement[280627-280661]:ReturnStatement[280627-280661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[281820-281983]:Block[281820-281983]"
  }, {
    "left" : "boolean outgoing[] = new boolean[what.length];",
    "right" : "boolean outgoing[] = new boolean[what.length];",
    "info" : "VariableDeclarationStatement[281826-281872]:VariableDeclarationStatement[281826-281872]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[281877-281958]:ForStatement[281877-281958]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[281915-281958]:Block[281915-281958]"
  }, {
    "left" : "outgoing[i] = (what[i] != 0);",
    "right" : "outgoing[i] = (what[i] != 0);",
    "info" : "ExpressionStatement[281923-281952]:ExpressionStatement[281923-281952]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[281963-281979]:ReturnStatement[281963-281979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[282351-282529]:Block[282351-282529]"
  }, {
    "left" : "boolean outgoing[] = new boolean[what.length];",
    "right" : "boolean outgoing[] = new boolean[what.length];",
    "info" : "VariableDeclarationStatement[282357-282403]:VariableDeclarationStatement[282357-282403]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[282408-282504]:ForStatement[282408-282504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[282446-282504]:Block[282446-282504]"
  }, {
    "left" : "outgoing[i] = Boolean.parseBoolean(what[i]);",
    "right" : "outgoing[i] = Boolean.parseBoolean(what[i]);",
    "info" : "ExpressionStatement[282454-282498]:ExpressionStatement[282454-282498]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[282509-282525]:ReturnStatement[282509-282525]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[282656-282692]:Block[282656-282692]"
  }, {
    "left" : "return what ? (byte)1 : 0;",
    "right" : "return what ? (byte)1 : 0;",
    "info" : "ReturnStatement[282662-282688]:ReturnStatement[282662-282688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[282742-282771]:Block[282742-282771]"
  }, {
    "left" : "return (byte) what;",
    "right" : "return (byte) what;",
    "info" : "ReturnStatement[282748-282767]:ReturnStatement[282748-282767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[282820-282849]:Block[282820-282849]"
  }, {
    "left" : "return (byte) what;",
    "right" : "return (byte) what;",
    "info" : "ReturnStatement[282826-282845]:ReturnStatement[282826-282845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[282900-282929]:Block[282900-282929]"
  }, {
    "left" : "return (byte) what;",
    "right" : "return (byte) what;",
    "info" : "ReturnStatement[282906-282925]:ReturnStatement[282906-282925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283200-283364]:Block[283200-283364]"
  }, {
    "left" : "byte outgoing[] = new byte[what.length];",
    "right" : "byte outgoing[] = new byte[what.length];",
    "info" : "VariableDeclarationStatement[283206-283246]:VariableDeclarationStatement[283206-283246]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[283251-283339]:ForStatement[283251-283339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283289-283339]:Block[283289-283339]"
  }, {
    "left" : "outgoing[i] = what[i] ? (byte)1 : 0;",
    "right" : "outgoing[i] = what[i] ? (byte)1 : 0;",
    "info" : "ExpressionStatement[283297-283333]:ExpressionStatement[283297-283333]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[283344-283360]:ReturnStatement[283344-283360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283418-283575]:Block[283418-283575]"
  }, {
    "left" : "byte outgoing[] = new byte[what.length];",
    "right" : "byte outgoing[] = new byte[what.length];",
    "info" : "VariableDeclarationStatement[283424-283464]:VariableDeclarationStatement[283424-283464]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[283469-283550]:ForStatement[283469-283550]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283507-283550]:Block[283507-283550]"
  }, {
    "left" : "outgoing[i] = (byte) what[i];",
    "right" : "outgoing[i] = (byte) what[i];",
    "info" : "ExpressionStatement[283515-283544]:ExpressionStatement[283515-283544]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[283555-283571]:ReturnStatement[283555-283571]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283628-283785]:Block[283628-283785]"
  }, {
    "left" : "byte outgoing[] = new byte[what.length];",
    "right" : "byte outgoing[] = new byte[what.length];",
    "info" : "VariableDeclarationStatement[283634-283674]:VariableDeclarationStatement[283634-283674]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[283679-283760]:ForStatement[283679-283760]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283717-283760]:Block[283717-283760]"
  }, {
    "left" : "outgoing[i] = (byte) what[i];",
    "right" : "outgoing[i] = (byte) what[i];",
    "info" : "ExpressionStatement[283725-283754]:ExpressionStatement[283725-283754]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[283765-283781]:ReturnStatement[283765-283781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283840-283997]:Block[283840-283997]"
  }, {
    "left" : "byte outgoing[] = new byte[what.length];",
    "right" : "byte outgoing[] = new byte[what.length];",
    "info" : "VariableDeclarationStatement[283846-283886]:VariableDeclarationStatement[283846-283886]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[283891-283972]:ForStatement[283891-283972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[283929-283972]:Block[283929-283972]"
  }, {
    "left" : "outgoing[i] = (byte) what[i];",
    "right" : "outgoing[i] = (byte) what[i];",
    "info" : "ExpressionStatement[283937-283966]:ExpressionStatement[283937-283966]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[283977-283993]:ReturnStatement[283977-283993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[284488-284526]:Block[284488-284526]"
  }, {
    "left" : "return (char) (what & 0xff);",
    "right" : "return (char) (what & 0xff);",
    "info" : "ReturnStatement[284494-284522]:ReturnStatement[284494-284522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[284575-284604]:Block[284575-284604]"
  }, {
    "left" : "return (char) what;",
    "right" : "return (char) what;",
    "info" : "ReturnStatement[284581-284600]:ReturnStatement[284581-284600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[285192-285358]:Block[285192-285358]"
  }, {
    "left" : "char outgoing[] = new char[what.length];",
    "right" : "char outgoing[] = new char[what.length];",
    "info" : "VariableDeclarationStatement[285198-285238]:VariableDeclarationStatement[285198-285238]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[285243-285333]:ForStatement[285243-285333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[285281-285333]:Block[285281-285333]"
  }, {
    "left" : "outgoing[i] = (char) (what[i] & 0xff);",
    "right" : "outgoing[i] = (char) (what[i] & 0xff);",
    "info" : "ExpressionStatement[285289-285327]:ExpressionStatement[285289-285327]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[285338-285354]:ReturnStatement[285338-285354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[285411-285568]:Block[285411-285568]"
  }, {
    "left" : "char outgoing[] = new char[what.length];",
    "right" : "char outgoing[] = new char[what.length];",
    "info" : "VariableDeclarationStatement[285417-285457]:VariableDeclarationStatement[285417-285457]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[285462-285543]:ForStatement[285462-285543]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[285500-285543]:Block[285500-285543]"
  }, {
    "left" : "outgoing[i] = (char) what[i];",
    "right" : "outgoing[i] = (char) what[i];",
    "info" : "ExpressionStatement[285508-285537]:ExpressionStatement[285508-285537]"
  }, {
    "left" : "return outgoing;",
    "right" : "return outgoing;",
    "info" : "ReturnStatement[285548-285564]:ReturnStatement[285548-285564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[286177-286207]:Block[286177-286207]"
  }, {
    "left" : "return what ? 1 : 0;",
    "right" : "return what ? 1 : 0;",
    "info" : "ReturnStatement[286183-286203]:ReturnStatement[286183-286203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[286327-286356]:Block[286327-286356]"
  }, {
    "left" : "return what & 0xff;",
    "right" : "return what & 0xff;",
    "info" : "ReturnStatement[286333-286352]:ReturnStatement[286333-286352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[286634-286656]:Block[286634-286656]"
  }, {
    "left" : "return what;",
    "right" : "return what;",
    "info" : "ReturnStatement[286640-286652]:ReturnStatement[286640-286652]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[286757-286785]:Block[286757-286785]"
  }, {
    "left" : "return (int) what;",
    "right" : "return (int) what;",
    "info" : "ReturnStatement[286763-286781]:ReturnStatement[286763-286781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[286917-286952]:Block[286917-286952]"
  }, {
    "left" : "return parseInt(what, 0);",
    "right" : "return parseInt(what, 0);",
    "info" : "ReturnStatement[286923-286948]:ReturnStatement[286923-286948]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287144-287409]:Block[287144-287409]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[287150-287383]:TryStatement[287150-287383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287154-287347]:Block[287154-287347]"
  }, {
    "left" : "int offset = what.indexOf('.');",
    "right" : "int offset = what.indexOf('.');",
    "info" : "VariableDeclarationStatement[287162-287193]:VariableDeclarationStatement[287162-287193]"
  }, {
    "left" : "if (offset == -1)",
    "right" : "if (offset == -1)",
    "info" : "IfStatement[287200-287341]:IfStatement[287200-287341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287218-287266]:Block[287218-287266]"
  }, {
    "left" : "return Integer.parseInt(what);",
    "right" : "return Integer.parseInt(what);",
    "info" : "ReturnStatement[287228-287258]:ReturnStatement[287228-287258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287272-287341]:Block[287272-287341]"
  }, {
    "left" : "return Integer.parseInt(what.substring(0, offset));",
    "right" : "return Integer.parseInt(what.substring(0, offset));",
    "info" : "ReturnStatement[287282-287333]:ReturnStatement[287282-287333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287380-287383]:Block[287380-287383]"
  }, {
    "left" : "return otherwise;",
    "right" : "return otherwise;",
    "info" : "ReturnStatement[287388-287405]:ReturnStatement[287388-287405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287538-287682]:Block[287538-287682]"
  }, {
    "left" : "int list[] = new int[what.length];",
    "right" : "int list[] = new int[what.length];",
    "info" : "VariableDeclarationStatement[287544-287578]:VariableDeclarationStatement[287544-287578]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[287583-287661]:ForStatement[287583-287661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287621-287661]:Block[287621-287661]"
  }, {
    "left" : "list[i] = what[i] ? 1 : 0;",
    "right" : "list[i] = what[i] ? 1 : 0;",
    "info" : "ExpressionStatement[287629-287655]:ExpressionStatement[287629-287655]"
  }, {
    "left" : "return list;",
    "right" : "return list;",
    "info" : "ReturnStatement[287666-287678]:ReturnStatement[287666-287678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287734-287901]:Block[287734-287901]"
  }, {
    "left" : "int list[] = new int[what.length];",
    "right" : "int list[] = new int[what.length];",
    "info" : "VariableDeclarationStatement[287762-287796]:VariableDeclarationStatement[287762-287796]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[287801-287880]:ForStatement[287801-287880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287839-287880]:Block[287839-287880]"
  }, {
    "left" : "list[i] = (what[i] & 0xff);",
    "right" : "list[i] = (what[i] & 0xff);",
    "info" : "ExpressionStatement[287847-287874]:ExpressionStatement[287847-287874]"
  }, {
    "left" : "return list;",
    "right" : "return list;",
    "info" : "ReturnStatement[287885-287897]:ReturnStatement[287885-287897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[287953-288089]:Block[287953-288089]"
  }, {
    "left" : "int list[] = new int[what.length];",
    "right" : "int list[] = new int[what.length];",
    "info" : "VariableDeclarationStatement[287959-287993]:VariableDeclarationStatement[287959-287993]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[287998-288068]:ForStatement[287998-288068]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[288036-288068]:Block[288036-288068]"
  }, {
    "left" : "list[i] = what[i];",
    "right" : "list[i] = what[i];",
    "info" : "ExpressionStatement[288044-288062]:ExpressionStatement[288044-288062]"
  }, {
    "left" : "return list;",
    "right" : "return list;",
    "info" : "ReturnStatement[288073-288085]:ReturnStatement[288073-288085]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[288136-288283]:Block[288136-288283]"
  }, {
    "left" : "int inties[] = new int[what.length];",
    "right" : "int inties[] = new int[what.length];",
    "info" : "VariableDeclarationStatement[288142-288178]:VariableDeclarationStatement[288142-288178]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[288183-288260]:ForStatement[288183-288260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[288221-288260]:Block[288221-288260]"
  }, {
    "left" : "inties[i] = (int)what[i];",
    "right" : "inties[i] = (int)what[i];",
    "info" : "ExpressionStatement[288229-288254]:ExpressionStatement[288229-288254]"
  }, {
    "left" : "return inties;",
    "right" : "return inties;",
    "info" : "ReturnStatement[288265-288279]:ReturnStatement[288265-288279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[288608-288643]:Block[288608-288643]"
  }, {
    "left" : "return parseInt(what, 0);",
    "right" : "return parseInt(what, 0);",
    "info" : "ReturnStatement[288614-288639]:ReturnStatement[288614-288639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289059-289312]:Block[289059-289312]"
  }, {
    "left" : "int output[] = new int[what.length];",
    "right" : "int output[] = new int[what.length];",
    "info" : "VariableDeclarationStatement[289065-289101]:VariableDeclarationStatement[289065-289101]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[289106-289289]:ForStatement[289106-289289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289144-289289]:Block[289144-289289]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[289152-289283]:TryStatement[289152-289283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289156-289212]:Block[289156-289212]"
  }, {
    "left" : "output[i] = Integer.parseInt(what[i]);",
    "right" : "output[i] = Integer.parseInt(what[i]);",
    "info" : "ExpressionStatement[289166-289204]:ExpressionStatement[289166-289204]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289245-289283]:Block[289245-289283]"
  }, {
    "left" : "output[i] = missing;",
    "right" : "output[i] = missing;",
    "info" : "ExpressionStatement[289255-289275]:ExpressionStatement[289255-289275]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[289294-289308]:ReturnStatement[289294-289308]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289652-289696]:Block[289652-289696]"
  }, {
    "left" : "return what;",
    "right" : "return what;",
    "info" : "ReturnStatement[289680-289692]:ReturnStatement[289680-289692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289750-289795]:Block[289750-289795]"
  }, {
    "left" : "return parseFloat(what, Float.NaN);",
    "right" : "return parseFloat(what, Float.NaN);",
    "info" : "ReturnStatement[289756-289791]:ReturnStatement[289756-289791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289866-289989]:Block[289866-289989]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[289872-289962]:TryStatement[289872-289962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289876-289926]:Block[289876-289926]"
  }, {
    "left" : "return new Float(what).floatValue();",
    "right" : "return new Float(what).floatValue();",
    "info" : "ReturnStatement[289884-289920]:ReturnStatement[289884-289920]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[289959-289962]:Block[289959-289962]"
  }, {
    "left" : "return otherwise;",
    "right" : "return otherwise;",
    "info" : "ReturnStatement[289968-289985]:ReturnStatement[289968-289985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[290563-290715]:Block[290563-290715]"
  }, {
    "left" : "float floaties[] = new float[what.length];",
    "right" : "float floaties[] = new float[what.length];",
    "info" : "VariableDeclarationStatement[290569-290611]:VariableDeclarationStatement[290569-290611]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[290616-290690]:ForStatement[290616-290690]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[290654-290690]:Block[290654-290690]"
  }, {
    "left" : "floaties[i] = what[i];",
    "right" : "floaties[i] = what[i];",
    "info" : "ExpressionStatement[290662-290684]:ExpressionStatement[290662-290684]"
  }, {
    "left" : "return floaties;",
    "right" : "return floaties;",
    "info" : "ReturnStatement[290695-290711]:ReturnStatement[290695-290711]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[290770-290922]:Block[290770-290922]"
  }, {
    "left" : "float floaties[] = new float[what.length];",
    "right" : "float floaties[] = new float[what.length];",
    "info" : "VariableDeclarationStatement[290776-290818]:VariableDeclarationStatement[290776-290818]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[290823-290897]:ForStatement[290823-290897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[290861-290897]:Block[290861-290897]"
  }, {
    "left" : "floaties[i] = what[i];",
    "right" : "floaties[i] = what[i];",
    "info" : "ExpressionStatement[290869-290891]:ExpressionStatement[290869-290891]"
  }, {
    "left" : "return floaties;",
    "right" : "return floaties;",
    "info" : "ReturnStatement[290902-290918]:ReturnStatement[290902-290918]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[290980-291025]:Block[290980-291025]"
  }, {
    "left" : "return parseFloat(what, Float.NaN);",
    "right" : "return parseFloat(what, Float.NaN);",
    "info" : "ReturnStatement[290986-291021]:ReturnStatement[290986-291021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291098-291361]:Block[291098-291361]"
  }, {
    "left" : "float output[] = new float[what.length];",
    "right" : "float output[] = new float[what.length];",
    "info" : "VariableDeclarationStatement[291104-291144]:VariableDeclarationStatement[291104-291144]"
  }, {
    "left" : "for (int i = 0; i < what.length; i++)",
    "right" : "for (int i = 0; i < what.length; i++)",
    "info" : "ForStatement[291149-291338]:ForStatement[291149-291338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291187-291338]:Block[291187-291338]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[291195-291332]:TryStatement[291195-291332]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291199-291261]:Block[291199-291261]"
  }, {
    "left" : "output[i] = new Float(what[i]).floatValue();",
    "right" : "output[i] = new Float(what[i]).floatValue();",
    "info" : "ExpressionStatement[291209-291253]:ExpressionStatement[291209-291253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291294-291332]:Block[291294-291332]"
  }, {
    "left" : "output[i] = missing;",
    "right" : "output[i] = missing;",
    "info" : "ExpressionStatement[291304-291324]:ExpressionStatement[291304-291324]"
  }, {
    "left" : "return output;",
    "right" : "return output;",
    "info" : "ReturnStatement[291343-291357]:ReturnStatement[291343-291357]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291481-291516]:Block[291481-291516]"
  }, {
    "left" : "return String.valueOf(x);",
    "right" : "return String.valueOf(x);",
    "info" : "ReturnStatement[291487-291512]:ReturnStatement[291487-291512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291559-291594]:Block[291559-291594]"
  }, {
    "left" : "return String.valueOf(x);",
    "right" : "return String.valueOf(x);",
    "info" : "ReturnStatement[291565-291590]:ReturnStatement[291565-291590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291637-291672]:Block[291637-291672]"
  }, {
    "left" : "return String.valueOf(x);",
    "right" : "return String.valueOf(x);",
    "info" : "ReturnStatement[291643-291668]:ReturnStatement[291643-291668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291714-291749]:Block[291714-291749]"
  }, {
    "left" : "return String.valueOf(x);",
    "right" : "return String.valueOf(x);",
    "info" : "ReturnStatement[291720-291745]:ReturnStatement[291720-291745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291793-291828]:Block[291793-291828]"
  }, {
    "left" : "return String.valueOf(x);",
    "right" : "return String.valueOf(x);",
    "info" : "ReturnStatement[291799-291824]:ReturnStatement[291799-291824]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[291952-292078]:Block[291952-292078]"
  }, {
    "left" : "String s[] = new String[x.length];",
    "right" : "String s[] = new String[x.length];",
    "info" : "VariableDeclarationStatement[291958-291992]:VariableDeclarationStatement[291958-291992]"
  }, {
    "left" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "right" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "info" : "ForStatement[291997-292060]:ForStatement[291997-292060]"
  }, {
    "left" : "s[i] = String.valueOf(x[i]);",
    "right" : "s[i] = String.valueOf(x[i]);",
    "info" : "ExpressionStatement[292032-292060]:ExpressionStatement[292032-292060]"
  }, {
    "left" : "return s;",
    "right" : "return s;",
    "info" : "ReturnStatement[292065-292074]:ReturnStatement[292065-292074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[292125-292251]:Block[292125-292251]"
  }, {
    "left" : "String s[] = new String[x.length];",
    "right" : "String s[] = new String[x.length];",
    "info" : "VariableDeclarationStatement[292131-292165]:VariableDeclarationStatement[292131-292165]"
  }, {
    "left" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "right" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "info" : "ForStatement[292170-292233]:ForStatement[292170-292233]"
  }, {
    "left" : "s[i] = String.valueOf(x[i]);",
    "right" : "s[i] = String.valueOf(x[i]);",
    "info" : "ExpressionStatement[292205-292233]:ExpressionStatement[292205-292233]"
  }, {
    "left" : "return s;",
    "right" : "return s;",
    "info" : "ReturnStatement[292238-292247]:ReturnStatement[292238-292247]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[292298-292424]:Block[292298-292424]"
  }, {
    "left" : "String s[] = new String[x.length];",
    "right" : "String s[] = new String[x.length];",
    "info" : "VariableDeclarationStatement[292304-292338]:VariableDeclarationStatement[292304-292338]"
  }, {
    "left" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "right" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "info" : "ForStatement[292343-292406]:ForStatement[292343-292406]"
  }, {
    "left" : "s[i] = String.valueOf(x[i]);",
    "right" : "s[i] = String.valueOf(x[i]);",
    "info" : "ExpressionStatement[292378-292406]:ExpressionStatement[292378-292406]"
  }, {
    "left" : "return s;",
    "right" : "return s;",
    "info" : "ReturnStatement[292411-292420]:ReturnStatement[292411-292420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[292470-292596]:Block[292470-292596]"
  }, {
    "left" : "String s[] = new String[x.length];",
    "right" : "String s[] = new String[x.length];",
    "info" : "VariableDeclarationStatement[292476-292510]:VariableDeclarationStatement[292476-292510]"
  }, {
    "left" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "right" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "info" : "ForStatement[292515-292578]:ForStatement[292515-292578]"
  }, {
    "left" : "s[i] = String.valueOf(x[i]);",
    "right" : "s[i] = String.valueOf(x[i]);",
    "info" : "ExpressionStatement[292550-292578]:ExpressionStatement[292550-292578]"
  }, {
    "left" : "return s;",
    "right" : "return s;",
    "info" : "ReturnStatement[292583-292592]:ReturnStatement[292583-292592]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[292644-292770]:Block[292644-292770]"
  }, {
    "left" : "String s[] = new String[x.length];",
    "right" : "String s[] = new String[x.length];",
    "info" : "VariableDeclarationStatement[292650-292684]:VariableDeclarationStatement[292650-292684]"
  }, {
    "left" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "right" : "for (int i = 0; i < x.length; i++) s[i] = String.valueOf(x[i]);",
    "info" : "ForStatement[292689-292752]:ForStatement[292689-292752]"
  }, {
    "left" : "s[i] = String.valueOf(x[i]);",
    "right" : "s[i] = String.valueOf(x[i]);",
    "info" : "ExpressionStatement[292724-292752]:ExpressionStatement[292724-292752]"
  }, {
    "left" : "return s;",
    "right" : "return s;",
    "info" : "ReturnStatement[292757-292766]:ReturnStatement[292757-292766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[293077-293249]:Block[293077-293249]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[293083-293127]:VariableDeclarationStatement[293083-293127]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[293132-293223]:ForStatement[293132-293223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[293175-293223]:Block[293175-293223]"
  }, {
    "left" : "formatted[i] = nf(num[i], digits);",
    "right" : "formatted[i] = nf(num[i], digits);",
    "info" : "ExpressionStatement[293183-293217]:ExpressionStatement[293183-293217]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[293228-293245]:ReturnStatement[293228-293245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[294249-294604]:Block[294249-294604]"
  }, {
    "left" : "if ((int_nf != null) &&\n        (int_nf_digits == digits) &&\n        !int_nf_commas)",
    "right" : "if ((int_nf != null) &&\n        (int_nf_digits == digits) &&\n        !int_nf_commas)",
    "info" : "IfStatement[294255-294380]:IfStatement[294255-294380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[294340-294380]:Block[294340-294380]"
  }, {
    "left" : "return int_nf.format(num);",
    "right" : "return int_nf.format(num);",
    "info" : "ReturnStatement[294348-294374]:ReturnStatement[294348-294374]"
  }, {
    "left" : "int_nf = NumberFormat.getInstance();",
    "right" : "int_nf = NumberFormat.getInstance();",
    "info" : "ExpressionStatement[294386-294422]:ExpressionStatement[294386-294422]"
  }, {
    "left" : "int_nf.setGroupingUsed(false);",
    "right" : "int_nf.setGroupingUsed(false);",
    "info" : "ExpressionStatement[294427-294457]:ExpressionStatement[294427-294457]"
  }, {
    "left" : "int_nf_commas = false;",
    "right" : "int_nf_commas = false;",
    "info" : "ExpressionStatement[294475-294497]:ExpressionStatement[294475-294497]"
  }, {
    "left" : "int_nf.setMinimumIntegerDigits(digits);",
    "right" : "int_nf.setMinimumIntegerDigits(digits);",
    "info" : "ExpressionStatement[294502-294541]:ExpressionStatement[294502-294541]"
  }, {
    "left" : "int_nf_digits = digits;",
    "right" : "int_nf_digits = digits;",
    "info" : "ExpressionStatement[294546-294569]:ExpressionStatement[294546-294569]"
  }, {
    "left" : "return int_nf.format(num);",
    "right" : "return int_nf.format(num);",
    "info" : "ReturnStatement[294574-294600]:ReturnStatement[294574-294600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[295347-295512]:Block[295347-295512]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[295353-295397]:VariableDeclarationStatement[295353-295397]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[295402-295486]:ForStatement[295402-295486]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[295445-295486]:Block[295445-295486]"
  }, {
    "left" : "formatted[i] = nfc(num[i]);",
    "right" : "formatted[i] = nfc(num[i]);",
    "info" : "ExpressionStatement[295453-295480]:ExpressionStatement[295453-295480]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[295491-295508]:ReturnStatement[295491-295508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[295808-296132]:Block[295808-296132]"
  }, {
    "left" : "if ((int_nf != null) &&\n        (int_nf_digits == 0) &&\n        int_nf_commas)",
    "right" : "if ((int_nf != null) &&\n        (int_nf_digits == 0) &&\n        int_nf_commas)",
    "info" : "IfStatement[295814-295933]:IfStatement[295814-295933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[295893-295933]:Block[295893-295933]"
  }, {
    "left" : "return int_nf.format(num);",
    "right" : "return int_nf.format(num);",
    "info" : "ReturnStatement[295901-295927]:ReturnStatement[295901-295927]"
  }, {
    "left" : "int_nf = NumberFormat.getInstance();",
    "right" : "int_nf = NumberFormat.getInstance();",
    "info" : "ExpressionStatement[295939-295975]:ExpressionStatement[295939-295975]"
  }, {
    "left" : "int_nf.setGroupingUsed(true);",
    "right" : "int_nf.setGroupingUsed(true);",
    "info" : "ExpressionStatement[295980-296009]:ExpressionStatement[295980-296009]"
  }, {
    "left" : "int_nf_commas = true;",
    "right" : "int_nf_commas = true;",
    "info" : "ExpressionStatement[296014-296035]:ExpressionStatement[296014-296035]"
  }, {
    "left" : "int_nf.setMinimumIntegerDigits(0);",
    "right" : "int_nf.setMinimumIntegerDigits(0);",
    "info" : "ExpressionStatement[296040-296074]:ExpressionStatement[296040-296074]"
  }, {
    "left" : "int_nf_digits = 0;",
    "right" : "int_nf_digits = 0;",
    "info" : "ExpressionStatement[296079-296097]:ExpressionStatement[296079-296097]"
  }, {
    "left" : "return int_nf.format(num);",
    "right" : "return int_nf.format(num);",
    "info" : "ReturnStatement[296102-296128]:ReturnStatement[296102-296128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[297158-297229]:Block[297158-297229]"
  }, {
    "left" : "return (num < 0) ? nf(num, digits) : (' ' + nf(num, digits));",
    "right" : "return (num < 0) ? nf(num, digits) : (' ' + nf(num, digits));",
    "info" : "ReturnStatement[297164-297225]:ReturnStatement[297164-297225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[297283-297456]:Block[297283-297456]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[297289-297333]:VariableDeclarationStatement[297289-297333]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[297338-297430]:ForStatement[297338-297430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[297381-297430]:Block[297381-297430]"
  }, {
    "left" : "formatted[i] = nfs(num[i], digits);",
    "right" : "formatted[i] = nfs(num[i], digits);",
    "info" : "ExpressionStatement[297389-297424]:ExpressionStatement[297389-297424]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[297435-297452]:ReturnStatement[297435-297452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[298366-298437]:Block[298366-298437]"
  }, {
    "left" : "return (num < 0) ? nf(num, digits) : ('+' + nf(num, digits));",
    "right" : "return (num < 0) ? nf(num, digits) : ('+' + nf(num, digits));",
    "info" : "ReturnStatement[298372-298433]:ReturnStatement[298372-298433]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[298491-298664]:Block[298491-298664]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[298497-298541]:VariableDeclarationStatement[298497-298541]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[298546-298638]:ForStatement[298546-298638]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[298589-298638]:Block[298589-298638]"
  }, {
    "left" : "formatted[i] = nfp(num[i], digits);",
    "right" : "formatted[i] = nfp(num[i], digits);",
    "info" : "ExpressionStatement[298597-298632]:ExpressionStatement[298597-298632]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[298643-298660]:ReturnStatement[298643-298660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[298962-299139]:Block[298962-299139]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[298968-299012]:VariableDeclarationStatement[298968-299012]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[299017-299113]:ForStatement[299017-299113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[299060-299113]:Block[299060-299113]"
  }, {
    "left" : "formatted[i] = nf(num[i], left, right);",
    "right" : "formatted[i] = nf(num[i], left, right);",
    "info" : "ExpressionStatement[299068-299107]:ExpressionStatement[299068-299107]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[299118-299135]:ReturnStatement[299118-299135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[299378-299935]:Block[299378-299935]"
  }, {
    "left" : "if ((float_nf != null) &&\n        (float_nf_left == left) &&\n        (float_nf_right == right) &&\n        !float_nf_commas)",
    "right" : "if ((float_nf != null) &&\n        (float_nf_left == left) &&\n        (float_nf_right == right) &&\n        !float_nf_commas)",
    "info" : "IfStatement[299384-299550]:IfStatement[299384-299550]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[299508-299550]:Block[299508-299550]"
  }, {
    "left" : "return float_nf.format(num);",
    "right" : "return float_nf.format(num);",
    "info" : "ReturnStatement[299516-299544]:ReturnStatement[299516-299544]"
  }, {
    "left" : "float_nf = NumberFormat.getInstance();",
    "right" : "float_nf = NumberFormat.getInstance();",
    "info" : "ExpressionStatement[299556-299594]:ExpressionStatement[299556-299594]"
  }, {
    "left" : "float_nf.setGroupingUsed(false);",
    "right" : "float_nf.setGroupingUsed(false);",
    "info" : "ExpressionStatement[299599-299631]:ExpressionStatement[299599-299631]"
  }, {
    "left" : "float_nf_commas = false;",
    "right" : "float_nf_commas = false;",
    "info" : "ExpressionStatement[299636-299660]:ExpressionStatement[299636-299660]"
  }, {
    "left" : "if (left != 0)",
    "right" : "if (left != 0)",
    "info" : "IfStatement[299666-299720]:IfStatement[299666-299720]"
  }, {
    "left" : "float_nf.setMinimumIntegerDigits(left);",
    "right" : "float_nf.setMinimumIntegerDigits(left);",
    "info" : "ExpressionStatement[299681-299720]:ExpressionStatement[299681-299720]"
  }, {
    "left" : "if (right != 0)",
    "right" : "if (right != 0)",
    "info" : "IfStatement[299725-299844]:IfStatement[299725-299844]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[299741-299844]:Block[299741-299844]"
  }, {
    "left" : "float_nf.setMinimumFractionDigits(right);",
    "right" : "float_nf.setMinimumFractionDigits(right);",
    "info" : "ExpressionStatement[299749-299790]:ExpressionStatement[299749-299790]"
  }, {
    "left" : "float_nf.setMaximumFractionDigits(right);",
    "right" : "float_nf.setMaximumFractionDigits(right);",
    "info" : "ExpressionStatement[299797-299838]:ExpressionStatement[299797-299838]"
  }, {
    "left" : "float_nf_left = left;",
    "right" : "float_nf_left = left;",
    "info" : "ExpressionStatement[299849-299870]:ExpressionStatement[299849-299870]"
  }, {
    "left" : "float_nf_right = right;",
    "right" : "float_nf_right = right;",
    "info" : "ExpressionStatement[299875-299898]:ExpressionStatement[299875-299898]"
  }, {
    "left" : "return float_nf.format(num);",
    "right" : "return float_nf.format(num);",
    "info" : "ReturnStatement[299903-299931]:ReturnStatement[299903-299931]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[300105-300277]:Block[300105-300277]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[300111-300155]:VariableDeclarationStatement[300111-300155]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[300160-300251]:ForStatement[300160-300251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[300203-300251]:Block[300203-300251]"
  }, {
    "left" : "formatted[i] = nfc(num[i], right);",
    "right" : "formatted[i] = nfc(num[i], right);",
    "info" : "ExpressionStatement[300211-300245]:ExpressionStatement[300211-300245]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[300256-300273]:ReturnStatement[300256-300273]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[300329-300818]:Block[300329-300818]"
  }, {
    "left" : "if ((float_nf != null) &&\n        (float_nf_left == 0) &&\n        (float_nf_right == right) &&\n        float_nf_commas)",
    "right" : "if ((float_nf != null) &&\n        (float_nf_left == 0) &&\n        (float_nf_right == right) &&\n        float_nf_commas)",
    "info" : "IfStatement[300335-300497]:IfStatement[300335-300497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[300455-300497]:Block[300455-300497]"
  }, {
    "left" : "return float_nf.format(num);",
    "right" : "return float_nf.format(num);",
    "info" : "ReturnStatement[300463-300491]:ReturnStatement[300463-300491]"
  }, {
    "left" : "float_nf = NumberFormat.getInstance();",
    "right" : "float_nf = NumberFormat.getInstance();",
    "info" : "ExpressionStatement[300503-300541]:ExpressionStatement[300503-300541]"
  }, {
    "left" : "float_nf.setGroupingUsed(true);",
    "right" : "float_nf.setGroupingUsed(true);",
    "info" : "ExpressionStatement[300546-300577]:ExpressionStatement[300546-300577]"
  }, {
    "left" : "float_nf_commas = true;",
    "right" : "float_nf_commas = true;",
    "info" : "ExpressionStatement[300582-300605]:ExpressionStatement[300582-300605]"
  }, {
    "left" : "if (right != 0)",
    "right" : "if (right != 0)",
    "info" : "IfStatement[300611-300730]:IfStatement[300611-300730]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[300627-300730]:Block[300627-300730]"
  }, {
    "left" : "float_nf.setMinimumFractionDigits(right);",
    "right" : "float_nf.setMinimumFractionDigits(right);",
    "info" : "ExpressionStatement[300635-300676]:ExpressionStatement[300635-300676]"
  }, {
    "left" : "float_nf.setMaximumFractionDigits(right);",
    "right" : "float_nf.setMaximumFractionDigits(right);",
    "info" : "ExpressionStatement[300683-300724]:ExpressionStatement[300683-300724]"
  }, {
    "left" : "float_nf_left = 0;",
    "right" : "float_nf_left = 0;",
    "info" : "ExpressionStatement[300735-300753]:ExpressionStatement[300735-300753]"
  }, {
    "left" : "float_nf_right = right;",
    "right" : "float_nf_right = right;",
    "info" : "ExpressionStatement[300758-300781]:ExpressionStatement[300758-300781]"
  }, {
    "left" : "return float_nf.format(num);",
    "right" : "return float_nf.format(num);",
    "info" : "ReturnStatement[300786-300814]:ReturnStatement[300786-300814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[301077-301255]:Block[301077-301255]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[301083-301127]:VariableDeclarationStatement[301083-301127]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[301132-301229]:ForStatement[301132-301229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[301175-301229]:Block[301175-301229]"
  }, {
    "left" : "formatted[i] = nfs(num[i], left, right);",
    "right" : "formatted[i] = nfs(num[i], left, right);",
    "info" : "ExpressionStatement[301183-301223]:ExpressionStatement[301183-301223]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[301234-301251]:ReturnStatement[301234-301251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[301316-301398]:Block[301316-301398]"
  }, {
    "left" : "return (num < 0) ? nf(num, left, right) :  (' ' + nf(num, left, right));",
    "right" : "return (num < 0) ? nf(num, left, right) :  (' ' + nf(num, left, right));",
    "info" : "ReturnStatement[301322-301394]:ReturnStatement[301322-301394]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[301615-301793]:Block[301615-301793]"
  }, {
    "left" : "String formatted[] = new String[num.length];",
    "right" : "String formatted[] = new String[num.length];",
    "info" : "VariableDeclarationStatement[301621-301665]:VariableDeclarationStatement[301621-301665]"
  }, {
    "left" : "for (int i = 0; i < formatted.length; i++)",
    "right" : "for (int i = 0; i < formatted.length; i++)",
    "info" : "ForStatement[301670-301767]:ForStatement[301670-301767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[301713-301767]:Block[301713-301767]"
  }, {
    "left" : "formatted[i] = nfp(num[i], left, right);",
    "right" : "formatted[i] = nfp(num[i], left, right);",
    "info" : "ExpressionStatement[301721-301761]:ExpressionStatement[301721-301761]"
  }, {
    "left" : "return formatted;",
    "right" : "return formatted;",
    "info" : "ReturnStatement[301772-301789]:ReturnStatement[301772-301789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[301854-301936]:Block[301854-301936]"
  }, {
    "left" : "return (num < 0) ? nf(num, left, right) :  ('+' + nf(num, left, right));",
    "right" : "return (num < 0) ? nf(num, left, right) :  ('+' + nf(num, left, right));",
    "info" : "ReturnStatement[301860-301932]:ReturnStatement[301860-301932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[302812-302843]:Block[302812-302843]"
  }, {
    "left" : "return hex(value, 2);",
    "right" : "return hex(value, 2);",
    "info" : "ReturnStatement[302818-302839]:ReturnStatement[302818-302839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[302890-302921]:Block[302890-302921]"
  }, {
    "left" : "return hex(value, 4);",
    "right" : "return hex(value, 4);",
    "info" : "ReturnStatement[302896-302917]:ReturnStatement[302896-302917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[302967-302998]:Block[302967-302998]"
  }, {
    "left" : "return hex(value, 8);",
    "right" : "return hex(value, 8);",
    "info" : "ReturnStatement[302973-302994]:ReturnStatement[302973-302994]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[303113-303456]:Block[303113-303456]"
  }, {
    "left" : "String stuff = Integer.toHexString(value).toUpperCase();",
    "right" : "String stuff = Integer.toHexString(value).toUpperCase();",
    "info" : "VariableDeclarationStatement[303119-303175]:VariableDeclarationStatement[303119-303175]"
  }, {
    "left" : "if (digits > 8)",
    "right" : "if (digits > 8)",
    "info" : "IfStatement[303180-303221]:IfStatement[303180-303221]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[303196-303221]:Block[303196-303221]"
  }, {
    "left" : "digits = 8;",
    "right" : "digits = 8;",
    "info" : "ExpressionStatement[303204-303215]:ExpressionStatement[303204-303215]"
  }, {
    "left" : "int length = stuff.length();",
    "right" : "int length = stuff.length();",
    "info" : "VariableDeclarationStatement[303227-303255]:VariableDeclarationStatement[303227-303255]"
  }, {
    "left" : "if (length > digits)",
    "right" : "if (length > digits)",
    "info" : "IfStatement[303260-303434]:IfStatement[303260-303434]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[303281-303336]:Block[303281-303336]"
  }, {
    "left" : "return stuff.substring(length - digits);",
    "right" : "return stuff.substring(length - digits);",
    "info" : "ReturnStatement[303289-303329]:ReturnStatement[303289-303329]"
  }, {
    "left" : "if (length < digits)",
    "right" : "if (length < digits)",
    "info" : "IfStatement[303342-303434]:IfStatement[303342-303434]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[303363-303434]:Block[303363-303434]"
  }, {
    "left" : "return \"00000000\".substring(8 - (digits-length)) + stuff;",
    "right" : "return \"00000000\".substring(8 - (digits-length)) + stuff;",
    "info" : "ReturnStatement[303371-303428]:ReturnStatement[303371-303428]"
  }, {
    "left" : "return stuff;",
    "right" : "return stuff;",
    "info" : "ReturnStatement[303439-303452]:ReturnStatement[303439-303452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[303880-304009]:Block[303880-304009]"
  }, {
    "left" : "return (int) (Long.parseLong(value, 16));",
    "right" : "return (int) (Long.parseLong(value, 16));",
    "info" : "ReturnStatement[303964-304005]:ReturnStatement[303964-304005]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[304192-304226]:Block[304192-304226]"
  }, {
    "left" : "return binary(value, 8);",
    "right" : "return binary(value, 8);",
    "info" : "ReturnStatement[304198-304222]:ReturnStatement[304198-304222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[304442-304477]:Block[304442-304477]"
  }, {
    "left" : "return binary(value, 16);",
    "right" : "return binary(value, 16);",
    "info" : "ReturnStatement[304448-304473]:ReturnStatement[304448-304473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[304759-304794]:Block[304759-304794]"
  }, {
    "left" : "return binary(value, 32);",
    "right" : "return binary(value, 32);",
    "info" : "ReturnStatement[304765-304790]:ReturnStatement[304765-304790]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[305786-306172]:Block[305786-306172]"
  }, {
    "left" : "String stuff = Integer.toBinaryString(value);",
    "right" : "String stuff = Integer.toBinaryString(value);",
    "info" : "VariableDeclarationStatement[305792-305837]:VariableDeclarationStatement[305792-305837]"
  }, {
    "left" : "if (digits > 32)",
    "right" : "if (digits > 32)",
    "info" : "IfStatement[305842-305885]:IfStatement[305842-305885]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[305859-305885]:Block[305859-305885]"
  }, {
    "left" : "digits = 32;",
    "right" : "digits = 32;",
    "info" : "ExpressionStatement[305867-305879]:ExpressionStatement[305867-305879]"
  }, {
    "left" : "int length = stuff.length();",
    "right" : "int length = stuff.length();",
    "info" : "VariableDeclarationStatement[305891-305919]:VariableDeclarationStatement[305891-305919]"
  }, {
    "left" : "if (length > digits)",
    "right" : "if (length > digits)",
    "info" : "IfStatement[305924-306150]:IfStatement[305924-306150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[305945-306000]:Block[305945-306000]"
  }, {
    "left" : "return stuff.substring(length - digits);",
    "right" : "return stuff.substring(length - digits);",
    "info" : "ReturnStatement[305953-305993]:ReturnStatement[305953-305993]"
  }, {
    "left" : "if (length < digits)",
    "right" : "if (length < digits)",
    "info" : "IfStatement[306006-306150]:IfStatement[306006-306150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[306027-306150]:Block[306027-306150]"
  }, {
    "left" : "int offset = 32 - (digits-length);",
    "right" : "int offset = 32 - (digits-length);",
    "info" : "VariableDeclarationStatement[306035-306069]:VariableDeclarationStatement[306035-306069]"
  }, {
    "left" : "return \"00000000000000000000000000000000\".substring(offset) + stuff;",
    "right" : "return \"00000000000000000000000000000000\".substring(offset) + stuff;",
    "info" : "ReturnStatement[306076-306144]:ReturnStatement[306076-306144]"
  }, {
    "left" : "return stuff;",
    "right" : "return stuff;",
    "info" : "ReturnStatement[306155-306168]:ReturnStatement[306155-306168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[306638-306682]:Block[306638-306682]"
  }, {
    "left" : "return Integer.parseInt(value, 2);",
    "right" : "return Integer.parseInt(value, 2);",
    "info" : "ReturnStatement[306644-306678]:ReturnStatement[306644-306678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[307605-307787]:Block[307605-307787]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[307611-307757]:IfStatement[307611-307757]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[307626-307757]:Block[307626-307757]"
  }, {
    "left" : "if (gray > 255)",
    "right" : "if (gray > 255)",
    "info" : "IfStatement[307634-307690]:IfStatement[307634-307690]"
  }, {
    "left" : "gray = 255;",
    "right" : "gray = 255;",
    "info" : "ExpressionStatement[307650-307661]:ExpressionStatement[307650-307661]"
  }, {
    "left" : "if (gray < 0)",
    "right" : "if (gray < 0)",
    "info" : "IfStatement[307667-307690]:IfStatement[307667-307690]"
  }, {
    "left" : "gray = 0;",
    "right" : "gray = 0;",
    "info" : "ExpressionStatement[307681-307690]:ExpressionStatement[307681-307690]"
  }, {
    "left" : "return 0xff000000 | (gray << 16) | (gray << 8) | gray;",
    "right" : "return 0xff000000 | (gray << 16) | (gray << 8) | gray;",
    "info" : "ReturnStatement[307697-307751]:ReturnStatement[307697-307751]"
  }, {
    "left" : "return g.color(gray);",
    "right" : "return g.color(gray);",
    "info" : "ReturnStatement[307762-307783]:ReturnStatement[307762-307783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[307921-308134]:Block[307921-308134]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[307927-308103]:IfStatement[307927-308103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[307942-308103]:Block[307942-308103]"
  }, {
    "left" : "int gray = (int) fgray;",
    "right" : "int gray = (int) fgray;",
    "info" : "VariableDeclarationStatement[307950-307973]:VariableDeclarationStatement[307950-307973]"
  }, {
    "left" : "if (gray > 255)",
    "right" : "if (gray > 255)",
    "info" : "IfStatement[307980-308036]:IfStatement[307980-308036]"
  }, {
    "left" : "gray = 255;",
    "right" : "gray = 255;",
    "info" : "ExpressionStatement[307996-308007]:ExpressionStatement[307996-308007]"
  }, {
    "left" : "if (gray < 0)",
    "right" : "if (gray < 0)",
    "info" : "IfStatement[308013-308036]:IfStatement[308013-308036]"
  }, {
    "left" : "gray = 0;",
    "right" : "gray = 0;",
    "info" : "ExpressionStatement[308027-308036]:ExpressionStatement[308027-308036]"
  }, {
    "left" : "return 0xff000000 | (gray << 16) | (gray << 8) | gray;",
    "right" : "return 0xff000000 | (gray << 16) | (gray << 8) | gray;",
    "info" : "ReturnStatement[308043-308097]:ReturnStatement[308043-308097]"
  }, {
    "left" : "return g.color(fgray);",
    "right" : "return g.color(fgray);",
    "info" : "ReturnStatement[308108-308130]:ReturnStatement[308108-308130]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[308299-308711]:Block[308299-308711]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[308305-308674]:IfStatement[308305-308674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[308320-308674]:Block[308320-308674]"
  }, {
    "left" : "if (alpha > 255)",
    "right" : "if (alpha > 255)",
    "info" : "IfStatement[308328-308388]:IfStatement[308328-308388]"
  }, {
    "left" : "alpha = 255;",
    "right" : "alpha = 255;",
    "info" : "ExpressionStatement[308345-308357]:ExpressionStatement[308345-308357]"
  }, {
    "left" : "if (alpha < 0)",
    "right" : "if (alpha < 0)",
    "info" : "IfStatement[308363-308388]:IfStatement[308363-308388]"
  }, {
    "left" : "alpha = 0;",
    "right" : "alpha = 0;",
    "info" : "ExpressionStatement[308378-308388]:ExpressionStatement[308378-308388]"
  }, {
    "left" : "if (gray > 255)",
    "right" : "if (gray > 255)",
    "info" : "IfStatement[308395-308668]:IfStatement[308395-308668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[308411-308520]:Block[308411-308520]"
  }, {
    "left" : "return (alpha << 24) | (gray & 0xFFFFFF);",
    "right" : "return (alpha << 24) | (gray & 0xFFFFFF);",
    "info" : "ReturnStatement[308471-308512]:ReturnStatement[308471-308512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[308526-308668]:Block[308526-308668]"
  }, {
    "left" : "return (alpha << 24) | (gray << 16) | (gray << 8) | gray;",
    "right" : "return (alpha << 24) | (gray << 16) | (gray << 8) | gray;",
    "info" : "ReturnStatement[308603-308660]:ReturnStatement[308603-308660]"
  }, {
    "left" : "return g.color(gray, alpha);",
    "right" : "return g.color(gray, alpha);",
    "info" : "ReturnStatement[308679-308707]:ReturnStatement[308679-308707]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[308793-309116]:Block[308793-309116]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[308799-309077]:IfStatement[308799-309077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[308814-309077]:Block[308814-309077]"
  }, {
    "left" : "int gray = (int) fgray;",
    "right" : "int gray = (int) fgray;",
    "info" : "VariableDeclarationStatement[308822-308845]:VariableDeclarationStatement[308822-308845]"
  }, {
    "left" : "int alpha = (int) falpha;",
    "right" : "int alpha = (int) falpha;",
    "info" : "VariableDeclarationStatement[308852-308877]:VariableDeclarationStatement[308852-308877]"
  }, {
    "left" : "if (gray > 255)",
    "right" : "if (gray > 255)",
    "info" : "IfStatement[308884-308940]:IfStatement[308884-308940]"
  }, {
    "left" : "gray = 255;",
    "right" : "gray = 255;",
    "info" : "ExpressionStatement[308900-308911]:ExpressionStatement[308900-308911]"
  }, {
    "left" : "if (gray < 0)",
    "right" : "if (gray < 0)",
    "info" : "IfStatement[308917-308940]:IfStatement[308917-308940]"
  }, {
    "left" : "gray = 0;",
    "right" : "gray = 0;",
    "info" : "ExpressionStatement[308931-308940]:ExpressionStatement[308931-308940]"
  }, {
    "left" : "if (alpha > 255)",
    "right" : "if (alpha > 255)",
    "info" : "IfStatement[308947-309007]:IfStatement[308947-309007]"
  }, {
    "left" : "alpha = 255;",
    "right" : "alpha = 255;",
    "info" : "ExpressionStatement[308964-308976]:ExpressionStatement[308964-308976]"
  }, {
    "left" : "if (alpha < 0)",
    "right" : "if (alpha < 0)",
    "info" : "IfStatement[308982-309007]:IfStatement[308982-309007]"
  }, {
    "left" : "alpha = 0;",
    "right" : "alpha = 0;",
    "info" : "ExpressionStatement[308997-309007]:ExpressionStatement[308997-309007]"
  }, {
    "left" : "return (alpha << 24) | (gray << 16) | (gray << 8) | gray;",
    "right" : "return (alpha << 24) | (gray << 16) | (gray << 8) | gray;",
    "info" : "ReturnStatement[309014-309071]:ReturnStatement[309014-309071]"
  }, {
    "left" : "return g.color(fgray, falpha);",
    "right" : "return g.color(fgray, falpha);",
    "info" : "ReturnStatement[309082-309112]:ReturnStatement[309082-309112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[309404-309689]:Block[309404-309689]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[309410-309653]:IfStatement[309410-309653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[309425-309653]:Block[309425-309653]"
  }, {
    "left" : "if (v1 > 255)",
    "right" : "if (v1 > 255)",
    "info" : "IfStatement[309433-309481]:IfStatement[309433-309481]"
  }, {
    "left" : "v1 = 255;",
    "right" : "v1 = 255;",
    "info" : "ExpressionStatement[309447-309456]:ExpressionStatement[309447-309456]"
  }, {
    "left" : "if (v1 < 0)",
    "right" : "if (v1 < 0)",
    "info" : "IfStatement[309462-309481]:IfStatement[309462-309481]"
  }, {
    "left" : "v1 = 0;",
    "right" : "v1 = 0;",
    "info" : "ExpressionStatement[309474-309481]:ExpressionStatement[309474-309481]"
  }, {
    "left" : "if (v2 > 255)",
    "right" : "if (v2 > 255)",
    "info" : "IfStatement[309488-309536]:IfStatement[309488-309536]"
  }, {
    "left" : "v2 = 255;",
    "right" : "v2 = 255;",
    "info" : "ExpressionStatement[309502-309511]:ExpressionStatement[309502-309511]"
  }, {
    "left" : "if (v2 < 0)",
    "right" : "if (v2 < 0)",
    "info" : "IfStatement[309517-309536]:IfStatement[309517-309536]"
  }, {
    "left" : "v2 = 0;",
    "right" : "v2 = 0;",
    "info" : "ExpressionStatement[309529-309536]:ExpressionStatement[309529-309536]"
  }, {
    "left" : "if (v3 > 255)",
    "right" : "if (v3 > 255)",
    "info" : "IfStatement[309543-309591]:IfStatement[309543-309591]"
  }, {
    "left" : "v3 = 255;",
    "right" : "v3 = 255;",
    "info" : "ExpressionStatement[309557-309566]:ExpressionStatement[309557-309566]"
  }, {
    "left" : "if (v3 < 0)",
    "right" : "if (v3 < 0)",
    "info" : "IfStatement[309572-309591]:IfStatement[309572-309591]"
  }, {
    "left" : "v3 = 0;",
    "right" : "v3 = 0;",
    "info" : "ExpressionStatement[309584-309591]:ExpressionStatement[309584-309591]"
  }, {
    "left" : "return 0xff000000 | (v1 << 16) | (v2 << 8) | v3;",
    "right" : "return 0xff000000 | (v1 << 16) | (v2 << 8) | v3;",
    "info" : "ReturnStatement[309599-309647]:ReturnStatement[309599-309647]"
  }, {
    "left" : "return g.color(v1, v2, v3);",
    "right" : "return g.color(v1, v2, v3);",
    "info" : "ReturnStatement[309658-309685]:ReturnStatement[309658-309685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[309752-310114]:Block[309752-310114]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[309758-310071]:IfStatement[309758-310071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[309773-310071]:Block[309773-310071]"
  }, {
    "left" : "if (alpha > 255)",
    "right" : "if (alpha > 255)",
    "info" : "IfStatement[309781-309841]:IfStatement[309781-309841]"
  }, {
    "left" : "alpha = 255;",
    "right" : "alpha = 255;",
    "info" : "ExpressionStatement[309798-309810]:ExpressionStatement[309798-309810]"
  }, {
    "left" : "if (alpha < 0)",
    "right" : "if (alpha < 0)",
    "info" : "IfStatement[309816-309841]:IfStatement[309816-309841]"
  }, {
    "left" : "alpha = 0;",
    "right" : "alpha = 0;",
    "info" : "ExpressionStatement[309831-309841]:ExpressionStatement[309831-309841]"
  }, {
    "left" : "if (v1 > 255)",
    "right" : "if (v1 > 255)",
    "info" : "IfStatement[309848-309896]:IfStatement[309848-309896]"
  }, {
    "left" : "v1 = 255;",
    "right" : "v1 = 255;",
    "info" : "ExpressionStatement[309862-309871]:ExpressionStatement[309862-309871]"
  }, {
    "left" : "if (v1 < 0)",
    "right" : "if (v1 < 0)",
    "info" : "IfStatement[309877-309896]:IfStatement[309877-309896]"
  }, {
    "left" : "v1 = 0;",
    "right" : "v1 = 0;",
    "info" : "ExpressionStatement[309889-309896]:ExpressionStatement[309889-309896]"
  }, {
    "left" : "if (v2 > 255)",
    "right" : "if (v2 > 255)",
    "info" : "IfStatement[309903-309951]:IfStatement[309903-309951]"
  }, {
    "left" : "v2 = 255;",
    "right" : "v2 = 255;",
    "info" : "ExpressionStatement[309917-309926]:ExpressionStatement[309917-309926]"
  }, {
    "left" : "if (v2 < 0)",
    "right" : "if (v2 < 0)",
    "info" : "IfStatement[309932-309951]:IfStatement[309932-309951]"
  }, {
    "left" : "v2 = 0;",
    "right" : "v2 = 0;",
    "info" : "ExpressionStatement[309944-309951]:ExpressionStatement[309944-309951]"
  }, {
    "left" : "if (v3 > 255)",
    "right" : "if (v3 > 255)",
    "info" : "IfStatement[309958-310006]:IfStatement[309958-310006]"
  }, {
    "left" : "v3 = 255;",
    "right" : "v3 = 255;",
    "info" : "ExpressionStatement[309972-309981]:ExpressionStatement[309972-309981]"
  }, {
    "left" : "if (v3 < 0)",
    "right" : "if (v3 < 0)",
    "info" : "IfStatement[309987-310006]:IfStatement[309987-310006]"
  }, {
    "left" : "v3 = 0;",
    "right" : "v3 = 0;",
    "info" : "ExpressionStatement[309999-310006]:ExpressionStatement[309999-310006]"
  }, {
    "left" : "return (alpha << 24) | (v1 << 16) | (v2 << 8) | v3;",
    "right" : "return (alpha << 24) | (v1 << 16) | (v2 << 8) | v3;",
    "info" : "ReturnStatement[310014-310065]:ReturnStatement[310014-310065]"
  }, {
    "left" : "return g.color(v1, v2, v3, alpha);",
    "right" : "return g.color(v1, v2, v3, alpha);",
    "info" : "ReturnStatement[310076-310110]:ReturnStatement[310076-310110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[310172-310472]:Block[310172-310472]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[310178-310436]:IfStatement[310178-310436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[310193-310436]:Block[310193-310436]"
  }, {
    "left" : "if (v1 > 255)",
    "right" : "if (v1 > 255)",
    "info" : "IfStatement[310201-310249]:IfStatement[310201-310249]"
  }, {
    "left" : "v1 = 255;",
    "right" : "v1 = 255;",
    "info" : "ExpressionStatement[310215-310224]:ExpressionStatement[310215-310224]"
  }, {
    "left" : "if (v1 < 0)",
    "right" : "if (v1 < 0)",
    "info" : "IfStatement[310230-310249]:IfStatement[310230-310249]"
  }, {
    "left" : "v1 = 0;",
    "right" : "v1 = 0;",
    "info" : "ExpressionStatement[310242-310249]:ExpressionStatement[310242-310249]"
  }, {
    "left" : "if (v2 > 255)",
    "right" : "if (v2 > 255)",
    "info" : "IfStatement[310256-310304]:IfStatement[310256-310304]"
  }, {
    "left" : "v2 = 255;",
    "right" : "v2 = 255;",
    "info" : "ExpressionStatement[310270-310279]:ExpressionStatement[310270-310279]"
  }, {
    "left" : "if (v2 < 0)",
    "right" : "if (v2 < 0)",
    "info" : "IfStatement[310285-310304]:IfStatement[310285-310304]"
  }, {
    "left" : "v2 = 0;",
    "right" : "v2 = 0;",
    "info" : "ExpressionStatement[310297-310304]:ExpressionStatement[310297-310304]"
  }, {
    "left" : "if (v3 > 255)",
    "right" : "if (v3 > 255)",
    "info" : "IfStatement[310311-310359]:IfStatement[310311-310359]"
  }, {
    "left" : "v3 = 255;",
    "right" : "v3 = 255;",
    "info" : "ExpressionStatement[310325-310334]:ExpressionStatement[310325-310334]"
  }, {
    "left" : "if (v3 < 0)",
    "right" : "if (v3 < 0)",
    "info" : "IfStatement[310340-310359]:IfStatement[310340-310359]"
  }, {
    "left" : "v3 = 0;",
    "right" : "v3 = 0;",
    "info" : "ExpressionStatement[310352-310359]:ExpressionStatement[310352-310359]"
  }, {
    "left" : "return 0xff000000 | ((int)v1 << 16) | ((int)v2 << 8) | (int)v3;",
    "right" : "return 0xff000000 | ((int)v1 << 16) | ((int)v2 << 8) | (int)v3;",
    "info" : "ReturnStatement[310367-310430]:ReturnStatement[310367-310430]"
  }, {
    "left" : "return g.color(v1, v2, v3);",
    "right" : "return g.color(v1, v2, v3);",
    "info" : "ReturnStatement[310441-310468]:ReturnStatement[310441-310468]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[310543-310925]:Block[310543-310925]"
  }, {
    "left" : "if (g == null)",
    "right" : "if (g == null)",
    "info" : "IfStatement[310549-310882]:IfStatement[310549-310882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[310564-310882]:Block[310564-310882]"
  }, {
    "left" : "if (alpha > 255)",
    "right" : "if (alpha > 255)",
    "info" : "IfStatement[310572-310632]:IfStatement[310572-310632]"
  }, {
    "left" : "alpha = 255;",
    "right" : "alpha = 255;",
    "info" : "ExpressionStatement[310589-310601]:ExpressionStatement[310589-310601]"
  }, {
    "left" : "if (alpha < 0)",
    "right" : "if (alpha < 0)",
    "info" : "IfStatement[310607-310632]:IfStatement[310607-310632]"
  }, {
    "left" : "alpha = 0;",
    "right" : "alpha = 0;",
    "info" : "ExpressionStatement[310622-310632]:ExpressionStatement[310622-310632]"
  }, {
    "left" : "if (v1 > 255)",
    "right" : "if (v1 > 255)",
    "info" : "IfStatement[310639-310687]:IfStatement[310639-310687]"
  }, {
    "left" : "v1 = 255;",
    "right" : "v1 = 255;",
    "info" : "ExpressionStatement[310653-310662]:ExpressionStatement[310653-310662]"
  }, {
    "left" : "if (v1 < 0)",
    "right" : "if (v1 < 0)",
    "info" : "IfStatement[310668-310687]:IfStatement[310668-310687]"
  }, {
    "left" : "v1 = 0;",
    "right" : "v1 = 0;",
    "info" : "ExpressionStatement[310680-310687]:ExpressionStatement[310680-310687]"
  }, {
    "left" : "if (v2 > 255)",
    "right" : "if (v2 > 255)",
    "info" : "IfStatement[310694-310742]:IfStatement[310694-310742]"
  }, {
    "left" : "v2 = 255;",
    "right" : "v2 = 255;",
    "info" : "ExpressionStatement[310708-310717]:ExpressionStatement[310708-310717]"
  }, {
    "left" : "if (v2 < 0)",
    "right" : "if (v2 < 0)",
    "info" : "IfStatement[310723-310742]:IfStatement[310723-310742]"
  }, {
    "left" : "v2 = 0;",
    "right" : "v2 = 0;",
    "info" : "ExpressionStatement[310735-310742]:ExpressionStatement[310735-310742]"
  }, {
    "left" : "if (v3 > 255)",
    "right" : "if (v3 > 255)",
    "info" : "IfStatement[310749-310797]:IfStatement[310749-310797]"
  }, {
    "left" : "v3 = 255;",
    "right" : "v3 = 255;",
    "info" : "ExpressionStatement[310763-310772]:ExpressionStatement[310763-310772]"
  }, {
    "left" : "if (v3 < 0)",
    "right" : "if (v3 < 0)",
    "info" : "IfStatement[310778-310797]:IfStatement[310778-310797]"
  }, {
    "left" : "v3 = 0;",
    "right" : "v3 = 0;",
    "info" : "ExpressionStatement[310790-310797]:ExpressionStatement[310790-310797]"
  }, {
    "left" : "return ((int)alpha << 24) | ((int)v1 << 16) | ((int)v2 << 8) | (int)v3;",
    "right" : "return ((int)alpha << 24) | ((int)v1 << 16) | ((int)v2 << 8) | (int)v3;",
    "info" : "ReturnStatement[310805-310876]:ReturnStatement[310805-310876]"
  }, {
    "left" : "return g.color(v1, v2, v3, alpha);",
    "right" : "return g.color(v1, v2, v3, alpha);",
    "info" : "ReturnStatement[310887-310921]:ReturnStatement[310887-310921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[311679-311872]:Block[311679-311872]"
  }, {
    "left" : "if (g != null)",
    "right" : "if (g != null)",
    "info" : "IfStatement[311685-311746]:IfStatement[311685-311746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[311700-311746]:Block[311700-311746]"
  }, {
    "left" : "return g.lerpColor(c1, c2, amt);",
    "right" : "return g.lerpColor(c1, c2, amt);",
    "info" : "ReturnStatement[311708-311740]:ReturnStatement[311708-311740]"
  }, {
    "left" : "return PGraphics.lerpColor(c1, c2, amt, RGB);",
    "right" : "return PGraphics.lerpColor(c1, c2, amt, RGB);",
    "info" : "ReturnStatement[311823-311868]:ReturnStatement[311823-311868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[311932-311981]:Block[311932-311981]"
  }, {
    "left" : "return PImage.blendColor(c1, c2, mode);",
    "right" : "return PImage.blendColor(c1, c2, mode);",
    "info" : "ReturnStatement[311938-311977]:ReturnStatement[311938-311977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[312084-312238]:Block[312084-312238]"
  }, {
    "left" : "if (!fullScreen)",
    "right" : "if (!fullScreen)",
    "info" : "IfStatement[312090-312234]:IfStatement[312090-312234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[312107-312234]:Block[312107-312234]"
  }, {
    "left" : "System.err.println(EXTERNAL_MOVE + \" \" + x + \" \" + y);",
    "right" : "System.err.println(EXTERNAL_MOVE + \" \" + x + \" \" + y);",
    "info" : "ExpressionStatement[312115-312169]:ExpressionStatement[312115-312169]"
  }, {
    "left" : "System.err.flush();",
    "right" : "System.err.flush();",
    "info" : "ExpressionStatement[312176-312195]:ExpressionStatement[312176-312195]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[312275-312281]:Block[312275-312281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[316011-316043]:Block[316011-316043]"
  }, {
    "left" : "runSketch(args, null);",
    "right" : "runSketch(args, null);",
    "info" : "ExpressionStatement[316017-316039]:ExpressionStatement[316017-316039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[316327-316359]:Block[316327-316359]"
  }, {
    "left" : "main(mainClass, null);",
    "right" : "main(mainClass, null);",
    "info" : "ExpressionStatement[316333-316355]:ExpressionStatement[316333-316355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[316926-317081]:Block[316926-317081]"
  }, {
    "left" : "String[] args = new String[] { mainClass };",
    "right" : "String[] args = new String[] { mainClass };",
    "info" : "VariableDeclarationStatement[316932-316975]:VariableDeclarationStatement[316932-316975]"
  }, {
    "left" : "if (sketchArgs != null)",
    "right" : "if (sketchArgs != null)",
    "info" : "IfStatement[316980-317050]:IfStatement[316980-317050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[317004-317050]:Block[317004-317050]"
  }, {
    "left" : "args = concat(args, sketchArgs);",
    "right" : "args = concat(args, sketchArgs);",
    "info" : "ExpressionStatement[317012-317044]:ExpressionStatement[317012-317044]"
  }, {
    "left" : "runSketch(args, null);",
    "right" : "runSketch(args, null);",
    "info" : "ExpressionStatement[317055-317077]:ExpressionStatement[317055-317077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[317503-317641]:Block[317503-325164]"
  }, {
    "left" : "System.setProperty(\"sun.awt.noerasebackground\", \"true\");",
    "right" : "System.setProperty(\"sun.awt.noerasebackground\", \"true\");",
    "info" : "ExpressionStatement[318069-318125]:ExpressionStatement[318099-318155]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[318198-318587]:TryStatement[318228-318617]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[318202-318328]:Block[318232-318358]"
  }, {
    "left" : "Toolkit.getDefaultToolkit().setDynamicLayout(true);",
    "right" : "Toolkit.getDefaultToolkit().setDynamicLayout(true);",
    "info" : "ExpressionStatement[318271-318322]:ExpressionStatement[318301-318352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[318357-318587]:Block[318387-318617]"
  }, {
    "left" : "System.err.println(\"Cannot run sketch without a display. Read this for possible solutions:\");",
    "right" : "System.err.println(\"Cannot run sketch without a display. Read this for possible solutions:\");",
    "info" : "ExpressionStatement[318365-318458]:ExpressionStatement[318395-318488]"
  }, {
    "left" : "System.err.println(\"https://github.com/processing/processing/wiki/Running-without-a-Display\");",
    "right" : "System.err.println(\"https://github.com/processing/processing/wiki/Running-without-a-Display\");",
    "info" : "ExpressionStatement[318465-318559]:ExpressionStatement[318495-318589]"
  }, {
    "left" : "System.exit(1);",
    "right" : "System.exit(1);",
    "info" : "ExpressionStatement[318566-318581]:ExpressionStatement[318596-318611]"
  }, {
    "left" : "System.setProperty(\"java.net.useSystemProxies\", \"true\");",
    "right" : "System.setProperty(\"java.net.useSystemProxies\", \"true\");",
    "info" : "ExpressionStatement[318653-318709]:ExpressionStatement[318683-318739]"
  }, {
    "left" : "if (args.length < 1)",
    "right" : "if (args.length < 1)",
    "info" : "IfStatement[318715-318923]:IfStatement[318745-318953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[318736-318923]:Block[318766-318953]"
  }, {
    "left" : "System.err.println(\"Usage: PApplet [options] <class name> [sketch args]\");",
    "right" : "System.err.println(\"Usage: PApplet [options] <class name> [sketch args]\");",
    "info" : "ExpressionStatement[318744-318818]:ExpressionStatement[318774-318848]"
  }, {
    "left" : "System.err.println(\"See the Javadoc for PApplet for an explanation.\");",
    "right" : "System.err.println(\"See the Javadoc for PApplet for an explanation.\");",
    "info" : "ExpressionStatement[318825-318895]:ExpressionStatement[318855-318925]"
  }, {
    "left" : "System.exit(1);",
    "right" : "System.exit(1);",
    "info" : "ExpressionStatement[318902-318917]:ExpressionStatement[318932-318947]"
  }, {
    "left" : "boolean external = false;",
    "right" : "boolean external = false;",
    "info" : "VariableDeclarationStatement[318929-318954]:VariableDeclarationStatement[318959-318984]"
  }, {
    "left" : "int[] location = null;",
    "right" : "int[] location = null;",
    "info" : "VariableDeclarationStatement[318959-318981]:VariableDeclarationStatement[318989-319011]"
  }, {
    "left" : "int[] editorLocation = null;",
    "right" : "int[] editorLocation = null;",
    "info" : "VariableDeclarationStatement[318986-319014]:VariableDeclarationStatement[319016-319044]"
  }, {
    "left" : "String name = null;",
    "right" : "String name = null;",
    "info" : "VariableDeclarationStatement[319020-319039]:VariableDeclarationStatement[319050-319069]"
  }, {
    "left" : "int windowColor = 0;",
    "right" : "int windowColor = 0;",
    "info" : "VariableDeclarationStatement[319044-319064]:VariableDeclarationStatement[319074-319094]"
  }, {
    "left" : "int stopColor = 0xff808080;",
    "right" : "int stopColor = 0xff808080;",
    "info" : "VariableDeclarationStatement[319069-319096]:VariableDeclarationStatement[319099-319126]"
  }, {
    "left" : "boolean hideStop = false;",
    "right" : "boolean hideStop = false;",
    "info" : "VariableDeclarationStatement[319101-319126]:VariableDeclarationStatement[319131-319156]"
  }, {
    "left" : "int displayNum = -1;",
    "right" : "int displayNum = -1;",
    "info" : "VariableDeclarationStatement[319132-319152]:VariableDeclarationStatement[319162-319182]"
  }, {
    "left" : "boolean present = false;",
    "right" : "boolean present = false;",
    "info" : "VariableDeclarationStatement[319207-319231]:VariableDeclarationStatement[319237-319261]"
  }, {
    "left" : "String param = null, value = null;",
    "right" : "String param = null, value = null;",
    "info" : "VariableDeclarationStatement[319273-319307]:VariableDeclarationStatement[319303-319337]"
  }, {
    "left" : "String folder = calcSketchPath();",
    "right" : "String folder = calcSketchPath();",
    "info" : "VariableDeclarationStatement[319312-319345]:VariableDeclarationStatement[319342-319375]"
  }, {
    "left" : "int argIndex = 0;",
    "right" : "int argIndex = 0;",
    "info" : "VariableDeclarationStatement[319351-319368]:VariableDeclarationStatement[319381-319398]"
  }, {
    "left" : "while (argIndex < args.length)",
    "right" : "while (argIndex < args.length)",
    "info" : "WhileStatement[319373-321363]:WhileStatement[319403-321393]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[319404-321363]:Block[319434-321393]"
  }, {
    "left" : "int equals = args[argIndex].indexOf('=');",
    "right" : "int equals = args[argIndex].indexOf('=');",
    "info" : "VariableDeclarationStatement[319412-319453]:VariableDeclarationStatement[319442-319483]"
  }, {
    "left" : "if (equals != -1)",
    "right" : "if (equals != -1)",
    "info" : "IfStatement[319460-321339]:IfStatement[319490-321369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[319478-320841]:Block[319508-320871]"
  }, {
    "left" : "param = args[argIndex].substring(0, equals);",
    "right" : "param = args[argIndex].substring(0, equals);",
    "info" : "ExpressionStatement[319488-319532]:ExpressionStatement[319518-319562]"
  }, {
    "left" : "value = args[argIndex].substring(equals + 1);",
    "right" : "value = args[argIndex].substring(equals + 1);",
    "info" : "ExpressionStatement[319541-319586]:ExpressionStatement[319571-319616]"
  }, {
    "left" : "if (param.equals(ARGS_EDITOR_LOCATION))",
    "right" : "if (param.equals(ARGS_EDITOR_LOCATION))",
    "info" : "IfStatement[319596-320832]:IfStatement[319626-320862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[319636-319731]:Block[319666-319761]"
  }, {
    "left" : "external = true;",
    "right" : "external = true;",
    "info" : "ExpressionStatement[319648-319664]:ExpressionStatement[319678-319694]"
  }, {
    "left" : "editorLocation = parseInt(split(value, ','));",
    "right" : "editorLocation = parseInt(split(value, ','));",
    "info" : "ExpressionStatement[319675-319720]:ExpressionStatement[319705-319750]"
  }, {
    "left" : "if (param.equals(ARGS_DISPLAY))",
    "right" : "if (param.equals(ARGS_DISPLAY))",
    "info" : "IfStatement[319737-320832]:IfStatement[319767-320862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[319769-319956]:Block[319799-319986]"
  }, {
    "left" : "displayNum = parseInt(value, -1);",
    "right" : "displayNum = parseInt(value, -1);",
    "info" : "ExpressionStatement[319781-319814]:ExpressionStatement[319811-319844]"
  }, {
    "left" : "if (displayNum == -1)",
    "right" : "if (displayNum == -1)",
    "info" : "IfStatement[319825-319945]:IfStatement[319855-319975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[319847-319945]:Block[319877-319975]"
  }, {
    "left" : "System.err.println(\"Could not parse \" + value + \" for \" + ARGS_DISPLAY);",
    "right" : "System.err.println(\"Could not parse \" + value + \" for \" + ARGS_DISPLAY);",
    "info" : "ExpressionStatement[319861-319933]:ExpressionStatement[319891-319963]"
  }, {
    "left" : "if (param.equals(ARGS_WINDOW_COLOR))",
    "right" : "if (param.equals(ARGS_WINDOW_COLOR))",
    "info" : "IfStatement[319962-320832]:IfStatement[319992-320862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[319999-320306]:Block[320029-320336]"
  }, {
    "left" : "if (value.charAt(0) == '#' && value.length() == 7)",
    "right" : "if (value.charAt(0) == '#' && value.length() == 7)",
    "info" : "IfStatement[320011-320295]:IfStatement[320041-320325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320062-320183]:Block[320092-320213]"
  }, {
    "left" : "value = value.substring(1);",
    "right" : "value = value.substring(1);",
    "info" : "ExpressionStatement[320076-320103]:ExpressionStatement[320106-320133]"
  }, {
    "left" : "windowColor = 0xff000000 | Integer.parseInt(value, 16);",
    "right" : "windowColor = 0xff000000 | Integer.parseInt(value, 16);",
    "info" : "ExpressionStatement[320116-320171]:ExpressionStatement[320146-320201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320189-320295]:Block[320219-320325]"
  }, {
    "left" : "System.err.println(ARGS_WINDOW_COLOR + \" should be a # followed by six digits\");",
    "right" : "System.err.println(ARGS_WINDOW_COLOR + \" should be a # followed by six digits\");",
    "info" : "ExpressionStatement[320203-320283]:ExpressionStatement[320233-320313]"
  }, {
    "left" : "if (param.equals(ARGS_STOP_COLOR))",
    "right" : "if (param.equals(ARGS_STOP_COLOR))",
    "info" : "IfStatement[320312-320832]:IfStatement[320342-320862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320347-320650]:Block[320377-320680]"
  }, {
    "left" : "if (value.charAt(0) == '#' && value.length() == 7)",
    "right" : "if (value.charAt(0) == '#' && value.length() == 7)",
    "info" : "IfStatement[320359-320639]:IfStatement[320389-320669]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320410-320529]:Block[320440-320559]"
  }, {
    "left" : "value = value.substring(1);",
    "right" : "value = value.substring(1);",
    "info" : "ExpressionStatement[320424-320451]:ExpressionStatement[320454-320481]"
  }, {
    "left" : "stopColor = 0xff000000 | Integer.parseInt(value, 16);",
    "right" : "stopColor = 0xff000000 | Integer.parseInt(value, 16);",
    "info" : "ExpressionStatement[320464-320517]:ExpressionStatement[320494-320547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320535-320639]:Block[320565-320669]"
  }, {
    "left" : "System.err.println(ARGS_STOP_COLOR + \" should be a # followed by six digits\");",
    "right" : "System.err.println(ARGS_STOP_COLOR + \" should be a # followed by six digits\");",
    "info" : "ExpressionStatement[320549-320627]:ExpressionStatement[320579-320657]"
  }, {
    "left" : "if (param.equals(ARGS_SKETCH_FOLDER))",
    "right" : "if (param.equals(ARGS_SKETCH_FOLDER))",
    "info" : "IfStatement[320656-320832]:IfStatement[320686-320862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320694-320732]:Block[320724-320762]"
  }, {
    "left" : "folder = value;",
    "right" : "folder = value;",
    "info" : "ExpressionStatement[320706-320721]:ExpressionStatement[320736-320751]"
  }, {
    "left" : "if (param.equals(ARGS_LOCATION))",
    "right" : "if (param.equals(ARGS_LOCATION))",
    "info" : "IfStatement[320738-320832]:IfStatement[320768-320862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320771-320832]:Block[320801-320862]"
  }, {
    "left" : "location = parseInt(split(value, ','));",
    "right" : "location = parseInt(split(value, ','));",
    "info" : "ExpressionStatement[320783-320822]:ExpressionStatement[320813-320852]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320847-321339]:Block[320877-321369]"
  }, {
    "left" : "if (args[argIndex].equals(ARGS_PRESENT))",
    "right" : "if (args[argIndex].equals(ARGS_PRESENT))",
    "info" : "IfStatement[320857-321331]:IfStatement[320887-321361]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[320898-321036]:Block[320928-321066]"
  }, {
    "left" : "present = true;",
    "right" : "present = true;",
    "info" : "ExpressionStatement[320910-320925]:ExpressionStatement[320940-320955]"
  }, {
    "left" : "if (args[argIndex].equals(ARGS_HIDE_STOP))",
    "right" : "if (args[argIndex].equals(ARGS_HIDE_STOP))",
    "info" : "IfStatement[321042-321331]:IfStatement[321072-321361]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[321085-321124]:Block[321115-321154]"
  }, {
    "left" : "hideStop = true;",
    "right" : "hideStop = true;",
    "info" : "ExpressionStatement[321097-321113]:ExpressionStatement[321127-321143]"
  }, {
    "left" : "if (args[argIndex].equals(ARGS_EXTERNAL))",
    "right" : "if (args[argIndex].equals(ARGS_EXTERNAL))",
    "info" : "IfStatement[321130-321331]:IfStatement[321160-321361]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[321172-321211]:Block[321202-321241]"
  }, {
    "left" : "external = true;",
    "right" : "external = true;",
    "info" : "ExpressionStatement[321184-321200]:ExpressionStatement[321214-321230]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[321217-321331]:Block[321247-321361]"
  }, {
    "left" : "name = args[argIndex];",
    "right" : "name = args[argIndex];",
    "info" : "ExpressionStatement[321229-321251]:ExpressionStatement[321259-321281]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[321262-321268]:BreakStatement[321292-321298]"
  }, {
    "left" : "argIndex++;",
    "right" : "argIndex++;",
    "info" : "ExpressionStatement[321346-321357]:ExpressionStatement[321376-321387]"
  }, {
    "left" : "final PApplet sketch;",
    "right" : "final PApplet sketch;",
    "info" : "VariableDeclarationStatement[321929-321950]:VariableDeclarationStatement[321959-321980]"
  }, {
    "left" : "if (constructedSketch != null)",
    "right" : "if (constructedSketch != null)",
    "info" : "IfStatement[321955-322268]:IfStatement[321985-322298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[321986-322027]:Block[322016-322057]"
  }, {
    "left" : "sketch = constructedSketch;",
    "right" : "sketch = constructedSketch;",
    "info" : "ExpressionStatement[321994-322021]:ExpressionStatement[322024-322051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[322033-322268]:Block[322063-322298]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[322041-322262]:TryStatement[322071-322292]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[322045-322193]:Block[322075-322223]"
  }, {
    "left" : "Class<?> c =\n          Thread.currentThread().getContextClassLoader().loadClass(name);",
    "right" : "Class<?> c =\n          Thread.currentThread().getContextClassLoader().loadClass(name);",
    "info" : "VariableDeclarationStatement[322055-322141]:VariableDeclarationStatement[322085-322171]"
  }, {
    "left" : "sketch = (PApplet) c.newInstance();",
    "right" : "sketch = (PApplet) c.newInstance();",
    "info" : "ExpressionStatement[322150-322185]:ExpressionStatement[322180-322215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[322214-322262]:Block[322244-322292]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[322224-322254]:ThrowStatement[322254-322284]"
  }, {
    "left" : "if (platform == MACOSX)",
    "right" : "if (platform == MACOSX)",
    "info" : "IfStatement[322274-322726]:IfStatement[322304-322756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[322298-322726]:Block[322328-322756]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[322306-322720]:TryStatement[322336-322750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[322310-322638]:Block[322340-322668]"
  }, {
    "left" : "final String td = \"processing.core.ThinkDifferent\";",
    "right" : "final String td = \"processing.core.ThinkDifferent\";",
    "info" : "VariableDeclarationStatement[322320-322371]:VariableDeclarationStatement[322350-322401]"
  }, {
    "left" : "Class<?> thinkDifferent =\n          Thread.currentThread().getContextClassLoader().loadClass(td);",
    "right" : "Class<?> thinkDifferent =\n          Thread.currentThread().getContextClassLoader().loadClass(td);",
    "info" : "VariableDeclarationStatement[322380-322477]:VariableDeclarationStatement[322410-322507]"
  }, {
    "left" : "Method method =\n          thinkDifferent.getMethod(\"init\", new Class[] { PApplet.class });",
    "right" : "Method method =\n          thinkDifferent.getMethod(\"init\", new Class[] { PApplet.class });",
    "info" : "VariableDeclarationStatement[322486-322576]:VariableDeclarationStatement[322516-322606]"
  }, {
    "left" : "method.invoke(null, new Object[] { sketch });",
    "right" : "method.invoke(null, new Object[] { sketch });",
    "info" : "ExpressionStatement[322585-322630]:ExpressionStatement[322615-322660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[322659-322720]:Block[322689-322750]"
  }, {
    "left" : "e.printStackTrace();",
    "right" : "e.printStackTrace();",
    "info" : "ExpressionStatement[322669-322689]:ExpressionStatement[322699-322719]"
  }, {
    "left" : "sketch.display = displayNum;",
    "right" : "sketch.display = displayNum;",
    "info" : "ExpressionStatement[322862-322890]:ExpressionStatement[322892-322920]"
  }, {
    "left" : "sketch.handleSettings();",
    "right" : "sketch.handleSettings();",
    "info" : "ExpressionStatement[322977-323001]:ExpressionStatement[323007-323031]"
  }, {
    "left" : "sketch.sketchPath = folder;",
    "right" : "sketch.sketchPath = folder;",
    "info" : "ExpressionStatement[323165-323192]:ExpressionStatement[323195-323222]"
  }, {
    "left" : "if (args.length != argIndex + 1)",
    "right" : "if (args.length != argIndex + 1)",
    "info" : "IfStatement[323838-324094]:IfStatement[323868-324124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[323871-324094]:Block[323901-324124]"
  }, {
    "left" : "sketch.args = PApplet.subset(args, argIndex + 1);",
    "right" : "sketch.args = PApplet.subset(args, argIndex + 1);",
    "info" : "ExpressionStatement[324039-324088]:ExpressionStatement[324069-324118]"
  }, {
    "left" : "sketch.external = external;",
    "right" : "sketch.external = external;",
    "info" : "ExpressionStatement[324100-324127]:ExpressionStatement[324130-324157]"
  }, {
    "left" : "if (windowColor != 0)",
    "right" : "if (windowColor != 0)",
    "info" : "IfStatement[324133-324202]:IfStatement[324163-324232]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[324155-324202]:Block[324185-324232]"
  }, {
    "left" : "sketch.windowColor = windowColor;",
    "right" : "sketch.windowColor = windowColor;",
    "info" : "ExpressionStatement[324163-324196]:ExpressionStatement[324193-324226]"
  }, {
    "left" : "PSurface surface = sketch.initSurface();",
    "right" : "PSurface surface = sketch.initSurface();",
    "info" : "VariableDeclarationStatement[324208-324248]:VariableDeclarationStatement[324238-324278]"
  }, {
    "left" : "if (present)",
    "right" : "if (present)",
    "info" : "IfStatement[324804-325007]:IfStatement[324834-325037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[324817-324941]:Block[324847-324971]"
  }, {
    "left" : "if (hideStop)",
    "right" : "if (hideStop)",
    "info" : "IfStatement[324825-324896]:IfStatement[324855-324926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[324839-324896]:Block[324869-324926]"
  }, {
    "left" : "stopColor = 0;",
    "right" : "stopColor = 0;",
    "info" : "ExpressionStatement[324849-324863]:ExpressionStatement[324879-324893]"
  }, {
    "left" : "surface.placePresent(stopColor);",
    "right" : "surface.placePresent(stopColor);",
    "info" : "ExpressionStatement[324903-324935]:ExpressionStatement[324933-324965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[324947-325007]:Block[324977-325037]"
  }, {
    "left" : "surface.placeWindow(location, editorLocation);",
    "right" : "surface.placeWindow(location, editorLocation);",
    "info" : "ExpressionStatement[324955-325001]:ExpressionStatement[324985-325031]"
  }, {
    "left" : "if (external)",
    "right" : "if (external)",
    "info" : "IfStatement[325070-325130]:IfStatement[325100-325160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[325084-325130]:Block[325114-325160]"
  }, {
    "left" : "surface.setupExternalMessages();",
    "right" : "surface.setupExternalMessages();",
    "info" : "ExpressionStatement[325092-325124]:ExpressionStatement[325122-325154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[325172-326478]:Block[325202-326508]"
  }, {
    "left" : "g = createPrimaryGraphics();",
    "right" : "g = createPrimaryGraphics();",
    "info" : "ExpressionStatement[325295-325323]:ExpressionStatement[325325-325353]"
  }, {
    "left" : "surface = g.createSurface();",
    "right" : "surface = g.createSurface();",
    "info" : "ExpressionStatement[325328-325356]:ExpressionStatement[325358-325386]"
  }, {
    "left" : "if (g.displayable() && frame == null)",
    "right" : "if (g.displayable() && frame == null)",
    "info" : "IfStatement[325433-326441]:IfStatement[325463-326471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[325471-326356]:Block[325501-326386]"
  }, {
    "left" : "frame = new Frame() {\n        @Override\n        public void setResizable(boolean resizable) {\n          deprecationWarning(\"setResizable\");\n          surface.setResizable(resizable);\n        }\n\n        @Override\n        public void setVisible(boolean visible) {\n          deprecationWarning(\"setVisible\");\n          surface.setVisible(visible);\n        }\n\n        @Override\n        public void setTitle(String title) {\n          deprecationWarning(\"setTitle\");\n          surface.setTitle(title);\n        }\n\n        private void deprecationWarning(String method) {\n          PGraphics.showWarning(\"Use surface.\" + method + \"() instead of \" +\n                                \"frame.\" + method + \" in Processing 3\");\n        }\n      };",
    "right" : "frame = new Frame() {\n        @Override\n        public void setResizable(boolean resizable) {\n          deprecationWarning(\"setResizable\");\n          surface.setResizable(resizable);\n        }\n\n        @Override\n        public void setVisible(boolean visible) {\n          deprecationWarning(\"setVisible\");\n          surface.setVisible(visible);\n        }\n\n        @Override\n        public void setTitle(String title) {\n          deprecationWarning(\"setTitle\");\n          surface.setTitle(title);\n        }\n\n        private void deprecationWarning(String method) {\n          PGraphics.showWarning(\"Use surface.\" + method + \"() instead of \" +\n                                \"frame.\" + method + \" in Processing 3\");\n        }\n      };",
    "info" : "ExpressionStatement[325479-326211]:ExpressionStatement[325509-326241]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[325571-325671]:Block[325601-325701]"
  }, {
    "left" : "deprecationWarning(\"setResizable\");",
    "right" : "deprecationWarning(\"setResizable\");",
    "info" : "ExpressionStatement[325583-325618]:ExpressionStatement[325613-325648]"
  }, {
    "left" : "surface.setResizable(resizable);",
    "right" : "surface.setResizable(resizable);",
    "info" : "ExpressionStatement[325629-325661]:ExpressionStatement[325659-325691]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[325739-325833]:Block[325769-325863]"
  }, {
    "left" : "deprecationWarning(\"setVisible\");",
    "right" : "deprecationWarning(\"setVisible\");",
    "info" : "ExpressionStatement[325751-325784]:ExpressionStatement[325781-325814]"
  }, {
    "left" : "surface.setVisible(visible);",
    "right" : "surface.setVisible(visible);",
    "info" : "ExpressionStatement[325795-325823]:ExpressionStatement[325825-325853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[325896-325984]:Block[325926-326014]"
  }, {
    "left" : "deprecationWarning(\"setTitle\");",
    "right" : "deprecationWarning(\"setTitle\");",
    "info" : "ExpressionStatement[325908-325939]:ExpressionStatement[325938-325969]"
  }, {
    "left" : "surface.setTitle(title);",
    "right" : "surface.setTitle(title);",
    "info" : "ExpressionStatement[325950-325974]:ExpressionStatement[325980-326004]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[326041-326202]:Block[326071-326232]"
  }, {
    "left" : "PGraphics.showWarning(\"Use surface.\" + method + \"() instead of \" +\n                                \"frame.\" + method + \" in Processing 3\");",
    "right" : "PGraphics.showWarning(\"Use surface.\" + method + \"() instead of \" +\n                                \"frame.\" + method + \" in Processing 3\");",
    "info" : "ExpressionStatement[326053-326192]:ExpressionStatement[326083-326222]"
  }, {
    "left" : "surface.initFrame(this);",
    "right" : "surface.initFrame(this);",
    "info" : "ExpressionStatement[326219-326243]:ExpressionStatement[326249-326273]"
  }, {
    "left" : "surface.setTitle(getClass().getName());",
    "right" : "surface.setTitle(getClass().getName());",
    "info" : "ExpressionStatement[326310-326349]:ExpressionStatement[326340-326379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[326362-326441]:Block[326392-326471]"
  }, {
    "left" : "surface.initOffscreen(this);",
    "right" : "surface.initOffscreen(this);",
    "info" : "ExpressionStatement[326370-326398]:ExpressionStatement[326400-326428]"
  }, {
    "left" : "init();",
    "right" : "init();",
    "info" : "ExpressionStatement[326447-326454]:ExpressionStatement[326477-326484]"
  }, {
    "left" : "return surface;",
    "right" : "return surface;",
    "info" : "ReturnStatement[326459-326474]:ReturnStatement[326489-326504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[327431-327684]:Block[327461-327714]"
  }, {
    "left" : "if (PApplet.platform == PConstants.MACOSX)",
    "right" : "if (PApplet.platform == PConstants.MACOSX)",
    "info" : "IfStatement[327437-327680]:IfStatement[327467-327710]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[327480-327680]:Block[327510-327710]"
  }, {
    "left" : "japplemenubar.JAppleMenuBar.hide();",
    "right" : "japplemenubar.JAppleMenuBar.hide();",
    "info" : "ExpressionStatement[327639-327674]:ExpressionStatement[327669-327704]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[327981-328383]:Block[328011-328413]"
  }, {
    "left" : "final String[] argsWithSketchName = new String[args.length + 1];",
    "right" : "final String[] argsWithSketchName = new String[args.length + 1];",
    "info" : "VariableDeclarationStatement[327987-328051]:VariableDeclarationStatement[328017-328081]"
  }, {
    "left" : "System.arraycopy(args, 0, argsWithSketchName, 0, args.length);",
    "right" : "System.arraycopy(args, 0, argsWithSketchName, 0, args.length);",
    "info" : "ExpressionStatement[328056-328118]:ExpressionStatement[328086-328148]"
  }, {
    "left" : "final String className = this.getClass().getSimpleName();",
    "right" : "final String className = this.getClass().getSimpleName();",
    "info" : "VariableDeclarationStatement[328123-328180]:VariableDeclarationStatement[328153-328210]"
  }, {
    "left" : "final String cleanedClass =\n      className.replaceAll(\"__[^_]+__\\\\$\", \"\").replaceAll(\"\\\\$\\\\d+\", \"\");",
    "right" : "final String cleanedClass =\n      className.replaceAll(\"__[^_]+__\\\\$\", \"\").replaceAll(\"\\\\$\\\\d+\", \"\");",
    "info" : "VariableDeclarationStatement[328185-328286]:VariableDeclarationStatement[328215-328316]"
  }, {
    "left" : "argsWithSketchName[args.length] = cleanedClass;",
    "right" : "argsWithSketchName[args.length] = cleanedClass;",
    "info" : "ExpressionStatement[328291-328338]:ExpressionStatement[328321-328368]"
  }, {
    "left" : "runSketch(argsWithSketchName, this);",
    "right" : "runSketch(argsWithSketchName, this);",
    "info" : "ExpressionStatement[328343-328379]:ExpressionStatement[328373-328409]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[328459-328494]:Block[328489-328524]"
  }, {
    "left" : "runSketch(new String[0]);",
    "right" : "runSketch(new String[0]);",
    "info" : "ExpressionStatement[328465-328490]:ExpressionStatement[328495-328520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[329486-329638]:Block[329516-329668]"
  }, {
    "left" : "filename = insertFrame(filename);",
    "right" : "filename = insertFrame(filename);",
    "info" : "ExpressionStatement[329492-329525]:ExpressionStatement[329522-329555]"
  }, {
    "left" : "PGraphics rec = createGraphics(width, height, renderer, filename);",
    "right" : "PGraphics rec = createGraphics(width, height, renderer, filename);",
    "info" : "VariableDeclarationStatement[329530-329596]:VariableDeclarationStatement[329560-329626]"
  }, {
    "left" : "beginRecord(rec);",
    "right" : "beginRecord(rec);",
    "info" : "ExpressionStatement[329601-329618]:ExpressionStatement[329631-329648]"
  }, {
    "left" : "return rec;",
    "right" : "return rec;",
    "info" : "ReturnStatement[329623-329634]:ReturnStatement[329653-329664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[329789-329850]:Block[329819-329880]"
  }, {
    "left" : "this.recorder = recorder;",
    "right" : "this.recorder = recorder;",
    "info" : "ExpressionStatement[329795-329820]:ExpressionStatement[329825-329850]"
  }, {
    "left" : "recorder.beginDraw();",
    "right" : "recorder.beginDraw();",
    "info" : "ExpressionStatement[329825-329846]:ExpressionStatement[329855-329876]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[330137-330251]:Block[330167-330281]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[330143-330247]:IfStatement[330173-330277]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[330165-330247]:Block[330195-330277]"
  }, {
    "left" : "recorder.endDraw();",
    "right" : "recorder.endDraw();",
    "info" : "ExpressionStatement[330173-330192]:ExpressionStatement[330203-330222]"
  }, {
    "left" : "recorder.dispose();",
    "right" : "recorder.dispose();",
    "info" : "ExpressionStatement[330199-330218]:ExpressionStatement[330229-330248]"
  }, {
    "left" : "recorder = null;",
    "right" : "recorder = null;",
    "info" : "ExpressionStatement[330225-330241]:ExpressionStatement[330255-330271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[332009-332160]:Block[332039-332190]"
  }, {
    "left" : "filename = insertFrame(filename);",
    "right" : "filename = insertFrame(filename);",
    "info" : "ExpressionStatement[332015-332048]:ExpressionStatement[332045-332078]"
  }, {
    "left" : "PGraphics rec = createGraphics(width, height, renderer, filename);",
    "right" : "PGraphics rec = createGraphics(width, height, renderer, filename);",
    "info" : "VariableDeclarationStatement[332053-332119]:VariableDeclarationStatement[332083-332149]"
  }, {
    "left" : "g.beginRaw(rec);",
    "right" : "g.beginRaw(rec);",
    "info" : "ExpressionStatement[332124-332140]:ExpressionStatement[332154-332170]"
  }, {
    "left" : "return rec;",
    "right" : "return rec;",
    "info" : "ReturnStatement[332145-332156]:ReturnStatement[332175-332186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[332536-332570]:Block[332566-332600]"
  }, {
    "left" : "g.beginRaw(rawGraphics);",
    "right" : "g.beginRaw(rawGraphics);",
    "info" : "ExpressionStatement[332542-332566]:ExpressionStatement[332572-332596]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[332893-332914]:Block[332923-332944]"
  }, {
    "left" : "g.endRaw();",
    "right" : "g.endRaw();",
    "info" : "ExpressionStatement[332899-332910]:ExpressionStatement[332929-332940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[334206-334254]:Block[334236-334284]"
  }, {
    "left" : "g.loadPixels();",
    "right" : "g.loadPixels();",
    "info" : "ExpressionStatement[334212-334227]:ExpressionStatement[334242-334257]"
  }, {
    "left" : "pixels = g.pixels;",
    "right" : "pixels = g.pixels;",
    "info" : "ExpressionStatement[334232-334250]:ExpressionStatement[334262-334280]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[335335-335362]:Block[335365-335392]"
  }, {
    "left" : "g.updatePixels();",
    "right" : "g.updatePixels();",
    "info" : "ExpressionStatement[335341-335358]:ExpressionStatement[335371-335388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[335627-335668]:Block[335657-335698]"
  }, {
    "left" : "g.updatePixels(x1, y1, x2, y2);",
    "right" : "g.updatePixels(x1, y1, x2, y2);",
    "info" : "ExpressionStatement[335633-335664]:ExpressionStatement[335663-335694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[336006-336036]:Block[336036-336066]"
  }, {
    "left" : "return g.beginPGL();",
    "right" : "return g.beginPGL();",
    "info" : "ReturnStatement[336012-336032]:ReturnStatement[336042-336062]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[336062-336128]:Block[336092-336158]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[336068-336108]:IfStatement[336098-336138]"
  }, {
    "left" : "recorder.endPGL();",
    "right" : "recorder.endPGL();",
    "info" : "ExpressionStatement[336090-336108]:ExpressionStatement[336120-336138]"
  }, {
    "left" : "g.endPGL();",
    "right" : "g.endPGL();",
    "info" : "ExpressionStatement[336113-336124]:ExpressionStatement[336143-336154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[336153-336217]:Block[336183-336247]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[336159-336198]:IfStatement[336189-336228]"
  }, {
    "left" : "recorder.flush();",
    "right" : "recorder.flush();",
    "info" : "ExpressionStatement[336181-336198]:ExpressionStatement[336211-336228]"
  }, {
    "left" : "g.flush();",
    "right" : "g.flush();",
    "info" : "ExpressionStatement[336203-336213]:ExpressionStatement[336233-336243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[336250-336322]:Block[336280-336352]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[336256-336299]:IfStatement[336286-336329]"
  }, {
    "left" : "recorder.hint(which);",
    "right" : "recorder.hint(which);",
    "info" : "ExpressionStatement[336278-336299]:ExpressionStatement[336308-336329]"
  }, {
    "left" : "g.hint(which);",
    "right" : "g.hint(which);",
    "info" : "ExpressionStatement[336304-336318]:ExpressionStatement[336334-336348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[336403-336477]:Block[336433-336507]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[336409-336453]:IfStatement[336439-336483]"
  }, {
    "left" : "recorder.beginShape();",
    "right" : "recorder.beginShape();",
    "info" : "ExpressionStatement[336431-336453]:ExpressionStatement[336461-336483]"
  }, {
    "left" : "g.beginShape();",
    "right" : "g.beginShape();",
    "info" : "ExpressionStatement[336458-336473]:ExpressionStatement[336488-336503]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[338593-338675]:Block[338623-338705]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[338599-338647]:IfStatement[338629-338677]"
  }, {
    "left" : "recorder.beginShape(kind);",
    "right" : "recorder.beginShape(kind);",
    "info" : "ExpressionStatement[338621-338647]:ExpressionStatement[338651-338677]"
  }, {
    "left" : "g.beginShape(kind);",
    "right" : "g.beginShape(kind);",
    "info" : "ExpressionStatement[338652-338671]:ExpressionStatement[338682-338701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[338847-338917]:Block[338877-338947]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[338853-338895]:IfStatement[338883-338925]"
  }, {
    "left" : "recorder.edge(edge);",
    "right" : "recorder.edge(edge);",
    "info" : "ExpressionStatement[338875-338895]:ExpressionStatement[338905-338925]"
  }, {
    "left" : "g.edge(edge);",
    "right" : "g.edge(edge);",
    "info" : "ExpressionStatement[338900-338913]:ExpressionStatement[338930-338943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[339705-339791]:Block[339735-339821]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[339711-339761]:IfStatement[339741-339791]"
  }, {
    "left" : "recorder.normal(nx, ny, nz);",
    "right" : "recorder.normal(nx, ny, nz);",
    "info" : "ExpressionStatement[339733-339761]:ExpressionStatement[339763-339791]"
  }, {
    "left" : "g.normal(nx, ny, nz);",
    "right" : "g.normal(nx, ny, nz);",
    "info" : "ExpressionStatement[339766-339787]:ExpressionStatement[339796-339817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[339845-339935]:Block[339875-339965]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[339851-339903]:IfStatement[339881-339933]"
  }, {
    "left" : "recorder.attrib(name, values);",
    "right" : "recorder.attrib(name, values);",
    "info" : "ExpressionStatement[339873-339903]:ExpressionStatement[339903-339933]"
  }, {
    "left" : "g.attrib(name, values);",
    "right" : "g.attrib(name, values);",
    "info" : "ExpressionStatement[339908-339931]:ExpressionStatement[339938-339961]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[339987-340077]:Block[340017-340107]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[339993-340045]:IfStatement[340023-340075]"
  }, {
    "left" : "recorder.attrib(name, values);",
    "right" : "recorder.attrib(name, values);",
    "info" : "ExpressionStatement[340015-340045]:ExpressionStatement[340045-340075]"
  }, {
    "left" : "g.attrib(name, values);",
    "right" : "g.attrib(name, values);",
    "info" : "ExpressionStatement[340050-340073]:ExpressionStatement[340080-340103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[340133-340223]:Block[340163-340253]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[340139-340191]:IfStatement[340169-340221]"
  }, {
    "left" : "recorder.attrib(name, values);",
    "right" : "recorder.attrib(name, values);",
    "info" : "ExpressionStatement[340161-340191]:ExpressionStatement[340191-340221]"
  }, {
    "left" : "g.attrib(name, values);",
    "right" : "g.attrib(name, values);",
    "info" : "ExpressionStatement[340196-340219]:ExpressionStatement[340226-340249]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[340985-341069]:Block[341015-341099]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[340991-341040]:IfStatement[341021-341070]"
  }, {
    "left" : "recorder.textureMode(mode);",
    "right" : "recorder.textureMode(mode);",
    "info" : "ExpressionStatement[341013-341040]:ExpressionStatement[341043-341070]"
  }, {
    "left" : "g.textureMode(mode);",
    "right" : "g.textureMode(mode);",
    "info" : "ExpressionStatement[341045-341065]:ExpressionStatement[341075-341095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[341414-341498]:Block[341444-341528]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[341420-341469]:IfStatement[341450-341499]"
  }, {
    "left" : "recorder.textureWrap(wrap);",
    "right" : "recorder.textureWrap(wrap);",
    "info" : "ExpressionStatement[341442-341469]:ExpressionStatement[341472-341499]"
  }, {
    "left" : "g.textureWrap(wrap);",
    "right" : "g.textureWrap(wrap);",
    "info" : "ExpressionStatement[341474-341494]:ExpressionStatement[341504-341524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[342280-342358]:Block[342310-342388]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[342286-342332]:IfStatement[342316-342362]"
  }, {
    "left" : "recorder.texture(image);",
    "right" : "recorder.texture(image);",
    "info" : "ExpressionStatement[342308-342332]:ExpressionStatement[342338-342362]"
  }, {
    "left" : "g.texture(image);",
    "right" : "g.texture(image);",
    "info" : "ExpressionStatement[342337-342354]:ExpressionStatement[342367-342384]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[342506-342578]:Block[342536-342608]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[342512-342555]:IfStatement[342542-342585]"
  }, {
    "left" : "recorder.noTexture();",
    "right" : "recorder.noTexture();",
    "info" : "ExpressionStatement[342534-342555]:ExpressionStatement[342564-342585]"
  }, {
    "left" : "g.noTexture();",
    "right" : "g.noTexture();",
    "info" : "ExpressionStatement[342560-342574]:ExpressionStatement[342590-342604]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[342620-342694]:Block[342650-342724]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[342626-342670]:IfStatement[342656-342700]"
  }, {
    "left" : "recorder.vertex(x, y);",
    "right" : "recorder.vertex(x, y);",
    "info" : "ExpressionStatement[342648-342670]:ExpressionStatement[342678-342700]"
  }, {
    "left" : "g.vertex(x, y);",
    "right" : "g.vertex(x, y);",
    "info" : "ExpressionStatement[342675-342690]:ExpressionStatement[342705-342720]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[342745-342825]:Block[342775-342855]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[342751-342798]:IfStatement[342781-342828]"
  }, {
    "left" : "recorder.vertex(x, y, z);",
    "right" : "recorder.vertex(x, y, z);",
    "info" : "ExpressionStatement[342773-342798]:ExpressionStatement[342803-342828]"
  }, {
    "left" : "g.vertex(x, y, z);",
    "right" : "g.vertex(x, y, z);",
    "info" : "ExpressionStatement[342803-342821]:ExpressionStatement[342833-342851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[343060-343128]:Block[343090-343158]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[343066-343107]:IfStatement[343096-343137]"
  }, {
    "left" : "recorder.vertex(v);",
    "right" : "recorder.vertex(v);",
    "info" : "ExpressionStatement[343088-343107]:ExpressionStatement[343118-343137]"
  }, {
    "left" : "g.vertex(v);",
    "right" : "g.vertex(v);",
    "info" : "ExpressionStatement[343112-343124]:ExpressionStatement[343142-343154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[343188-343274]:Block[343218-343304]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[343194-343244]:IfStatement[343224-343274]"
  }, {
    "left" : "recorder.vertex(x, y, u, v);",
    "right" : "recorder.vertex(x, y, u, v);",
    "info" : "ExpressionStatement[343216-343244]:ExpressionStatement[343246-343274]"
  }, {
    "left" : "g.vertex(x, y, u, v);",
    "right" : "g.vertex(x, y, u, v);",
    "info" : "ExpressionStatement[343249-343270]:ExpressionStatement[343279-343300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[344909-345001]:Block[344939-345031]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[344915-344968]:IfStatement[344945-344998]"
  }, {
    "left" : "recorder.vertex(x, y, z, u, v);",
    "right" : "recorder.vertex(x, y, z, u, v);",
    "info" : "ExpressionStatement[344937-344968]:ExpressionStatement[344967-344998]"
  }, {
    "left" : "g.vertex(x, y, z, u, v);",
    "right" : "g.vertex(x, y, z, u, v);",
    "info" : "ExpressionStatement[344973-344997]:ExpressionStatement[345003-345027]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[345071-345149]:Block[345101-345179]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[345077-345123]:IfStatement[345107-345153]"
  }, {
    "left" : "recorder.beginContour();",
    "right" : "recorder.beginContour();",
    "info" : "ExpressionStatement[345099-345123]:ExpressionStatement[345129-345153]"
  }, {
    "left" : "g.beginContour();",
    "right" : "g.beginContour();",
    "info" : "ExpressionStatement[345128-345145]:ExpressionStatement[345158-345175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[345217-345291]:Block[345247-345321]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[345223-345267]:IfStatement[345253-345297]"
  }, {
    "left" : "recorder.endContour();",
    "right" : "recorder.endContour();",
    "info" : "ExpressionStatement[345245-345267]:ExpressionStatement[345275-345297]"
  }, {
    "left" : "g.endContour();",
    "right" : "g.endContour();",
    "info" : "ExpressionStatement[345272-345287]:ExpressionStatement[345302-345317]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[345319-345389]:Block[345349-345419]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[345325-345367]:IfStatement[345355-345397]"
  }, {
    "left" : "recorder.endShape();",
    "right" : "recorder.endShape();",
    "info" : "ExpressionStatement[345347-345367]:ExpressionStatement[345377-345397]"
  }, {
    "left" : "g.endShape();",
    "right" : "g.endShape();",
    "info" : "ExpressionStatement[345372-345385]:ExpressionStatement[345402-345415]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[346054-346132]:Block[346084-346162]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[346060-346106]:IfStatement[346090-346136]"
  }, {
    "left" : "recorder.endShape(mode);",
    "right" : "recorder.endShape(mode);",
    "info" : "ExpressionStatement[346082-346106]:ExpressionStatement[346112-346136]"
  }, {
    "left" : "g.endShape(mode);",
    "right" : "g.endShape(mode);",
    "info" : "ExpressionStatement[346111-346128]:ExpressionStatement[346141-346158]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[346321-346360]:Block[346351-346390]"
  }, {
    "left" : "return g.loadShape(filename);",
    "right" : "return g.loadShape(filename);",
    "info" : "ReturnStatement[346327-346356]:ReturnStatement[346357-346386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[346449-346497]:Block[346479-346527]"
  }, {
    "left" : "return g.loadShape(filename, options);",
    "right" : "return g.loadShape(filename, options);",
    "info" : "ReturnStatement[346455-346493]:ReturnStatement[346485-346523]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[346642-346675]:Block[346672-346705]"
  }, {
    "left" : "return g.createShape();",
    "right" : "return g.createShape();",
    "info" : "ReturnStatement[346648-346671]:ReturnStatement[346678-346701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[346716-346753]:Block[346746-346783]"
  }, {
    "left" : "return g.createShape(type);",
    "right" : "return g.createShape(type);",
    "info" : "ReturnStatement[346722-346749]:ReturnStatement[346752-346779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[346957-346997]:Block[346987-347027]"
  }, {
    "left" : "return g.createShape(kind, p);",
    "right" : "return g.createShape(kind, p);",
    "info" : "ReturnStatement[346963-346993]:ReturnStatement[346993-347023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[347322-347366]:Block[347352-347396]"
  }, {
    "left" : "return g.loadShader(fragFilename);",
    "right" : "return g.loadShader(fragFilename);",
    "info" : "ReturnStatement[347328-347362]:ReturnStatement[347358-347392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[347503-347561]:Block[347533-347591]"
  }, {
    "left" : "return g.loadShader(fragFilename, vertFilename);",
    "right" : "return g.loadShader(fragFilename, vertFilename);",
    "info" : "ReturnStatement[347509-347557]:ReturnStatement[347539-347587]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[347855-347933]:Block[347885-347963]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[347861-347907]:IfStatement[347891-347937]"
  }, {
    "left" : "recorder.shader(shader);",
    "right" : "recorder.shader(shader);",
    "info" : "ExpressionStatement[347883-347907]:ExpressionStatement[347913-347937]"
  }, {
    "left" : "g.shader(shader);",
    "right" : "g.shader(shader);",
    "info" : "ExpressionStatement[347912-347929]:ExpressionStatement[347942-347959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[348063-348153]:Block[348093-348183]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[348069-348121]:IfStatement[348099-348151]"
  }, {
    "left" : "recorder.shader(shader, kind);",
    "right" : "recorder.shader(shader, kind);",
    "info" : "ExpressionStatement[348091-348121]:ExpressionStatement[348121-348151]"
  }, {
    "left" : "g.shader(shader, kind);",
    "right" : "g.shader(shader, kind);",
    "info" : "ExpressionStatement[348126-348149]:ExpressionStatement[348156-348179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[348404-348480]:Block[348434-348510]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[348410-348455]:IfStatement[348440-348485]"
  }, {
    "left" : "recorder.resetShader();",
    "right" : "recorder.resetShader();",
    "info" : "ExpressionStatement[348432-348455]:ExpressionStatement[348462-348485]"
  }, {
    "left" : "g.resetShader();",
    "right" : "g.resetShader();",
    "info" : "ExpressionStatement[348460-348476]:ExpressionStatement[348490-348506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[348599-348683]:Block[348629-348713]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[348605-348654]:IfStatement[348635-348684]"
  }, {
    "left" : "recorder.resetShader(kind);",
    "right" : "recorder.resetShader(kind);",
    "info" : "ExpressionStatement[348627-348654]:ExpressionStatement[348657-348684]"
  }, {
    "left" : "g.resetShader(kind);",
    "right" : "g.resetShader(kind);",
    "info" : "ExpressionStatement[348659-348679]:ExpressionStatement[348689-348709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[348783-348861]:Block[348813-348891]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[348789-348835]:IfStatement[348819-348865]"
  }, {
    "left" : "recorder.filter(shader);",
    "right" : "recorder.filter(shader);",
    "info" : "ExpressionStatement[348811-348835]:ExpressionStatement[348841-348865]"
  }, {
    "left" : "g.filter(shader);",
    "right" : "g.filter(shader);",
    "info" : "ExpressionStatement[348840-348857]:ExpressionStatement[348870-348887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[349168-349250]:Block[349198-349280]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[349174-349222]:IfStatement[349204-349252]"
  }, {
    "left" : "recorder.clip(a, b, c, d);",
    "right" : "recorder.clip(a, b, c, d);",
    "info" : "ExpressionStatement[349196-349222]:ExpressionStatement[349226-349252]"
  }, {
    "left" : "g.clip(a, b, c, d);",
    "right" : "g.clip(a, b, c, d);",
    "info" : "ExpressionStatement[349227-349246]:ExpressionStatement[349257-349276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[349318-349384]:Block[349348-349414]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[349324-349364]:IfStatement[349354-349394]"
  }, {
    "left" : "recorder.noClip();",
    "right" : "recorder.noClip();",
    "info" : "ExpressionStatement[349346-349364]:ExpressionStatement[349376-349394]"
  }, {
    "left" : "g.noClip();",
    "right" : "g.noClip();",
    "info" : "ExpressionStatement[349369-349380]:ExpressionStatement[349399-349410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[349673-349753]:Block[349703-349783]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[349679-349726]:IfStatement[349709-349756]"
  }, {
    "left" : "recorder.blendMode(mode);",
    "right" : "recorder.blendMode(mode);",
    "info" : "ExpressionStatement[349701-349726]:ExpressionStatement[349731-349756]"
  }, {
    "left" : "g.blendMode(mode);",
    "right" : "g.blendMode(mode);",
    "info" : "ExpressionStatement[349731-349749]:ExpressionStatement[349761-349779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[349897-350019]:Block[349927-350049]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[349903-349971]:IfStatement[349933-350001]"
  }, {
    "left" : "recorder.bezierVertex(x2, y2, x3, y3, x4, y4);",
    "right" : "recorder.bezierVertex(x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[349925-349971]:ExpressionStatement[349955-350001]"
  }, {
    "left" : "g.bezierVertex(x2, y2, x3, y3, x4, y4);",
    "right" : "g.bezierVertex(x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[349976-350015]:ExpressionStatement[350006-350045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[351765-351911]:Block[351795-351941]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[351771-351851]:IfStatement[351801-351881]"
  }, {
    "left" : "recorder.bezierVertex(x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "right" : "recorder.bezierVertex(x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "info" : "ExpressionStatement[351793-351851]:ExpressionStatement[351823-351881]"
  }, {
    "left" : "g.bezierVertex(x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "right" : "g.bezierVertex(x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "info" : "ExpressionStatement[351856-351907]:ExpressionStatement[351886-351937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[352563-352675]:Block[352593-352705]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[352569-352632]:IfStatement[352599-352662]"
  }, {
    "left" : "recorder.quadraticVertex(cx, cy, x3, y3);",
    "right" : "recorder.quadraticVertex(cx, cy, x3, y3);",
    "info" : "ExpressionStatement[352591-352632]:ExpressionStatement[352621-352662]"
  }, {
    "left" : "g.quadraticVertex(cx, cy, x3, y3);",
    "right" : "g.quadraticVertex(cx, cy, x3, y3);",
    "info" : "ExpressionStatement[352637-352671]:ExpressionStatement[352667-352701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[352915-353043]:Block[352945-353073]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[352921-352992]:IfStatement[352951-353022]"
  }, {
    "left" : "recorder.quadraticVertex(cx, cy, cz, x3, y3, z3);",
    "right" : "recorder.quadraticVertex(cx, cy, cz, x3, y3, z3);",
    "info" : "ExpressionStatement[352943-352992]:ExpressionStatement[352973-353022]"
  }, {
    "left" : "g.quadraticVertex(cx, cy, cz, x3, y3, z3);",
    "right" : "g.quadraticVertex(cx, cy, cz, x3, y3, z3);",
    "info" : "ExpressionStatement[352997-353039]:ExpressionStatement[353027-353069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[354501-354585]:Block[354531-354615]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[354507-354556]:IfStatement[354537-354586]"
  }, {
    "left" : "recorder.curveVertex(x, y);",
    "right" : "recorder.curveVertex(x, y);",
    "info" : "ExpressionStatement[354529-354556]:ExpressionStatement[354559-354586]"
  }, {
    "left" : "g.curveVertex(x, y);",
    "right" : "g.curveVertex(x, y);",
    "info" : "ExpressionStatement[354561-354581]:ExpressionStatement[354591-354611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[354698-354788]:Block[354728-354818]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[354704-354756]:IfStatement[354734-354786]"
  }, {
    "left" : "recorder.curveVertex(x, y, z);",
    "right" : "recorder.curveVertex(x, y, z);",
    "info" : "ExpressionStatement[354726-354756]:ExpressionStatement[354756-354786]"
  }, {
    "left" : "g.curveVertex(x, y, z);",
    "right" : "g.curveVertex(x, y, z);",
    "info" : "ExpressionStatement[354761-354784]:ExpressionStatement[354791-354814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[355447-355519]:Block[355477-355549]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[355453-355496]:IfStatement[355483-355526]"
  }, {
    "left" : "recorder.point(x, y);",
    "right" : "recorder.point(x, y);",
    "info" : "ExpressionStatement[355475-355496]:ExpressionStatement[355505-355526]"
  }, {
    "left" : "g.point(x, y);",
    "right" : "g.point(x, y);",
    "info" : "ExpressionStatement[355501-355515]:ExpressionStatement[355531-355545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[355621-355699]:Block[355651-355729]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[355627-355673]:IfStatement[355657-355703]"
  }, {
    "left" : "recorder.point(x, y, z);",
    "right" : "recorder.point(x, y, z);",
    "info" : "ExpressionStatement[355649-355673]:ExpressionStatement[355679-355703]"
  }, {
    "left" : "g.point(x, y, z);",
    "right" : "g.point(x, y, z);",
    "info" : "ExpressionStatement[355678-355695]:ExpressionStatement[355708-355725]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[356908-356998]:Block[356938-357028]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[356914-356966]:IfStatement[356944-356996]"
  }, {
    "left" : "recorder.line(x1, y1, x2, y2);",
    "right" : "recorder.line(x1, y1, x2, y2);",
    "info" : "ExpressionStatement[356936-356966]:ExpressionStatement[356966-356996]"
  }, {
    "left" : "g.line(x1, y1, x2, y2);",
    "right" : "g.line(x1, y1, x2, y2);",
    "info" : "ExpressionStatement[356971-356994]:ExpressionStatement[357001-357024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[357206-357312]:Block[357236-357342]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[357212-357272]:IfStatement[357242-357302]"
  }, {
    "left" : "recorder.line(x1, y1, z1, x2, y2, z2);",
    "right" : "recorder.line(x1, y1, z1, x2, y2, z2);",
    "info" : "ExpressionStatement[357234-357272]:ExpressionStatement[357264-357302]"
  }, {
    "left" : "g.line(x1, y1, z1, x2, y2, z2);",
    "right" : "g.line(x1, y1, z1, x2, y2, z2);",
    "info" : "ExpressionStatement[357277-357308]:ExpressionStatement[357307-357338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[358092-358206]:Block[358122-358236]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[358098-358162]:IfStatement[358128-358192]"
  }, {
    "left" : "recorder.triangle(x1, y1, x2, y2, x3, y3);",
    "right" : "recorder.triangle(x1, y1, x2, y2, x3, y3);",
    "info" : "ExpressionStatement[358120-358162]:ExpressionStatement[358150-358192]"
  }, {
    "left" : "g.triangle(x1, y1, x2, y2, x3, y3);",
    "right" : "g.triangle(x1, y1, x2, y2, x3, y3);",
    "info" : "ExpressionStatement[358167-358202]:ExpressionStatement[358197-358232]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[359174-359296]:Block[359204-359326]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[359180-359248]:IfStatement[359210-359278]"
  }, {
    "left" : "recorder.quad(x1, y1, x2, y2, x3, y3, x4, y4);",
    "right" : "recorder.quad(x1, y1, x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[359202-359248]:ExpressionStatement[359232-359278]"
  }, {
    "left" : "g.quad(x1, y1, x2, y2, x3, y3, x4, y4);",
    "right" : "g.quad(x1, y1, x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[359253-359292]:ExpressionStatement[359283-359322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[360613-360691]:Block[360643-360721]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[360619-360665]:IfStatement[360649-360695]"
  }, {
    "left" : "recorder.rectMode(mode);",
    "right" : "recorder.rectMode(mode);",
    "info" : "ExpressionStatement[360641-360665]:ExpressionStatement[360671-360695]"
  }, {
    "left" : "g.rectMode(mode);",
    "right" : "g.rectMode(mode);",
    "info" : "ExpressionStatement[360670-360687]:ExpressionStatement[360700-360717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[361538-361620]:Block[361568-361650]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[361544-361592]:IfStatement[361574-361622]"
  }, {
    "left" : "recorder.rect(a, b, c, d);",
    "right" : "recorder.rect(a, b, c, d);",
    "info" : "ExpressionStatement[361566-361592]:ExpressionStatement[361596-361622]"
  }, {
    "left" : "g.rect(a, b, c, d);",
    "right" : "g.rect(a, b, c, d);",
    "info" : "ExpressionStatement[361597-361616]:ExpressionStatement[361627-361646]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[361740-361828]:Block[361770-361858]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[361746-361797]:IfStatement[361776-361827]"
  }, {
    "left" : "recorder.rect(a, b, c, d, r);",
    "right" : "recorder.rect(a, b, c, d, r);",
    "info" : "ExpressionStatement[361768-361797]:ExpressionStatement[361798-361827]"
  }, {
    "left" : "g.rect(a, b, c, d, r);",
    "right" : "g.rect(a, b, c, d, r);",
    "info" : "ExpressionStatement[361802-361824]:ExpressionStatement[361832-361854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[362133-362247]:Block[362163-362277]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[362139-362203]:IfStatement[362169-362233]"
  }, {
    "left" : "recorder.rect(a, b, c, d, tl, tr, br, bl);",
    "right" : "recorder.rect(a, b, c, d, tl, tr, br, bl);",
    "info" : "ExpressionStatement[362161-362203]:ExpressionStatement[362191-362233]"
  }, {
    "left" : "g.rect(a, b, c, d, tl, tr, br, bl);",
    "right" : "g.rect(a, b, c, d, tl, tr, br, bl);",
    "info" : "ExpressionStatement[362208-362243]:ExpressionStatement[362238-362273]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[363308-363392]:Block[363338-363422]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[363314-363363]:IfStatement[363344-363393]"
  }, {
    "left" : "recorder.ellipseMode(mode);",
    "right" : "recorder.ellipseMode(mode);",
    "info" : "ExpressionStatement[363336-363363]:ExpressionStatement[363366-363393]"
  }, {
    "left" : "g.ellipseMode(mode);",
    "right" : "g.ellipseMode(mode);",
    "info" : "ExpressionStatement[363368-363388]:ExpressionStatement[363398-363418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[364162-364250]:Block[364192-364280]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[364168-364219]:IfStatement[364198-364249]"
  }, {
    "left" : "recorder.ellipse(a, b, c, d);",
    "right" : "recorder.ellipse(a, b, c, d);",
    "info" : "ExpressionStatement[364190-364219]:ExpressionStatement[364220-364249]"
  }, {
    "left" : "g.ellipse(a, b, c, d);",
    "right" : "g.ellipse(a, b, c, d);",
    "info" : "ExpressionStatement[364224-364246]:ExpressionStatement[364254-364276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[365321-365427]:Block[365351-365457]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[365327-365387]:IfStatement[365357-365417]"
  }, {
    "left" : "recorder.arc(a, b, c, d, start, stop);",
    "right" : "recorder.arc(a, b, c, d, start, stop);",
    "info" : "ExpressionStatement[365349-365387]:ExpressionStatement[365379-365417]"
  }, {
    "left" : "g.arc(a, b, c, d, start, stop);",
    "right" : "g.arc(a, b, c, d, start, stop);",
    "info" : "ExpressionStatement[365392-365423]:ExpressionStatement[365422-365453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[365592-365710]:Block[365622-365740]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[365598-365664]:IfStatement[365628-365694]"
  }, {
    "left" : "recorder.arc(a, b, c, d, start, stop, mode);",
    "right" : "recorder.arc(a, b, c, d, start, stop, mode);",
    "info" : "ExpressionStatement[365620-365664]:ExpressionStatement[365650-365694]"
  }, {
    "left" : "g.arc(a, b, c, d, start, stop, mode);",
    "right" : "g.arc(a, b, c, d, start, stop, mode);",
    "info" : "ExpressionStatement[365669-365706]:ExpressionStatement[365699-365736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[366074-366142]:Block[366104-366172]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[366080-366121]:IfStatement[366110-366151]"
  }, {
    "left" : "recorder.box(size);",
    "right" : "recorder.box(size);",
    "info" : "ExpressionStatement[366102-366121]:ExpressionStatement[366132-366151]"
  }, {
    "left" : "g.box(size);",
    "right" : "g.box(size);",
    "info" : "ExpressionStatement[366126-366138]:ExpressionStatement[366156-366168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[366364-366438]:Block[366394-366468]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[366370-366414]:IfStatement[366400-366444]"
  }, {
    "left" : "recorder.box(w, h, d);",
    "right" : "recorder.box(w, h, d);",
    "info" : "ExpressionStatement[366392-366414]:ExpressionStatement[366422-366444]"
  }, {
    "left" : "g.box(w, h, d);",
    "right" : "g.box(w, h, d);",
    "info" : "ExpressionStatement[366419-366434]:ExpressionStatement[366449-366464]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[367721-367805]:Block[367751-367835]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[367727-367776]:IfStatement[367757-367806]"
  }, {
    "left" : "recorder.sphereDetail(res);",
    "right" : "recorder.sphereDetail(res);",
    "info" : "ExpressionStatement[367749-367776]:ExpressionStatement[367779-367806]"
  }, {
    "left" : "g.sphereDetail(res);",
    "right" : "g.sphereDetail(res);",
    "info" : "ExpressionStatement[367781-367801]:ExpressionStatement[367811-367831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[368024-368122]:Block[368054-368152]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[368030-368086]:IfStatement[368060-368116]"
  }, {
    "left" : "recorder.sphereDetail(ures, vres);",
    "right" : "recorder.sphereDetail(ures, vres);",
    "info" : "ExpressionStatement[368052-368086]:ExpressionStatement[368082-368116]"
  }, {
    "left" : "g.sphereDetail(ures, vres);",
    "right" : "g.sphereDetail(ures, vres);",
    "info" : "ExpressionStatement[368091-368118]:ExpressionStatement[368121-368148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[369135-369203]:Block[369165-369233]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[369141-369182]:IfStatement[369171-369212]"
  }, {
    "left" : "recorder.sphere(r);",
    "right" : "recorder.sphere(r);",
    "info" : "ExpressionStatement[369163-369182]:ExpressionStatement[369193-369212]"
  }, {
    "left" : "g.sphere(r);",
    "right" : "g.sphere(r);",
    "info" : "ExpressionStatement[369187-369199]:ExpressionStatement[369217-369229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[370903-370949]:Block[370933-370979]"
  }, {
    "left" : "return g.bezierPoint(a, b, c, d, t);",
    "right" : "return g.bezierPoint(a, b, c, d, t);",
    "info" : "ReturnStatement[370909-370945]:ReturnStatement[370939-370975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[371937-371985]:Block[371967-372015]"
  }, {
    "left" : "return g.bezierTangent(a, b, c, d, t);",
    "right" : "return g.bezierTangent(a, b, c, d, t);",
    "info" : "ReturnStatement[371943-371981]:ReturnStatement[371973-372011]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[372611-372701]:Block[372641-372731]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[372617-372669]:IfStatement[372647-372699]"
  }, {
    "left" : "recorder.bezierDetail(detail);",
    "right" : "recorder.bezierDetail(detail);",
    "info" : "ExpressionStatement[372639-372669]:ExpressionStatement[372669-372699]"
  }, {
    "left" : "g.bezierDetail(detail);",
    "right" : "g.bezierDetail(detail);",
    "info" : "ExpressionStatement[372674-372697]:ExpressionStatement[372704-372727]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[372868-372994]:Block[372898-373024]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[372874-372944]:IfStatement[372904-372974]"
  }, {
    "left" : "recorder.bezier(x1, y1, x2, y2, x3, y3, x4, y4);",
    "right" : "recorder.bezier(x1, y1, x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[372896-372944]:ExpressionStatement[372926-372974]"
  }, {
    "left" : "g.bezier(x1, y1, x2, y2, x3, y3, x4, y4);",
    "right" : "g.bezier(x1, y1, x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[372949-372990]:ExpressionStatement[372979-373020]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[375545-375703]:Block[375575-375733]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[375551-375637]:IfStatement[375581-375667]"
  }, {
    "left" : "recorder.bezier(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "right" : "recorder.bezier(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "info" : "ExpressionStatement[375573-375637]:ExpressionStatement[375603-375667]"
  }, {
    "left" : "g.bezier(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "right" : "g.bezier(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "info" : "ExpressionStatement[375642-375699]:ExpressionStatement[375672-375729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[376686-376731]:Block[376716-376761]"
  }, {
    "left" : "return g.curvePoint(a, b, c, d, t);",
    "right" : "return g.curvePoint(a, b, c, d, t);",
    "info" : "ReturnStatement[376692-376727]:ReturnStatement[376722-376757]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[377730-377777]:Block[377760-377807]"
  }, {
    "left" : "return g.curveTangent(a, b, c, d, t);",
    "right" : "return g.curveTangent(a, b, c, d, t);",
    "info" : "ReturnStatement[377736-377773]:ReturnStatement[377766-377803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[378393-378481]:Block[378423-378511]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[378399-378450]:IfStatement[378429-378480]"
  }, {
    "left" : "recorder.curveDetail(detail);",
    "right" : "recorder.curveDetail(detail);",
    "info" : "ExpressionStatement[378421-378450]:ExpressionStatement[378451-378480]"
  }, {
    "left" : "g.curveDetail(detail);",
    "right" : "g.curveDetail(detail);",
    "info" : "ExpressionStatement[378455-378477]:ExpressionStatement[378485-378507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[379427-379527]:Block[379457-379557]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[379433-379490]:IfStatement[379463-379520]"
  }, {
    "left" : "recorder.curveTightness(tightness);",
    "right" : "recorder.curveTightness(tightness);",
    "info" : "ExpressionStatement[379455-379490]:ExpressionStatement[379485-379520]"
  }, {
    "left" : "g.curveTightness(tightness);",
    "right" : "g.curveTightness(tightness);",
    "info" : "ExpressionStatement[379495-379523]:ExpressionStatement[379525-379553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[381539-381663]:Block[381569-381693]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[381545-381614]:IfStatement[381575-381644]"
  }, {
    "left" : "recorder.curve(x1, y1, x2, y2, x3, y3, x4, y4);",
    "right" : "recorder.curve(x1, y1, x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[381567-381614]:ExpressionStatement[381597-381644]"
  }, {
    "left" : "g.curve(x1, y1, x2, y2, x3, y3, x4, y4);",
    "right" : "g.curve(x1, y1, x2, y2, x3, y3, x4, y4);",
    "info" : "ExpressionStatement[381619-381659]:ExpressionStatement[381649-381689]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[382094-382250]:Block[382124-382280]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[382100-382185]:IfStatement[382130-382215]"
  }, {
    "left" : "recorder.curve(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "right" : "recorder.curve(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "info" : "ExpressionStatement[382122-382185]:ExpressionStatement[382152-382215]"
  }, {
    "left" : "g.curve(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "right" : "g.curve(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4);",
    "info" : "ExpressionStatement[382190-382246]:ExpressionStatement[382220-382276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[383385-383465]:Block[383415-383495]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[383391-383438]:IfStatement[383421-383468]"
  }, {
    "left" : "recorder.imageMode(mode);",
    "right" : "recorder.imageMode(mode);",
    "info" : "ExpressionStatement[383413-383438]:ExpressionStatement[383443-383468]"
  }, {
    "left" : "g.imageMode(mode);",
    "right" : "g.imageMode(mode);",
    "info" : "ExpressionStatement[383443-383461]:ExpressionStatement[383473-383491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[385149-385231]:Block[385179-385261]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[385155-385203]:IfStatement[385185-385233]"
  }, {
    "left" : "recorder.image(img, a, b);",
    "right" : "recorder.image(img, a, b);",
    "info" : "ExpressionStatement[385177-385203]:ExpressionStatement[385207-385233]"
  }, {
    "left" : "g.image(img, a, b);",
    "right" : "g.image(img, a, b);",
    "info" : "ExpressionStatement[385208-385227]:ExpressionStatement[385238-385257]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[385397-385491]:Block[385427-385521]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[385403-385457]:IfStatement[385433-385487]"
  }, {
    "left" : "recorder.image(img, a, b, c, d);",
    "right" : "recorder.image(img, a, b, c, d);",
    "info" : "ExpressionStatement[385425-385457]:ExpressionStatement[385455-385487]"
  }, {
    "left" : "g.image(img, a, b, c, d);",
    "right" : "g.image(img, a, b, c, d);",
    "info" : "ExpressionStatement[385462-385487]:ExpressionStatement[385492-385517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[385852-385978]:Block[385882-386008]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[385858-385928]:IfStatement[385888-385958]"
  }, {
    "left" : "recorder.image(img, a, b, c, d, u1, v1, u2, v2);",
    "right" : "recorder.image(img, a, b, c, d, u1, v1, u2, v2);",
    "info" : "ExpressionStatement[385880-385928]:ExpressionStatement[385910-385958]"
  }, {
    "left" : "g.image(img, a, b, c, d, u1, v1, u2, v2);",
    "right" : "g.image(img, a, b, c, d, u1, v1, u2, v2);",
    "info" : "ExpressionStatement[385933-385974]:ExpressionStatement[385963-386004]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[387052-387132]:Block[387082-387162]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[387058-387105]:IfStatement[387088-387135]"
  }, {
    "left" : "recorder.shapeMode(mode);",
    "right" : "recorder.shapeMode(mode);",
    "info" : "ExpressionStatement[387080-387105]:ExpressionStatement[387110-387135]"
  }, {
    "left" : "g.shapeMode(mode);",
    "right" : "g.shapeMode(mode);",
    "info" : "ExpressionStatement[387110-387128]:ExpressionStatement[387140-387158]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[387169-387243]:Block[387199-387273]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[387175-387219]:IfStatement[387205-387249]"
  }, {
    "left" : "recorder.shape(shape);",
    "right" : "recorder.shape(shape);",
    "info" : "ExpressionStatement[387197-387219]:ExpressionStatement[387227-387249]"
  }, {
    "left" : "g.shape(shape);",
    "right" : "g.shape(shape);",
    "info" : "ExpressionStatement[387224-387239]:ExpressionStatement[387254-387269]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[388641-388727]:Block[388671-388757]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[388647-388697]:IfStatement[388677-388727]"
  }, {
    "left" : "recorder.shape(shape, x, y);",
    "right" : "recorder.shape(shape, x, y);",
    "info" : "ExpressionStatement[388669-388697]:ExpressionStatement[388699-388727]"
  }, {
    "left" : "g.shape(shape, x, y);",
    "right" : "g.shape(shape, x, y);",
    "info" : "ExpressionStatement[388702-388723]:ExpressionStatement[388732-388753]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[388975-389073]:Block[389005-389103]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[388981-389037]:IfStatement[389011-389067]"
  }, {
    "left" : "recorder.shape(shape, a, b, c, d);",
    "right" : "recorder.shape(shape, a, b, c, d);",
    "info" : "ExpressionStatement[389003-389037]:ExpressionStatement[389033-389067]"
  }, {
    "left" : "g.shape(shape, a, b, c, d);",
    "right" : "g.shape(shape, a, b, c, d);",
    "info" : "ExpressionStatement[389042-389069]:ExpressionStatement[389072-389099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[389112-389196]:Block[389142-389226]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[389118-389167]:IfStatement[389148-389197]"
  }, {
    "left" : "recorder.textAlign(alignX);",
    "right" : "recorder.textAlign(alignX);",
    "info" : "ExpressionStatement[389140-389167]:ExpressionStatement[389170-389197]"
  }, {
    "left" : "g.textAlign(alignX);",
    "right" : "g.textAlign(alignX);",
    "info" : "ExpressionStatement[389172-389192]:ExpressionStatement[389202-389222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[391221-391321]:Block[391251-391351]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[391227-391284]:IfStatement[391257-391314]"
  }, {
    "left" : "recorder.textAlign(alignX, alignY);",
    "right" : "recorder.textAlign(alignX, alignY);",
    "info" : "ExpressionStatement[391249-391284]:ExpressionStatement[391279-391314]"
  }, {
    "left" : "g.textAlign(alignX, alignY);",
    "right" : "g.textAlign(alignX, alignY);",
    "info" : "ExpressionStatement[391289-391317]:ExpressionStatement[391319-391347]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[391805-391837]:Block[391835-391867]"
  }, {
    "left" : "return g.textAscent();",
    "right" : "return g.textAscent();",
    "info" : "ReturnStatement[391811-391833]:ReturnStatement[391841-391863]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[392323-392356]:Block[392353-392386]"
  }, {
    "left" : "return g.textDescent();",
    "right" : "return g.textDescent();",
    "info" : "ReturnStatement[392329-392352]:ReturnStatement[392359-392382]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[393868-393948]:Block[393898-393978]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[393874-393921]:IfStatement[393904-393951]"
  }, {
    "left" : "recorder.textFont(which);",
    "right" : "recorder.textFont(which);",
    "info" : "ExpressionStatement[393896-393921]:ExpressionStatement[393926-393951]"
  }, {
    "left" : "g.textFont(which);",
    "right" : "g.textFont(which);",
    "info" : "ExpressionStatement[393926-393944]:ExpressionStatement[393956-393974]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[394071-394163]:Block[394101-394193]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[394077-394130]:IfStatement[394107-394160]"
  }, {
    "left" : "recorder.textFont(which, size);",
    "right" : "recorder.textFont(which, size);",
    "info" : "ExpressionStatement[394099-394130]:ExpressionStatement[394129-394160]"
  }, {
    "left" : "g.textFont(which, size);",
    "right" : "g.textFont(which, size);",
    "info" : "ExpressionStatement[394135-394159]:ExpressionStatement[394165-394189]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[394739-394829]:Block[394769-394859]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[394745-394797]:IfStatement[394775-394827]"
  }, {
    "left" : "recorder.textLeading(leading);",
    "right" : "recorder.textLeading(leading);",
    "info" : "ExpressionStatement[394767-394797]:ExpressionStatement[394797-394827]"
  }, {
    "left" : "g.textLeading(leading);",
    "right" : "g.textLeading(leading);",
    "info" : "ExpressionStatement[394802-394825]:ExpressionStatement[394832-394855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[396356-396434]:Block[396386-396464]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[396362-396408]:IfStatement[396392-396438]"
  }, {
    "left" : "recorder.textMode(mode);",
    "right" : "recorder.textMode(mode);",
    "info" : "ExpressionStatement[396384-396408]:ExpressionStatement[396414-396438]"
  }, {
    "left" : "g.textMode(mode);",
    "right" : "g.textMode(mode);",
    "info" : "ExpressionStatement[396413-396430]:ExpressionStatement[396443-396460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[396968-397046]:Block[396998-397076]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[396974-397020]:IfStatement[397004-397050]"
  }, {
    "left" : "recorder.textSize(size);",
    "right" : "recorder.textSize(size);",
    "info" : "ExpressionStatement[396996-397020]:ExpressionStatement[397026-397050]"
  }, {
    "left" : "g.textSize(size);",
    "right" : "g.textSize(size);",
    "info" : "ExpressionStatement[397025-397042]:ExpressionStatement[397055-397072]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[397133-397165]:Block[397163-397195]"
  }, {
    "left" : "return g.textWidth(c);",
    "right" : "return g.textWidth(c);",
    "info" : "ReturnStatement[397139-397161]:ReturnStatement[397169-397191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[397643-397677]:Block[397673-397707]"
  }, {
    "left" : "return g.textWidth(str);",
    "right" : "return g.textWidth(str);",
    "info" : "ReturnStatement[397649-397673]:ReturnStatement[397679-397703]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[397769-397820]:Block[397799-397850]"
  }, {
    "left" : "return g.textWidth(chars, start, length);",
    "right" : "return g.textWidth(chars, start, length);",
    "info" : "ReturnStatement[397775-397816]:ReturnStatement[397805-397846]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[399364-399440]:Block[399394-399470]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[399370-399415]:IfStatement[399400-399445]"
  }, {
    "left" : "recorder.text(c, x, y);",
    "right" : "recorder.text(c, x, y);",
    "info" : "ExpressionStatement[399392-399415]:ExpressionStatement[399422-399445]"
  }, {
    "left" : "g.text(c, x, y);",
    "right" : "g.text(c, x, y);",
    "info" : "ExpressionStatement[399420-399436]:ExpressionStatement[399450-399466]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[399544-399626]:Block[399574-399656]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[399550-399598]:IfStatement[399580-399628]"
  }, {
    "left" : "recorder.text(c, x, y, z);",
    "right" : "recorder.text(c, x, y, z);",
    "info" : "ExpressionStatement[399572-399598]:ExpressionStatement[399602-399628]"
  }, {
    "left" : "g.text(c, x, y, z);",
    "right" : "g.text(c, x, y, z);",
    "info" : "ExpressionStatement[399603-399622]:ExpressionStatement[399633-399652]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[399889-399969]:Block[399919-399999]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[399895-399942]:IfStatement[399925-399972]"
  }, {
    "left" : "recorder.text(str, x, y);",
    "right" : "recorder.text(str, x, y);",
    "info" : "ExpressionStatement[399917-399942]:ExpressionStatement[399947-399972]"
  }, {
    "left" : "g.text(str, x, y);",
    "right" : "g.text(str, x, y);",
    "info" : "ExpressionStatement[399947-399965]:ExpressionStatement[399977-399995]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[400481-400591]:Block[400511-400621]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[400487-400549]:IfStatement[400517-400579]"
  }, {
    "left" : "recorder.text(chars, start, stop, x, y);",
    "right" : "recorder.text(chars, start, stop, x, y);",
    "info" : "ExpressionStatement[400509-400549]:ExpressionStatement[400539-400579]"
  }, {
    "left" : "g.text(chars, start, stop, x, y);",
    "right" : "g.text(chars, start, stop, x, y);",
    "info" : "ExpressionStatement[400554-400587]:ExpressionStatement[400584-400617]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[400708-400794]:Block[400738-400824]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[400714-400764]:IfStatement[400744-400794]"
  }, {
    "left" : "recorder.text(str, x, y, z);",
    "right" : "recorder.text(str, x, y, z);",
    "info" : "ExpressionStatement[400736-400764]:ExpressionStatement[400766-400794]"
  }, {
    "left" : "g.text(str, x, y, z);",
    "right" : "g.text(str, x, y, z);",
    "info" : "ExpressionStatement[400769-400790]:ExpressionStatement[400799-400820]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[400897-401013]:Block[400927-401043]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[400903-400968]:IfStatement[400933-400998]"
  }, {
    "left" : "recorder.text(chars, start, stop, x, y, z);",
    "right" : "recorder.text(chars, start, stop, x, y, z);",
    "info" : "ExpressionStatement[400925-400968]:ExpressionStatement[400955-400998]"
  }, {
    "left" : "g.text(chars, start, stop, x, y, z);",
    "right" : "g.text(chars, start, stop, x, y, z);",
    "info" : "ExpressionStatement[400973-401009]:ExpressionStatement[401003-401039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[401968-402068]:Block[401998-402098]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[401974-402031]:IfStatement[402004-402061]"
  }, {
    "left" : "recorder.text(str, x1, y1, x2, y2);",
    "right" : "recorder.text(str, x1, y1, x2, y2);",
    "info" : "ExpressionStatement[401996-402031]:ExpressionStatement[402026-402061]"
  }, {
    "left" : "g.text(str, x1, y1, x2, y2);",
    "right" : "g.text(str, x1, y1, x2, y2);",
    "info" : "ExpressionStatement[402036-402064]:ExpressionStatement[402066-402094]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[402117-402197]:Block[402147-402227]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[402123-402170]:IfStatement[402153-402200]"
  }, {
    "left" : "recorder.text(num, x, y);",
    "right" : "recorder.text(num, x, y);",
    "info" : "ExpressionStatement[402145-402170]:ExpressionStatement[402175-402200]"
  }, {
    "left" : "g.text(num, x, y);",
    "right" : "g.text(num, x, y);",
    "info" : "ExpressionStatement[402175-402193]:ExpressionStatement[402205-402223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[402255-402341]:Block[402285-402371]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[402261-402311]:IfStatement[402291-402341]"
  }, {
    "left" : "recorder.text(num, x, y, z);",
    "right" : "recorder.text(num, x, y, z);",
    "info" : "ExpressionStatement[402283-402311]:ExpressionStatement[402313-402341]"
  }, {
    "left" : "g.text(num, x, y, z);",
    "right" : "g.text(num, x, y, z);",
    "info" : "ExpressionStatement[402316-402337]:ExpressionStatement[402346-402367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[402752-402832]:Block[402782-402862]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[402758-402805]:IfStatement[402788-402835]"
  }, {
    "left" : "recorder.text(num, x, y);",
    "right" : "recorder.text(num, x, y);",
    "info" : "ExpressionStatement[402780-402805]:ExpressionStatement[402810-402835]"
  }, {
    "left" : "g.text(num, x, y);",
    "right" : "g.text(num, x, y);",
    "info" : "ExpressionStatement[402810-402828]:ExpressionStatement[402840-402858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[402892-402978]:Block[402922-403008]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[402898-402948]:IfStatement[402928-402978]"
  }, {
    "left" : "recorder.text(num, x, y, z);",
    "right" : "recorder.text(num, x, y, z);",
    "info" : "ExpressionStatement[402920-402948]:ExpressionStatement[402950-402978]"
  }, {
    "left" : "g.text(num, x, y, z);",
    "right" : "g.text(num, x, y, z);",
    "info" : "ExpressionStatement[402953-402974]:ExpressionStatement[402983-403004]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[403920-403994]:Block[403950-404024]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[403926-403970]:IfStatement[403956-404000]"
  }, {
    "left" : "recorder.pushMatrix();",
    "right" : "recorder.pushMatrix();",
    "info" : "ExpressionStatement[403948-403970]:ExpressionStatement[403978-404000]"
  }, {
    "left" : "g.pushMatrix();",
    "right" : "g.pushMatrix();",
    "info" : "ExpressionStatement[403975-403990]:ExpressionStatement[404005-404020]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[404681-404753]:Block[404711-404783]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[404687-404730]:IfStatement[404717-404760]"
  }, {
    "left" : "recorder.popMatrix();",
    "right" : "recorder.popMatrix();",
    "info" : "ExpressionStatement[404709-404730]:ExpressionStatement[404739-404760]"
  }, {
    "left" : "g.popMatrix();",
    "right" : "g.popMatrix();",
    "info" : "ExpressionStatement[404735-404749]:ExpressionStatement[404765-404779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[406137-406217]:Block[406167-406247]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[406143-406190]:IfStatement[406173-406220]"
  }, {
    "left" : "recorder.translate(x, y);",
    "right" : "recorder.translate(x, y);",
    "info" : "ExpressionStatement[406165-406190]:ExpressionStatement[406195-406220]"
  }, {
    "left" : "g.translate(x, y);",
    "right" : "g.translate(x, y);",
    "info" : "ExpressionStatement[406195-406213]:ExpressionStatement[406225-406243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[406326-406412]:Block[406356-406442]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[406332-406382]:IfStatement[406362-406412]"
  }, {
    "left" : "recorder.translate(x, y, z);",
    "right" : "recorder.translate(x, y, z);",
    "info" : "ExpressionStatement[406354-406382]:ExpressionStatement[406384-406412]"
  }, {
    "left" : "g.translate(x, y, z);",
    "right" : "g.translate(x, y, z);",
    "info" : "ExpressionStatement[406387-406408]:ExpressionStatement[406417-406438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[407780-407856]:Block[407810-407886]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[407786-407831]:IfStatement[407816-407861]"
  }, {
    "left" : "recorder.rotate(angle);",
    "right" : "recorder.rotate(angle);",
    "info" : "ExpressionStatement[407808-407831]:ExpressionStatement[407838-407861]"
  }, {
    "left" : "g.rotate(angle);",
    "right" : "g.rotate(angle);",
    "info" : "ExpressionStatement[407836-407852]:ExpressionStatement[407866-407882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[409189-409267]:Block[409219-409297]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[409195-409241]:IfStatement[409225-409271]"
  }, {
    "left" : "recorder.rotateX(angle);",
    "right" : "recorder.rotateX(angle);",
    "info" : "ExpressionStatement[409217-409241]:ExpressionStatement[409247-409271]"
  }, {
    "left" : "g.rotateX(angle);",
    "right" : "g.rotateX(angle);",
    "info" : "ExpressionStatement[409246-409263]:ExpressionStatement[409276-409293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[410601-410679]:Block[410631-410709]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[410607-410653]:IfStatement[410637-410683]"
  }, {
    "left" : "recorder.rotateY(angle);",
    "right" : "recorder.rotateY(angle);",
    "info" : "ExpressionStatement[410629-410653]:ExpressionStatement[410659-410683]"
  }, {
    "left" : "g.rotateY(angle);",
    "right" : "g.rotateY(angle);",
    "info" : "ExpressionStatement[410658-410675]:ExpressionStatement[410688-410705]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[412013-412091]:Block[412043-412121]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[412019-412065]:IfStatement[412049-412095]"
  }, {
    "left" : "recorder.rotateZ(angle);",
    "right" : "recorder.rotateZ(angle);",
    "info" : "ExpressionStatement[412041-412065]:ExpressionStatement[412071-412095]"
  }, {
    "left" : "g.rotateZ(angle);",
    "right" : "g.rotateZ(angle);",
    "info" : "ExpressionStatement[412070-412087]:ExpressionStatement[412100-412117]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[412303-412397]:Block[412333-412427]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[412309-412363]:IfStatement[412339-412393]"
  }, {
    "left" : "recorder.rotate(angle, x, y, z);",
    "right" : "recorder.rotate(angle, x, y, z);",
    "info" : "ExpressionStatement[412331-412363]:ExpressionStatement[412361-412393]"
  }, {
    "left" : "g.rotate(angle, x, y, z);",
    "right" : "g.rotate(angle, x, y, z);",
    "info" : "ExpressionStatement[412368-412393]:ExpressionStatement[412398-412423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[413748-413814]:Block[413778-413844]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[413754-413794]:IfStatement[413784-413824]"
  }, {
    "left" : "recorder.scale(s);",
    "right" : "recorder.scale(s);",
    "info" : "ExpressionStatement[413776-413794]:ExpressionStatement[413806-413824]"
  }, {
    "left" : "g.scale(s);",
    "right" : "g.scale(s);",
    "info" : "ExpressionStatement[413799-413810]:ExpressionStatement[413829-413840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[414214-414286]:Block[414244-414316]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[414220-414263]:IfStatement[414250-414293]"
  }, {
    "left" : "recorder.scale(x, y);",
    "right" : "recorder.scale(x, y);",
    "info" : "ExpressionStatement[414242-414263]:ExpressionStatement[414272-414293]"
  }, {
    "left" : "g.scale(x, y);",
    "right" : "g.scale(x, y);",
    "info" : "ExpressionStatement[414268-414282]:ExpressionStatement[414298-414312]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[414407-414485]:Block[414437-414515]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[414413-414459]:IfStatement[414443-414489]"
  }, {
    "left" : "recorder.scale(x, y, z);",
    "right" : "recorder.scale(x, y, z);",
    "info" : "ExpressionStatement[414435-414459]:ExpressionStatement[414465-414489]"
  }, {
    "left" : "g.scale(x, y, z);",
    "right" : "g.scale(x, y, z);",
    "info" : "ExpressionStatement[414464-414481]:ExpressionStatement[414494-414511]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[415880-415956]:Block[415910-415986]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[415886-415931]:IfStatement[415916-415961]"
  }, {
    "left" : "recorder.shearX(angle);",
    "right" : "recorder.shearX(angle);",
    "info" : "ExpressionStatement[415908-415931]:ExpressionStatement[415938-415961]"
  }, {
    "left" : "g.shearX(angle);",
    "right" : "g.shearX(angle);",
    "info" : "ExpressionStatement[415936-415952]:ExpressionStatement[415966-415982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[417351-417427]:Block[417381-417457]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[417357-417402]:IfStatement[417387-417432]"
  }, {
    "left" : "recorder.shearY(angle);",
    "right" : "recorder.shearY(angle);",
    "info" : "ExpressionStatement[417379-417402]:ExpressionStatement[417409-417432]"
  }, {
    "left" : "g.shearY(angle);",
    "right" : "g.shearY(angle);",
    "info" : "ExpressionStatement[417407-417423]:ExpressionStatement[417437-417453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[417846-417922]:Block[417876-417952]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[417852-417897]:IfStatement[417882-417927]"
  }, {
    "left" : "recorder.resetMatrix();",
    "right" : "recorder.resetMatrix();",
    "info" : "ExpressionStatement[417874-417897]:ExpressionStatement[417904-417927]"
  }, {
    "left" : "g.resetMatrix();",
    "right" : "g.resetMatrix();",
    "info" : "ExpressionStatement[417902-417918]:ExpressionStatement[417932-417948]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[418502-418590]:Block[418532-418620]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[418508-418559]:IfStatement[418538-418589]"
  }, {
    "left" : "recorder.applyMatrix(source);",
    "right" : "recorder.applyMatrix(source);",
    "info" : "ExpressionStatement[418530-418559]:ExpressionStatement[418560-418589]"
  }, {
    "left" : "g.applyMatrix(source);",
    "right" : "g.applyMatrix(source);",
    "info" : "ExpressionStatement[418564-418586]:ExpressionStatement[418594-418616]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[418637-418725]:Block[418667-418755]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[418643-418694]:IfStatement[418673-418724]"
  }, {
    "left" : "recorder.applyMatrix(source);",
    "right" : "recorder.applyMatrix(source);",
    "info" : "ExpressionStatement[418665-418694]:ExpressionStatement[418695-418724]"
  }, {
    "left" : "g.applyMatrix(source);",
    "right" : "g.applyMatrix(source);",
    "info" : "ExpressionStatement[418699-418721]:ExpressionStatement[418729-418751]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[419272-419404]:Block[419302-419434]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[419278-419351]:IfStatement[419308-419381]"
  }, {
    "left" : "recorder.applyMatrix(n00, n01, n02, n10, n11, n12);",
    "right" : "recorder.applyMatrix(n00, n01, n02, n10, n11, n12);",
    "info" : "ExpressionStatement[419300-419351]:ExpressionStatement[419330-419381]"
  }, {
    "left" : "g.applyMatrix(n00, n01, n02, n10, n11, n12);",
    "right" : "g.applyMatrix(n00, n01, n02, n10, n11, n12);",
    "info" : "ExpressionStatement[419356-419400]:ExpressionStatement[419386-419430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[419451-419539]:Block[419481-419569]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[419457-419508]:IfStatement[419487-419538]"
  }, {
    "left" : "recorder.applyMatrix(source);",
    "right" : "recorder.applyMatrix(source);",
    "info" : "ExpressionStatement[419479-419508]:ExpressionStatement[419509-419538]"
  }, {
    "left" : "g.applyMatrix(source);",
    "right" : "g.applyMatrix(source);",
    "info" : "ExpressionStatement[419513-419535]:ExpressionStatement[419543-419565]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[420524-420756]:Block[420554-420786]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[420530-420653]:IfStatement[420560-420683]"
  }, {
    "left" : "recorder.applyMatrix(n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32, n33);",
    "right" : "recorder.applyMatrix(n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32, n33);",
    "info" : "ExpressionStatement[420552-420653]:ExpressionStatement[420582-420683]"
  }, {
    "left" : "g.applyMatrix(n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32, n33);",
    "right" : "g.applyMatrix(n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32, n33);",
    "info" : "ExpressionStatement[420658-420752]:ExpressionStatement[420688-420782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[420788-420819]:Block[420818-420849]"
  }, {
    "left" : "return g.getMatrix();",
    "right" : "return g.getMatrix();",
    "info" : "ReturnStatement[420794-420815]:ReturnStatement[420824-420845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[420994-421031]:Block[421024-421061]"
  }, {
    "left" : "return g.getMatrix(target);",
    "right" : "return g.getMatrix(target);",
    "info" : "ReturnStatement[421000-421027]:ReturnStatement[421030-421057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[421206-421243]:Block[421236-421273]"
  }, {
    "left" : "return g.getMatrix(target);",
    "right" : "return g.getMatrix(target);",
    "info" : "ReturnStatement[421212-421239]:ReturnStatement[421242-421269]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[421369-421453]:Block[421399-421483]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[421375-421424]:IfStatement[421405-421454]"
  }, {
    "left" : "recorder.setMatrix(source);",
    "right" : "recorder.setMatrix(source);",
    "info" : "ExpressionStatement[421397-421424]:ExpressionStatement[421427-421454]"
  }, {
    "left" : "g.setMatrix(source);",
    "right" : "g.setMatrix(source);",
    "info" : "ExpressionStatement[421429-421449]:ExpressionStatement[421459-421479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[421587-421671]:Block[421617-421701]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[421593-421642]:IfStatement[421623-421672]"
  }, {
    "left" : "recorder.setMatrix(source);",
    "right" : "recorder.setMatrix(source);",
    "info" : "ExpressionStatement[421615-421642]:ExpressionStatement[421645-421672]"
  }, {
    "left" : "g.setMatrix(source);",
    "right" : "g.setMatrix(source);",
    "info" : "ExpressionStatement[421647-421667]:ExpressionStatement[421677-421697]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[421805-421889]:Block[421835-421919]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[421811-421860]:IfStatement[421841-421890]"
  }, {
    "left" : "recorder.setMatrix(source);",
    "right" : "recorder.setMatrix(source);",
    "info" : "ExpressionStatement[421833-421860]:ExpressionStatement[421863-421890]"
  }, {
    "left" : "g.setMatrix(source);",
    "right" : "g.setMatrix(source);",
    "info" : "ExpressionStatement[421865-421885]:ExpressionStatement[421895-421915]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[422287-422363]:Block[422317-422393]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[422293-422338]:IfStatement[422323-422368]"
  }, {
    "left" : "recorder.printMatrix();",
    "right" : "recorder.printMatrix();",
    "info" : "ExpressionStatement[422315-422338]:ExpressionStatement[422345-422368]"
  }, {
    "left" : "g.printMatrix();",
    "right" : "g.printMatrix();",
    "info" : "ExpressionStatement[422343-422359]:ExpressionStatement[422373-422389]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[423921-423997]:Block[423951-424027]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[423927-423972]:IfStatement[423957-424002]"
  }, {
    "left" : "recorder.beginCamera();",
    "right" : "recorder.beginCamera();",
    "info" : "ExpressionStatement[423949-423972]:ExpressionStatement[423979-424002]"
  }, {
    "left" : "g.beginCamera();",
    "right" : "g.beginCamera();",
    "info" : "ExpressionStatement[423977-423993]:ExpressionStatement[424007-424023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[424477-424549]:Block[424507-424579]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[424483-424526]:IfStatement[424513-424556]"
  }, {
    "left" : "recorder.endCamera();",
    "right" : "recorder.endCamera();",
    "info" : "ExpressionStatement[424505-424526]:ExpressionStatement[424535-424556]"
  }, {
    "left" : "g.endCamera();",
    "right" : "g.endCamera();",
    "info" : "ExpressionStatement[424531-424545]:ExpressionStatement[424561-424575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[425500-425566]:Block[425530-425596]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[425506-425546]:IfStatement[425536-425576]"
  }, {
    "left" : "recorder.camera();",
    "right" : "recorder.camera();",
    "info" : "ExpressionStatement[425528-425546]:ExpressionStatement[425558-425576]"
  }, {
    "left" : "g.camera();",
    "right" : "g.camera();",
    "info" : "ExpressionStatement[425551-425562]:ExpressionStatement[425581-425592]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[426171-426353]:Block[426201-426383]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[426177-426275]:IfStatement[426207-426305]"
  }, {
    "left" : "recorder.camera(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ);",
    "right" : "recorder.camera(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ);",
    "info" : "ExpressionStatement[426199-426275]:ExpressionStatement[426229-426305]"
  }, {
    "left" : "g.camera(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ);",
    "right" : "g.camera(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ);",
    "info" : "ExpressionStatement[426280-426349]:ExpressionStatement[426310-426379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[426706-426782]:Block[426736-426812]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[426712-426757]:IfStatement[426742-426787]"
  }, {
    "left" : "recorder.printCamera();",
    "right" : "recorder.printCamera();",
    "info" : "ExpressionStatement[426734-426757]:ExpressionStatement[426764-426787]"
  }, {
    "left" : "g.printCamera();",
    "right" : "g.printCamera();",
    "info" : "ExpressionStatement[426762-426778]:ExpressionStatement[426792-426808]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[427484-427548]:Block[427514-427578]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[427490-427529]:IfStatement[427520-427559]"
  }, {
    "left" : "recorder.ortho();",
    "right" : "recorder.ortho();",
    "info" : "ExpressionStatement[427512-427529]:ExpressionStatement[427542-427559]"
  }, {
    "left" : "g.ortho();",
    "right" : "g.ortho();",
    "info" : "ExpressionStatement[427534-427544]:ExpressionStatement[427564-427574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[427861-427973]:Block[427891-428003]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[427867-427930]:IfStatement[427897-427960]"
  }, {
    "left" : "recorder.ortho(left, right, bottom, top);",
    "right" : "recorder.ortho(left, right, bottom, top);",
    "info" : "ExpressionStatement[427889-427930]:ExpressionStatement[427919-427960]"
  }, {
    "left" : "g.ortho(left, right, bottom, top);",
    "right" : "g.ortho(left, right, bottom, top);",
    "info" : "ExpressionStatement[427935-427969]:ExpressionStatement[427965-427999]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[428255-428389]:Block[428285-428419]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[428261-428335]:IfStatement[428291-428365]"
  }, {
    "left" : "recorder.ortho(left, right, bottom, top, near, far);",
    "right" : "recorder.ortho(left, right, bottom, top, near, far);",
    "info" : "ExpressionStatement[428283-428335]:ExpressionStatement[428313-428365]"
  }, {
    "left" : "g.ortho(left, right, bottom, top, near, far);",
    "right" : "g.ortho(left, right, bottom, top, near, far);",
    "info" : "ExpressionStatement[428340-428385]:ExpressionStatement[428370-428415]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[429303-429379]:Block[429333-429409]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[429309-429354]:IfStatement[429339-429384]"
  }, {
    "left" : "recorder.perspective();",
    "right" : "recorder.perspective();",
    "info" : "ExpressionStatement[429331-429354]:ExpressionStatement[429361-429384]"
  }, {
    "left" : "g.perspective();",
    "right" : "g.perspective();",
    "info" : "ExpressionStatement[429359-429375]:ExpressionStatement[429389-429405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[429698-429824]:Block[429728-429854]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[429704-429774]:IfStatement[429734-429804]"
  }, {
    "left" : "recorder.perspective(fovy, aspect, zNear, zFar);",
    "right" : "recorder.perspective(fovy, aspect, zNear, zFar);",
    "info" : "ExpressionStatement[429726-429774]:ExpressionStatement[429756-429804]"
  }, {
    "left" : "g.perspective(fovy, aspect, zNear, zFar);",
    "right" : "g.perspective(fovy, aspect, zNear, zFar);",
    "info" : "ExpressionStatement[429779-429820]:ExpressionStatement[429809-429850]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[430863-431001]:Block[430893-431031]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[430869-430945]:IfStatement[430899-430975]"
  }, {
    "left" : "recorder.frustum(left, right, bottom, top, near, far);",
    "right" : "recorder.frustum(left, right, bottom, top, near, far);",
    "info" : "ExpressionStatement[430891-430945]:ExpressionStatement[430921-430975]"
  }, {
    "left" : "g.frustum(left, right, bottom, top, near, far);",
    "right" : "g.frustum(left, right, bottom, top, near, far);",
    "info" : "ExpressionStatement[430950-430997]:ExpressionStatement[430980-431027]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[431379-431463]:Block[431409-431493]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[431385-431434]:IfStatement[431415-431464]"
  }, {
    "left" : "recorder.printProjection();",
    "right" : "recorder.printProjection();",
    "info" : "ExpressionStatement[431407-431434]:ExpressionStatement[431437-431464]"
  }, {
    "left" : "g.printProjection();",
    "right" : "g.printProjection();",
    "info" : "ExpressionStatement[431439-431459]:ExpressionStatement[431469-431489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[431965-431998]:Block[431995-432028]"
  }, {
    "left" : "return g.screenX(x, y);",
    "right" : "return g.screenX(x, y);",
    "info" : "ReturnStatement[431971-431994]:ReturnStatement[432001-432024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[432500-432533]:Block[432530-432563]"
  }, {
    "left" : "return g.screenY(x, y);",
    "right" : "return g.screenY(x, y);",
    "info" : "ReturnStatement[432506-432529]:ReturnStatement[432536-432559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[432641-432677]:Block[432671-432707]"
  }, {
    "left" : "return g.screenX(x, y, z);",
    "right" : "return g.screenX(x, y, z);",
    "info" : "ReturnStatement[432647-432673]:ReturnStatement[432677-432703]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[432785-432821]:Block[432815-432851]"
  }, {
    "left" : "return g.screenY(x, y, z);",
    "right" : "return g.screenY(x, y, z);",
    "info" : "ReturnStatement[432791-432817]:ReturnStatement[432821-432847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[433375-433411]:Block[433405-433441]"
  }, {
    "left" : "return g.screenZ(x, y, z);",
    "right" : "return g.screenZ(x, y, z);",
    "info" : "ReturnStatement[433381-433407]:ReturnStatement[433411-433437]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[434604-434639]:Block[434634-434669]"
  }, {
    "left" : "return g.modelX(x, y, z);",
    "right" : "return g.modelX(x, y, z);",
    "info" : "ReturnStatement[434610-434635]:ReturnStatement[434640-434665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[435833-435868]:Block[435863-435898]"
  }, {
    "left" : "return g.modelY(x, y, z);",
    "right" : "return g.modelY(x, y, z);",
    "info" : "ReturnStatement[435839-435864]:ReturnStatement[435869-435894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[437062-437097]:Block[437092-437127]"
  }, {
    "left" : "return g.modelZ(x, y, z);",
    "right" : "return g.modelZ(x, y, z);",
    "info" : "ReturnStatement[437068-437093]:ReturnStatement[437098-437123]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[438190-438262]:Block[438220-438292]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[438196-438239]:IfStatement[438226-438269]"
  }, {
    "left" : "recorder.pushStyle();",
    "right" : "recorder.pushStyle();",
    "info" : "ExpressionStatement[438218-438239]:ExpressionStatement[438248-438269]"
  }, {
    "left" : "g.pushStyle();",
    "right" : "g.pushStyle();",
    "info" : "ExpressionStatement[438244-438258]:ExpressionStatement[438274-438288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[438963-439033]:Block[438993-439063]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[438969-439011]:IfStatement[438999-439041]"
  }, {
    "left" : "recorder.popStyle();",
    "right" : "recorder.popStyle();",
    "info" : "ExpressionStatement[438991-439011]:ExpressionStatement[439021-439041]"
  }, {
    "left" : "g.popStyle();",
    "right" : "g.popStyle();",
    "info" : "ExpressionStatement[439016-439029]:ExpressionStatement[439046-439059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[439066-439132]:Block[439096-439162]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[439072-439112]:IfStatement[439102-439142]"
  }, {
    "left" : "recorder.style(s);",
    "right" : "recorder.style(s);",
    "info" : "ExpressionStatement[439094-439112]:ExpressionStatement[439124-439142]"
  }, {
    "left" : "g.style(s);",
    "right" : "g.style(s);",
    "info" : "ExpressionStatement[439117-439128]:ExpressionStatement[439147-439158]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[440143-440233]:Block[440173-440263]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[440149-440201]:IfStatement[440179-440231]"
  }, {
    "left" : "recorder.strokeWeight(weight);",
    "right" : "recorder.strokeWeight(weight);",
    "info" : "ExpressionStatement[440171-440201]:ExpressionStatement[440201-440231]"
  }, {
    "left" : "g.strokeWeight(weight);",
    "right" : "g.strokeWeight(weight);",
    "info" : "ExpressionStatement[440206-440229]:ExpressionStatement[440236-440259]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[441057-441139]:Block[441087-441169]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[441063-441111]:IfStatement[441093-441141]"
  }, {
    "left" : "recorder.strokeJoin(join);",
    "right" : "recorder.strokeJoin(join);",
    "info" : "ExpressionStatement[441085-441111]:ExpressionStatement[441115-441141]"
  }, {
    "left" : "g.strokeJoin(join);",
    "right" : "g.strokeJoin(join);",
    "info" : "ExpressionStatement[441116-441135]:ExpressionStatement[441146-441165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[441994-442072]:Block[442024-442102]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[442000-442046]:IfStatement[442030-442076]"
  }, {
    "left" : "recorder.strokeCap(cap);",
    "right" : "recorder.strokeCap(cap);",
    "info" : "ExpressionStatement[442022-442046]:ExpressionStatement[442052-442076]"
  }, {
    "left" : "g.strokeCap(cap);",
    "right" : "g.strokeCap(cap);",
    "info" : "ExpressionStatement[442051-442068]:ExpressionStatement[442081-442098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[442495-442565]:Block[442525-442595]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[442501-442543]:IfStatement[442531-442573]"
  }, {
    "left" : "recorder.noStroke();",
    "right" : "recorder.noStroke();",
    "info" : "ExpressionStatement[442523-442543]:ExpressionStatement[442553-442573]"
  }, {
    "left" : "g.noStroke();",
    "right" : "g.noStroke();",
    "info" : "ExpressionStatement[442548-442561]:ExpressionStatement[442578-442591]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[444066-444138]:Block[444096-444168]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[444072-444115]:IfStatement[444102-444145]"
  }, {
    "left" : "recorder.stroke(rgb);",
    "right" : "recorder.stroke(rgb);",
    "info" : "ExpressionStatement[444094-444115]:ExpressionStatement[444124-444145]"
  }, {
    "left" : "g.stroke(rgb);",
    "right" : "g.stroke(rgb);",
    "info" : "ExpressionStatement[444120-444134]:ExpressionStatement[444150-444164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[444236-444322]:Block[444266-444352]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[444242-444292]:IfStatement[444272-444322]"
  }, {
    "left" : "recorder.stroke(rgb, alpha);",
    "right" : "recorder.stroke(rgb, alpha);",
    "info" : "ExpressionStatement[444264-444292]:ExpressionStatement[444294-444322]"
  }, {
    "left" : "g.stroke(rgb, alpha);",
    "right" : "g.stroke(rgb, alpha);",
    "info" : "ExpressionStatement[444297-444318]:ExpressionStatement[444327-444348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[444429-444503]:Block[444459-444533]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[444435-444479]:IfStatement[444465-444509]"
  }, {
    "left" : "recorder.stroke(gray);",
    "right" : "recorder.stroke(gray);",
    "info" : "ExpressionStatement[444457-444479]:ExpressionStatement[444487-444509]"
  }, {
    "left" : "g.stroke(gray);",
    "right" : "g.stroke(gray);",
    "info" : "ExpressionStatement[444484-444499]:ExpressionStatement[444514-444529]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[444552-444640]:Block[444582-444670]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[444558-444609]:IfStatement[444588-444639]"
  }, {
    "left" : "recorder.stroke(gray, alpha);",
    "right" : "recorder.stroke(gray, alpha);",
    "info" : "ExpressionStatement[444580-444609]:ExpressionStatement[444610-444639]"
  }, {
    "left" : "g.stroke(gray, alpha);",
    "right" : "g.stroke(gray, alpha);",
    "info" : "ExpressionStatement[444614-444636]:ExpressionStatement[444644-444666]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[444948-445034]:Block[444978-445064]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[444954-445004]:IfStatement[444984-445034]"
  }, {
    "left" : "recorder.stroke(v1, v2, v3);",
    "right" : "recorder.stroke(v1, v2, v3);",
    "info" : "ExpressionStatement[444976-445004]:ExpressionStatement[445006-445034]"
  }, {
    "left" : "g.stroke(v1, v2, v3);",
    "right" : "g.stroke(v1, v2, v3);",
    "info" : "ExpressionStatement[445009-445030]:ExpressionStatement[445039-445060]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[445101-445201]:Block[445131-445231]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[445107-445164]:IfStatement[445137-445194]"
  }, {
    "left" : "recorder.stroke(v1, v2, v3, alpha);",
    "right" : "recorder.stroke(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[445129-445164]:ExpressionStatement[445159-445194]"
  }, {
    "left" : "g.stroke(v1, v2, v3, alpha);",
    "right" : "g.stroke(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[445169-445197]:ExpressionStatement[445199-445227]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[445631-445697]:Block[445661-445727]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[445637-445677]:IfStatement[445667-445707]"
  }, {
    "left" : "recorder.noTint();",
    "right" : "recorder.noTint();",
    "info" : "ExpressionStatement[445659-445677]:ExpressionStatement[445689-445707]"
  }, {
    "left" : "g.noTint();",
    "right" : "g.noTint();",
    "info" : "ExpressionStatement[445682-445693]:ExpressionStatement[445712-445723]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[447224-447292]:Block[447254-447322]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[447230-447271]:IfStatement[447260-447301]"
  }, {
    "left" : "recorder.tint(rgb);",
    "right" : "recorder.tint(rgb);",
    "info" : "ExpressionStatement[447252-447271]:ExpressionStatement[447282-447301]"
  }, {
    "left" : "g.tint(rgb);",
    "right" : "g.tint(rgb);",
    "info" : "ExpressionStatement[447276-447288]:ExpressionStatement[447306-447318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[447387-447469]:Block[447417-447499]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[447393-447441]:IfStatement[447423-447471]"
  }, {
    "left" : "recorder.tint(rgb, alpha);",
    "right" : "recorder.tint(rgb, alpha);",
    "info" : "ExpressionStatement[447415-447441]:ExpressionStatement[447445-447471]"
  }, {
    "left" : "g.tint(rgb, alpha);",
    "right" : "g.tint(rgb, alpha);",
    "info" : "ExpressionStatement[447446-447465]:ExpressionStatement[447476-447495]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[447574-447644]:Block[447604-447674]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[447580-447622]:IfStatement[447610-447652]"
  }, {
    "left" : "recorder.tint(gray);",
    "right" : "recorder.tint(gray);",
    "info" : "ExpressionStatement[447602-447622]:ExpressionStatement[447632-447652]"
  }, {
    "left" : "g.tint(gray);",
    "right" : "g.tint(gray);",
    "info" : "ExpressionStatement[447627-447640]:ExpressionStatement[447657-447670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[447691-447775]:Block[447721-447805]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[447697-447746]:IfStatement[447727-447776]"
  }, {
    "left" : "recorder.tint(gray, alpha);",
    "right" : "recorder.tint(gray, alpha);",
    "info" : "ExpressionStatement[447719-447746]:ExpressionStatement[447749-447776]"
  }, {
    "left" : "g.tint(gray, alpha);",
    "right" : "g.tint(gray, alpha);",
    "info" : "ExpressionStatement[447751-447771]:ExpressionStatement[447781-447801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[448044-448126]:Block[448074-448156]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[448050-448098]:IfStatement[448080-448128]"
  }, {
    "left" : "recorder.tint(v1, v2, v3);",
    "right" : "recorder.tint(v1, v2, v3);",
    "info" : "ExpressionStatement[448072-448098]:ExpressionStatement[448102-448128]"
  }, {
    "left" : "g.tint(v1, v2, v3);",
    "right" : "g.tint(v1, v2, v3);",
    "info" : "ExpressionStatement[448103-448122]:ExpressionStatement[448133-448152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[448191-448287]:Block[448221-448317]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[448197-448252]:IfStatement[448227-448282]"
  }, {
    "left" : "recorder.tint(v1, v2, v3, alpha);",
    "right" : "recorder.tint(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[448219-448252]:ExpressionStatement[448249-448282]"
  }, {
    "left" : "g.tint(v1, v2, v3, alpha);",
    "right" : "g.tint(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[448257-448283]:ExpressionStatement[448287-448313]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[448724-448790]:Block[448754-448820]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[448730-448770]:IfStatement[448760-448800]"
  }, {
    "left" : "recorder.noFill();",
    "right" : "recorder.noFill();",
    "info" : "ExpressionStatement[448752-448770]:ExpressionStatement[448782-448800]"
  }, {
    "left" : "g.noFill();",
    "right" : "g.noFill();",
    "info" : "ExpressionStatement[448775-448786]:ExpressionStatement[448805-448816]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[450387-450455]:Block[450417-450485]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[450393-450434]:IfStatement[450423-450464]"
  }, {
    "left" : "recorder.fill(rgb);",
    "right" : "recorder.fill(rgb);",
    "info" : "ExpressionStatement[450415-450434]:ExpressionStatement[450445-450464]"
  }, {
    "left" : "g.fill(rgb);",
    "right" : "g.fill(rgb);",
    "info" : "ExpressionStatement[450439-450451]:ExpressionStatement[450469-450481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[450549-450631]:Block[450579-450661]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[450555-450603]:IfStatement[450585-450633]"
  }, {
    "left" : "recorder.fill(rgb, alpha);",
    "right" : "recorder.fill(rgb, alpha);",
    "info" : "ExpressionStatement[450577-450603]:ExpressionStatement[450607-450633]"
  }, {
    "left" : "g.fill(rgb, alpha);",
    "right" : "g.fill(rgb, alpha);",
    "info" : "ExpressionStatement[450608-450627]:ExpressionStatement[450638-450657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[450742-450812]:Block[450772-450842]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[450748-450790]:IfStatement[450778-450820]"
  }, {
    "left" : "recorder.fill(gray);",
    "right" : "recorder.fill(gray);",
    "info" : "ExpressionStatement[450770-450790]:ExpressionStatement[450800-450820]"
  }, {
    "left" : "g.fill(gray);",
    "right" : "g.fill(gray);",
    "info" : "ExpressionStatement[450795-450808]:ExpressionStatement[450825-450838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[450859-450943]:Block[450889-450973]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[450865-450914]:IfStatement[450895-450944]"
  }, {
    "left" : "recorder.fill(gray, alpha);",
    "right" : "recorder.fill(gray, alpha);",
    "info" : "ExpressionStatement[450887-450914]:ExpressionStatement[450917-450944]"
  }, {
    "left" : "g.fill(gray, alpha);",
    "right" : "g.fill(gray, alpha);",
    "info" : "ExpressionStatement[450919-450939]:ExpressionStatement[450949-450969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[451222-451304]:Block[451252-451334]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[451228-451276]:IfStatement[451258-451306]"
  }, {
    "left" : "recorder.fill(v1, v2, v3);",
    "right" : "recorder.fill(v1, v2, v3);",
    "info" : "ExpressionStatement[451250-451276]:ExpressionStatement[451280-451306]"
  }, {
    "left" : "g.fill(v1, v2, v3);",
    "right" : "g.fill(v1, v2, v3);",
    "info" : "ExpressionStatement[451281-451300]:ExpressionStatement[451311-451330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[451369-451465]:Block[451399-451495]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[451375-451430]:IfStatement[451405-451460]"
  }, {
    "left" : "recorder.fill(v1, v2, v3, alpha);",
    "right" : "recorder.fill(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[451397-451430]:ExpressionStatement[451427-451460]"
  }, {
    "left" : "g.fill(v1, v2, v3, alpha);",
    "right" : "g.fill(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[451435-451461]:ExpressionStatement[451465-451491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[452377-452451]:Block[452407-452481]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[452383-452427]:IfStatement[452413-452457]"
  }, {
    "left" : "recorder.ambient(rgb);",
    "right" : "recorder.ambient(rgb);",
    "info" : "ExpressionStatement[452405-452427]:ExpressionStatement[452435-452457]"
  }, {
    "left" : "g.ambient(rgb);",
    "right" : "g.ambient(rgb);",
    "info" : "ExpressionStatement[452432-452447]:ExpressionStatement[452462-452477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[452559-452635]:Block[452589-452665]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[452565-452610]:IfStatement[452595-452640]"
  }, {
    "left" : "recorder.ambient(gray);",
    "right" : "recorder.ambient(gray);",
    "info" : "ExpressionStatement[452587-452610]:ExpressionStatement[452617-452640]"
  }, {
    "left" : "g.ambient(gray);",
    "right" : "g.ambient(gray);",
    "info" : "ExpressionStatement[452615-452631]:ExpressionStatement[452645-452661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[452907-452995]:Block[452937-453025]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[452913-452964]:IfStatement[452943-452994]"
  }, {
    "left" : "recorder.ambient(v1, v2, v3);",
    "right" : "recorder.ambient(v1, v2, v3);",
    "info" : "ExpressionStatement[452935-452964]:ExpressionStatement[452965-452994]"
  }, {
    "left" : "g.ambient(v1, v2, v3);",
    "right" : "g.ambient(v1, v2, v3);",
    "info" : "ExpressionStatement[452969-452991]:ExpressionStatement[452999-453021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[453845-453921]:Block[453875-453951]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[453851-453896]:IfStatement[453881-453926]"
  }, {
    "left" : "recorder.specular(rgb);",
    "right" : "recorder.specular(rgb);",
    "info" : "ExpressionStatement[453873-453896]:ExpressionStatement[453903-453926]"
  }, {
    "left" : "g.specular(rgb);",
    "right" : "g.specular(rgb);",
    "info" : "ExpressionStatement[453901-453917]:ExpressionStatement[453931-453947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[454023-454101]:Block[454053-454131]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[454029-454075]:IfStatement[454059-454105]"
  }, {
    "left" : "recorder.specular(gray);",
    "right" : "recorder.specular(gray);",
    "info" : "ExpressionStatement[454051-454075]:ExpressionStatement[454081-454105]"
  }, {
    "left" : "g.specular(gray);",
    "right" : "g.specular(gray);",
    "info" : "ExpressionStatement[454080-454097]:ExpressionStatement[454110-454127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[454374-454464]:Block[454404-454494]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[454380-454432]:IfStatement[454410-454462]"
  }, {
    "left" : "recorder.specular(v1, v2, v3);",
    "right" : "recorder.specular(v1, v2, v3);",
    "info" : "ExpressionStatement[454402-454432]:ExpressionStatement[454432-454462]"
  }, {
    "left" : "g.specular(v1, v2, v3);",
    "right" : "g.specular(v1, v2, v3);",
    "info" : "ExpressionStatement[454437-454460]:ExpressionStatement[454467-454490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[455066-455148]:Block[455096-455178]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[455072-455120]:IfStatement[455102-455150]"
  }, {
    "left" : "recorder.shininess(shine);",
    "right" : "recorder.shininess(shine);",
    "info" : "ExpressionStatement[455094-455120]:ExpressionStatement[455124-455150]"
  }, {
    "left" : "g.shininess(shine);",
    "right" : "g.shininess(shine);",
    "info" : "ExpressionStatement[455125-455144]:ExpressionStatement[455155-455174]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[455762-455838]:Block[455792-455868]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[455768-455813]:IfStatement[455798-455843]"
  }, {
    "left" : "recorder.emissive(rgb);",
    "right" : "recorder.emissive(rgb);",
    "info" : "ExpressionStatement[455790-455813]:ExpressionStatement[455820-455843]"
  }, {
    "left" : "g.emissive(rgb);",
    "right" : "g.emissive(rgb);",
    "info" : "ExpressionStatement[455818-455834]:ExpressionStatement[455848-455864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[455946-456024]:Block[455976-456054]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[455952-455998]:IfStatement[455982-456028]"
  }, {
    "left" : "recorder.emissive(gray);",
    "right" : "recorder.emissive(gray);",
    "info" : "ExpressionStatement[455974-455998]:ExpressionStatement[456004-456028]"
  }, {
    "left" : "g.emissive(gray);",
    "right" : "g.emissive(gray);",
    "info" : "ExpressionStatement[456003-456020]:ExpressionStatement[456033-456050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[456307-456397]:Block[456337-456427]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[456313-456365]:IfStatement[456343-456395]"
  }, {
    "left" : "recorder.emissive(v1, v2, v3);",
    "right" : "recorder.emissive(v1, v2, v3);",
    "info" : "ExpressionStatement[456335-456365]:ExpressionStatement[456365-456395]"
  }, {
    "left" : "g.emissive(v1, v2, v3);",
    "right" : "g.emissive(v1, v2, v3);",
    "info" : "ExpressionStatement[456370-456393]:ExpressionStatement[456400-456423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[457415-457481]:Block[457445-457511]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[457421-457461]:IfStatement[457451-457491]"
  }, {
    "left" : "recorder.lights();",
    "right" : "recorder.lights();",
    "info" : "ExpressionStatement[457443-457461]:ExpressionStatement[457473-457491]"
  }, {
    "left" : "g.lights();",
    "right" : "g.lights();",
    "info" : "ExpressionStatement[457466-457477]:ExpressionStatement[457496-457507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[457975-458045]:Block[458005-458075]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[457981-458023]:IfStatement[458011-458053]"
  }, {
    "left" : "recorder.noLights();",
    "right" : "recorder.noLights();",
    "info" : "ExpressionStatement[458003-458023]:ExpressionStatement[458033-458053]"
  }, {
    "left" : "g.noLights();",
    "right" : "g.noLights();",
    "info" : "ExpressionStatement[458028-458041]:ExpressionStatement[458058-458071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[459356-459454]:Block[459386-459484]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[459362-459418]:IfStatement[459392-459448]"
  }, {
    "left" : "recorder.ambientLight(v1, v2, v3);",
    "right" : "recorder.ambientLight(v1, v2, v3);",
    "info" : "ExpressionStatement[459384-459418]:ExpressionStatement[459414-459448]"
  }, {
    "left" : "g.ambientLight(v1, v2, v3);",
    "right" : "g.ambientLight(v1, v2, v3);",
    "info" : "ExpressionStatement[459423-459450]:ExpressionStatement[459453-459480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[459700-459816]:Block[459730-459846]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[459706-459771]:IfStatement[459736-459801]"
  }, {
    "left" : "recorder.ambientLight(v1, v2, v3, x, y, z);",
    "right" : "recorder.ambientLight(v1, v2, v3, x, y, z);",
    "info" : "ExpressionStatement[459728-459771]:ExpressionStatement[459758-459801]"
  }, {
    "left" : "g.ambientLight(v1, v2, v3, x, y, z);",
    "right" : "g.ambientLight(v1, v2, v3, x, y, z);",
    "info" : "ExpressionStatement[459776-459812]:ExpressionStatement[459806-459842]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[461568-461698]:Block[461598-461728]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[461574-461646]:IfStatement[461604-461676]"
  }, {
    "left" : "recorder.directionalLight(v1, v2, v3, nx, ny, nz);",
    "right" : "recorder.directionalLight(v1, v2, v3, nx, ny, nz);",
    "info" : "ExpressionStatement[461596-461646]:ExpressionStatement[461626-461676]"
  }, {
    "left" : "g.directionalLight(v1, v2, v3, nx, ny, nz);",
    "right" : "g.directionalLight(v1, v2, v3, nx, ny, nz);",
    "info" : "ExpressionStatement[461651-461694]:ExpressionStatement[461681-461724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[463059-463171]:Block[463089-463201]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[463065-463128]:IfStatement[463095-463158]"
  }, {
    "left" : "recorder.pointLight(v1, v2, v3, x, y, z);",
    "right" : "recorder.pointLight(v1, v2, v3, x, y, z);",
    "info" : "ExpressionStatement[463087-463128]:ExpressionStatement[463117-463158]"
  }, {
    "left" : "g.pointLight(v1, v2, v3, x, y, z);",
    "right" : "g.pointLight(v1, v2, v3, x, y, z);",
    "info" : "ExpressionStatement[463133-463167]:ExpressionStatement[463163-463197]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[464998-465176]:Block[465028-465206]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[465004-465100]:IfStatement[465034-465130]"
  }, {
    "left" : "recorder.spotLight(v1, v2, v3, x, y, z, nx, ny, nz, angle, concentration);",
    "right" : "recorder.spotLight(v1, v2, v3, x, y, z, nx, ny, nz, angle, concentration);",
    "info" : "ExpressionStatement[465026-465100]:ExpressionStatement[465056-465130]"
  }, {
    "left" : "g.spotLight(v1, v2, v3, x, y, z, nx, ny, nz, angle, concentration);",
    "right" : "g.spotLight(v1, v2, v3, x, y, z, nx, ny, nz, angle, concentration);",
    "info" : "ExpressionStatement[465105-465172]:ExpressionStatement[465135-465202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[466794-466926]:Block[466824-466956]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[466800-466873]:IfStatement[466830-466903]"
  }, {
    "left" : "recorder.lightFalloff(constant, linear, quadratic);",
    "right" : "recorder.lightFalloff(constant, linear, quadratic);",
    "info" : "ExpressionStatement[466822-466873]:ExpressionStatement[466852-466903]"
  }, {
    "left" : "g.lightFalloff(constant, linear, quadratic);",
    "right" : "g.lightFalloff(constant, linear, quadratic);",
    "info" : "ExpressionStatement[466878-466922]:ExpressionStatement[466908-466952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[468190-468290]:Block[468220-468320]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[468196-468253]:IfStatement[468226-468283]"
  }, {
    "left" : "recorder.lightSpecular(v1, v2, v3);",
    "right" : "recorder.lightSpecular(v1, v2, v3);",
    "info" : "ExpressionStatement[468218-468253]:ExpressionStatement[468248-468283]"
  }, {
    "left" : "g.lightSpecular(v1, v2, v3);",
    "right" : "g.lightSpecular(v1, v2, v3);",
    "info" : "ExpressionStatement[468258-468286]:ExpressionStatement[468288-468316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[470060-470140]:Block[470090-470170]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[470066-470113]:IfStatement[470096-470143]"
  }, {
    "left" : "recorder.background(rgb);",
    "right" : "recorder.background(rgb);",
    "info" : "ExpressionStatement[470088-470113]:ExpressionStatement[470118-470143]"
  }, {
    "left" : "g.background(rgb);",
    "right" : "g.background(rgb);",
    "info" : "ExpressionStatement[470118-470136]:ExpressionStatement[470148-470166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[470246-470340]:Block[470276-470370]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[470252-470306]:IfStatement[470282-470336]"
  }, {
    "left" : "recorder.background(rgb, alpha);",
    "right" : "recorder.background(rgb, alpha);",
    "info" : "ExpressionStatement[470274-470306]:ExpressionStatement[470304-470336]"
  }, {
    "left" : "g.background(rgb, alpha);",
    "right" : "g.background(rgb, alpha);",
    "info" : "ExpressionStatement[470311-470336]:ExpressionStatement[470341-470366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[470451-470533]:Block[470481-470563]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[470457-470505]:IfStatement[470487-470535]"
  }, {
    "left" : "recorder.background(gray);",
    "right" : "recorder.background(gray);",
    "info" : "ExpressionStatement[470479-470505]:ExpressionStatement[470509-470535]"
  }, {
    "left" : "g.background(gray);",
    "right" : "g.background(gray);",
    "info" : "ExpressionStatement[470510-470529]:ExpressionStatement[470540-470559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[470586-470682]:Block[470616-470712]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[470592-470647]:IfStatement[470622-470677]"
  }, {
    "left" : "recorder.background(gray, alpha);",
    "right" : "recorder.background(gray, alpha);",
    "info" : "ExpressionStatement[470614-470647]:ExpressionStatement[470644-470677]"
  }, {
    "left" : "g.background(gray, alpha);",
    "right" : "g.background(gray, alpha);",
    "info" : "ExpressionStatement[470652-470678]:ExpressionStatement[470682-470708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[470979-471073]:Block[471009-471103]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[470985-471039]:IfStatement[471015-471069]"
  }, {
    "left" : "recorder.background(v1, v2, v3);",
    "right" : "recorder.background(v1, v2, v3);",
    "info" : "ExpressionStatement[471007-471039]:ExpressionStatement[471037-471069]"
  }, {
    "left" : "g.background(v1, v2, v3);",
    "right" : "g.background(v1, v2, v3);",
    "info" : "ExpressionStatement[471044-471069]:ExpressionStatement[471074-471099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[471144-471252]:Block[471174-471282]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[471150-471211]:IfStatement[471180-471241]"
  }, {
    "left" : "recorder.background(v1, v2, v3, alpha);",
    "right" : "recorder.background(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[471172-471211]:ExpressionStatement[471202-471241]"
  }, {
    "left" : "g.background(v1, v2, v3, alpha);",
    "right" : "g.background(v1, v2, v3, alpha);",
    "info" : "ExpressionStatement[471216-471248]:ExpressionStatement[471246-471278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[471316-471380]:Block[471346-471410]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[471322-471361]:IfStatement[471352-471391]"
  }, {
    "left" : "recorder.clear();",
    "right" : "recorder.clear();",
    "info" : "ExpressionStatement[471344-471361]:ExpressionStatement[471374-471391]"
  }, {
    "left" : "g.clear();",
    "right" : "g.clear();",
    "info" : "ExpressionStatement[471366-471376]:ExpressionStatement[471396-471406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[472135-472219]:Block[472165-472249]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[472141-472190]:IfStatement[472171-472220]"
  }, {
    "left" : "recorder.background(image);",
    "right" : "recorder.background(image);",
    "info" : "ExpressionStatement[472163-472190]:ExpressionStatement[472193-472220]"
  }, {
    "left" : "g.background(image);",
    "right" : "g.background(image);",
    "info" : "ExpressionStatement[472195-472215]:ExpressionStatement[472225-472245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[473213-473293]:Block[473243-473323]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[473219-473266]:IfStatement[473249-473296]"
  }, {
    "left" : "recorder.colorMode(mode);",
    "right" : "recorder.colorMode(mode);",
    "info" : "ExpressionStatement[473241-473266]:ExpressionStatement[473271-473296]"
  }, {
    "left" : "g.colorMode(mode);",
    "right" : "g.colorMode(mode);",
    "info" : "ExpressionStatement[473271-473289]:ExpressionStatement[473301-473319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[473398-473488]:Block[473428-473518]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[473404-473456]:IfStatement[473434-473486]"
  }, {
    "left" : "recorder.colorMode(mode, max);",
    "right" : "recorder.colorMode(mode, max);",
    "info" : "ExpressionStatement[473426-473456]:ExpressionStatement[473456-473486]"
  }, {
    "left" : "g.colorMode(mode, max);",
    "right" : "g.colorMode(mode, max);",
    "info" : "ExpressionStatement[473461-473484]:ExpressionStatement[473491-473514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[473824-473940]:Block[473854-473970]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[473830-473895]:IfStatement[473860-473925]"
  }, {
    "left" : "recorder.colorMode(mode, max1, max2, max3);",
    "right" : "recorder.colorMode(mode, max1, max2, max3);",
    "info" : "ExpressionStatement[473852-473895]:ExpressionStatement[473882-473925]"
  }, {
    "left" : "g.colorMode(mode, max1, max2, max3);",
    "right" : "g.colorMode(mode, max1, max2, max3);",
    "info" : "ExpressionStatement[473900-473936]:ExpressionStatement[473930-473966]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[474098-474226]:Block[474128-474256]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[474104-474175]:IfStatement[474134-474205]"
  }, {
    "left" : "recorder.colorMode(mode, max1, max2, max3, maxA);",
    "right" : "recorder.colorMode(mode, max1, max2, max3, maxA);",
    "info" : "ExpressionStatement[474126-474175]:ExpressionStatement[474156-474205]"
  }, {
    "left" : "g.colorMode(mode, max1, max2, max3, maxA);",
    "right" : "g.colorMode(mode, max1, max2, max3, maxA);",
    "info" : "ExpressionStatement[474180-474222]:ExpressionStatement[474210-474252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[474707-474737]:Block[474737-474767]"
  }, {
    "left" : "return g.alpha(rgb);",
    "right" : "return g.alpha(rgb);",
    "info" : "ReturnStatement[474713-474733]:ReturnStatement[474743-474763]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[475824-475852]:Block[475854-475882]"
  }, {
    "left" : "return g.red(rgb);",
    "right" : "return g.red(rgb);",
    "info" : "ReturnStatement[475830-475848]:ReturnStatement[475860-475878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[476953-476983]:Block[476983-477013]"
  }, {
    "left" : "return g.green(rgb);",
    "right" : "return g.green(rgb);",
    "info" : "ReturnStatement[476959-476979]:ReturnStatement[476989-477009]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[478065-478094]:Block[478095-478124]"
  }, {
    "left" : "return g.blue(rgb);",
    "right" : "return g.blue(rgb);",
    "info" : "ReturnStatement[478071-478090]:ReturnStatement[478101-478120]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[478571-478599]:Block[478601-478629]"
  }, {
    "left" : "return g.hue(rgb);",
    "right" : "return g.hue(rgb);",
    "info" : "ReturnStatement[478577-478595]:ReturnStatement[478607-478625]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[479090-479125]:Block[479120-479155]"
  }, {
    "left" : "return g.saturation(rgb);",
    "right" : "return g.saturation(rgb);",
    "info" : "ReturnStatement[479096-479121]:ReturnStatement[479126-479151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[479621-479656]:Block[479651-479686]"
  }, {
    "left" : "return g.brightness(rgb);",
    "right" : "return g.brightness(rgb);",
    "info" : "ReturnStatement[479627-479652]:ReturnStatement[479657-479682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[479885-479941]:Block[479915-479971]"
  }, {
    "left" : "return PGraphics.lerpColor(c1, c2, amt, mode);",
    "right" : "return PGraphics.lerpColor(c1, c2, amt, mode);",
    "info" : "ReturnStatement[479891-479937]:ReturnStatement[479921-479967]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[480137-480182]:Block[480167-480212]"
  }, {
    "left" : "PGraphics.showDepthWarning(method);",
    "right" : "PGraphics.showDepthWarning(method);",
    "info" : "ExpressionStatement[480143-480178]:ExpressionStatement[480173-480208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[480448-480496]:Block[480478-480526]"
  }, {
    "left" : "PGraphics.showDepthWarningXYZ(method);",
    "right" : "PGraphics.showDepthWarningXYZ(method);",
    "info" : "ExpressionStatement[480454-480492]:ExpressionStatement[480484-480522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[480637-480683]:Block[480667-480713]"
  }, {
    "left" : "PGraphics.showMethodWarning(method);",
    "right" : "PGraphics.showMethodWarning(method);",
    "info" : "ExpressionStatement[480643-480679]:ExpressionStatement[480673-480709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[480949-480995]:Block[480979-481025]"
  }, {
    "left" : "PGraphics.showVariationWarning(str);",
    "right" : "PGraphics.showVariationWarning(str);",
    "info" : "ExpressionStatement[480955-480991]:ExpressionStatement[480985-481021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[481264-481311]:Block[481294-481341]"
  }, {
    "left" : "PGraphics.showMissingWarning(method);",
    "right" : "PGraphics.showMissingWarning(method);",
    "info" : "ExpressionStatement[481270-481307]:ExpressionStatement[481300-481337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[483778-483807]:Block[483808-483837]"
  }, {
    "left" : "return g.get(x, y);",
    "right" : "return g.get(x, y);",
    "info" : "ReturnStatement[483784-483803]:ReturnStatement[483814-483833]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[483963-483998]:Block[483993-484028]"
  }, {
    "left" : "return g.get(x, y, w, h);",
    "right" : "return g.get(x, y, w, h);",
    "info" : "ReturnStatement[483969-483994]:ReturnStatement[483999-484024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[484153-484178]:Block[484183-484208]"
  }, {
    "left" : "return g.get();",
    "right" : "return g.get();",
    "info" : "ReturnStatement[484159-484174]:ReturnStatement[484189-484204]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[484204-484230]:Block[484234-484260]"
  }, {
    "left" : "return g.copy();",
    "right" : "return g.copy();",
    "info" : "ReturnStatement[484210-484226]:ReturnStatement[484240-484256]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[485651-485725]:Block[485681-485755]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[485657-485701]:IfStatement[485687-485731]"
  }, {
    "left" : "recorder.set(x, y, c);",
    "right" : "recorder.set(x, y, c);",
    "info" : "ExpressionStatement[485679-485701]:ExpressionStatement[485709-485731]"
  }, {
    "left" : "g.set(x, y, c);",
    "right" : "g.set(x, y, c);",
    "info" : "ExpressionStatement[485706-485721]:ExpressionStatement[485736-485751]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[486050-486128]:Block[486080-486158]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[486056-486102]:IfStatement[486086-486132]"
  }, {
    "left" : "recorder.set(x, y, img);",
    "right" : "recorder.set(x, y, img);",
    "info" : "ExpressionStatement[486078-486102]:ExpressionStatement[486108-486132]"
  }, {
    "left" : "g.set(x, y, img);",
    "right" : "g.set(x, y, img);",
    "info" : "ExpressionStatement[486107-486124]:ExpressionStatement[486137-486154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[487799-487867]:Block[487829-487897]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[487805-487846]:IfStatement[487835-487876]"
  }, {
    "left" : "recorder.mask(img);",
    "right" : "recorder.mask(img);",
    "info" : "ExpressionStatement[487827-487846]:ExpressionStatement[487857-487876]"
  }, {
    "left" : "g.mask(img);",
    "right" : "g.mask(img);",
    "info" : "ExpressionStatement[487851-487863]:ExpressionStatement[487881-487893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[487901-487975]:Block[487931-488005]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[487907-487951]:IfStatement[487937-487981]"
  }, {
    "left" : "recorder.filter(kind);",
    "right" : "recorder.filter(kind);",
    "info" : "ExpressionStatement[487929-487951]:ExpressionStatement[487959-487981]"
  }, {
    "left" : "g.filter(kind);",
    "right" : "g.filter(kind);",
    "info" : "ExpressionStatement[487956-487971]:ExpressionStatement[487986-488001]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[490246-490334]:Block[490276-490364]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[490252-490303]:IfStatement[490282-490333]"
  }, {
    "left" : "recorder.filter(kind, param);",
    "right" : "recorder.filter(kind, param);",
    "info" : "ExpressionStatement[490274-490303]:ExpressionStatement[490304-490333]"
  }, {
    "left" : "g.filter(kind, param);",
    "right" : "g.filter(kind, param);",
    "info" : "ExpressionStatement[490308-490330]:ExpressionStatement[490338-490360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[491578-491700]:Block[491608-491730]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[491584-491652]:IfStatement[491614-491682]"
  }, {
    "left" : "recorder.copy(sx, sy, sw, sh, dx, dy, dw, dh);",
    "right" : "recorder.copy(sx, sy, sw, sh, dx, dy, dw, dh);",
    "info" : "ExpressionStatement[491606-491652]:ExpressionStatement[491636-491682]"
  }, {
    "left" : "g.copy(sx, sy, sw, sh, dx, dy, dw, dh);",
    "right" : "g.copy(sx, sy, sw, sh, dx, dy, dw, dh);",
    "info" : "ExpressionStatement[491657-491696]:ExpressionStatement[491687-491726]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[491907-492039]:Block[491937-492069]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[491913-491986]:IfStatement[491943-492016]"
  }, {
    "left" : "recorder.copy(src, sx, sy, sw, sh, dx, dy, dw, dh);",
    "right" : "recorder.copy(src, sx, sy, sw, sh, dx, dy, dw, dh);",
    "info" : "ExpressionStatement[491935-491986]:ExpressionStatement[491965-492016]"
  }, {
    "left" : "g.copy(src, sx, sy, sw, sh, dx, dy, dw, dh);",
    "right" : "g.copy(src, sx, sy, sw, sh, dx, dy, dw, dh);",
    "info" : "ExpressionStatement[491991-492035]:ExpressionStatement[492021-492065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[492156-492292]:Block[492186-492322]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[492162-492237]:IfStatement[492192-492267]"
  }, {
    "left" : "recorder.blend(sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "right" : "recorder.blend(sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "info" : "ExpressionStatement[492184-492237]:ExpressionStatement[492214-492267]"
  }, {
    "left" : "g.blend(sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "right" : "g.blend(sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "info" : "ExpressionStatement[492242-492288]:ExpressionStatement[492272-492318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[495538-495684]:Block[495568-495714]"
  }, {
    "left" : "if (recorder != null)",
    "right" : "if (recorder != null)",
    "info" : "IfStatement[495544-495624]:IfStatement[495574-495654]"
  }, {
    "left" : "recorder.blend(src, sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "right" : "recorder.blend(src, sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "info" : "ExpressionStatement[495566-495624]:ExpressionStatement[495596-495654]"
  }, {
    "left" : "g.blend(src, sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "right" : "g.blend(src, sx, sy, sw, sh, dx, dy, dw, dh, mode);",
    "info" : "ExpressionStatement[495629-495680]:ExpressionStatement[495659-495710]"
  } ]
}