{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "W3CDom",
      "right" : "W3CDom",
      "info" : "TypeDeclaration[735-7043]:TypeDeclaration[735-7183]"
    }, {
      "left" : "protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "right" : "protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "info" : "FieldDeclaration[944-1024]:FieldDeclaration[944-1024]"
    }, {
      "left" : "public Document fromJsoup(org.jsoup.nodes.Document in)",
      "right" : "public Document fromJsoup(org.jsoup.nodes.Document in)",
      "info" : "MethodDeclaration[1030-1642]:MethodDeclaration[1030-1642]"
    }, {
      "left" : "public void convert(org.jsoup.nodes.Document in, Document out)",
      "right" : "public void convert(org.jsoup.nodes.Document in, Document out)",
      "info" : "MethodDeclaration[1648-2240]:MethodDeclaration[1648-2240]"
    }, {
      "left" : "W3CBuilder",
      "right" : "W3CBuilder",
      "info" : "TypeDeclaration[2246-6365]:TypeDeclaration[2246-6505]"
    }, {
      "left" : "private static final String xmlnsKey = \"xmlns\";",
      "right" : "private static final String xmlnsKey = \"xmlns\";",
      "info" : "FieldDeclaration[2384-2431]:FieldDeclaration[2384-2431]"
    }, {
      "left" : "private static final String xmlnsPrefix = \"xmlns:\";",
      "right" : "private static final String xmlnsPrefix = \"xmlns:\";",
      "info" : "FieldDeclaration[2440-2491]:FieldDeclaration[2440-2491]"
    }, {
      "left" : "private final Document doc;",
      "right" : "private final Document doc;",
      "info" : "FieldDeclaration[2501-2528]:FieldDeclaration[2501-2528]"
    }, {
      "left" : "private final Stack<HashMap<String, String>> namespacesStack = new Stack<>();",
      "right" : "private final Stack<HashMap<String, String>> namespacesStack = new Stack<>();",
      "info" : "FieldDeclaration[2537-2614]:FieldDeclaration[2537-2614]"
    }, {
      "left" : "private Element dest;",
      "right" : "private Element dest;",
      "info" : "FieldDeclaration[2661-2682]:FieldDeclaration[2661-2682]"
    }, {
      "left" : "public W3CBuilder(Document doc)",
      "right" : "public W3CBuilder(Document doc)",
      "info" : "MethodDeclaration[2692-2833]:MethodDeclaration[2692-2833]"
    }, {
      "left" : "public void head(org.jsoup.nodes.Node source, int depth)",
      "right" : "public void head(org.jsoup.nodes.Node source, int depth)",
      "info" : "MethodDeclaration[2843-4597]:MethodDeclaration[2843-4737]"
    }, {
      "left" : "public void tail(org.jsoup.nodes.Node source, int depth)",
      "right" : "public void tail(org.jsoup.nodes.Node source, int depth)",
      "info" : "MethodDeclaration[4607-4908]:MethodDeclaration[4747-5048]"
    }, {
      "left" : "private void copyAttributes(org.jsoup.nodes.Node source, Element el)",
      "right" : "private void copyAttributes(org.jsoup.nodes.Node source, Element el)",
      "info" : "MethodDeclaration[4918-5362]:MethodDeclaration[5058-5502]"
    }, {
      "left" : "private String updateNamespaces(org.jsoup.nodes.Element el)",
      "right" : "private String updateNamespaces(org.jsoup.nodes.Element el)",
      "info" : "MethodDeclaration[5372-6358]:MethodDeclaration[5512-6498]"
    }, {
      "left" : "public String asString(Document doc)",
      "right" : "public String asString(Document doc)",
      "info" : "MethodDeclaration[6371-7041]:MethodDeclaration[6511-7181]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[918-924]:Modifier[918-924]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[925-930]:TYPE_DECLARATION_KIND[925-930]"
    }, {
      "left" : "W3CDom",
      "right" : "W3CDom",
      "info" : "SimpleName[931-937]:SimpleName[931-937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1147-1153]:Modifier[1147-1153]"
    }, {
      "left" : "Document",
      "right" : "Document",
      "info" : "SimpleType[1154-1162]:SimpleType[1154-1162]"
    }, {
      "left" : "fromJsoup",
      "right" : "fromJsoup",
      "info" : "SimpleName[1163-1172]:SimpleName[1163-1172]"
    }, {
      "left" : "org.jsoup.nodes.Document in",
      "right" : "org.jsoup.nodes.Document in",
      "info" : "SingleVariableDeclaration[1173-1200]:SingleVariableDeclaration[1173-1200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1202-1642]:Block[1202-1642]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[1212-1233]:ExpressionStatement[1212-1233]"
    }, {
      "left" : "DocumentBuilder builder;",
      "right" : "DocumentBuilder builder;",
      "info" : "VariableDeclarationStatement[1242-1266]:VariableDeclarationStatement[1242-1266]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[1275-1636]:TryStatement[1275-1636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1279-1537]:Block[1279-1537]"
    }, {
      "left" : "factory.setNamespaceAware(true);",
      "right" : "factory.setNamespaceAware(true);",
      "info" : "ExpressionStatement[1339-1371]:ExpressionStatement[1339-1371]"
    }, {
      "left" : "builder = factory.newDocumentBuilder();",
      "right" : "builder = factory.newDocumentBuilder();",
      "info" : "ExpressionStatement[1384-1423]:ExpressionStatement[1384-1423]"
    }, {
      "left" : "Document out = builder.newDocument();",
      "right" : "Document out = builder.newDocument();",
      "info" : "VariableDeclarationStatement[1436-1473]:VariableDeclarationStatement[1436-1473]"
    }, {
      "left" : "convert(in, out);",
      "right" : "convert(in, out);",
      "info" : "ExpressionStatement[1486-1503]:ExpressionStatement[1486-1503]"
    }, {
      "left" : "return out;",
      "right" : "return out;",
      "info" : "ReturnStatement[1516-1527]:ReturnStatement[1516-1527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1577-1636]:Block[1577-1636]"
    }, {
      "left" : "throw new IllegalStateException(e);",
      "right" : "throw new IllegalStateException(e);",
      "info" : "ThrowStatement[1591-1626]:ThrowStatement[1591-1626]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1936-1942]:Modifier[1936-1942]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1943-1947]:PrimitiveType[1943-1947]"
    }, {
      "left" : "convert",
      "right" : "convert",
      "info" : "SimpleName[1948-1955]:SimpleName[1948-1955]"
    }, {
      "left" : "org.jsoup.nodes.Document in",
      "right" : "org.jsoup.nodes.Document in",
      "info" : "SingleVariableDeclaration[1956-1983]:SingleVariableDeclaration[1956-1983]"
    }, {
      "left" : "Document out",
      "right" : "Document out",
      "info" : "SingleVariableDeclaration[1985-1997]:SingleVariableDeclaration[1985-1997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1999-2240]:Block[1999-2240]"
    }, {
      "left" : "if (!StringUtil.isBlank(in.location()))",
      "right" : "if (!StringUtil.isBlank(in.location()))",
      "info" : "IfStatement[2009-2095]:IfStatement[2009-2095]"
    }, {
      "left" : "out.setDocumentURI(in.location());",
      "right" : "out.setDocumentURI(in.location());",
      "info" : "ExpressionStatement[2061-2095]:ExpressionStatement[2061-2095]"
    }, {
      "left" : "org.jsoup.nodes.Element rootEl = in.child(0);",
      "right" : "org.jsoup.nodes.Element rootEl = in.child(0);",
      "info" : "VariableDeclarationStatement[2105-2150]:VariableDeclarationStatement[2105-2150]"
    }, {
      "left" : "NodeTraversor.traverse(new W3CBuilder(out), rootEl);",
      "right" : "NodeTraversor.traverse(new W3CBuilder(out), rootEl);",
      "info" : "ExpressionStatement[2182-2234]:ExpressionStatement[2182-2234]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2317-2326]:Modifier[2317-2326]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2334-2339]:TYPE_DECLARATION_KIND[2334-2339]"
    }, {
      "left" : "W3CBuilder",
      "right" : "W3CBuilder",
      "info" : "SimpleName[2340-2350]:SimpleName[2340-2350]"
    }, {
      "left" : "NodeVisitor",
      "right" : "NodeVisitor",
      "info" : "SimpleType[2362-2373]:SimpleType[2362-2373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2692-2698]:Modifier[2692-2698]"
    }, {
      "left" : "W3CBuilder",
      "right" : "W3CBuilder",
      "info" : "SimpleName[2699-2709]:SimpleName[2699-2709]"
    }, {
      "left" : "Document doc",
      "right" : "Document doc",
      "info" : "SingleVariableDeclaration[2710-2722]:SingleVariableDeclaration[2710-2722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2724-2833]:Block[2724-2833]"
    }, {
      "left" : "this.doc = doc;",
      "right" : "this.doc = doc;",
      "info" : "ExpressionStatement[2738-2753]:ExpressionStatement[2738-2753]"
    }, {
      "left" : "this.namespacesStack.push(new HashMap<String, String>());",
      "right" : "this.namespacesStack.push(new HashMap<String, String>());",
      "info" : "ExpressionStatement[2766-2823]:ExpressionStatement[2766-2823]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2843-2849]:Modifier[2843-2849]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2850-2854]:PrimitiveType[2850-2854]"
    }, {
      "left" : "head",
      "right" : "head",
      "info" : "SimpleName[2855-2859]:SimpleName[2855-2859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2900-4597]:Block[2900-4737]"
    }, {
      "left" : "namespacesStack.push(new HashMap<>(namespacesStack.peek()));",
      "right" : "namespacesStack.push(new HashMap<>(namespacesStack.peek()));",
      "info" : "ExpressionStatement[2914-2974]:ExpressionStatement[2914-2974]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.Element)",
      "right" : "if (source instanceof org.jsoup.nodes.Element)",
      "info" : "IfStatement[3022-4587]:IfStatement[3022-4727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3069-3712]:Block[3069-3852]"
    }, {
      "left" : "org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;",
      "right" : "org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;",
      "info" : "VariableDeclarationStatement[3087-3155]:VariableDeclarationStatement[3087-3155]"
    }, {
      "left" : "String prefix = updateNamespaces(sourceEl);",
      "right" : "String prefix = updateNamespaces(sourceEl);",
      "info" : "VariableDeclarationStatement[3173-3216]:VariableDeclarationStatement[3173-3216]"
    }, {
      "left" : "String namespace = namespacesStack.peek().get(prefix);",
      "right" : "String namespace = namespacesStack.peek().get(prefix);",
      "info" : "VariableDeclarationStatement[3233-3287]:VariableDeclarationStatement[3233-3287]"
    }, {
      "left" : "String tagName = sourceEl.tagName();",
      "right" : "String tagName = sourceEl.tagName();",
      "info" : "VariableDeclarationStatement[3304-3340]:VariableDeclarationStatement[3304-3340]"
    }, {
      "left" : "Element el = \n                    doc.createElementNS(namespace, tagName);",
      "right" : "Element el = namespace == null && tagName.contains(\":\") ?\n                    doc.createElementNS(\"\", tagName) : // doesn't have a real namespace defined\n                    doc.createElementNS(namespace, tagName);",
      "info" : "VariableDeclarationStatement[3358-3432]:VariableDeclarationStatement[3358-3572]"
    }, {
      "left" : "doc.createElementNS(namespace, tagName)",
      "right" : "doc.createElementNS(namespace, tagName)",
      "info" : "MethodInvocation[3392-3431]:MethodInvocation[3532-3571]"
    }, {
      "left" : "copyAttributes(sourceEl, el);",
      "right" : "copyAttributes(sourceEl, el);",
      "info" : "ExpressionStatement[3449-3478]:ExpressionStatement[3589-3618]"
    }, {
      "left" : "if (dest == null)",
      "right" : "if (dest == null)",
      "info" : "IfStatement[3495-3660]:IfStatement[3635-3800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3513-3593]:Block[3653-3733]"
    }, {
      "left" : "doc.appendChild(el);",
      "right" : "doc.appendChild(el);",
      "info" : "ExpressionStatement[3555-3575]:ExpressionStatement[3695-3715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3599-3660]:Block[3739-3800]"
    }, {
      "left" : "dest.appendChild(el);",
      "right" : "dest.appendChild(el);",
      "info" : "ExpressionStatement[3621-3642]:ExpressionStatement[3761-3782]"
    }, {
      "left" : "dest = el;",
      "right" : "dest = el;",
      "info" : "ExpressionStatement[3677-3687]:ExpressionStatement[3817-3827]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.TextNode)",
      "right" : "if (source instanceof org.jsoup.nodes.TextNode)",
      "info" : "IfStatement[3718-4587]:IfStatement[3858-4727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3766-3985]:Block[3906-4125]"
    }, {
      "left" : "org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;",
      "right" : "org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;",
      "info" : "VariableDeclarationStatement[3784-3856]:VariableDeclarationStatement[3924-3996]"
    }, {
      "left" : "Text text = doc.createTextNode(sourceText.getWholeText());",
      "right" : "Text text = doc.createTextNode(sourceText.getWholeText());",
      "info" : "VariableDeclarationStatement[3873-3931]:VariableDeclarationStatement[4013-4071]"
    }, {
      "left" : "dest.appendChild(text);",
      "right" : "dest.appendChild(text);",
      "info" : "ExpressionStatement[3948-3971]:ExpressionStatement[4088-4111]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.Comment)",
      "right" : "if (source instanceof org.jsoup.nodes.Comment)",
      "info" : "IfStatement[3991-4587]:IfStatement[4131-4727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4038-4264]:Block[4178-4404]"
    }, {
      "left" : "org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;",
      "right" : "org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;",
      "info" : "VariableDeclarationStatement[4056-4129]:VariableDeclarationStatement[4196-4269]"
    }, {
      "left" : "Comment comment = doc.createComment(sourceComment.getData());",
      "right" : "Comment comment = doc.createComment(sourceComment.getData());",
      "info" : "VariableDeclarationStatement[4146-4207]:VariableDeclarationStatement[4286-4347]"
    }, {
      "left" : "dest.appendChild(comment);",
      "right" : "dest.appendChild(comment);",
      "info" : "ExpressionStatement[4224-4250]:ExpressionStatement[4364-4390]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.DataNode)",
      "right" : "if (source instanceof org.jsoup.nodes.DataNode)",
      "info" : "IfStatement[4270-4587]:IfStatement[4410-4727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4318-4537]:Block[4458-4677]"
    }, {
      "left" : "org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;",
      "right" : "org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;",
      "info" : "VariableDeclarationStatement[4336-4408]:VariableDeclarationStatement[4476-4548]"
    }, {
      "left" : "Text node = doc.createTextNode(sourceData.getWholeData());",
      "right" : "Text node = doc.createTextNode(sourceData.getWholeData());",
      "info" : "VariableDeclarationStatement[4425-4483]:VariableDeclarationStatement[4565-4623]"
    }, {
      "left" : "dest.appendChild(node);",
      "right" : "dest.appendChild(node);",
      "info" : "ExpressionStatement[4500-4523]:ExpressionStatement[4640-4663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4543-4587]:Block[4683-4727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4607-4613]:Modifier[4747-4753]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4614-4618]:PrimitiveType[4754-4758]"
    }, {
      "left" : "tail",
      "right" : "tail",
      "info" : "SimpleName[4619-4623]:SimpleName[4759-4763]"
    }, {
      "left" : "org.jsoup.nodes.Node source",
      "right" : "org.jsoup.nodes.Node source",
      "info" : "SingleVariableDeclaration[4624-4651]:SingleVariableDeclaration[4764-4791]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[4653-4662]:SingleVariableDeclaration[4793-4802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4664-4908]:Block[4804-5048]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element)",
      "right" : "if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element)",
      "info" : "IfStatement[4678-4863]:IfStatement[4818-5003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4768-4863]:Block[4908-5003]"
    }, {
      "left" : "dest = (Element) dest.getParentNode();",
      "right" : "dest = (Element) dest.getParentNode();",
      "info" : "ExpressionStatement[4786-4824]:ExpressionStatement[4926-4964]"
    }, {
      "left" : "namespacesStack.pop();",
      "right" : "namespacesStack.pop();",
      "info" : "ExpressionStatement[4876-4898]:ExpressionStatement[5016-5038]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4918-4925]:Modifier[5058-5065]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4926-4930]:PrimitiveType[5066-5070]"
    }, {
      "left" : "copyAttributes",
      "right" : "copyAttributes",
      "info" : "SimpleName[4931-4945]:SimpleName[5071-5085]"
    }, {
      "left" : "org.jsoup.nodes.Node source",
      "right" : "org.jsoup.nodes.Node source",
      "info" : "SingleVariableDeclaration[4946-4973]:SingleVariableDeclaration[5086-5113]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[4975-4985]:SingleVariableDeclaration[5115-5125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4987-5362]:Block[5127-5502]"
    }, {
      "left" : "for (Attribute attribute : source.attributes())",
      "right" : "for (Attribute attribute : source.attributes())",
      "info" : "EnhancedForStatement[5001-5352]:EnhancedForStatement[5141-5492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5049-5352]:Block[5189-5492]"
    }, {
      "left" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
      "right" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
      "info" : "VariableDeclarationStatement[5144-5211]:VariableDeclarationStatement[5284-5351]"
    }, {
      "left" : "if (key.matches(\"[a-zA-Z_:][-a-zA-Z0-9_:.]*\"))",
      "right" : "if (key.matches(\"[a-zA-Z_:][-a-zA-Z0-9_:.]*\"))",
      "info" : "IfStatement[5228-5338]:IfStatement[5368-5478]"
    }, {
      "left" : "el.setAttribute(key, attribute.getValue());",
      "right" : "el.setAttribute(key, attribute.getValue());",
      "info" : "ExpressionStatement[5295-5338]:ExpressionStatement[5435-5478]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5477-5484]:Modifier[5617-5624]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5485-5491]:SimpleType[5625-5631]"
    }, {
      "left" : "updateNamespaces",
      "right" : "updateNamespaces",
      "info" : "SimpleName[5492-5508]:SimpleName[5632-5648]"
    }, {
      "left" : "org.jsoup.nodes.Element el",
      "right" : "org.jsoup.nodes.Element el",
      "info" : "SingleVariableDeclaration[5509-5535]:SingleVariableDeclaration[5649-5675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5537-6358]:Block[5677-6498]"
    }, {
      "left" : "Attributes attributes = el.attributes();",
      "right" : "Attributes attributes = el.attributes();",
      "info" : "VariableDeclarationStatement[5667-5707]:VariableDeclarationStatement[5807-5847]"
    }, {
      "left" : "for (Attribute attr : attributes)",
      "right" : "for (Attribute attr : attributes)",
      "info" : "EnhancedForStatement[5720-6187]:EnhancedForStatement[5860-6327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5754-6187]:Block[5894-6327]"
    }, {
      "left" : "String key = attr.getKey();",
      "right" : "String key = attr.getKey();",
      "info" : "VariableDeclarationStatement[5772-5799]:VariableDeclarationStatement[5912-5939]"
    }, {
      "left" : "String prefix;",
      "right" : "String prefix;",
      "info" : "VariableDeclarationStatement[5816-5830]:VariableDeclarationStatement[5956-5970]"
    }, {
      "left" : "if (key.equals(xmlnsKey))",
      "right" : "if (key.equals(xmlnsKey))",
      "info" : "IfStatement[5847-6104]:IfStatement[5987-6244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5873-5925]:Block[6013-6065]"
    }, {
      "left" : "prefix = \"\";",
      "right" : "prefix = \"\";",
      "info" : "ExpressionStatement[5895-5907]:ExpressionStatement[6035-6047]"
    }, {
      "left" : "if (key.startsWith(xmlnsPrefix))",
      "right" : "if (key.startsWith(xmlnsPrefix))",
      "info" : "IfStatement[5931-6104]:IfStatement[6071-6244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5964-6049]:Block[6104-6189]"
    }, {
      "left" : "prefix = key.substring(xmlnsPrefix.length());",
      "right" : "prefix = key.substring(xmlnsPrefix.length());",
      "info" : "ExpressionStatement[5986-6031]:ExpressionStatement[6126-6171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6055-6104]:Block[6195-6244]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[6077-6086]:ContinueStatement[6217-6226]"
    }, {
      "left" : "namespacesStack.peek().put(prefix, attr.getValue());",
      "right" : "namespacesStack.peek().put(prefix, attr.getValue());",
      "info" : "ExpressionStatement[6121-6173]:ExpressionStatement[6261-6313]"
    }, {
      "left" : "int pos = el.tagName().indexOf(\":\");",
      "right" : "int pos = el.tagName().indexOf(\":\");",
      "info" : "VariableDeclarationStatement[6246-6282]:VariableDeclarationStatement[6386-6422]"
    }, {
      "left" : "return pos > 0 ? el.tagName().substring(0, pos) : \"\";",
      "right" : "return pos > 0 ? el.tagName().substring(0, pos) : \"\";",
      "info" : "ReturnStatement[6295-6348]:ReturnStatement[6435-6488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6493-6499]:Modifier[6633-6639]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6500-6506]:SimpleType[6640-6646]"
    }, {
      "left" : "asString",
      "right" : "asString",
      "info" : "SimpleName[6507-6515]:SimpleName[6647-6655]"
    }, {
      "left" : "Document doc",
      "right" : "Document doc",
      "info" : "SingleVariableDeclaration[6516-6528]:SingleVariableDeclaration[6656-6668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6530-7041]:Block[6670-7181]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6540-7035]:TryStatement[6680-7175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6544-6944]:Block[6684-7084]"
    }, {
      "left" : "DOMSource domSource = new DOMSource(doc);",
      "right" : "DOMSource domSource = new DOMSource(doc);",
      "info" : "VariableDeclarationStatement[6558-6599]:VariableDeclarationStatement[6698-6739]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[6612-6653]:VariableDeclarationStatement[6752-6793]"
    }, {
      "left" : "StreamResult result = new StreamResult(writer);",
      "right" : "StreamResult result = new StreamResult(writer);",
      "info" : "VariableDeclarationStatement[6666-6713]:VariableDeclarationStatement[6806-6853]"
    }, {
      "left" : "TransformerFactory tf = TransformerFactory.newInstance();",
      "right" : "TransformerFactory tf = TransformerFactory.newInstance();",
      "info" : "VariableDeclarationStatement[6726-6783]:VariableDeclarationStatement[6866-6923]"
    }, {
      "left" : "Transformer transformer = tf.newTransformer();",
      "right" : "Transformer transformer = tf.newTransformer();",
      "info" : "VariableDeclarationStatement[6796-6842]:VariableDeclarationStatement[6936-6982]"
    }, {
      "left" : "transformer.transform(domSource, result);",
      "right" : "transformer.transform(domSource, result);",
      "info" : "ExpressionStatement[6855-6896]:ExpressionStatement[6995-7036]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[6909-6934]:ReturnStatement[7049-7074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6976-7035]:Block[7116-7175]"
    }, {
      "left" : "throw new IllegalStateException(e);",
      "right" : "throw new IllegalStateException(e);",
      "info" : "ThrowStatement[6990-7025]:ThrowStatement[7130-7165]"
    } ]
  },
  "interFileMappings" : { }
}