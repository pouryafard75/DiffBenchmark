{
  "matchedElements" : [
 {
    "left" : "class : CommandLineRunner",
    "right" : "class : CommandLineRunner",
    "info" : "TypeDeclaration[1337-18195]:TypeDeclaration[1337-18171]"
  }, {
    "left" : "class : Flags",
    "right" : "class : Flags",
    "info" : "TypeDeclaration[2477-12516]:TypeDeclaration[2477-12516]"
  }, {
    "left" : "print_tree",
    "right" : "print_tree",
    "info" : "FieldDeclaration[2510-2681]:FieldDeclaration[2510-2681]"
  }, {
    "left" : "compute_phase_ordering",
    "right" : "compute_phase_ordering",
    "info" : "FieldDeclaration[2687-2946]:FieldDeclaration[2687-2946]"
  }, {
    "left" : "print_ast",
    "right" : "print_ast",
    "info" : "FieldDeclaration[2952-3171]:FieldDeclaration[2952-3171]"
  }, {
    "left" : "print_pass_graph",
    "right" : "print_pass_graph",
    "info" : "FieldDeclaration[3177-3359]:FieldDeclaration[3177-3359]"
  }, {
    "left" : "jscomp_dev_mode",
    "right" : "jscomp_dev_mode",
    "info" : "FieldDeclaration[3365-3573]:FieldDeclaration[3365-3573]"
  }, {
    "left" : "logging_level",
    "right" : "logging_level",
    "info" : "FieldDeclaration[3643-3942]:FieldDeclaration[3643-3942]"
  }, {
    "left" : "externs",
    "right" : "externs",
    "info" : "FieldDeclaration[3948-4129]:FieldDeclaration[3948-4129]"
  }, {
    "left" : "js",
    "right" : "js",
    "info" : "FieldDeclaration[4135-4278]:FieldDeclaration[4135-4278]"
  }, {
    "left" : "js_output_file",
    "right" : "js_output_file",
    "info" : "FieldDeclaration[4284-4461]:FieldDeclaration[4284-4461]"
  }, {
    "left" : "module",
    "right" : "module",
    "info" : "FieldDeclaration[4467-4989]:FieldDeclaration[4467-4989]"
  }, {
    "left" : "variable_map_input_file",
    "right" : "variable_map_input_file",
    "info" : "FieldDeclaration[4995-5222]:FieldDeclaration[4995-5222]"
  }, {
    "left" : "property_map_input_file",
    "right" : "property_map_input_file",
    "info" : "FieldDeclaration[5228-5455]:FieldDeclaration[5228-5455]"
  }, {
    "left" : "variable_map_output_file",
    "right" : "variable_map_output_file",
    "info" : "FieldDeclaration[5461-5675]:FieldDeclaration[5461-5675]"
  }, {
    "left" : "create_name_map_files",
    "right" : "create_name_map_files",
    "info" : "FieldDeclaration[5681-6144]:FieldDeclaration[5681-6144]"
  }, {
    "left" : "property_map_output_file",
    "right" : "property_map_output_file",
    "info" : "FieldDeclaration[6150-6364]:FieldDeclaration[6150-6364]"
  }, {
    "left" : "third_party",
    "right" : "third_party",
    "info" : "FieldDeclaration[6370-6597]:FieldDeclaration[6370-6597]"
  }, {
    "left" : "summary_detail_level",
    "right" : "summary_detail_level",
    "info" : "FieldDeclaration[6604-7006]:FieldDeclaration[6604-7006]"
  }, {
    "left" : "output_wrapper",
    "right" : "output_wrapper",
    "info" : "FieldDeclaration[7012-7233]:FieldDeclaration[7012-7233]"
  }, {
    "left" : "output_wrapper_marker",
    "right" : "output_wrapper_marker",
    "info" : "FieldDeclaration[7239-7432]:FieldDeclaration[7239-7432]"
  }, {
    "left" : "module_wrapper",
    "right" : "module_wrapper",
    "info" : "FieldDeclaration[7438-7804]:FieldDeclaration[7438-7804]"
  }, {
    "left" : "module_output_path_prefix",
    "right" : "module_output_path_prefix",
    "info" : "FieldDeclaration[7810-8105]:FieldDeclaration[7810-8105]"
  }, {
    "left" : "create_source_map",
    "right" : "create_source_map",
    "info" : "FieldDeclaration[8111-8505]:FieldDeclaration[8111-8505]"
  }, {
    "left" : "jscomp_error",
    "right" : "jscomp_error",
    "info" : "FieldDeclaration[8511-8726]:FieldDeclaration[8511-8726]"
  }, {
    "left" : "jscomp_warning",
    "right" : "jscomp_warning",
    "info" : "FieldDeclaration[8732-8965]:FieldDeclaration[8732-8965]"
  }, {
    "left" : "jscomp_off",
    "right" : "jscomp_off",
    "info" : "FieldDeclaration[8971-9177]:FieldDeclaration[8971-9177]"
  }, {
    "left" : "define",
    "right" : "define",
    "info" : "FieldDeclaration[9183-9640]:FieldDeclaration[9183-9640]"
  }, {
    "left" : "charset",
    "right" : "charset",
    "info" : "FieldDeclaration[9646-9754]:FieldDeclaration[9646-9754]"
  }, {
    "left" : "compilation_level",
    "right" : "compilation_level",
    "info" : "FieldDeclaration[9760-10036]:FieldDeclaration[9760-10036]"
  }, {
    "left" : "warning_level",
    "right" : "warning_level",
    "info" : "FieldDeclaration[10042-10239]:FieldDeclaration[10042-10239]"
  }, {
    "left" : "use_only_custom_externs",
    "right" : "use_only_custom_externs",
    "info" : "FieldDeclaration[10245-10463]:FieldDeclaration[10245-10463]"
  }, {
    "left" : "debug",
    "right" : "debug",
    "info" : "FieldDeclaration[10469-10619]:FieldDeclaration[10469-10619]"
  }, {
    "left" : "formatting",
    "right" : "formatting",
    "info" : "FieldDeclaration[10625-10895]:FieldDeclaration[10625-10895]"
  }, {
    "left" : "process_closure_primitives",
    "right" : "process_closure_primitives",
    "info" : "FieldDeclaration[10901-11190]:FieldDeclaration[10901-11190]"
  }, {
    "left" : "class : BooleanOptionHandler",
    "right" : "class : BooleanOptionHandler",
    "info" : "TypeDeclaration[11332-12512]:TypeDeclaration[11332-12512]"
  }, {
    "left" : "TRUES",
    "right" : "TRUES",
    "info" : "FieldDeclaration[11412-11505]:FieldDeclaration[11412-11505]"
  }, {
    "left" : "FALSES",
    "right" : "FALSES",
    "info" : "FieldDeclaration[11512-11607]:FieldDeclaration[11512-11607]"
  }, {
    "left" : "public BooleanOptionHandler(parser , option , setter )",
    "right" : "public BooleanOptionHandler(parser , option , setter )",
    "info" : "MethodDeclaration[11615-11784]:MethodDeclaration[11615-11784]"
  }, {
    "left" : "public parseArguments(params ) : int",
    "right" : "public parseArguments(params ) : int",
    "info" : "MethodDeclaration[11792-12413]:MethodDeclaration[11792-12413]"
  }, {
    "left" : "public getDefaultMetaVariable() : ",
    "right" : "public getDefaultMetaVariable() : ",
    "info" : "MethodDeclaration[12421-12506]:MethodDeclaration[12421-12506]"
  }, {
    "left" : "private applyToOptions(options ...) : void",
    "right" : "private applyToOptions(options ...) : void",
    "info" : "MethodDeclaration[12692-13056]:MethodDeclaration[12692-13056]"
  }, {
    "left" : "flags",
    "right" : "flags",
    "info" : "FieldDeclaration[13064-13104]:FieldDeclaration[13064-13104]"
  }, {
    "left" : "protected CommandLineRunner(args ) : ",
    "right" : "protected CommandLineRunner(args ) : ",
    "info" : "MethodDeclaration[13108-13430]:MethodDeclaration[13108-13430]"
  }, {
    "left" : "protected CommandLineRunner(args , out , err ) : ",
    "right" : "protected CommandLineRunner(args , out , err ) : ",
    "info" : "MethodDeclaration[13434-13603]:MethodDeclaration[13434-13603]"
  }, {
    "left" : "private initConfigFromFlags(args , err ) : void",
    "right" : "private initConfigFromFlags(args , err ) : void",
    "info" : "MethodDeclaration[13607-16141]:MethodDeclaration[13607-16141]"
  }, {
    "left" : "protected createOptions() : ",
    "right" : "protected createOptions() : ",
    "info" : "MethodDeclaration[16145-16865]:MethodDeclaration[16145-16841]"
  }, {
    "left" : "protected createCompiler() : ",
    "right" : "protected createCompiler() : ",
    "info" : "MethodDeclaration[16869-16970]:MethodDeclaration[16845-16946]"
  }, {
    "left" : "protected createExterns() : ",
    "right" : "protected createExterns() : ",
    "info" : "MethodDeclaration[16974-17350]:MethodDeclaration[16950-17326]"
  }, {
    "left" : "private getDefaultExterns() : ",
    "right" : "private getDefaultExterns() : ",
    "info" : "MethodDeclaration[17354-17952]:MethodDeclaration[17330-17928]"
  }, {
    "left" : "public main(args ...) : void",
    "right" : "public main(args ...) : void",
    "info" : "MethodDeclaration[17956-18193]:MethodDeclaration[17932-18169]"
  } ],
  "mappings" : [
 {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[2477-2484]:Modifier[2477-2484]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2485-2491]:Modifier[2485-2491]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[2492-2497]:TYPE_DECLARATION_KIND[2492-2497]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11332-11338]:Modifier[11332-11338]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11339-11345]:Modifier[11339-11345]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[11346-11351]:TYPE_DECLARATION_KIND[11346-11351]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11615-11621]:Modifier[11615-11621]"
  }, {
    "left" : "BooleanOptionHandler",
    "right" : "BooleanOptionHandler",
    "info" : "SimpleName[11622-11642]:SimpleName[11622-11642]"
  }, {
    "left" : "CmdLineParser parser",
    "right" : "CmdLineParser parser",
    "info" : "SingleVariableDeclaration[11654-11674]:SingleVariableDeclaration[11654-11674]"
  }, {
    "left" : "OptionDef option",
    "right" : "OptionDef option",
    "info" : "SingleVariableDeclaration[11676-11692]:SingleVariableDeclaration[11676-11692]"
  }, {
    "left" : "Setter<? super Boolean> setter",
    "right" : "Setter<? super Boolean> setter",
    "info" : "SingleVariableDeclaration[11704-11734]:SingleVariableDeclaration[11704-11734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11736-11784]:Block[11736-11784]"
  }, {
    "left" : "super(parser, option, setter);",
    "right" : "super(parser, option, setter);",
    "info" : "SuperConstructorInvocation[11746-11776]:SuperConstructorInvocation[11746-11776]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[11792-11801]:MarkerAnnotation[11792-11801]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11808-11814]:Modifier[11808-11814]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[11815-11818]:PrimitiveType[11815-11818]"
  }, {
    "left" : "parseArguments",
    "right" : "parseArguments",
    "info" : "SimpleName[11819-11833]:SimpleName[11819-11833]"
  }, {
    "left" : "Parameters params",
    "right" : "Parameters params",
    "info" : "SingleVariableDeclaration[11834-11851]:SingleVariableDeclaration[11834-11851]"
  }, {
    "left" : "CmdLineException",
    "right" : "CmdLineException",
    "info" : "SimpleType[11860-11876]:SimpleType[11860-11876]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11877-12413]:Block[11877-12413]"
  }, {
    "left" : "String param = params.getParameter(0);",
    "right" : "String param = params.getParameter(0);",
    "info" : "VariableDeclarationStatement[11887-11925]:VariableDeclarationStatement[11887-11925]"
  }, {
    "left" : "if (param == null)",
    "right" : "if (param == null)",
    "info" : "IfStatement[11934-12405]:IfStatement[11934-12405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11953-12017]:Block[11953-12017]"
  }, {
    "left" : "setter.addValue(true);",
    "right" : "setter.addValue(true);",
    "info" : "ExpressionStatement[11965-11987]:ExpressionStatement[11965-11987]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[11998-12007]:ReturnStatement[11998-12007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12023-12405]:Block[12023-12405]"
  }, {
    "left" : "String lowerParam = param.toLowerCase();",
    "right" : "String lowerParam = param.toLowerCase();",
    "info" : "VariableDeclarationStatement[12035-12075]:VariableDeclarationStatement[12035-12075]"
  }, {
    "left" : "if (TRUES.contains(lowerParam))",
    "right" : "if (TRUES.contains(lowerParam))",
    "info" : "IfStatement[12086-12375]:IfStatement[12086-12375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12118-12166]:Block[12118-12166]"
  }, {
    "left" : "setter.addValue(true);",
    "right" : "setter.addValue(true);",
    "info" : "ExpressionStatement[12132-12154]:ExpressionStatement[12132-12154]"
  }, {
    "left" : "if (FALSES.contains(lowerParam))",
    "right" : "if (FALSES.contains(lowerParam))",
    "info" : "IfStatement[12172-12375]:IfStatement[12172-12375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12205-12254]:Block[12205-12254]"
  }, {
    "left" : "setter.addValue(false);",
    "right" : "setter.addValue(false);",
    "info" : "ExpressionStatement[12219-12242]:ExpressionStatement[12219-12242]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12260-12375]:Block[12260-12375]"
  }, {
    "left" : "throw new CmdLineException(owner,\n               \"Illegal boolean value: \" + lowerParam);",
    "right" : "throw new CmdLineException(owner,\n               \"Illegal boolean value: \" + lowerParam);",
    "info" : "ThrowStatement[12274-12363]:ThrowStatement[12274-12363]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[12386-12395]:ReturnStatement[12386-12395]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[12421-12430]:MarkerAnnotation[12421-12430]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12437-12443]:Modifier[12437-12443]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[12444-12450]:SimpleType[12444-12450]"
  }, {
    "left" : "getDefaultMetaVariable",
    "right" : "getDefaultMetaVariable",
    "info" : "SimpleName[12451-12473]:SimpleName[12451-12473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12476-12506]:Block[12476-12506]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12486-12498]:ReturnStatement[12486-12498]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12692-12699]:Modifier[12692-12699]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12700-12704]:PrimitiveType[12700-12704]"
  }, {
    "left" : "applyToOptions",
    "right" : "applyToOptions",
    "info" : "SimpleName[12705-12719]:SimpleName[12705-12719]"
  }, {
    "left" : "CompilerOptions options",
    "right" : "CompilerOptions options",
    "info" : "SingleVariableDeclaration[12720-12743]:SingleVariableDeclaration[12720-12743]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12745-13056]:Block[12745-13056]"
  }, {
    "left" : "switch (this) {\n        case PRETTY_PRINT:\n          options.prettyPrint = true;\n          break;\n        case PRINT_INPUT_DELIMITER:\n          options.printInputDelimiter = true;\n          break;\n        default:\n          throw new RuntimeException(\"Unknown formatting option: \" + this);\n      }",
    "right" : "switch (this) {\n        case PRETTY_PRINT:\n          options.prettyPrint = true;\n          break;\n        case PRINT_INPUT_DELIMITER:\n          options.printInputDelimiter = true;\n          break;\n        default:\n          throw new RuntimeException(\"Unknown formatting option: \" + this);\n      }",
    "info" : "SwitchStatement[12753-13050]:SwitchStatement[12753-13050]"
  }, {
    "left" : "case PRETTY_PRINT:",
    "right" : "case PRETTY_PRINT:",
    "info" : "SwitchCase[12777-12795]:SwitchCase[12777-12795]"
  }, {
    "left" : "options.prettyPrint = true;",
    "right" : "options.prettyPrint = true;",
    "info" : "ExpressionStatement[12806-12833]:ExpressionStatement[12806-12833]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12844-12850]:BreakStatement[12844-12850]"
  }, {
    "left" : "case PRINT_INPUT_DELIMITER:",
    "right" : "case PRINT_INPUT_DELIMITER:",
    "info" : "SwitchCase[12859-12886]:SwitchCase[12859-12886]"
  }, {
    "left" : "options.printInputDelimiter = true;",
    "right" : "options.printInputDelimiter = true;",
    "info" : "ExpressionStatement[12897-12932]:ExpressionStatement[12897-12932]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12943-12949]:BreakStatement[12943-12949]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[12958-12966]:SwitchCase[12958-12966]"
  }, {
    "left" : "throw new RuntimeException(\"Unknown formatting option: \" + this);",
    "right" : "throw new RuntimeException(\"Unknown formatting option: \" + this);",
    "info" : "ThrowStatement[12977-13042]:ThrowStatement[12977-13042]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[13296-13305]:Modifier[13296-13305]"
  }, {
    "left" : "CommandLineRunner",
    "right" : "CommandLineRunner",
    "info" : "SimpleName[13306-13323]:SimpleName[13306-13323]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[13324-13337]:SingleVariableDeclaration[13324-13337]"
  }, {
    "left" : "CmdLineException",
    "right" : "CmdLineException",
    "info" : "SimpleType[13352-13368]:SimpleType[13352-13368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13369-13430]:Block[13369-13430]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[13375-13383]:SuperConstructorInvocation[13375-13383]"
  }, {
    "left" : "initConfigFromFlags(args, System.err);",
    "right" : "initConfigFromFlags(args, System.err);",
    "info" : "ExpressionStatement[13388-13426]:ExpressionStatement[13388-13426]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[13434-13443]:Modifier[13434-13443]"
  }, {
    "left" : "CommandLineRunner",
    "right" : "CommandLineRunner",
    "info" : "SimpleName[13444-13461]:SimpleName[13444-13461]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[13462-13475]:SingleVariableDeclaration[13462-13475]"
  }, {
    "left" : "PrintStream out",
    "right" : "PrintStream out",
    "info" : "SingleVariableDeclaration[13477-13492]:SingleVariableDeclaration[13477-13492]"
  }, {
    "left" : "PrintStream err",
    "right" : "PrintStream err",
    "info" : "SingleVariableDeclaration[13494-13509]:SingleVariableDeclaration[13494-13509]"
  }, {
    "left" : "CmdLineException",
    "right" : "CmdLineException",
    "info" : "SimpleType[13524-13540]:SimpleType[13524-13540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13541-13603]:Block[13541-13603]"
  }, {
    "left" : "super(out, err);",
    "right" : "super(out, err);",
    "info" : "SuperConstructorInvocation[13547-13563]:SuperConstructorInvocation[13547-13563]"
  }, {
    "left" : "initConfigFromFlags(args, err);",
    "right" : "initConfigFromFlags(args, err);",
    "info" : "ExpressionStatement[13568-13599]:ExpressionStatement[13568-13599]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13607-13614]:Modifier[13607-13614]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13615-13619]:PrimitiveType[13615-13619]"
  }, {
    "left" : "initConfigFromFlags",
    "right" : "initConfigFromFlags",
    "info" : "SimpleName[13620-13639]:SimpleName[13620-13639]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[13647-13660]:SingleVariableDeclaration[13647-13660]"
  }, {
    "left" : "PrintStream err",
    "right" : "PrintStream err",
    "info" : "SingleVariableDeclaration[13662-13677]:SingleVariableDeclaration[13662-13677]"
  }, {
    "left" : "CmdLineException",
    "right" : "CmdLineException",
    "info" : "SimpleType[13692-13708]:SimpleType[13692-13708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13709-16141]:Block[13709-16141]"
  }, {
    "left" : "Pattern argPattern = Pattern.compile(\"(--[a-zA-Z_]+)=(.*)\");",
    "right" : "Pattern argPattern = Pattern.compile(\"(--[a-zA-Z_]+)=(.*)\");",
    "info" : "VariableDeclarationStatement[13875-13935]:VariableDeclarationStatement[13875-13935]"
  }, {
    "left" : "Pattern quotesPattern = Pattern.compile(\"^['\\\"](.*)['\\\"]$\");",
    "right" : "Pattern quotesPattern = Pattern.compile(\"^['\\\"](.*)['\\\"]$\");",
    "info" : "VariableDeclarationStatement[13940-14000]:VariableDeclarationStatement[13940-14000]"
  }, {
    "left" : "List<String> processedArgs = Lists.newArrayList();",
    "right" : "List<String> processedArgs = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[14005-14055]:VariableDeclarationStatement[14005-14055]"
  }, {
    "left" : "for (String arg : args)",
    "right" : "for (String arg : args)",
    "info" : "EnhancedForStatement[14060-14530]:EnhancedForStatement[14060-14530]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14084-14530]:Block[14084-14530]"
  }, {
    "left" : "Matcher matcher = argPattern.matcher(arg);",
    "right" : "Matcher matcher = argPattern.matcher(arg);",
    "info" : "VariableDeclarationStatement[14092-14134]:VariableDeclarationStatement[14092-14134]"
  }, {
    "left" : "if (matcher.matches())",
    "right" : "if (matcher.matches())",
    "info" : "IfStatement[14141-14524]:IfStatement[14141-14524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14164-14477]:Block[14164-14477]"
  }, {
    "left" : "processedArgs.add(matcher.group(1));",
    "right" : "processedArgs.add(matcher.group(1));",
    "info" : "ExpressionStatement[14174-14210]:ExpressionStatement[14174-14210]"
  }, {
    "left" : "String value = matcher.group(2);",
    "right" : "String value = matcher.group(2);",
    "info" : "VariableDeclarationStatement[14220-14252]:VariableDeclarationStatement[14220-14252]"
  }, {
    "left" : "Matcher quotesMatcher = quotesPattern.matcher(value);",
    "right" : "Matcher quotesMatcher = quotesPattern.matcher(value);",
    "info" : "VariableDeclarationStatement[14261-14314]:VariableDeclarationStatement[14261-14314]"
  }, {
    "left" : "if (quotesMatcher.matches())",
    "right" : "if (quotesMatcher.matches())",
    "info" : "IfStatement[14323-14469]:IfStatement[14323-14469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14352-14416]:Block[14352-14416]"
  }, {
    "left" : "processedArgs.add(quotesMatcher.group(1));",
    "right" : "processedArgs.add(quotesMatcher.group(1));",
    "info" : "ExpressionStatement[14364-14406]:ExpressionStatement[14364-14406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14422-14469]:Block[14422-14469]"
  }, {
    "left" : "processedArgs.add(value);",
    "right" : "processedArgs.add(value);",
    "info" : "ExpressionStatement[14434-14459]:ExpressionStatement[14434-14459]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14483-14524]:Block[14483-14524]"
  }, {
    "left" : "processedArgs.add(arg);",
    "right" : "processedArgs.add(arg);",
    "info" : "ExpressionStatement[14493-14516]:ExpressionStatement[14493-14516]"
  }, {
    "left" : "CmdLineParser parser = new CmdLineParser(flags);",
    "right" : "CmdLineParser parser = new CmdLineParser(flags);",
    "info" : "VariableDeclarationStatement[14536-14584]:VariableDeclarationStatement[14536-14584]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[14589-14783]:TryStatement[14589-14783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14593-14668]:Block[14593-14668]"
  }, {
    "left" : "parser.parseArgument(processedArgs.toArray(new String[] {}));",
    "right" : "parser.parseArgument(processedArgs.toArray(new String[] {}));",
    "info" : "ExpressionStatement[14601-14662]:ExpressionStatement[14601-14662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14696-14783]:Block[14696-14783]"
  }, {
    "left" : "err.println(e.getMessage());",
    "right" : "err.println(e.getMessage());",
    "info" : "ExpressionStatement[14704-14732]:ExpressionStatement[14704-14732]"
  }, {
    "left" : "parser.printUsage(err);",
    "right" : "parser.printUsage(err);",
    "info" : "ExpressionStatement[14739-14762]:ExpressionStatement[14739-14762]"
  }, {
    "left" : "throw e;",
    "right" : "throw e;",
    "info" : "ThrowStatement[14769-14777]:ThrowStatement[14769-14777]"
  }, {
    "left" : "getCommandLineConfig()\n        .setPrintTree(flags.print_tree)\n        .setComputePhaseOrdering(flags.compute_phase_ordering)\n        .setPrintAst(flags.print_ast)\n        .setPrintPassGraph(flags.print_pass_graph)\n        .setJscompDevMode(flags.jscomp_dev_mode)\n        .setLoggingLevel(flags.logging_level)\n        .setExterns(flags.externs)\n        .setJs(flags.js)\n        .setJsOutputFile(flags.js_output_file)\n        .setModule(flags.module)\n        .setVariableMapInputFile(flags.variable_map_input_file)\n        .setPropertyMapInputFile(flags.property_map_input_file)\n        .setVariableMapOutputFile(flags.variable_map_output_file)\n        .setCreateNameMapFiles(flags.create_name_map_files)\n        .setPropertyMapOutputFile(flags.property_map_output_file)\n        .setThirdParty(flags.third_party)\n        .setSummaryDetailLevel(flags.summary_detail_level)\n        .setOutputWrapper(flags.output_wrapper)\n        .setOutputWrapperMarker(flags.output_wrapper_marker)\n        .setModuleWrapper(flags.module_wrapper)\n        .setModuleOutputPathPrefix(flags.module_output_path_prefix)\n        .setCreateSourceMap(flags.create_source_map)\n        .setJscompError(flags.jscomp_error)\n        .setJscompWarning(flags.jscomp_warning)\n        .setJscompOff(flags.jscomp_off)\n        .setDefine(flags.define)\n        .setCharset(flags.charset);",
    "right" : "getCommandLineConfig()\n        .setPrintTree(flags.print_tree)\n        .setComputePhaseOrdering(flags.compute_phase_ordering)\n        .setPrintAst(flags.print_ast)\n        .setPrintPassGraph(flags.print_pass_graph)\n        .setJscompDevMode(flags.jscomp_dev_mode)\n        .setLoggingLevel(flags.logging_level)\n        .setExterns(flags.externs)\n        .setJs(flags.js)\n        .setJsOutputFile(flags.js_output_file)\n        .setModule(flags.module)\n        .setVariableMapInputFile(flags.variable_map_input_file)\n        .setPropertyMapInputFile(flags.property_map_input_file)\n        .setVariableMapOutputFile(flags.variable_map_output_file)\n        .setCreateNameMapFiles(flags.create_name_map_files)\n        .setPropertyMapOutputFile(flags.property_map_output_file)\n        .setThirdParty(flags.third_party)\n        .setSummaryDetailLevel(flags.summary_detail_level)\n        .setOutputWrapper(flags.output_wrapper)\n        .setOutputWrapperMarker(flags.output_wrapper_marker)\n        .setModuleWrapper(flags.module_wrapper)\n        .setModuleOutputPathPrefix(flags.module_output_path_prefix)\n        .setCreateSourceMap(flags.create_source_map)\n        .setJscompError(flags.jscomp_error)\n        .setJscompWarning(flags.jscomp_warning)\n        .setJscompOff(flags.jscomp_off)\n        .setDefine(flags.define)\n        .setCharset(flags.charset);",
    "info" : "ExpressionStatement[14788-16137]:ExpressionStatement[14788-16137]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16145-16154]:MarkerAnnotation[16145-16154]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16157-16166]:Modifier[16157-16166]"
  }, {
    "left" : "CompilerOptions",
    "right" : "CompilerOptions",
    "info" : "SimpleType[16167-16182]:SimpleType[16167-16182]"
  }, {
    "left" : "createOptions",
    "right" : "createOptions",
    "info" : "SimpleName[16183-16196]:SimpleName[16183-16196]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16199-16865]:Block[16199-16841]"
  }, {
    "left" : "CompilerOptions options = new CompilerOptions();",
    "right" : "CompilerOptions options = new CompilerOptions();",
    "info" : "VariableDeclarationStatement[16205-16253]:VariableDeclarationStatement[16205-16253]"
  }, {
    "left" : "options.setCodingConvention(new ClosureCodingConvention());",
    "right" : "options.setCodingConvention(new ClosureCodingConvention());",
    "info" : "ExpressionStatement[16258-16317]:ExpressionStatement[16258-16317]"
  }, {
    "left" : "CompilationLevel level = flags.compilation_level;",
    "right" : "CompilationLevel level = flags.compilation_level;",
    "info" : "VariableDeclarationStatement[16322-16371]:VariableDeclarationStatement[16322-16371]"
  }, {
    "left" : "level.setOptionsForCompilationLevel(options);",
    "right" : "level.setOptionsForCompilationLevel(options);",
    "info" : "ExpressionStatement[16376-16421]:ExpressionStatement[16376-16421]"
  }, {
    "left" : "if (flags.debug)",
    "right" : "if (flags.debug)",
    "info" : "IfStatement[16426-16507]:IfStatement[16426-16507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16443-16507]:Block[16443-16507]"
  }, {
    "left" : "level.setDebugOptionsForCompilationLevel(options);",
    "right" : "level.setDebugOptionsForCompilationLevel(options);",
    "info" : "ExpressionStatement[16451-16501]:ExpressionStatement[16451-16501]"
  }, {
    "left" : "WarningLevel wLevel = flags.warning_level;",
    "right" : "WarningLevel wLevel = flags.warning_level;",
    "info" : "VariableDeclarationStatement[16513-16555]:VariableDeclarationStatement[16513-16555]"
  }, {
    "left" : "wLevel.setOptionsForWarningLevel(options);",
    "right" : "wLevel.setOptionsForWarningLevel(options);",
    "info" : "ExpressionStatement[16560-16602]:ExpressionStatement[16560-16602]"
  }, {
    "left" : "for (FormattingOption formattingOption : flags.formatting)",
    "right" : "for (FormattingOption formattingOption : flags.formatting)",
    "info" : "EnhancedForStatement[16607-16721]:EnhancedForStatement[16607-16721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16666-16721]:Block[16666-16721]"
  }, {
    "left" : "formattingOption.applyToOptions(options);",
    "right" : "formattingOption.applyToOptions(options);",
    "info" : "ExpressionStatement[16674-16715]:ExpressionStatement[16674-16715]"
  }, {
    "left" : "options.closurePass = true;",
    "right" : "options.closurePass = flags.process_closure_primitives;",
    "info" : "ExpressionStatement[16772-16799]:ExpressionStatement[16727-16782]"
  }, {
    "left" : "initOptionsFromFlags(options);",
    "right" : "initOptionsFromFlags(options);",
    "info" : "ExpressionStatement[16811-16841]:ExpressionStatement[16787-16817]"
  }, {
    "left" : "return options;",
    "right" : "return options;",
    "info" : "ReturnStatement[16846-16861]:ReturnStatement[16822-16837]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16869-16878]:MarkerAnnotation[16845-16854]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16881-16890]:Modifier[16857-16866]"
  }, {
    "left" : "Compiler",
    "right" : "Compiler",
    "info" : "SimpleType[16891-16899]:SimpleType[16867-16875]"
  }, {
    "left" : "createCompiler",
    "right" : "createCompiler",
    "info" : "SimpleName[16900-16914]:SimpleName[16876-16890]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16917-16970]:Block[16893-16946]"
  }, {
    "left" : "return new Compiler(getErrorPrintStream());",
    "right" : "return new Compiler(getErrorPrintStream());",
    "info" : "ReturnStatement[16923-16966]:ReturnStatement[16899-16942]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16974-16983]:MarkerAnnotation[16950-16959]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16986-16995]:Modifier[16962-16971]"
  }, {
    "left" : "List<JSSourceFile>",
    "right" : "List<JSSourceFile>",
    "info" : "ParameterizedType[16996-17014]:ParameterizedType[16972-16990]"
  }, {
    "left" : "createExterns",
    "right" : "createExterns",
    "info" : "SimpleName[17015-17028]:SimpleName[16991-17004]"
  }, {
    "left" : "FlagUsageException",
    "right" : "FlagUsageException",
    "info" : "SimpleType[17038-17056]:SimpleType[17014-17032]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[17064-17075]:SimpleType[17040-17051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17076-17350]:Block[17052-17326]"
  }, {
    "left" : "List<JSSourceFile> externs = super.createExterns();",
    "right" : "List<JSSourceFile> externs = super.createExterns();",
    "info" : "VariableDeclarationStatement[17082-17133]:VariableDeclarationStatement[17058-17109]"
  }, {
    "left" : "if (!flags.use_only_custom_externs)",
    "right" : "if (!flags.use_only_custom_externs)",
    "info" : "IfStatement[17138-17346]:IfStatement[17114-17322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17174-17311]:Block[17150-17287]"
  }, {
    "left" : "List<JSSourceFile> defaultExterns = getDefaultExterns();",
    "right" : "List<JSSourceFile> defaultExterns = getDefaultExterns();",
    "info" : "VariableDeclarationStatement[17182-17238]:VariableDeclarationStatement[17158-17214]"
  }, {
    "left" : "defaultExterns.addAll(externs);",
    "right" : "defaultExterns.addAll(externs);",
    "info" : "ExpressionStatement[17245-17276]:ExpressionStatement[17221-17252]"
  }, {
    "left" : "return defaultExterns;",
    "right" : "return defaultExterns;",
    "info" : "ReturnStatement[17283-17305]:ReturnStatement[17259-17281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17317-17346]:Block[17293-17322]"
  }, {
    "left" : "return externs;",
    "right" : "return externs;",
    "info" : "ReturnStatement[17325-17340]:ReturnStatement[17301-17316]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[17419-17426]:Modifier[17395-17402]"
  }, {
    "left" : "List<JSSourceFile>",
    "right" : "List<JSSourceFile>",
    "info" : "ParameterizedType[17427-17445]:ParameterizedType[17403-17421]"
  }, {
    "left" : "getDefaultExterns",
    "right" : "getDefaultExterns",
    "info" : "SimpleName[17446-17463]:SimpleName[17422-17439]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[17473-17484]:SimpleType[17449-17460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17485-17952]:Block[17461-17928]"
  }, {
    "left" : "InputStream input = CommandLineRunner.class.getResourceAsStream(\n        \"/externs.zip\");",
    "right" : "InputStream input = CommandLineRunner.class.getResourceAsStream(\n        \"/externs.zip\");",
    "info" : "VariableDeclarationStatement[17491-17580]:VariableDeclarationStatement[17467-17556]"
  }, {
    "left" : "ZipInputStream zip = new ZipInputStream(input);",
    "right" : "ZipInputStream zip = new ZipInputStream(input);",
    "info" : "VariableDeclarationStatement[17585-17632]:VariableDeclarationStatement[17561-17608]"
  }, {
    "left" : "List<JSSourceFile> externs = Lists.newLinkedList();",
    "right" : "List<JSSourceFile> externs = Lists.newLinkedList();",
    "info" : "VariableDeclarationStatement[17637-17688]:VariableDeclarationStatement[17613-17664]"
  }, {
    "left" : "for (ZipEntry entry = null; (entry = zip.getNextEntry()) != null)",
    "right" : "for (ZipEntry entry = null; (entry = zip.getNextEntry()) != null)",
    "info" : "ForStatement[17693-17928]:ForStatement[17669-17904]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17761-17928]:Block[17737-17904]"
  }, {
    "left" : "LimitInputStream entryStream = new LimitInputStream(zip, entry.getSize());",
    "right" : "LimitInputStream entryStream = new LimitInputStream(zip, entry.getSize());",
    "info" : "VariableDeclarationStatement[17769-17843]:VariableDeclarationStatement[17745-17819]"
  }, {
    "left" : "externs.add(JSSourceFile.fromInputStream(entry.getName(), entryStream));",
    "right" : "externs.add(JSSourceFile.fromInputStream(entry.getName(), entryStream));",
    "info" : "ExpressionStatement[17850-17922]:ExpressionStatement[17826-17898]"
  }, {
    "left" : "return externs;",
    "right" : "return externs;",
    "info" : "ReturnStatement[17933-17948]:ReturnStatement[17909-17924]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18032-18038]:Modifier[18008-18014]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18039-18045]:Modifier[18015-18021]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18046-18050]:PrimitiveType[18022-18026]"
  }, {
    "left" : "main",
    "right" : "main",
    "info" : "SimpleName[18051-18055]:SimpleName[18027-18031]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[18056-18069]:SingleVariableDeclaration[18032-18045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18071-18193]:Block[18047-18169]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[18077-18189]:TryStatement[18053-18165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18081-18131]:Block[18057-18107]"
  }, {
    "left" : "(new CommandLineRunner(args)).run();",
    "right" : "(new CommandLineRunner(args)).run();",
    "info" : "ExpressionStatement[18089-18125]:ExpressionStatement[18065-18101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18159-18189]:Block[18135-18165]"
  }, {
    "left" : "System.exit(-1);",
    "right" : "System.exit(-1);",
    "info" : "ExpressionStatement[18167-18183]:ExpressionStatement[18143-18159]"
  } ]
}