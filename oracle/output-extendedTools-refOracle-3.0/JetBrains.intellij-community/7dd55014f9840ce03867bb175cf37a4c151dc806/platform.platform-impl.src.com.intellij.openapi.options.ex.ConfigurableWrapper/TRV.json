{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final Logger LOG = Logger.getInstance(ConfigurableWrapper.class);",
      "right" : "private static final Logger LOG = Logger.getInstance(ConfigurableWrapper.class);",
      "info" : "FieldDeclaration[1275-1355]:FieldDeclaration[1275-1355]"
    }, {
      "left" : "public static <T extends UnnamedConfigurable> List<T> createConfigurables(ExtensionPointName<? extends ConfigurableEP<T>> name)",
      "right" : "public static <T extends UnnamedConfigurable> List<T> createConfigurables(ExtensionPointName<? extends ConfigurableEP<T>> name)",
      "info" : "MethodDeclaration[2045-2395]:MethodDeclaration[2346-2696]"
    }, {
      "left" : "public T fun(ConfigurableEP<T> ep)",
      "right" : "public T fun(ConfigurableEP<T> ep)",
      "info" : "MethodDeclaration[2286-2383]:MethodDeclaration[2587-2684]"
    }, {
      "left" : "public static boolean isNoScroll(Configurable configurable)",
      "right" : "public static boolean isNoScroll(Configurable configurable)",
      "info" : "MethodDeclaration[2399-2519]:MethodDeclaration[2700-2820]"
    }, {
      "left" : "public static boolean hasOwnContent(UnnamedConfigurable configurable)",
      "right" : "public static boolean hasOwnContent(UnnamedConfigurable configurable)",
      "info" : "MethodDeclaration[2523-2751]:MethodDeclaration[2824-3052]"
    }, {
      "left" : "public static boolean isNonDefaultProject(Configurable configurable)",
      "right" : "public static boolean isNonDefaultProject(Configurable configurable)",
      "info" : "MethodDeclaration[2755-3017]:MethodDeclaration[3056-3318]"
    }, {
      "left" : "public static <T> T cast(@NotNull Class<T> type, UnnamedConfigurable configurable)",
      "right" : "public static <T> T cast(@NotNull Class<T> type, UnnamedConfigurable configurable)",
      "info" : "MethodDeclaration[3021-3974]:MethodDeclaration[3322-4275]"
    }, {
      "left" : "private final ConfigurableEP myEp;",
      "right" : "private final ConfigurableEP myEp;",
      "info" : "FieldDeclaration[3978-4012]:FieldDeclaration[4279-4313]"
    }, {
      "left" : "private ConfigurableWrapper(@NotNull ConfigurableEP ep)",
      "right" : "private ConfigurableWrapper(@NotNull ConfigurableEP ep)",
      "info" : "MethodDeclaration[4016-4092]:MethodDeclaration[4317-4393]"
    }, {
      "left" : "private UnnamedConfigurable myConfigurable;",
      "right" : "private UnnamedConfigurable myConfigurable;",
      "info" : "FieldDeclaration[4096-4139]:FieldDeclaration[4397-4440]"
    }, {
      "left" : "public int getWeight()",
      "right" : "public int getWeight()",
      "info" : "MethodDeclaration[4546-4615]:MethodDeclaration[4853-4922]"
    }, {
      "left" : "public String getDisplayName()",
      "right" : "public String getDisplayName()",
      "info" : "MethodDeclaration[4619-5144]:MethodDeclaration[4926-5451]"
    }, {
      "left" : "public String getInstanceClass()",
      "right" : "public String getInstanceClass()",
      "info" : "MethodDeclaration[5148-5217]:MethodDeclaration[5455-5524]"
    }, {
      "left" : "public String getProviderClass()",
      "right" : "public String getProviderClass()",
      "info" : "MethodDeclaration[5221-5290]:MethodDeclaration[5528-5597]"
    }, {
      "left" : "public String getHelpTopic()",
      "right" : "public String getHelpTopic()",
      "info" : "MethodDeclaration[5294-5512]:MethodDeclaration[5601-5819]"
    }, {
      "left" : "public JComponent createComponent()",
      "right" : "public JComponent createComponent()",
      "info" : "MethodDeclaration[5516-5629]:MethodDeclaration[5823-5936]"
    }, {
      "left" : "public boolean isModified()",
      "right" : "public boolean isModified()",
      "info" : "MethodDeclaration[5633-5721]:MethodDeclaration[5940-6028]"
    }, {
      "left" : "public void apply() throws ConfigurationException",
      "right" : "public void apply() throws ConfigurationException",
      "info" : "MethodDeclaration[5725-5823]:MethodDeclaration[6032-6130]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[5827-5895]:MethodDeclaration[6134-6202]"
    }, {
      "left" : "public void disposeUIResources()",
      "right" : "public void disposeUIResources()",
      "info" : "MethodDeclaration[5899-5993]:MethodDeclaration[6206-6300]"
    }, {
      "left" : "public String getId()",
      "right" : "public String getId()",
      "info" : "MethodDeclaration[5997-6535]:MethodDeclaration[6304-6842]"
    }, {
      "left" : "public ConfigurableEP getExtensionPoint()",
      "right" : "public ConfigurableEP getExtensionPoint()",
      "info" : "MethodDeclaration[6539-6614]:MethodDeclaration[6846-6921]"
    }, {
      "left" : "public String getParentId()",
      "right" : "public String getParentId()",
      "info" : "MethodDeclaration[6618-6677]:MethodDeclaration[6925-6984]"
    }, {
      "left" : "public ConfigurableWrapper addChild(Configurable configurable)",
      "right" : "public ConfigurableWrapper addChild(Configurable configurable)",
      "info" : "MethodDeclaration[6681-6802]:MethodDeclaration[6988-7109]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[6806-6877]:MethodDeclaration[7113-7184]"
    }, {
      "left" : "public Runnable enableSearch(String option)",
      "right" : "public Runnable enableSearch(String option)",
      "info" : "MethodDeclaration[6881-7146]:MethodDeclaration[7188-7453]"
    }, {
      "left" : "CompositeWrapper",
      "right" : "CompositeWrapper",
      "info" : "TypeDeclaration[7150-9815]:TypeDeclaration[7457-10122]"
    }, {
      "left" : "private Configurable[] myKids;",
      "right" : "private Configurable[] myKids;",
      "info" : "FieldDeclaration[7257-7287]:FieldDeclaration[7564-7594]"
    }, {
      "left" : "private Comparator<Configurable> myComparator;",
      "right" : "private Comparator<Configurable> myComparator;",
      "info" : "FieldDeclaration[7292-7338]:FieldDeclaration[7599-7645]"
    }, {
      "left" : "private boolean isInitialized;",
      "right" : "private boolean isInitialized;",
      "info" : "FieldDeclaration[7343-7373]:FieldDeclaration[7650-7680]"
    }, {
      "left" : "private CompositeWrapper(@NotNull ConfigurableEP ep, Configurable... kids)",
      "right" : "private CompositeWrapper(@NotNull ConfigurableEP ep, Configurable... kids)",
      "info" : "MethodDeclaration[7379-7499]:MethodDeclaration[7686-7806]"
    }, {
      "left" : "public Configurable[] getConfigurables()",
      "right" : "public Configurable[] getConfigurables()",
      "info" : "MethodDeclaration[7505-9360]:MethodDeclaration[7812-9667]"
    }, {
      "left" : "public ConfigurableWrapper addChild(Configurable configurable)",
      "right" : "public ConfigurableWrapper addChild(Configurable configurable)",
      "info" : "MethodDeclaration[9366-9811]:MethodDeclaration[9673-10118]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2045-2051]:Modifier[2346-2352]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2052-2058]:Modifier[2353-2359]"
    }, {
      "left" : "T extends UnnamedConfigurable",
      "right" : "T extends UnnamedConfigurable",
      "info" : "TypeParameter[2060-2089]:TypeParameter[2361-2390]"
    }, {
      "left" : "List<T>",
      "right" : "List<T>",
      "info" : "ParameterizedType[2091-2098]:ParameterizedType[2392-2399]"
    }, {
      "left" : "createConfigurables",
      "right" : "createConfigurables",
      "info" : "SimpleName[2099-2118]:SimpleName[2400-2419]"
    }, {
      "left" : "ExtensionPointName<? extends ConfigurableEP<T>> name",
      "right" : "ExtensionPointName<? extends ConfigurableEP<T>> name",
      "info" : "SingleVariableDeclaration[2119-2171]:SingleVariableDeclaration[2420-2472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2173-2395]:Block[2474-2696]"
    }, {
      "left" : "return ContainerUtil.mapNotNull(name.getExtensions(), new NullableFunction<ConfigurableEP<T>, T>() {\n      @Override\n      public T fun(ConfigurableEP<T> ep) {\n        return wrapConfigurable(ep);\n      }\n    });",
      "right" : "return ContainerUtil.mapNotNull(name.getExtensions(), new NullableFunction<ConfigurableEP<T>, T>() {\n      @Override\n      public T fun(ConfigurableEP<T> ep) {\n        return wrapConfigurable(ep);\n      }\n    });",
      "info" : "ReturnStatement[2179-2391]:ReturnStatement[2480-2692]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2286-2295]:MarkerAnnotation[2587-2596]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2302-2308]:Modifier[2603-2609]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[2309-2310]:SimpleType[2610-2611]"
    }, {
      "left" : "fun",
      "right" : "fun",
      "info" : "SimpleName[2311-2314]:SimpleName[2612-2615]"
    }, {
      "left" : "ConfigurableEP<T> ep",
      "right" : "ConfigurableEP<T> ep",
      "info" : "SingleVariableDeclaration[2315-2335]:SingleVariableDeclaration[2616-2636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2337-2383]:Block[2638-2684]"
    }, {
      "left" : "return wrapConfigurable(ep);",
      "right" : "return wrapConfigurable(ep);",
      "info" : "ReturnStatement[2347-2375]:ReturnStatement[2648-2676]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2399-2405]:Modifier[2700-2706]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2406-2412]:Modifier[2707-2713]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2413-2420]:PrimitiveType[2714-2721]"
    }, {
      "left" : "isNoScroll",
      "right" : "isNoScroll",
      "info" : "SimpleName[2421-2431]:SimpleName[2722-2732]"
    }, {
      "left" : "Configurable configurable",
      "right" : "Configurable configurable",
      "info" : "SingleVariableDeclaration[2432-2457]:SingleVariableDeclaration[2733-2758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2459-2519]:Block[2760-2820]"
    }, {
      "left" : "return cast(NoScroll.class, configurable) != null;",
      "right" : "return cast(NoScroll.class, configurable) != null;",
      "info" : "ReturnStatement[2465-2515]:ReturnStatement[2766-2816]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2523-2529]:Modifier[2824-2830]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2530-2536]:Modifier[2831-2837]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2537-2544]:PrimitiveType[2838-2845]"
    }, {
      "left" : "hasOwnContent",
      "right" : "hasOwnContent",
      "info" : "SimpleName[2545-2558]:SimpleName[2846-2859]"
    }, {
      "left" : "UnnamedConfigurable configurable",
      "right" : "UnnamedConfigurable configurable",
      "info" : "SingleVariableDeclaration[2559-2591]:SingleVariableDeclaration[2860-2892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2593-2751]:Block[2894-3052]"
    }, {
      "left" : "SearchableConfigurable.Parent parent = cast(SearchableConfigurable.Parent.class, configurable);",
      "right" : "SearchableConfigurable.Parent parent = cast(SearchableConfigurable.Parent.class, configurable);",
      "info" : "VariableDeclarationStatement[2599-2694]:VariableDeclarationStatement[2900-2995]"
    }, {
      "left" : "return parent != null && parent.hasOwnContent();",
      "right" : "return parent != null && parent.hasOwnContent();",
      "info" : "ReturnStatement[2699-2747]:ReturnStatement[3000-3048]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2755-2761]:Modifier[3056-3062]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2762-2768]:Modifier[3063-3069]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2769-2776]:PrimitiveType[3070-3077]"
    }, {
      "left" : "isNonDefaultProject",
      "right" : "isNonDefaultProject",
      "info" : "SimpleName[2777-2796]:SimpleName[3078-3097]"
    }, {
      "left" : "Configurable configurable",
      "right" : "Configurable configurable",
      "info" : "SingleVariableDeclaration[2797-2822]:SingleVariableDeclaration[3098-3123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2824-3017]:Block[3125-3318]"
    }, {
      "left" : "return configurable instanceof NonDefaultProjectConfigurable ||\n           (configurable instanceof ConfigurableWrapper && ((ConfigurableWrapper)configurable).myEp.nonDefaultProject);",
      "right" : "return configurable instanceof NonDefaultProjectConfigurable ||\n           (configurable instanceof ConfigurableWrapper && ((ConfigurableWrapper)configurable).myEp.nonDefaultProject);",
      "info" : "ReturnStatement[2830-3013]:ReturnStatement[3131-3314]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[3021-3030]:MarkerAnnotation[3322-3331]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3033-3039]:Modifier[3334-3340]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3040-3046]:Modifier[3341-3347]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[3048-3049]:TypeParameter[3349-3350]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[3051-3052]:SimpleType[3352-3353]"
    }, {
      "left" : "cast",
      "right" : "cast",
      "info" : "SimpleName[3053-3057]:SimpleName[3354-3358]"
    }, {
      "left" : "@NotNull Class<T> type",
      "right" : "@NotNull Class<T> type",
      "info" : "SingleVariableDeclaration[3058-3080]:SingleVariableDeclaration[3359-3381]"
    }, {
      "left" : "UnnamedConfigurable configurable",
      "right" : "UnnamedConfigurable configurable",
      "info" : "SingleVariableDeclaration[3082-3114]:SingleVariableDeclaration[3383-3415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3116-3974]:Block[3417-4275]"
    }, {
      "left" : "if (configurable instanceof ConfigurableWrapper)",
      "right" : "if (configurable instanceof ConfigurableWrapper)",
      "info" : "IfStatement[3122-3873]:IfStatement[3423-4174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3171-3873]:Block[3472-4174]"
    }, {
      "left" : "ConfigurableWrapper wrapper = (ConfigurableWrapper)configurable;",
      "right" : "ConfigurableWrapper wrapper = (ConfigurableWrapper)configurable;",
      "info" : "VariableDeclarationStatement[3179-3243]:VariableDeclarationStatement[3480-3544]"
    }, {
      "left" : "if (wrapper.myConfigurable == null)",
      "right" : "if (wrapper.myConfigurable == null)",
      "info" : "IfStatement[3250-3819]:IfStatement[3551-4120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3286-3819]:Block[3587-4120]"
    }, {
      "left" : "Class<?> configurableType = wrapper.getExtensionPoint().getConfigurableType();",
      "right" : "Class<?> configurableType = wrapper.getExtensionPoint().getConfigurableType();",
      "info" : "VariableDeclarationStatement[3296-3374]:VariableDeclarationStatement[3597-3675]"
    }, {
      "left" : "if (configurableType != null)",
      "right" : "if (configurableType != null)",
      "info" : "IfStatement[3383-3811]:IfStatement[3684-4112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3413-3591]:Block[3714-3892]"
    }, {
      "left" : "if (!type.isAssignableFrom(configurableType))",
      "right" : "if (!type.isAssignableFrom(configurableType))",
      "info" : "IfStatement[3425-3581]:IfStatement[3726-3882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3471-3581]:Block[3772-3882]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3485-3497]:ReturnStatement[3786-3798]"
    }, {
      "left" : "if (type == Configurable.Assistant.class || type == OptionalConfigurable.class)",
      "right" : "if (type == Configurable.Assistant.class || type == OptionalConfigurable.class)",
      "info" : "IfStatement[3605-3811]:IfStatement[3906-4112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3685-3811]:Block[3986-4112]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3697-3709]:ReturnStatement[3998-4010]"
    }, {
      "left" : "configurable = wrapper.getConfigurable();",
      "right" : "configurable = wrapper.getConfigurable();",
      "info" : "ExpressionStatement[3826-3867]:ExpressionStatement[4127-4168]"
    }, {
      "left" : "return type.isInstance(configurable)\n           ? type.cast(configurable)\n           : null;",
      "right" : "return type.isInstance(configurable)\n           ? type.cast(configurable)\n           : null;",
      "info" : "ReturnStatement[3878-3970]:ReturnStatement[4179-4271]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4016-4023]:Modifier[4317-4324]"
    }, {
      "left" : "ConfigurableWrapper",
      "right" : "ConfigurableWrapper",
      "info" : "SimpleName[4024-4043]:SimpleName[4325-4344]"
    }, {
      "left" : "@NotNull ConfigurableEP ep",
      "right" : "@NotNull ConfigurableEP ep",
      "info" : "SingleVariableDeclaration[4044-4070]:SingleVariableDeclaration[4345-4371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4072-4092]:Block[4373-4393]"
    }, {
      "left" : "myEp = ep;",
      "right" : "myEp = ep;",
      "info" : "ExpressionStatement[4078-4088]:ExpressionStatement[4379-4389]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4546-4555]:MarkerAnnotation[4853-4862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4558-4564]:Modifier[4865-4871]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4565-4568]:PrimitiveType[4872-4875]"
    }, {
      "left" : "getWeight",
      "right" : "getWeight",
      "info" : "SimpleName[4569-4578]:SimpleName[4876-4885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4581-4615]:Block[4888-4922]"
    }, {
      "left" : "return myEp.groupWeight;",
      "right" : "return myEp.groupWeight;",
      "info" : "ReturnStatement[4587-4611]:ReturnStatement[4894-4918]"
    }, {
      "left" : "@Nls",
      "right" : "@Nls",
      "info" : "MarkerAnnotation[4619-4623]:MarkerAnnotation[4926-4930]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4626-4635]:MarkerAnnotation[4933-4942]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4638-4644]:Modifier[4945-4951]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4645-4651]:SimpleType[4952-4958]"
    }, {
      "left" : "getDisplayName",
      "right" : "getDisplayName",
      "info" : "SimpleName[4652-4666]:SimpleName[4959-4973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4669-5144]:Block[4976-5451]"
    }, {
      "left" : "if (myEp.displayName == null && myEp.key == null)",
      "right" : "if (myEp.displayName == null && myEp.key == null)",
      "info" : "IfStatement[4675-5106]:IfStatement[4982-5413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4725-5106]:Block[5032-5413]"
    }, {
      "left" : "boolean loaded = myConfigurable != null;",
      "right" : "boolean loaded = myConfigurable != null;",
      "info" : "VariableDeclarationStatement[4733-4773]:VariableDeclarationStatement[5040-5080]"
    }, {
      "left" : "Configurable configurable = cast(Configurable.class, this);",
      "right" : "Configurable configurable = cast(Configurable.class, this);",
      "info" : "VariableDeclarationStatement[4780-4839]:VariableDeclarationStatement[5087-5146]"
    }, {
      "left" : "if (configurable != null)",
      "right" : "if (configurable != null)",
      "info" : "IfStatement[4846-5100]:IfStatement[5153-5407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4872-5100]:Block[5179-5407]"
    }, {
      "left" : "String name = configurable.getDisplayName();",
      "right" : "String name = configurable.getDisplayName();",
      "info" : "VariableDeclarationStatement[4882-4926]:VariableDeclarationStatement[5189-5233]"
    }, {
      "left" : "if (!loaded && LOG.isDebugEnabled())",
      "right" : "if (!loaded && LOG.isDebugEnabled())",
      "info" : "IfStatement[4935-5071]:IfStatement[5242-5378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4972-5071]:Block[5279-5378]"
    }, {
      "left" : "LOG.debug(\"XML does not provide displayName for \" + configurable.getClass());",
      "right" : "LOG.debug(\"XML does not provide displayName for \" + configurable.getClass());",
      "info" : "ExpressionStatement[4984-5061]:ExpressionStatement[5291-5368]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[5080-5092]:ReturnStatement[5387-5399]"
    }, {
      "left" : "return myEp.getDisplayName();",
      "right" : "return myEp.getDisplayName();",
      "info" : "ReturnStatement[5111-5140]:ReturnStatement[5418-5447]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5148-5154]:Modifier[5455-5461]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5155-5161]:SimpleType[5462-5468]"
    }, {
      "left" : "getInstanceClass",
      "right" : "getInstanceClass",
      "info" : "SimpleName[5162-5178]:SimpleName[5469-5485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5181-5217]:Block[5488-5524]"
    }, {
      "left" : "return myEp.instanceClass;",
      "right" : "return myEp.instanceClass;",
      "info" : "ReturnStatement[5187-5213]:ReturnStatement[5494-5520]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5221-5227]:Modifier[5528-5534]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5228-5234]:SimpleType[5535-5541]"
    }, {
      "left" : "getProviderClass",
      "right" : "getProviderClass",
      "info" : "SimpleName[5235-5251]:SimpleName[5542-5558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5254-5290]:Block[5561-5597]"
    }, {
      "left" : "return myEp.providerClass;",
      "right" : "return myEp.providerClass;",
      "info" : "ReturnStatement[5260-5286]:ReturnStatement[5567-5593]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[5294-5303]:MarkerAnnotation[5601-5610]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5306-5315]:MarkerAnnotation[5613-5622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5318-5324]:Modifier[5625-5631]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5325-5331]:SimpleType[5632-5638]"
    }, {
      "left" : "getHelpTopic",
      "right" : "getHelpTopic",
      "info" : "SimpleName[5332-5344]:SimpleName[5639-5651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5347-5512]:Block[5654-5819]"
    }, {
      "left" : "UnnamedConfigurable configurable = getConfigurable();",
      "right" : "UnnamedConfigurable configurable = getConfigurable();",
      "info" : "VariableDeclarationStatement[5353-5406]:VariableDeclarationStatement[5660-5713]"
    }, {
      "left" : "return configurable instanceof Configurable ? ((Configurable)configurable).getHelpTopic() : null;",
      "right" : "return configurable instanceof Configurable ? ((Configurable)configurable).getHelpTopic() : null;",
      "info" : "ReturnStatement[5411-5508]:ReturnStatement[5718-5815]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[5516-5525]:MarkerAnnotation[5823-5832]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5528-5537]:MarkerAnnotation[5835-5844]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5540-5546]:Modifier[5847-5853]"
    }, {
      "left" : "JComponent",
      "right" : "JComponent",
      "info" : "SimpleType[5547-5557]:SimpleType[5854-5864]"
    }, {
      "left" : "createComponent",
      "right" : "createComponent",
      "info" : "SimpleName[5558-5573]:SimpleName[5865-5880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5576-5629]:Block[5883-5936]"
    }, {
      "left" : "return getConfigurable().createComponent();",
      "right" : "return getConfigurable().createComponent();",
      "info" : "ReturnStatement[5582-5625]:ReturnStatement[5889-5932]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5633-5642]:MarkerAnnotation[5940-5949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5645-5651]:Modifier[5952-5958]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5652-5659]:PrimitiveType[5959-5966]"
    }, {
      "left" : "isModified",
      "right" : "isModified",
      "info" : "SimpleName[5660-5670]:SimpleName[5967-5977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5673-5721]:Block[5980-6028]"
    }, {
      "left" : "return getConfigurable().isModified();",
      "right" : "return getConfigurable().isModified();",
      "info" : "ReturnStatement[5679-5717]:ReturnStatement[5986-6024]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5725-5734]:MarkerAnnotation[6032-6041]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5737-5743]:Modifier[6044-6050]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5744-5748]:PrimitiveType[6051-6055]"
    }, {
      "left" : "apply",
      "right" : "apply",
      "info" : "SimpleName[5749-5754]:SimpleName[6056-6061]"
    }, {
      "left" : "ConfigurationException",
      "right" : "ConfigurationException",
      "info" : "SimpleType[5764-5786]:SimpleType[6071-6093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5787-5823]:Block[6094-6130]"
    }, {
      "left" : "getConfigurable().apply();",
      "right" : "getConfigurable().apply();",
      "info" : "ExpressionStatement[5793-5819]:ExpressionStatement[6100-6126]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5827-5836]:MarkerAnnotation[6134-6143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5839-5845]:Modifier[6146-6152]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5846-5850]:PrimitiveType[6153-6157]"
    }, {
      "left" : "reset",
      "right" : "reset",
      "info" : "SimpleName[5851-5856]:SimpleName[6158-6163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5859-5895]:Block[6166-6202]"
    }, {
      "left" : "getConfigurable().reset();",
      "right" : "getConfigurable().reset();",
      "info" : "ExpressionStatement[5865-5891]:ExpressionStatement[6172-6198]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5899-5908]:MarkerAnnotation[6206-6215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5911-5917]:Modifier[6218-6224]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5918-5922]:PrimitiveType[6225-6229]"
    }, {
      "left" : "disposeUIResources",
      "right" : "disposeUIResources",
      "info" : "SimpleName[5923-5941]:SimpleName[6230-6248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5944-5993]:Block[6251-6300]"
    }, {
      "left" : "getConfigurable().disposeUIResources();",
      "right" : "getConfigurable().disposeUIResources();",
      "info" : "ExpressionStatement[5950-5989]:ExpressionStatement[6257-6296]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[5997-6005]:MarkerAnnotation[6304-6312]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6008-6017]:MarkerAnnotation[6315-6324]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6020-6026]:Modifier[6327-6333]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6027-6033]:SimpleType[6334-6340]"
    }, {
      "left" : "getId",
      "right" : "getId",
      "info" : "SimpleName[6034-6039]:SimpleName[6341-6346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6042-6535]:Block[6349-6842]"
    }, {
      "left" : "if (myEp.id != null)",
      "right" : "if (myEp.id != null)",
      "info" : "IfStatement[6048-6098]:IfStatement[6355-6405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6069-6098]:Block[6376-6405]"
    }, {
      "left" : "return myEp.id;",
      "right" : "return myEp.id;",
      "info" : "ReturnStatement[6077-6092]:ReturnStatement[6384-6399]"
    }, {
      "left" : "boolean loaded = myConfigurable != null;",
      "right" : "boolean loaded = myConfigurable != null;",
      "info" : "VariableDeclarationStatement[6103-6143]:VariableDeclarationStatement[6410-6450]"
    }, {
      "left" : "SearchableConfigurable configurable = cast(SearchableConfigurable.class, this);",
      "right" : "SearchableConfigurable configurable = cast(SearchableConfigurable.class, this);",
      "info" : "VariableDeclarationStatement[6148-6227]:VariableDeclarationStatement[6455-6534]"
    }, {
      "left" : "if (configurable != null)",
      "right" : "if (configurable != null)",
      "info" : "IfStatement[6232-6428]:IfStatement[6539-6735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6258-6428]:Block[6565-6735]"
    }, {
      "left" : "String id = configurable.getId();",
      "right" : "String id = configurable.getId();",
      "info" : "VariableDeclarationStatement[6266-6299]:VariableDeclarationStatement[6573-6606]"
    }, {
      "left" : "if (!loaded)",
      "right" : "if (!loaded)",
      "info" : "IfStatement[6306-6405]:IfStatement[6613-6712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6319-6405]:Block[6626-6712]"
    }, {
      "left" : "LOG.debug(\"XML does not provide id for \" + configurable.getClass());",
      "right" : "LOG.debug(\"XML does not provide id for \" + configurable.getClass());",
      "info" : "ExpressionStatement[6329-6397]:ExpressionStatement[6636-6704]"
    }, {
      "left" : "return id;",
      "right" : "return id;",
      "info" : "ReturnStatement[6412-6422]:ReturnStatement[6719-6729]"
    }, {
      "left" : "return myEp.instanceClass != null\n           ? myEp.instanceClass\n           : myEp.providerClass;",
      "right" : "return myEp.instanceClass != null\n           ? myEp.instanceClass\n           : myEp.providerClass;",
      "info" : "ReturnStatement[6433-6531]:ReturnStatement[6740-6838]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[6539-6547]:MarkerAnnotation[6846-6854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6550-6556]:Modifier[6857-6863]"
    }, {
      "left" : "ConfigurableEP",
      "right" : "ConfigurableEP",
      "info" : "SimpleType[6557-6571]:SimpleType[6864-6878]"
    }, {
      "left" : "getExtensionPoint",
      "right" : "getExtensionPoint",
      "info" : "SimpleName[6572-6589]:SimpleName[6879-6896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6592-6614]:Block[6899-6921]"
    }, {
      "left" : "return myEp;",
      "right" : "return myEp;",
      "info" : "ReturnStatement[6598-6610]:ReturnStatement[6905-6917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6618-6624]:Modifier[6925-6931]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6625-6631]:SimpleType[6932-6938]"
    }, {
      "left" : "getParentId",
      "right" : "getParentId",
      "info" : "SimpleName[6632-6643]:SimpleName[6939-6950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6646-6677]:Block[6953-6984]"
    }, {
      "left" : "return myEp.parentId;",
      "right" : "return myEp.parentId;",
      "info" : "ReturnStatement[6652-6673]:ReturnStatement[6959-6980]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6681-6687]:Modifier[6988-6994]"
    }, {
      "left" : "ConfigurableWrapper",
      "right" : "ConfigurableWrapper",
      "info" : "SimpleType[6688-6707]:SimpleType[6995-7014]"
    }, {
      "left" : "addChild",
      "right" : "addChild",
      "info" : "SimpleName[6708-6716]:SimpleName[7015-7023]"
    }, {
      "left" : "Configurable configurable",
      "right" : "Configurable configurable",
      "info" : "SingleVariableDeclaration[6717-6742]:SingleVariableDeclaration[7024-7049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6744-6802]:Block[7051-7109]"
    }, {
      "left" : "return new CompositeWrapper(myEp, configurable);",
      "right" : "return new CompositeWrapper(myEp, configurable);",
      "info" : "ReturnStatement[6750-6798]:ReturnStatement[7057-7105]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6806-6815]:MarkerAnnotation[7113-7122]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6818-6824]:Modifier[7125-7131]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6825-6831]:SimpleType[7132-7138]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[6832-6840]:SimpleName[7139-7147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6843-6877]:Block[7150-7184]"
    }, {
      "left" : "return getDisplayName();",
      "right" : "return getDisplayName();",
      "info" : "ReturnStatement[6849-6873]:ReturnStatement[7156-7180]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[6881-6890]:MarkerAnnotation[7188-7197]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6893-6902]:MarkerAnnotation[7200-7209]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6905-6911]:Modifier[7212-7218]"
    }, {
      "left" : "Runnable",
      "right" : "Runnable",
      "info" : "SimpleType[6912-6920]:SimpleType[7219-7227]"
    }, {
      "left" : "enableSearch",
      "right" : "enableSearch",
      "info" : "SimpleName[6921-6933]:SimpleName[7228-7240]"
    }, {
      "left" : "String option",
      "right" : "String option",
      "info" : "SingleVariableDeclaration[6934-6947]:SingleVariableDeclaration[7241-7254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6949-7146]:Block[7256-7453]"
    }, {
      "left" : "final UnnamedConfigurable configurable = getConfigurable();",
      "right" : "final UnnamedConfigurable configurable = getConfigurable();",
      "info" : "VariableDeclarationStatement[6955-7014]:VariableDeclarationStatement[7262-7321]"
    }, {
      "left" : "return configurable instanceof SearchableConfigurable ? ((SearchableConfigurable)configurable).enableSearch(option) : null;",
      "right" : "return configurable instanceof SearchableConfigurable ? ((SearchableConfigurable)configurable).enableSearch(option) : null;",
      "info" : "ReturnStatement[7019-7142]:ReturnStatement[7326-7449]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7150-7157]:Modifier[7457-7464]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7158-7164]:Modifier[7465-7471]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[7165-7170]:TYPE_DECLARATION_KIND[7472-7477]"
    }, {
      "left" : "CompositeWrapper",
      "right" : "CompositeWrapper",
      "info" : "SimpleName[7171-7187]:SimpleName[7478-7494]"
    }, {
      "left" : "ConfigurableWrapper",
      "right" : "ConfigurableWrapper",
      "info" : "SimpleType[7196-7215]:SimpleType[7503-7522]"
    }, {
      "left" : "Configurable.Composite",
      "right" : "Configurable.Composite",
      "info" : "SimpleType[7227-7249]:SimpleType[7534-7556]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7379-7386]:Modifier[7686-7693]"
    }, {
      "left" : "CompositeWrapper",
      "right" : "CompositeWrapper",
      "info" : "SimpleName[7387-7403]:SimpleName[7694-7710]"
    }, {
      "left" : "@NotNull ConfigurableEP ep",
      "right" : "@NotNull ConfigurableEP ep",
      "info" : "SingleVariableDeclaration[7404-7430]:SingleVariableDeclaration[7711-7737]"
    }, {
      "left" : "Configurable... kids",
      "right" : "Configurable... kids",
      "info" : "SingleVariableDeclaration[7432-7452]:SingleVariableDeclaration[7739-7759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7454-7499]:Block[7761-7806]"
    }, {
      "left" : "super(ep);",
      "right" : "super(ep);",
      "info" : "SuperConstructorInvocation[7462-7472]:SuperConstructorInvocation[7769-7779]"
    }, {
      "left" : "myKids = kids;",
      "right" : "myKids = kids;",
      "info" : "ExpressionStatement[7479-7493]:ExpressionStatement[7786-7800]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7505-7514]:MarkerAnnotation[7812-7821]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7519-7525]:Modifier[7826-7832]"
    }, {
      "left" : "Configurable[]",
      "right" : "Configurable[]",
      "info" : "ArrayType[7526-7540]:ArrayType[7833-7847]"
    }, {
      "left" : "getConfigurables",
      "right" : "getConfigurables",
      "info" : "SimpleName[7541-7557]:SimpleName[7848-7864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7560-9360]:Block[7867-9667]"
    }, {
      "left" : "if (!isInitialized)",
      "right" : "if (!isInitialized)",
      "info" : "IfStatement[7568-9333]:IfStatement[7875-9640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7588-9333]:Block[7895-9640]"
    }, {
      "left" : "ArrayList<Configurable> list = new ArrayList<Configurable>();",
      "right" : "ArrayList<Configurable> list = new ArrayList<Configurable>();",
      "info" : "VariableDeclarationStatement[7598-7659]:VariableDeclarationStatement[7905-7966]"
    }, {
      "left" : "if (super.myEp.dynamic)",
      "right" : "if (super.myEp.dynamic)",
      "info" : "IfStatement[7668-7879]:IfStatement[7975-8186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7692-7879]:Block[7999-8186]"
    }, {
      "left" : "Composite composite = cast(Composite.class, this);",
      "right" : "Composite composite = cast(Composite.class, this);",
      "info" : "VariableDeclarationStatement[7704-7754]:VariableDeclarationStatement[8011-8061]"
    }, {
      "left" : "if (composite != null)",
      "right" : "if (composite != null)",
      "info" : "IfStatement[7765-7869]:IfStatement[8072-8176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7788-7869]:Block[8095-8176]"
    }, {
      "left" : "Collections.addAll(list, composite.getConfigurables());",
      "right" : "Collections.addAll(list, composite.getConfigurables());",
      "info" : "ExpressionStatement[7802-7857]:ExpressionStatement[8109-8164]"
    }, {
      "left" : "if (super.myEp.children != null)",
      "right" : "if (super.myEp.children != null)",
      "info" : "IfStatement[7888-8117]:IfStatement[8195-8424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7921-8117]:Block[8228-8424]"
    }, {
      "left" : "for (ConfigurableEP ep : super.myEp.getChildren())",
      "right" : "for (ConfigurableEP ep : super.myEp.getChildren())",
      "info" : "EnhancedForStatement[7933-8107]:EnhancedForStatement[8240-8414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7984-8107]:Block[8291-8414]"
    }, {
      "left" : "if (ep.isAvailable())",
      "right" : "if (ep.isAvailable())",
      "info" : "IfStatement[7998-8095]:IfStatement[8305-8402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8020-8095]:Block[8327-8402]"
    }, {
      "left" : "list.add((Configurable)wrapConfigurable(ep));",
      "right" : "list.add((Configurable)wrapConfigurable(ep));",
      "info" : "ExpressionStatement[8036-8081]:ExpressionStatement[8343-8388]"
    }, {
      "left" : "if (super.myEp.childrenEPName != null)",
      "right" : "if (super.myEp.childrenEPName != null)",
      "info" : "IfStatement[8126-8835]:IfStatement[8433-9142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8165-8835]:Block[8472-9142]"
    }, {
      "left" : "Object[] extensions = Extensions.getArea(super.myEp.getProject()).getExtensionPoint(super.myEp.childrenEPName).getExtensions();",
      "right" : "Object[] extensions = Extensions.getArea(super.myEp.getProject()).getExtensionPoint(super.myEp.childrenEPName).getExtensions();",
      "info" : "VariableDeclarationStatement[8177-8304]:VariableDeclarationStatement[8484-8611]"
    }, {
      "left" : "if (extensions.length > 0)",
      "right" : "if (extensions.length > 0)",
      "info" : "IfStatement[8315-8825]:IfStatement[8622-9132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8342-8825]:Block[8649-9132]"
    }, {
      "left" : "if (extensions[0] instanceof ConfigurableEP)",
      "right" : "if (extensions[0] instanceof ConfigurableEP)",
      "info" : "IfStatement[8356-8813]:IfStatement[8663-9120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8401-8563]:Block[8708-8870]"
    }, {
      "left" : "for (Object object : extensions)",
      "right" : "for (Object object : extensions)",
      "info" : "EnhancedForStatement[8417-8549]:EnhancedForStatement[8724-8856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8450-8549]:Block[8757-8856]"
    }, {
      "left" : "list.add((Configurable)wrapConfigurable((ConfigurableEP)object));",
      "right" : "list.add((Configurable)wrapConfigurable((ConfigurableEP)object));",
      "info" : "ExpressionStatement[8468-8533]:ExpressionStatement[8775-8840]"
    }, {
      "left" : "if (!super.myEp.dynamic)",
      "right" : "if (!super.myEp.dynamic)",
      "info" : "IfStatement[8581-8813]:IfStatement[8888-9120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8606-8813]:Block[8913-9120]"
    }, {
      "left" : "Composite composite = cast(Composite.class, this);",
      "right" : "Composite composite = cast(Composite.class, this);",
      "info" : "VariableDeclarationStatement[8622-8672]:VariableDeclarationStatement[8929-8979]"
    }, {
      "left" : "if (composite != null)",
      "right" : "if (composite != null)",
      "info" : "IfStatement[8687-8799]:IfStatement[8994-9106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8710-8799]:Block[9017-9106]"
    }, {
      "left" : "Collections.addAll(list, composite.getConfigurables());",
      "right" : "Collections.addAll(list, composite.getConfigurables());",
      "info" : "ExpressionStatement[8728-8783]:ExpressionStatement[9035-9090]"
    }, {
      "left" : "Collections.addAll(list, myKids);",
      "right" : "Collections.addAll(list, myKids);",
      "info" : "ExpressionStatement[8844-8877]:ExpressionStatement[9151-9184]"
    }, {
      "left" : "for (Configurable configurable : list)",
      "right" : "for (Configurable configurable : list)",
      "info" : "EnhancedForStatement[8926-9227]:EnhancedForStatement[9233-9534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8965-9227]:Block[9272-9534]"
    }, {
      "left" : "if (configurable instanceof Weighted)",
      "right" : "if (configurable instanceof Weighted)",
      "info" : "IfStatement[8977-9217]:IfStatement[9284-9524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9015-9217]:Block[9322-9524]"
    }, {
      "left" : "if (((Weighted)configurable).getWeight() != 0)",
      "right" : "if (((Weighted)configurable).getWeight() != 0)",
      "info" : "IfStatement[9029-9205]:IfStatement[9336-9512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9076-9205]:Block[9383-9512]"
    }, {
      "left" : "myComparator = COMPARATOR;",
      "right" : "myComparator = COMPARATOR;",
      "info" : "ExpressionStatement[9092-9118]:ExpressionStatement[9399-9425]"
    }, {
      "left" : "Collections.sort(list, myComparator);",
      "right" : "Collections.sort(list, myComparator);",
      "info" : "ExpressionStatement[9133-9170]:ExpressionStatement[9440-9477]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9185-9191]:BreakStatement[9492-9498]"
    }, {
      "left" : "myKids = ArrayUtil.toObjectArray(list, Configurable.class);",
      "right" : "myKids = ArrayUtil.toObjectArray(list, Configurable.class);",
      "info" : "ExpressionStatement[9236-9295]:ExpressionStatement[9543-9602]"
    }, {
      "left" : "isInitialized = true;",
      "right" : "isInitialized = true;",
      "info" : "ExpressionStatement[9304-9325]:ExpressionStatement[9611-9632]"
    }, {
      "left" : "return myKids;",
      "right" : "return myKids;",
      "info" : "ReturnStatement[9340-9354]:ReturnStatement[9647-9661]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9366-9375]:MarkerAnnotation[9673-9682]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9380-9386]:Modifier[9687-9693]"
    }, {
      "left" : "ConfigurableWrapper",
      "right" : "ConfigurableWrapper",
      "info" : "SimpleType[9387-9406]:SimpleType[9694-9713]"
    }, {
      "left" : "addChild",
      "right" : "addChild",
      "info" : "SimpleName[9407-9415]:SimpleName[9714-9722]"
    }, {
      "left" : "Configurable configurable",
      "right" : "Configurable configurable",
      "info" : "SingleVariableDeclaration[9416-9441]:SingleVariableDeclaration[9723-9748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9443-9811]:Block[9750-10118]"
    }, {
      "left" : "if (myComparator != null)",
      "right" : "if (myComparator != null)",
      "info" : "IfStatement[9451-9786]:IfStatement[9758-10093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9477-9708]:Block[9784-10015]"
    }, {
      "left" : "int index = Arrays.binarySearch(myKids, configurable, myComparator);",
      "right" : "int index = Arrays.binarySearch(myKids, configurable, myComparator);",
      "info" : "VariableDeclarationStatement[9487-9555]:VariableDeclarationStatement[9794-9862]"
    }, {
      "left" : "LOG.assertTrue(index < 0, \"similar configurable is already exist\");",
      "right" : "LOG.assertTrue(index < 0, \"similar configurable is already exist\");",
      "info" : "ExpressionStatement[9564-9631]:ExpressionStatement[9871-9938]"
    }, {
      "left" : "myKids = ArrayUtil.insert(myKids, -1 - index, configurable);",
      "right" : "myKids = ArrayUtil.insert(myKids, -1 - index, configurable);",
      "info" : "ExpressionStatement[9640-9700]:ExpressionStatement[9947-10007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9720-9786]:Block[10027-10093]"
    }, {
      "left" : "myKids = ArrayUtil.append(myKids, configurable);",
      "right" : "myKids = ArrayUtil.append(myKids, configurable);",
      "info" : "ExpressionStatement[9730-9778]:ExpressionStatement[10037-10085]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9793-9805]:ReturnStatement[10100-10112]"
    } ]
  },
  "interFileMappings" : { }
}