{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"#.###\");",
      "right" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"#.###\");",
      "info" : "FieldDeclaration[657-728]:FieldDeclaration[657-728]"
    }, {
      "left" : "private static final boolean showResult = false;",
      "right" : "private static final boolean showResult = false;",
      "info" : "FieldDeclaration[779-827]:FieldDeclaration[779-827]"
    }, {
      "left" : "private static final boolean checkResults = true;",
      "right" : "private static final boolean checkResults = true;",
      "info" : "FieldDeclaration[888-937]:FieldDeclaration[832-881]"
    }, {
      "left" : "private static int insertionCount = 0;",
      "right" : "private static int insertionCount = 0;",
      "info" : "FieldDeclaration[943-981]:FieldDeclaration[887-925]"
    }, {
      "left" : "private static int bubbleCount = 0;",
      "right" : "private static int bubbleCount = 0;",
      "info" : "FieldDeclaration[1058-1093]:FieldDeclaration[983-1018]"
    }, {
      "left" : "private static int shellCount = 0;",
      "right" : "private static int shellCount = 0;",
      "info" : "FieldDeclaration[1167-1201]:FieldDeclaration[1073-1107]"
    }, {
      "left" : "private static int quickCount = 0;",
      "right" : "private static int quickCount = 0;",
      "info" : "FieldDeclaration[1522-1556]:FieldDeclaration[1249-1283]"
    }, {
      "left" : "private static int heapCount = 0;",
      "right" : "private static int heapCount = 0;",
      "info" : "FieldDeclaration[1629-1662]:FieldDeclaration[1337-1370]"
    }, {
      "left" : "private static int countingCount = 0;",
      "right" : "private static int countingCount = 0;",
      "info" : "FieldDeclaration[1734-1771]:FieldDeclaration[1423-1460]"
    }, {
      "left" : "private static int radixCount = 0;",
      "right" : "private static int radixCount = 0;",
      "info" : "FieldDeclaration[1847-1881]:FieldDeclaration[1517-1551]"
    }, {
      "left" : "private static int americanFlagCount = 0;",
      "right" : "private static int americanFlagCount = 0;",
      "info" : "FieldDeclaration[1954-1995]:FieldDeclaration[1605-1646]"
    }, {
      "left" : "private static Integer[] unsorted = null;",
      "right" : "private static Integer[] unsorted = null;",
      "info" : "FieldDeclaration[2618-2659]:FieldDeclaration[1708-1749]"
    }, {
      "left" : "private static Integer[] unsorted = null;",
      "right" : "String input = null;",
      "info" : "FieldDeclaration[2618-2659]:FieldDeclaration[6544-6564]"
    }, {
      "left" : "private static Integer[] sorted = null;",
      "right" : "private static Integer[] sorted = null;",
      "info" : "FieldDeclaration[2664-2703]:FieldDeclaration[1754-1793]"
    }, {
      "left" : "private static Integer[] reverse = null;",
      "right" : "private static Integer[] reverse = null;",
      "info" : "FieldDeclaration[2708-2748]:FieldDeclaration[1798-1838]"
    }, {
      "left" : "private static final void showComparison()",
      "right" : "private static final void showComparison()",
      "info" : "MethodDeclaration[27369-30418]:MethodDeclaration[10338-13424]"
    }, {
      "left" : "private static final void showResult(Integer[] u, Integer[] r)",
      "right" : "private static final void showResult(Integer[] u, Integer[] r)",
      "info" : "MethodDeclaration[30424-30626]:MethodDeclaration[13430-13632]"
    }, {
      "left" : "private static final boolean check(Integer[] array)",
      "right" : "private static final boolean check(Integer[] array)",
      "info" : "MethodDeclaration[30632-30842]:MethodDeclaration[13638-13848]"
    }, {
      "left" : "public static final String print(Integer[] array)",
      "right" : "public String getInput()",
      "info" : "MethodDeclaration[30848-30951]:MethodDeclaration[6573-6635]"
    }, {
      "left" : "public static final String print(Integer[] array)",
      "right" : "public static final String print(Integer[] array)",
      "info" : "MethodDeclaration[30848-30951]:MethodDeclaration[13854-13957]"
    }, {
      "left" : "public static final String print(Integer[] array, int start, int length)",
      "right" : "public abstract String getName();",
      "info" : "MethodDeclaration[30957-31300]:MethodDeclaration[6644-6677]"
    }, {
      "left" : "public static final String print(Integer[] array, int start, int length)",
      "right" : "public static final String print(Integer[] array, int start, int length)",
      "info" : "MethodDeclaration[30957-31300]:MethodDeclaration[13963-14306]"
    }, {
      "left" : "public static final String printWithPivot(Integer[] array, int pivotIndex, int start, int length)",
      "right" : "public abstract Integer[] sort(Integer[] input);",
      "info" : "MethodDeclaration[31306-31776]:MethodDeclaration[6686-6734]"
    }, {
      "left" : "public static final String printWithPivot(Integer[] array, int pivotIndex, int start, int length)",
      "right" : "public static final String printWithPivot(Integer[] array, int pivotIndex, int start, int length)",
      "info" : "MethodDeclaration[31306-31776]:MethodDeclaration[14312-14782]"
    }, {
      "left" : "private static final void putOutTheGarbage()",
      "right" : "private static final void putOutTheGarbage()",
      "info" : "MethodDeclaration[31782-31912]:MethodDeclaration[14788-14918]"
    }, {
      "left" : "private static final long fSLEEP_INTERVAL = 100;",
      "right" : "private static final long fSLEEP_INTERVAL = 100;",
      "info" : "FieldDeclaration[31918-31966]:FieldDeclaration[14924-14972]"
    }, {
      "left" : "private static final void collectGarbage()",
      "right" : "private static final void collectGarbage()",
      "info" : "MethodDeclaration[31972-32323]:MethodDeclaration[14978-15329]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[625-631]:Modifier[6496-6502]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[665-671]:Modifier[6503-6509]"
    }, {
      "left" : "final",
      "right" : "abstract",
      "info" : "Modifier[672-677]:Modifier[6510-6518]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[733-740]:Modifier[733-740]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[741-747]:Modifier[741-747]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[748-753]:Modifier[748-753]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[754-757]:PrimitiveType[754-757]"
    }, {
      "left" : "SIZE = 1024*20",
      "right" : "SIZE = 1024*100",
      "info" : "VariableDeclarationFragment[758-772]:VariableDeclarationFragment[758-773]"
    }, {
      "left" : "20",
      "right" : "100",
      "info" : "NumberLiteral[770-772]:NumberLiteral[770-773]"
    }, {
      "left" : "insertionCount",
      "right" : "insertionCount",
      "info" : "SimpleName[962-976]:SimpleName[2950-2964]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1007-1015]:ArrayType[1038-1046]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1035-1052]:ArrayCreation[2923-2940]"
    }, {
      "left" : "bubbleCount",
      "right" : "bubbleCount",
      "info" : "SimpleName[1077-1088]:SimpleName[3123-3134]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1119-1127]:ArrayType[1127-1135]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1144-1161]:ArrayCreation[2923-2940]"
    }, {
      "left" : "shellCount",
      "right" : "shellCount",
      "info" : "SimpleName[1186-1196]:SimpleName[3283-3293]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1227-1235]:ArrayType[1215-1223]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1251-1268]:ArrayCreation[4504-4521]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1274-1281]:Modifier[1161-1168]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1282-1288]:Modifier[1169-1175]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[1289-1292]:PrimitiveType[1176-1179]"
    }, {
      "left" : "mergeInPlaceCount",
      "right" : "mergeCount",
      "info" : "SimpleName[1293-1310]:SimpleName[1180-1190]"
    }, {
      "left" : "mergeInPlaceCount = 0",
      "right" : "mergeCount = 0",
      "info" : "VariableDeclarationFragment[1293-1314]:VariableDeclarationFragment[1180-1194]"
    }, {
      "left" : "mergeInPlaceCount",
      "right" : "mergeCount",
      "info" : "SimpleName[1293-1310]:SimpleName[3439-3449]"
    }, {
      "left" : "mergeInPlaceCount",
      "right" : "mergeCount",
      "info" : "SimpleName[1293-1310]:SimpleName[3536-3546]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1341-1349]:ArrayType[1303-1311]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[1350-1369]:SimpleName[3397-3409]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[2 * 3]",
      "info" : "ArrayCreation[1372-1389]:ArrayCreation[3412-3429]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1372-1389]:ArrayCreation[4341-4358]"
    }, {
      "left" : "1",
      "right" : "2",
      "info" : "NumberLiteral[1383-1384]:NumberLiteral[3423-3424]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1465-1473]:ArrayType[1390-1398]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1499-1516]:ArrayCreation[4173-4190]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[1541-1551]:SimpleName[3699-3709]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[1541-1551]:SimpleName[3791-3801]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[1541-1551]:SimpleName[3884-3894]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1582-1590]:ArrayType[1480-1488]"
    }, {
      "left" : "new double[3 * 3]",
      "right" : "new double[3 * 3]",
      "info" : "ArrayCreation[1606-1623]:ArrayCreation[3672-3689]"
    }, {
      "left" : "heapCount",
      "right" : "heapCount",
      "info" : "SimpleName[1648-1657]:SimpleName[4045-4054]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1688-1696]:ArrayType[1571-1579]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1711-1728]:ArrayCreation[2923-2940]"
    }, {
      "left" : "countingCount",
      "right" : "countingCount",
      "info" : "SimpleName[1753-1766]:SimpleName[4200-4213]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1797-1805]:ArrayType[1666-1674]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1824-1841]:ArrayCreation[3096-3113]"
    }, {
      "left" : "radixCount",
      "right" : "radixCount",
      "info" : "SimpleName[1866-1876]:SimpleName[4368-4378]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[1907-1915]:ArrayType[945-953]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[1931-1948]:ArrayCreation[4018-4035]"
    }, {
      "left" : "americanFlagCount",
      "right" : "americanFlagCount",
      "info" : "SimpleName[1973-1990]:SimpleName[4531-4548]"
    }, {
      "left" : "double[]",
      "right" : "double[]",
      "info" : "ArrayType[2021-2029]:ArrayType[4765-4773]"
    }, {
      "left" : "new double[1 * 3]",
      "right" : "new double[1 * 3]",
      "info" : "ArrayCreation[2052-2069]:ArrayCreation[3256-3273]"
    }, {
      "left" : "showBubble",
      "right" : "Testable",
      "info" : "SimpleName[2160-2170]:SimpleName[6525-6533]"
    }, {
      "left" : "unsorted",
      "right" : "input",
      "info" : "SimpleName[2643-2651]:SimpleName[6551-6556]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[6808-6816]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[7095-7103]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[7372-7380]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[7649-7657]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[7923-7931]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[8210-8218]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[8530-8538]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[8849-8857]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[9163-9171]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[9479-9487]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[9789-9797]"
    }, {
      "left" : "reverse",
      "right" : "Override",
      "info" : "SimpleName[2733-2740]:SimpleName[10113-10121]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[6825-6831]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[7112-7118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[7389-7395]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[7666-7672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[7940-7946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[8227-8233]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[8547-8553]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[8866-8872]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[9180-9186]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[9496-9502]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[9806-9812]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[10130-10136]"
    }, {
      "left" : "String[] args",
      "right" : "String[] args",
      "info" : "SingleVariableDeclaration[2778-2791]:SingleVariableDeclaration[1868-1881]"
    }, {
      "left" : "String",
      "right" : "Testable",
      "info" : "SimpleType[2778-2784]:SimpleType[4708-4716]"
    }, {
      "left" : "args",
      "right" : "testable",
      "info" : "SimpleName[2787-2791]:SimpleName[4717-4725]"
    }, {
      "left" : "System.out.println(\"Generating random array.\");",
      "right" : "System.out.println(\"Generating random array.\");",
      "info" : "ExpressionStatement[2803-2850]:ExpressionStatement[1893-1940]"
    }, {
      "left" : "Random random = new Random();",
      "right" : "Random random = new Random();",
      "info" : "VariableDeclarationStatement[2859-2888]:VariableDeclarationStatement[1949-1978]"
    }, {
      "left" : "unsorted = new Integer[SIZE];",
      "right" : "unsorted = new Integer[SIZE];",
      "info" : "ExpressionStatement[2897-2926]:ExpressionStatement[1987-2016]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[2965-2966]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[3135-3136]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[3294-3295]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[3450-3451]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[3547-3548]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[3710-3711]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[3802-3803]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[3895-3896]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[4055-4056]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[4214-4215]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[4379-4380]"
    }, {
      "left" : "=",
      "right" : "=",
      "info" : "ASSIGNMENT_OPERATOR[2906-2907]:ASSIGNMENT_OPERATOR[4549-4550]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[2935-2945]:VariableDeclarationStatement[2025-2035]"
    }, {
      "left" : "while (i < unsorted.length)",
      "right" : "while (i < unsorted.length)",
      "info" : "WhileStatement[2954-3082]:WhileStatement[2044-2172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2982-3082]:Block[2072-2172]"
    }, {
      "left" : "int j = random.nextInt(unsorted.length * 10);",
      "right" : "int j = random.nextInt(unsorted.length * 10);",
      "info" : "VariableDeclarationStatement[2996-3041]:VariableDeclarationStatement[2086-2131]"
    }, {
      "left" : "random",
      "right" : "runTest",
      "info" : "SimpleName[3004-3010]:SimpleName[2967-2974]"
    }, {
      "left" : "unsorted[i++] = j;",
      "right" : "unsorted[i++] = j;",
      "info" : "ExpressionStatement[3054-3072]:ExpressionStatement[2144-2162]"
    }, {
      "left" : "System.out.println(\"Generated random array.\");",
      "right" : "System.out.println(\"Generated random array.\");",
      "info" : "ExpressionStatement[3091-3137]:ExpressionStatement[2181-2227]"
    }, {
      "left" : "System.out.println(\"Generating sorted array.\");",
      "right" : "System.out.println(\"Generating sorted array.\");",
      "info" : "ExpressionStatement[3147-3194]:ExpressionStatement[2237-2284]"
    }, {
      "left" : "sorted = new Integer[SIZE];",
      "right" : "sorted = new Integer[SIZE];",
      "info" : "ExpressionStatement[3203-3230]:ExpressionStatement[2293-2320]"
    }, {
      "left" : "Integer",
      "right" : "Insertion",
      "info" : "SimpleName[3216-3223]:SimpleName[2979-2988]"
    }, {
      "left" : "for (i = 0; i < sorted.length; i++)",
      "right" : "for (i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[3239-3313]:ForStatement[2329-2403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3275-3313]:Block[2365-2403]"
    }, {
      "left" : "sorted[i] = i;",
      "right" : "sorted[i] = i;",
      "info" : "ExpressionStatement[3289-3303]:ExpressionStatement[2379-2393]"
    }, {
      "left" : "System.out.println(\"Generated sorted array.\");",
      "right" : "System.out.println(\"Generated sorted array.\");",
      "info" : "ExpressionStatement[3322-3368]:ExpressionStatement[2412-2458]"
    }, {
      "left" : "System.out.println(\"Generating reverse sorted array.\");",
      "right" : "System.out.println(\"Generating reverse sorted array.\");",
      "info" : "ExpressionStatement[3378-3433]:ExpressionStatement[2468-2523]"
    }, {
      "left" : "reverse = new Integer[SIZE];",
      "right" : "reverse = new Integer[SIZE];",
      "info" : "ExpressionStatement[3442-3470]:ExpressionStatement[2532-2560]"
    }, {
      "left" : "for (i = (reverse.length - 1); i >= 0; i--)",
      "right" : "for (i = (reverse.length - 1); i >= 0; i--)",
      "info" : "ForStatement[3479-3575]:ForStatement[2569-2665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3523-3575]:Block[2613-2665]"
    }, {
      "left" : "reverse[i] = (SIZE - 1) - i;",
      "right" : "reverse[i] = (SIZE - 1) - i;",
      "info" : "ExpressionStatement[3537-3565]:ExpressionStatement[2627-2655]"
    }, {
      "left" : "System.out.println(\"Generated reverse sorted array.\");",
      "right" : "System.out.println(\"Generated reverse sorted array.\");",
      "info" : "ExpressionStatement[3584-3638]:ExpressionStatement[2674-2728]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[3647-3668]:ExpressionStatement[2845-2866]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[3677-3696]:ExpressionStatement[2875-2894]"
    }, {
      "left" : "System.out.println(\"Starting sorts...\");",
      "right" : "System.out.println(\"Starting sorts...\");",
      "info" : "ExpressionStatement[3706-3746]:ExpressionStatement[2796-2836]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[3755-3776]:ExpressionStatement[2737-2758]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[3785-3804]:ExpressionStatement[2767-2786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3832-5795]:Block[4794-6490]"
    }, {
      "left" : "long bInsertion = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[3876-3912]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[6839-6846]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[7126-7133]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[7403-7410]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[7680-7687]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[7954-7961]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[8241-8248]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[8561-8568]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[8880-8887]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[9194-9201]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[9510-9517]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[9820-9827]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[3901-3909]:SimpleName[10144-10151]"
    }, {
      "left" : "Integer[] result = InsertionSort.sort(unsorted.clone());",
      "right" : "Integer[] result = testable.sort(unsorted.clone());",
      "info" : "VariableDeclarationStatement[3925-3981]:VariableDeclarationStatement[4849-4900]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[3925-3934]:ArrayType[8047-8056]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3137-3144]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3296-3303]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3452-3459]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3549-3556]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3712-3719]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3804-3811]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3897-3904]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[4057-4064]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[4216-4223]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[4381-4388]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[4551-4558]"
    }, {
      "left" : "InsertionSort",
      "right" : "InsertionSort",
      "info" : "METHOD_INVOCATION_RECEIVER[3944-3957]:METHOD_INVOCATION_RECEIVER[8100-8113]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[3963-3971]:SimpleName[2992-3000]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[3994-4090]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"InsertionSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[4046-4090]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"InsertionSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[4065-4088]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aInsertion = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[4103-4139]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "double diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "right" : "double diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "info" : "VariableDeclarationStatement[4152-4211]:VariableDeclarationStatement[5061-5120]"
    }, {
      "left" : "System.out.println(\"Random: InsertionSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[4224-4301]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "\"Random: InsertionSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[4243-4267]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[4314-4375]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[4346-4375]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "insertionResults",
      "right" : "results",
      "info" : "SimpleName[4424-4440]:SimpleName[5290-5297]"
    }, {
      "left" : "insertionResults[insertionCount++] = diff;",
      "right" : "results[count++] = diff;",
      "info" : "ExpressionStatement[4424-4466]:ExpressionStatement[5290-5314]"
    }, {
      "left" : "insertionCount",
      "right" : "count",
      "info" : "SimpleName[4441-4455]:SimpleName[5298-5303]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[4479-4498]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bInsertion = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[4512-4543]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = InsertionSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[4556-4600]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[4584-4590]:SimpleName[3002-3008]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[4613-4709]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"InsertionSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[4665-4709]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"InsertionSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[4684-4707]:StringLiteral[5531-5541]"
    }, {
      "left" : "aInsertion = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[4722-4753]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "right" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "info" : "ExpressionStatement[4766-4818]:ExpressionStatement[5592-5644]"
    }, {
      "left" : "System.out.println(\"Sorted: InsertionSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[4831-4908]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "\"Sorted: InsertionSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[4850-4874]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[4921-4980]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[4953-4980]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "insertionResults",
      "right" : "insertionResults",
      "info" : "SimpleName[5029-5045]:SimpleName[3010-3026]"
    }, {
      "left" : "insertionResults",
      "right" : "results",
      "info" : "SimpleName[5029-5045]:SimpleName[5812-5819]"
    }, {
      "left" : "insertionResults[insertionCount++] = diff;",
      "right" : "results[count++] = diff;",
      "info" : "ExpressionStatement[5029-5071]:ExpressionStatement[5812-5836]"
    }, {
      "left" : "insertionCount",
      "right" : "insertionCount",
      "info" : "SimpleName[5046-5060]:SimpleName[3028-3042]"
    }, {
      "left" : "insertionCount",
      "right" : "count",
      "info" : "SimpleName[5046-5060]:SimpleName[5820-5825]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[5084-5103]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bInsertion = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[5117-5148]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "result = InsertionSort.sort(reverse.clone());",
      "right" : "result = InsertionSort.sort(reverse.clone());",
      "info" : "ExpressionStatement[5161-5206]:ExpressionStatement[5914-5959]"
    }, {
      "left" : "reverse",
      "right" : "testable",
      "info" : "SimpleName[5189-5196]:SimpleName[4976-4984]"
    }, {
      "left" : "reverse",
      "right" : "testable",
      "info" : "METHOD_INVOCATION_RECEIVER[5189-5196]:METHOD_INVOCATION_RECEIVER[5159-5167]"
    }, {
      "left" : "reverse",
      "right" : "testable",
      "info" : "SimpleName[5189-5196]:SimpleName[5512-5520]"
    }, {
      "left" : "reverse",
      "right" : "testable",
      "info" : "METHOD_INVOCATION_RECEIVER[5189-5196]:METHOD_INVOCATION_RECEIVER[5683-5691]"
    }, {
      "left" : "reverse",
      "right" : "testable",
      "info" : "METHOD_INVOCATION_RECEIVER[5189-5196]:METHOD_INVOCATION_RECEIVER[6035-6043]"
    }, {
      "left" : "reverse",
      "right" : "testable",
      "info" : "METHOD_INVOCATION_RECEIVER[5189-5196]:METHOD_INVOCATION_RECEIVER[6220-6228]"
    }, {
      "left" : "clone",
      "right" : "getName",
      "info" : "SimpleName[5197-5202]:SimpleName[4985-4992]"
    }, {
      "left" : "clone",
      "right" : "getName",
      "info" : "SimpleName[5197-5202]:SimpleName[5168-5175]"
    }, {
      "left" : "clone",
      "right" : "getName",
      "info" : "SimpleName[5197-5202]:SimpleName[5521-5528]"
    }, {
      "left" : "clone",
      "right" : "getName",
      "info" : "SimpleName[5197-5202]:SimpleName[5692-5699]"
    }, {
      "left" : "clone",
      "right" : "getName",
      "info" : "SimpleName[5197-5202]:SimpleName[6044-6051]"
    }, {
      "left" : "clone",
      "right" : "getName",
      "info" : "SimpleName[5197-5202]:SimpleName[6229-6236]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[5219-5315]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"InsertionSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[5271-5315]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"InsertionSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[5290-5313]:StringLiteral[6054-6070]"
    }, {
      "left" : "aInsertion = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[5328-5359]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "right" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "info" : "ExpressionStatement[5372-5424]:ExpressionStatement[6121-6173]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: InsertionSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[5437-5522]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "\"Reverse sorted: InsertionSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[5456-5488]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[5535-5595]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[5567-5595]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "insertionResults",
      "right" : "results",
      "info" : "SimpleName[5644-5660]:SimpleName[6350-6357]"
    }, {
      "left" : "insertionResults[insertionCount++] = diff;",
      "right" : "results[count++] = diff;",
      "info" : "ExpressionStatement[5644-5686]:ExpressionStatement[6350-6374]"
    }, {
      "left" : "insertionCount",
      "right" : "count",
      "info" : "SimpleName[5661-5675]:SimpleName[6358-6363]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[5699-5718]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[5732-5753]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[5766-5785]:ExpressionStatement[6442-6461]"
    }, {
      "left" : "long bBubble = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[5862-5895]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bBubble",
      "right" : "bInsertion",
      "info" : "SimpleName[5867-5874]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer",
      "right" : "Bubble",
      "info" : "SimpleType[5908-5915]:SimpleType[3149-3155]"
    }, {
      "left" : "Integer",
      "right" : "Shell",
      "info" : "SimpleType[5908-5915]:SimpleType[3308-3313]"
    }, {
      "left" : "Integer",
      "right" : "MergeNotInPlace",
      "info" : "SimpleType[5908-5915]:SimpleType[3464-3479]"
    }, {
      "left" : "Integer",
      "right" : "MergeInPlace",
      "info" : "SimpleName[5908-5915]:SimpleName[3561-3573]"
    }, {
      "left" : "Integer",
      "right" : "QuickFirst",
      "info" : "SimpleName[5908-5915]:SimpleName[3724-3734]"
    }, {
      "left" : "Integer",
      "right" : "QuickMiddle",
      "info" : "SimpleName[5908-5915]:SimpleName[3816-3827]"
    }, {
      "left" : "Integer",
      "right" : "QuickRandom",
      "info" : "SimpleType[5908-5915]:SimpleType[3909-3920]"
    }, {
      "left" : "Integer",
      "right" : "Heap",
      "info" : "SimpleType[5908-5915]:SimpleType[4069-4073]"
    }, {
      "left" : "Integer",
      "right" : "Counting",
      "info" : "SimpleName[5908-5915]:SimpleName[4228-4236]"
    }, {
      "left" : "Integer",
      "right" : "Radix",
      "info" : "SimpleType[5908-5915]:SimpleType[4393-4398]"
    }, {
      "left" : "Integer",
      "right" : "AmericanFlag",
      "info" : "SimpleType[5908-5915]:SimpleType[4563-4575]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[5908-5917]:ArrayType[4849-4858]"
    }, {
      "left" : "result = BubbleSort.sort(unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[5918-5960]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "BubbleSort",
      "right" : "BubbleSort",
      "info" : "METHOD_INVOCATION_RECEIVER[5927-5937]:METHOD_INVOCATION_RECEIVER[7269-7279]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3159-3167]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3317-3325]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3483-3491]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3577-3585]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3738-3746]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3831-3839]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3924-3932]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[4077-4085]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[4240-4248]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[4402-4410]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[4579-4587]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[5974-6067]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"BubbleSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[6026-6067]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"BubbleSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[6045-6065]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aBubble = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[6080-6113]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aBubble",
      "right" : "aInsertion",
      "info" : "SimpleName[6085-6092]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[6192-6202]:METHOD_INVOCATION_RECEIVER[2468-2478]"
    }, {
      "left" : "System.out.println(\"Random: BubbleSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[6192-6266]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "\"Random: BubbleSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[6211-6232]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[6279-6340]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[6311-6340]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[6438-6457]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bBubble",
      "right" : "bInsertion",
      "info" : "SimpleName[6471-6478]:SimpleName[5352-5362]"
    }, {
      "left" : "bBubble = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[6471-6499]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = BubbleSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[6512-6553]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "BubbleSort",
      "right" : "BubbleSort",
      "info" : "METHOD_INVOCATION_RECEIVER[6521-6531]:METHOD_INVOCATION_RECEIVER[7269-7279]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3169-3175]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3327-3333]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3493-3499]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3587-3593]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3748-3754]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3841-3847]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3934-3940]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[4087-4093]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[4250-4256]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[4412-4418]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[4589-4595]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[6566-6659]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"BubbleSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[6618-6659]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"BubbleSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[6637-6657]:StringLiteral[5531-5541]"
    }, {
      "left" : "aBubble",
      "right" : "aInsertion",
      "info" : "SimpleName[6672-6679]:SimpleName[5552-5562]"
    }, {
      "left" : "aBubble = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[6672-6700]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[6772-6782]:METHOD_INVOCATION_RECEIVER[2875-2885]"
    }, {
      "left" : "System.out.println(\"Sorted: BubbleSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[6772-6846]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "\"Sorted: BubbleSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[6791-6812]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[6859-6918]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[6891-6918]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "bubbleResults",
      "right" : "bubbleResults",
      "info" : "SimpleName[6967-6980]:SimpleName[3177-3190]"
    }, {
      "left" : "bubbleCount",
      "right" : "bubbleCount",
      "info" : "SimpleName[6981-6992]:SimpleName[3192-3203]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[7016-7035]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bBubble",
      "right" : "bInsertion",
      "info" : "SimpleName[7049-7056]:SimpleName[5874-5884]"
    }, {
      "left" : "bBubble = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[7049-7077]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "BubbleSort",
      "right" : "BubbleSort",
      "info" : "METHOD_INVOCATION_RECEIVER[7099-7109]:METHOD_INVOCATION_RECEIVER[7269-7279]"
    }, {
      "left" : "reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[7115-7130]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[7145-7238]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"BubbleSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[7197-7238]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"BubbleSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[7216-7236]:StringLiteral[6054-6070]"
    }, {
      "left" : "aBubble",
      "right" : "aInsertion",
      "info" : "SimpleName[7251-7258]:SimpleName[6081-6091]"
    }, {
      "left" : "aBubble = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[7251-7279]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: BubbleSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[7351-7433]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[7351-7361]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: BubbleSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[7370-7399]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[7446-7506]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[7478-7506]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[7604-7623]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[7637-7658]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[7671-7690]:ExpressionStatement[6442-6461]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[7739-7744]:ArrayType[10060-10065]"
    }, {
      "left" : "shells = new int[] { 10, 5, 3, 1 }",
      "right" : "shells = new int[] { 10, 5, 3, 1 }",
      "info" : "VariableDeclarationFragment[7745-7779]:VariableDeclarationFragment[10066-10100]"
    }, {
      "left" : "long bShell = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[7821-7853]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "bShell",
      "right" : "aInsertion",
      "info" : "SimpleName[7826-7832]:SimpleName[5021-5031]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[7866-7875]:ArrayType[7216-7225]"
    }, {
      "left" : "result = ShellSort.sort(shells, unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[7876-7925]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "ShellSort",
      "right" : "ShellSort",
      "info" : "METHOD_INVOCATION_RECEIVER[7885-7894]:METHOD_INVOCATION_RECEIVER[10286-10295]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[7939-8031]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"ShellSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[7991-8031]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"ShellSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[8010-8029]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aShell = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[8044-8076]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aShell",
      "right" : "aInsertion",
      "info" : "SimpleName[8049-8055]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[8153-8163]:METHOD_INVOCATION_RECEIVER[2468-2478]"
    }, {
      "left" : "System.out.println(\"Random: ShellSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[8153-8226]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "\"Random: ShellSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[8172-8192]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[8239-8300]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[8271-8300]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "shellResults",
      "right" : "shellResults",
      "info" : "SimpleName[8349-8361]:SimpleName[3335-3347]"
    }, {
      "left" : "shellCount",
      "right" : "shellCount",
      "info" : "SimpleName[8362-8372]:SimpleName[3349-3359]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[8396-8415]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bShell",
      "right" : "aInsertion",
      "info" : "SimpleName[8429-8435]:SimpleName[5552-5562]"
    }, {
      "left" : "bShell = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[8429-8456]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "result = ShellSort.sort(shells, sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[8469-8517]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "ShellSort",
      "right" : "ShellSort",
      "info" : "METHOD_INVOCATION_RECEIVER[8478-8487]:METHOD_INVOCATION_RECEIVER[10286-10295]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[8530-8622]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"ShellSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[8582-8622]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"ShellSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[8601-8620]:StringLiteral[5531-5541]"
    }, {
      "left" : "aShell",
      "right" : "aInsertion",
      "info" : "SimpleName[8635-8641]:SimpleName[5552-5562]"
    }, {
      "left" : "aShell = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[8635-8662]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[8732-8742]:METHOD_INVOCATION_RECEIVER[2875-2885]"
    }, {
      "left" : "System.out.println(\"Sorted: ShellSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[8732-8805]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "\"Sorted: ShellSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[8751-8771]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[8818-8877]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[8850-8877]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[8973-8992]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bShell",
      "right" : "bInsertion",
      "info" : "SimpleName[9006-9012]:SimpleName[5874-5884]"
    }, {
      "left" : "bShell = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[9006-9033]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "ShellSort",
      "right" : "ShellSort",
      "info" : "METHOD_INVOCATION_RECEIVER[9055-9064]:METHOD_INVOCATION_RECEIVER[10286-10295]"
    }, {
      "left" : "shells, reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[9070-9093]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[9108-9200]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"ShellSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[9160-9200]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"ShellSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[9179-9198]:StringLiteral[6054-6070]"
    }, {
      "left" : "aShell",
      "right" : "aInsertion",
      "info" : "SimpleName[9213-9219]:SimpleName[6081-6091]"
    }, {
      "left" : "aShell = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[9213-9240]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: ShellSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[9310-9391]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[9310-9320]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: ShellSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[9329-9357]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[9404-9464]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[9436-9464]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[9560-9579]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[9593-9614]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[9627-9646]:ExpressionStatement[6442-6461]"
    }, {
      "left" : "long bMerge = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[9731-9763]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bMerge",
      "right" : "bInsertion",
      "info" : "SimpleName[9736-9742]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[9776-9785]:ArrayType[8337-8346]"
    }, {
      "left" : "result = MergeSort.sort(MergeSort.SPACE_TYPE.NOT_IN_PLACE, unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[9786-9862]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[9795-9804]:METHOD_INVOCATION_RECEIVER[8710-8719]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[9876-9968]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"MergeSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[9928-9968]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"MergeSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[9947-9966]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aMerge = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[9981-10013]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aMerge",
      "right" : "aInsertion",
      "info" : "SimpleName[9986-9992]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[10090-10100]:METHOD_INVOCATION_RECEIVER[2468-2478]"
    }, {
      "left" : "System.out.println(\"Random: MergeSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[10090-10163]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "\"Random: MergeSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[10109-10129]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[10176-10237]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[10208-10237]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[10353-10372]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bMerge",
      "right" : "bInsertion",
      "info" : "SimpleName[10386-10392]:SimpleName[5352-5362]"
    }, {
      "left" : "bMerge = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[10386-10413]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = MergeSort.sort(MergeSort.SPACE_TYPE.NOT_IN_PLACE, sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[10426-10501]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[10435-10444]:METHOD_INVOCATION_RECEIVER[8710-8719]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[10514-10606]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"MergeSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[10566-10606]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"MergeSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[10585-10604]:StringLiteral[5531-5541]"
    }, {
      "left" : "aMerge",
      "right" : "aInsertion",
      "info" : "SimpleName[10619-10625]:SimpleName[5552-5562]"
    }, {
      "left" : "aMerge = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[10619-10646]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[10716-10726]:METHOD_INVOCATION_RECEIVER[2875-2885]"
    }, {
      "left" : "System.out.println(\"Sorted: MergeSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[10716-10789]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "\"Sorted: MergeSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[10735-10755]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[10802-10861]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[10834-10861]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[10977-10996]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bMerge",
      "right" : "bInsertion",
      "info" : "SimpleName[11010-11016]:SimpleName[5874-5884]"
    }, {
      "left" : "bMerge = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[11010-11037]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[11059-11068]:METHOD_INVOCATION_RECEIVER[8710-8719]"
    }, {
      "left" : "MergeSort.SPACE_TYPE.NOT_IN_PLACE, reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[11074-11124]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[11139-11231]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"MergeSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[11191-11231]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"MergeSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[11210-11229]:StringLiteral[6054-6070]"
    }, {
      "left" : "aMerge",
      "right" : "aInsertion",
      "info" : "SimpleName[11244-11250]:SimpleName[6081-6091]"
    }, {
      "left" : "aMerge = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[11244-11271]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: MergeSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[11341-11422]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[11341-11351]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: MergeSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[11360-11388]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[11435-11495]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[11467-11495]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[11611-11630]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[11644-11665]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[11678-11697]:ExpressionStatement[6442-6461]"
    }, {
      "left" : "long bMerge = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[11779-11811]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bMerge",
      "right" : "bInsertion",
      "info" : "SimpleName[11784-11790]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[11824-11833]:ArrayType[7768-7777]"
    }, {
      "left" : "result = MergeSort.sort(MergeSort.SPACE_TYPE.IN_PLACE, unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[11834-11906]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[11843-11852]:METHOD_INVOCATION_RECEIVER[8710-8719]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[11920-12012]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"MergeSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[11972-12012]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"MergeSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[11991-12010]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aMerge = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[12025-12057]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aMerge",
      "right" : "aInsertion",
      "info" : "SimpleName[12030-12036]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[12134-12144]:METHOD_INVOCATION_RECEIVER[2468-2478]"
    }, {
      "left" : "System.out.println(\"Random: MergeSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[12134-12207]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "\"Random: MergeSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[12153-12173]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[12220-12281]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[12252-12281]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[12330-12349]:SimpleName[3501-3513]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[12330-12349]:SimpleName[3595-3607]"
    }, {
      "left" : "mergeInPlaceCount",
      "right" : "mergeCount",
      "info" : "SimpleName[12350-12367]:SimpleName[3515-3525]"
    }, {
      "left" : "mergeInPlaceCount",
      "right" : "mergeCount",
      "info" : "SimpleName[12350-12367]:SimpleName[3609-3619]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[12391-12410]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bMerge",
      "right" : "bInsertion",
      "info" : "SimpleName[12424-12430]:SimpleName[5352-5362]"
    }, {
      "left" : "bMerge = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[12424-12451]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = MergeSort.sort(MergeSort.SPACE_TYPE.IN_PLACE, sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[12464-12535]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[12473-12482]:METHOD_INVOCATION_RECEIVER[8710-8719]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[12548-12640]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"MergeSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[12600-12640]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"MergeSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[12619-12638]:StringLiteral[5531-5541]"
    }, {
      "left" : "aMerge",
      "right" : "aInsertion",
      "info" : "SimpleName[12653-12659]:SimpleName[5552-5562]"
    }, {
      "left" : "aMerge = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[12653-12680]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out.println(\"Sorted: MergeSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[12750-12823]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[12750-12760]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Sorted: MergeSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[12769-12789]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[12836-12895]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[12868-12895]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[13005-13024]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bMerge",
      "right" : "bInsertion",
      "info" : "SimpleName[13038-13044]:SimpleName[5874-5884]"
    }, {
      "left" : "bMerge = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[13038-13065]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[13087-13096]:METHOD_INVOCATION_RECEIVER[8390-8399]"
    }, {
      "left" : "MergeSort.SPACE_TYPE.IN_PLACE, reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[13102-13148]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[13163-13255]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"MergeSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[13215-13255]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"MergeSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[13234-13253]:StringLiteral[6054-6070]"
    }, {
      "left" : "aMerge",
      "right" : "aInsertion",
      "info" : "SimpleName[13268-13274]:SimpleName[6081-6091]"
    }, {
      "left" : "aMerge = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[13268-13295]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: MergeSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[13365-13446]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[13365-13375]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: MergeSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[13384-13412]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[13459-13519]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[13491-13519]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[13629-13648]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[13662-13683]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[13696-13715]:ExpressionStatement[6442-6461]"
    }, {
      "left" : "long bQuick = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[13789-13821]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[13794-13800]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[13834-13843]:ArrayType[8657-8666]"
    }, {
      "left" : "result = QuickSort.sort(QuickSort.PIVOT_TYPE.FIRST, unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[13844-13913]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[13853-13862]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[13927-14019]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[13979-14019]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"QuickSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[13998-14017]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aQuick = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[14032-14064]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "aQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[14037-14043]:SimpleName[4809-4819]"
    }, {
      "left" : "System.out.println(\"Random: QuickSort first element pivot=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[14141-14234]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[14141-14151]:METHOD_INVOCATION_RECEIVER[13503-13513]"
    }, {
      "left" : "\"Random: QuickSort first element pivot=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[14160-14200]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[14247-14308]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[14279-14308]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[14357-14369]:SimpleName[3756-3768]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[14357-14369]:SimpleName[3849-3861]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[14357-14369]:SimpleName[3942-3954]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[14370-14380]:SimpleName[3770-3780]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[14370-14380]:SimpleName[3863-3873]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[14370-14380]:SimpleName[3956-3966]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[14404-14423]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[14437-14443]:SimpleName[5352-5362]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[14437-14464]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = QuickSort.sort(QuickSort.PIVOT_TYPE.FIRST, sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[14477-14545]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[14486-14495]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[14558-14650]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[14610-14650]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"QuickSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[14629-14648]:StringLiteral[4995-5005]"
    }, {
      "left" : "aQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[14663-14669]:SimpleName[5352-5362]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[14663-14690]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "System.out.println(\"Sorted: QuickSort first element pivot=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[14760-14853]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[14760-14770]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Sorted: QuickSort first element pivot=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[14779-14819]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[14866-14925]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[14898-14925]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[15021-15040]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[15054-15060]:SimpleName[5352-5362]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[15054-15081]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = QuickSort.sort(QuickSort.PIVOT_TYPE.FIRST, reverse.clone());",
      "right" : "result = InsertionSort.sort(reverse.clone());",
      "info" : "ExpressionStatement[15094-15163]:ExpressionStatement[5914-5959]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[15103-15112]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[15176-15268]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[15228-15268]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"QuickSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[15247-15266]:StringLiteral[5531-5541]"
    }, {
      "left" : "aQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[15281-15287]:SimpleName[5352-5362]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[15281-15308]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: QuickSort first element pivot=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[15378-15479]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[15378-15388]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Reverse sorted: QuickSort first element pivot=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[15397-15445]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[15492-15552]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[15524-15552]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[15648-15667]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[15681-15702]:ExpressionStatement[2845-2866]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[15715-15734]:ExpressionStatement[2767-2786]"
    }, {
      "left" : "bQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[15748-15754]:SimpleName[5352-5362]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[15748-15775]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "QuickSort.sort(QuickSort.PIVOT_TYPE.MIDDLE, unsorted.clone())",
      "right" : "testable.sort(unsorted.clone())",
      "info" : "MethodInvocation[15797-15858]:MethodInvocation[4868-4899]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[15797-15806]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[15872-15964]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[15924-15964]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"QuickSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[15943-15962]:StringLiteral[5531-5541]"
    }, {
      "left" : "aQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[15977-15983]:SimpleName[5552-5562]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[15977-16004]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out.println(\"Random: QuickSort middle element pivot=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[16074-16168]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[16074-16084]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Random: QuickSort middle element pivot=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[16093-16134]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[16181-16242]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[16213-16242]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[16338-16357]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[16371-16377]:SimpleName[5552-5562]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[16371-16398]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "result = QuickSort.sort(QuickSort.PIVOT_TYPE.MIDDLE, sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[16411-16480]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[16420-16429]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[16493-16585]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[16545-16585]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"QuickSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[16564-16583]:StringLiteral[5531-5541]"
    }, {
      "left" : "aQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[16598-16604]:SimpleName[5552-5562]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[16598-16625]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out.println(\"Sorted: QuickSort middle element pivot=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[16695-16789]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[16695-16705]:METHOD_INVOCATION_RECEIVER[13607-13617]"
    }, {
      "left" : "\"Sorted: QuickSort middle element pivot=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[16714-16755]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[16802-16861]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[16834-16861]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[16957-16976]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[16990-16996]:SimpleName[5874-5884]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[16990-17017]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "result = QuickSort.sort(QuickSort.PIVOT_TYPE.MIDDLE, reverse.clone());",
      "right" : "result = InsertionSort.sort(reverse.clone());",
      "info" : "ExpressionStatement[17030-17100]:ExpressionStatement[5914-5959]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[17039-17048]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[17113-17205]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[17165-17205]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"QuickSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[17184-17203]:StringLiteral[6054-6070]"
    }, {
      "left" : "aQuick",
      "right" : "bInsertion",
      "info" : "SimpleName[17218-17224]:SimpleName[5874-5884]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[17218-17245]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: QuickSort middle element pivot=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[17315-17417]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[17315-17325]:METHOD_INVOCATION_RECEIVER[13607-13617]"
    }, {
      "left" : "\"Reverse sorted: QuickSort middle element pivot=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[17334-17383]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[17430-17490]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[17462-17490]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[17586-17605]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[17619-17640]:ExpressionStatement[2845-2866]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[17653-17672]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "bQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[17686-17692]:SimpleName[6081-6091]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[17686-17713]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[17735-17744]:METHOD_INVOCATION_RECEIVER[9030-9039]"
    }, {
      "left" : "QuickSort.PIVOT_TYPE.RANDOM, unsorted.clone()",
      "right" : "unsorted.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[17750-17795]:METHOD_INVOCATION_ARGUMENTS[4882-4898]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[17810-17909]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"Random QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[17862-17909]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"Random QuickSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[17881-17907]:StringLiteral[6054-6070]"
    }, {
      "left" : "aQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[17922-17928]:SimpleName[6081-6091]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[17922-17949]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Random: Randomized QuickSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[18019-18103]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[18019-18029]:METHOD_INVOCATION_RECEIVER[13607-13617]"
    }, {
      "left" : "\"Random: Randomized QuickSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[18038-18069]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[18116-18177]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[18148-18177]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[18273-18292]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "bQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[18306-18312]:SimpleName[6081-6091]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[18306-18333]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[18355-18364]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "QuickSort.PIVOT_TYPE.RANDOM, sorted.clone()",
      "right" : "sorted.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[18370-18413]:METHOD_INVOCATION_ARGUMENTS[5420-5434]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[18428-18527]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"Random QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[18480-18527]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"Random QuickSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[18499-18525]:StringLiteral[6054-6070]"
    }, {
      "left" : "aQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[18540-18546]:SimpleName[6081-6091]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[18540-18567]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Sorted: Randomized QuickSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[18637-18721]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[18637-18647]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Sorted: Randomized QuickSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[18656-18687]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[18734-18793]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[18766-18793]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[18889-18908]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "bQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[18922-18928]:SimpleName[6081-6091]"
    }, {
      "left" : "bQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[18922-18949]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[18971-18980]:METHOD_INVOCATION_RECEIVER[9345-9354]"
    }, {
      "left" : "QuickSort.PIVOT_TYPE.RANDOM, reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[18986-19030]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[19045-19144]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"Random QuickSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[19097-19144]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"Random QuickSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[19116-19142]:StringLiteral[6054-6070]"
    }, {
      "left" : "aQuick",
      "right" : "aInsertion",
      "info" : "SimpleName[19157-19163]:SimpleName[6081-6091]"
    }, {
      "left" : "aQuick = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[19157-19184]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: Randomized QuickSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[19254-19346]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[19254-19264]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: Randomized QuickSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[19273-19312]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[19359-19419]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[19391-19419]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[19515-19534]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[19548-19569]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[19582-19601]:ExpressionStatement[6442-6461]"
    }, {
      "left" : "long bHeap = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[19673-19704]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bHeap",
      "right" : "bInsertion",
      "info" : "SimpleName[19678-19683]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[19717-19726]:ArrayType[7495-7504]"
    }, {
      "left" : "result = HeapSort.sort(unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[19727-19767]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "HeapSort",
      "right" : "HeapSort",
      "info" : "METHOD_INVOCATION_RECEIVER[19736-19744]:METHOD_INVOCATION_RECEIVER[7821-7829]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[19781-19872]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"HeapSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[19833-19872]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"HeapSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[19852-19870]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aHeap = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[19885-19916]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aHeap",
      "right" : "aInsertion",
      "info" : "SimpleName[19890-19895]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out.println(\"Random: HeapSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[19991-20063]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[19991-20001]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Random: HeapSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[20010-20029]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[20076-20137]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[20108-20137]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "heapResults",
      "right" : "heapResults",
      "info" : "SimpleName[20186-20197]:SimpleName[4095-4106]"
    }, {
      "left" : "heapCount",
      "right" : "heapCount",
      "info" : "SimpleName[20198-20207]:SimpleName[4108-4117]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[20231-20250]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bHeap",
      "right" : "bInsertion",
      "info" : "SimpleName[20264-20269]:SimpleName[5352-5362]"
    }, {
      "left" : "bHeap = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[20264-20290]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = HeapSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[20303-20342]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "HeapSort",
      "right" : "HeapSort",
      "info" : "METHOD_INVOCATION_RECEIVER[20312-20320]:METHOD_INVOCATION_RECEIVER[7821-7829]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[20355-20446]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"HeapSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[20407-20446]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"HeapSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[20426-20444]:StringLiteral[5531-5541]"
    }, {
      "left" : "aHeap",
      "right" : "aInsertion",
      "info" : "SimpleName[20459-20464]:SimpleName[5552-5562]"
    }, {
      "left" : "aHeap = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[20459-20485]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out.println(\"Sorted: HeapSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[20553-20625]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[20553-20563]:METHOD_INVOCATION_RECEIVER[13607-13617]"
    }, {
      "left" : "\"Sorted: HeapSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[20572-20591]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[20638-20697]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[20670-20697]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[20791-20810]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bHeap",
      "right" : "bInsertion",
      "info" : "SimpleName[20824-20829]:SimpleName[5874-5884]"
    }, {
      "left" : "bHeap = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[20824-20850]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "HeapSort",
      "right" : "HeapSort",
      "info" : "METHOD_INVOCATION_RECEIVER[20872-20880]:METHOD_INVOCATION_RECEIVER[7821-7829]"
    }, {
      "left" : "reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[20886-20901]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[20916-21007]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"HeapSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[20968-21007]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"HeapSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[20987-21005]:StringLiteral[6054-6070]"
    }, {
      "left" : "aHeap",
      "right" : "aInsertion",
      "info" : "SimpleName[21020-21025]:SimpleName[6081-6091]"
    }, {
      "left" : "aHeap = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[21020-21046]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: HeapSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[21114-21194]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[21114-21124]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: HeapSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[21133-21160]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[21207-21267]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[21239-21267]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[21361-21380]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[21394-21415]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[21428-21447]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "long bCounting = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[21528-21563]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bCounting",
      "right" : "bInsertion",
      "info" : "SimpleName[21533-21542]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[21576-21585]:ArrayType[6935-6944]"
    }, {
      "left" : "result = CountingSort.sort(unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[21586-21630]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "CountingSort",
      "right" : "CountingSort",
      "info" : "METHOD_INVOCATION_RECEIVER[21595-21607]:METHOD_INVOCATION_RECEIVER[7548-7560]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[21644-21739]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"CountingSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[21696-21739]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"CountingSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[21715-21737]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aCounting = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[21752-21787]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aCounting",
      "right" : "aInsertion",
      "info" : "SimpleName[21757-21766]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out.println(\"Random: CountingSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[21870-21946]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[21870-21880]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Random: CountingSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[21889-21912]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[21959-22020]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[21991-22020]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "countingResults",
      "right" : "countingResults",
      "info" : "SimpleName[22069-22084]:SimpleName[4258-4273]"
    }, {
      "left" : "countingCount",
      "right" : "countingCount",
      "info" : "SimpleName[22085-22098]:SimpleName[4275-4288]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[22122-22141]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bCounting",
      "right" : "bInsertion",
      "info" : "SimpleName[22155-22164]:SimpleName[5352-5362]"
    }, {
      "left" : "bCounting = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[22155-22185]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = CountingSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[22198-22241]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "CountingSort",
      "right" : "CountingSort",
      "info" : "METHOD_INVOCATION_RECEIVER[22207-22219]:METHOD_INVOCATION_RECEIVER[7548-7560]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[22254-22349]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"CountingSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[22306-22349]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"CountingSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[22325-22347]:StringLiteral[5531-5541]"
    }, {
      "left" : "aCounting",
      "right" : "aInsertion",
      "info" : "SimpleName[22362-22371]:SimpleName[5552-5562]"
    }, {
      "left" : "aCounting = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[22362-22392]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out.println(\"Sorted: CountingSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[22468-22544]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[22468-22478]:METHOD_INVOCATION_RECEIVER[13607-13617]"
    }, {
      "left" : "\"Sorted: CountingSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[22487-22510]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[22557-22616]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[22589-22616]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[22718-22737]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bCounting",
      "right" : "bInsertion",
      "info" : "SimpleName[22751-22760]:SimpleName[5874-5884]"
    }, {
      "left" : "bCounting = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[22751-22781]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "CountingSort",
      "right" : "CountingSort",
      "info" : "METHOD_INVOCATION_RECEIVER[22803-22815]:METHOD_INVOCATION_RECEIVER[7548-7560]"
    }, {
      "left" : "reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[22821-22836]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[22851-22946]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"CountingSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[22903-22946]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"CountingSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[22922-22944]:StringLiteral[6054-6070]"
    }, {
      "left" : "aCounting",
      "right" : "aInsertion",
      "info" : "SimpleName[22959-22968]:SimpleName[6081-6091]"
    }, {
      "left" : "aCounting = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[22959-22989]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: CountingSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[23065-23149]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[23065-23075]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: CountingSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[23084-23115]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[23162-23222]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[23194-23222]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[23324-23343]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[23357-23378]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[23391-23410]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "long bRadix = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[23485-23517]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bRadix",
      "right" : "bInsertion",
      "info" : "SimpleName[23490-23496]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[23530-23539]:ArrayType[4747-4756]"
    }, {
      "left" : "result = RadixSort.sort(unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[23540-23581]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "RadixSort",
      "right" : "RadixSort",
      "info" : "METHOD_INVOCATION_RECEIVER[23549-23558]:METHOD_INVOCATION_RECEIVER[9962-9971]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[23595-23687]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"RadixSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[23647-23687]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"RadixSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[23666-23685]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aRadix = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[23700-23732]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aRadix",
      "right" : "aInsertion",
      "info" : "SimpleName[23705-23711]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out.println(\"Random: RadixSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[23809-23882]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[23809-23819]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Random: RadixSort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[23828-23848]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[23895-23956]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[23927-23956]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "radixResults",
      "right" : "radixResults",
      "info" : "SimpleName[24005-24017]:SimpleName[4420-4432]"
    }, {
      "left" : "radixCount",
      "right" : "radixCount",
      "info" : "SimpleName[24018-24028]:SimpleName[4434-4444]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[24052-24071]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bRadix",
      "right" : "bInsertion",
      "info" : "SimpleName[24085-24091]:SimpleName[5352-5362]"
    }, {
      "left" : "bRadix = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[24085-24112]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = RadixSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[24125-24165]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "RadixSort",
      "right" : "RadixSort",
      "info" : "METHOD_INVOCATION_RECEIVER[24134-24143]:METHOD_INVOCATION_RECEIVER[9962-9971]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[24178-24270]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"RadixSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[24230-24270]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"RadixSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[24249-24268]:StringLiteral[5531-5541]"
    }, {
      "left" : "aRadix",
      "right" : "aInsertion",
      "info" : "SimpleName[24283-24289]:SimpleName[5552-5562]"
    }, {
      "left" : "aRadix = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[24283-24310]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out.println(\"Sorted: RadixSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[24380-24453]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[24380-24390]:METHOD_INVOCATION_RECEIVER[13607-13617]"
    }, {
      "left" : "\"Sorted: RadixSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[24399-24419]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[24466-24525]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[24498-24525]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[24621-24640]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bRadix",
      "right" : "bInsertion",
      "info" : "SimpleName[24654-24660]:SimpleName[5874-5884]"
    }, {
      "left" : "bRadix = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[24654-24681]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "RadixSort",
      "right" : "RadixSort",
      "info" : "METHOD_INVOCATION_RECEIVER[24703-24712]:METHOD_INVOCATION_RECEIVER[9962-9971]"
    }, {
      "left" : "reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[24718-24733]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[24748-24840]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"RadixSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[24800-24840]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"RadixSort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[24819-24838]:StringLiteral[6054-6070]"
    }, {
      "left" : "aRadix",
      "right" : "aInsertion",
      "info" : "SimpleName[24853-24859]:SimpleName[6081-6091]"
    }, {
      "left" : "aRadix = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[24853-24880]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: RadixSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[24950-25031]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[24950-24960]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: RadixSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[24969-24997]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[25044-25104]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[25076-25104]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[25200-25219]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[25233-25254]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[25267-25286]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "long bRadix = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[25376-25408]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "bRadix",
      "right" : "bInsertion",
      "info" : "SimpleName[25381-25387]:SimpleName[4809-4819]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[25421-25430]:ArrayType[4727-4736]"
    }, {
      "left" : "result = AmericanFlagSort.sort(unsorted.clone())",
      "right" : "result = testable.sort(unsorted.clone())",
      "info" : "VariableDeclarationFragment[25431-25479]:VariableDeclarationFragment[4859-4899]"
    }, {
      "left" : "AmericanFlagSort",
      "right" : "AmericanFlagSort",
      "info" : "METHOD_INVOCATION_RECEIVER[25440-25456]:METHOD_INVOCATION_RECEIVER[6988-7004]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[25493-25593]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"AmericanFlag sort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[25545-25593]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "\"AmericanFlag sort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[25564-25591]:StringLiteral[4995-5005]"
    }, {
      "left" : "long aRadix = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[25606-25638]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "aRadix",
      "right" : "aInsertion",
      "info" : "SimpleName[25611-25617]:SimpleName[5021-5031]"
    }, {
      "left" : "System.out.println(\"Random: AmericanFlag sort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[25715-25796]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[25715-25725]:METHOD_INVOCATION_RECEIVER[13556-13566]"
    }, {
      "left" : "\"Random: AmericanFlag sort=\"",
      "right" : "\"Random: \"",
      "info" : "StringLiteral[25734-25762]:StringLiteral[5148-5158]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[25809-25870]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[25841-25870]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "americanFlagResults",
      "right" : "americanFlagResults",
      "info" : "SimpleName[25919-25938]:SimpleName[4597-4616]"
    }, {
      "left" : "americanFlagCount",
      "right" : "americanFlagCount",
      "info" : "SimpleName[25939-25956]:SimpleName[4618-4635]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[25980-25999]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bRadix",
      "right" : "bInsertion",
      "info" : "SimpleName[26013-26019]:SimpleName[5352-5362]"
    }, {
      "left" : "bRadix = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[26013-26040]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "result = AmericanFlagSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[26053-26100]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "AmericanFlagSort",
      "right" : "AmericanFlagSort",
      "info" : "METHOD_INVOCATION_RECEIVER[26062-26078]:METHOD_INVOCATION_RECEIVER[6988-7004]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[26113-26213]:IfStatement[5445-5543]"
    }, {
      "left" : "System.err.println(\"AmericanFlag sort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[26165-26213]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "\"AmericanFlag sort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[26184-26211]:StringLiteral[5531-5541]"
    }, {
      "left" : "aRadix",
      "right" : "aInsertion",
      "info" : "SimpleName[26226-26232]:SimpleName[5552-5562]"
    }, {
      "left" : "aRadix = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[26226-26253]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "System.out.println(\"Sorted: AmericanFlag sort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[26323-26404]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[26323-26333]:METHOD_INVOCATION_RECEIVER[13607-13617]"
    }, {
      "left" : "\"Sorted: AmericanFlag sort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[26342-26370]:StringLiteral[5672-5682]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[26417-26476]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[26449-26476]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[26586-26605]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bRadix",
      "right" : "bInsertion",
      "info" : "SimpleName[26619-26625]:SimpleName[5874-5884]"
    }, {
      "left" : "bRadix = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[26619-26646]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "AmericanFlagSort",
      "right" : "AmericanFlagSort",
      "info" : "METHOD_INVOCATION_RECEIVER[26668-26684]:METHOD_INVOCATION_RECEIVER[6988-7004]"
    }, {
      "left" : "reverse.clone()",
      "right" : "reverse.clone()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[26690-26705]:METHOD_INVOCATION_ARGUMENTS[5942-5957]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[26720-26820]:IfStatement[5968-6072]"
    }, {
      "left" : "System.err.println(\"AmericanFlag sort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[26772-26820]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "\"AmericanFlag sort failed.\"",
      "right" : "\"InsertionSort.\"",
      "info" : "StringLiteral[26791-26818]:StringLiteral[6054-6070]"
    }, {
      "left" : "aRadix",
      "right" : "aInsertion",
      "info" : "SimpleName[26833-26839]:SimpleName[6081-6091]"
    }, {
      "left" : "aRadix = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[26833-26860]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: AmericanFlag sort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[26930-27019]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[26930-26940]:METHOD_INVOCATION_RECEIVER[13372-13382]"
    }, {
      "left" : "\"Reverse sorted: AmericanFlag sort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[26949-26985]:StringLiteral[6201-6219]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[27032-27092]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[27064-27092]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[27202-27221]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[27235-27256]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[27269-27288]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[3053-3070]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[3214-3231]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[3370-3387]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[3630-3647]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[3977-3994]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[4128-4145]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[4299-4316]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[4455-4472]"
    }, {
      "left" : "showComparison();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[27340-27357]:ExpressionStatement[4646-4663]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27369-27376]:Modifier[10338-10345]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27377-27383]:Modifier[10346-10352]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[27384-27389]:Modifier[10353-10358]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27390-27394]:PrimitiveType[10359-10363]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[27395-27409]:SimpleName[10364-10378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27412-30418]:Block[10381-13424]"
    }, {
      "left" : "StringBuilder resultsBuilder = new StringBuilder();",
      "right" : "StringBuilder resultsBuilder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[27422-27473]:VariableDeclarationStatement[10391-10442]"
    }, {
      "left" : "String format = \"%-32s%-15s%-15s%-15s\\n\";",
      "right" : "String format = \"%-32s%-15s%-15s%-15s\\n\";",
      "info" : "VariableDeclarationStatement[27482-27523]:VariableDeclarationStatement[10533-10574]"
    }, {
      "left" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "right" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "info" : "VariableDeclarationStatement[27532-27595]:VariableDeclarationStatement[10583-10646]"
    }, {
      "left" : "formatter.format(format, \"Algorithm\",\"Random\",\"Sorted\",\"Reverse Sorted\");",
      "right" : "formatter.format(format, \"Algorithm\",\"Random\",\"Sorted\",\"Reverse Sorted\");",
      "info" : "ExpressionStatement[27605-27678]:ExpressionStatement[10656-10729]"
    }, {
      "left" : "if (showInsertion)",
      "right" : "if (insertionResults!=null)",
      "info" : "IfStatement[27687-27910]:IfStatement[10738-10970]"
    }, {
      "left" : "showInsertion",
      "right" : "insertionResults",
      "info" : "SimpleName[27691-27704]:SimpleName[10742-10758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27706-27910]:Block[7964-8012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27706-27910]:Block[10766-10970]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[27720-27730]:VariableDeclarationStatement[10780-10790]"
    }, {
      "left" : "formatter.format(format, \"Insertion sort\", FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]));",
      "right" : "formatter.format(format, \"Insertion sort\", FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]));",
      "info" : "ExpressionStatement[27743-27900]:ExpressionStatement[10803-10960]"
    }, {
      "left" : "\"Insertion sort\"",
      "right" : "\"Insertion sort\"",
      "info" : "StringLiteral[27768-27784]:StringLiteral[7985-8001]"
    }, {
      "left" : "if (showBubble)",
      "right" : "if (bubbleResults!=null)",
      "info" : "IfStatement[27919-28127]:IfStatement[10979-11196]"
    }, {
      "left" : "showBubble",
      "right" : "bubbleResults",
      "info" : "SimpleName[27923-27933]:SimpleName[10983-10996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27935-28127]:Block[7136-7181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27935-28127]:Block[11004-11196]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[27949-27959]:VariableDeclarationStatement[11018-11028]"
    }, {
      "left" : "formatter.format(format, \"Bubble sort\", FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]));",
      "right" : "formatter.format(format, \"Bubble sort\", FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]));",
      "info" : "ExpressionStatement[27972-28117]:ExpressionStatement[11041-11186]"
    }, {
      "left" : "\"Bubble sort\"",
      "right" : "\"Bubble sort\"",
      "info" : "StringLiteral[27997-28010]:StringLiteral[7157-7170]"
    }, {
      "left" : "if (showShell)",
      "right" : "if (shellResults!=null)",
      "info" : "IfStatement[28136-28339]:IfStatement[11205-11417]"
    }, {
      "left" : "showShell",
      "right" : "shellResults",
      "info" : "SimpleName[28140-28149]:SimpleName[11209-11221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28151-28339]:Block[10154-10198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28151-28339]:Block[11229-11417]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28165-28175]:VariableDeclarationStatement[11243-11253]"
    }, {
      "left" : "formatter.format(format, \"Shell sort\", FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]));",
      "right" : "formatter.format(format, \"Shell sort\", FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]));",
      "info" : "ExpressionStatement[28188-28329]:ExpressionStatement[11266-11407]"
    }, {
      "left" : "\"Shell sort\"",
      "right" : "\"Shell sort\"",
      "info" : "StringLiteral[28213-28225]:StringLiteral[10175-10187]"
    }, {
      "left" : "if (showMergeInPlace)",
      "right" : "if (mergeResults!=null)",
      "info" : "IfStatement[28348-28590]:IfStatement[11426-11818]"
    }, {
      "left" : "showMergeInPlace",
      "right" : "mergeResults",
      "info" : "SimpleName[28352-28368]:SimpleName[11430-11442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28370-28590]:Block[8251-8302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28370-28590]:Block[8571-8622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28370-28590]:Block[11450-11818]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28384-28394]:VariableDeclarationStatement[11243-11253]"
    }, {
      "left" : "formatter.format(format, \"Merge (in-place) sort\", FORMAT.format(mergeInPlaceResults[i++]), FORMAT.format(mergeInPlaceResults[i++]), FORMAT.format(mergeInPlaceResults[i++]));",
      "right" : "formatter.format(format, \"Merge (in-place) sort\", FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]));",
      "info" : "ExpressionStatement[28407-28580]:ExpressionStatement[11487-11639]"
    }, {
      "left" : "\"Merge (in-place) sort\"",
      "right" : "\"MergeInPlace sort\"",
      "info" : "StringLiteral[28432-28455]:StringLiteral[8272-8291]"
    }, {
      "left" : "\"Merge (in-place) sort\"",
      "right" : "\"MergeInPlace sort\"",
      "info" : "StringLiteral[28432-28455]:StringLiteral[8592-8611]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28471-28490]:SimpleName[11551-11563]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28512-28531]:SimpleName[11585-11597]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28553-28572]:SimpleName[11619-11631]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28638-28648]:VariableDeclarationStatement[11464-11474]"
    }, {
      "left" : "formatter.format(format, \"Merge (not-in-place) sort\", FORMAT.format(mergeNotInPlaceResults[i++]), FORMAT.format(mergeNotInPlaceResults[i++]), FORMAT.format(mergeNotInPlaceResults[i++]));",
      "right" : "formatter.format(format, \"Merge (not-in-place) sort\", FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]));",
      "info" : "ExpressionStatement[28661-28847]:ExpressionStatement[11652-11808]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28729-28751]:SimpleName[11720-11732]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28773-28795]:SimpleName[11754-11766]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28817-28839]:SimpleName[11788-11800]"
    }, {
      "left" : "if (showQuick)",
      "right" : "if (quickResults!=null)",
      "info" : "IfStatement[28866-29436]:IfStatement[11827-12406]"
    }, {
      "left" : "showQuick",
      "right" : "quickResults",
      "info" : "SimpleName[28870-28879]:SimpleName[11831-11843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28881-29436]:Block[8890-8942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28881-29436]:Block[9204-9257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28881-29436]:Block[9520-9573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28881-29436]:Block[11851-12406]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28895-28905]:VariableDeclarationStatement[11865-11875]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with first as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with first as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[28918-29078]:ExpressionStatement[11888-12048]"
    }, {
      "left" : "\"Quicksort with first as pivot\"",
      "right" : "\"Quick (first) sort\"",
      "info" : "StringLiteral[28943-28974]:StringLiteral[8911-8931]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with middle as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with middle as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[29091-29252]:ExpressionStatement[12061-12222]"
    }, {
      "left" : "\"Quicksort with middle as pivot\"",
      "right" : "\"Quick (middle) sort\"",
      "info" : "StringLiteral[29116-29148]:StringLiteral[9225-9246]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with random as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with random as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[29265-29426]:ExpressionStatement[12235-12396]"
    }, {
      "left" : "\"Quicksort with random as pivot\"",
      "right" : "\"Quick (random) sort\"",
      "info" : "StringLiteral[29290-29322]:StringLiteral[9541-9562]"
    }, {
      "left" : "if (showHeap)",
      "right" : "if (heapResults!=null)",
      "info" : "IfStatement[29445-29643]:IfStatement[12415-12622]"
    }, {
      "left" : "showHeap",
      "right" : "heapResults",
      "info" : "SimpleName[29449-29457]:SimpleName[12419-12430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29459-29643]:Block[7690-7733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29459-29643]:Block[12438-12622]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29473-29483]:VariableDeclarationStatement[12452-12462]"
    }, {
      "left" : "formatter.format(format, \"Heap sort\", FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]));",
      "right" : "formatter.format(format, \"Heap sort\", FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]));",
      "info" : "ExpressionStatement[29496-29633]:ExpressionStatement[12475-12612]"
    }, {
      "left" : "\"Heap sort\"",
      "right" : "\"Heap sort\"",
      "info" : "StringLiteral[29521-29532]:StringLiteral[7711-7722]"
    }, {
      "left" : "if (showCounting)",
      "right" : "if (countingResults!=null)",
      "info" : "IfStatement[29652-29870]:IfStatement[12631-12858]"
    }, {
      "left" : "showCounting",
      "right" : "countingResults",
      "info" : "SimpleName[29656-29668]:SimpleName[12635-12650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29670-29870]:Block[7413-7460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29670-29870]:Block[12658-12858]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29684-29694]:VariableDeclarationStatement[12672-12682]"
    }, {
      "left" : "formatter.format(format, \"Counting sort\", FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]));",
      "right" : "formatter.format(format, \"Counting sort\", FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]));",
      "info" : "ExpressionStatement[29707-29860]:ExpressionStatement[12695-12848]"
    }, {
      "left" : "\"Counting sort\"",
      "right" : "\"Counting sort\"",
      "info" : "StringLiteral[29732-29747]:StringLiteral[7434-7449]"
    }, {
      "left" : "if (showRadix)",
      "right" : "if (radixResults!=null)",
      "info" : "IfStatement[29879-30082]:IfStatement[12867-13079]"
    }, {
      "left" : "showRadix",
      "right" : "radixResults",
      "info" : "SimpleName[29883-29892]:SimpleName[12871-12883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29894-30082]:Block[9830-9874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29894-30082]:Block[12891-13079]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29908-29918]:VariableDeclarationStatement[12905-12915]"
    }, {
      "left" : "formatter.format(format, \"Radix sort\", FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]));",
      "right" : "formatter.format(format, \"Radix sort\", FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]));",
      "info" : "ExpressionStatement[29931-30072]:ExpressionStatement[12928-13069]"
    }, {
      "left" : "\"Radix sort\"",
      "right" : "\"Radix sort\"",
      "info" : "StringLiteral[29956-29968]:StringLiteral[9851-9863]"
    }, {
      "left" : "if (showAmericanFlag)",
      "right" : "if (americanFlagResults!=null)",
      "info" : "IfStatement[30091-30330]:IfStatement[13088-13336]"
    }, {
      "left" : "showAmericanFlag",
      "right" : "americanFlagResults",
      "info" : "SimpleName[30095-30111]:SimpleName[13092-13111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30113-30330]:Block[6849-6900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30113-30330]:Block[13119-13336]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[30127-30137]:VariableDeclarationStatement[13133-13143]"
    }, {
      "left" : "formatter.format(format, \"American Flag sort\", FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]));",
      "right" : "formatter.format(format, \"American Flag sort\", FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]));",
      "info" : "ExpressionStatement[30150-30320]:ExpressionStatement[13156-13326]"
    }, {
      "left" : "\"American Flag sort\"",
      "right" : "\"AmericanFlag sort\"",
      "info" : "StringLiteral[30175-30195]:StringLiteral[6870-6889]"
    }, {
      "left" : "formatter.close();",
      "right" : "formatter.close();",
      "info" : "ExpressionStatement[30339-30357]:ExpressionStatement[13345-13363]"
    }, {
      "left" : "System.out.println(resultsBuilder.toString());",
      "right" : "System.out.println(resultsBuilder.toString());",
      "info" : "ExpressionStatement[30366-30412]:ExpressionStatement[13372-13418]"
    }, {
      "left" : "resultsBuilder.toString()",
      "right" : "resultsBuilder.append(\"Number of integers = \")",
      "info" : "MethodInvocation[30385-30410]:MethodInvocation[10451-10497]"
    }, {
      "left" : "toString",
      "right" : "append",
      "info" : "SimpleName[30400-30408]:SimpleName[10466-10472]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30424-30431]:Modifier[13430-13437]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30432-30438]:Modifier[13438-13444]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30439-30444]:Modifier[13445-13450]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30445-30449]:PrimitiveType[13451-13455]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[30450-30460]:SimpleName[13456-13466]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[6950-6965]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[7231-7246]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[7510-7525]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[7783-7798]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[8062-8077]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[8352-8367]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[8672-8687]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[8992-9007]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[9307-9322]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[9623-9638]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[9924-9939]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] u",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[13467-13478]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[6960-6965]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[7241-7246]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[7520-7525]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[7793-7798]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[8072-8077]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[8362-8367]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[8682-8687]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[9002-9007]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[9317-9322]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[9633-9638]"
    }, {
      "left" : "u",
      "right" : "input",
      "info" : "SimpleName[30471-30472]:SimpleName[9934-9939]"
    }, {
      "left" : "Integer[] r",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30474-30485]:SingleVariableDeclaration[6717-6732]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[30474-30483]:ArrayType[8977-8986]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[30474-30483]:ArrayType[9292-9301]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[30474-30483]:ArrayType[9608-9617]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[30474-30483]:ArrayType[9909-9918]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[30474-30483]:ArrayType[10233-10242]"
    }, {
      "left" : "Integer[] r",
      "right" : "Integer[] r",
      "info" : "SingleVariableDeclaration[30474-30485]:SingleVariableDeclaration[13480-13491]"
    }, {
      "left" : "r",
      "right" : "input",
      "info" : "SimpleName[30484-30485]:SimpleName[6727-6732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30487-30626]:Block[13493-13632]"
    }, {
      "left" : "System.out.println(\"Unsorted: \" + print(u));",
      "right" : "System.out.println(\"Unsorted: \" + print(u));",
      "info" : "ExpressionStatement[30497-30541]:ExpressionStatement[13503-13547]"
    }, {
      "left" : "System.out.println(\"Sorted: \" + print(r));",
      "right" : "System.out.println(\"Sorted: \" + print(r));",
      "info" : "ExpressionStatement[30550-30592]:ExpressionStatement[13556-13598]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[30601-30620]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30632-30639]:Modifier[13638-13645]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30640-30646]:Modifier[13646-13652]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30647-30652]:Modifier[13653-13658]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[30653-30660]:PrimitiveType[13659-13666]"
    }, {
      "left" : "check",
      "right" : "check",
      "info" : "SimpleName[30661-30666]:SimpleName[13667-13672]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[30667-30676]:ArrayType[6702-6711]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30667-30682]:SingleVariableDeclaration[13673-13688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30684-30842]:Block[13690-13848]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[30694-30815]:ForStatement[13700-13821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30733-30815]:Block[13739-13821]"
    }, {
      "left" : "if (array[i - 1] > array[i])",
      "right" : "if (array[i - 1] > array[i])",
      "info" : "IfStatement[30747-30805]:IfStatement[13753-13811]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[30792-30805]:ReturnStatement[13798-13811]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[30824-30836]:ReturnStatement[13830-13842]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30848-30854]:Modifier[6573-6579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30848-30854]:Modifier[13854-13860]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30855-30861]:Modifier[13861-13867]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30862-30867]:Modifier[13868-13873]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[6660-6666]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[6832-6838]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[7119-7125]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[7396-7402]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[7673-7679]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[7947-7953]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[8234-8240]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[8554-8560]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[8873-8879]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[9187-9193]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[9503-9509]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[9813-9819]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[10137-10143]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[13874-13880]"
    }, {
      "left" : "print",
      "right" : "getInput",
      "info" : "SimpleName[30875-30880]:SimpleName[6587-6595]"
    }, {
      "left" : "print",
      "right" : "print",
      "info" : "SimpleName[30875-30880]:SimpleName[13881-13886]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] input",
      "info" : "SingleVariableDeclaration[30881-30896]:SingleVariableDeclaration[10248-10263]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30881-30896]:SingleVariableDeclaration[13887-13902]"
    }, {
      "left" : "array",
      "right" : "input",
      "info" : "SimpleName[30891-30896]:SimpleName[10258-10263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30898-30951]:Block[6598-6635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30898-30951]:Block[13904-13957]"
    }, {
      "left" : "return print(array, 0, array.length);",
      "right" : "return input;",
      "info" : "ReturnStatement[30908-30945]:ReturnStatement[6612-6625]"
    }, {
      "left" : "return print(array, 0, array.length);",
      "right" : "return print(array, 0, array.length);",
      "info" : "ReturnStatement[30908-30945]:ReturnStatement[13914-13951]"
    }, {
      "left" : "print",
      "right" : "input",
      "info" : "SimpleName[30915-30920]:SimpleName[6619-6624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30957-30963]:Modifier[6644-6650]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30957-30963]:Modifier[13963-13969]"
    }, {
      "left" : "static",
      "right" : "abstract",
      "info" : "Modifier[30964-30970]:Modifier[6651-6659]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30964-30970]:Modifier[13970-13976]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30971-30976]:Modifier[13977-13982]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30977-30983]:SimpleType[6580-6586]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30977-30983]:SimpleType[13983-13989]"
    }, {
      "left" : "print",
      "right" : "print",
      "info" : "SimpleName[30984-30989]:SimpleName[13990-13995]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30990-31005]:SingleVariableDeclaration[13996-14011]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[31007-31016]:SingleVariableDeclaration[14013-14022]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[31018-31028]:SingleVariableDeclaration[14024-14034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31030-31300]:Block[14036-14306]"
    }, {
      "left" : "final Integer[] clone = array.clone();",
      "right" : "final Integer[] clone = array.clone();",
      "info" : "VariableDeclarationStatement[31040-31078]:VariableDeclarationStatement[14046-14084]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31087-31131]:VariableDeclarationStatement[14093-14137]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[31140-31259]:ForStatement[14146-14265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31173-31259]:Block[14179-14265]"
    }, {
      "left" : "int e = clone[start + i];",
      "right" : "int e = clone[start + i];",
      "info" : "VariableDeclarationStatement[31187-31212]:VariableDeclarationStatement[14193-14218]"
    }, {
      "left" : "e",
      "right" : "getName",
      "info" : "SimpleName[31191-31192]:SimpleName[6667-6674]"
    }, {
      "left" : "builder.append(e + \" \");",
      "right" : "builder.append(e + \" \");",
      "info" : "ExpressionStatement[31225-31249]:ExpressionStatement[14231-14255]"
    }, {
      "left" : "e + \" \"",
      "right" : "\"Number of integers = \"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[31240-31247]:METHOD_INVOCATION_ARGUMENTS[10473-10496]"
    }, {
      "left" : "\" \"",
      "right" : "\"Number of integers = \"",
      "info" : "StringLiteral[31244-31247]:StringLiteral[10473-10496]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[31268-31294]:ReturnStatement[14274-14300]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31306-31312]:Modifier[6686-6692]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31306-31312]:Modifier[14312-14318]"
    }, {
      "left" : "static",
      "right" : "abstract",
      "info" : "Modifier[31313-31319]:Modifier[6693-6701]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31313-31319]:Modifier[14319-14325]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31320-31325]:Modifier[14326-14331]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31326-31332]:SimpleType[6544-6550]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31326-31332]:SimpleType[14332-14338]"
    }, {
      "left" : "printWithPivot",
      "right" : "printWithPivot",
      "info" : "SimpleName[31333-31347]:SimpleName[14339-14353]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[31348-31363]:SingleVariableDeclaration[14354-14369]"
    }, {
      "left" : "int pivotIndex",
      "right" : "int pivotIndex",
      "info" : "SingleVariableDeclaration[31365-31379]:SingleVariableDeclaration[14371-14385]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[31381-31390]:SingleVariableDeclaration[14387-14396]"
    }, {
      "left" : "start",
      "right" : "sort",
      "info" : "SimpleName[31385-31390]:SimpleName[6712-6716]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[31392-31402]:SingleVariableDeclaration[14398-14408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31404-31776]:Block[14410-14782]"
    }, {
      "left" : "final Integer[] clone = array.clone();",
      "right" : "final Integer[] clone = array.clone();",
      "info" : "VariableDeclarationStatement[31414-31452]:VariableDeclarationStatement[14420-14458]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31461-31505]:VariableDeclarationStatement[14467-14511]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[31514-31735]:ForStatement[14520-14741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31547-31735]:Block[14553-14741]"
    }, {
      "left" : "int e = clone[start + i];",
      "right" : "int e = clone[start + i];",
      "info" : "VariableDeclarationStatement[31561-31586]:VariableDeclarationStatement[14567-14592]"
    }, {
      "left" : "if (i == pivotIndex)",
      "right" : "if (i == pivotIndex)",
      "info" : "IfStatement[31599-31725]:IfStatement[14605-14731]"
    }, {
      "left" : "builder.append(\"`\" + e + \"` \");",
      "right" : "builder.append(\"`\" + e + \"` \");",
      "info" : "ExpressionStatement[31636-31667]:ExpressionStatement[14642-14673]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[31644-31650]:SimpleName[10498-10504]"
    }, {
      "left" : "\"`\" + e + \"` \"",
      "right" : "SIZE",
      "info" : "METHOD_INVOCATION_ARGUMENTS[31651-31665]:METHOD_INVOCATION_ARGUMENTS[10505-10509]"
    }, {
      "left" : "e",
      "right" : "SIZE",
      "info" : "SimpleName[31657-31658]:SimpleName[10505-10509]"
    }, {
      "left" : "builder.append(e + \" \");",
      "right" : "builder.append(e + \" \");",
      "info" : "ExpressionStatement[31701-31725]:ExpressionStatement[14707-14731]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[31709-31715]:SimpleName[10511-10517]"
    }, {
      "left" : "e + \" \"",
      "right" : "\"\\n\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[31716-31723]:METHOD_INVOCATION_ARGUMENTS[10518-10522]"
    }, {
      "left" : "\" \"",
      "right" : "\"\\n\"",
      "info" : "StringLiteral[31720-31723]:StringLiteral[10518-10522]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[31744-31770]:ReturnStatement[14750-14776]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[31782-31789]:Modifier[14788-14795]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31790-31796]:Modifier[14796-14802]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31797-31802]:Modifier[14803-14808]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31803-31807]:PrimitiveType[14809-14813]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[31808-31824]:SimpleName[14814-14830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31827-31912]:Block[14833-14918]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31837-31854]:ExpressionStatement[14843-14860]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31863-31880]:ExpressionStatement[14869-14886]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31889-31906]:ExpressionStatement[14895-14912]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[31972-31979]:Modifier[14978-14985]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31980-31986]:Modifier[14986-14992]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31987-31992]:Modifier[14993-14998]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31993-31997]:PrimitiveType[14999-15003]"
    }, {
      "left" : "collectGarbage",
      "right" : "collectGarbage",
      "info" : "SimpleName[31998-32012]:SimpleName[15004-15018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32015-32323]:Block[15021-15329]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32025-32317]:TryStatement[15031-15323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32029-32239]:Block[15035-15245]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32043-32055]:ExpressionStatement[15049-15061]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32068-32080]:ExpressionStatement[15074-15086]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32093-32105]:ExpressionStatement[15099-15111]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[32118-32148]:ExpressionStatement[15124-15154]"
    }, {
      "left" : "System.runFinalization();",
      "right" : "System.runFinalization();",
      "info" : "ExpressionStatement[32161-32186]:ExpressionStatement[15167-15192]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[32199-32229]:ExpressionStatement[15205-15235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32272-32317]:Block[15278-15323]"
    }, {
      "left" : "ex.printStackTrace();",
      "right" : "ex.printStackTrace();",
      "info" : "ExpressionStatement[32286-32307]:ExpressionStatement[15292-15313]"
    } ]
  },
  "interFileMappings" : { }
}