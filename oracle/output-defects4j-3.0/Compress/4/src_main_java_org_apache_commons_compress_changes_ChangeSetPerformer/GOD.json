{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ChangeSetPerformer",
      "right" : "ChangeSetPerformer",
      "info" : "TypeDeclaration[1231-6526]:TypeDeclaration[1231-6548]"
    }, {
      "left" : "private final Set changes;",
      "right" : "private final Set changes;",
      "info" : "FieldDeclaration[1522-1548]:FieldDeclaration[1522-1548]"
    }, {
      "left" : "public ChangeSetPerformer(final ChangeSet changeSet)",
      "right" : "public ChangeSetPerformer(final ChangeSet changeSet)",
      "info" : "MethodDeclaration[1558-1831]:MethodDeclaration[1558-1831]"
    }, {
      "left" : "public ChangeSetResults perform(ArchiveInputStream in, ArchiveOutputStream out)\n            throws IOException",
      "right" : "public ChangeSetResults perform(ArchiveInputStream in, ArchiveOutputStream out)\n            throws IOException",
      "info" : "MethodDeclaration[1841-4906]:MethodDeclaration[1841-4928]"
    }, {
      "left" : "private boolean isDeletedLater(Set workingSet, ArchiveEntry entry)",
      "right" : "private boolean isDeletedLater(Set workingSet, ArchiveEntry entry)",
      "info" : "MethodDeclaration[4912-5946]:MethodDeclaration[4934-5968]"
    }, {
      "left" : "private void copyStream(InputStream in, ArchiveOutputStream out,\n            ArchiveEntry entry) throws IOException",
      "right" : "private void copyStream(InputStream in, ArchiveOutputStream out,\n            ArchiveEntry entry) throws IOException",
      "info" : "MethodDeclaration[5952-6524]:MethodDeclaration[5974-6546]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1484-1490]:Modifier[1484-1490]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1491-1496]:TYPE_DECLARATION_KIND[1491-1496]"
    }, {
      "left" : "ChangeSetPerformer",
      "right" : "ChangeSetPerformer",
      "info" : "SimpleName[1497-1515]:SimpleName[1497-1515]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1729-1735]:Modifier[1729-1735]"
    }, {
      "left" : "ChangeSetPerformer",
      "right" : "ChangeSetPerformer",
      "info" : "SimpleName[1736-1754]:SimpleName[1736-1754]"
    }, {
      "left" : "final ChangeSet changeSet",
      "right" : "final ChangeSet changeSet",
      "info" : "SingleVariableDeclaration[1755-1780]:SingleVariableDeclaration[1755-1780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1782-1831]:Block[1782-1831]"
    }, {
      "left" : "changes = changeSet.getChanges();",
      "right" : "changes = changeSet.getChanges();",
      "info" : "ExpressionStatement[1792-1825]:ExpressionStatement[1792-1825]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2415-2421]:Modifier[2415-2421]"
    }, {
      "left" : "ChangeSetResults",
      "right" : "ChangeSetResults",
      "info" : "SimpleType[2422-2438]:SimpleType[2422-2438]"
    }, {
      "left" : "perform",
      "right" : "perform",
      "info" : "SimpleName[2439-2446]:SimpleName[2439-2446]"
    }, {
      "left" : "ArchiveInputStream in",
      "right" : "ArchiveInputStream in",
      "info" : "SingleVariableDeclaration[2447-2468]:SingleVariableDeclaration[2447-2468]"
    }, {
      "left" : "ArchiveOutputStream out",
      "right" : "ArchiveOutputStream out",
      "info" : "SingleVariableDeclaration[2470-2493]:SingleVariableDeclaration[2470-2493]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2514-2525]:SimpleType[2514-2525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2526-4906]:Block[2526-4928]"
    }, {
      "left" : "ChangeSetResults results = new ChangeSetResults();",
      "right" : "ChangeSetResults results = new ChangeSetResults();",
      "info" : "VariableDeclarationStatement[2536-2586]:VariableDeclarationStatement[2536-2586]"
    }, {
      "left" : "Set workingSet = new LinkedHashSet(changes);",
      "right" : "Set workingSet = new LinkedHashSet(changes);",
      "info" : "VariableDeclarationStatement[2604-2648]:VariableDeclarationStatement[2604-2648]"
    }, {
      "left" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "right" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "info" : "ForStatement[2666-3048]:ForStatement[2666-3048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2723-3048]:Block[2723-3048]"
    }, {
      "left" : "Change change = (Change) it.next();",
      "right" : "Change change = (Change) it.next();",
      "info" : "VariableDeclarationStatement[2737-2772]:VariableDeclarationStatement[2737-2772]"
    }, {
      "left" : "if (change.type() == Change.TYPE_ADD && change.isReplaceMode())",
      "right" : "if (change.type() == Change.TYPE_ADD && change.isReplaceMode())",
      "info" : "IfStatement[2786-3038]:IfStatement[2786-3038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2850-3038]:Block[2850-3038]"
    }, {
      "left" : "copyStream(change.getInput(), out, change.getEntry());",
      "right" : "copyStream(change.getInput(), out, change.getEntry());",
      "info" : "ExpressionStatement[2868-2922]:ExpressionStatement[2868-2922]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[2939-2951]:ExpressionStatement[2939-2951]"
    }, {
      "left" : "results.addedFromChangeSet(change.getEntry().getName());",
      "right" : "results.addedFromChangeSet(change.getEntry().getName());",
      "info" : "ExpressionStatement[2968-3024]:ExpressionStatement[2968-3024]"
    }, {
      "left" : "ArchiveEntry entry = null;",
      "right" : "ArchiveEntry entry = null;",
      "info" : "VariableDeclarationStatement[3058-3084]:VariableDeclarationStatement[3058-3084]"
    }, {
      "left" : "while ((entry = in.getNextEntry()) != null)",
      "right" : "while ((entry = in.getNextEntry()) != null)",
      "info" : "WhileStatement[3093-4291]:WhileStatement[3093-4291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3137-4291]:Block[3137-4291]"
    }, {
      "left" : "boolean copy = true;",
      "right" : "boolean copy = true;",
      "info" : "VariableDeclarationStatement[3151-3171]:VariableDeclarationStatement[3151-3171]"
    }, {
      "left" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "right" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "info" : "ForStatement[3185-4014]:ForStatement[3185-4014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3242-4014]:Block[3242-4014]"
    }, {
      "left" : "Change change = (Change) it.next();",
      "right" : "Change change = (Change) it.next();",
      "info" : "VariableDeclarationStatement[3260-3295]:VariableDeclarationStatement[3260-3295]"
    }, {
      "left" : "final int type = change.type();",
      "right" : "final int type = change.type();",
      "info" : "VariableDeclarationStatement[3313-3344]:VariableDeclarationStatement[3313-3344]"
    }, {
      "left" : "final String name = entry.getName();",
      "right" : "final String name = entry.getName();",
      "info" : "VariableDeclarationStatement[3361-3397]:VariableDeclarationStatement[3361-3397]"
    }, {
      "left" : "if (type == Change.TYPE_DELETE && name != null)",
      "right" : "if (type == Change.TYPE_DELETE && name != null)",
      "info" : "IfStatement[3414-4000]:IfStatement[3414-4000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3462-3716]:Block[3462-3716]"
    }, {
      "left" : "if (name.equals(change.targetFile()))",
      "right" : "if (name.equals(change.targetFile()))",
      "info" : "IfStatement[3484-3698]:IfStatement[3484-3698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3522-3698]:Block[3522-3698]"
    }, {
      "left" : "copy = false;",
      "right" : "copy = false;",
      "info" : "ExpressionStatement[3548-3561]:ExpressionStatement[3548-3561]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[3586-3598]:ExpressionStatement[3586-3598]"
    }, {
      "left" : "results.deleted(name);",
      "right" : "results.deleted(name);",
      "info" : "ExpressionStatement[3623-3645]:ExpressionStatement[3623-3645]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3670-3676]:BreakStatement[3670-3676]"
    }, {
      "left" : "if(type == Change.TYPE_DELETE_DIR && name != null)",
      "right" : "if(type == Change.TYPE_DELETE_DIR && name != null)",
      "info" : "IfStatement[3722-4000]:IfStatement[3722-4000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3773-4000]:Block[3773-4000]"
    }, {
      "left" : "if (name.startsWith(change.targetFile() + \"/\"))",
      "right" : "if (name.startsWith(change.targetFile() + \"/\"))",
      "info" : "IfStatement[3795-3982]:IfStatement[3795-3982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3843-3982]:Block[3843-3982]"
    }, {
      "left" : "copy = false;",
      "right" : "copy = false;",
      "info" : "ExpressionStatement[3869-3882]:ExpressionStatement[3869-3882]"
    }, {
      "left" : "results.deleted(name);",
      "right" : "results.deleted(name);",
      "info" : "ExpressionStatement[3907-3929]:ExpressionStatement[3907-3929]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3954-3960]:BreakStatement[3954-3960]"
    }, {
      "left" : "if (copy)",
      "right" : "if (copy)",
      "info" : "IfStatement[4028-4281]:IfStatement[4028-4281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4038-4281]:Block[4038-4281]"
    }, {
      "left" : "if (!isDeletedLater(workingSet, entry) && !results.hasBeenAdded(entry.getName()))",
      "right" : "if (!isDeletedLater(workingSet, entry) && !results.hasBeenAdded(entry.getName()))",
      "info" : "IfStatement[4056-4267]:IfStatement[4056-4267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4138-4267]:Block[4138-4267]"
    }, {
      "left" : "copyStream(in, out, entry);",
      "right" : "copyStream(in, out, entry);",
      "info" : "ExpressionStatement[4160-4187]:ExpressionStatement[4160-4187]"
    }, {
      "left" : "results.addedFromStream(entry.getName());",
      "right" : "results.addedFromStream(entry.getName());",
      "info" : "ExpressionStatement[4208-4249]:ExpressionStatement[4208-4249]"
    }, {
      "left" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "right" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "info" : "ForStatement[4405-4876]:ForStatement[4405-4876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4462-4876]:Block[4462-4876]"
    }, {
      "left" : "Change change = (Change) it.next();",
      "right" : "Change change = (Change) it.next();",
      "info" : "VariableDeclarationStatement[4476-4511]:VariableDeclarationStatement[4476-4511]"
    }, {
      "left" : "if (change.type() == Change.TYPE_ADD && \n                !change.isReplaceMode() && \n                !results.hasBeenAdded(change.getEntry().getName()))",
      "right" : "if (change.type() == Change.TYPE_ADD && \n                !change.isReplaceMode() && \n                !results.hasBeenAdded(change.getEntry().getName()))",
      "info" : "IfStatement[4525-4866]:IfStatement[4525-4866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4678-4866]:Block[4678-4866]"
    }, {
      "left" : "copyStream(change.getInput(), out, change.getEntry());",
      "right" : "copyStream(change.getInput(), out, change.getEntry());",
      "info" : "ExpressionStatement[4696-4750]:ExpressionStatement[4696-4750]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[4767-4779]:ExpressionStatement[4767-4779]"
    }, {
      "left" : "results.addedFromChangeSet(change.getEntry().getName());",
      "right" : "results.addedFromChangeSet(change.getEntry().getName());",
      "info" : "ExpressionStatement[4796-4852]:ExpressionStatement[4796-4852]"
    }, {
      "left" : "return results;",
      "right" : "return results;",
      "info" : "ReturnStatement[4885-4900]:ReturnStatement[4907-4922]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5257-5264]:Modifier[5279-5286]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5265-5272]:PrimitiveType[5287-5294]"
    }, {
      "left" : "isDeletedLater",
      "right" : "isDeletedLater",
      "info" : "SimpleName[5273-5287]:SimpleName[5295-5309]"
    }, {
      "left" : "Set workingSet",
      "right" : "Set workingSet",
      "info" : "SingleVariableDeclaration[5288-5302]:SingleVariableDeclaration[5310-5324]"
    }, {
      "left" : "ArchiveEntry entry",
      "right" : "ArchiveEntry entry",
      "info" : "SingleVariableDeclaration[5304-5322]:SingleVariableDeclaration[5326-5344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5324-5946]:Block[5346-5968]"
    }, {
      "left" : "String source = entry.getName();",
      "right" : "String source = entry.getName();",
      "info" : "VariableDeclarationStatement[5334-5366]:VariableDeclarationStatement[5356-5388]"
    }, {
      "left" : "if (!workingSet.isEmpty())",
      "right" : "if (!workingSet.isEmpty())",
      "info" : "IfStatement[5376-5918]:IfStatement[5398-5940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5403-5918]:Block[5425-5940]"
    }, {
      "left" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "right" : "for (Iterator it = workingSet.iterator(); it.hasNext())",
      "info" : "ForStatement[5417-5908]:ForStatement[5439-5930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5474-5908]:Block[5496-5930]"
    }, {
      "left" : "Change change = (Change) it.next();",
      "right" : "Change change = (Change) it.next();",
      "info" : "VariableDeclarationStatement[5492-5527]:VariableDeclarationStatement[5514-5549]"
    }, {
      "left" : "final int type = change.type();",
      "right" : "final int type = change.type();",
      "info" : "VariableDeclarationStatement[5544-5575]:VariableDeclarationStatement[5566-5597]"
    }, {
      "left" : "String target = change.targetFile();",
      "right" : "String target = change.targetFile();",
      "info" : "VariableDeclarationStatement[5592-5628]:VariableDeclarationStatement[5614-5650]"
    }, {
      "left" : "if (type == Change.TYPE_DELETE && source.equals(target))",
      "right" : "if (type == Change.TYPE_DELETE && source.equals(target))",
      "info" : "IfStatement[5645-5754]:IfStatement[5667-5776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5702-5754]:Block[5724-5776]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5724-5736]:ReturnStatement[5746-5758]"
    }, {
      "left" : "if (type == Change.TYPE_DELETE_DIR && source.startsWith(target + \"/\"))",
      "right" : "if (type == Change.TYPE_DELETE_DIR && source.startsWith(target + \"/\"))",
      "info" : "IfStatement[5772-5894]:IfStatement[5794-5916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5842-5894]:Block[5864-5916]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5864-5876]:ReturnStatement[5886-5898]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5927-5940]:ReturnStatement[5949-5962]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6301-6308]:Modifier[6323-6330]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6309-6313]:PrimitiveType[6331-6335]"
    }, {
      "left" : "copyStream",
      "right" : "copyStream",
      "info" : "SimpleName[6314-6324]:SimpleName[6336-6346]"
    }, {
      "left" : "InputStream in",
      "right" : "InputStream in",
      "info" : "SingleVariableDeclaration[6325-6339]:SingleVariableDeclaration[6347-6361]"
    }, {
      "left" : "ArchiveOutputStream out",
      "right" : "ArchiveOutputStream out",
      "info" : "SingleVariableDeclaration[6341-6364]:SingleVariableDeclaration[6363-6386]"
    }, {
      "left" : "ArchiveEntry entry",
      "right" : "ArchiveEntry entry",
      "info" : "SingleVariableDeclaration[6378-6396]:SingleVariableDeclaration[6400-6418]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[6405-6416]:SimpleType[6427-6438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6417-6524]:Block[6439-6546]"
    }, {
      "left" : "out.putArchiveEntry(entry);",
      "right" : "out.putArchiveEntry(entry);",
      "info" : "ExpressionStatement[6427-6454]:ExpressionStatement[6449-6476]"
    }, {
      "left" : "IOUtils.copy(in, out);",
      "right" : "IOUtils.copy(in, out);",
      "info" : "ExpressionStatement[6463-6485]:ExpressionStatement[6485-6507]"
    }, {
      "left" : "out.closeArchiveEntry();",
      "right" : "out.closeArchiveEntry();",
      "info" : "ExpressionStatement[6494-6518]:ExpressionStatement[6516-6540]"
    } ]
  },
  "interFileMappings" : { }
}