{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[473-1554]:MethodDeclaration[473-1554]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[1587-2449]:MethodDeclaration[1587-2449]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[2459-2640]:MethodDeclaration[2459-2640]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[2673-3798]:MethodDeclaration[2673-3798]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[3827-6785]:MethodDeclaration[3827-6785]"
    }, {
      "left" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "info" : "MethodDeclaration[6795-6932]:MethodDeclaration[6795-6932]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[6969-8042]:MethodDeclaration[6969-8042]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[8052-8239]:MethodDeclaration[8052-8239]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[8271-10050]:MethodDeclaration[8271-10050]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[10060-10236]:MethodDeclaration[10060-10236]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[39445-40091]:MethodDeclaration[39568-40214]"
    }, {
      "left" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "info" : "MethodDeclaration[49787-50033]:MethodDeclaration[49935-50181]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[50067-52161]:MethodDeclaration[50215-52309]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[52597-52709]:MethodDeclaration[52770-52882]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[52737-54809]:MethodDeclaration[52910-54982]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[54819-54931]:MethodDeclaration[54992-55104]"
    }, {
      "left" : "private boolean handleMissingTr(Token t, TreeBuilder tb)",
      "right" : "private boolean handleMissingTr(Token t, TreeBuilder tb)",
      "info" : "MethodDeclaration[54941-55177]:MethodDeclaration[55114-55350]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[57068-57179]:MethodDeclaration[57243-57354]"
    }, {
      "left" : "private void closeCell(HtmlTreeBuilder tb)",
      "right" : "private void closeCell(HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[57189-57413]:MethodDeclaration[57364-57588]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[61470-61593]:MethodDeclaration[61661-61784]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[61631-62424]:MethodDeclaration[61822-62615]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[62456-63465]:MethodDeclaration[62647-63656]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[65323-66255]:MethodDeclaration[65528-66460]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[66292-66834]:MethodDeclaration[66497-67039]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[66875-67507]:MethodDeclaration[67080-67712]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[67544-67683]:MethodDeclaration[67749-67888]"
    }, {
      "left" : "private static String nullString = String.valueOf('\\u0000');",
      "right" : "private static String nullString = String.valueOf('\\u0000');",
      "info" : "FieldDeclaration[67696-67756]:FieldDeclaration[67901-67961]"
    }, {
      "left" : "abstract boolean process(Token t, HtmlTreeBuilder tb);",
      "right" : "abstract boolean process(Token t, HtmlTreeBuilder tb);",
      "info" : "MethodDeclaration[67762-67816]:MethodDeclaration[67967-68021]"
    }, {
      "left" : "private static boolean isWhitespace(Token t)",
      "right" : "private static boolean isWhitespace(Token t)",
      "info" : "MethodDeclaration[67822-68029]:MethodDeclaration[68027-68234]"
    }, {
      "left" : "private static boolean isWhitespace(String data)",
      "right" : "private static boolean isWhitespace(String data)",
      "info" : "MethodDeclaration[68035-68132]:MethodDeclaration[68240-68337]"
    }, {
      "left" : "private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "right" : "private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[68138-68369]:MethodDeclaration[68343-68574]"
    }, {
      "left" : "private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "right" : "private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[68375-68608]:MethodDeclaration[68580-68813]"
    }, {
      "left" : "Constants",
      "right" : "Constants",
      "info" : "TypeDeclaration[68900-71588]:TypeDeclaration[69105-71793]"
    }, {
      "left" : "static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};",
      "right" : "static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};",
      "info" : "FieldDeclaration[68939-69092]:FieldDeclaration[69144-69297]"
    }, {
      "left" : "static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n            \"p\", \"section\", \"summary\", \"ul\"};",
      "right" : "static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n            \"p\", \"section\", \"summary\", \"ul\"};",
      "info" : "FieldDeclaration[69101-69388]:FieldDeclaration[69306-69593]"
    }, {
      "left" : "static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};",
      "right" : "static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};",
      "info" : "FieldDeclaration[69397-69479]:FieldDeclaration[69602-69684]"
    }, {
      "left" : "static final String[] InBodyStartPreListing = new String[]{\"listing\", \"pre\"};",
      "right" : "static final String[] InBodyStartPreListing = new String[]{\"listing\", \"pre\"};",
      "info" : "FieldDeclaration[69488-69565]:FieldDeclaration[69693-69770]"
    }, {
      "left" : "static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};",
      "right" : "static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};",
      "info" : "FieldDeclaration[69574-69656]:FieldDeclaration[69779-69861]"
    }, {
      "left" : "static final String[] DdDt = new String[]{\"dd\", \"dt\"};",
      "right" : "static final String[] DdDt = new String[]{\"dd\", \"dt\"};",
      "info" : "FieldDeclaration[69665-69719]:FieldDeclaration[69870-69924]"
    }, {
      "left" : "static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "right" : "static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "info" : "FieldDeclaration[69728-69860]:FieldDeclaration[69933-70065]"
    }, {
      "left" : "static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};",
      "right" : "static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};",
      "info" : "FieldDeclaration[69869-69956]:FieldDeclaration[70074-70161]"
    }, {
      "left" : "static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};",
      "right" : "static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};",
      "info" : "FieldDeclaration[69965-70076]:FieldDeclaration[70170-70281]"
    }, {
      "left" : "static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};",
      "right" : "static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};",
      "info" : "FieldDeclaration[70085-70167]:FieldDeclaration[70290-70372]"
    }, {
      "left" : "static final String[] InBodyStartInputAttribs = new String[]{\"action\", \"name\", \"prompt\"};",
      "right" : "static final String[] InBodyStartInputAttribs = new String[]{\"action\", \"name\", \"prompt\"};",
      "info" : "FieldDeclaration[70176-70265]:FieldDeclaration[70381-70470]"
    }, {
      "left" : "static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};",
      "right" : "static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};",
      "info" : "FieldDeclaration[70274-70352]:FieldDeclaration[70479-70557]"
    }, {
      "left" : "static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};",
      "right" : "static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};",
      "info" : "FieldDeclaration[70361-70426]:FieldDeclaration[70566-70631]"
    }, {
      "left" : "static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "right" : "static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[70435-70580]:FieldDeclaration[70640-70785]"
    }, {
      "left" : "static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n            \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};",
      "right" : "static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n            \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};",
      "info" : "FieldDeclaration[70589-70896]:FieldDeclaration[70794-71101]"
    }, {
      "left" : "static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "right" : "static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "info" : "FieldDeclaration[70905-71067]:FieldDeclaration[71110-71272]"
    }, {
      "left" : "static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "right" : "static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[71076-71177]:FieldDeclaration[71281-71382]"
    }, {
      "left" : "static final String[] InCellNames = new String[]{\"td\", \"th\"};",
      "right" : "static final String[] InCellNames = new String[]{\"td\", \"th\"};",
      "info" : "FieldDeclaration[71186-71247]:FieldDeclaration[71391-71452]"
    }, {
      "left" : "static final String[] InCellBody = new String[]{\"body\", \"caption\", \"col\", \"colgroup\", \"html\"};",
      "right" : "static final String[] InCellBody = new String[]{\"body\", \"caption\", \"col\", \"colgroup\", \"html\"};",
      "info" : "FieldDeclaration[71256-71350]:FieldDeclaration[71461-71555]"
    }, {
      "left" : "static final String[] InCellTable = new String[]{ \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "right" : "static final String[] InCellTable = new String[]{ \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[71359-71451]:FieldDeclaration[71564-71656]"
    }, {
      "left" : "static final String[] InCellCol = new String[]{\"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "right" : "static final String[] InCellCol = new String[]{\"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[71460-71582]:FieldDeclaration[71665-71787]"
    } ],
    "mappings" : [
 {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[473-480]:PrimitiveType[473-480]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[481-488]:SimpleName[481-488]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[489-496]:SingleVariableDeclaration[489-496]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[498-516]:SingleVariableDeclaration[498-516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[518-1554]:Block[518-1554]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[532-1519]:IfStatement[532-1519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[553-618]:Block[553-618]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[571-583]:ReturnStatement[571-583]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[624-1519]:IfStatement[624-1519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[643-700]:Block[643-700]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[661-686]:ExpressionStatement[661-686]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[706-1519]:IfStatement[706-1519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[725-1348]:Block[725-1348]"
    }, {
      "left" : "Token.Doctype d = t.asDoctype();",
      "right" : "Token.Doctype d = t.asDoctype();",
      "info" : "VariableDeclarationStatement[865-897]:VariableDeclarationStatement[865-897]"
    }, {
      "left" : "DocumentType doctype = new DocumentType(\n                    tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier());",
      "right" : "DocumentType doctype = new DocumentType(\n                    tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier());",
      "info" : "VariableDeclarationStatement[914-1064]:VariableDeclarationStatement[914-1064]"
    }, {
      "left" : "doctype.setPubSysKey(d.getPubSysKey());",
      "right" : "doctype.setPubSysKey(d.getPubSysKey());",
      "info" : "ExpressionStatement[1081-1120]:ExpressionStatement[1081-1120]"
    }, {
      "left" : "tb.getDocument().appendChild(doctype);",
      "right" : "tb.getDocument().appendChild(doctype);",
      "info" : "ExpressionStatement[1137-1175]:ExpressionStatement[1137-1175]"
    }, {
      "left" : "if (d.isForceQuirks())",
      "right" : "if (d.isForceQuirks())",
      "info" : "IfStatement[1192-1291]:IfStatement[1192-1291]"
    }, {
      "left" : "tb.getDocument().quirksMode(Document.QuirksMode.quirks);",
      "right" : "tb.getDocument().quirksMode(Document.QuirksMode.quirks);",
      "info" : "ExpressionStatement[1235-1291]:ExpressionStatement[1235-1291]"
    }, {
      "left" : "tb.transition(BeforeHtml);",
      "right" : "tb.transition(BeforeHtml);",
      "info" : "ExpressionStatement[1308-1334]:ExpressionStatement[1308-1334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1354-1519]:Block[1354-1519]"
    }, {
      "left" : "tb.transition(BeforeHtml);",
      "right" : "tb.transition(BeforeHtml);",
      "info" : "ExpressionStatement[1421-1447]:ExpressionStatement[1421-1447]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[1464-1485]:ReturnStatement[1464-1485]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1532-1544]:ReturnStatement[1532-1544]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1587-1594]:PrimitiveType[1587-1594]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[1595-1602]:SimpleName[1595-1602]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[1603-1610]:SingleVariableDeclaration[1603-1610]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[1612-1630]:SingleVariableDeclaration[1612-1630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1632-2449]:Block[1632-2449]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[1646-2414]:IfStatement[1646-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1665-1742]:Block[1665-1742]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[1683-1698]:ExpressionStatement[1683-1698]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1715-1728]:ReturnStatement[1715-1728]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[1748-2414]:IfStatement[1748-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1767-1824]:Block[1767-1824]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[1785-1810]:ExpressionStatement[1785-1810]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[1830-2414]:IfStatement[1830-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1851-1916]:Block[1851-1916]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1869-1881]:ReturnStatement[1869-1881]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[1922-2414]:IfStatement[1922-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1988-2089]:Block[1988-2089]"
    }, {
      "left" : "tb.insert(t.asStartTag());",
      "right" : "tb.insert(t.asStartTag());",
      "info" : "ExpressionStatement[2006-2032]:ExpressionStatement[2006-2032]"
    }, {
      "left" : "tb.transition(BeforeHead);",
      "right" : "tb.transition(BeforeHead);",
      "info" : "ExpressionStatement[2049-2075]:ExpressionStatement[2049-2075]"
    }, {
      "left" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "right" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "info" : "IfStatement[2095-2414]:IfStatement[2095-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2189-2248]:Block[2189-2248]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[2207-2234]:ReturnStatement[2207-2234]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[2254-2414]:IfStatement[2254-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2272-2349]:Block[2272-2349]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[2290-2305]:ExpressionStatement[2290-2305]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2322-2335]:ReturnStatement[2322-2335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2355-2414]:Block[2355-2414]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[2373-2400]:ReturnStatement[2373-2400]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2427-2439]:ReturnStatement[2427-2439]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2459-2466]:Modifier[2459-2466]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2467-2474]:PrimitiveType[2467-2474]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[2475-2487]:SimpleName[2475-2487]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[2488-2495]:SingleVariableDeclaration[2488-2495]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[2497-2515]:SingleVariableDeclaration[2497-2515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2517-2640]:Block[2517-2640]"
    }, {
      "left" : "tb.insertStartTag(\"html\");",
      "right" : "tb.insertStartTag(\"html\");",
      "info" : "ExpressionStatement[2531-2557]:ExpressionStatement[2531-2557]"
    }, {
      "left" : "tb.transition(BeforeHead);",
      "right" : "tb.transition(BeforeHead);",
      "info" : "ExpressionStatement[2570-2596]:ExpressionStatement[2570-2596]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[2609-2630]:ReturnStatement[2609-2630]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2673-2680]:PrimitiveType[2673-2680]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[2681-2688]:SimpleName[2681-2688]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[2689-2696]:SingleVariableDeclaration[2689-2696]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[2698-2716]:SingleVariableDeclaration[2698-2716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2718-3798]:Block[2718-3798]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[2732-3763]:IfStatement[2732-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2753-2797]:Block[2753-2797]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2771-2783]:ReturnStatement[2771-2783]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[2803-3763]:IfStatement[2803-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2822-2879]:Block[2822-2879]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[2840-2865]:ExpressionStatement[2840-2865]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[2885-3763]:IfStatement[2885-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2904-2981]:Block[2904-2981]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[2922-2937]:ExpressionStatement[2922-2937]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2954-2967]:ReturnStatement[2954-2967]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[2987-3763]:IfStatement[2987-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3053-3137]:Block[3053-3137]"
    }, {
      "left" : "return InBody.process(t, tb);",
      "right" : "return InBody.process(t, tb);",
      "info" : "ReturnStatement[3071-3100]:ReturnStatement[3071-3100]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"head\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"head\"))",
      "info" : "IfStatement[3143-3763]:IfStatement[3143-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3209-3362]:Block[3209-3362]"
    }, {
      "left" : "Element head = tb.insert(t.asStartTag());",
      "right" : "Element head = tb.insert(t.asStartTag());",
      "info" : "VariableDeclarationStatement[3227-3268]:VariableDeclarationStatement[3227-3268]"
    }, {
      "left" : "tb.setHeadElement(head);",
      "right" : "tb.setHeadElement(head);",
      "info" : "ExpressionStatement[3285-3309]:ExpressionStatement[3285-3309]"
    }, {
      "left" : "tb.transition(InHead);",
      "right" : "tb.transition(InHead);",
      "info" : "ExpressionStatement[3326-3348]:ExpressionStatement[3326-3348]"
    }, {
      "left" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "right" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "info" : "IfStatement[3368-3763]:IfStatement[3368-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3462-3559]:Block[3462-3559]"
    }, {
      "left" : "tb.processStartTag(\"head\");",
      "right" : "tb.processStartTag(\"head\");",
      "info" : "ExpressionStatement[3480-3507]:ExpressionStatement[3480-3507]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[3524-3545]:ReturnStatement[3524-3545]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[3565-3763]:IfStatement[3565-3763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3583-3660]:Block[3583-3660]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[3601-3616]:ExpressionStatement[3601-3616]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3633-3646]:ReturnStatement[3633-3646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3666-3763]:Block[3666-3763]"
    }, {
      "left" : "tb.processStartTag(\"head\");",
      "right" : "tb.processStartTag(\"head\");",
      "info" : "ExpressionStatement[3684-3711]:ExpressionStatement[3684-3711]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[3728-3749]:ReturnStatement[3728-3749]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3776-3788]:ReturnStatement[3776-3788]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3827-3834]:PrimitiveType[3827-3834]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[3835-3842]:SimpleName[3835-3842]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[3843-3850]:SingleVariableDeclaration[3843-3850]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[3852-3870]:SingleVariableDeclaration[3852-3870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3872-6785]:Block[3872-6785]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[3886-3995]:IfStatement[3886-3995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3907-3995]:Block[3907-3995]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[3925-3952]:ExpressionStatement[3925-3952]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3969-3981]:ReturnStatement[3969-3981]"
    }, {
      "left" : "switch (t.type) {\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    return false;\n                case StartTag:\n                    Token.StartTag start = t.asStartTag();\n                    String name = start.normalName();\n                    if (name.equals(\"html\")) {\n                        return InBody.process(t, tb);\n                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\")) {\n                        Element el = tb.insertEmpty(start);\n                        // jsoup special: update base the frist time it is seen\n                        if (name.equals(\"base\") && el.hasAttr(\"href\"))\n                            tb.maybeSetBaseUri(el);\n                    } else if (name.equals(\"meta\")) {\n                        Element meta = tb.insertEmpty(start);\n                        // todo: charset switches\n                    } else if (name.equals(\"title\")) {\n                        handleRcData(start, tb);\n                    } else if (StringUtil.in(name, \"noframes\", \"style\")) {\n                        handleRawtext(start, tb);\n                    } else if (name.equals(\"noscript\")) {\n                        // else if noscript && scripting flag = true: rawtext (jsoup doesn't run script, to handle as noscript)\n                        tb.insert(start);\n                        tb.transition(InHeadNoscript);\n                    } else if (name.equals(\"script\")) {\n                        // skips some script rules as won't execute them\n\n                        tb.tokeniser.transition(TokeniserState.ScriptData);\n                        tb.markInsertionMode();\n                        tb.transition(Text);\n                        tb.insert(start);\n                    } else if (name.equals(\"head\")) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag end = t.asEndTag();\n                    name = end.normalName();\n                    if (name.equals(\"head\")) {\n                        tb.pop();\n                        tb.transition(AfterHead);\n                    } else if (StringUtil.in(name, \"body\", \"html\", \"br\")) {\n                        return anythingElse(t, tb);\n                    } else {\n                        tb.error(this);\n                        return false;\n                    }\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "right" : "switch (t.type) {\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    return false;\n                case StartTag:\n                    Token.StartTag start = t.asStartTag();\n                    String name = start.normalName();\n                    if (name.equals(\"html\")) {\n                        return InBody.process(t, tb);\n                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\")) {\n                        Element el = tb.insertEmpty(start);\n                        // jsoup special: update base the frist time it is seen\n                        if (name.equals(\"base\") && el.hasAttr(\"href\"))\n                            tb.maybeSetBaseUri(el);\n                    } else if (name.equals(\"meta\")) {\n                        Element meta = tb.insertEmpty(start);\n                        // todo: charset switches\n                    } else if (name.equals(\"title\")) {\n                        handleRcData(start, tb);\n                    } else if (StringUtil.in(name, \"noframes\", \"style\")) {\n                        handleRawtext(start, tb);\n                    } else if (name.equals(\"noscript\")) {\n                        // else if noscript && scripting flag = true: rawtext (jsoup doesn't run script, to handle as noscript)\n                        tb.insert(start);\n                        tb.transition(InHeadNoscript);\n                    } else if (name.equals(\"script\")) {\n                        // skips some script rules as won't execute them\n\n                        tb.tokeniser.transition(TokeniserState.ScriptData);\n                        tb.markInsertionMode();\n                        tb.transition(Text);\n                        tb.insert(start);\n                    } else if (name.equals(\"head\")) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag end = t.asEndTag();\n                    name = end.normalName();\n                    if (name.equals(\"head\")) {\n                        tb.pop();\n                        tb.transition(AfterHead);\n                    } else if (StringUtil.in(name, \"body\", \"html\", \"br\")) {\n                        return anythingElse(t, tb);\n                    } else {\n                        tb.error(this);\n                        return false;\n                    }\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "info" : "SwitchStatement[4008-6750]:SwitchStatement[4008-6750]"
    }, {
      "left" : "case Comment:",
      "right" : "case Comment:",
      "info" : "SwitchCase[4042-4055]:SwitchCase[4042-4055]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[4076-4101]:ExpressionStatement[4076-4101]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4122-4128]:BreakStatement[4122-4128]"
    }, {
      "left" : "case Doctype:",
      "right" : "case Doctype:",
      "info" : "SwitchCase[4145-4158]:SwitchCase[4145-4158]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[4179-4194]:ExpressionStatement[4179-4194]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4215-4228]:ReturnStatement[4215-4228]"
    }, {
      "left" : "case StartTag:",
      "right" : "case StartTag:",
      "info" : "SwitchCase[4245-4259]:SwitchCase[4245-4259]"
    }, {
      "left" : "Token.StartTag start = t.asStartTag();",
      "right" : "Token.StartTag start = t.asStartTag();",
      "info" : "VariableDeclarationStatement[4280-4318]:VariableDeclarationStatement[4280-4318]"
    }, {
      "left" : "String name = start.normalName();",
      "right" : "String name = start.normalName();",
      "info" : "VariableDeclarationStatement[4339-4372]:VariableDeclarationStatement[4339-4372]"
    }, {
      "left" : "if (name.equals(\"html\"))",
      "right" : "if (name.equals(\"html\"))",
      "info" : "IfStatement[4393-6094]:IfStatement[4393-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4418-4495]:Block[4418-4495]"
    }, {
      "left" : "return InBody.process(t, tb);",
      "right" : "return InBody.process(t, tb);",
      "info" : "ReturnStatement[4444-4473]:ReturnStatement[4444-4473]"
    }, {
      "left" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\"))",
      "right" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\"))",
      "info" : "IfStatement[4501-6094]:IfStatement[4501-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4576-4862]:Block[4576-4862]"
    }, {
      "left" : "Element el = tb.insertEmpty(start);",
      "right" : "Element el = tb.insertEmpty(start);",
      "info" : "VariableDeclarationStatement[4602-4637]:VariableDeclarationStatement[4602-4637]"
    }, {
      "left" : "if (name.equals(\"base\") && el.hasAttr(\"href\"))",
      "right" : "if (name.equals(\"base\") && el.hasAttr(\"href\"))",
      "info" : "IfStatement[4742-4840]:IfStatement[4742-4840]"
    }, {
      "left" : "tb.maybeSetBaseUri(el);",
      "right" : "tb.maybeSetBaseUri(el);",
      "info" : "ExpressionStatement[4817-4840]:ExpressionStatement[4817-4840]"
    }, {
      "left" : "if (name.equals(\"meta\"))",
      "right" : "if (name.equals(\"meta\"))",
      "info" : "IfStatement[4868-6094]:IfStatement[4868-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4893-5028]:Block[4893-5028]"
    }, {
      "left" : "Element meta = tb.insertEmpty(start);",
      "right" : "Element meta = tb.insertEmpty(start);",
      "info" : "VariableDeclarationStatement[4919-4956]:VariableDeclarationStatement[4919-4956]"
    }, {
      "left" : "if (name.equals(\"title\"))",
      "right" : "if (name.equals(\"title\"))",
      "info" : "IfStatement[5034-6094]:IfStatement[5034-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5060-5132]:Block[5060-5132]"
    }, {
      "left" : "handleRcData(start, tb);",
      "right" : "handleRcData(start, tb);",
      "info" : "ExpressionStatement[5086-5110]:ExpressionStatement[5086-5110]"
    }, {
      "left" : "if (StringUtil.in(name, \"noframes\", \"style\"))",
      "right" : "if (StringUtil.in(name, \"noframes\", \"style\"))",
      "info" : "IfStatement[5138-6094]:IfStatement[5138-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5184-5257]:Block[5184-5257]"
    }, {
      "left" : "handleRawtext(start, tb);",
      "right" : "handleRawtext(start, tb);",
      "info" : "ExpressionStatement[5210-5235]:ExpressionStatement[5210-5235]"
    }, {
      "left" : "if (name.equals(\"noscript\"))",
      "right" : "if (name.equals(\"noscript\"))",
      "info" : "IfStatement[5263-6094]:IfStatement[5263-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5292-5540]:Block[5292-5540]"
    }, {
      "left" : "tb.insert(start);",
      "right" : "tb.insert(start);",
      "info" : "ExpressionStatement[5446-5463]:ExpressionStatement[5446-5463]"
    }, {
      "left" : "tb.transition(InHeadNoscript);",
      "right" : "tb.transition(InHeadNoscript);",
      "info" : "ExpressionStatement[5488-5518]:ExpressionStatement[5488-5518]"
    }, {
      "left" : "if (name.equals(\"script\"))",
      "right" : "if (name.equals(\"script\"))",
      "info" : "IfStatement[5546-6094]:IfStatement[5546-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5573-5881]:Block[5573-5881]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.ScriptData);",
      "right" : "tb.tokeniser.transition(TokeniserState.ScriptData);",
      "info" : "ExpressionStatement[5673-5724]:ExpressionStatement[5673-5724]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[5749-5772]:ExpressionStatement[5749-5772]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[5797-5817]:ExpressionStatement[5797-5817]"
    }, {
      "left" : "tb.insert(start);",
      "right" : "tb.insert(start);",
      "info" : "ExpressionStatement[5842-5859]:ExpressionStatement[5842-5859]"
    }, {
      "left" : "if (name.equals(\"head\"))",
      "right" : "if (name.equals(\"head\"))",
      "info" : "IfStatement[5887-6094]:IfStatement[5887-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5912-6013]:Block[5912-6013]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[5938-5953]:ExpressionStatement[5938-5953]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5978-5991]:ReturnStatement[5978-5991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6019-6094]:Block[6019-6094]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[6045-6072]:ReturnStatement[6045-6072]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6115-6121]:BreakStatement[6115-6121]"
    }, {
      "left" : "case EndTag:",
      "right" : "case EndTag:",
      "info" : "SwitchCase[6138-6150]:SwitchCase[6138-6150]"
    }, {
      "left" : "Token.EndTag end = t.asEndTag();",
      "right" : "Token.EndTag end = t.asEndTag();",
      "info" : "VariableDeclarationStatement[6171-6203]:VariableDeclarationStatement[6171-6203]"
    }, {
      "left" : "name = end.normalName();",
      "right" : "name = end.normalName();",
      "info" : "ExpressionStatement[6224-6248]:ExpressionStatement[6224-6248]"
    }, {
      "left" : "if (name.equals(\"head\"))",
      "right" : "if (name.equals(\"head\"))",
      "info" : "IfStatement[6269-6636]:IfStatement[6269-6636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6294-6401]:Block[6294-6401]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[6320-6329]:ExpressionStatement[6320-6329]"
    }, {
      "left" : "tb.transition(AfterHead);",
      "right" : "tb.transition(AfterHead);",
      "info" : "ExpressionStatement[6354-6379]:ExpressionStatement[6354-6379]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"html\", \"br\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"html\", \"br\"))",
      "info" : "IfStatement[6407-6636]:IfStatement[6407-6636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6454-6529]:Block[6454-6529]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[6480-6507]:ReturnStatement[6480-6507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6535-6636]:Block[6535-6636]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[6561-6576]:ExpressionStatement[6561-6576]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6601-6614]:ReturnStatement[6601-6614]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6657-6663]:BreakStatement[6657-6663]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[6680-6688]:SwitchCase[6680-6688]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[6709-6736]:ReturnStatement[6709-6736]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6763-6775]:ReturnStatement[6763-6775]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6795-6802]:Modifier[6795-6802]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6803-6810]:PrimitiveType[6803-6810]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[6811-6823]:SimpleName[6811-6823]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[6824-6831]:SingleVariableDeclaration[6824-6831]"
    }, {
      "left" : "TreeBuilder tb",
      "right" : "TreeBuilder tb",
      "info" : "SingleVariableDeclaration[6833-6847]:SingleVariableDeclaration[6833-6847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6849-6932]:Block[6849-6932]"
    }, {
      "left" : "tb.processEndTag(\"head\");",
      "right" : "tb.processEndTag(\"head\");",
      "info" : "ExpressionStatement[6863-6888]:ExpressionStatement[6863-6888]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[6901-6922]:ReturnStatement[6901-6922]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6969-6976]:PrimitiveType[6969-6976]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[6977-6984]:SimpleName[6977-6984]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[6985-6992]:SingleVariableDeclaration[6985-6992]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[6994-7012]:SingleVariableDeclaration[6994-7012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7014-8042]:Block[7014-8042]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[7028-8007]:IfStatement[7028-8007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7047-7094]:Block[7047-7094]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[7065-7080]:ExpressionStatement[7065-7080]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[7100-8007]:IfStatement[7100-8007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7166-7227]:Block[7166-7227]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[7184-7213]:ReturnStatement[7184-7213]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"noscript\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"noscript\"))",
      "info" : "IfStatement[7233-8007]:IfStatement[7233-8007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7299-7379]:Block[7299-7379]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[7317-7326]:ExpressionStatement[7317-7326]"
    }, {
      "left" : "tb.transition(InHead);",
      "right" : "tb.transition(InHead);",
      "info" : "ExpressionStatement[7343-7365]:ExpressionStatement[7343-7365]"
    }, {
      "left" : "if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),\n                    \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"style\")))",
      "right" : "if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),\n                    \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"style\")))",
      "info" : "IfStatement[7385-8007]:IfStatement[7385-8007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7569-7630]:Block[7569-7630]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[7587-7616]:ReturnStatement[7587-7616]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"br\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"br\"))",
      "info" : "IfStatement[7636-8007]:IfStatement[7636-8007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7696-7755]:Block[7696-7755]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[7714-7741]:ReturnStatement[7714-7741]"
    }, {
      "left" : "if ((t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"head\", \"noscript\")) || t.isEndTag())",
      "right" : "if ((t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"head\", \"noscript\")) || t.isEndTag())",
      "info" : "IfStatement[7761-8007]:IfStatement[7761-8007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7865-7942]:Block[7865-7942]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[7883-7898]:ExpressionStatement[7883-7898]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7915-7928]:ReturnStatement[7915-7928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7948-8007]:Block[7948-8007]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[7966-7993]:ReturnStatement[7966-7993]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8020-8032]:ReturnStatement[8020-8032]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8052-8059]:Modifier[8052-8059]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8060-8067]:PrimitiveType[8060-8067]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[8068-8080]:SimpleName[8068-8080]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[8081-8088]:SingleVariableDeclaration[8081-8088]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[8090-8108]:SingleVariableDeclaration[8090-8108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8110-8239]:Block[8110-8239]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[8124-8139]:ExpressionStatement[8124-8139]"
    }, {
      "left" : "tb.insert(new Token.Character().data(t.toString()));",
      "right" : "tb.insert(new Token.Character().data(t.toString()));",
      "info" : "ExpressionStatement[8152-8204]:ExpressionStatement[8152-8204]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8217-8229]:ReturnStatement[8217-8229]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8271-8278]:PrimitiveType[8271-8278]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[8279-8286]:SimpleName[8279-8286]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[8287-8294]:SingleVariableDeclaration[8287-8294]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[8296-8314]:SingleVariableDeclaration[8296-8314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8316-10050]:Block[8316-10050]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[8330-10015]:IfStatement[8330-10015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8351-8410]:Block[8351-8410]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[8369-8396]:ExpressionStatement[8369-8396]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[8416-10015]:IfStatement[8416-10015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8435-8492]:Block[8435-8492]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[8453-8478]:ExpressionStatement[8453-8478]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[8498-10015]:IfStatement[8498-10015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8517-8564]:Block[8517-8564]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[8535-8550]:ExpressionStatement[8535-8550]"
    }, {
      "left" : "if (t.isStartTag())",
      "right" : "if (t.isStartTag())",
      "info" : "IfStatement[8570-10015]:IfStatement[8570-10015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8590-9684]:Block[8590-9684]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[8608-8649]:VariableDeclarationStatement[8608-8649]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[8666-8702]:VariableDeclarationStatement[8666-8702]"
    }, {
      "left" : "if (name.equals(\"html\"))",
      "right" : "if (name.equals(\"html\"))",
      "info" : "IfStatement[8719-9670]:IfStatement[8719-9670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8744-8813]:Block[8744-8813]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[8766-8795]:ReturnStatement[8766-8795]"
    }, {
      "left" : "if (name.equals(\"body\"))",
      "right" : "if (name.equals(\"body\"))",
      "info" : "IfStatement[8819-9670]:IfStatement[8819-9670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8844-8989]:Block[8844-8989]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[8866-8886]:ExpressionStatement[8866-8886]"
    }, {
      "left" : "tb.framesetOk(false);",
      "right" : "tb.framesetOk(false);",
      "info" : "ExpressionStatement[8907-8928]:ExpressionStatement[8907-8928]"
    }, {
      "left" : "tb.transition(InBody);",
      "right" : "tb.transition(InBody);",
      "info" : "ExpressionStatement[8949-8971]:ExpressionStatement[8949-8971]"
    }, {
      "left" : "if (name.equals(\"frameset\"))",
      "right" : "if (name.equals(\"frameset\"))",
      "info" : "IfStatement[8995-9670]:IfStatement[8995-9670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9024-9131]:Block[9024-9131]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[9046-9066]:ExpressionStatement[9046-9066]"
    }, {
      "left" : "tb.transition(InFrameset);",
      "right" : "tb.transition(InFrameset);",
      "info" : "ExpressionStatement[9087-9113]:ExpressionStatement[9087-9113]"
    }, {
      "left" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"))",
      "right" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"))",
      "info" : "IfStatement[9137-9670]:IfStatement[9137-9670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9249-9484]:Block[9249-9484]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[9271-9286]:ExpressionStatement[9271-9286]"
    }, {
      "left" : "Element head = tb.getHeadElement();",
      "right" : "Element head = tb.getHeadElement();",
      "info" : "VariableDeclarationStatement[9307-9342]:VariableDeclarationStatement[9307-9342]"
    }, {
      "left" : "tb.push(head);",
      "right" : "tb.push(head);",
      "info" : "ExpressionStatement[9363-9377]:ExpressionStatement[9363-9377]"
    }, {
      "left" : "tb.process(t, InHead);",
      "right" : "tb.process(t, InHead);",
      "info" : "ExpressionStatement[9398-9420]:ExpressionStatement[9398-9420]"
    }, {
      "left" : "tb.removeFromStack(head);",
      "right" : "tb.removeFromStack(head);",
      "info" : "ExpressionStatement[9441-9466]:ExpressionStatement[9441-9466]"
    }, {
      "left" : "if (name.equals(\"head\"))",
      "right" : "if (name.equals(\"head\"))",
      "info" : "IfStatement[9490-9670]:IfStatement[9490-9670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9515-9604]:Block[9515-9604]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[9537-9552]:ExpressionStatement[9537-9552]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9573-9586]:ReturnStatement[9573-9586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9610-9670]:Block[9610-9670]"
    }, {
      "left" : "anythingElse(t, tb);",
      "right" : "anythingElse(t, tb);",
      "info" : "ExpressionStatement[9632-9652]:ExpressionStatement[9632-9652]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[9690-10015]:IfStatement[9690-10015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9708-9957]:Block[9708-9957]"
    }, {
      "left" : "if (StringUtil.in(t.asEndTag().normalName(), \"body\", \"html\"))",
      "right" : "if (StringUtil.in(t.asEndTag().normalName(), \"body\", \"html\"))",
      "info" : "IfStatement[9726-9943]:IfStatement[9726-9943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9788-9848]:Block[9788-9848]"
    }, {
      "left" : "anythingElse(t, tb);",
      "right" : "anythingElse(t, tb);",
      "info" : "ExpressionStatement[9810-9830]:ExpressionStatement[9810-9830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9854-9943]:Block[9854-9943]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[9876-9891]:ExpressionStatement[9876-9891]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9912-9925]:ReturnStatement[9912-9925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9963-10015]:Block[9963-10015]"
    }, {
      "left" : "anythingElse(t, tb);",
      "right" : "anythingElse(t, tb);",
      "info" : "ExpressionStatement[9981-10001]:ExpressionStatement[9981-10001]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[10028-10040]:ReturnStatement[10028-10040]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10060-10067]:Modifier[10060-10067]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10068-10075]:PrimitiveType[10068-10075]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[10076-10088]:SimpleName[10076-10088]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[10089-10096]:SingleVariableDeclaration[10089-10096]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[10098-10116]:SingleVariableDeclaration[10098-10116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10118-10236]:Block[10118-10236]"
    }, {
      "left" : "tb.processStartTag(\"body\");",
      "right" : "tb.processStartTag(\"body\");",
      "info" : "ExpressionStatement[10132-10159]:ExpressionStatement[10132-10159]"
    }, {
      "left" : "tb.framesetOk(true);",
      "right" : "tb.framesetOk(true);",
      "info" : "ExpressionStatement[10172-10192]:ExpressionStatement[10172-10192]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[10205-10226]:ReturnStatement[10205-10226]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39445-39452]:PrimitiveType[39568-39575]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[39453-39460]:SimpleName[39576-39583]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[39461-39468]:SingleVariableDeclaration[39584-39591]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[39470-39488]:SingleVariableDeclaration[39593-39611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39490-40091]:Block[39613-40214]"
    }, {
      "left" : "if (t.isCharacter())",
      "right" : "if (t.isCharacter())",
      "info" : "IfStatement[39504-40056]:IfStatement[39627-40179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39525-39584]:Block[39648-39707]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[39543-39570]:ExpressionStatement[39666-39693]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[39590-40056]:IfStatement[39713-40179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39605-39829]:Block[39728-39952]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[39623-39638]:ExpressionStatement[39746-39761]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[39717-39726]:ExpressionStatement[39840-39849]"
    }, {
      "left" : "tb.transition(tb.originalState());",
      "right" : "tb.transition(tb.originalState());",
      "info" : "ExpressionStatement[39743-39777]:ExpressionStatement[39866-39900]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[39794-39815]:ReturnStatement[39917-39938]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[39835-40056]:IfStatement[39958-40179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39853-40056]:Block[39976-40179]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[39982-39991]:ExpressionStatement[40105-40114]"
    }, {
      "left" : "tb.transition(tb.originalState());",
      "right" : "tb.transition(tb.originalState());",
      "info" : "ExpressionStatement[40008-40042]:ExpressionStatement[40131-40165]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40069-40081]:ReturnStatement[40192-40204]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[49787-49794]:Modifier[49935-49942]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49795-49802]:PrimitiveType[49943-49950]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[49803-49815]:SimpleName[49951-49963]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[49816-49823]:SingleVariableDeclaration[49964-49971]"
    }, {
      "left" : "TreeBuilder tb",
      "right" : "TreeBuilder tb",
      "info" : "SingleVariableDeclaration[49825-49839]:SingleVariableDeclaration[49973-49987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49841-50033]:Block[49989-50181]"
    }, {
      "left" : "boolean processed = tb.processEndTag(\"colgroup\");",
      "right" : "boolean processed = tb.processEndTag(\"colgroup\");",
      "info" : "VariableDeclarationStatement[49855-49904]:VariableDeclarationStatement[50003-50052]"
    }, {
      "left" : "if (processed)",
      "right" : "if (processed)",
      "info" : "IfStatement[49917-49998]:IfStatement[50065-50146]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[49977-49998]:ReturnStatement[50125-50146]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[50011-50023]:ReturnStatement[50159-50171]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50067-50074]:PrimitiveType[50215-50222]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[50075-50082]:SimpleName[50223-50230]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[50083-50090]:SingleVariableDeclaration[50231-50238]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[50092-50110]:SingleVariableDeclaration[50240-50258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50112-52161]:Block[50260-52309]"
    }, {
      "left" : "switch (t.type) {\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.normalName();\n                    if (name.equals(\"template\")) {\n                        tb.insert(startTag);\n                    } else if (name.equals(\"tr\")) {\n                        tb.clearStackToTableBodyContext();\n                        tb.insert(startTag);\n                        tb.transition(InRow);\n                    } else if (StringUtil.in(name, \"th\", \"td\")) {\n                        tb.error(this);\n                        tb.processStartTag(\"tr\");\n                        return tb.process(startTag);\n                    } else if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\")) {\n                        return exitTableBody(t, tb);\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    name = endTag.normalName();\n                    if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\")) {\n                        if (!tb.inTableScope(name)) {\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.clearStackToTableBodyContext();\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else if (name.equals(\"table\")) {\n                        return exitTableBody(t, tb);\n                    } else if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\")) {\n                        tb.error(this);\n                        return false;\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "right" : "switch (t.type) {\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.normalName();\n                    if (name.equals(\"template\")) {\n                        tb.insert(startTag);\n                    } else if (name.equals(\"tr\")) {\n                        tb.clearStackToTableBodyContext();\n                        tb.insert(startTag);\n                        tb.transition(InRow);\n                    } else if (StringUtil.in(name, \"th\", \"td\")) {\n                        tb.error(this);\n                        tb.processStartTag(\"tr\");\n                        return tb.process(startTag);\n                    } else if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\")) {\n                        return exitTableBody(t, tb);\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    name = endTag.normalName();\n                    if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\")) {\n                        if (!tb.inTableScope(name)) {\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.clearStackToTableBodyContext();\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else if (name.equals(\"table\")) {\n                        return exitTableBody(t, tb);\n                    } else if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\")) {\n                        tb.error(this);\n                        return false;\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "info" : "SwitchStatement[50126-52126]:SwitchStatement[50274-52274]"
    }, {
      "left" : "case StartTag:",
      "right" : "case StartTag:",
      "info" : "SwitchCase[50160-50174]:SwitchCase[50308-50322]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[50195-50236]:VariableDeclarationStatement[50343-50384]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[50257-50293]:VariableDeclarationStatement[50405-50441]"
    }, {
      "left" : "if (name.equals(\"template\"))",
      "right" : "if (name.equals(\"template\"))",
      "info" : "IfStatement[50314-51043]:IfStatement[50462-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50343-50411]:Block[50491-50559]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[50369-50389]:ExpressionStatement[50517-50537]"
    }, {
      "left" : "if (name.equals(\"tr\"))",
      "right" : "if (name.equals(\"tr\"))",
      "info" : "IfStatement[50417-51043]:IfStatement[50565-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50440-50613]:Block[50588-50761]"
    }, {
      "left" : "tb.clearStackToTableBodyContext();",
      "right" : "tb.clearStackToTableBodyContext();",
      "info" : "ExpressionStatement[50466-50500]:ExpressionStatement[50614-50648]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[50525-50545]:ExpressionStatement[50673-50693]"
    }, {
      "left" : "tb.transition(InRow);",
      "right" : "tb.transition(InRow);",
      "info" : "ExpressionStatement[50570-50591]:ExpressionStatement[50718-50739]"
    }, {
      "left" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "right" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "info" : "IfStatement[50619-51043]:IfStatement[50767-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50656-50822]:Block[50804-50970]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[50682-50697]:ExpressionStatement[50830-50845]"
    }, {
      "left" : "tb.processStartTag(\"tr\");",
      "right" : "tb.processStartTag(\"tr\");",
      "info" : "ExpressionStatement[50722-50747]:ExpressionStatement[50870-50895]"
    }, {
      "left" : "return tb.process(startTag);",
      "right" : "return tb.process(startTag);",
      "info" : "ReturnStatement[50772-50800]:ReturnStatement[50920-50948]"
    }, {
      "left" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[50828-51043]:IfStatement[50976-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50910-50986]:Block[51058-51134]"
    }, {
      "left" : "return exitTableBody(t, tb);",
      "right" : "return exitTableBody(t, tb);",
      "info" : "ReturnStatement[50936-50964]:ReturnStatement[51084-51112]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[51016-51043]:ReturnStatement[51164-51191]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[51064-51070]:BreakStatement[51212-51218]"
    }, {
      "left" : "case EndTag:",
      "right" : "case EndTag:",
      "info" : "SwitchCase[51087-51099]:SwitchCase[51235-51247]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[51120-51155]:VariableDeclarationStatement[51268-51303]"
    }, {
      "left" : "name = endTag.normalName();",
      "right" : "name = endTag.normalName();",
      "info" : "ExpressionStatement[51176-51203]:ExpressionStatement[51324-51351]"
    }, {
      "left" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[51224-52012]:IfStatement[51372-52160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51276-51651]:Block[51424-51799]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[51302-51629]:IfStatement[51450-51777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51330-51443]:Block[51478-51591]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[51360-51375]:ExpressionStatement[51508-51523]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51404-51417]:ReturnStatement[51552-51565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51449-51629]:Block[51597-51777]"
    }, {
      "left" : "tb.clearStackToTableBodyContext();",
      "right" : "tb.clearStackToTableBodyContext();",
      "info" : "ExpressionStatement[51479-51513]:ExpressionStatement[51627-51661]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[51542-51551]:ExpressionStatement[51690-51699]"
    }, {
      "left" : "tb.transition(InTable);",
      "right" : "tb.transition(InTable);",
      "info" : "ExpressionStatement[51580-51603]:ExpressionStatement[51728-51751]"
    }, {
      "left" : "if (name.equals(\"table\"))",
      "right" : "if (name.equals(\"table\"))",
      "info" : "IfStatement[51657-52012]:IfStatement[51805-52160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51683-51759]:Block[51831-51907]"
    }, {
      "left" : "return exitTableBody(t, tb);",
      "right" : "return exitTableBody(t, tb);",
      "info" : "ReturnStatement[51709-51737]:ReturnStatement[51857-51885]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\"))",
      "info" : "IfStatement[51765-52012]:IfStatement[51913-52160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51854-51955]:Block[52002-52103]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[51880-51895]:ExpressionStatement[52028-52043]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51920-51933]:ReturnStatement[52068-52081]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[51985-52012]:ReturnStatement[52133-52160]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[52033-52039]:BreakStatement[52181-52187]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[52056-52064]:SwitchCase[52204-52212]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[52085-52112]:ReturnStatement[52233-52260]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52139-52151]:ReturnStatement[52287-52299]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[52597-52604]:Modifier[52770-52777]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52605-52612]:PrimitiveType[52778-52785]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[52613-52625]:SimpleName[52786-52798]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[52626-52633]:SingleVariableDeclaration[52799-52806]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[52635-52653]:SingleVariableDeclaration[52808-52826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52655-52709]:Block[52828-52882]"
    }, {
      "left" : "return tb.process(t, InTable);",
      "right" : "return tb.process(t, InTable);",
      "info" : "ReturnStatement[52669-52699]:ReturnStatement[52842-52872]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52737-52744]:PrimitiveType[52910-52917]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[52745-52752]:SimpleName[52918-52925]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[52753-52760]:SingleVariableDeclaration[52926-52933]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[52762-52780]:SingleVariableDeclaration[52935-52953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52782-54809]:Block[52955-54982]"
    }, {
      "left" : "if (t.isStartTag())",
      "right" : "if (t.isStartTag())",
      "info" : "IfStatement[52796-54774]:IfStatement[52969-54947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52816-53545]:Block[52989-53718]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[52834-52875]:VariableDeclarationStatement[53007-53048]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[52892-52928]:VariableDeclarationStatement[53065-53101]"
    }, {
      "left" : "if (name.equals(\"template\"))",
      "right" : "if (name.equals(\"template\"))",
      "info" : "IfStatement[52946-53531]:IfStatement[53119-53704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52975-53035]:Block[53148-53208]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[52997-53017]:ExpressionStatement[53170-53190]"
    }, {
      "left" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "right" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "info" : "IfStatement[53041-53531]:IfStatement[53214-53704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53078-53294]:Block[53251-53467]"
    }, {
      "left" : "tb.clearStackToTableRowContext();",
      "right" : "tb.clearStackToTableRowContext();",
      "info" : "ExpressionStatement[53100-53133]:ExpressionStatement[53273-53306]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[53154-53174]:ExpressionStatement[53327-53347]"
    }, {
      "left" : "tb.transition(InCell);",
      "right" : "tb.transition(InCell);",
      "info" : "ExpressionStatement[53195-53217]:ExpressionStatement[53368-53390]"
    }, {
      "left" : "tb.insertMarkerToFormattingElements();",
      "right" : "tb.insertMarkerToFormattingElements();",
      "info" : "ExpressionStatement[53238-53276]:ExpressionStatement[53411-53449]"
    }, {
      "left" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "right" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "info" : "IfStatement[53300-53531]:IfStatement[53473-53704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53388-53458]:Block[53561-53631]"
    }, {
      "left" : "return handleMissingTr(t, tb);",
      "right" : "return handleMissingTr(t, tb);",
      "info" : "ReturnStatement[53410-53440]:ReturnStatement[53583-53613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53464-53531]:Block[53637-53704]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[53486-53513]:ReturnStatement[53659-53686]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[53551-54774]:IfStatement[53724-54947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53569-54709]:Block[53742-54882]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[53587-53622]:VariableDeclarationStatement[53760-53795]"
    }, {
      "left" : "String name = endTag.normalName();",
      "right" : "String name = endTag.normalName();",
      "info" : "VariableDeclarationStatement[53639-53673]:VariableDeclarationStatement[53812-53846]"
    }, {
      "left" : "if (name.equals(\"tr\"))",
      "right" : "if (name.equals(\"tr\"))",
      "info" : "IfStatement[53691-54695]:IfStatement[53864-54868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53714-54029]:Block[53887-54202]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[53736-53873]:IfStatement[53909-54046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53764-53873]:Block[53937-54046]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[53790-53805]:ExpressionStatement[53963-53978]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53838-53851]:ReturnStatement[54011-54024]"
    }, {
      "left" : "tb.clearStackToTableRowContext();",
      "right" : "tb.clearStackToTableRowContext();",
      "info" : "ExpressionStatement[53894-53927]:ExpressionStatement[54067-54100]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[53948-53957]:ExpressionStatement[54121-54130]"
    }, {
      "left" : "tb.transition(InTableBody);",
      "right" : "tb.transition(InTableBody);",
      "info" : "ExpressionStatement[53984-54011]:ExpressionStatement[54157-54184]"
    }, {
      "left" : "if (name.equals(\"table\"))",
      "right" : "if (name.equals(\"table\"))",
      "info" : "IfStatement[54035-54695]:IfStatement[54208-54868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54061-54131]:Block[54234-54304]"
    }, {
      "left" : "return handleMissingTr(t, tb);",
      "right" : "return handleMissingTr(t, tb);",
      "info" : "ReturnStatement[54083-54113]:ReturnStatement[54256-54286]"
    }, {
      "left" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[54137-54695]:IfStatement[54310-54868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54189-54444]:Block[54362-54617]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[54211-54340]:IfStatement[54384-54513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54239-54340]:Block[54412-54513]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[54265-54280]:ExpressionStatement[54438-54453]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54305-54318]:ReturnStatement[54478-54491]"
    }, {
      "left" : "tb.processEndTag(\"tr\");",
      "right" : "tb.processEndTag(\"tr\");",
      "info" : "ExpressionStatement[54361-54384]:ExpressionStatement[54534-54557]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[54405-54426]:ReturnStatement[54578-54599]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\"))",
      "info" : "IfStatement[54450-54695]:IfStatement[54623-54868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54533-54622]:Block[54706-54795]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[54555-54570]:ExpressionStatement[54728-54743]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54591-54604]:ReturnStatement[54764-54777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54628-54695]:Block[54801-54868]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[54650-54677]:ReturnStatement[54823-54850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54715-54774]:Block[54888-54947]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[54733-54760]:ReturnStatement[54906-54933]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[54787-54799]:ReturnStatement[54960-54972]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54819-54826]:Modifier[54992-54999]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[54827-54834]:PrimitiveType[55000-55007]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[54835-54847]:SimpleName[55008-55020]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[54848-54855]:SingleVariableDeclaration[55021-55028]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[54857-54875]:SingleVariableDeclaration[55030-55048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54877-54931]:Block[55050-55104]"
    }, {
      "left" : "return tb.process(t, InTable);",
      "right" : "return tb.process(t, InTable);",
      "info" : "ReturnStatement[54891-54921]:ReturnStatement[55064-55094]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54941-54948]:Modifier[55114-55121]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[54949-54956]:PrimitiveType[55122-55129]"
    }, {
      "left" : "handleMissingTr",
      "right" : "handleMissingTr",
      "info" : "SimpleName[54957-54972]:SimpleName[55130-55145]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[54973-54980]:SingleVariableDeclaration[55146-55153]"
    }, {
      "left" : "TreeBuilder tb",
      "right" : "TreeBuilder tb",
      "info" : "SingleVariableDeclaration[54982-54996]:SingleVariableDeclaration[55155-55169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54998-55177]:Block[55171-55350]"
    }, {
      "left" : "boolean processed = tb.processEndTag(\"tr\");",
      "right" : "boolean processed = tb.processEndTag(\"tr\");",
      "info" : "VariableDeclarationStatement[55012-55055]:VariableDeclarationStatement[55185-55228]"
    }, {
      "left" : "if (processed)",
      "right" : "if (processed)",
      "info" : "IfStatement[55068-55167]:IfStatement[55241-55340]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[55099-55120]:ReturnStatement[55272-55293]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[55154-55167]:ReturnStatement[55327-55340]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57068-57075]:Modifier[57243-57250]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57076-57083]:PrimitiveType[57251-57258]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[57084-57096]:SimpleName[57259-57271]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[57097-57104]:SingleVariableDeclaration[57272-57279]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[57106-57124]:SingleVariableDeclaration[57281-57299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57126-57179]:Block[57301-57354]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[57140-57169]:ReturnStatement[57315-57344]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57189-57196]:Modifier[57364-57371]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57197-57201]:PrimitiveType[57372-57376]"
    }, {
      "left" : "closeCell",
      "right" : "closeCell",
      "info" : "SimpleName[57202-57211]:SimpleName[57377-57386]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[57212-57230]:SingleVariableDeclaration[57387-57405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57232-57413]:Block[57407-57588]"
    }, {
      "left" : "if (tb.inTableScope(\"td\"))",
      "right" : "if (tb.inTableScope(\"td\"))",
      "info" : "IfStatement[57246-57369]:IfStatement[57421-57544]"
    }, {
      "left" : "tb.processEndTag(\"td\");",
      "right" : "tb.processEndTag(\"td\");",
      "info" : "ExpressionStatement[57289-57312]:ExpressionStatement[57464-57487]"
    }, {
      "left" : "tb.processEndTag(\"th\");",
      "right" : "tb.processEndTag(\"th\");",
      "info" : "ExpressionStatement[57346-57369]:ExpressionStatement[57521-57544]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[61470-61477]:Modifier[61661-61668]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61478-61485]:PrimitiveType[61669-61676]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[61486-61498]:SimpleName[61677-61689]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[61499-61506]:SingleVariableDeclaration[61690-61697]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[61508-61526]:SingleVariableDeclaration[61699-61717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61528-61593]:Block[61719-61784]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[61542-61557]:ExpressionStatement[61733-61748]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[61570-61583]:ReturnStatement[61761-61774]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61631-61638]:PrimitiveType[61822-61829]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[61639-61646]:SimpleName[61830-61837]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[61647-61654]:SingleVariableDeclaration[61838-61845]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[61656-61674]:SingleVariableDeclaration[61847-61865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61676-62424]:Block[61867-62615]"
    }, {
      "left" : "if (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "right" : "if (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "info" : "IfStatement[61690-62414]:IfStatement[61881-62605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61821-61950]:Block[62012-62141]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[61839-61854]:ExpressionStatement[62030-62045]"
    }, {
      "left" : "tb.processEndTag(\"select\");",
      "right" : "tb.processEndTag(\"select\");",
      "info" : "ExpressionStatement[61871-61898]:ExpressionStatement[62062-62089]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[61915-61936]:ReturnStatement[62106-62127]"
    }, {
      "left" : "if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "right" : "if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "info" : "IfStatement[61956-62414]:IfStatement[62147-62605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62083-62345]:Block[62274-62536]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[62101-62116]:ExpressionStatement[62292-62307]"
    }, {
      "left" : "if (tb.inTableScope(t.asEndTag().normalName()))",
      "right" : "if (tb.inTableScope(t.asEndTag().normalName()))",
      "info" : "IfStatement[62133-62331]:IfStatement[62324-62522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62181-62292]:Block[62372-62483]"
    }, {
      "left" : "tb.processEndTag(\"select\");",
      "right" : "tb.processEndTag(\"select\");",
      "info" : "ExpressionStatement[62203-62230]:ExpressionStatement[62394-62421]"
    }, {
      "left" : "return (tb.process(t));",
      "right" : "return (tb.process(t));",
      "info" : "ReturnStatement[62251-62274]:ReturnStatement[62442-62465]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62318-62331]:ReturnStatement[62509-62522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62351-62414]:Block[62542-62605]"
    }, {
      "left" : "return tb.process(t, InSelect);",
      "right" : "return tb.process(t, InSelect);",
      "info" : "ReturnStatement[62369-62400]:ReturnStatement[62560-62591]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62456-62463]:PrimitiveType[62647-62654]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[62464-62471]:SimpleName[62655-62662]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[62472-62479]:SingleVariableDeclaration[62663-62670]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[62481-62499]:SingleVariableDeclaration[62672-62690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62501-63465]:Block[62692-63656]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[62515-63430]:IfStatement[62706-63621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62536-62597]:Block[62727-62788]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[62554-62583]:ReturnStatement[62745-62774]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[62603-63430]:IfStatement[62794-63621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62622-62697]:Block[62813-62888]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[62640-62665]:ExpressionStatement[62831-62856]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[62703-63430]:IfStatement[62894-63621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62722-62799]:Block[62913-62990]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[62740-62755]:ExpressionStatement[62931-62946]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62772-62785]:ReturnStatement[62963-62976]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[62805-63430]:IfStatement[62996-63621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62871-62932]:Block[63062-63123]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[62889-62918]:ReturnStatement[63080-63109]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[62938-63430]:IfStatement[63129-63621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63000-63225]:Block[63191-63416]"
    }, {
      "left" : "if (tb.isFragmentParsing())",
      "right" : "if (tb.isFragmentParsing())",
      "info" : "IfStatement[63018-63211]:IfStatement[63209-63402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63046-63135]:Block[63237-63326]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[63068-63083]:ExpressionStatement[63259-63274]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63104-63117]:ReturnStatement[63295-63308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63141-63211]:Block[63332-63402]"
    }, {
      "left" : "tb.transition(AfterAfterBody);",
      "right" : "tb.transition(AfterAfterBody);",
      "info" : "ExpressionStatement[63163-63193]:ExpressionStatement[63354-63384]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[63231-63430]:IfStatement[63422-63621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63246-63300]:Block[63437-63491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63306-63430]:Block[63497-63621]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[63324-63339]:ExpressionStatement[63515-63530]"
    }, {
      "left" : "tb.transition(InBody);",
      "right" : "tb.transition(InBody);",
      "info" : "ExpressionStatement[63356-63378]:ExpressionStatement[63547-63569]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[63395-63416]:ReturnStatement[63586-63607]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63443-63455]:ReturnStatement[63634-63646]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65323-65330]:PrimitiveType[65528-65535]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[65331-65338]:SimpleName[65536-65543]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[65339-65346]:SingleVariableDeclaration[65544-65551]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[65348-65366]:SingleVariableDeclaration[65553-65571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65368-66255]:Block[65573-66460]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[65382-66220]:IfStatement[65587-66425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65403-65462]:Block[65608-65667]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[65421-65448]:ExpressionStatement[65626-65653]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[65468-66220]:IfStatement[65673-66425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65487-65544]:Block[65692-65749]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[65505-65530]:ExpressionStatement[65710-65735]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[65550-66220]:IfStatement[65755-66425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65569-65646]:Block[65774-65851]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[65587-65602]:ExpressionStatement[65792-65807]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[65619-65632]:ReturnStatement[65824-65837]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[65652-66220]:IfStatement[65857-66425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65718-65779]:Block[65923-65984]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[65736-65765]:ReturnStatement[65941-65970]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[65785-66220]:IfStatement[65990-66425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65847-65913]:Block[66052-66118]"
    }, {
      "left" : "tb.transition(AfterAfterFrameset);",
      "right" : "tb.transition(AfterAfterFrameset);",
      "info" : "ExpressionStatement[65865-65899]:ExpressionStatement[66070-66104]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "info" : "IfStatement[65919-66220]:IfStatement[66124-66425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65989-66050]:Block[66194-66255]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[66007-66036]:ReturnStatement[66212-66241]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[66056-66220]:IfStatement[66261-66425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66071-66137]:Block[66276-66342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66143-66220]:Block[66348-66425]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[66161-66176]:ExpressionStatement[66366-66381]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[66193-66206]:ReturnStatement[66398-66411]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[66233-66245]:ReturnStatement[66438-66450]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66292-66299]:PrimitiveType[66497-66504]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[66300-66307]:SimpleName[66505-66512]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[66308-66315]:SingleVariableDeclaration[66513-66520]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[66317-66335]:SingleVariableDeclaration[66522-66540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66337-66834]:Block[66542-67039]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[66351-66799]:IfStatement[66556-67004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66370-66427]:Block[66575-66632]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[66388-66413]:ExpressionStatement[66593-66618]"
    }, {
      "left" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "right" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "info" : "IfStatement[66433-66799]:IfStatement[66638-67004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66537-66598]:Block[66742-66803]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[66555-66584]:ReturnStatement[66760-66789]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[66604-66799]:IfStatement[66809-67004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66619-66669]:Block[66824-66874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66675-66799]:Block[66880-67004]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[66693-66708]:ExpressionStatement[66898-66913]"
    }, {
      "left" : "tb.transition(InBody);",
      "right" : "tb.transition(InBody);",
      "info" : "ExpressionStatement[66725-66747]:ExpressionStatement[66930-66952]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[66764-66785]:ReturnStatement[66969-66990]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[66812-66824]:ReturnStatement[67017-67029]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66875-66882]:PrimitiveType[67080-67087]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[66883-66890]:SimpleName[67088-67095]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[66891-66898]:SingleVariableDeclaration[67096-67103]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[66900-66918]:SingleVariableDeclaration[67105-67123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66920-67507]:Block[67125-67712]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[66934-67472]:IfStatement[67139-67677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66953-67010]:Block[67158-67215]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[66971-66996]:ExpressionStatement[67176-67201]"
    }, {
      "left" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "right" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "info" : "IfStatement[67016-67472]:IfStatement[67221-67677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67120-67181]:Block[67325-67386]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[67138-67167]:ReturnStatement[67343-67372]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[67187-67472]:IfStatement[67392-67677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67202-67252]:Block[67407-67457]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "info" : "IfStatement[67258-67472]:IfStatement[67463-67677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67328-67389]:Block[67533-67594]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[67346-67375]:ReturnStatement[67551-67580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67395-67472]:Block[67600-67677]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[67413-67428]:ExpressionStatement[67618-67633]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[67445-67458]:ReturnStatement[67650-67663]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[67485-67497]:ReturnStatement[67690-67702]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67544-67551]:PrimitiveType[67749-67756]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[67552-67559]:SimpleName[67757-67764]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[67560-67567]:SingleVariableDeclaration[67765-67772]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[67569-67587]:SingleVariableDeclaration[67774-67792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67589-67683]:Block[67794-67888]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[67603-67615]:ReturnStatement[67808-67820]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[67762-67770]:Modifier[67967-67975]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67771-67778]:PrimitiveType[67976-67983]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[67779-67786]:SimpleName[67984-67991]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[67787-67794]:SingleVariableDeclaration[67992-67999]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[67796-67814]:SingleVariableDeclaration[68001-68019]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[67822-67829]:Modifier[68027-68034]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[67830-67836]:Modifier[68035-68041]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67837-67844]:PrimitiveType[68042-68049]"
    }, {
      "left" : "isWhitespace",
      "right" : "isWhitespace",
      "info" : "SimpleName[67845-67857]:SimpleName[68050-68062]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[67858-67865]:SingleVariableDeclaration[68063-68070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67867-68029]:Block[68072-68234]"
    }, {
      "left" : "if (t.isCharacter())",
      "right" : "if (t.isCharacter())",
      "info" : "IfStatement[67877-68001]:IfStatement[68082-68206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67898-68001]:Block[68103-68206]"
    }, {
      "left" : "String data = t.asCharacter().getData();",
      "right" : "String data = t.asCharacter().getData();",
      "info" : "VariableDeclarationStatement[67912-67952]:VariableDeclarationStatement[68117-68157]"
    }, {
      "left" : "return isWhitespace(data);",
      "right" : "return isWhitespace(data);",
      "info" : "ReturnStatement[67965-67991]:ReturnStatement[68170-68196]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[68010-68023]:ReturnStatement[68215-68228]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[68035-68042]:Modifier[68240-68247]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68043-68049]:Modifier[68248-68254]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[68050-68057]:PrimitiveType[68255-68262]"
    }, {
      "left" : "isWhitespace",
      "right" : "isWhitespace",
      "info" : "SimpleName[68058-68070]:SimpleName[68263-68275]"
    }, {
      "left" : "String data",
      "right" : "String data",
      "info" : "SingleVariableDeclaration[68071-68082]:SingleVariableDeclaration[68276-68287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68084-68132]:Block[68289-68337]"
    }, {
      "left" : "return StringUtil.isBlank(data);",
      "right" : "return StringUtil.isBlank(data);",
      "info" : "ReturnStatement[68094-68126]:ReturnStatement[68299-68331]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[68138-68145]:Modifier[68343-68350]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68146-68152]:Modifier[68351-68357]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68153-68157]:PrimitiveType[68358-68362]"
    }, {
      "left" : "handleRcData",
      "right" : "handleRcData",
      "info" : "SimpleName[68158-68170]:SimpleName[68363-68375]"
    }, {
      "left" : "Token.StartTag startTag",
      "right" : "Token.StartTag startTag",
      "info" : "SingleVariableDeclaration[68171-68194]:SingleVariableDeclaration[68376-68399]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[68196-68214]:SingleVariableDeclaration[68401-68419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68216-68369]:Block[68421-68574]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.Rcdata);",
      "right" : "tb.tokeniser.transition(TokeniserState.Rcdata);",
      "info" : "ExpressionStatement[68226-68273]:ExpressionStatement[68431-68478]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[68282-68305]:ExpressionStatement[68487-68510]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[68314-68334]:ExpressionStatement[68519-68539]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[68343-68363]:ExpressionStatement[68548-68568]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[68375-68382]:Modifier[68580-68587]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68383-68389]:Modifier[68588-68594]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68390-68394]:PrimitiveType[68595-68599]"
    }, {
      "left" : "handleRawtext",
      "right" : "handleRawtext",
      "info" : "SimpleName[68395-68408]:SimpleName[68600-68613]"
    }, {
      "left" : "Token.StartTag startTag",
      "right" : "Token.StartTag startTag",
      "info" : "SingleVariableDeclaration[68409-68432]:SingleVariableDeclaration[68614-68637]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[68434-68452]:SingleVariableDeclaration[68639-68657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68454-68608]:Block[68659-68813]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.Rawtext);",
      "right" : "tb.tokeniser.transition(TokeniserState.Rawtext);",
      "info" : "ExpressionStatement[68464-68512]:ExpressionStatement[68669-68717]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[68521-68544]:ExpressionStatement[68726-68749]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[68553-68573]:ExpressionStatement[68758-68778]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[68582-68602]:ExpressionStatement[68787-68807]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68900-68906]:Modifier[69105-69111]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68907-68912]:Modifier[69112-69117]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[68913-68918]:TYPE_DECLARATION_KIND[69118-69123]"
    }, {
      "left" : "Constants",
      "right" : "Constants",
      "info" : "SimpleName[68919-68928]:SimpleName[69124-69133]"
    } ]
  },
  "interFileMappings" : { }
}