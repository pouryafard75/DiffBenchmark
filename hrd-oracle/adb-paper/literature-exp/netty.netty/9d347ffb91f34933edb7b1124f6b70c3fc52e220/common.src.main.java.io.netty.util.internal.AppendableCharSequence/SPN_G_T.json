{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "AppendableCharSequence",
      "right" : "AppendableCharSequence",
      "info" : "TypeDeclaration[695-4073]:TypeDeclaration[695-5029]"
    }, {
      "left" : "private char[] chars;",
      "right" : "private char[] chars;",
      "info" : "FieldDeclaration[779-800]:FieldDeclaration[779-800]"
    }, {
      "left" : "private int pos;",
      "right" : "private int pos;",
      "info" : "FieldDeclaration[805-821]:FieldDeclaration[805-821]"
    }, {
      "left" : "public AppendableCharSequence(int length)",
      "right" : "public AppendableCharSequence(int length)",
      "info" : "MethodDeclaration[827-1035]:MethodDeclaration[827-1035]"
    }, {
      "left" : "private AppendableCharSequence(char[] chars)",
      "right" : "private AppendableCharSequence(char[] chars)",
      "info" : "MethodDeclaration[1041-1149]:MethodDeclaration[1041-1286]"
    }, {
      "left" : "public int length()",
      "right" : "public int length()",
      "info" : "MethodDeclaration[1155-1216]:MethodDeclaration[1292-1353]"
    }, {
      "left" : "public char charAt(int index)",
      "right" : "public char charAt(int index)",
      "info" : "MethodDeclaration[1222-1390]:MethodDeclaration[1359-1527]"
    }, {
      "left" : "public AppendableCharSequence subSequence(int start, int end)",
      "right" : "public AppendableCharSequence subSequence(int start, int end)",
      "info" : "MethodDeclaration[1396-1561]:MethodDeclaration[1927-2092]"
    }, {
      "left" : "public AppendableCharSequence append(char c)",
      "right" : "private void expand()",
      "info" : "MethodDeclaration[1567-2008]:MethodDeclaration[4248-4528]"
    }, {
      "left" : "public AppendableCharSequence append(CharSequence csq)",
      "right" : "public AppendableCharSequence append(CharSequence csq)",
      "info" : "MethodDeclaration[2014-2135]:MethodDeclaration[2347-2468]"
    }, {
      "left" : "public AppendableCharSequence append(CharSequence csq, int start, int end)",
      "right" : "public AppendableCharSequence append(CharSequence csq, int start, int end)",
      "info" : "MethodDeclaration[2141-2932]:MethodDeclaration[2474-3265]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[2938-3154]:MethodDeclaration[3271-3487]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[3160-3248]:MethodDeclaration[3493-3581]"
    }, {
      "left" : "public String substring(int start, int end)",
      "right" : "public String substring(int start, int end)",
      "info" : "MethodDeclaration[3254-3572]:MethodDeclaration[3587-3905]"
    }, {
      "left" : "private static char[] expand(char[] array, int neededSpace, int size)",
      "right" : "private static char[] expand(char[] array, int neededSpace, int size)",
      "info" : "MethodDeclaration[3578-4071]:MethodDeclaration[4534-5027]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[695-701]:Modifier[695-701]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[702-707]:Modifier[702-707]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[708-713]:TYPE_DECLARATION_KIND[708-713]"
    }, {
      "left" : "AppendableCharSequence",
      "right" : "AppendableCharSequence",
      "info" : "SimpleName[714-736]:SimpleName[714-736]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[748-760]:SimpleType[748-760]"
    }, {
      "left" : "Appendable",
      "right" : "Appendable",
      "info" : "SimpleType[762-772]:SimpleType[762-772]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[827-833]:Modifier[827-833]"
    }, {
      "left" : "AppendableCharSequence",
      "right" : "AppendableCharSequence",
      "info" : "SimpleName[834-856]:SimpleName[834-856]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[857-867]:SingleVariableDeclaration[857-867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[869-1035]:Block[869-1035]"
    }, {
      "left" : "if (length < 1)",
      "right" : "if (length < 1)",
      "info" : "IfStatement[879-995]:IfStatement[879-995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[895-995]:Block[895-995]"
    }, {
      "left" : "throw new IllegalArgumentException(\"length: \" + length + \" (length: >= 1)\");",
      "right" : "throw new IllegalArgumentException(\"length: \" + length + \" (length: >= 1)\");",
      "info" : "ThrowStatement[909-985]:ThrowStatement[909-985]"
    }, {
      "left" : "chars = new char[length];",
      "right" : "chars = new char[length];",
      "info" : "ExpressionStatement[1004-1029]:ExpressionStatement[1004-1029]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1041-1048]:Modifier[1041-1048]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[1072-1084]:SingleVariableDeclaration[1072-1084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1086-1149]:Block[1086-1286]"
    }, {
      "left" : "this.chars = chars;",
      "right" : "this.chars = chars;",
      "info" : "ExpressionStatement[1096-1115]:ExpressionStatement[1233-1252]"
    }, {
      "left" : "pos = chars.length;",
      "right" : "pos = chars.length;",
      "info" : "ExpressionStatement[1124-1143]:ExpressionStatement[1261-1280]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1155-1164]:MarkerAnnotation[1292-1301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1169-1175]:Modifier[1306-1312]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[1176-1179]:PrimitiveType[1313-1316]"
    }, {
      "left" : "length",
      "right" : "length",
      "info" : "SimpleName[1180-1186]:SimpleName[1317-1323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1189-1216]:Block[1326-1353]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[1199-1210]:ReturnStatement[1336-1347]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1222-1231]:MarkerAnnotation[1359-1368]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1236-1242]:Modifier[1373-1379]"
    }, {
      "left" : "char",
      "right" : "char",
      "info" : "PrimitiveType[1243-1247]:PrimitiveType[1380-1384]"
    }, {
      "left" : "charAt",
      "right" : "charAt",
      "info" : "SimpleName[1248-1254]:SimpleName[1385-1391]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[1255-1264]:SingleVariableDeclaration[1392-1401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1266-1390]:Block[1403-1527]"
    }, {
      "left" : "if (index > pos)",
      "right" : "if (index > pos)",
      "info" : "IfStatement[1276-1355]:IfStatement[1413-1492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1293-1355]:Block[1430-1492]"
    }, {
      "left" : "throw new IndexOutOfBoundsException();",
      "right" : "throw new IndexOutOfBoundsException();",
      "info" : "ThrowStatement[1307-1345]:ThrowStatement[1444-1482]"
    }, {
      "left" : "return chars[index];",
      "right" : "return chars[index];",
      "info" : "ReturnStatement[1364-1384]:ReturnStatement[1501-1521]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1396-1405]:MarkerAnnotation[1927-1936]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1410-1416]:Modifier[1941-1947]"
    }, {
      "left" : "AppendableCharSequence",
      "right" : "AppendableCharSequence",
      "info" : "SimpleType[1417-1439]:SimpleType[1948-1970]"
    }, {
      "left" : "subSequence",
      "right" : "subSequence",
      "info" : "SimpleName[1440-1451]:SimpleName[1971-1982]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[1452-1461]:SingleVariableDeclaration[1983-1992]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[1463-1470]:SingleVariableDeclaration[1994-2001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1472-1561]:Block[2003-2092]"
    }, {
      "left" : "return new AppendableCharSequence(Arrays.copyOfRange(chars, start, end));",
      "right" : "return new AppendableCharSequence(Arrays.copyOfRange(chars, start, end));",
      "info" : "ReturnStatement[1482-1555]:ReturnStatement[2013-2086]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1567-1576]:MarkerAnnotation[2098-2107]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1581-1587]:Modifier[2112-2118]"
    }, {
      "left" : "append",
      "right" : "expand",
      "info" : "SimpleName[1611-1617]:SimpleName[4261-4267]"
    }, {
      "left" : "char c",
      "right" : "char c",
      "info" : "SingleVariableDeclaration[1618-1624]:SingleVariableDeclaration[2149-2155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1626-2008]:Block[2171-2212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1626-2008]:Block[4270-4528]"
    }, {
      "left" : "pos == chars.length",
      "right" : "pos - 1",
      "info" : "InfixExpression[1640-1659]:InfixExpression[2291-2298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1661-1955]:Block[4270-4528]"
    }, {
      "left" : "char[] old = chars;",
      "right" : "char[] old = chars;",
      "info" : "VariableDeclarationStatement[1675-1694]:VariableDeclarationStatement[4280-4299]"
    }, {
      "left" : "int len = old.length << 1;",
      "right" : "int len = old.length << 1;",
      "info" : "VariableDeclarationStatement[1732-1758]:VariableDeclarationStatement[4329-4355]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[1771-1850]:IfStatement[4364-4435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1784-1850]:Block[4377-4435]"
    }, {
      "left" : "throw new IllegalStateException();",
      "right" : "throw new IllegalStateException();",
      "info" : "ThrowStatement[1802-1836]:ThrowStatement[4391-4425]"
    }, {
      "left" : "chars = new char[len];",
      "right" : "chars = new char[len];",
      "info" : "ExpressionStatement[1863-1885]:ExpressionStatement[4444-4466]"
    }, {
      "left" : "System.arraycopy(old, 0, chars, 0, old.length);",
      "right" : "System.arraycopy(old, 0, chars, 0, old.length);",
      "info" : "ExpressionStatement[1898-1945]:ExpressionStatement[4475-4522]"
    }, {
      "left" : "chars[pos++] = c;",
      "right" : "chars[pos++] = c;",
      "info" : "ExpressionStatement[1964-1981]:ExpressionStatement[2185-2202]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[1990-2002]:ReturnStatement[2323-2335]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2014-2023]:MarkerAnnotation[2347-2356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2028-2034]:Modifier[2361-2367]"
    }, {
      "left" : "AppendableCharSequence",
      "right" : "AppendableCharSequence",
      "info" : "SimpleType[2035-2057]:SimpleType[2368-2390]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[2058-2064]:SimpleName[2391-2397]"
    }, {
      "left" : "CharSequence csq",
      "right" : "CharSequence csq",
      "info" : "SingleVariableDeclaration[2065-2081]:SingleVariableDeclaration[2398-2414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2083-2135]:Block[2416-2468]"
    }, {
      "left" : "return append(csq, 0, csq.length());",
      "right" : "return append(csq, 0, csq.length());",
      "info" : "ReturnStatement[2093-2129]:ReturnStatement[2426-2462]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2141-2150]:MarkerAnnotation[2474-2483]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2155-2161]:Modifier[2488-2494]"
    }, {
      "left" : "AppendableCharSequence",
      "right" : "AppendableCharSequence",
      "info" : "SimpleType[2162-2184]:SimpleType[2495-2517]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[2185-2191]:SimpleName[2518-2524]"
    }, {
      "left" : "CharSequence csq",
      "right" : "CharSequence csq",
      "info" : "SingleVariableDeclaration[2192-2208]:SingleVariableDeclaration[2525-2541]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[2210-2219]:SingleVariableDeclaration[2543-2552]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[2221-2228]:SingleVariableDeclaration[2554-2561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2230-2932]:Block[2563-3265]"
    }, {
      "left" : "if (csq.length() < end)",
      "right" : "if (csq.length() < end)",
      "info" : "IfStatement[2240-2326]:IfStatement[2573-2659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2264-2326]:Block[2597-2659]"
    }, {
      "left" : "throw new IndexOutOfBoundsException();",
      "right" : "throw new IndexOutOfBoundsException();",
      "info" : "ThrowStatement[2278-2316]:ThrowStatement[2611-2649]"
    }, {
      "left" : "int length = end - start;",
      "right" : "int length = end - start;",
      "info" : "VariableDeclarationStatement[2335-2360]:VariableDeclarationStatement[2668-2693]"
    }, {
      "left" : "if (length > chars.length - pos)",
      "right" : "if (length > chars.length - pos)",
      "info" : "IfStatement[2369-2467]:IfStatement[2702-2800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2402-2467]:Block[2735-2800]"
    }, {
      "left" : "chars = expand(chars, pos + length, pos);",
      "right" : "chars = expand(chars, pos + length, pos);",
      "info" : "ExpressionStatement[2416-2457]:ExpressionStatement[2749-2790]"
    }, {
      "left" : "if (csq instanceof AppendableCharSequence)",
      "right" : "if (csq instanceof AppendableCharSequence)",
      "info" : "IfStatement[2476-2808]:IfStatement[2809-3141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2519-2808]:Block[2852-3141]"
    }, {
      "left" : "AppendableCharSequence seq = (AppendableCharSequence) csq;",
      "right" : "AppendableCharSequence seq = (AppendableCharSequence) csq;",
      "info" : "VariableDeclarationStatement[2590-2648]:VariableDeclarationStatement[2923-2981]"
    }, {
      "left" : "char[] src = seq.chars;",
      "right" : "char[] src = seq.chars;",
      "info" : "VariableDeclarationStatement[2661-2684]:VariableDeclarationStatement[2994-3017]"
    }, {
      "left" : "System.arraycopy(src, start, chars, pos, length);",
      "right" : "System.arraycopy(src, start, chars, pos, length);",
      "info" : "ExpressionStatement[2697-2746]:ExpressionStatement[3030-3079]"
    }, {
      "left" : "pos += length;",
      "right" : "pos += length;",
      "info" : "ExpressionStatement[2759-2773]:ExpressionStatement[3092-3106]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2786-2798]:ReturnStatement[3119-3131]"
    }, {
      "left" : "for (int i = start; i < end; i++)",
      "right" : "for (int i = start; i < end; i++)",
      "info" : "ForStatement[2817-2904]:ForStatement[3150-3237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2851-2904]:Block[3184-3237]"
    }, {
      "left" : "chars[pos++] = csq.charAt(i);",
      "right" : "chars[pos++] = csq.charAt(i);",
      "info" : "ExpressionStatement[2865-2894]:ExpressionStatement[3198-3227]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2914-2926]:ReturnStatement[3247-3259]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3110-3116]:Modifier[3443-3449]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3117-3121]:PrimitiveType[3450-3454]"
    }, {
      "left" : "reset",
      "right" : "reset",
      "info" : "SimpleName[3122-3127]:SimpleName[3455-3460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3130-3154]:Block[3463-3487]"
    }, {
      "left" : "pos = 0;",
      "right" : "pos = 0;",
      "info" : "ExpressionStatement[3140-3148]:ExpressionStatement[3473-3481]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3160-3169]:MarkerAnnotation[3493-3502]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3174-3180]:Modifier[3507-3513]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3181-3187]:SimpleType[3514-3520]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[3188-3196]:SimpleName[3521-3529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3199-3248]:Block[3532-3581]"
    }, {
      "left" : "return new String(chars, 0, pos);",
      "right" : "return new String(chars, 0, pos);",
      "info" : "ReturnStatement[3209-3242]:ReturnStatement[3542-3575]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3334-3340]:Modifier[3667-3673]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3341-3347]:SimpleType[3674-3680]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[3348-3357]:SimpleName[3681-3690]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[3358-3367]:SingleVariableDeclaration[3691-3700]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[3369-3376]:SingleVariableDeclaration[3702-3709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3378-3572]:Block[3711-3905]"
    }, {
      "left" : "int length = end - start;",
      "right" : "int length = end - start;",
      "info" : "VariableDeclarationStatement[3388-3413]:VariableDeclarationStatement[3721-3746]"
    }, {
      "left" : "if (start > pos || length > pos)",
      "right" : "if (start > pos || length > pos)",
      "info" : "IfStatement[3422-3517]:IfStatement[3755-3850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3455-3517]:Block[3788-3850]"
    }, {
      "left" : "throw new IndexOutOfBoundsException();",
      "right" : "throw new IndexOutOfBoundsException();",
      "info" : "ThrowStatement[3469-3507]:ThrowStatement[3802-3840]"
    }, {
      "left" : "return new String(chars, start, length);",
      "right" : "return new String(chars, start, length);",
      "info" : "ReturnStatement[3526-3566]:ReturnStatement[3859-3899]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3578-3585]:Modifier[4534-4541]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3586-3592]:Modifier[4542-4548]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[3593-3599]:ArrayType[4549-4555]"
    }, {
      "left" : "expand",
      "right" : "expand",
      "info" : "SimpleName[3600-3606]:SimpleName[4556-4562]"
    }, {
      "left" : "char[] array",
      "right" : "char[] array",
      "info" : "SingleVariableDeclaration[3607-3619]:SingleVariableDeclaration[4563-4575]"
    }, {
      "left" : "int neededSpace",
      "right" : "int neededSpace",
      "info" : "SingleVariableDeclaration[3621-3636]:SingleVariableDeclaration[4577-4592]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[3638-3646]:SingleVariableDeclaration[4594-4602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3648-4071]:Block[4604-5027]"
    }, {
      "left" : "int newCapacity = array.length;",
      "right" : "int newCapacity = array.length;",
      "info" : "VariableDeclarationStatement[3658-3689]:VariableDeclarationStatement[4614-4645]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[3698-3934]:DoStatement[4654-4890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3701-3899]:Block[4657-4855]"
    }, {
      "left" : "newCapacity <<= 1;",
      "right" : "newCapacity <<= 1;",
      "info" : "ExpressionStatement[3769-3787]:ExpressionStatement[4725-4743]"
    }, {
      "left" : "if (newCapacity < 0)",
      "right" : "if (newCapacity < 0)",
      "info" : "IfStatement[3801-3888]:IfStatement[4757-4844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3822-3888]:Block[4778-4844]"
    }, {
      "left" : "throw new IllegalStateException();",
      "right" : "throw new IllegalStateException();",
      "info" : "ThrowStatement[3840-3874]:ThrowStatement[4796-4830]"
    }, {
      "left" : "char[] newArray = new char[newCapacity];",
      "right" : "char[] newArray = new char[newCapacity];",
      "info" : "VariableDeclarationStatement[3944-3984]:VariableDeclarationStatement[4900-4940]"
    }, {
      "left" : "System.arraycopy(array, 0, newArray, 0, size);",
      "right" : "System.arraycopy(array, 0, newArray, 0, size);",
      "info" : "ExpressionStatement[3993-4039]:ExpressionStatement[4949-4995]"
    }, {
      "left" : "return newArray;",
      "right" : "return newArray;",
      "info" : "ReturnStatement[4049-4065]:ReturnStatement[5005-5021]"
    } ]
  },
  "interFileMappings" : { }
}