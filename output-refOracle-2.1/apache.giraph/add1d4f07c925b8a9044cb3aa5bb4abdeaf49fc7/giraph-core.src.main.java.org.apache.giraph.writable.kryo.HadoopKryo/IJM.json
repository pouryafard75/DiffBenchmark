{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "HadoopKryo",
      "right" : "HadoopKryo",
      "info" : "TypeDeclaration[2776-14958]:TypeDeclaration[2851-15446]"
    }, {
      "left" : "private static final KryoPool KRYO_POOL = new KryoPool.Builder(\n      new KryoFactory() {\n        @Override\n        public Kryo create() {\n          return createKryo();\n        }\n      }).build();",
      "right" : "private static final KryoPool KRYO_POOL = new KryoPool.Builder(\n      new KryoFactory() {\n        @Override\n        public Kryo create() {\n          return createKryo();\n        }\n      }).build();",
      "info" : "FieldDeclaration[3196-3468]:FieldDeclaration[3271-3543]"
    }, {
      "left" : "public Kryo create()",
      "right" : "public Kryo create()",
      "info" : "MethodDeclaration[3369-3450]:MethodDeclaration[3444-3525]"
    }, {
      "left" : "private static final Map<Class<?>, String> NON_SERIALIZABLE;",
      "right" : "private static final Map<Class<?>, String> NON_SERIALIZABLE;",
      "info" : "FieldDeclaration[3472-3718]:FieldDeclaration[3547-3793]"
    }, {
      "left" : "private final InputChunked input = new InputChunked(4096);",
      "right" : "private final InputChunked input = new InputChunked(4096);",
      "info" : "FieldDeclaration[4631-4720]:FieldDeclaration[4706-4795]"
    }, {
      "left" : "private final OutputChunked output = new OutputChunked(4096);",
      "right" : "private final OutputChunked output = new OutputChunked(4096);",
      "info" : "FieldDeclaration[4723-4816]:FieldDeclaration[4798-4891]"
    }, {
      "left" : "private final DataInputWrapperStream dataInputWrapperStream =\n      new DataInputWrapperStream();",
      "right" : "private final DataInputWrapperStream dataInputWrapperStream =\n      new DataInputWrapperStream();",
      "info" : "FieldDeclaration[4820-4960]:FieldDeclaration[4895-5035]"
    }, {
      "left" : "private final DataOutputWrapperStream dataOutputWrapperStream =\n      new DataOutputWrapperStream();",
      "right" : "private final DataOutputWrapperStream dataOutputWrapperStream =\n      new DataOutputWrapperStream();",
      "info" : "FieldDeclaration[4963-5107]:FieldDeclaration[5038-5182]"
    }, {
      "left" : "private final ObjectMap<Class<?>, ReusableFieldSerializer<Object>>\n  classToIntoSerializer = new ObjectMap<>();",
      "right" : "private final ObjectMap<Class<?>, ReusableFieldSerializer<Object>>\n  classToIntoSerializer = new ObjectMap<>();",
      "info" : "FieldDeclaration[5111-5340]:FieldDeclaration[5186-5415]"
    }, {
      "left" : "private HadoopKryo()",
      "right" : "private HadoopKryo()",
      "info" : "MethodDeclaration[5344-5445]:MethodDeclaration[5419-5520]"
    }, {
      "left" : "public static void writeClassAndObject(\n      final DataOutput out, final Object object)",
      "right" : "public static void writeClassAndObject(\n      final DataOutput out, final Object object)",
      "info" : "MethodDeclaration[5467-5794]:MethodDeclaration[5542-5869]"
    }, {
      "left" : "public static <T> T readClassAndObject(DataInput in)",
      "right" : "public static <T> T readClassAndObject(DataInput in)",
      "info" : "MethodDeclaration[5798-6170]:MethodDeclaration[5873-6245]"
    }, {
      "left" : "public static void writeOutOfObject(\n      final DataOutput out, final Object object)",
      "right" : "public static void writeOutOfObject(\n      final DataOutput out, final Object object)",
      "info" : "MethodDeclaration[6174-6467]:MethodDeclaration[6249-6542]"
    }, {
      "left" : "public static void readIntoObject(DataInput in, Object object)",
      "right" : "public static void readIntoObject(DataInput in, Object object)",
      "info" : "MethodDeclaration[6471-6782]:MethodDeclaration[6546-6857]"
    }, {
      "left" : "public static <T> T createCopy(final T object)",
      "right" : "public static <T> T createCopy(final T object)",
      "info" : "MethodDeclaration[6786-7246]:MethodDeclaration[6861-7321]"
    }, {
      "left" : "public T execute(Kryo kryo)",
      "right" : "public T execute(Kryo kryo)",
      "info" : "MethodDeclaration[7147-7234]:MethodDeclaration[7222-7309]"
    }, {
      "left" : "private static HadoopKryo createKryo()",
      "right" : "private static HadoopKryo createKryo()",
      "info" : "MethodDeclaration[7280-11081]:MethodDeclaration[7355-11051]"
    }, {
      "left" : "public Serializer makeSerializer(Kryo kryo, final Class<?> type)",
      "right" : "public Serializer makeSerializer(Kryo kryo, final Class<?> type)",
      "info" : "MethodDeclaration[8946-11051]:MethodDeclaration[8916-11021]"
    }, {
      "left" : "public Object read(Kryo kryo, Input input, Class type)",
      "right" : "public Object read(Kryo kryo, Input input, Class type)",
      "info" : "MethodDeclaration[9343-9783]:MethodDeclaration[9313-9753]"
    }, {
      "left" : "public void write(Kryo kryo, Output output, Object object)",
      "right" : "public void write(Kryo kryo, Output output, Object object)",
      "info" : "MethodDeclaration[9799-10243]:MethodDeclaration[9769-10213]"
    }, {
      "left" : "private void setDataInput(DataInput in)",
      "right" : "private void setDataInput(DataInput in)",
      "info" : "MethodDeclaration[11085-11337]:MethodDeclaration[11573-11825]"
    }, {
      "left" : "private void setDataOutput(DataOutput out)",
      "right" : "private void setDataOutput(DataOutput out)",
      "info" : "MethodDeclaration[11341-11606]:MethodDeclaration[11829-12094]"
    }, {
      "left" : "private ReusableFieldSerializer<Object> getOrCreateReusableSerializer(\n      Class<?> type)",
      "right" : "private ReusableFieldSerializer<Object> getOrCreateReusableSerializer(\n      Class<?> type)",
      "info" : "MethodDeclaration[11610-12102]:MethodDeclaration[12098-12590]"
    }, {
      "left" : "private static void writeInternal(\n      final DataOutput out, final Object object, final boolean outOf)",
      "right" : "private static void writeInternal(\n      final DataOutput out, final Object object, final boolean outOf)",
      "info" : "MethodDeclaration[12106-12946]:MethodDeclaration[12594-13434]"
    }, {
      "left" : "public Void execute(Kryo kryo)",
      "right" : "public Void execute(Kryo kryo)",
      "info" : "MethodDeclaration[12547-12934]:MethodDeclaration[13035-13422]"
    }, {
      "left" : "private static <T> T readInternal(\n      final DataInput in, final T outObject, final boolean into)",
      "right" : "private static <T> T readInternal(\n      final DataInput in, final T outObject, final boolean into)",
      "info" : "MethodDeclaration[12950-14000]:MethodDeclaration[13438-14488]"
    }, {
      "left" : "public T execute(Kryo kryo)",
      "right" : "public T execute(Kryo kryo)",
      "info" : "MethodDeclaration[13556-13988]:MethodDeclaration[14044-14476]"
    }, {
      "left" : "private void readIntoObject(Input input, Object object)",
      "right" : "private void readIntoObject(Input input, Object object)",
      "info" : "MethodDeclaration[14004-14564]:MethodDeclaration[14492-15052]"
    }, {
      "left" : "private void writeOutOfObject(Output output, Object object)",
      "right" : "private void writeOutOfObject(Output output, Object object)",
      "info" : "MethodDeclaration[14568-14955]:MethodDeclaration[15056-15443]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3408-3450]:Block[3483-3525]"
    }, {
      "left" : "return createKryo();",
      "right" : "return createKryo();",
      "info" : "ReturnStatement[3420-3440]:ReturnStatement[3495-3515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3729-4525]:Block[3804-4600]"
    }, {
      "left" : "NON_SERIALIZABLE = new LinkedHashMap<>();",
      "right" : "NON_SERIALIZABLE = new LinkedHashMap<>();",
      "info" : "ExpressionStatement[3735-3776]:ExpressionStatement[3810-3851]"
    }, {
      "left" : "NON_SERIALIZABLE.put(\n        NonKryoWritable.class,\n        \"it is marked to not allow serialization, \" +\n        \"look at the class for more details\");",
      "right" : "NON_SERIALIZABLE.put(\n        NonKryoWritable.class,\n        \"it is marked to not allow serialization, \" +\n        \"look at the class for more details\");",
      "info" : "ExpressionStatement[3781-3934]:ExpressionStatement[3856-4009]"
    }, {
      "left" : "NON_SERIALIZABLE.put(\n        KryoWritableWrapper.class, \"recursion is dissallowed\");",
      "right" : "NON_SERIALIZABLE.put(\n        KryoWritableWrapper.class, \"recursion is dissallowed\");",
      "info" : "ExpressionStatement[3939-4024]:ExpressionStatement[4014-4099]"
    }, {
      "left" : "NON_SERIALIZABLE.put(\n        Configuration.class,\n        \"it cannot be supported since it contains ClassLoader\");",
      "right" : "NON_SERIALIZABLE.put(\n        Configuration.class,\n        \"it cannot be supported since it contains ClassLoader\");",
      "info" : "ExpressionStatement[4029-4144]:ExpressionStatement[4104-4219]"
    }, {
      "left" : "NON_SERIALIZABLE.put(\n        GiraphConfigurationSettable.class, \"configuration cannot be set\");",
      "right" : "NON_SERIALIZABLE.put(\n        GiraphConfigurationSettable.class, \"configuration cannot be set\");",
      "info" : "ExpressionStatement[4149-4245]:ExpressionStatement[4224-4320]"
    }, {
      "left" : "NON_SERIALIZABLE.put(\n        Configurable.class, \"configuration cannot be set\");",
      "right" : "NON_SERIALIZABLE.put(\n        Configurable.class, \"configuration cannot be set\");",
      "info" : "ExpressionStatement[4250-4331]:ExpressionStatement[4325-4406]"
    }, {
      "left" : "NON_SERIALIZABLE.put(\n        Random.class,\n        \"it should be rarely serialized, since it would create same stream \" +\n        \"of numbers everywhere, use TransientRandom instead\");",
      "right" : "NON_SERIALIZABLE.put(\n        Random.class,\n        \"it should be rarely serialized, since it would create same stream \" +\n        \"of numbers everywhere, use TransientRandom instead\");",
      "info" : "ExpressionStatement[4336-4521]:ExpressionStatement[4411-4596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5440-5445]:Block[5515-5520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5750-5794]:Block[5825-5869]"
    }, {
      "left" : "writeInternal(out, object, false);",
      "right" : "writeInternal(out, object, false);",
      "info" : "ExpressionStatement[5756-5790]:ExpressionStatement[5831-5865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6123-6170]:Block[6198-6245]"
    }, {
      "left" : "return readInternal(in, null, false);",
      "right" : "return readInternal(in, null, false);",
      "info" : "ReturnStatement[6129-6166]:ReturnStatement[6204-6241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6424-6467]:Block[6499-6542]"
    }, {
      "left" : "writeInternal(out, object, true);",
      "right" : "writeInternal(out, object, true);",
      "info" : "ExpressionStatement[6430-6463]:ExpressionStatement[6505-6538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6741-6782]:Block[6816-6857]"
    }, {
      "left" : "readInternal(in, object, true);",
      "right" : "readInternal(in, object, true);",
      "info" : "ExpressionStatement[6747-6778]:ExpressionStatement[6822-6853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7090-7246]:Block[7165-7321]"
    }, {
      "left" : "return KRYO_POOL.run(new KryoCallback<T>() {\n      @Override\n      public T execute(Kryo kryo) {\n        return kryo.copy(object);\n      }\n    });",
      "right" : "return KRYO_POOL.run(new KryoCallback<T>() {\n      @Override\n      public T execute(Kryo kryo) {\n        return kryo.copy(object);\n      }\n    });",
      "info" : "ReturnStatement[7096-7242]:ReturnStatement[7171-7317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7191-7234]:Block[7266-7309]"
    }, {
      "left" : "return kryo.copy(object);",
      "right" : "return kryo.copy(object);",
      "info" : "ReturnStatement[7201-7226]:ReturnStatement[7276-7301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7435-11081]:Block[7510-11051]"
    }, {
      "left" : "HadoopKryo kryo = new HadoopKryo();",
      "right" : "HadoopKryo kryo = new HadoopKryo();",
      "info" : "VariableDeclarationStatement[7441-7476]:VariableDeclarationStatement[7516-7551]"
    }, {
      "left" : "String version = System.getProperty(\"java.version\");",
      "right" : "String version = System.getProperty(\"java.version\");",
      "info" : "VariableDeclarationStatement[7482-7534]:VariableDeclarationStatement[7557-7609]"
    }, {
      "left" : "char minor = version.charAt(2);",
      "right" : "char minor = version.charAt(2);",
      "info" : "VariableDeclarationStatement[7539-7570]:VariableDeclarationStatement[7614-7645]"
    }, {
      "left" : "if (minor >= '8')",
      "right" : "if (minor >= '8')",
      "info" : "IfStatement[7575-8012]:IfStatement[7650-8087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7593-8012]:Block[7668-8087]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7601-8006]:TryStatement[7676-8081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7605-7806]:Block[7680-7881]"
    }, {
      "left" : "kryo.register(Class.forName(\"java.lang.invoke.SerializedLambda\"));",
      "right" : "kryo.register(Class.forName(\"java.lang.invoke.SerializedLambda\"));",
      "info" : "ExpressionStatement[7615-7681]:ExpressionStatement[7690-7756]"
    }, {
      "left" : "kryo.register(Class.forName(\"com.esotericsoftware.kryo.Kryo$Closure\"),\n            new ClosureSerializer());",
      "right" : "kryo.register(Class.forName(\"com.esotericsoftware.kryo.Kryo$Closure\"),\n            new ClosureSerializer());",
      "info" : "ExpressionStatement[7690-7798]:ExpressionStatement[7765-7873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7840-8006]:Block[7915-8081]"
    }, {
      "left" : "throw new IllegalStateException(\n            \"Trying to use Kryo on >= Java 8 (\" + version +\n            \"), but unable to find needed classes\", e);",
      "right" : "throw new IllegalStateException(\n            \"Trying to use Kryo on >= Java 8 (\" + version +\n            \"), but unable to find needed classes\", e);",
      "info" : "ThrowStatement[7850-7998]:ThrowStatement[7925-8073]"
    }, {
      "left" : "kryo.register(Arrays.asList().getClass(), new ArraysAsListSerializer());",
      "right" : "kryo.register(Arrays.asList().getClass(), new ArraysAsListSerializer());",
      "info" : "ExpressionStatement[8018-8090]:ExpressionStatement[8093-8165]"
    }, {
      "left" : "kryo.register(Collections.nCopies(1, new Object()).getClass(),\n        new CollectionsNCopiesSerializer());",
      "right" : "kryo.register(Collections.nCopies(1, new Object()).getClass(),\n        new CollectionsNCopiesSerializer());",
      "info" : "ExpressionStatement[8095-8202]:ExpressionStatement[8170-8277]"
    }, {
      "left" : "ImmutableListSerializer.registerSerializers(kryo);",
      "right" : "ImmutableListSerializer.registerSerializers(kryo);",
      "info" : "ExpressionStatement[8208-8258]:ExpressionStatement[8283-8333]"
    }, {
      "left" : "kryo.register(\n          Class.forName(\"com.google.common.collect.RegularImmutableList\"),\n          new ImmutableListSerializer());",
      "right" : "registerSerializer(kryo, \"com.google.common.collect.RegularImmutableMap\",\n        new ImmutableMapSerializer());",
      "info" : "ExpressionStatement[8337-8468]:ExpressionStatement[8339-8451]"
    }, {
      "left" : "FastUtilSerializer.registerAll(kryo);",
      "right" : "FastUtilSerializer.registerAll(kryo);",
      "info" : "ExpressionStatement[8737-8774]:ExpressionStatement[8707-8744]"
    }, {
      "left" : "kryo.setInstantiatorStrategy(new DefaultInstantiatorStrategy(\n        new StdInstantiatorStrategy()));",
      "right" : "kryo.setInstantiatorStrategy(new DefaultInstantiatorStrategy(\n        new StdInstantiatorStrategy()));",
      "info" : "ExpressionStatement[8780-8882]:ExpressionStatement[8750-8852]"
    }, {
      "left" : "kryo.setDefaultSerializer(new SerializerFactory() {\n      @SuppressWarnings(\"rawtypes\")\n      @Override\n      public Serializer makeSerializer(Kryo kryo, final Class<?> type) {\n        for (final Entry<Class<?>, String> entry :\n            NON_SERIALIZABLE.entrySet()) {\n          if (entry.getKey().isAssignableFrom(type)) {\n            // Allow Class object to be serialized, but not a live instance.\n            return new Serializer() {\n              @Override\n              public Object read(Kryo kryo, Input input, Class type) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n\n              @Override\n              public void write(Kryo kryo, Output output, Object object) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n            };\n          }\n        }\n\n        if (Writable.class.isAssignableFrom(type) &&\n            !KryoIgnoreWritable.class.isAssignableFrom(type) &&\n            // remove BasicSet, BasicArrayList and Basic2ObjectMap temporarily,\n            // for lack of constructors\n            !BasicSet.class.isAssignableFrom(type) &&\n            !BasicArrayList.class.isAssignableFrom(type) &&\n            !Basic2ObjectMap.class.isAssignableFrom(type)) {\n          // use the Writable method defined by the type\n          DirectWritableSerializer serializer = new DirectWritableSerializer();\n          return serializer;\n        } else {\n          FieldSerializer serializer = new FieldSerializer<>(kryo, type);\n          serializer.setIgnoreSyntheticFields(false);\n          return serializer;\n        }\n      }\n    });",
      "right" : "kryo.setDefaultSerializer(new SerializerFactory() {\n      @SuppressWarnings(\"rawtypes\")\n      @Override\n      public Serializer makeSerializer(Kryo kryo, final Class<?> type) {\n        for (final Entry<Class<?>, String> entry :\n            NON_SERIALIZABLE.entrySet()) {\n          if (entry.getKey().isAssignableFrom(type)) {\n            // Allow Class object to be serialized, but not a live instance.\n            return new Serializer() {\n              @Override\n              public Object read(Kryo kryo, Input input, Class type) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n\n              @Override\n              public void write(Kryo kryo, Output output, Object object) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n            };\n          }\n        }\n\n        if (Writable.class.isAssignableFrom(type) &&\n            !KryoIgnoreWritable.class.isAssignableFrom(type) &&\n            // remove BasicSet, BasicArrayList and Basic2ObjectMap temporarily,\n            // for lack of constructors\n            !BasicSet.class.isAssignableFrom(type) &&\n            !BasicArrayList.class.isAssignableFrom(type) &&\n            !Basic2ObjectMap.class.isAssignableFrom(type)) {\n          // use the Writable method defined by the type\n          DirectWritableSerializer serializer = new DirectWritableSerializer();\n          return serializer;\n        } else {\n          FieldSerializer serializer = new FieldSerializer<>(kryo, type);\n          serializer.setIgnoreSyntheticFields(false);\n          return serializer;\n        }\n      }\n    });",
      "info" : "ExpressionStatement[8888-11059]:ExpressionStatement[8858-11029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9063-11051]:Block[9033-11021]"
    }, {
      "left" : "for (final Entry<Class<?>, String> entry :\n            NON_SERIALIZABLE.entrySet())",
      "right" : "for (final Entry<Class<?>, String> entry :\n            NON_SERIALIZABLE.entrySet())",
      "info" : "EnhancedForStatement[9073-10280]:EnhancedForStatement[9043-10250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9157-10280]:Block[9127-10250]"
    }, {
      "left" : "if (entry.getKey().isAssignableFrom(type))",
      "right" : "if (entry.getKey().isAssignableFrom(type))",
      "info" : "IfStatement[9169-10270]:IfStatement[9139-10240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9212-10270]:Block[9182-10240]"
    }, {
      "left" : "return new Serializer() {\n              @Override\n              public Object read(Kryo kryo, Input input, Class type) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n\n              @Override\n              public void write(Kryo kryo, Output output, Object object) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n            };",
      "right" : "return new Serializer() {\n              @Override\n              public Object read(Kryo kryo, Input input, Class type) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n\n              @Override\n              public void write(Kryo kryo, Output output, Object object) {\n                throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");\n              }\n            };",
      "info" : "ReturnStatement[9303-10258]:ReturnStatement[9273-10228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9422-9783]:Block[9392-9753]"
    }, {
      "left" : "throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");",
      "right" : "throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");",
      "info" : "ThrowStatement[9440-9767]:ThrowStatement[9410-9737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9882-10243]:Block[9852-10213]"
    }, {
      "left" : "throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");",
      "right" : "throw new RuntimeException(\"Cannot serialize \" + type +\n                    \". Objects being serialized cannot capture \" +\n                    entry.getKey() + \" because \" + entry.getValue() +\n                    \". Either remove field in question\" +\n                    \", or make it transient (so that it isn't serialized)\");",
      "info" : "ThrowStatement[9900-10227]:ThrowStatement[9870-10197]"
    }, {
      "left" : "if (Writable.class.isAssignableFrom(type) &&\n            !KryoIgnoreWritable.class.isAssignableFrom(type) &&\n            // remove BasicSet, BasicArrayList and Basic2ObjectMap temporarily,\n            // for lack of constructors\n            !BasicSet.class.isAssignableFrom(type) &&\n            !BasicArrayList.class.isAssignableFrom(type) &&\n            !Basic2ObjectMap.class.isAssignableFrom(type))",
      "right" : "if (Writable.class.isAssignableFrom(type) &&\n            !KryoIgnoreWritable.class.isAssignableFrom(type) &&\n            // remove BasicSet, BasicArrayList and Basic2ObjectMap temporarily,\n            // for lack of constructors\n            !BasicSet.class.isAssignableFrom(type) &&\n            !BasicArrayList.class.isAssignableFrom(type) &&\n            !Basic2ObjectMap.class.isAssignableFrom(type))",
      "info" : "IfStatement[10290-11043]:IfStatement[10260-11013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10692-10869]:Block[10662-10839]"
    }, {
      "left" : "DirectWritableSerializer serializer = new DirectWritableSerializer();",
      "right" : "DirectWritableSerializer serializer = new DirectWritableSerializer();",
      "info" : "VariableDeclarationStatement[10761-10830]:VariableDeclarationStatement[10731-10800]"
    }, {
      "left" : "return serializer;",
      "right" : "return serializer;",
      "info" : "ReturnStatement[10841-10859]:ReturnStatement[10811-10829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10875-11043]:Block[10845-11013]"
    }, {
      "left" : "FieldSerializer serializer = new FieldSerializer<>(kryo, type);",
      "right" : "FieldSerializer serializer = new FieldSerializer<>(kryo, type);",
      "info" : "VariableDeclarationStatement[10887-10950]:VariableDeclarationStatement[10857-10920]"
    }, {
      "left" : "serializer.setIgnoreSyntheticFields(false);",
      "right" : "serializer.setIgnoreSyntheticFields(false);",
      "info" : "ExpressionStatement[10961-11004]:ExpressionStatement[10931-10974]"
    }, {
      "left" : "return serializer;",
      "right" : "return serializer;",
      "info" : "ReturnStatement[11015-11033]:ReturnStatement[10985-11003]"
    }, {
      "left" : "return kryo;",
      "right" : "return kryo;",
      "info" : "ReturnStatement[11065-11077]:ReturnStatement[11035-11047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11237-11337]:Block[11725-11825]"
    }, {
      "left" : "dataInputWrapperStream.setDataInput(in);",
      "right" : "dataInputWrapperStream.setDataInput(in);",
      "info" : "ExpressionStatement[11243-11283]:ExpressionStatement[11731-11771]"
    }, {
      "left" : "input.setInputStream(dataInputWrapperStream);",
      "right" : "input.setInputStream(dataInputWrapperStream);",
      "info" : "ExpressionStatement[11288-11333]:ExpressionStatement[11776-11821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11500-11606]:Block[11988-12094]"
    }, {
      "left" : "dataOutputWrapperStream.setDataOutput(out);",
      "right" : "dataOutputWrapperStream.setDataOutput(out);",
      "info" : "ExpressionStatement[11506-11549]:ExpressionStatement[11994-12037]"
    }, {
      "left" : "output.setOutputStream(dataOutputWrapperStream);",
      "right" : "output.setOutputStream(dataOutputWrapperStream);",
      "info" : "ExpressionStatement[11554-11602]:ExpressionStatement[12042-12090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11835-12102]:Block[12323-12590]"
    }, {
      "left" : "ReusableFieldSerializer<Object> serializer =\n        classToIntoSerializer.get(type);",
      "right" : "ReusableFieldSerializer<Object> serializer =\n        classToIntoSerializer.get(type);",
      "info" : "VariableDeclarationStatement[11841-11926]:VariableDeclarationStatement[12329-12414]"
    }, {
      "left" : "if (serializer == null)",
      "right" : "if (serializer == null)",
      "info" : "IfStatement[11931-12075]:IfStatement[12419-12563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11955-12075]:Block[12443-12563]"
    }, {
      "left" : "serializer = new ReusableFieldSerializer<>(this, type);",
      "right" : "serializer = new ReusableFieldSerializer<>(this, type);",
      "info" : "ExpressionStatement[11963-12018]:ExpressionStatement[12451-12506]"
    }, {
      "left" : "classToIntoSerializer.put(type, serializer);",
      "right" : "classToIntoSerializer.put(type, serializer);",
      "info" : "ExpressionStatement[12025-12069]:ExpressionStatement[12513-12557]"
    }, {
      "left" : "return serializer;",
      "right" : "return serializer;",
      "info" : "ReturnStatement[12080-12098]:ReturnStatement[12568-12586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12494-12946]:Block[12982-13434]"
    }, {
      "left" : "KRYO_POOL.run(new KryoCallback<Void>() {\n      @Override\n      public Void execute(Kryo kryo) {\n        HadoopKryo hkryo = (HadoopKryo) kryo;\n        hkryo.setDataOutput(out);\n\n        if (outOf) {\n          hkryo.writeOutOfObject(hkryo.output, object);\n        } else {\n          hkryo.writeClassAndObject(hkryo.output, object);\n        }\n\n        hkryo.output.endChunks();\n        hkryo.output.close();\n\n        return null;\n      }\n    });",
      "right" : "KRYO_POOL.run(new KryoCallback<Void>() {\n      @Override\n      public Void execute(Kryo kryo) {\n        HadoopKryo hkryo = (HadoopKryo) kryo;\n        hkryo.setDataOutput(out);\n\n        if (outOf) {\n          hkryo.writeOutOfObject(hkryo.output, object);\n        } else {\n          hkryo.writeClassAndObject(hkryo.output, object);\n        }\n\n        hkryo.output.endChunks();\n        hkryo.output.close();\n\n        return null;\n      }\n    });",
      "info" : "ExpressionStatement[12500-12942]:ExpressionStatement[12988-13430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12594-12934]:Block[13082-13422]"
    }, {
      "left" : "HadoopKryo hkryo = (HadoopKryo) kryo;",
      "right" : "HadoopKryo hkryo = (HadoopKryo) kryo;",
      "info" : "VariableDeclarationStatement[12604-12641]:VariableDeclarationStatement[13092-13129]"
    }, {
      "left" : "hkryo.setDataOutput(out);",
      "right" : "hkryo.setDataOutput(out);",
      "info" : "ExpressionStatement[12650-12675]:ExpressionStatement[13138-13163]"
    }, {
      "left" : "if (outOf)",
      "right" : "if (outOf)",
      "info" : "IfStatement[12685-12839]:IfStatement[13173-13327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12696-12763]:Block[13184-13251]"
    }, {
      "left" : "hkryo.writeOutOfObject(hkryo.output, object);",
      "right" : "hkryo.writeOutOfObject(hkryo.output, object);",
      "info" : "ExpressionStatement[12708-12753]:ExpressionStatement[13196-13241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12769-12839]:Block[13257-13327]"
    }, {
      "left" : "hkryo.writeClassAndObject(hkryo.output, object);",
      "right" : "hkryo.writeClassAndObject(hkryo.output, object);",
      "info" : "ExpressionStatement[12781-12829]:ExpressionStatement[13269-13317]"
    }, {
      "left" : "hkryo.output.endChunks();",
      "right" : "hkryo.output.endChunks();",
      "info" : "ExpressionStatement[12849-12874]:ExpressionStatement[13337-13362]"
    }, {
      "left" : "hkryo.output.close();",
      "right" : "hkryo.output.close();",
      "info" : "ExpressionStatement[12883-12904]:ExpressionStatement[13371-13392]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12914-12926]:ReturnStatement[13402-13414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13499-14000]:Block[13987-14488]"
    }, {
      "left" : "return KRYO_POOL.run(new KryoCallback<T>() {\n      @Override\n      public T execute(Kryo kryo) {\n        HadoopKryo hkryo = (HadoopKryo) kryo;\n        hkryo.setDataInput(in);\n\n        T object;\n        if (into) {\n          hkryo.readIntoObject(hkryo.input, outObject);\n          object = outObject;\n        } else {\n          object = (T) hkryo.readClassAndObject(hkryo.input);\n        }\n        hkryo.input.nextChunks();\n\n        hkryo.input.close();\n        return object;\n      }\n    });",
      "right" : "return KRYO_POOL.run(new KryoCallback<T>() {\n      @Override\n      public T execute(Kryo kryo) {\n        HadoopKryo hkryo = (HadoopKryo) kryo;\n        hkryo.setDataInput(in);\n\n        T object;\n        if (into) {\n          hkryo.readIntoObject(hkryo.input, outObject);\n          object = outObject;\n        } else {\n          object = (T) hkryo.readClassAndObject(hkryo.input);\n        }\n        hkryo.input.nextChunks();\n\n        hkryo.input.close();\n        return object;\n      }\n    });",
      "info" : "ReturnStatement[13505-13996]:ReturnStatement[13993-14484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13600-13988]:Block[14088-14476]"
    }, {
      "left" : "HadoopKryo hkryo = (HadoopKryo) kryo;",
      "right" : "HadoopKryo hkryo = (HadoopKryo) kryo;",
      "info" : "VariableDeclarationStatement[13610-13647]:VariableDeclarationStatement[14098-14135]"
    }, {
      "left" : "hkryo.setDataInput(in);",
      "right" : "hkryo.setDataInput(in);",
      "info" : "ExpressionStatement[13656-13679]:ExpressionStatement[14144-14167]"
    }, {
      "left" : "T object;",
      "right" : "T object;",
      "info" : "VariableDeclarationStatement[13689-13698]:VariableDeclarationStatement[14177-14186]"
    }, {
      "left" : "if (into)",
      "right" : "if (into)",
      "info" : "IfStatement[13707-13893]:IfStatement[14195-14381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13717-13814]:Block[14205-14302]"
    }, {
      "left" : "hkryo.readIntoObject(hkryo.input, outObject);",
      "right" : "hkryo.readIntoObject(hkryo.input, outObject);",
      "info" : "ExpressionStatement[13729-13774]:ExpressionStatement[14217-14262]"
    }, {
      "left" : "object = outObject;",
      "right" : "object = outObject;",
      "info" : "ExpressionStatement[13785-13804]:ExpressionStatement[14273-14292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13820-13893]:Block[14308-14381]"
    }, {
      "left" : "object = (T) hkryo.readClassAndObject(hkryo.input);",
      "right" : "object = (T) hkryo.readClassAndObject(hkryo.input);",
      "info" : "ExpressionStatement[13832-13883]:ExpressionStatement[14320-14371]"
    }, {
      "left" : "hkryo.input.nextChunks();",
      "right" : "hkryo.input.nextChunks();",
      "info" : "ExpressionStatement[13902-13927]:ExpressionStatement[14390-14415]"
    }, {
      "left" : "hkryo.input.close();",
      "right" : "hkryo.input.close();",
      "info" : "ExpressionStatement[13937-13957]:ExpressionStatement[14425-14445]"
    }, {
      "left" : "return object;",
      "right" : "return object;",
      "info" : "ReturnStatement[13966-13980]:ReturnStatement[14454-14468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14236-14564]:Block[14724-15052]"
    }, {
      "left" : "Preconditions.checkNotNull(object);",
      "right" : "Preconditions.checkNotNull(object);",
      "info" : "ExpressionStatement[14242-14277]:ExpressionStatement[14730-14765]"
    }, {
      "left" : "Class<?> type = object.getClass();",
      "right" : "Class<?> type = object.getClass();",
      "info" : "VariableDeclarationStatement[14283-14317]:VariableDeclarationStatement[14771-14805]"
    }, {
      "left" : "ReusableFieldSerializer<Object> serializer =\n        getOrCreateReusableSerializer(type);",
      "right" : "ReusableFieldSerializer<Object> serializer =\n        getOrCreateReusableSerializer(type);",
      "info" : "VariableDeclarationStatement[14322-14411]:VariableDeclarationStatement[14810-14899]"
    }, {
      "left" : "serializer.setReadIntoObject(object);",
      "right" : "serializer.setReadIntoObject(object);",
      "info" : "ExpressionStatement[14417-14454]:ExpressionStatement[14905-14942]"
    }, {
      "left" : "Object result = readObject(input, type, serializer);",
      "right" : "Object result = readObject(input, type, serializer);",
      "info" : "VariableDeclarationStatement[14459-14511]:VariableDeclarationStatement[14947-14999]"
    }, {
      "left" : "Preconditions.checkState(result == object);",
      "right" : "Preconditions.checkState(result == object);",
      "info" : "ExpressionStatement[14517-14560]:ExpressionStatement[15005-15048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14798-14955]:Block[15286-15443]"
    }, {
      "left" : "ReusableFieldSerializer<Object> serializer =\n        getOrCreateReusableSerializer(object.getClass());",
      "right" : "ReusableFieldSerializer<Object> serializer =\n        getOrCreateReusableSerializer(object.getClass());",
      "info" : "VariableDeclarationStatement[14804-14906]:VariableDeclarationStatement[15292-15394]"
    }, {
      "left" : "writeObject(output, object, serializer);",
      "right" : "writeObject(output, object, serializer);",
      "info" : "ExpressionStatement[14911-14951]:ExpressionStatement[15399-15439]"
    } ]
  },
  "interFileMappings" : { }
}