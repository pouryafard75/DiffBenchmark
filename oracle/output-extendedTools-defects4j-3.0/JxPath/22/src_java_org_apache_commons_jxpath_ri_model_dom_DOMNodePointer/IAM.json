{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DOMNodePointer",
      "right" : "DOMNodePointer",
      "info" : "TypeDeclaration[1980-26519]:TypeDeclaration[1980-26548]"
    }, {
      "left" : "private static final long serialVersionUID = -8751046933894857319L;",
      "right" : "private static final long serialVersionUID = -8751046933894857319L;",
      "info" : "FieldDeclaration[2267-2334]:FieldDeclaration[2267-2334]"
    }, {
      "left" : "private Node node;",
      "right" : "private Node node;",
      "info" : "FieldDeclaration[2340-2358]:FieldDeclaration[2340-2358]"
    }, {
      "left" : "private Map namespaces;",
      "right" : "private Map namespaces;",
      "info" : "FieldDeclaration[2363-2386]:FieldDeclaration[2363-2386]"
    }, {
      "left" : "private String defaultNamespace;",
      "right" : "private String defaultNamespace;",
      "info" : "FieldDeclaration[2391-2423]:FieldDeclaration[2391-2423]"
    }, {
      "left" : "private String id;",
      "right" : "private String id;",
      "info" : "FieldDeclaration[2428-2446]:FieldDeclaration[2428-2446]"
    }, {
      "left" : "private NamespaceResolver localNamespaceResolver;",
      "right" : "private NamespaceResolver localNamespaceResolver;",
      "info" : "FieldDeclaration[2451-2500]:FieldDeclaration[2451-2500]"
    }, {
      "left" : "public static final String XML_NAMESPACE_URI =\n            \"http://www.w3.org/XML/1998/namespace\";",
      "right" : "public static final String XML_NAMESPACE_URI =\n            \"http://www.w3.org/XML/1998/namespace\";",
      "info" : "FieldDeclaration[2506-2633]:FieldDeclaration[2506-2633]"
    }, {
      "left" : "public static final String XMLNS_NAMESPACE_URI =\n            \"http://www.w3.org/2000/xmlns/\";",
      "right" : "public static final String XMLNS_NAMESPACE_URI =\n            \"http://www.w3.org/2000/xmlns/\";",
      "info" : "FieldDeclaration[2639-2763]:FieldDeclaration[2639-2763]"
    }, {
      "left" : "public DOMNodePointer(Node node, Locale locale)",
      "right" : "public DOMNodePointer(Node node, Locale locale)",
      "info" : "MethodDeclaration[2769-2989]:MethodDeclaration[2769-2989]"
    }, {
      "left" : "public DOMNodePointer(Node node, Locale locale, String id)",
      "right" : "public DOMNodePointer(Node node, Locale locale, String id)",
      "info" : "MethodDeclaration[2995-3275]:MethodDeclaration[2995-3275]"
    }, {
      "left" : "public DOMNodePointer(NodePointer parent, Node node)",
      "right" : "public DOMNodePointer(NodePointer parent, Node node)",
      "info" : "MethodDeclaration[3281-3498]:MethodDeclaration[3281-3498]"
    }, {
      "left" : "public boolean testNode(NodeTest test)",
      "right" : "public boolean testNode(NodeTest test)",
      "info" : "MethodDeclaration[3504-3587]:MethodDeclaration[3504-3587]"
    }, {
      "left" : "public static boolean testNode(Node node, NodeTest test)",
      "right" : "public static boolean testNode(Node node, NodeTest test)",
      "info" : "MethodDeclaration[3593-5846]:MethodDeclaration[3593-5846]"
    }, {
      "left" : "private static boolean equalStrings(String s1, String s2)",
      "right" : "private static boolean equalStrings(String s1, String s2)",
      "info" : "MethodDeclaration[5852-6226]:MethodDeclaration[5852-6226]"
    }, {
      "left" : "public QName getName()",
      "right" : "public QName getName()",
      "info" : "MethodDeclaration[6232-6671]:MethodDeclaration[6232-6671]"
    }, {
      "left" : "public String getNamespaceURI()",
      "right" : "public String getNamespaceURI()",
      "info" : "MethodDeclaration[6677-6754]:MethodDeclaration[6677-6754]"
    }, {
      "left" : "public NodeIterator childIterator(NodeTest test, boolean reverse,\n            NodePointer startWith)",
      "right" : "public NodeIterator childIterator(NodeTest test, boolean reverse,\n            NodePointer startWith)",
      "info" : "MethodDeclaration[6760-6936]:MethodDeclaration[6760-6936]"
    }, {
      "left" : "public NodeIterator attributeIterator(QName name)",
      "right" : "public NodeIterator attributeIterator(QName name)",
      "info" : "MethodDeclaration[6942-7052]:MethodDeclaration[6942-7052]"
    }, {
      "left" : "public NodePointer namespacePointer(String prefix)",
      "right" : "public NodePointer namespacePointer(String prefix)",
      "info" : "MethodDeclaration[7058-7167]:MethodDeclaration[7058-7167]"
    }, {
      "left" : "public NodeIterator namespaceIterator()",
      "right" : "public NodeIterator namespaceIterator()",
      "info" : "MethodDeclaration[7173-7267]:MethodDeclaration[7173-7267]"
    }, {
      "left" : "public synchronized NamespaceResolver getNamespaceResolver()",
      "right" : "public synchronized NamespaceResolver getNamespaceResolver()",
      "info" : "MethodDeclaration[7273-7595]:MethodDeclaration[7273-7595]"
    }, {
      "left" : "public String getNamespaceURI(String prefix)",
      "right" : "public String getNamespaceURI(String prefix)",
      "info" : "MethodDeclaration[7601-9139]:MethodDeclaration[7601-9139]"
    }, {
      "left" : "public String getDefaultNamespaceURI()",
      "right" : "public String getDefaultNamespaceURI()",
      "info" : "MethodDeclaration[9145-10035]:MethodDeclaration[9145-10035]"
    }, {
      "left" : "public Object getBaseValue()",
      "right" : "public Object getBaseValue()",
      "info" : "MethodDeclaration[10041-10098]:MethodDeclaration[10041-10098]"
    }, {
      "left" : "public Object getImmediateNode()",
      "right" : "public Object getImmediateNode()",
      "info" : "MethodDeclaration[10104-10165]:MethodDeclaration[10104-10165]"
    }, {
      "left" : "public boolean isActual()",
      "right" : "public boolean isActual()",
      "info" : "MethodDeclaration[10171-10225]:MethodDeclaration[10171-10225]"
    }, {
      "left" : "public boolean isCollection()",
      "right" : "public boolean isCollection()",
      "info" : "MethodDeclaration[10231-10290]:MethodDeclaration[10231-10290]"
    }, {
      "left" : "public int getLength()",
      "right" : "public int getLength()",
      "info" : "MethodDeclaration[10296-10344]:MethodDeclaration[10296-10344]"
    }, {
      "left" : "public boolean isLeaf()",
      "right" : "public boolean isLeaf()",
      "info" : "MethodDeclaration[10350-10419]:MethodDeclaration[10350-10419]"
    }, {
      "left" : "public boolean isLanguage(String lang)",
      "right" : "public boolean isLanguage(String lang)",
      "info" : "MethodDeclaration[10425-10940]:MethodDeclaration[10425-10940]"
    }, {
      "left" : "protected static String findEnclosingAttribute(Node n, String attrName)",
      "right" : "protected static String findEnclosingAttribute(Node n, String attrName)",
      "info" : "MethodDeclaration[10946-11617]:MethodDeclaration[10946-11617]"
    }, {
      "left" : "protected String getLanguage()",
      "right" : "protected String getLanguage()",
      "info" : "MethodDeclaration[11623-11819]:MethodDeclaration[11623-11819]"
    }, {
      "left" : "public void setValue(Object value)",
      "right" : "public void setValue(Object value)",
      "info" : "MethodDeclaration[11825-13807]:MethodDeclaration[11825-13807]"
    }, {
      "left" : "public NodePointer createChild(JXPathContext context, QName name, int index)",
      "right" : "public NodePointer createChild(JXPathContext context, QName name, int index)",
      "info" : "MethodDeclaration[13813-14839]:MethodDeclaration[13813-14839]"
    }, {
      "left" : "public NodePointer createChild(JXPathContext context, QName name,\n            int index, Object value)",
      "right" : "public NodePointer createChild(JXPathContext context, QName name,\n            int index, Object value)",
      "info" : "MethodDeclaration[14845-15065]:MethodDeclaration[14845-15065]"
    }, {
      "left" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "right" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "info" : "MethodDeclaration[15071-16042]:MethodDeclaration[15071-16042]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[16048-16264]:MethodDeclaration[16048-16264]"
    }, {
      "left" : "public String asPath()",
      "right" : "public String asPath()",
      "info" : "MethodDeclaration[16270-18972]:MethodDeclaration[16270-18972]"
    }, {
      "left" : "private int getRelativePositionByQName()",
      "right" : "private int getRelativePositionByQName()",
      "info" : "MethodDeclaration[18978-19407]:MethodDeclaration[18978-19407]"
    }, {
      "left" : "private boolean matchesQName(Node n)",
      "right" : "private boolean matchesQName(Node n)",
      "info" : "MethodDeclaration[19413-19721]:MethodDeclaration[19413-19721]"
    }, {
      "left" : "private int getRelativePositionOfElement()",
      "right" : "private int getRelativePositionOfElement()",
      "info" : "MethodDeclaration[19727-20132]:MethodDeclaration[19727-20132]"
    }, {
      "left" : "private int getRelativePositionOfTextNode()",
      "right" : "private int getRelativePositionOfTextNode()",
      "info" : "MethodDeclaration[20138-20613]:MethodDeclaration[20138-20613]"
    }, {
      "left" : "private int getRelativePositionOfPI()",
      "right" : "private int getRelativePositionOfPI()",
      "info" : "MethodDeclaration[20619-21211]:MethodDeclaration[20619-21211]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[21217-21278]:MethodDeclaration[21217-21278]"
    }, {
      "left" : "public boolean equals(Object object)",
      "right" : "public boolean equals(Object object)",
      "info" : "MethodDeclaration[21284-21437]:MethodDeclaration[21284-21437]"
    }, {
      "left" : "public static String getPrefix(Node node)",
      "right" : "public static String getPrefix(Node node)",
      "info" : "MethodDeclaration[21443-21880]:MethodDeclaration[21443-21880]"
    }, {
      "left" : "public static String getLocalName(Node node)",
      "right" : "public static String getLocalName(Node node)",
      "info" : "MethodDeclaration[21886-22337]:MethodDeclaration[21886-22337]"
    }, {
      "left" : "public static String getNamespaceURI(Node node)",
      "right" : "public static String getNamespaceURI(Node node)",
      "info" : "MethodDeclaration[22343-23322]:MethodDeclaration[22343-23351]"
    }, {
      "left" : "public Object getValue()",
      "right" : "public Object getValue()",
      "info" : "MethodDeclaration[23328-23565]:MethodDeclaration[23357-23594]"
    }, {
      "left" : "private String stringValue(Node node)",
      "right" : "private String stringValue(Node node)",
      "info" : "MethodDeclaration[23571-24623]:MethodDeclaration[23600-24652]"
    }, {
      "left" : "public Pointer getPointerByID(JXPathContext context, String id)",
      "right" : "public Pointer getPointerByID(JXPathContext context, String id)",
      "info" : "MethodDeclaration[24629-25157]:MethodDeclaration[24658-25186]"
    }, {
      "left" : "public int compareChildNodePointers(NodePointer pointer1,\n            NodePointer pointer2)",
      "right" : "public int compareChildNodePointers(NodePointer pointer1,\n            NodePointer pointer2)",
      "info" : "MethodDeclaration[25163-26517]:MethodDeclaration[25192-26546]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2212-2218]:Modifier[2212-2218]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2219-2224]:TYPE_DECLARATION_KIND[2219-2224]"
    }, {
      "left" : "DOMNodePointer",
      "right" : "DOMNodePointer",
      "info" : "SimpleName[2225-2239]:SimpleName[2225-2239]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[2248-2259]:SimpleType[2248-2259]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2879-2885]:Modifier[2879-2885]"
    }, {
      "left" : "DOMNodePointer",
      "right" : "DOMNodePointer",
      "info" : "SimpleName[2886-2900]:SimpleName[2886-2900]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[2901-2910]:SingleVariableDeclaration[2901-2910]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[2912-2925]:SingleVariableDeclaration[2912-2925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2927-2989]:Block[2927-2989]"
    }, {
      "left" : "super(null, locale);",
      "right" : "super(null, locale);",
      "info" : "SuperConstructorInvocation[2937-2957]:SuperConstructorInvocation[2937-2957]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[2966-2983]:ExpressionStatement[2966-2983]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3132-3138]:Modifier[3132-3138]"
    }, {
      "left" : "DOMNodePointer",
      "right" : "DOMNodePointer",
      "info" : "SimpleName[3139-3153]:SimpleName[3139-3153]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[3154-3163]:SingleVariableDeclaration[3154-3163]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[3165-3178]:SingleVariableDeclaration[3165-3178]"
    }, {
      "left" : "String id",
      "right" : "String id",
      "info" : "SingleVariableDeclaration[3180-3189]:SingleVariableDeclaration[3180-3189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3191-3275]:Block[3191-3275]"
    }, {
      "left" : "super(null, locale);",
      "right" : "super(null, locale);",
      "info" : "SuperConstructorInvocation[3201-3221]:SuperConstructorInvocation[3201-3221]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[3230-3247]:ExpressionStatement[3230-3247]"
    }, {
      "left" : "this.id = id;",
      "right" : "this.id = id;",
      "info" : "ExpressionStatement[3256-3269]:ExpressionStatement[3256-3269]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3389-3395]:Modifier[3389-3395]"
    }, {
      "left" : "DOMNodePointer",
      "right" : "DOMNodePointer",
      "info" : "SimpleName[3396-3410]:SimpleName[3396-3410]"
    }, {
      "left" : "NodePointer parent",
      "right" : "NodePointer parent",
      "info" : "SingleVariableDeclaration[3411-3429]:SingleVariableDeclaration[3411-3429]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[3431-3440]:SingleVariableDeclaration[3431-3440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3442-3498]:Block[3442-3498]"
    }, {
      "left" : "super(parent);",
      "right" : "super(parent);",
      "info" : "SuperConstructorInvocation[3452-3466]:SuperConstructorInvocation[3452-3466]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[3475-3492]:ExpressionStatement[3475-3492]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3504-3510]:Modifier[3504-3510]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3511-3518]:PrimitiveType[3511-3518]"
    }, {
      "left" : "testNode",
      "right" : "testNode",
      "info" : "SimpleName[3519-3527]:SimpleName[3519-3527]"
    }, {
      "left" : "NodeTest test",
      "right" : "NodeTest test",
      "info" : "SingleVariableDeclaration[3528-3541]:SingleVariableDeclaration[3528-3541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3543-3587]:Block[3543-3587]"
    }, {
      "left" : "return testNode(node, test);",
      "right" : "return testNode(node, test);",
      "info" : "ReturnStatement[3553-3581]:ReturnStatement[3553-3581]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3726-3732]:Modifier[3726-3732]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3733-3739]:Modifier[3733-3739]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3740-3747]:PrimitiveType[3740-3747]"
    }, {
      "left" : "testNode",
      "right" : "testNode",
      "info" : "SimpleName[3748-3756]:SimpleName[3748-3756]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[3757-3766]:SingleVariableDeclaration[3757-3766]"
    }, {
      "left" : "NodeTest test",
      "right" : "NodeTest test",
      "info" : "SingleVariableDeclaration[3768-3781]:SingleVariableDeclaration[3768-3781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3783-5846]:Block[3783-5846]"
    }, {
      "left" : "if (test == null)",
      "right" : "if (test == null)",
      "info" : "IfStatement[3793-3847]:IfStatement[3793-3847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3811-3847]:Block[3811-3847]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3825-3837]:ReturnStatement[3825-3837]"
    }, {
      "left" : "if (test instanceof NodeNameTest)",
      "right" : "if (test instanceof NodeNameTest)",
      "info" : "IfStatement[3856-4783]:IfStatement[3856-4783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3890-4783]:Block[3890-4783]"
    }, {
      "left" : "if (node.getNodeType() != Node.ELEMENT_NODE)",
      "right" : "if (node.getNodeType() != Node.ELEMENT_NODE)",
      "info" : "IfStatement[3904-3994]:IfStatement[3904-3994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3949-3994]:Block[3949-3994]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3967-3980]:ReturnStatement[3967-3980]"
    }, {
      "left" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
      "right" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
      "info" : "VariableDeclarationStatement[4008-4056]:VariableDeclarationStatement[4008-4056]"
    }, {
      "left" : "QName testName = nodeNameTest.getNodeName();",
      "right" : "QName testName = nodeNameTest.getNodeName();",
      "info" : "VariableDeclarationStatement[4069-4113]:VariableDeclarationStatement[4069-4113]"
    }, {
      "left" : "String namespaceURI = nodeNameTest.getNamespaceURI();",
      "right" : "String namespaceURI = nodeNameTest.getNamespaceURI();",
      "info" : "VariableDeclarationStatement[4126-4179]:VariableDeclarationStatement[4126-4179]"
    }, {
      "left" : "boolean wildcard = nodeNameTest.isWildcard();",
      "right" : "boolean wildcard = nodeNameTest.isWildcard();",
      "info" : "VariableDeclarationStatement[4192-4237]:VariableDeclarationStatement[4192-4237]"
    }, {
      "left" : "String testPrefix = testName.getPrefix();",
      "right" : "String testPrefix = testName.getPrefix();",
      "info" : "VariableDeclarationStatement[4250-4291]:VariableDeclarationStatement[4250-4291]"
    }, {
      "left" : "if (wildcard && testPrefix == null)",
      "right" : "if (wildcard && testPrefix == null)",
      "info" : "IfStatement[4304-4384]:IfStatement[4304-4384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4340-4384]:Block[4340-4384]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[4358-4370]:ReturnStatement[4358-4370]"
    }, {
      "left" : "if (wildcard\n                || testName.getName()\n                        .equals(DOMNodePointer.getLocalName(node)))",
      "right" : "if (wildcard\n                || testName.getName()\n                        .equals(DOMNodePointer.getLocalName(node)))",
      "info" : "IfStatement[4397-4747]:IfStatement[4397-4747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4516-4747]:Block[4516-4747]"
    }, {
      "left" : "String nodeNS = DOMNodePointer.getNamespaceURI(node);",
      "right" : "String nodeNS = DOMNodePointer.getNamespaceURI(node);",
      "info" : "VariableDeclarationStatement[4534-4587]:VariableDeclarationStatement[4534-4587]"
    }, {
      "left" : "return equalStrings(namespaceURI, nodeNS) || nodeNS == null\n                        && equalStrings(testPrefix, getPrefix(node));",
      "right" : "return equalStrings(namespaceURI, nodeNS) || nodeNS == null\n                        && equalStrings(testPrefix, getPrefix(node));",
      "info" : "ReturnStatement[4604-4733]:ReturnStatement[4604-4733]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4760-4773]:ReturnStatement[4760-4773]"
    }, {
      "left" : "if (test instanceof NodeTypeTest)",
      "right" : "if (test instanceof NodeTypeTest)",
      "info" : "IfStatement[4792-5487]:IfStatement[4792-5487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4826-5487]:Block[4826-5487]"
    }, {
      "left" : "int nodeType = node.getNodeType();",
      "right" : "int nodeType = node.getNodeType();",
      "info" : "VariableDeclarationStatement[4840-4874]:VariableDeclarationStatement[4840-4874]"
    }, {
      "left" : "switch (((NodeTypeTest) test).getNodeType()) {\n                case Compiler.NODE_TYPE_NODE :\n                    return true;\n                case Compiler.NODE_TYPE_TEXT :\n                    return nodeType == Node.CDATA_SECTION_NODE\n                        || nodeType == Node.TEXT_NODE;\n                case Compiler.NODE_TYPE_COMMENT :\n                    return nodeType == Node.COMMENT_NODE;\n                case Compiler.NODE_TYPE_PI :\n                    return nodeType == Node.PROCESSING_INSTRUCTION_NODE;\n                default:\n                    return false;\n            }",
      "right" : "switch (((NodeTypeTest) test).getNodeType()) {\n                case Compiler.NODE_TYPE_NODE :\n                    return true;\n                case Compiler.NODE_TYPE_TEXT :\n                    return nodeType == Node.CDATA_SECTION_NODE\n                        || nodeType == Node.TEXT_NODE;\n                case Compiler.NODE_TYPE_COMMENT :\n                    return nodeType == Node.COMMENT_NODE;\n                case Compiler.NODE_TYPE_PI :\n                    return nodeType == Node.PROCESSING_INSTRUCTION_NODE;\n                default:\n                    return false;\n            }",
      "info" : "SwitchStatement[4887-5477]:SwitchStatement[4887-5477]"
    }, {
      "left" : "case Compiler.NODE_TYPE_NODE :",
      "right" : "case Compiler.NODE_TYPE_NODE :",
      "info" : "SwitchCase[4950-4980]:SwitchCase[4950-4980]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5001-5013]:ReturnStatement[5001-5013]"
    }, {
      "left" : "case Compiler.NODE_TYPE_TEXT :",
      "right" : "case Compiler.NODE_TYPE_TEXT :",
      "info" : "SwitchCase[5030-5060]:SwitchCase[5030-5060]"
    }, {
      "left" : "return nodeType == Node.CDATA_SECTION_NODE\n                        || nodeType == Node.TEXT_NODE;",
      "right" : "return nodeType == Node.CDATA_SECTION_NODE\n                        || nodeType == Node.TEXT_NODE;",
      "info" : "ReturnStatement[5081-5178]:ReturnStatement[5081-5178]"
    }, {
      "left" : "case Compiler.NODE_TYPE_COMMENT :",
      "right" : "case Compiler.NODE_TYPE_COMMENT :",
      "info" : "SwitchCase[5195-5228]:SwitchCase[5195-5228]"
    }, {
      "left" : "return nodeType == Node.COMMENT_NODE;",
      "right" : "return nodeType == Node.COMMENT_NODE;",
      "info" : "ReturnStatement[5249-5286]:ReturnStatement[5249-5286]"
    }, {
      "left" : "case Compiler.NODE_TYPE_PI :",
      "right" : "case Compiler.NODE_TYPE_PI :",
      "info" : "SwitchCase[5303-5331]:SwitchCase[5303-5331]"
    }, {
      "left" : "return nodeType == Node.PROCESSING_INSTRUCTION_NODE;",
      "right" : "return nodeType == Node.PROCESSING_INSTRUCTION_NODE;",
      "info" : "ReturnStatement[5352-5404]:ReturnStatement[5352-5404]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[5421-5429]:SwitchCase[5421-5429]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5450-5463]:ReturnStatement[5450-5463]"
    }, {
      "left" : "if (test instanceof ProcessingInstructionTest\n                && node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE)",
      "right" : "if (test instanceof ProcessingInstructionTest\n                && node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE)",
      "info" : "IfStatement[5496-5818]:IfStatement[5496-5818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5617-5818]:Block[5617-5818]"
    }, {
      "left" : "String testPI = ((ProcessingInstructionTest) test).getTarget();",
      "right" : "String testPI = ((ProcessingInstructionTest) test).getTarget();",
      "info" : "VariableDeclarationStatement[5631-5694]:VariableDeclarationStatement[5631-5694]"
    }, {
      "left" : "String nodePI = ((ProcessingInstruction) node).getTarget();",
      "right" : "String nodePI = ((ProcessingInstruction) node).getTarget();",
      "info" : "VariableDeclarationStatement[5707-5766]:VariableDeclarationStatement[5707-5766]"
    }, {
      "left" : "return testPI.equals(nodePI);",
      "right" : "return testPI.equals(nodePI);",
      "info" : "ReturnStatement[5779-5808]:ReturnStatement[5779-5808]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5827-5840]:ReturnStatement[5827-5840]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5988-5995]:Modifier[5988-5995]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5996-6002]:Modifier[5996-6002]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6003-6010]:PrimitiveType[6003-6010]"
    }, {
      "left" : "equalStrings",
      "right" : "equalStrings",
      "info" : "SimpleName[6011-6023]:SimpleName[6011-6023]"
    }, {
      "left" : "String s1",
      "right" : "String s1",
      "info" : "SingleVariableDeclaration[6024-6033]:SingleVariableDeclaration[6024-6033]"
    }, {
      "left" : "String s2",
      "right" : "String s2",
      "info" : "SingleVariableDeclaration[6035-6044]:SingleVariableDeclaration[6035-6044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6046-6226]:Block[6046-6226]"
    }, {
      "left" : "if (s1 == s2)",
      "right" : "if (s1 == s2)",
      "info" : "IfStatement[6056-6106]:IfStatement[6056-6106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6070-6106]:Block[6070-6106]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6084-6096]:ReturnStatement[6084-6096]"
    }, {
      "left" : "s1 = s1 == null ? \"\" : s1.trim();",
      "right" : "s1 = s1 == null ? \"\" : s1.trim();",
      "info" : "ExpressionStatement[6115-6148]:ExpressionStatement[6115-6148]"
    }, {
      "left" : "s2 = s2 == null ? \"\" : s2.trim();",
      "right" : "s2 = s2 == null ? \"\" : s2.trim();",
      "info" : "ExpressionStatement[6157-6190]:ExpressionStatement[6157-6190]"
    }, {
      "left" : "return s1.equals(s2);",
      "right" : "return s1.equals(s2);",
      "info" : "ReturnStatement[6199-6220]:ReturnStatement[6199-6220]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6232-6238]:Modifier[6232-6238]"
    }, {
      "left" : "QName",
      "right" : "QName",
      "info" : "SimpleType[6239-6244]:SimpleType[6239-6244]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[6245-6252]:SimpleName[6245-6252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6255-6671]:Block[6255-6671]"
    }, {
      "left" : "String ln = null;",
      "right" : "String ln = null;",
      "info" : "VariableDeclarationStatement[6265-6282]:VariableDeclarationStatement[6265-6282]"
    }, {
      "left" : "String ns = null;",
      "right" : "String ns = null;",
      "info" : "VariableDeclarationStatement[6291-6308]:VariableDeclarationStatement[6291-6308]"
    }, {
      "left" : "int type = node.getNodeType();",
      "right" : "int type = node.getNodeType();",
      "info" : "VariableDeclarationStatement[6317-6347]:VariableDeclarationStatement[6317-6347]"
    }, {
      "left" : "if (type == Node.ELEMENT_NODE)",
      "right" : "if (type == Node.ELEMENT_NODE)",
      "info" : "IfStatement[6356-6631]:IfStatement[6356-6631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6387-6499]:Block[6387-6499]"
    }, {
      "left" : "ns = DOMNodePointer.getPrefix(node);",
      "right" : "ns = DOMNodePointer.getPrefix(node);",
      "info" : "ExpressionStatement[6401-6437]:ExpressionStatement[6401-6437]"
    }, {
      "left" : "ln = DOMNodePointer.getLocalName(node);",
      "right" : "ln = DOMNodePointer.getLocalName(node);",
      "info" : "ExpressionStatement[6450-6489]:ExpressionStatement[6450-6489]"
    }, {
      "left" : "if (type == Node.PROCESSING_INSTRUCTION_NODE)",
      "right" : "if (type == Node.PROCESSING_INSTRUCTION_NODE)",
      "info" : "IfStatement[6513-6631]:IfStatement[6513-6631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6559-6631]:Block[6559-6631]"
    }, {
      "left" : "ln = ((ProcessingInstruction) node).getTarget();",
      "right" : "ln = ((ProcessingInstruction) node).getTarget();",
      "info" : "ExpressionStatement[6573-6621]:ExpressionStatement[6573-6621]"
    }, {
      "left" : "return new QName(ns, ln);",
      "right" : "return new QName(ns, ln);",
      "info" : "ReturnStatement[6640-6665]:ReturnStatement[6640-6665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6677-6683]:Modifier[6677-6683]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6684-6690]:SimpleType[6684-6690]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[6691-6706]:SimpleName[6691-6706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6709-6754]:Block[6709-6754]"
    }, {
      "left" : "return getNamespaceURI(node);",
      "right" : "return getNamespaceURI(node);",
      "info" : "ReturnStatement[6719-6748]:ReturnStatement[6719-6748]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6760-6766]:Modifier[6760-6766]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[6767-6779]:SimpleType[6767-6779]"
    }, {
      "left" : "childIterator",
      "right" : "childIterator",
      "info" : "SimpleName[6780-6793]:SimpleName[6780-6793]"
    }, {
      "left" : "NodeTest test",
      "right" : "NodeTest test",
      "info" : "SingleVariableDeclaration[6794-6807]:SingleVariableDeclaration[6794-6807]"
    }, {
      "left" : "boolean reverse",
      "right" : "boolean reverse",
      "info" : "SingleVariableDeclaration[6809-6824]:SingleVariableDeclaration[6809-6824]"
    }, {
      "left" : "NodePointer startWith",
      "right" : "NodePointer startWith",
      "info" : "SingleVariableDeclaration[6838-6859]:SingleVariableDeclaration[6838-6859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6861-6936]:Block[6861-6936]"
    }, {
      "left" : "return new DOMNodeIterator(this, test, reverse, startWith);",
      "right" : "return new DOMNodeIterator(this, test, reverse, startWith);",
      "info" : "ReturnStatement[6871-6930]:ReturnStatement[6871-6930]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6942-6948]:Modifier[6942-6948]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[6949-6961]:SimpleType[6949-6961]"
    }, {
      "left" : "attributeIterator",
      "right" : "attributeIterator",
      "info" : "SimpleName[6962-6979]:SimpleName[6962-6979]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[6980-6990]:SingleVariableDeclaration[6980-6990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6992-7052]:Block[6992-7052]"
    }, {
      "left" : "return new DOMAttributeIterator(this, name);",
      "right" : "return new DOMAttributeIterator(this, name);",
      "info" : "ReturnStatement[7002-7046]:ReturnStatement[7002-7046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7058-7064]:Modifier[7058-7064]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[7065-7076]:SimpleType[7065-7076]"
    }, {
      "left" : "namespacePointer",
      "right" : "namespacePointer",
      "info" : "SimpleName[7077-7093]:SimpleName[7077-7093]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[7094-7107]:SingleVariableDeclaration[7094-7107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7109-7167]:Block[7109-7167]"
    }, {
      "left" : "return new NamespacePointer(this, prefix);",
      "right" : "return new NamespacePointer(this, prefix);",
      "info" : "ReturnStatement[7119-7161]:ReturnStatement[7119-7161]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7173-7179]:Modifier[7173-7179]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[7180-7192]:SimpleType[7180-7192]"
    }, {
      "left" : "namespaceIterator",
      "right" : "namespaceIterator",
      "info" : "SimpleName[7193-7210]:SimpleName[7193-7210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7213-7267]:Block[7213-7267]"
    }, {
      "left" : "return new DOMNamespaceIterator(this);",
      "right" : "return new DOMNamespaceIterator(this);",
      "info" : "ReturnStatement[7223-7261]:ReturnStatement[7223-7261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7273-7279]:Modifier[7273-7279]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[7280-7292]:Modifier[7280-7292]"
    }, {
      "left" : "NamespaceResolver",
      "right" : "NamespaceResolver",
      "info" : "SimpleType[7293-7310]:SimpleType[7293-7310]"
    }, {
      "left" : "getNamespaceResolver",
      "right" : "getNamespaceResolver",
      "info" : "SimpleName[7311-7331]:SimpleName[7311-7331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7334-7595]:Block[7334-7595]"
    }, {
      "left" : "if (localNamespaceResolver == null)",
      "right" : "if (localNamespaceResolver == null)",
      "info" : "IfStatement[7344-7550]:IfStatement[7344-7550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7380-7550]:Block[7380-7550]"
    }, {
      "left" : "localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());",
      "right" : "localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());",
      "info" : "ExpressionStatement[7394-7471]:ExpressionStatement[7394-7471]"
    }, {
      "left" : "localNamespaceResolver.setNamespaceContextPointer(this);",
      "right" : "localNamespaceResolver.setNamespaceContextPointer(this);",
      "info" : "ExpressionStatement[7484-7540]:ExpressionStatement[7484-7540]"
    }, {
      "left" : "return localNamespaceResolver;",
      "right" : "return localNamespaceResolver;",
      "info" : "ReturnStatement[7559-7589]:ReturnStatement[7559-7589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7601-7607]:Modifier[7601-7607]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7608-7614]:SimpleType[7608-7614]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[7615-7630]:SimpleName[7615-7630]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[7631-7644]:SingleVariableDeclaration[7631-7644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7646-9139]:Block[7646-9139]"
    }, {
      "left" : "if (prefix == null || prefix.equals(\"\"))",
      "right" : "if (prefix == null || prefix.equals(\"\"))",
      "info" : "IfStatement[7656-7753]:IfStatement[7656-7753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7697-7753]:Block[7697-7753]"
    }, {
      "left" : "return getDefaultNamespaceURI();",
      "right" : "return getDefaultNamespaceURI();",
      "info" : "ReturnStatement[7711-7743]:ReturnStatement[7711-7743]"
    }, {
      "left" : "if (prefix.equals(\"xml\"))",
      "right" : "if (prefix.equals(\"xml\"))",
      "info" : "IfStatement[7763-7838]:IfStatement[7763-7838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7789-7838]:Block[7789-7838]"
    }, {
      "left" : "return XML_NAMESPACE_URI;",
      "right" : "return XML_NAMESPACE_URI;",
      "info" : "ReturnStatement[7803-7828]:ReturnStatement[7803-7828]"
    }, {
      "left" : "if (prefix.equals(\"xmlns\"))",
      "right" : "if (prefix.equals(\"xmlns\"))",
      "info" : "IfStatement[7848-7927]:IfStatement[7848-7927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7876-7927]:Block[7876-7927]"
    }, {
      "left" : "return XMLNS_NAMESPACE_URI;",
      "right" : "return XMLNS_NAMESPACE_URI;",
      "info" : "ReturnStatement[7890-7917]:ReturnStatement[7890-7917]"
    }, {
      "left" : "String namespace = null;",
      "right" : "String namespace = null;",
      "info" : "VariableDeclarationStatement[7937-7961]:VariableDeclarationStatement[7937-7961]"
    }, {
      "left" : "if (namespaces == null)",
      "right" : "if (namespaces == null)",
      "info" : "IfStatement[7970-8127]:IfStatement[7970-8127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7994-8045]:Block[7994-8045]"
    }, {
      "left" : "namespaces = new HashMap();",
      "right" : "namespaces = new HashMap();",
      "info" : "ExpressionStatement[8008-8035]:ExpressionStatement[8008-8035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8059-8127]:Block[8059-8127]"
    }, {
      "left" : "namespace = (String) namespaces.get(prefix);",
      "right" : "namespace = (String) namespaces.get(prefix);",
      "info" : "ExpressionStatement[8073-8117]:ExpressionStatement[8073-8117]"
    }, {
      "left" : "if (namespace == null)",
      "right" : "if (namespace == null)",
      "info" : "IfStatement[8137-8906]:IfStatement[8137-8906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8160-8906]:Block[8160-8906]"
    }, {
      "left" : "String qname = \"xmlns:\" + prefix;",
      "right" : "String qname = \"xmlns:\" + prefix;",
      "info" : "VariableDeclarationStatement[8174-8207]:VariableDeclarationStatement[8174-8207]"
    }, {
      "left" : "Node aNode = node;",
      "right" : "Node aNode = node;",
      "info" : "VariableDeclarationStatement[8220-8238]:VariableDeclarationStatement[8220-8238]"
    }, {
      "left" : "if (aNode instanceof Document)",
      "right" : "if (aNode instanceof Document)",
      "info" : "IfStatement[8251-8362]:IfStatement[8251-8362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8282-8362]:Block[8282-8362]"
    }, {
      "left" : "aNode = ((Document) aNode).getDocumentElement();",
      "right" : "aNode = ((Document) aNode).getDocumentElement();",
      "info" : "ExpressionStatement[8300-8348]:ExpressionStatement[8300-8348]"
    }, {
      "left" : "while (aNode != null)",
      "right" : "while (aNode != null)",
      "info" : "WhileStatement[8375-8762]:WhileStatement[8375-8762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8397-8762]:Block[8397-8762]"
    }, {
      "left" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[8415-8701]:IfStatement[8415-8701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8461-8701]:Block[8461-8701]"
    }, {
      "left" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "right" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "info" : "VariableDeclarationStatement[8483-8537]:VariableDeclarationStatement[8483-8537]"
    }, {
      "left" : "if (attr != null)",
      "right" : "if (attr != null)",
      "info" : "IfStatement[8558-8683]:IfStatement[8558-8683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8576-8683]:Block[8576-8683]"
    }, {
      "left" : "namespace = attr.getValue();",
      "right" : "namespace = attr.getValue();",
      "info" : "ExpressionStatement[8602-8630]:ExpressionStatement[8602-8630]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8655-8661]:BreakStatement[8655-8661]"
    }, {
      "left" : "aNode = aNode.getParentNode();",
      "right" : "aNode = aNode.getParentNode();",
      "info" : "ExpressionStatement[8718-8748]:ExpressionStatement[8718-8748]"
    }, {
      "left" : "if (namespace == null || namespace.equals(\"\"))",
      "right" : "if (namespace == null || namespace.equals(\"\"))",
      "info" : "IfStatement[8775-8896]:IfStatement[8775-8896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8822-8896]:Block[8822-8896]"
    }, {
      "left" : "namespace = NodePointer.UNKNOWN_NAMESPACE;",
      "right" : "namespace = NodePointer.UNKNOWN_NAMESPACE;",
      "info" : "ExpressionStatement[8840-8882]:ExpressionStatement[8840-8882]"
    }, {
      "left" : "namespaces.put(prefix, namespace);",
      "right" : "namespaces.put(prefix, namespace);",
      "info" : "ExpressionStatement[8916-8950]:ExpressionStatement[8916-8950]"
    }, {
      "left" : "if (namespace == UNKNOWN_NAMESPACE)",
      "right" : "if (namespace == UNKNOWN_NAMESPACE)",
      "info" : "IfStatement[8959-9031]:IfStatement[8959-9031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8995-9031]:Block[8995-9031]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9009-9021]:ReturnStatement[9009-9021]"
    }, {
      "left" : "return namespace;",
      "right" : "return namespace;",
      "info" : "ReturnStatement[9116-9133]:ReturnStatement[9116-9133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9145-9151]:Modifier[9145-9151]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[9152-9158]:SimpleType[9152-9158]"
    }, {
      "left" : "getDefaultNamespaceURI",
      "right" : "getDefaultNamespaceURI",
      "info" : "SimpleName[9159-9181]:SimpleName[9159-9181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9184-10035]:Block[9184-10035]"
    }, {
      "left" : "if (defaultNamespace == null)",
      "right" : "if (defaultNamespace == null)",
      "info" : "IfStatement[9194-9799]:IfStatement[9194-9799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9224-9799]:Block[9224-9799]"
    }, {
      "left" : "Node aNode = node;",
      "right" : "Node aNode = node;",
      "info" : "VariableDeclarationStatement[9238-9256]:VariableDeclarationStatement[9238-9256]"
    }, {
      "left" : "if (aNode instanceof Document)",
      "right" : "if (aNode instanceof Document)",
      "info" : "IfStatement[9269-9380]:IfStatement[9269-9380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9300-9380]:Block[9300-9380]"
    }, {
      "left" : "aNode = ((Document) aNode).getDocumentElement();",
      "right" : "aNode = ((Document) aNode).getDocumentElement();",
      "info" : "ExpressionStatement[9318-9366]:ExpressionStatement[9318-9366]"
    }, {
      "left" : "while (aNode != null)",
      "right" : "while (aNode != null)",
      "info" : "WhileStatement[9393-9789]:WhileStatement[9393-9789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9415-9789]:Block[9415-9789]"
    }, {
      "left" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[9433-9728]:IfStatement[9433-9728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9479-9728]:Block[9479-9728]"
    }, {
      "left" : "Attr attr = ((Element) aNode).getAttributeNode(\"xmlns\");",
      "right" : "Attr attr = ((Element) aNode).getAttributeNode(\"xmlns\");",
      "info" : "VariableDeclarationStatement[9501-9557]:VariableDeclarationStatement[9501-9557]"
    }, {
      "left" : "if (attr != null)",
      "right" : "if (attr != null)",
      "info" : "IfStatement[9578-9710]:IfStatement[9578-9710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9596-9710]:Block[9596-9710]"
    }, {
      "left" : "defaultNamespace = attr.getValue();",
      "right" : "defaultNamespace = attr.getValue();",
      "info" : "ExpressionStatement[9622-9657]:ExpressionStatement[9622-9657]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9682-9688]:BreakStatement[9682-9688]"
    }, {
      "left" : "aNode = aNode.getParentNode();",
      "right" : "aNode = aNode.getParentNode();",
      "info" : "ExpressionStatement[9745-9775]:ExpressionStatement[9745-9775]"
    }, {
      "left" : "if (defaultNamespace == null)",
      "right" : "if (defaultNamespace == null)",
      "info" : "IfStatement[9808-9884]:IfStatement[9808-9884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9838-9884]:Block[9838-9884]"
    }, {
      "left" : "defaultNamespace = \"\";",
      "right" : "defaultNamespace = \"\";",
      "info" : "ExpressionStatement[9852-9874]:ExpressionStatement[9852-9874]"
    }, {
      "left" : "return defaultNamespace.equals(\"\") ? null : defaultNamespace;",
      "right" : "return defaultNamespace.equals(\"\") ? null : defaultNamespace;",
      "info" : "ReturnStatement[9968-10029]:ReturnStatement[9968-10029]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10041-10047]:Modifier[10041-10047]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[10048-10054]:SimpleType[10048-10054]"
    }, {
      "left" : "getBaseValue",
      "right" : "getBaseValue",
      "info" : "SimpleName[10055-10067]:SimpleName[10055-10067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10070-10098]:Block[10070-10098]"
    }, {
      "left" : "return node;",
      "right" : "return node;",
      "info" : "ReturnStatement[10080-10092]:ReturnStatement[10080-10092]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10104-10110]:Modifier[10104-10110]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[10111-10117]:SimpleType[10111-10117]"
    }, {
      "left" : "getImmediateNode",
      "right" : "getImmediateNode",
      "info" : "SimpleName[10118-10134]:SimpleName[10118-10134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10137-10165]:Block[10137-10165]"
    }, {
      "left" : "return node;",
      "right" : "return node;",
      "info" : "ReturnStatement[10147-10159]:ReturnStatement[10147-10159]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10171-10177]:Modifier[10171-10177]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10178-10185]:PrimitiveType[10178-10185]"
    }, {
      "left" : "isActual",
      "right" : "isActual",
      "info" : "SimpleName[10186-10194]:SimpleName[10186-10194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10197-10225]:Block[10197-10225]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[10207-10219]:ReturnStatement[10207-10219]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10231-10237]:Modifier[10231-10237]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10238-10245]:PrimitiveType[10238-10245]"
    }, {
      "left" : "isCollection",
      "right" : "isCollection",
      "info" : "SimpleName[10246-10258]:SimpleName[10246-10258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10261-10290]:Block[10261-10290]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10271-10284]:ReturnStatement[10271-10284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10296-10302]:Modifier[10296-10302]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[10303-10306]:PrimitiveType[10303-10306]"
    }, {
      "left" : "getLength",
      "right" : "getLength",
      "info" : "SimpleName[10307-10316]:SimpleName[10307-10316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10319-10344]:Block[10319-10344]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[10329-10338]:ReturnStatement[10329-10338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10350-10356]:Modifier[10350-10356]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10357-10364]:PrimitiveType[10357-10364]"
    }, {
      "left" : "isLeaf",
      "right" : "isLeaf",
      "info" : "SimpleName[10365-10371]:SimpleName[10365-10371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10374-10419]:Block[10374-10419]"
    }, {
      "left" : "return !node.hasChildNodes();",
      "right" : "return !node.hasChildNodes();",
      "info" : "ReturnStatement[10384-10413]:ReturnStatement[10384-10413]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10698-10704]:Modifier[10698-10704]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10705-10712]:PrimitiveType[10705-10712]"
    }, {
      "left" : "isLanguage",
      "right" : "isLanguage",
      "info" : "SimpleName[10713-10723]:SimpleName[10713-10723]"
    }, {
      "left" : "String lang",
      "right" : "String lang",
      "info" : "SingleVariableDeclaration[10724-10735]:SingleVariableDeclaration[10724-10735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10737-10940]:Block[10737-10940]"
    }, {
      "left" : "String current = getLanguage();",
      "right" : "String current = getLanguage();",
      "info" : "VariableDeclarationStatement[10747-10778]:VariableDeclarationStatement[10747-10778]"
    }, {
      "left" : "return current == null ? super.isLanguage(lang)\n                : current.toUpperCase(Locale.ENGLISH).startsWith(lang.toUpperCase(Locale.ENGLISH));",
      "right" : "return current == null ? super.isLanguage(lang)\n                : current.toUpperCase(Locale.ENGLISH).startsWith(lang.toUpperCase(Locale.ENGLISH));",
      "info" : "ReturnStatement[10787-10934]:ReturnStatement[10787-10934]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11170-11179]:Modifier[11170-11179]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11180-11186]:Modifier[11180-11186]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11187-11193]:SimpleType[11187-11193]"
    }, {
      "left" : "findEnclosingAttribute",
      "right" : "findEnclosingAttribute",
      "info" : "SimpleName[11194-11216]:SimpleName[11194-11216]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[11217-11223]:SingleVariableDeclaration[11217-11223]"
    }, {
      "left" : "String attrName",
      "right" : "String attrName",
      "info" : "SingleVariableDeclaration[11225-11240]:SingleVariableDeclaration[11225-11240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11242-11617]:Block[11242-11617]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[11252-11590]:WhileStatement[11252-11590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11270-11590]:Block[11270-11590]"
    }, {
      "left" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[11284-11545]:IfStatement[11284-11545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11326-11545]:Block[11326-11545]"
    }, {
      "left" : "Element e = (Element) n;",
      "right" : "Element e = (Element) n;",
      "info" : "VariableDeclarationStatement[11344-11368]:VariableDeclarationStatement[11344-11368]"
    }, {
      "left" : "String attr = e.getAttribute(attrName);",
      "right" : "String attr = e.getAttribute(attrName);",
      "info" : "VariableDeclarationStatement[11385-11424]:VariableDeclarationStatement[11385-11424]"
    }, {
      "left" : "if (attr != null && !attr.equals(\"\"))",
      "right" : "if (attr != null && !attr.equals(\"\"))",
      "info" : "IfStatement[11441-11531]:IfStatement[11441-11531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11479-11531]:Block[11479-11531]"
    }, {
      "left" : "return attr;",
      "right" : "return attr;",
      "info" : "ReturnStatement[11501-11513]:ReturnStatement[11501-11513]"
    }, {
      "left" : "n = n.getParentNode();",
      "right" : "n = n.getParentNode();",
      "info" : "ExpressionStatement[11558-11580]:ExpressionStatement[11558-11580]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11599-11611]:ReturnStatement[11599-11611]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11724-11733]:Modifier[11724-11733]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11734-11740]:SimpleType[11734-11740]"
    }, {
      "left" : "getLanguage",
      "right" : "getLanguage",
      "info" : "SimpleName[11741-11752]:SimpleName[11741-11752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11755-11819]:Block[11755-11819]"
    }, {
      "left" : "return findEnclosingAttribute(node, \"xml:lang\");",
      "right" : "return findEnclosingAttribute(node, \"xml:lang\");",
      "info" : "ReturnStatement[11765-11813]:ReturnStatement[11765-11813]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12142-12148]:Modifier[12142-12148]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12149-12153]:PrimitiveType[12149-12153]"
    }, {
      "left" : "setValue",
      "right" : "setValue",
      "info" : "SimpleName[12154-12162]:SimpleName[12154-12162]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[12163-12175]:SingleVariableDeclaration[12163-12175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12177-13807]:Block[12177-13807]"
    }, {
      "left" : "if (node.getNodeType() == Node.TEXT_NODE\n            || node.getNodeType() == Node.CDATA_SECTION_NODE)",
      "right" : "if (node.getNodeType() == Node.TEXT_NODE\n            || node.getNodeType() == Node.CDATA_SECTION_NODE)",
      "info" : "IfStatement[12187-13801]:IfStatement[12187-13801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12290-12580]:Block[12290-12580]"
    }, {
      "left" : "String string = (String) TypeUtils.convert(value, String.class);",
      "right" : "String string = (String) TypeUtils.convert(value, String.class);",
      "info" : "VariableDeclarationStatement[12304-12368]:VariableDeclarationStatement[12304-12368]"
    }, {
      "left" : "if (string != null && !string.equals(\"\"))",
      "right" : "if (string != null && !string.equals(\"\"))",
      "info" : "IfStatement[12381-12570]:IfStatement[12381-12570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12423-12481]:Block[12423-12481]"
    }, {
      "left" : "node.setNodeValue(string);",
      "right" : "node.setNodeValue(string);",
      "info" : "ExpressionStatement[12441-12467]:ExpressionStatement[12441-12467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12499-12570]:Block[12499-12570]"
    }, {
      "left" : "node.getParentNode().removeChild(node);",
      "right" : "node.getParentNode().removeChild(node);",
      "info" : "ExpressionStatement[12517-12556]:ExpressionStatement[12517-12556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12594-13801]:Block[12594-13801]"
    }, {
      "left" : "NodeList children = node.getChildNodes();",
      "right" : "NodeList children = node.getChildNodes();",
      "info" : "VariableDeclarationStatement[12608-12649]:VariableDeclarationStatement[12608-12649]"
    }, {
      "left" : "int count = children.getLength();",
      "right" : "int count = children.getLength();",
      "info" : "VariableDeclarationStatement[12662-12695]:VariableDeclarationStatement[12662-12695]"
    }, {
      "left" : "for (int i = count; --i >= 0)",
      "right" : "for (int i = count; --i >= 0)",
      "info" : "ForStatement[12708-12842]:ForStatement[12708-12842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12739-12842]:Block[12739-12842]"
    }, {
      "left" : "Node child = children.item(i);",
      "right" : "Node child = children.item(i);",
      "info" : "VariableDeclarationStatement[12757-12787]:VariableDeclarationStatement[12757-12787]"
    }, {
      "left" : "node.removeChild(child);",
      "right" : "node.removeChild(child);",
      "info" : "ExpressionStatement[12804-12828]:ExpressionStatement[12804-12828]"
    }, {
      "left" : "if (value instanceof Node)",
      "right" : "if (value instanceof Node)",
      "info" : "IfStatement[12856-13791]:IfStatement[12856-13791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12883-13443]:Block[12883-13443]"
    }, {
      "left" : "Node valueNode = (Node) value;",
      "right" : "Node valueNode = (Node) value;",
      "info" : "VariableDeclarationStatement[12901-12931]:VariableDeclarationStatement[12901-12931]"
    }, {
      "left" : "if (valueNode instanceof Element\n                    || valueNode instanceof Document)",
      "right" : "if (valueNode instanceof Element\n                    || valueNode instanceof Document)",
      "info" : "IfStatement[12948-13429]:IfStatement[12948-13429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13035-13323]:Block[13035-13323]"
    }, {
      "left" : "children = valueNode.getChildNodes();",
      "right" : "children = valueNode.getChildNodes();",
      "info" : "ExpressionStatement[13057-13094]:ExpressionStatement[13057-13094]"
    }, {
      "left" : "for (int i = 0; i < children.getLength(); i++)",
      "right" : "for (int i = 0; i < children.getLength(); i++)",
      "info" : "ForStatement[13115-13305]:ForStatement[13115-13305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13162-13305]:Block[13162-13305]"
    }, {
      "left" : "Node child = children.item(i);",
      "right" : "Node child = children.item(i);",
      "info" : "VariableDeclarationStatement[13188-13218]:VariableDeclarationStatement[13188-13218]"
    }, {
      "left" : "node.appendChild(child.cloneNode(true));",
      "right" : "node.appendChild(child.cloneNode(true));",
      "info" : "ExpressionStatement[13243-13283]:ExpressionStatement[13243-13283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13345-13429]:Block[13345-13429]"
    }, {
      "left" : "node.appendChild(valueNode.cloneNode(true));",
      "right" : "node.appendChild(valueNode.cloneNode(true));",
      "info" : "ExpressionStatement[13367-13411]:ExpressionStatement[13367-13411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13461-13791]:Block[13461-13791]"
    }, {
      "left" : "String string = (String) TypeUtils.convert(value, String.class);",
      "right" : "String string = (String) TypeUtils.convert(value, String.class);",
      "info" : "VariableDeclarationStatement[13479-13543]:VariableDeclarationStatement[13479-13543]"
    }, {
      "left" : "if (string != null && !string.equals(\"\"))",
      "right" : "if (string != null && !string.equals(\"\"))",
      "info" : "IfStatement[13560-13777]:IfStatement[13560-13777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13602-13777]:Block[13602-13777]"
    }, {
      "left" : "Node textNode =\n                        node.getOwnerDocument().createTextNode(string);",
      "right" : "Node textNode =\n                        node.getOwnerDocument().createTextNode(string);",
      "info" : "VariableDeclarationStatement[13624-13711]:VariableDeclarationStatement[13624-13711]"
    }, {
      "left" : "node.appendChild(textNode);",
      "right" : "node.appendChild(textNode);",
      "info" : "ExpressionStatement[13732-13759]:ExpressionStatement[13732-13759]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13813-13819]:Modifier[13813-13819]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[13820-13831]:SimpleType[13820-13831]"
    }, {
      "left" : "createChild",
      "right" : "createChild",
      "info" : "SimpleName[13832-13843]:SimpleName[13832-13843]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[13844-13865]:SingleVariableDeclaration[13844-13865]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[13867-13877]:SingleVariableDeclaration[13867-13877]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[13879-13888]:SingleVariableDeclaration[13879-13888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13890-14839]:Block[13890-14839]"
    }, {
      "left" : "if (index == WHOLE_COLLECTION)",
      "right" : "if (index == WHOLE_COLLECTION)",
      "info" : "IfStatement[13900-13965]:IfStatement[13900-13965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13931-13965]:Block[13931-13965]"
    }, {
      "left" : "index = 0;",
      "right" : "index = 0;",
      "info" : "ExpressionStatement[13945-13955]:ExpressionStatement[13945-13955]"
    }, {
      "left" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
      "right" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
      "info" : "VariableDeclarationStatement[13974-14171]:VariableDeclarationStatement[13974-14171]"
    }, {
      "left" : "if (success)",
      "right" : "if (success)",
      "info" : "IfStatement[14180-14640]:IfStatement[14180-14640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14193-14640]:Block[14193-14640]"
    }, {
      "left" : "NodeTest nodeTest;",
      "right" : "NodeTest nodeTest;",
      "info" : "VariableDeclarationStatement[14207-14225]:VariableDeclarationStatement[14207-14225]"
    }, {
      "left" : "String prefix = name.getPrefix();",
      "right" : "String prefix = name.getPrefix();",
      "info" : "VariableDeclarationStatement[14238-14271]:VariableDeclarationStatement[14238-14271]"
    }, {
      "left" : "String namespaceURI = prefix == null ? null : context\n                    .getNamespaceURI(prefix);",
      "right" : "String namespaceURI = prefix == null ? null : context\n                    .getNamespaceURI(prefix);",
      "info" : "VariableDeclarationStatement[14284-14383]:VariableDeclarationStatement[14284-14383]"
    }, {
      "left" : "nodeTest = new NodeNameTest(name, namespaceURI);",
      "right" : "nodeTest = new NodeNameTest(name, namespaceURI);",
      "info" : "ExpressionStatement[14396-14444]:ExpressionStatement[14396-14444]"
    }, {
      "left" : "NodeIterator it = childIterator(nodeTest, false, null);",
      "right" : "NodeIterator it = childIterator(nodeTest, false, null);",
      "info" : "VariableDeclarationStatement[14458-14513]:VariableDeclarationStatement[14458-14513]"
    }, {
      "left" : "if (it != null && it.setPosition(index + 1))",
      "right" : "if (it != null && it.setPosition(index + 1))",
      "info" : "IfStatement[14526-14630]:IfStatement[14526-14630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14571-14630]:Block[14571-14630]"
    }, {
      "left" : "return it.getNodePointer();",
      "right" : "return it.getNodePointer();",
      "info" : "ReturnStatement[14589-14616]:ReturnStatement[14589-14616]"
    }, {
      "left" : "throw new JXPathAbstractFactoryException(\n                \"Factory could not create a child node for path: \" + asPath()\n                        + \"/\" + name + \"[\" + (index + 1) + \"]\");",
      "right" : "throw new JXPathAbstractFactoryException(\n                \"Factory could not create a child node for path: \" + asPath()\n                        + \"/\" + name + \"[\" + (index + 1) + \"]\");",
      "info" : "ThrowStatement[14649-14833]:ThrowStatement[14649-14833]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14845-14851]:Modifier[14845-14851]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[14852-14863]:SimpleType[14852-14863]"
    }, {
      "left" : "createChild",
      "right" : "createChild",
      "info" : "SimpleName[14864-14875]:SimpleName[14864-14875]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[14876-14897]:SingleVariableDeclaration[14876-14897]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[14899-14909]:SingleVariableDeclaration[14899-14909]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[14923-14932]:SingleVariableDeclaration[14923-14932]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[14934-14946]:SingleVariableDeclaration[14934-14946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14948-15065]:Block[14948-15065]"
    }, {
      "left" : "NodePointer ptr = createChild(context, name, index);",
      "right" : "NodePointer ptr = createChild(context, name, index);",
      "info" : "VariableDeclarationStatement[14958-15010]:VariableDeclarationStatement[14958-15010]"
    }, {
      "left" : "ptr.setValue(value);",
      "right" : "ptr.setValue(value);",
      "info" : "ExpressionStatement[15019-15039]:ExpressionStatement[15019-15039]"
    }, {
      "left" : "return ptr;",
      "right" : "return ptr;",
      "info" : "ReturnStatement[15048-15059]:ReturnStatement[15048-15059]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15071-15077]:Modifier[15071-15077]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[15078-15089]:SimpleType[15078-15089]"
    }, {
      "left" : "createAttribute",
      "right" : "createAttribute",
      "info" : "SimpleName[15090-15105]:SimpleName[15090-15105]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[15106-15127]:SingleVariableDeclaration[15106-15127]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[15129-15139]:SingleVariableDeclaration[15129-15139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15141-16042]:Block[15141-16042]"
    }, {
      "left" : "if (!(node instanceof Element))",
      "right" : "if (!(node instanceof Element))",
      "info" : "IfStatement[15151-15251]:IfStatement[15151-15251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15183-15251]:Block[15183-15251]"
    }, {
      "left" : "return super.createAttribute(context, name);",
      "right" : "return super.createAttribute(context, name);",
      "info" : "ReturnStatement[15197-15241]:ReturnStatement[15197-15241]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[15260-15293]:VariableDeclarationStatement[15260-15293]"
    }, {
      "left" : "String prefix = name.getPrefix();",
      "right" : "String prefix = name.getPrefix();",
      "info" : "VariableDeclarationStatement[15302-15335]:VariableDeclarationStatement[15302-15335]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[15344-15922]:IfStatement[15344-15922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15364-15768]:Block[15364-15768]"
    }, {
      "left" : "String ns = null;",
      "right" : "String ns = null;",
      "info" : "VariableDeclarationStatement[15378-15395]:VariableDeclarationStatement[15378-15395]"
    }, {
      "left" : "NamespaceResolver nsr = getNamespaceResolver();",
      "right" : "NamespaceResolver nsr = getNamespaceResolver();",
      "info" : "VariableDeclarationStatement[15408-15455]:VariableDeclarationStatement[15408-15455]"
    }, {
      "left" : "if (nsr != null)",
      "right" : "if (nsr != null)",
      "info" : "IfStatement[15468-15550]:IfStatement[15468-15550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15485-15550]:Block[15485-15550]"
    }, {
      "left" : "ns = nsr.getNamespaceURI(prefix);",
      "right" : "ns = nsr.getNamespaceURI(prefix);",
      "info" : "ExpressionStatement[15503-15536]:ExpressionStatement[15503-15536]"
    }, {
      "left" : "if (ns == null)",
      "right" : "if (ns == null)",
      "info" : "IfStatement[15563-15697]:IfStatement[15563-15697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15579-15697]:Block[15579-15697]"
    }, {
      "left" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
      "right" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
      "info" : "ThrowStatement[15597-15683]:ThrowStatement[15597-15683]"
    }, {
      "left" : "element.setAttributeNS(ns, name.toString(), \"\");",
      "right" : "element.setAttributeNS(ns, name.toString(), \"\");",
      "info" : "ExpressionStatement[15710-15758]:ExpressionStatement[15710-15758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15782-15922]:Block[15782-15922]"
    }, {
      "left" : "if (!element.hasAttribute(name.getName()))",
      "right" : "if (!element.hasAttribute(name.getName()))",
      "info" : "IfStatement[15796-15912]:IfStatement[15796-15912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15839-15912]:Block[15839-15912]"
    }, {
      "left" : "element.setAttribute(name.getName(), \"\");",
      "right" : "element.setAttribute(name.getName(), \"\");",
      "info" : "ExpressionStatement[15857-15898]:ExpressionStatement[15857-15898]"
    }, {
      "left" : "NodeIterator it = attributeIterator(name);",
      "right" : "NodeIterator it = attributeIterator(name);",
      "info" : "VariableDeclarationStatement[15931-15973]:VariableDeclarationStatement[15931-15973]"
    }, {
      "left" : "it.setPosition(1);",
      "right" : "it.setPosition(1);",
      "info" : "ExpressionStatement[15982-16000]:ExpressionStatement[15982-16000]"
    }, {
      "left" : "return it.getNodePointer();",
      "right" : "return it.getNodePointer();",
      "info" : "ReturnStatement[16009-16036]:ReturnStatement[16009-16036]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16048-16054]:Modifier[16048-16054]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16055-16059]:PrimitiveType[16055-16059]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[16060-16066]:SimpleName[16060-16066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16069-16264]:Block[16069-16264]"
    }, {
      "left" : "Node parent = node.getParentNode();",
      "right" : "Node parent = node.getParentNode();",
      "info" : "VariableDeclarationStatement[16079-16114]:VariableDeclarationStatement[16079-16114]"
    }, {
      "left" : "if (parent == null)",
      "right" : "if (parent == null)",
      "info" : "IfStatement[16123-16224]:IfStatement[16123-16224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16143-16224]:Block[16143-16224]"
    }, {
      "left" : "throw new JXPathException(\"Cannot remove root DOM node\");",
      "right" : "throw new JXPathException(\"Cannot remove root DOM node\");",
      "info" : "ThrowStatement[16157-16214]:ThrowStatement[16157-16214]"
    }, {
      "left" : "parent.removeChild(node);",
      "right" : "parent.removeChild(node);",
      "info" : "ExpressionStatement[16233-16258]:ExpressionStatement[16233-16258]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16270-16276]:Modifier[16270-16276]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[16277-16283]:SimpleType[16277-16283]"
    }, {
      "left" : "asPath",
      "right" : "asPath",
      "info" : "SimpleName[16284-16290]:SimpleName[16284-16290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16293-18972]:Block[16293-18972]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[16303-16377]:IfStatement[16303-16377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16319-16377]:Block[16319-16377]"
    }, {
      "left" : "return \"id('\" + escape(id) + \"')\";",
      "right" : "return \"id('\" + escape(id) + \"')\";",
      "info" : "ReturnStatement[16333-16367]:ReturnStatement[16333-16367]"
    }, {
      "left" : "StringBuffer buffer = new StringBuffer();",
      "right" : "StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[16387-16428]:VariableDeclarationStatement[16387-16428]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[16437-16512]:IfStatement[16437-16512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16457-16512]:Block[16457-16512]"
    }, {
      "left" : "buffer.append(parent.asPath());",
      "right" : "buffer.append(parent.asPath());",
      "info" : "ExpressionStatement[16471-16502]:ExpressionStatement[16471-16502]"
    }, {
      "left" : "switch (node.getNodeType()) {\n            case Node.ELEMENT_NODE :\n                // If the parent pointer is not a DOMNodePointer, it is\n                // the parent's responsibility to produce the node test part\n                // of the path\n                if (parent instanceof DOMNodePointer) {\n                    if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/') {\n                        buffer.append('/');\n                    }\n                    String ln = DOMNodePointer.getLocalName(node);\n                    String nsURI = getNamespaceURI();\n                    if (nsURI == null) {\n                        buffer.append(ln);\n                        buffer.append('[');\n                        buffer.append(getRelativePositionByQName()).append(']');\n                    }\n                    else {\n                        String prefix = getNamespaceResolver().getPrefix(nsURI);\n                        if (prefix != null) {\n                            buffer.append(prefix);\n                            buffer.append(':');\n                            buffer.append(ln);\n                            buffer.append('[');\n                            buffer.append(getRelativePositionByQName());\n                            buffer.append(']');\n                        }\n                        else {\n                            buffer.append(\"node()\");\n                            buffer.append('[');\n                            buffer.append(getRelativePositionOfElement());\n                            buffer.append(']');\n                        }\n                    }\n                }\n            break;\n            case Node.TEXT_NODE :\n            case Node.CDATA_SECTION_NODE :\n                buffer.append(\"/text()\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfTextNode()).append(']');\n                break;\n            case Node.PROCESSING_INSTRUCTION_NODE :\n                buffer.append(\"/processing-instruction(\\'\");\n                buffer.append(((ProcessingInstruction) node).getTarget()).append(\"')\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfPI()).append(']');\n                break;\n            case Node.DOCUMENT_NODE :\n                // That'll be empty\n                break;\n            default:\n                break;\n        }",
      "right" : "switch (node.getNodeType()) {\n            case Node.ELEMENT_NODE :\n                // If the parent pointer is not a DOMNodePointer, it is\n                // the parent's responsibility to produce the node test part\n                // of the path\n                if (parent instanceof DOMNodePointer) {\n                    if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/') {\n                        buffer.append('/');\n                    }\n                    String ln = DOMNodePointer.getLocalName(node);\n                    String nsURI = getNamespaceURI();\n                    if (nsURI == null) {\n                        buffer.append(ln);\n                        buffer.append('[');\n                        buffer.append(getRelativePositionByQName()).append(']');\n                    }\n                    else {\n                        String prefix = getNamespaceResolver().getPrefix(nsURI);\n                        if (prefix != null) {\n                            buffer.append(prefix);\n                            buffer.append(':');\n                            buffer.append(ln);\n                            buffer.append('[');\n                            buffer.append(getRelativePositionByQName());\n                            buffer.append(']');\n                        }\n                        else {\n                            buffer.append(\"node()\");\n                            buffer.append('[');\n                            buffer.append(getRelativePositionOfElement());\n                            buffer.append(']');\n                        }\n                    }\n                }\n            break;\n            case Node.TEXT_NODE :\n            case Node.CDATA_SECTION_NODE :\n                buffer.append(\"/text()\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfTextNode()).append(']');\n                break;\n            case Node.PROCESSING_INSTRUCTION_NODE :\n                buffer.append(\"/processing-instruction(\\'\");\n                buffer.append(((ProcessingInstruction) node).getTarget()).append(\"')\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfPI()).append(']');\n                break;\n            case Node.DOCUMENT_NODE :\n                // That'll be empty\n                break;\n            default:\n                break;\n        }",
      "info" : "SwitchStatement[16521-18932]:SwitchStatement[16521-18932]"
    }, {
      "left" : "case Node.ELEMENT_NODE :",
      "right" : "case Node.ELEMENT_NODE :",
      "info" : "SwitchCase[16563-16587]:SwitchCase[16563-16587]"
    }, {
      "left" : "if (parent instanceof DOMNodePointer)",
      "right" : "if (parent instanceof DOMNodePointer)",
      "info" : "IfStatement[16784-18178]:IfStatement[16784-18178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16822-18178]:Block[16822-18178]"
    }, {
      "left" : "if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/')",
      "right" : "if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/')",
      "info" : "IfStatement[16844-17010]:IfStatement[16844-17010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16943-17010]:Block[16943-17010]"
    }, {
      "left" : "buffer.append('/');",
      "right" : "buffer.append('/');",
      "info" : "ExpressionStatement[16969-16988]:ExpressionStatement[16969-16988]"
    }, {
      "left" : "String ln = DOMNodePointer.getLocalName(node);",
      "right" : "String ln = DOMNodePointer.getLocalName(node);",
      "info" : "VariableDeclarationStatement[17031-17077]:VariableDeclarationStatement[17031-17077]"
    }, {
      "left" : "String nsURI = getNamespaceURI();",
      "right" : "String nsURI = getNamespaceURI();",
      "info" : "VariableDeclarationStatement[17098-17131]:VariableDeclarationStatement[17098-17131]"
    }, {
      "left" : "if (nsURI == null)",
      "right" : "if (nsURI == null)",
      "info" : "IfStatement[17152-18160]:IfStatement[17152-18160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17171-17362]:Block[17171-17362]"
    }, {
      "left" : "buffer.append(ln);",
      "right" : "buffer.append(ln);",
      "info" : "ExpressionStatement[17197-17215]:ExpressionStatement[17197-17215]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[17240-17259]:ExpressionStatement[17240-17259]"
    }, {
      "left" : "buffer.append(getRelativePositionByQName()).append(']');",
      "right" : "buffer.append(getRelativePositionByQName()).append(']');",
      "info" : "ExpressionStatement[17284-17340]:ExpressionStatement[17284-17340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17388-18160]:Block[17388-18160]"
    }, {
      "left" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
      "right" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
      "info" : "VariableDeclarationStatement[17414-17470]:VariableDeclarationStatement[17414-17470]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[17495-18138]:IfStatement[17495-18138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17515-17857]:Block[17515-17857]"
    }, {
      "left" : "buffer.append(prefix);",
      "right" : "buffer.append(prefix);",
      "info" : "ExpressionStatement[17545-17567]:ExpressionStatement[17545-17567]"
    }, {
      "left" : "buffer.append(':');",
      "right" : "buffer.append(':');",
      "info" : "ExpressionStatement[17596-17615]:ExpressionStatement[17596-17615]"
    }, {
      "left" : "buffer.append(ln);",
      "right" : "buffer.append(ln);",
      "info" : "ExpressionStatement[17644-17662]:ExpressionStatement[17644-17662]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[17691-17710]:ExpressionStatement[17691-17710]"
    }, {
      "left" : "buffer.append(getRelativePositionByQName());",
      "right" : "buffer.append(getRelativePositionByQName());",
      "info" : "ExpressionStatement[17739-17783]:ExpressionStatement[17739-17783]"
    }, {
      "left" : "buffer.append(']');",
      "right" : "buffer.append(']');",
      "info" : "ExpressionStatement[17812-17831]:ExpressionStatement[17812-17831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17887-18138]:Block[17887-18138]"
    }, {
      "left" : "buffer.append(\"node()\");",
      "right" : "buffer.append(\"node()\");",
      "info" : "ExpressionStatement[17917-17941]:ExpressionStatement[17917-17941]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[17970-17989]:ExpressionStatement[17970-17989]"
    }, {
      "left" : "buffer.append(getRelativePositionOfElement());",
      "right" : "buffer.append(getRelativePositionOfElement());",
      "info" : "ExpressionStatement[18018-18064]:ExpressionStatement[18018-18064]"
    }, {
      "left" : "buffer.append(']');",
      "right" : "buffer.append(']');",
      "info" : "ExpressionStatement[18093-18112]:ExpressionStatement[18093-18112]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18191-18197]:BreakStatement[18191-18197]"
    }, {
      "left" : "case Node.TEXT_NODE :",
      "right" : "case Node.TEXT_NODE :",
      "info" : "SwitchCase[18210-18231]:SwitchCase[18210-18231]"
    }, {
      "left" : "case Node.CDATA_SECTION_NODE :",
      "right" : "case Node.CDATA_SECTION_NODE :",
      "info" : "SwitchCase[18244-18274]:SwitchCase[18244-18274]"
    }, {
      "left" : "buffer.append(\"/text()\");",
      "right" : "buffer.append(\"/text()\");",
      "info" : "ExpressionStatement[18291-18316]:ExpressionStatement[18291-18316]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[18333-18352]:ExpressionStatement[18333-18352]"
    }, {
      "left" : "buffer.append(getRelativePositionOfTextNode()).append(']');",
      "right" : "buffer.append(getRelativePositionOfTextNode()).append(']');",
      "info" : "ExpressionStatement[18369-18428]:ExpressionStatement[18369-18428]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18445-18451]:BreakStatement[18445-18451]"
    }, {
      "left" : "case Node.PROCESSING_INSTRUCTION_NODE :",
      "right" : "case Node.PROCESSING_INSTRUCTION_NODE :",
      "info" : "SwitchCase[18464-18503]:SwitchCase[18464-18503]"
    }, {
      "left" : "buffer.append(\"/processing-instruction(\\'\");",
      "right" : "buffer.append(\"/processing-instruction(\\'\");",
      "info" : "ExpressionStatement[18520-18564]:ExpressionStatement[18520-18564]"
    }, {
      "left" : "buffer.append(((ProcessingInstruction) node).getTarget()).append(\"')\");",
      "right" : "buffer.append(((ProcessingInstruction) node).getTarget()).append(\"')\");",
      "info" : "ExpressionStatement[18581-18652]:ExpressionStatement[18581-18652]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[18669-18688]:ExpressionStatement[18669-18688]"
    }, {
      "left" : "buffer.append(getRelativePositionOfPI()).append(']');",
      "right" : "buffer.append(getRelativePositionOfPI()).append(']');",
      "info" : "ExpressionStatement[18705-18758]:ExpressionStatement[18705-18758]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18775-18781]:BreakStatement[18775-18781]"
    }, {
      "left" : "case Node.DOCUMENT_NODE :",
      "right" : "case Node.DOCUMENT_NODE :",
      "info" : "SwitchCase[18794-18819]:SwitchCase[18794-18819]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18872-18878]:BreakStatement[18872-18878]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[18891-18899]:SwitchCase[18891-18899]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18916-18922]:BreakStatement[18916-18922]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[18941-18966]:ReturnStatement[18941-18966]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19078-19085]:Modifier[19078-19085]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[19086-19089]:PrimitiveType[19086-19089]"
    }, {
      "left" : "getRelativePositionByQName",
      "right" : "getRelativePositionByQName",
      "info" : "SimpleName[19090-19116]:SimpleName[19090-19116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19119-19407]:Block[19119-19407]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[19129-19143]:VariableDeclarationStatement[19129-19143]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[19152-19187]:VariableDeclarationStatement[19152-19187]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[19196-19379]:WhileStatement[19196-19379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19214-19379]:Block[19214-19379]"
    }, {
      "left" : "if (n.getNodeType() == Node.ELEMENT_NODE && matchesQName(n))",
      "right" : "if (n.getNodeType() == Node.ELEMENT_NODE && matchesQName(n))",
      "info" : "IfStatement[19228-19329]:IfStatement[19228-19329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19289-19329]:Block[19289-19329]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[19307-19315]:ExpressionStatement[19307-19315]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[19342-19369]:ExpressionStatement[19342-19369]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[19388-19401]:ReturnStatement[19388-19401]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19413-19420]:Modifier[19413-19420]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[19421-19428]:PrimitiveType[19421-19428]"
    }, {
      "left" : "matchesQName",
      "right" : "matchesQName",
      "info" : "SimpleName[19429-19441]:SimpleName[19429-19441]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[19442-19448]:SingleVariableDeclaration[19442-19448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19450-19721]:Block[19450-19721]"
    }, {
      "left" : "if (getNamespaceURI() != null)",
      "right" : "if (getNamespaceURI() != null)",
      "info" : "IfStatement[19460-19649]:IfStatement[19460-19649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19491-19649]:Block[19491-19649]"
    }, {
      "left" : "return equalStrings(getNamespaceURI(n), getNamespaceURI())\n                    && equalStrings(node.getLocalName(), n.getLocalName());",
      "right" : "return equalStrings(getNamespaceURI(n), getNamespaceURI())\n                    && equalStrings(node.getLocalName(), n.getLocalName());",
      "info" : "ReturnStatement[19505-19639]:ReturnStatement[19505-19639]"
    }, {
      "left" : "return equalStrings(node.getNodeName(), n.getNodeName());",
      "right" : "return equalStrings(node.getNodeName(), n.getNodeName());",
      "info" : "ReturnStatement[19658-19715]:ReturnStatement[19658-19715]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19820-19827]:Modifier[19820-19827]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[19828-19831]:PrimitiveType[19828-19831]"
    }, {
      "left" : "getRelativePositionOfElement",
      "right" : "getRelativePositionOfElement",
      "info" : "SimpleName[19832-19860]:SimpleName[19832-19860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19863-20132]:Block[19863-20132]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[19873-19887]:VariableDeclarationStatement[19873-19887]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[19896-19931]:VariableDeclarationStatement[19896-19931]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[19940-20104]:WhileStatement[19940-20104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19958-20104]:Block[19958-20104]"
    }, {
      "left" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[19972-20054]:IfStatement[19972-20054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20014-20054]:Block[20014-20054]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[20032-20040]:ExpressionStatement[20032-20040]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[20067-20094]:ExpressionStatement[20067-20094]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[20113-20126]:ReturnStatement[20113-20126]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20241-20248]:Modifier[20241-20248]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[20249-20252]:PrimitiveType[20249-20252]"
    }, {
      "left" : "getRelativePositionOfTextNode",
      "right" : "getRelativePositionOfTextNode",
      "info" : "SimpleName[20253-20282]:SimpleName[20253-20282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20285-20613]:Block[20285-20613]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[20295-20309]:VariableDeclarationStatement[20295-20309]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[20318-20353]:VariableDeclarationStatement[20318-20353]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[20362-20585]:WhileStatement[20362-20585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20380-20585]:Block[20380-20585]"
    }, {
      "left" : "if (n.getNodeType() == Node.TEXT_NODE\n                || n.getNodeType() == Node.CDATA_SECTION_NODE)",
      "right" : "if (n.getNodeType() == Node.TEXT_NODE\n                || n.getNodeType() == Node.CDATA_SECTION_NODE)",
      "info" : "IfStatement[20394-20535]:IfStatement[20394-20535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20495-20535]:Block[20495-20535]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[20513-20521]:ExpressionStatement[20513-20521]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[20548-20575]:ExpressionStatement[20548-20575]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[20594-20607]:ReturnStatement[20594-20607]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20747-20754]:Modifier[20747-20754]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[20755-20758]:PrimitiveType[20755-20758]"
    }, {
      "left" : "getRelativePositionOfPI",
      "right" : "getRelativePositionOfPI",
      "info" : "SimpleName[20759-20782]:SimpleName[20759-20782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20785-21211]:Block[20785-21211]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[20795-20809]:VariableDeclarationStatement[20795-20809]"
    }, {
      "left" : "String target = ((ProcessingInstruction) node).getTarget();",
      "right" : "String target = ((ProcessingInstruction) node).getTarget();",
      "info" : "VariableDeclarationStatement[20818-20877]:VariableDeclarationStatement[20818-20877]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[20886-20921]:VariableDeclarationStatement[20886-20921]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[20930-21183]:WhileStatement[20930-21183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20948-21183]:Block[20948-21183]"
    }, {
      "left" : "if (n.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE\n                && ((ProcessingInstruction) n).getTarget().equals(target))",
      "right" : "if (n.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE\n                && ((ProcessingInstruction) n).getTarget().equals(target))",
      "info" : "IfStatement[20962-21133]:IfStatement[20962-21133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21093-21133]:Block[21093-21133]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[21111-21119]:ExpressionStatement[21111-21119]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[21146-21173]:ExpressionStatement[21146-21173]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[21192-21205]:ReturnStatement[21192-21205]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21217-21223]:Modifier[21217-21223]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[21224-21227]:PrimitiveType[21224-21227]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[21228-21236]:SimpleName[21228-21236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21239-21278]:Block[21239-21278]"
    }, {
      "left" : "return node.hashCode();",
      "right" : "return node.hashCode();",
      "info" : "ReturnStatement[21249-21272]:ReturnStatement[21249-21272]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21284-21290]:Modifier[21284-21290]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[21291-21298]:PrimitiveType[21291-21298]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[21299-21305]:SimpleName[21299-21305]"
    }, {
      "left" : "Object object",
      "right" : "Object object",
      "info" : "SingleVariableDeclaration[21306-21319]:SingleVariableDeclaration[21306-21319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21321-21437]:Block[21321-21437]"
    }, {
      "left" : "return object == this || object instanceof DOMNodePointer && node == ((DOMNodePointer) object).node;",
      "right" : "return object == this || object instanceof DOMNodePointer && node == ((DOMNodePointer) object).node;",
      "info" : "ReturnStatement[21331-21431]:ReturnStatement[21331-21431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21576-21582]:Modifier[21576-21582]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21583-21589]:Modifier[21583-21589]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[21590-21596]:SimpleType[21590-21596]"
    }, {
      "left" : "getPrefix",
      "right" : "getPrefix",
      "info" : "SimpleName[21597-21606]:SimpleName[21597-21606]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[21607-21616]:SingleVariableDeclaration[21607-21616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21618-21880]:Block[21618-21880]"
    }, {
      "left" : "String prefix = node.getPrefix();",
      "right" : "String prefix = node.getPrefix();",
      "info" : "VariableDeclarationStatement[21628-21661]:VariableDeclarationStatement[21628-21661]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[21670-21728]:IfStatement[21670-21728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21690-21728]:Block[21690-21728]"
    }, {
      "left" : "return prefix;",
      "right" : "return prefix;",
      "info" : "ReturnStatement[21704-21718]:ReturnStatement[21704-21718]"
    }, {
      "left" : "String name = node.getNodeName();",
      "right" : "String name = node.getNodeName();",
      "info" : "VariableDeclarationStatement[21738-21771]:VariableDeclarationStatement[21738-21771]"
    }, {
      "left" : "int index = name.lastIndexOf(':');",
      "right" : "int index = name.lastIndexOf(':');",
      "info" : "VariableDeclarationStatement[21780-21814]:VariableDeclarationStatement[21780-21814]"
    }, {
      "left" : "return index < 0 ? null : name.substring(0, index);",
      "right" : "return index < 0 ? null : name.substring(0, index);",
      "info" : "ReturnStatement[21823-21874]:ReturnStatement[21823-21874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22017-22023]:Modifier[22017-22023]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22024-22030]:Modifier[22024-22030]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[22031-22037]:SimpleType[22031-22037]"
    }, {
      "left" : "getLocalName",
      "right" : "getLocalName",
      "info" : "SimpleName[22038-22050]:SimpleName[22038-22050]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[22051-22060]:SingleVariableDeclaration[22051-22060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22062-22337]:Block[22062-22337]"
    }, {
      "left" : "String localName = node.getLocalName();",
      "right" : "String localName = node.getLocalName();",
      "info" : "VariableDeclarationStatement[22072-22111]:VariableDeclarationStatement[22072-22111]"
    }, {
      "left" : "if (localName != null)",
      "right" : "if (localName != null)",
      "info" : "IfStatement[22120-22184]:IfStatement[22120-22184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22143-22184]:Block[22143-22184]"
    }, {
      "left" : "return localName;",
      "right" : "return localName;",
      "info" : "ReturnStatement[22157-22174]:ReturnStatement[22157-22174]"
    }, {
      "left" : "String name = node.getNodeName();",
      "right" : "String name = node.getNodeName();",
      "info" : "VariableDeclarationStatement[22194-22227]:VariableDeclarationStatement[22194-22227]"
    }, {
      "left" : "int index = name.lastIndexOf(':');",
      "right" : "int index = name.lastIndexOf(':');",
      "info" : "VariableDeclarationStatement[22236-22270]:VariableDeclarationStatement[22236-22270]"
    }, {
      "left" : "return index < 0 ? name : name.substring(index + 1);",
      "right" : "return index < 0 ? name : name.substring(index + 1);",
      "info" : "ReturnStatement[22279-22331]:ReturnStatement[22279-22331]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22466-22472]:Modifier[22466-22472]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22473-22479]:Modifier[22473-22479]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[22480-22486]:SimpleType[22480-22486]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[22487-22502]:SimpleName[22487-22502]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[22503-22512]:SingleVariableDeclaration[22503-22512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22514-23322]:Block[22514-23351]"
    }, {
      "left" : "if (node instanceof Document)",
      "right" : "if (node instanceof Document)",
      "info" : "IfStatement[22524-22624]:IfStatement[22524-22624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22554-22624]:Block[22554-22624]"
    }, {
      "left" : "node = ((Document) node).getDocumentElement();",
      "right" : "node = ((Document) node).getDocumentElement();",
      "info" : "ExpressionStatement[22568-22614]:ExpressionStatement[22568-22614]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[22634-22667]:VariableDeclarationStatement[22634-22667]"
    }, {
      "left" : "String uri = element.getNamespaceURI();",
      "right" : "String uri = element.getNamespaceURI();",
      "info" : "VariableDeclarationStatement[22677-22716]:VariableDeclarationStatement[22677-22716]"
    }, {
      "left" : "if (uri == null)",
      "right" : "if (uri == null)",
      "info" : "IfStatement[22725-23296]:IfStatement[22725-23301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22742-23296]:Block[22742-23301]"
    }, {
      "left" : "String prefix = getPrefix(node);",
      "right" : "String prefix = getPrefix(node);",
      "info" : "VariableDeclarationStatement[22756-22788]:VariableDeclarationStatement[22756-22788]"
    }, {
      "left" : "String qname = prefix == null ? \"xmlns\" : \"xmlns:\" + prefix;",
      "right" : "String qname = prefix == null ? \"xmlns\" : \"xmlns:\" + prefix;",
      "info" : "VariableDeclarationStatement[22801-22861]:VariableDeclarationStatement[22801-22861]"
    }, {
      "left" : "Node aNode = node;",
      "right" : "Node aNode = node;",
      "info" : "VariableDeclarationStatement[22879-22897]:VariableDeclarationStatement[22879-22897]"
    }, {
      "left" : "while (aNode != null)",
      "right" : "while (aNode != null)",
      "info" : "WhileStatement[22910-23261]:WhileStatement[22910-23291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22932-23261]:Block[22932-23291]"
    }, {
      "left" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[22950-23200]:IfStatement[22950-23230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22996-23200]:Block[22996-23230]"
    }, {
      "left" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "right" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "info" : "VariableDeclarationStatement[23018-23072]:VariableDeclarationStatement[23018-23072]"
    }, {
      "left" : "if (attr != null)",
      "right" : "if (attr != null)",
      "info" : "IfStatement[23093-23182]:IfStatement[23093-23212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23111-23182]:Block[23111-23212]"
    }, {
      "left" : "attr.getValue()",
      "right" : "attr.getValue()",
      "info" : "MethodInvocation[23144-23159]:MethodInvocation[23143-23158]"
    }, {
      "left" : "aNode = aNode.getParentNode();",
      "right" : "aNode = aNode.getParentNode();",
      "info" : "ExpressionStatement[23217-23247]:ExpressionStatement[23247-23277]"
    }, {
      "left" : "return uri;",
      "right" : "return \"\".equals(uri) ? null : uri;",
      "info" : "ReturnStatement[23305-23316]:ReturnStatement[23310-23345]"
    }, {
      "left" : "uri",
      "right" : "uri",
      "info" : "SimpleName[23312-23315]:SimpleName[23327-23330]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23328-23334]:Modifier[23357-23363]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[23335-23341]:SimpleType[23364-23370]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[23342-23350]:SimpleName[23371-23379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23353-23565]:Block[23382-23594]"
    }, {
      "left" : "if (node.getNodeType() == Node.COMMENT_NODE)",
      "right" : "if (node.getNodeType() == Node.COMMENT_NODE)",
      "info" : "IfStatement[23363-23525]:IfStatement[23392-23554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23408-23525]:Block[23437-23554]"
    }, {
      "left" : "String text = ((Comment) node).getData();",
      "right" : "String text = ((Comment) node).getData();",
      "info" : "VariableDeclarationStatement[23422-23463]:VariableDeclarationStatement[23451-23492]"
    }, {
      "left" : "return text == null ? \"\" : text.trim();",
      "right" : "return text == null ? \"\" : text.trim();",
      "info" : "ReturnStatement[23476-23515]:ReturnStatement[23505-23544]"
    }, {
      "left" : "return stringValue(node);",
      "right" : "return stringValue(node);",
      "info" : "ReturnStatement[23534-23559]:ReturnStatement[23563-23588]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23693-23700]:Modifier[23722-23729]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23701-23707]:SimpleType[23730-23736]"
    }, {
      "left" : "stringValue",
      "right" : "stringValue",
      "info" : "SimpleName[23708-23719]:SimpleName[23737-23748]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[23720-23729]:SingleVariableDeclaration[23749-23758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23731-24623]:Block[23760-24652]"
    }, {
      "left" : "int nodeType = node.getNodeType();",
      "right" : "int nodeType = node.getNodeType();",
      "info" : "VariableDeclarationStatement[23741-23775]:VariableDeclarationStatement[23770-23804]"
    }, {
      "left" : "if (nodeType == Node.COMMENT_NODE)",
      "right" : "if (nodeType == Node.COMMENT_NODE)",
      "info" : "IfStatement[23784-23853]:IfStatement[23813-23882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23819-23853]:Block[23848-23882]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[23833-23843]:ReturnStatement[23862-23872]"
    }, {
      "left" : "boolean trim = !\"preserve\".equals(findEnclosingAttribute(node, \"xml:space\"));",
      "right" : "boolean trim = !\"preserve\".equals(findEnclosingAttribute(node, \"xml:space\"));",
      "info" : "VariableDeclarationStatement[23862-23939]:VariableDeclarationStatement[23891-23968]"
    }, {
      "left" : "if (nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE)",
      "right" : "if (nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE)",
      "info" : "IfStatement[23948-24143]:IfStatement[23977-24172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24019-24143]:Block[24048-24172]"
    }, {
      "left" : "String text = node.getNodeValue();",
      "right" : "String text = node.getNodeValue();",
      "info" : "VariableDeclarationStatement[24033-24067]:VariableDeclarationStatement[24062-24096]"
    }, {
      "left" : "return text == null ? \"\" : trim ? text.trim() : text;",
      "right" : "return text == null ? \"\" : trim ? text.trim() : text;",
      "info" : "ReturnStatement[24080-24133]:ReturnStatement[24109-24162]"
    }, {
      "left" : "if (nodeType == Node.PROCESSING_INSTRUCTION_NODE)",
      "right" : "if (nodeType == Node.PROCESSING_INSTRUCTION_NODE)",
      "info" : "IfStatement[24152-24347]:IfStatement[24181-24376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24202-24347]:Block[24231-24376]"
    }, {
      "left" : "String text = ((ProcessingInstruction) node).getData();",
      "right" : "String text = ((ProcessingInstruction) node).getData();",
      "info" : "VariableDeclarationStatement[24216-24271]:VariableDeclarationStatement[24245-24300]"
    }, {
      "left" : "return text == null ? \"\" : trim ? text.trim() : text;",
      "right" : "return text == null ? \"\" : trim ? text.trim() : text;",
      "info" : "ReturnStatement[24284-24337]:ReturnStatement[24313-24366]"
    }, {
      "left" : "NodeList list = node.getChildNodes();",
      "right" : "NodeList list = node.getChildNodes();",
      "info" : "VariableDeclarationStatement[24356-24393]:VariableDeclarationStatement[24385-24422]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer();",
      "right" : "StringBuffer buf = new StringBuffer();",
      "info" : "VariableDeclarationStatement[24402-24440]:VariableDeclarationStatement[24431-24469]"
    }, {
      "left" : "for (int i = 0; i < list.getLength(); i++)",
      "right" : "for (int i = 0; i < list.getLength(); i++)",
      "info" : "ForStatement[24449-24586]:ForStatement[24478-24615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24492-24586]:Block[24521-24615]"
    }, {
      "left" : "Node child = list.item(i);",
      "right" : "Node child = list.item(i);",
      "info" : "VariableDeclarationStatement[24506-24532]:VariableDeclarationStatement[24535-24561]"
    }, {
      "left" : "buf.append(stringValue(child));",
      "right" : "buf.append(stringValue(child));",
      "info" : "ExpressionStatement[24545-24576]:ExpressionStatement[24574-24605]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[24595-24617]:ReturnStatement[24624-24646]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24761-24767]:Modifier[24790-24796]"
    }, {
      "left" : "Pointer",
      "right" : "Pointer",
      "info" : "SimpleType[24768-24775]:SimpleType[24797-24804]"
    }, {
      "left" : "getPointerByID",
      "right" : "getPointerByID",
      "info" : "SimpleName[24776-24790]:SimpleName[24805-24819]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[24791-24812]:SingleVariableDeclaration[24820-24841]"
    }, {
      "left" : "String id",
      "right" : "String id",
      "info" : "SingleVariableDeclaration[24814-24823]:SingleVariableDeclaration[24843-24852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24825-25157]:Block[24854-25186]"
    }, {
      "left" : "Document document = node.getNodeType() == Node.DOCUMENT_NODE ? (Document) node\n                : node.getOwnerDocument();",
      "right" : "Document document = node.getNodeType() == Node.DOCUMENT_NODE ? (Document) node\n                : node.getOwnerDocument();",
      "info" : "VariableDeclarationStatement[24835-24956]:VariableDeclarationStatement[24864-24985]"
    }, {
      "left" : "Element element = document.getElementById(id);",
      "right" : "Element element = document.getElementById(id);",
      "info" : "VariableDeclarationStatement[24965-25011]:VariableDeclarationStatement[24994-25040]"
    }, {
      "left" : "return element == null ? (Pointer) new NullPointer(getLocale(), id)\n                : new DOMNodePointer(element, getLocale(), id);",
      "right" : "return element == null ? (Pointer) new NullPointer(getLocale(), id)\n                : new DOMNodePointer(element, getLocale(), id);",
      "info" : "ReturnStatement[25020-25151]:ReturnStatement[25049-25180]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25163-25169]:Modifier[25192-25198]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[25170-25173]:PrimitiveType[25199-25202]"
    }, {
      "left" : "compareChildNodePointers",
      "right" : "compareChildNodePointers",
      "info" : "SimpleName[25174-25198]:SimpleName[25203-25227]"
    }, {
      "left" : "NodePointer pointer1",
      "right" : "NodePointer pointer1",
      "info" : "SingleVariableDeclaration[25199-25219]:SingleVariableDeclaration[25228-25248]"
    }, {
      "left" : "NodePointer pointer2",
      "right" : "NodePointer pointer2",
      "info" : "SingleVariableDeclaration[25233-25253]:SingleVariableDeclaration[25262-25282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25255-26517]:Block[25284-26546]"
    }, {
      "left" : "Node node1 = (Node) pointer1.getBaseValue();",
      "right" : "Node node1 = (Node) pointer1.getBaseValue();",
      "info" : "VariableDeclarationStatement[25265-25309]:VariableDeclarationStatement[25294-25338]"
    }, {
      "left" : "Node node2 = (Node) pointer2.getBaseValue();",
      "right" : "Node node2 = (Node) pointer2.getBaseValue();",
      "info" : "VariableDeclarationStatement[25318-25362]:VariableDeclarationStatement[25347-25391]"
    }, {
      "left" : "if (node1 == node2)",
      "right" : "if (node1 == node2)",
      "info" : "IfStatement[25371-25424]:IfStatement[25400-25453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25391-25424]:Block[25420-25453]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[25405-25414]:ReturnStatement[25434-25443]"
    }, {
      "left" : "int t1 = node1.getNodeType();",
      "right" : "int t1 = node1.getNodeType();",
      "info" : "VariableDeclarationStatement[25434-25463]:VariableDeclarationStatement[25463-25492]"
    }, {
      "left" : "int t2 = node2.getNodeType();",
      "right" : "int t2 = node2.getNodeType();",
      "info" : "VariableDeclarationStatement[25472-25501]:VariableDeclarationStatement[25501-25530]"
    }, {
      "left" : "if (t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE)",
      "right" : "if (t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE)",
      "info" : "IfStatement[25510-25604]:IfStatement[25539-25633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25570-25604]:Block[25599-25633]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[25584-25594]:ReturnStatement[25613-25623]"
    }, {
      "left" : "if (t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "right" : "if (t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "info" : "IfStatement[25613-25706]:IfStatement[25642-25735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25673-25706]:Block[25702-25735]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[25687-25696]:ReturnStatement[25716-25725]"
    }, {
      "left" : "if (t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "right" : "if (t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "info" : "IfStatement[25715-26202]:IfStatement[25744-26231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25775-26202]:Block[25804-26231]"
    }, {
      "left" : "NamedNodeMap map = ((Node) getNode()).getAttributes();",
      "right" : "NamedNodeMap map = ((Node) getNode()).getAttributes();",
      "info" : "VariableDeclarationStatement[25789-25843]:VariableDeclarationStatement[25818-25872]"
    }, {
      "left" : "int length = map.getLength();",
      "right" : "int length = map.getLength();",
      "info" : "VariableDeclarationStatement[25856-25885]:VariableDeclarationStatement[25885-25914]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[25898-26149]:ForStatement[25927-26178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25931-26149]:Block[25960-26178]"
    }, {
      "left" : "Node n = map.item(i);",
      "right" : "Node n = map.item(i);",
      "info" : "VariableDeclarationStatement[25949-25970]:VariableDeclarationStatement[25978-25999]"
    }, {
      "left" : "if (n == node1)",
      "right" : "if (n == node1)",
      "info" : "IfStatement[25987-26053]:IfStatement[26016-26082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26003-26053]:Block[26032-26082]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[26025-26035]:ReturnStatement[26054-26064]"
    }, {
      "left" : "if (n == node2)",
      "right" : "if (n == node2)",
      "info" : "IfStatement[26070-26135]:IfStatement[26099-26164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26086-26135]:Block[26115-26164]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[26108-26117]:ReturnStatement[26137-26146]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[26162-26171]:ReturnStatement[26191-26200]"
    }, {
      "left" : "Node current = node.getFirstChild();",
      "right" : "Node current = node.getFirstChild();",
      "info" : "VariableDeclarationStatement[26212-26248]:VariableDeclarationStatement[26241-26277]"
    }, {
      "left" : "while (current != null)",
      "right" : "while (current != null)",
      "info" : "WhileStatement[26257-26493]:WhileStatement[26286-26522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26281-26493]:Block[26310-26522]"
    }, {
      "left" : "if (current == node1)",
      "right" : "if (current == node1)",
      "info" : "IfStatement[26295-26359]:IfStatement[26324-26388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26317-26359]:Block[26346-26388]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[26335-26345]:ReturnStatement[26364-26374]"
    }, {
      "left" : "if (current == node2)",
      "right" : "if (current == node2)",
      "info" : "IfStatement[26372-26435]:IfStatement[26401-26464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26394-26435]:Block[26423-26464]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[26412-26421]:ReturnStatement[26441-26450]"
    }, {
      "left" : "current = current.getNextSibling();",
      "right" : "current = current.getNextSibling();",
      "info" : "ExpressionStatement[26448-26483]:ExpressionStatement[26477-26512]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[26502-26511]:ReturnStatement[26531-26540]"
    } ]
  },
  "interFileMappings" : { }
}