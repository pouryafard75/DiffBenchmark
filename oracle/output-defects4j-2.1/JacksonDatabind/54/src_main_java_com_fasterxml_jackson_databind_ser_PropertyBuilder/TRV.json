{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final static Object NO_DEFAULT_MARKER = Boolean.FALSE;",
      "right" : "private final static Object NO_DEFAULT_MARKER = Boolean.FALSE;",
      "info" : "FieldDeclaration[585-647]:FieldDeclaration[585-647]"
    }, {
      "left" : "final protected SerializationConfig _config;",
      "right" : "final protected SerializationConfig _config;",
      "info" : "FieldDeclaration[657-701]:FieldDeclaration[657-701]"
    }, {
      "left" : "final protected BeanDescription _beanDesc;",
      "right" : "final protected BeanDescription _beanDesc;",
      "info" : "FieldDeclaration[706-748]:FieldDeclaration[706-748]"
    }, {
      "left" : "final protected JsonInclude.Value _defaultInclusion;",
      "right" : "final protected JsonInclude.Value _defaultInclusion;",
      "info" : "FieldDeclaration[754-972]:FieldDeclaration[754-972]"
    }, {
      "left" : "final protected AnnotationIntrospector _annotationIntrospector;",
      "right" : "final protected AnnotationIntrospector _annotationIntrospector;",
      "info" : "FieldDeclaration[978-1041]:FieldDeclaration[978-1041]"
    }, {
      "left" : "protected Object _defaultBean;",
      "right" : "protected Object _defaultBean;",
      "info" : "FieldDeclaration[1047-1485]:FieldDeclaration[1047-1485]"
    }, {
      "left" : "public PropertyBuilder(SerializationConfig config, BeanDescription beanDesc)",
      "right" : "public PropertyBuilder(SerializationConfig config, BeanDescription beanDesc)",
      "info" : "MethodDeclaration[1491-1844]:MethodDeclaration[1491-1844]"
    }, {
      "left" : "public Annotations getClassAnnotations()",
      "right" : "public Annotations getClassAnnotations()",
      "info" : "MethodDeclaration[2012-2108]:MethodDeclaration[2012-2108]"
    }, {
      "left" : "protected JavaType findSerializationType(Annotated a, boolean useStaticTyping, JavaType declaredType)\n        throws JsonMappingException",
      "right" : "protected JavaType findSerializationType(Annotated a, boolean useStaticTyping, JavaType declaredType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7671-10299]:MethodDeclaration[7667-10295]"
    }, {
      "left" : "protected Object getDefaultBean()",
      "right" : "protected Object getDefaultBean()",
      "info" : "MethodDeclaration[10498-11485]:MethodDeclaration[10494-11481]"
    }, {
      "left" : "protected Object getPropertyDefaultValue(String name, AnnotatedMember member,\n            JavaType type)",
      "right" : "protected Object getPropertyDefaultValue(String name, AnnotatedMember member,\n            JavaType type)",
      "info" : "MethodDeclaration[11491-12486]:MethodDeclaration[11487-12482]"
    }, {
      "left" : "protected Object getDefaultValue(JavaType type)",
      "right" : "protected Object getDefaultValue(JavaType type)",
      "info" : "MethodDeclaration[12492-13789]:MethodDeclaration[12488-13785]"
    }, {
      "left" : "protected Object _throwWrapped(Exception e, String propName, Object defaultBean)",
      "right" : "protected Object _throwWrapped(Exception e, String propName, Object defaultBean)",
      "info" : "MethodDeclaration[13992-14450]:MethodDeclaration[13988-14446]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1572-1844]:Block[1572-1844]"
    }, {
      "left" : "_config = config;",
      "right" : "_config = config;",
      "info" : "ExpressionStatement[1582-1599]:ExpressionStatement[1582-1599]"
    }, {
      "left" : "_beanDesc = beanDesc;",
      "right" : "_beanDesc = beanDesc;",
      "info" : "ExpressionStatement[1608-1629]:ExpressionStatement[1608-1629]"
    }, {
      "left" : "_defaultInclusion = beanDesc.findPropertyInclusion(\n                config.getDefaultPropertyInclusion(beanDesc.getBeanClass()));",
      "right" : "_defaultInclusion = beanDesc.findPropertyInclusion(\n                config.getDefaultPropertyInclusion(beanDesc.getBeanClass()));",
      "info" : "ExpressionStatement[1638-1767]:ExpressionStatement[1638-1767]"
    }, {
      "left" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "right" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "info" : "ExpressionStatement[1776-1838]:ExpressionStatement[1776-1838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2053-2108]:Block[2053-2108]"
    }, {
      "left" : "return _beanDesc.getClassAnnotations();",
      "right" : "return _beanDesc.getClassAnnotations();",
      "info" : "ReturnStatement[2063-2102]:ReturnStatement[2063-2102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8135-10299]:Block[8131-10295]"
    }, {
      "left" : "JavaType secondary = _annotationIntrospector.refineSerializationType(_config, a, declaredType);",
      "right" : "JavaType secondary = _annotationIntrospector.refineSerializationType(_config, a, declaredType);",
      "info" : "VariableDeclarationStatement[8145-8240]:VariableDeclarationStatement[8141-8236]"
    }, {
      "left" : "if (secondary != declaredType)",
      "right" : "if (secondary != declaredType)",
      "info" : "IfStatement[8381-9755]:IfStatement[8377-9751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8412-9755]:Block[8408-9751]"
    }, {
      "left" : "Class<?> serClass = secondary.getRawClass();",
      "right" : "Class<?> serClass = secondary.getRawClass();",
      "info" : "VariableDeclarationStatement[8426-8470]:VariableDeclarationStatement[8422-8466]"
    }, {
      "left" : "Class<?> rawDeclared = declaredType.getRawClass();",
      "right" : "Class<?> rawDeclared = declaredType.getRawClass();",
      "info" : "VariableDeclarationStatement[8532-8582]:VariableDeclarationStatement[8528-8578]"
    }, {
      "left" : "if (serClass.isAssignableFrom(rawDeclared))",
      "right" : "if (serClass.isAssignableFrom(rawDeclared))",
      "info" : "IfStatement[8595-9671]:IfStatement[8591-9667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8639-8686]:Block[8635-8682]"
    }, {
      "left" : ";",
      "right" : ";",
      "info" : "EmptyStatement[8657-8658]:EmptyStatement[8653-8654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8692-9671]:Block[8688-9667]"
    }, {
      "left" : "if (!rawDeclared.isAssignableFrom(serClass))",
      "right" : "if (!rawDeclared.isAssignableFrom(serClass))",
      "info" : "IfStatement[9126-9401]:IfStatement[9122-9397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9171-9401]:Block[9167-9397]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Illegal concrete-type annotation for method '\"+a.getName()+\"': class \"+serClass.getName()+\" not a super-type of (declared) class \"+rawDeclared.getName());",
      "right" : "throw new IllegalArgumentException(\"Illegal concrete-type annotation for method '\"+a.getName()+\"': class \"+serClass.getName()+\" not a super-type of (declared) class \"+rawDeclared.getName());",
      "info" : "ThrowStatement[9193-9383]:ThrowStatement[9189-9379]"
    }, {
      "left" : "useStaticTyping = true;",
      "right" : "useStaticTyping = true;",
      "info" : "ExpressionStatement[9684-9707]:ExpressionStatement[9680-9703]"
    }, {
      "left" : "declaredType = secondary;",
      "right" : "declaredType = secondary;",
      "info" : "ExpressionStatement[9720-9745]:ExpressionStatement[9716-9741]"
    }, {
      "left" : "JsonSerialize.Typing typing = _annotationIntrospector.findSerializationTyping(a);",
      "right" : "JsonSerialize.Typing typing = _annotationIntrospector.findSerializationTyping(a);",
      "info" : "VariableDeclarationStatement[9840-9921]:VariableDeclarationStatement[9836-9917]"
    }, {
      "left" : "if ((typing != null) && (typing != JsonSerialize.Typing.DEFAULT_TYPING))",
      "right" : "if ((typing != null) && (typing != JsonSerialize.Typing.DEFAULT_TYPING))",
      "info" : "IfStatement[9930-10085]:IfStatement[9926-10081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10003-10085]:Block[9999-10081]"
    }, {
      "left" : "useStaticTyping = (typing == JsonSerialize.Typing.STATIC);",
      "right" : "useStaticTyping = (typing == JsonSerialize.Typing.STATIC);",
      "info" : "ExpressionStatement[10017-10075]:ExpressionStatement[10013-10071]"
    }, {
      "left" : "if (useStaticTyping)",
      "right" : "if (useStaticTyping)",
      "info" : "IfStatement[10094-10272]:IfStatement[10090-10268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10115-10272]:Block[10111-10268]"
    }, {
      "left" : "return declaredType.withStaticTyping();",
      "right" : "return declaredType.withStaticTyping();",
      "info" : "ReturnStatement[10210-10249]:ReturnStatement[10206-10245]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10281-10293]:ReturnStatement[10277-10289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10536-11485]:Block[10532-11481]"
    }, {
      "left" : "Object def = _defaultBean;",
      "right" : "Object def = _defaultBean;",
      "info" : "VariableDeclarationStatement[10546-10572]:VariableDeclarationStatement[10542-10568]"
    }, {
      "left" : "if (def == null)",
      "right" : "if (def == null)",
      "info" : "IfStatement[10581-11414]:IfStatement[10577-11410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10598-11414]:Block[10594-11410]"
    }, {
      "left" : "def = _beanDesc.instantiateBean(_config.canOverrideAccessModifiers());",
      "right" : "def = _beanDesc.instantiateBean(_config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[10777-10847]:ExpressionStatement[10773-10843]"
    }, {
      "left" : "if (def == null)",
      "right" : "if (def == null)",
      "info" : "IfStatement[10860-11372]:IfStatement[10856-11368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10877-11372]:Block[10873-11368]"
    }, {
      "left" : "def = NO_DEFAULT_MARKER;",
      "right" : "def = NO_DEFAULT_MARKER;",
      "info" : "ExpressionStatement[11334-11358]:ExpressionStatement[11330-11354]"
    }, {
      "left" : "_defaultBean = def;",
      "right" : "_defaultBean = def;",
      "info" : "ExpressionStatement[11385-11404]:ExpressionStatement[11381-11400]"
    }, {
      "left" : "return (def == NO_DEFAULT_MARKER) ? null : _defaultBean;",
      "right" : "return (def == NO_DEFAULT_MARKER) ? null : _defaultBean;",
      "info" : "ReturnStatement[11423-11479]:ReturnStatement[11419-11475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12184-12486]:Block[12180-12482]"
    }, {
      "left" : "Object defaultBean = getDefaultBean();",
      "right" : "Object defaultBean = getDefaultBean();",
      "info" : "VariableDeclarationStatement[12194-12232]:VariableDeclarationStatement[12190-12228]"
    }, {
      "left" : "if (defaultBean == null)",
      "right" : "if (defaultBean == null)",
      "info" : "IfStatement[12241-12319]:IfStatement[12237-12315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12266-12319]:Block[12262-12315]"
    }, {
      "left" : "return getDefaultValue(type);",
      "right" : "return getDefaultValue(type);",
      "info" : "ReturnStatement[12280-12309]:ReturnStatement[12276-12305]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[12328-12480]:TryStatement[12324-12476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12332-12392]:Block[12328-12388]"
    }, {
      "left" : "return member.getValue(defaultBean);",
      "right" : "return member.getValue(defaultBean);",
      "info" : "ReturnStatement[12346-12382]:ReturnStatement[12342-12378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12413-12480]:Block[12409-12476]"
    }, {
      "left" : "return _throwWrapped(e, name, defaultBean);",
      "right" : "return _throwWrapped(e, name, defaultBean);",
      "info" : "ReturnStatement[12427-12470]:ReturnStatement[12423-12466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13221-13789]:Block[13217-13785]"
    }, {
      "left" : "Class<?> cls = type.getRawClass();",
      "right" : "Class<?> cls = type.getRawClass();",
      "info" : "VariableDeclarationStatement[13394-13428]:VariableDeclarationStatement[13390-13424]"
    }, {
      "left" : "Class<?> prim = ClassUtil.primitiveType(cls);",
      "right" : "Class<?> prim = ClassUtil.primitiveType(cls);",
      "info" : "VariableDeclarationStatement[13438-13483]:VariableDeclarationStatement[13434-13479]"
    }, {
      "left" : "if (prim != null)",
      "right" : "if (prim != null)",
      "info" : "IfStatement[13492-13570]:IfStatement[13488-13566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13510-13570]:Block[13506-13566]"
    }, {
      "left" : "return ClassUtil.defaultValue(prim);",
      "right" : "return ClassUtil.defaultValue(prim);",
      "info" : "ReturnStatement[13524-13560]:ReturnStatement[13520-13556]"
    }, {
      "left" : "if (type.isContainerType() || type.isReferenceType())",
      "right" : "if (type.isContainerType() || type.isReferenceType())",
      "info" : "IfStatement[13579-13694]:IfStatement[13575-13690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13633-13694]:Block[13629-13690]"
    }, {
      "left" : "return JsonInclude.Include.NON_EMPTY;",
      "right" : "return JsonInclude.Include.NON_EMPTY;",
      "info" : "ReturnStatement[13647-13684]:ReturnStatement[13643-13680]"
    }, {
      "left" : "if (cls == String.class)",
      "right" : "if (cls == String.class)",
      "info" : "IfStatement[13703-13762]:IfStatement[13699-13758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13728-13762]:Block[13724-13758]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[13742-13752]:ReturnStatement[13738-13748]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13771-13783]:ReturnStatement[13767-13779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14077-14450]:Block[14073-14446]"
    }, {
      "left" : "Throwable t = e;",
      "right" : "Throwable t = e;",
      "info" : "VariableDeclarationStatement[14087-14103]:VariableDeclarationStatement[14083-14099]"
    }, {
      "left" : "while (t.getCause() != null)",
      "right" : "while (t.getCause() != null)",
      "info" : "WhileStatement[14112-14182]:WhileStatement[14108-14178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14141-14182]:Block[14137-14178]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[14155-14172]:ExpressionStatement[14151-14168]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[14191-14231]:IfStatement[14187-14227]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[14215-14231]:ThrowStatement[14211-14227]"
    }, {
      "left" : "if (t instanceof RuntimeException)",
      "right" : "if (t instanceof RuntimeException)",
      "info" : "IfStatement[14240-14302]:IfStatement[14236-14298]"
    }, {
      "left" : "throw (RuntimeException) t;",
      "right" : "throw (RuntimeException) t;",
      "info" : "ThrowStatement[14275-14302]:ThrowStatement[14271-14298]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to get property '\"+propName+\"' of default \"+defaultBean.getClass().getName()+\" instance\");",
      "right" : "throw new IllegalArgumentException(\"Failed to get property '\"+propName+\"' of default \"+defaultBean.getClass().getName()+\" instance\");",
      "info" : "ThrowStatement[14311-14444]:ThrowStatement[14307-14440]"
    } ]
  },
  "interFileMappings" : { }
}