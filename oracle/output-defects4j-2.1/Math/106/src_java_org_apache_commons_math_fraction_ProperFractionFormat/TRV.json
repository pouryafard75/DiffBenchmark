{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -6337346779577272307L;",
      "right" : "private static final long serialVersionUID = -6337346779577272307L;",
      "info" : "FieldDeclaration[1302-1413]:FieldDeclaration[1302-1413]"
    }, {
      "left" : "private NumberFormat wholeFormat;",
      "right" : "private NumberFormat wholeFormat;",
      "info" : "FieldDeclaration[1425-1508]:FieldDeclaration[1425-1508]"
    }, {
      "left" : "public ProperFractionFormat()",
      "right" : "public ProperFractionFormat()",
      "info" : "MethodDeclaration[1516-1741]:MethodDeclaration[1516-1741]"
    }, {
      "left" : "public ProperFractionFormat(NumberFormat format)",
      "right" : "public ProperFractionFormat(NumberFormat format)",
      "info" : "MethodDeclaration[1753-2132]:MethodDeclaration[1753-2132]"
    }, {
      "left" : "public ProperFractionFormat(NumberFormat wholeFormat,\r\n            NumberFormat numeratorFormat,\r\n            NumberFormat denominatorFormat)",
      "right" : "public ProperFractionFormat(NumberFormat wholeFormat,\r\n            NumberFormat numeratorFormat,\r\n            NumberFormat denominatorFormat)",
      "info" : "MethodDeclaration[2144-2738]:MethodDeclaration[2144-2738]"
    }, {
      "left" : "public StringBuffer format(Fraction fraction, StringBuffer toAppendTo,\r\n            FieldPosition pos)",
      "right" : "public StringBuffer format(Fraction fraction, StringBuffer toAppendTo,\r\n            FieldPosition pos)",
      "info" : "MethodDeclaration[2750-3891]:MethodDeclaration[2750-3891]"
    }, {
      "left" : "public NumberFormat getWholeFormat()",
      "right" : "public NumberFormat getWholeFormat()",
      "info" : "MethodDeclaration[3899-4058]:MethodDeclaration[3899-4058]"
    }, {
      "left" : "public void setWholeFormat(NumberFormat format)",
      "right" : "public void setWholeFormat(NumberFormat format)",
      "info" : "MethodDeclaration[7149-7586]:MethodDeclaration[7375-7812]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1692-1741]:Block[1692-1741]"
    }, {
      "left" : "this(getDefaultNumberFormat());",
      "right" : "this(getDefaultNumberFormat());",
      "info" : "ConstructorInvocation[1703-1734]:ConstructorInvocation[1703-1734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2041-2132]:Block[2041-2132]"
    }, {
      "left" : "this(format, (NumberFormat)format.clone(), (NumberFormat)format.clone());",
      "right" : "this(format, (NumberFormat)format.clone(), (NumberFormat)format.clone());",
      "info" : "ConstructorInvocation[2052-2125]:ConstructorInvocation[2052-2125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2640-2738]:Block[2640-2738]"
    }, {
      "left" : "super(numeratorFormat, denominatorFormat);",
      "right" : "super(numeratorFormat, denominatorFormat);",
      "info" : "SuperConstructorInvocation[2651-2693]:SuperConstructorInvocation[2651-2693]"
    }, {
      "left" : "setWholeFormat(wholeFormat);",
      "right" : "setWholeFormat(wholeFormat);",
      "info" : "ExpressionStatement[2703-2731]:ExpressionStatement[2703-2731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3274-3891]:Block[3274-3891]"
    }, {
      "left" : "pos.setBeginIndex(0);",
      "right" : "pos.setBeginIndex(0);",
      "info" : "ExpressionStatement[3295-3316]:ExpressionStatement[3295-3316]"
    }, {
      "left" : "pos.setEndIndex(0);",
      "right" : "pos.setEndIndex(0);",
      "info" : "ExpressionStatement[3326-3345]:ExpressionStatement[3326-3345]"
    }, {
      "left" : "int num = fraction.getNumerator();",
      "right" : "int num = fraction.getNumerator();",
      "info" : "VariableDeclarationStatement[3357-3391]:VariableDeclarationStatement[3357-3391]"
    }, {
      "left" : "int den = fraction.getDenominator();",
      "right" : "int den = fraction.getDenominator();",
      "info" : "VariableDeclarationStatement[3401-3437]:VariableDeclarationStatement[3401-3437]"
    }, {
      "left" : "int whole = num / den;",
      "right" : "int whole = num / den;",
      "info" : "VariableDeclarationStatement[3447-3469]:VariableDeclarationStatement[3447-3469]"
    }, {
      "left" : "num = num % den;",
      "right" : "num = num % den;",
      "info" : "ExpressionStatement[3479-3495]:ExpressionStatement[3479-3495]"
    }, {
      "left" : "if (whole != 0)",
      "right" : "if (whole != 0)",
      "info" : "IfStatement[3515-3676]:IfStatement[3515-3676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3531-3676]:Block[3531-3676]"
    }, {
      "left" : "getWholeFormat().format(whole, toAppendTo, pos);",
      "right" : "getWholeFormat().format(whole, toAppendTo, pos);",
      "info" : "ExpressionStatement[3546-3594]:ExpressionStatement[3546-3594]"
    }, {
      "left" : "toAppendTo.append(' ');",
      "right" : "toAppendTo.append(' ');",
      "info" : "ExpressionStatement[3608-3631]:ExpressionStatement[3608-3631]"
    }, {
      "left" : "num = Math.abs(num);",
      "right" : "num = Math.abs(num);",
      "info" : "ExpressionStatement[3645-3665]:ExpressionStatement[3645-3665]"
    }, {
      "left" : "getNumeratorFormat().format(num, toAppendTo, pos);",
      "right" : "getNumeratorFormat().format(num, toAppendTo, pos);",
      "info" : "ExpressionStatement[3686-3736]:ExpressionStatement[3686-3736]"
    }, {
      "left" : "toAppendTo.append(\" / \");",
      "right" : "toAppendTo.append(\" / \");",
      "info" : "ExpressionStatement[3746-3771]:ExpressionStatement[3746-3771]"
    }, {
      "left" : "getDenominatorFormat().format(den, toAppendTo,\r\n            pos);",
      "right" : "getDenominatorFormat().format(den, toAppendTo,\r\n            pos);",
      "info" : "ExpressionStatement[3781-3846]:ExpressionStatement[3781-3846]"
    }, {
      "left" : "return toAppendTo;",
      "right" : "return toAppendTo;",
      "info" : "ReturnStatement[3866-3884]:ReturnStatement[3866-3884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4021-4058]:Block[4021-4058]"
    }, {
      "left" : "return wholeFormat;",
      "right" : "return wholeFormat;",
      "info" : "ReturnStatement[4032-4051]:ReturnStatement[4032-4051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7400-7586]:Block[7626-7812]"
    }, {
      "left" : "if (format == null)",
      "right" : "if (format == null)",
      "info" : "IfStatement[7411-7543]:IfStatement[7637-7769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7431-7543]:Block[7657-7769]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"whole format can not be null.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"whole format can not be null.\");",
      "info" : "ThrowStatement[7446-7532]:ThrowStatement[7672-7758]"
    }, {
      "left" : "this.wholeFormat = format;",
      "right" : "this.wholeFormat = format;",
      "info" : "ExpressionStatement[7553-7579]:ExpressionStatement[7779-7805]"
    } ]
  },
  "interFileMappings" : { }
}