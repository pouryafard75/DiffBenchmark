{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final Log log = LogFactory.getLog(CacheNotifierImpl.class);",
      "right" : "private static final Log log = LogFactory.getLog(CacheNotifierImpl.class);",
      "info" : "FieldDeclaration[3970-4044]:FieldDeclaration[3970-4044]"
    }, {
      "left" : "private static final Map<Class<? extends Annotation>, Class<?>> allowedListeners = new HashMap<Class<? extends Annotation>, Class<?>>(16);",
      "right" : "private static final Map<Class<? extends Annotation>, Class<?>> allowedListeners = new HashMap<Class<? extends Annotation>, Class<?>>(16);",
      "info" : "FieldDeclaration[4049-4187]:FieldDeclaration[4049-4187]"
    }, {
      "left" : "private static final Map<Class<? extends Annotation>, Class<?>> clusterAllowedListeners =\n         new HashMap<Class<? extends Annotation>, Class<?>>(4);",
      "right" : "private static final Map<Class<? extends Annotation>, Class<?>> clusterAllowedListeners =\n         new HashMap<Class<? extends Annotation>, Class<?>>(4);",
      "info" : "FieldDeclaration[4191-4344]:FieldDeclaration[4191-4344]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryCreatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryCreatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[5947-6086]:FieldDeclaration[5947-6086]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryRemovedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryRemovedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[6090-6229]:FieldDeclaration[6090-6229]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryVisitedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryVisitedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[6233-6372]:FieldDeclaration[6233-6372]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryModifiedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryModifiedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[6376-6516]:FieldDeclaration[6376-6516]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryActivatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryActivatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[6520-6661]:FieldDeclaration[6520-6661]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryPassivatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryPassivatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[6665-6807]:FieldDeclaration[6665-6807]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryLoadedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryLoadedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[6811-6949]:FieldDeclaration[6811-6949]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryInvalidatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryInvalidatedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[6953-7096]:FieldDeclaration[6953-7096]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntriesEvictedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntriesEvictedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[7100-7241]:FieldDeclaration[7100-7241]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> transactionRegisteredListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> transactionRegisteredListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[7245-7388]:FieldDeclaration[7245-7388]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> transactionCompletedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> transactionCompletedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[7392-7534]:FieldDeclaration[7392-7534]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> dataRehashedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> dataRehashedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[7538-7672]:FieldDeclaration[7538-7672]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> topologyChangedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> topologyChangedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[7676-7813]:FieldDeclaration[7676-7813]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> partitionChangedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> partitionChangedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[7817-7955]:FieldDeclaration[7817-7955]"
    }, {
      "left" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryEvictedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "right" : "final List<CacheEntryListenerInvocation<K, V>> cacheEntryEvictedListeners = new CopyOnWriteArrayList<CacheEntryListenerInvocation<K, V>>();",
      "info" : "FieldDeclaration[7986-8125]:FieldDeclaration[7986-8125]"
    }, {
      "left" : "private Cache<K, V> cache;",
      "right" : "private Cache<K, V> cache;",
      "info" : "FieldDeclaration[8130-8156]:FieldDeclaration[8130-8156]"
    }, {
      "left" : "private ClusteringDependentLogic clusteringDependentLogic;",
      "right" : "private ClusteringDependentLogic clusteringDependentLogic;",
      "info" : "FieldDeclaration[8160-8218]:FieldDeclaration[8160-8218]"
    }, {
      "left" : "private TransactionManager transactionManager;",
      "right" : "private TransactionManager transactionManager;",
      "info" : "FieldDeclaration[8222-8268]:FieldDeclaration[8222-8268]"
    }, {
      "left" : "private DistributedExecutorService distExecutorService;",
      "right" : "private DistributedExecutorService distExecutorService;",
      "info" : "FieldDeclaration[8272-8327]:FieldDeclaration[8272-8327]"
    }, {
      "left" : "private Configuration config;",
      "right" : "private Configuration config;",
      "info" : "FieldDeclaration[8331-8360]:FieldDeclaration[8331-8360]"
    }, {
      "left" : "private DistributionManager distributionManager;",
      "right" : "private DistributionManager distributionManager;",
      "info" : "FieldDeclaration[8364-8412]:FieldDeclaration[8364-8412]"
    }, {
      "left" : "private EntryRetriever<K, V> entryRetriever;",
      "right" : "private EntryRetriever<K, V> entryRetriever;",
      "info" : "FieldDeclaration[8416-8460]:FieldDeclaration[8416-8460]"
    }, {
      "left" : "private InternalEntryFactory entryFactory;",
      "right" : "private InternalEntryFactory entryFactory;",
      "info" : "FieldDeclaration[8464-8506]:FieldDeclaration[8464-8506]"
    }, {
      "left" : "private ClusterEventManager<K, V> eventManager;",
      "right" : "private ClusterEventManager<K, V> eventManager;",
      "info" : "FieldDeclaration[8510-8557]:FieldDeclaration[8510-8557]"
    }, {
      "left" : "private ComponentRegistry componentRegistry;",
      "right" : "private ComponentRegistry componentRegistry;",
      "info" : "FieldDeclaration[8561-8605]:FieldDeclaration[8561-8605]"
    }, {
      "left" : "private final Map<Object, UUID> clusterListenerIDs = new ConcurrentHashMap<Object, UUID>();",
      "right" : "private final Map<Object, UUID> clusterListenerIDs = new ConcurrentHashMap<Object, UUID>();",
      "info" : "FieldDeclaration[8610-8701]:FieldDeclaration[8610-8701]"
    }, {
      "left" : "private Set<FilterIndexingServiceProvider> filterIndexingServiceProviders;",
      "right" : "private Set<FilterIndexingServiceProvider> filterIndexingServiceProviders;",
      "info" : "FieldDeclaration[8706-8780]:FieldDeclaration[8706-8780]"
    }, {
      "left" : "private final ConcurrentMap<UUID, QueueingSegmentListener<K, V, ? extends Event<K, V>>> segmentHandler;",
      "right" : "private final ConcurrentMap<UUID, QueueingSegmentListener<K, V, ? extends Event<K, V>>> segmentHandler;",
      "info" : "FieldDeclaration[8785-9086]:FieldDeclaration[8785-9086]"
    }, {
      "left" : "private TypeConverter typeConverter;",
      "right" : "private TypeConverter typeConverter;",
      "info" : "FieldDeclaration[9091-9249]:FieldDeclaration[9091-9249]"
    }, {
      "left" : "public CacheNotifierImpl()",
      "right" : "public CacheNotifierImpl()",
      "info" : "MethodDeclaration[9254-9384]:MethodDeclaration[9254-9384]"
    }, {
      "left" : "CacheNotifierImpl(ConcurrentMap<UUID, QueueingSegmentListener<K, V, ? extends Event<K, V>>> handler)",
      "right" : "CacheNotifierImpl(ConcurrentMap<UUID, QueueingSegmentListener<K, V, ? extends Event<K, V>>> handler)",
      "info" : "MethodDeclaration[9389-10740]:MethodDeclaration[9389-10740]"
    }, {
      "left" : "void injectDependencies(Cache<K, V> cache, ClusteringDependentLogic clusteringDependentLogic,\n                           TransactionManager transactionManager, Configuration config,\n                           DistributionManager distributionManager, EntryRetriever<K ,V> entryRetriever,\n                           InternalEntryFactory entryFactory, ClusterEventManager<K, V> eventManager)",
      "right" : "void injectDependencies(Cache<K, V> cache, ClusteringDependentLogic clusteringDependentLogic,\n                           TransactionManager transactionManager, Configuration config,\n                           DistributionManager distributionManager, EntryRetriever<K ,V> entryRetriever,\n                           InternalEntryFactory entryFactory, ClusterEventManager<K, V> eventManager)",
      "info" : "MethodDeclaration[10745-11499]:MethodDeclaration[10745-11499]"
    }, {
      "left" : "public void start()",
      "right" : "public void start()",
      "info" : "MethodDeclaration[11504-12214]:MethodDeclaration[11504-12214]"
    }, {
      "left" : "public void stop()",
      "right" : "public void stop()",
      "info" : "MethodDeclaration[12219-12659]:MethodDeclaration[12219-12659]"
    }, {
      "left" : "protected Log getLog()",
      "right" : "protected Log getLog()",
      "info" : "MethodDeclaration[12664-12724]:MethodDeclaration[12664-12724]"
    }, {
      "left" : "public void setTypeConverter(TypeConverter typeConverter)",
      "right" : "public void setTypeConverter(TypeConverter typeConverter)",
      "info" : "MethodDeclaration[12729-12981]:MethodDeclaration[12729-12981]"
    }, {
      "left" : "protected Map<Class<? extends Annotation>, Class<?>> getAllowedMethodAnnotations(Listener l)",
      "right" : "protected Map<Class<? extends Annotation>, Class<?>> getAllowedMethodAnnotations(Listener l)",
      "info" : "MethodDeclaration[12986-13264]:MethodDeclaration[12986-13264]"
    }, {
      "left" : "protected final Transaction suspendIfNeeded()",
      "right" : "protected final Transaction suspendIfNeeded()",
      "info" : "MethodDeclaration[13269-14274]:MethodDeclaration[13269-14274]"
    }, {
      "left" : "protected final void resumeIfNeeded(Transaction transaction)",
      "right" : "protected final void resumeIfNeeded(Transaction transaction)",
      "info" : "MethodDeclaration[14279-14709]:MethodDeclaration[14279-14709]"
    }, {
      "left" : "public void notifyCacheEntryCreated(K key, V value, boolean pre,\n         InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryCreated(K key, V value, boolean pre,\n         InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[14714-15638]:MethodDeclaration[14714-15638]"
    }, {
      "left" : "public void notifyCacheEntryModified(K key, V value, V previousValue, Metadata previousMetadata, boolean pre, InvocationContext ctx,\n         FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryModified(K key, V value, V previousValue, Metadata previousMetadata, boolean pre, InvocationContext ctx,\n         FlagAffectedCommand command)",
      "info" : "MethodDeclaration[15643-16636]:MethodDeclaration[15643-16636]"
    }, {
      "left" : "public void notifyCacheEntryRemoved(K key, V previousValue, Metadata previousMetadata, boolean pre,\n                                       InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryRemoved(K key, V previousValue, Metadata previousMetadata, boolean pre,\n                                       InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[16641-17695]:MethodDeclaration[16641-17695]"
    }, {
      "left" : "private void configureEvent(EventImpl<K, V> e, K key, V value, boolean pre, InvocationContext ctx,\n                               FlagAffectedCommand command, V previousValue, Metadata previousMetadata)",
      "right" : "private void configureEvent(EventImpl<K, V> e, K key, V value, boolean pre, InvocationContext ctx,\n                               FlagAffectedCommand command, V previousValue, Metadata previousMetadata)",
      "info" : "MethodDeclaration[17700-18753]:MethodDeclaration[17700-18753]"
    }, {
      "left" : "public void notifyCacheEntryVisited(K key, V value, boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryVisited(K key, V value, boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[18758-19385]:MethodDeclaration[18758-19385]"
    }, {
      "left" : "public void notifyCacheEntriesEvicted(Collection<InternalCacheEntry<? extends K, ? extends V>> entries, InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntriesEvicted(Collection<InternalCacheEntry<? extends K, ? extends V>> entries, InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[19390-21524]:MethodDeclaration[19390-21524]"
    }, {
      "left" : "public Map.Entry<K, V> transform(final InternalCacheEntry<? extends K, ? extends V> input)",
      "right" : "public Map.Entry<K, V> transform(final InternalCacheEntry<? extends K, ? extends V> input)",
      "info" : "MethodDeclaration[19964-20674]:MethodDeclaration[19964-20674]"
    }, {
      "left" : "public K getKey()",
      "right" : "public K getKey()",
      "info" : "MethodDeclaration[20161-20289]:MethodDeclaration[20161-20289]"
    }, {
      "left" : "public V getValue()",
      "right" : "public V getValue()",
      "info" : "MethodDeclaration[20315-20447]:MethodDeclaration[20315-20447]"
    }, {
      "left" : "public V setValue(V value)",
      "right" : "public V setValue(V value)",
      "info" : "MethodDeclaration[20473-20630]:MethodDeclaration[20473-20630]"
    }, {
      "left" : "public void notifyCacheEntryEvicted(K key, V value,\n         InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryEvicted(K key, V value,\n         InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[21529-22519]:MethodDeclaration[21529-22519]"
    }, {
      "left" : "public void notifyCacheEntryInvalidated(final K key, V value,\n         final boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryInvalidated(final K key, V value,\n         final boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[22524-23184]:MethodDeclaration[22524-23184]"
    }, {
      "left" : "public void notifyCacheEntryLoaded(K key, V value, boolean pre,\n         InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryLoaded(K key, V value, boolean pre,\n         InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[23189-23913]:MethodDeclaration[23189-23913]"
    }, {
      "left" : "public void notifyCacheEntryActivated(K key, V value, boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryActivated(K key, V value, boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[23918-24645]:MethodDeclaration[23918-24645]"
    }, {
      "left" : "private void setTx(InvocationContext ctx, EventImpl<K, V> e)",
      "right" : "private void setTx(InvocationContext ctx, EventImpl<K, V> e)",
      "info" : "MethodDeclaration[24650-24888]:MethodDeclaration[24650-24888]"
    }, {
      "left" : "public void notifyCacheEntryPassivated(K key, V value, boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "right" : "public void notifyCacheEntryPassivated(K key, V value, boolean pre, InvocationContext ctx, FlagAffectedCommand command)",
      "info" : "MethodDeclaration[24893-25508]:MethodDeclaration[24893-25508]"
    }, {
      "left" : "public void notifyTransactionCompleted(GlobalTransaction transaction, boolean successful, InvocationContext ctx)",
      "right" : "public void notifyTransactionCompleted(GlobalTransaction transaction, boolean successful, InvocationContext ctx)",
      "info" : "MethodDeclaration[25513-26281]:MethodDeclaration[25513-26281]"
    }, {
      "left" : "public void notifyTransactionRegistered(GlobalTransaction globalTransaction, boolean isOriginLocal)",
      "right" : "public void notifyTransactionRegistered(GlobalTransaction globalTransaction, boolean isOriginLocal)",
      "info" : "MethodDeclaration[26286-26753]:MethodDeclaration[26286-26753]"
    }, {
      "left" : "public void notifyDataRehashed(ConsistentHash readCH, ConsistentHash writeCH, ConsistentHash unionCH, int newTopologyId, boolean pre)",
      "right" : "public void notifyDataRehashed(ConsistentHash readCH, ConsistentHash writeCH, ConsistentHash unionCH, int newTopologyId, boolean pre)",
      "info" : "MethodDeclaration[26758-27343]:MethodDeclaration[26758-27343]"
    }, {
      "left" : "public void notifyTopologyChanged(CacheTopology oldTopology, CacheTopology newTopology, int newTopologyId, boolean pre)",
      "right" : "public void notifyTopologyChanged(CacheTopology oldTopology, CacheTopology newTopology, int newTopologyId, boolean pre)",
      "info" : "MethodDeclaration[27348-27992]:MethodDeclaration[27348-27992]"
    }, {
      "left" : "public void notifyPartitionStatusChanged(AvailabilityMode mode, boolean pre)",
      "right" : "public void notifyPartitionStatusChanged(AvailabilityMode mode, boolean pre)",
      "info" : "MethodDeclaration[27997-28405]:MethodDeclaration[27997-28405]"
    }, {
      "left" : "public void notifyClusterListeners(Collection<? extends CacheEntryEvent<K, V>> events, UUID uuid)",
      "right" : "public void notifyClusterListeners(Collection<? extends CacheEntryEvent<K, V>> events, UUID uuid)",
      "info" : "MethodDeclaration[28410-30476]:MethodDeclaration[28410-30476]"
    }, {
      "left" : "public Collection<DistributedCallable> retrieveClusterListenerCallablesToInstall()",
      "right" : "public Collection<DistributedCallable> retrieveClusterListenerCallablesToInstall()",
      "info" : "MethodDeclaration[30481-31273]:MethodDeclaration[30481-31273]"
    }, {
      "left" : "private void registerClusterListenerCallablesToInstall(Set<Object> enlistedAlready,\n                                                          Set<DistributedCallable> callables,\n                                                          List<CacheEntryListenerInvocation<K, V>> listenerInvocations)",
      "right" : "private void registerClusterListenerCallablesToInstall(Set<Object> enlistedAlready,\n                                                          Set<DistributedCallable> callables,\n                                                          List<CacheEntryListenerInvocation<K, V>> listenerInvocations)",
      "info" : "MethodDeclaration[31278-32730]:MethodDeclaration[31278-32730]"
    }, {
      "left" : "public boolean isNotificationAllowed(FlagAffectedCommand cmd, List<CacheEntryListenerInvocation<K, V>> listeners)",
      "right" : "public boolean isNotificationAllowed(FlagAffectedCommand cmd, List<CacheEntryListenerInvocation<K, V>> listeners)",
      "info" : "MethodDeclaration[32735-32956]:MethodDeclaration[32735-32956]"
    }, {
      "left" : "public void addListener(Object listener)",
      "right" : "public void addListener(Object listener)",
      "info" : "MethodDeclaration[32961-33068]:MethodDeclaration[32961-33068]"
    }, {
      "left" : "public void addListener(Object listener, ClassLoader classLoader)",
      "right" : "public void addListener(Object listener, ClassLoader classLoader)",
      "info" : "MethodDeclaration[33073-33212]:MethodDeclaration[33073-33212]"
    }, {
      "left" : "public void addListener(Object listener, KeyFilter<? super K> filter, ClassLoader classLoader)",
      "right" : "public void addListener(Object listener, KeyFilter<? super K> filter, ClassLoader classLoader)",
      "info" : "MethodDeclaration[33217-33423]:MethodDeclaration[33217-33423]"
    }, {
      "left" : "public <C> void addListener(Object listener, CacheEventFilter<? super K, ? super V> filter,\n                                           CacheEventConverter<? super K, ? super V, C> converter, ClassLoader classLoader)",
      "right" : "public <C> void addListener(Object listener, CacheEventFilter<? super K, ? super V> filter,\n                                           CacheEventConverter<? super K, ? super V, C> converter, ClassLoader classLoader)",
      "info" : "MethodDeclaration[33428-41082]:MethodDeclaration[33428-41082]"
    }, {
      "left" : "private FilterIndexingServiceProvider findIndexingServiceProvider(IndexedFilter indexedFilter)",
      "right" : "private FilterIndexingServiceProvider findIndexingServiceProvider(IndexedFilter indexedFilter)",
      "info" : "MethodDeclaration[41087-41480]:MethodDeclaration[41087-41480]"
    }, {
      "left" : "public List<CacheEntryListenerInvocation<K, V>> getListenerCollectionForAnnotation(Class<? extends Annotation> annotation)",
      "right" : "public List<CacheEntryListenerInvocation<K, V>> getListenerCollectionForAnnotation(Class<? extends Annotation> annotation)",
      "info" : "MethodDeclaration[41485-41694]:MethodDeclaration[41485-41694]"
    }, {
      "left" : "private void raiseEventForInitialTransfer(UUID identifier, CacheEntry entry, boolean clustered)",
      "right" : "private void raiseEventForInitialTransfer(UUID identifier, CacheEntry entry, boolean clustered)",
      "info" : "MethodDeclaration[41699-42800]:MethodDeclaration[41699-42800]"
    }, {
      "left" : "public void addListener(Object listener, KeyFilter<? super K> filter)",
      "right" : "public void addListener(Object listener, KeyFilter<? super K> filter)",
      "info" : "MethodDeclaration[42805-42937]:MethodDeclaration[42805-42937]"
    }, {
      "left" : "public <C> void addListener(Object listener, CacheEventFilter<? super K, ? super V> filter, CacheEventConverter<? super K, ? super V, C> converter)",
      "right" : "public <C> void addListener(Object listener, CacheEventFilter<? super K, ? super V> filter, CacheEventConverter<? super K, ? super V, C> converter)",
      "info" : "MethodDeclaration[42942-43163]:MethodDeclaration[42942-43163]"
    }, {
      "left" : "CacheInvocationBuilder",
      "right" : "CacheInvocationBuilder",
      "info" : "TypeDeclaration[43168-48662]:TypeDeclaration[43168-48662]"
    }, {
      "left" : "CacheEventFilter<? super K, ? super V> filter;",
      "right" : "CacheEventFilter<? super K, ? super V> filter;",
      "info" : "FieldDeclaration[43249-43295]:FieldDeclaration[43249-43295]"
    }, {
      "left" : "CacheEventConverter<? super K, ? super V, ?> converter;",
      "right" : "CacheEventConverter<? super K, ? super V, ?> converter;",
      "info" : "FieldDeclaration[43302-43357]:FieldDeclaration[43302-43357]"
    }, {
      "left" : "boolean onlyPrimary;",
      "right" : "boolean onlyPrimary;",
      "info" : "FieldDeclaration[43364-43384]:FieldDeclaration[43364-43384]"
    }, {
      "left" : "boolean clustered;",
      "right" : "boolean clustered;",
      "info" : "FieldDeclaration[43391-43409]:FieldDeclaration[43391-43409]"
    }, {
      "left" : "boolean includeCurrentState;",
      "right" : "boolean includeCurrentState;",
      "info" : "FieldDeclaration[43416-43444]:FieldDeclaration[43416-43444]"
    }, {
      "left" : "UUID identifier;",
      "right" : "UUID identifier;",
      "info" : "FieldDeclaration[43451-43467]:FieldDeclaration[43451-43467]"
    }, {
      "left" : "Listener.Observation observation;",
      "right" : "Listener.Observation observation;",
      "info" : "FieldDeclaration[43474-43507]:FieldDeclaration[43474-43507]"
    }, {
      "left" : "public CacheEventFilter<? super K, ? super V> getFilter()",
      "right" : "public CacheEventFilter<? super K, ? super V> getFilter()",
      "info" : "MethodDeclaration[43515-43606]:MethodDeclaration[43515-43606]"
    }, {
      "left" : "public CacheInvocationBuilder setFilter(CacheEventFilter<? super K, ? super V> filter)",
      "right" : "public CacheInvocationBuilder setFilter(CacheEventFilter<? super K, ? super V> filter)",
      "info" : "MethodDeclaration[43614-43763]:MethodDeclaration[43614-43763]"
    }, {
      "left" : "public CacheEventConverter<? super K, ? super V, ?> getConverter()",
      "right" : "public CacheEventConverter<? super K, ? super V, ?> getConverter()",
      "info" : "MethodDeclaration[43771-43874]:MethodDeclaration[43771-43874]"
    }, {
      "left" : "public CacheInvocationBuilder setConverter(CacheEventConverter<? super K, ? super V, ?> converter)",
      "right" : "public CacheInvocationBuilder setConverter(CacheEventConverter<? super K, ? super V, ?> converter)",
      "info" : "MethodDeclaration[43882-44049]:MethodDeclaration[43882-44049]"
    }, {
      "left" : "public boolean isOnlyPrimary()",
      "right" : "public boolean isOnlyPrimary()",
      "info" : "MethodDeclaration[44057-44126]:MethodDeclaration[44057-44126]"
    }, {
      "left" : "public CacheInvocationBuilder setOnlyPrimary(boolean onlyPrimary)",
      "right" : "public CacheInvocationBuilder setOnlyPrimary(boolean onlyPrimary)",
      "info" : "MethodDeclaration[44134-44272]:MethodDeclaration[44134-44272]"
    }, {
      "left" : "public boolean isClustered()",
      "right" : "public boolean isClustered()",
      "info" : "MethodDeclaration[44280-44345]:MethodDeclaration[44280-44345]"
    }, {
      "left" : "public CacheInvocationBuilder setClustered(boolean clustered)",
      "right" : "public CacheInvocationBuilder setClustered(boolean clustered)",
      "info" : "MethodDeclaration[44353-44483]:MethodDeclaration[44353-44483]"
    }, {
      "left" : "public UUID getIdentifier()",
      "right" : "public UUID getIdentifier()",
      "info" : "MethodDeclaration[44491-44556]:MethodDeclaration[44491-44556]"
    }, {
      "left" : "public CacheInvocationBuilder setIdentifier(UUID identifier)",
      "right" : "public CacheInvocationBuilder setIdentifier(UUID identifier)",
      "info" : "MethodDeclaration[44564-44695]:MethodDeclaration[44564-44695]"
    }, {
      "left" : "public boolean isIncludeCurrentState()",
      "right" : "public boolean isIncludeCurrentState()",
      "info" : "MethodDeclaration[44703-44788]:MethodDeclaration[44703-44788]"
    }, {
      "left" : "public CacheInvocationBuilder setIncludeCurrentState(boolean includeCurrentState)",
      "right" : "public CacheInvocationBuilder setIncludeCurrentState(boolean includeCurrentState)",
      "info" : "MethodDeclaration[44796-44966]:MethodDeclaration[44796-44966]"
    }, {
      "left" : "public Listener.Observation getObservation()",
      "right" : "public Listener.Observation getObservation()",
      "info" : "MethodDeclaration[44974-45057]:MethodDeclaration[44974-45057]"
    }, {
      "left" : "public CacheInvocationBuilder setObservation(Listener.Observation observation)",
      "right" : "public CacheInvocationBuilder setObservation(Listener.Observation observation)",
      "info" : "MethodDeclaration[45065-45216]:MethodDeclaration[45065-45216]"
    }, {
      "left" : "public CacheEntryListenerInvocation<K, V> build()",
      "right" : "public CacheEntryListenerInvocation<K, V> build()",
      "info" : "MethodDeclaration[45224-48260]:MethodDeclaration[45224-48260]"
    }, {
      "left" : "private <C> void wireFilterAndConverterDependencies(CacheEventFilter<? super K, ? super V> filter, CacheEventConverter<? super K, ? super V, C> converter)",
      "right" : "private <C> void wireFilterAndConverterDependencies(CacheEventFilter<? super K, ? super V> filter, CacheEventConverter<? super K, ? super V, C> converter)",
      "info" : "MethodDeclaration[48268-48657]:MethodDeclaration[48268-48657]"
    }, {
      "left" : "DelegatingCacheInvocationBuilder",
      "right" : "DelegatingCacheInvocationBuilder",
      "info" : "TypeDeclaration[48667-49993]:TypeDeclaration[48667-49993]"
    }, {
      "left" : "private final FilterIndexingServiceProvider provider;",
      "right" : "private final FilterIndexingServiceProvider provider;",
      "info" : "FieldDeclaration[48756-48809]:FieldDeclaration[48756-48809]"
    }, {
      "left" : "private final Map<Class<? extends Annotation>, List<DelegatingCacheEntryListenerInvocation<K, V>>> listeners = new HashMap<>(3);",
      "right" : "private final Map<Class<? extends Annotation>, List<DelegatingCacheEntryListenerInvocation<K, V>>> listeners = new HashMap<>(3);",
      "info" : "FieldDeclaration[48817-48945]:FieldDeclaration[48817-48945]"
    }, {
      "left" : "DelegatingCacheInvocationBuilder(FilterIndexingServiceProvider provider)",
      "right" : "DelegatingCacheInvocationBuilder(FilterIndexingServiceProvider provider)",
      "info" : "MethodDeclaration[48953-49070]:MethodDeclaration[48953-49070]"
    }, {
      "left" : "public DelegatingCacheEntryListenerInvocation<K, V> build()",
      "right" : "public DelegatingCacheEntryListenerInvocation<K, V> build()",
      "info" : "MethodDeclaration[49078-49671]:MethodDeclaration[49078-49671]"
    }, {
      "left" : "void registerListenerInvocations()",
      "right" : "void registerListenerInvocations()",
      "info" : "MethodDeclaration[49679-49988]:MethodDeclaration[49679-49988]"
    }, {
      "left" : "NonClusteredListenerInvocation",
      "right" : "NonClusteredListenerInvocation",
      "info" : "TypeDeclaration[49998-51126]:TypeDeclaration[49998-51126]"
    }, {
      "left" : "private final QueueingSegmentListener<K, V, Event<K, V>> handler;",
      "right" : "private final QueueingSegmentListener<K, V, Event<K, V>> handler;",
      "info" : "FieldDeclaration[50101-50166]:FieldDeclaration[50101-50166]"
    }, {
      "left" : "protected NonClusteredListenerInvocation(ListenerInvocation<Event<K, V>> invocation,\n                                               QueueingSegmentListener<K, V, Event<K, V>> handler,\n                                               CacheEventFilter<? super K, ? super V> filter,\n                                               CacheEventConverter<? super K, ? super V, ?> converter,\n                                               Class<? extends Annotation> annotation, boolean onlyPrimary,\n                                               UUID identifier, boolean sync, Listener.Observation observation)",
      "right" : "protected NonClusteredListenerInvocation(ListenerInvocation<Event<K, V>> invocation,\n                                               QueueingSegmentListener<K, V, Event<K, V>> handler,\n                                               CacheEventFilter<? super K, ? super V> filter,\n                                               CacheEventConverter<? super K, ? super V, ?> converter,\n                                               Class<? extends Annotation> annotation, boolean onlyPrimary,\n                                               UUID identifier, boolean sync, Listener.Observation observation)",
      "info" : "MethodDeclaration[50174-50927]:MethodDeclaration[50174-50927]"
    }, {
      "left" : "protected void doRealInvocation(Event<K, V> event)",
      "right" : "protected void doRealInvocation(Event<K, V> event)",
      "info" : "MethodDeclaration[50935-51121]:MethodDeclaration[50935-51121]"
    }, {
      "left" : "ClusteredListenerInvocation",
      "right" : "ClusteredListenerInvocation",
      "info" : "TypeDeclaration[51131-52712]:TypeDeclaration[51131-52712]"
    }, {
      "left" : "private final QueueingSegmentListener<K, V, CacheEntryEvent<K, V>> handler;",
      "right" : "private final QueueingSegmentListener<K, V, CacheEntryEvent<K, V>> handler;",
      "info" : "FieldDeclaration[51460-51535]:FieldDeclaration[51460-51535]"
    }, {
      "left" : "public ClusteredListenerInvocation(ListenerInvocation<Event<K, V>> invocation, QueueingSegmentListener<K, V, CacheEntryEvent<K, V>> handler,\n                                         CacheEventFilter<? super K, ? super V> filter,\n                                         CacheEventConverter<? super K, ? super V, ?> converter,\n                                         Class<? extends Annotation> annotation, boolean onlyPrimary,\n                                         UUID identifier, boolean sync, Listener.Observation observation)",
      "right" : "public ClusteredListenerInvocation(ListenerInvocation<Event<K, V>> invocation, QueueingSegmentListener<K, V, CacheEntryEvent<K, V>> handler,\n                                         CacheEventFilter<? super K, ? super V> filter,\n                                         CacheEventConverter<? super K, ? super V, ?> converter,\n                                         Class<? extends Annotation> annotation, boolean onlyPrimary,\n                                         UUID identifier, boolean sync, Listener.Observation observation)",
      "info" : "MethodDeclaration[51543-52228]:MethodDeclaration[51543-52228]"
    }, {
      "left" : "public void invoke(Event<K, V> event)",
      "right" : "public void invoke(Event<K, V> event)",
      "info" : "MethodDeclaration[52236-52409]:MethodDeclaration[52236-52409]"
    }, {
      "left" : "protected void doRealInvocation(Event<K, V> event)",
      "right" : "protected void doRealInvocation(Event<K, V> event)",
      "info" : "MethodDeclaration[52417-52707]:MethodDeclaration[52417-52707]"
    }, {
      "left" : "protected final ListenerInvocation<Event<K, V>> invocation;",
      "right" : "protected final ListenerInvocation<Event<K, V>> invocation;",
      "info" : "FieldDeclaration[52834-52893]:FieldDeclaration[52834-52893]"
    }, {
      "left" : "protected final CacheEventFilter<? super K, ? super V> filter;",
      "right" : "protected final CacheEventFilter<? super K, ? super V> filter;",
      "info" : "FieldDeclaration[52900-52962]:FieldDeclaration[52900-52962]"
    }, {
      "left" : "protected final CacheEventConverter<? super K, ? super V, ?> converter;",
      "right" : "protected final CacheEventConverter<? super K, ? super V, ?> converter;",
      "info" : "FieldDeclaration[52969-53040]:FieldDeclaration[52969-53040]"
    }, {
      "left" : "protected final boolean onlyPrimary;",
      "right" : "protected final boolean onlyPrimary;",
      "info" : "FieldDeclaration[53047-53083]:FieldDeclaration[53047-53083]"
    }, {
      "left" : "protected final boolean clustered;",
      "right" : "protected final boolean clustered;",
      "info" : "FieldDeclaration[53090-53124]:FieldDeclaration[53090-53124]"
    }, {
      "left" : "protected final UUID identifier;",
      "right" : "protected final UUID identifier;",
      "info" : "FieldDeclaration[53131-53163]:FieldDeclaration[53131-53163]"
    }, {
      "left" : "protected final Class<? extends Annotation> annotation;",
      "right" : "protected final Class<? extends Annotation> annotation;",
      "info" : "FieldDeclaration[53170-53225]:FieldDeclaration[53170-53225]"
    }, {
      "left" : "protected final boolean sync;",
      "right" : "protected final boolean sync;",
      "info" : "FieldDeclaration[53232-53261]:FieldDeclaration[53232-53261]"
    }, {
      "left" : "protected final boolean filterAndConvert;",
      "right" : "protected final boolean filterAndConvert;",
      "info" : "FieldDeclaration[53268-53309]:FieldDeclaration[53268-53309]"
    }, {
      "left" : "protected final Listener.Observation observation;",
      "right" : "protected final Listener.Observation observation;",
      "info" : "FieldDeclaration[53316-53365]:FieldDeclaration[53316-53365]"
    }, {
      "left" : "protected BaseCacheEntryListenerInvocation(ListenerInvocation<Event<K, V>> invocation,\n                                                 CacheEventFilter<? super K, ? super V> filter,\n                                                 CacheEventConverter<? super K, ? super V, ?> converter,\n                                                 Class<? extends Annotation> annotation, boolean onlyPrimary,\n                                                 boolean clustered, UUID identifier, boolean sync,\n                                                 Listener.Observation observation)",
      "right" : "protected BaseCacheEntryListenerInvocation(ListenerInvocation<Event<K, V>> invocation,\n                                                 CacheEventFilter<? super K, ? super V> filter,\n                                                 CacheEventConverter<? super K, ? super V, ?> converter,\n                                                 Class<? extends Annotation> annotation, boolean onlyPrimary,\n                                                 boolean clustered, UUID identifier, boolean sync,\n                                                 Listener.Observation observation)",
      "info" : "MethodDeclaration[53374-54419]:MethodDeclaration[53374-54419]"
    }, {
      "left" : "public void invoke(CacheEntryEvent<K, V> event, boolean isLocalNodePrimaryOwner)",
      "right" : "public void invoke(CacheEntryEvent<K, V> event, boolean isLocalNodePrimaryOwner)",
      "info" : "MethodDeclaration[54532-55067]:MethodDeclaration[54582-55117]"
    }, {
      "left" : "public void invokeNoChecks(CacheEntryEvent<K, V> event, boolean skipQueue, boolean skipConverter)",
      "right" : "public void invokeNoChecks(CacheEntryEvent<K, V> event, boolean skipQueue, boolean skipConverter)",
      "info" : "MethodDeclaration[55075-55843]:MethodDeclaration[55125-55893]"
    }, {
      "left" : "protected void doRealInvocation(Event<K, V> event)",
      "right" : "protected void doRealInvocation(Event<K, V> event)",
      "info" : "MethodDeclaration[55851-55946]:MethodDeclaration[55901-55996]"
    }, {
      "left" : "private EventType getEvent(EventImpl<K, V> event)",
      "right" : "private EventType getEvent(EventImpl<K, V> event)",
      "info" : "MethodDeclaration[57638-58201]:MethodDeclaration[57753-58316]"
    }, {
      "left" : "public Object getTarget()",
      "right" : "public Object getTarget()",
      "info" : "MethodDeclaration[58209-58300]:MethodDeclaration[58324-58415]"
    }, {
      "left" : "public CacheEventFilter<? super K, ? super V> getFilter()",
      "right" : "public CacheEventFilter<? super K, ? super V> getFilter()",
      "info" : "MethodDeclaration[58308-58415]:MethodDeclaration[58423-58530]"
    }, {
      "left" : "public CacheEventConverter<? super K, ? super V, ?> getConverter()",
      "right" : "public CacheEventConverter<? super K, ? super V, ?> getConverter()",
      "info" : "MethodDeclaration[58423-58542]:MethodDeclaration[58538-58657]"
    }, {
      "left" : "public boolean isClustered()",
      "right" : "public boolean isClustered()",
      "info" : "MethodDeclaration[58550-58631]:MethodDeclaration[58665-58746]"
    }, {
      "left" : "public UUID getIdentifier()",
      "right" : "public UUID getIdentifier()",
      "info" : "MethodDeclaration[58639-58720]:MethodDeclaration[58754-58835]"
    }, {
      "left" : "public Class<? extends Annotation> getAnnotation()",
      "right" : "public Class<? extends Annotation> getAnnotation()",
      "info" : "MethodDeclaration[58728-58832]:MethodDeclaration[58843-58947]"
    }, {
      "left" : "protected CacheEntryEvent<K, V> convertValue(CacheEventConverter<? super K, ? super V, ?> converter, CacheEntryEvent<K, V> event)",
      "right" : "protected CacheEntryEvent<K, V> convertValue(CacheEventConverter<? super K, ? super V, ?> converter, CacheEntryEvent<K, V> event)",
      "info" : "MethodDeclaration[58840-60165]:MethodDeclaration[58955-60280]"
    }, {
      "left" : "public boolean isSync()",
      "right" : "public boolean isSync()",
      "info" : "MethodDeclaration[60173-60244]:MethodDeclaration[60288-60359]"
    }, {
      "left" : "public void removeListener(Object listener)",
      "right" : "public void removeListener(Object listener)",
      "info" : "MethodDeclaration[60254-60864]:MethodDeclaration[60369-60979]"
    }, {
      "left" : "protected Set<CacheEntryListenerInvocation<K, V>> removeListenerInvocation(Class<? extends Annotation> annotation, Object listener)",
      "right" : "protected Set<CacheEntryListenerInvocation<K, V>> removeListenerInvocation(Class<? extends Annotation> annotation, Object listener)",
      "info" : "MethodDeclaration[60869-61407]:MethodDeclaration[60984-61522]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9281-9384]:Block[9281-9384]"
    }, {
      "left" : "this(new ConcurrentHashMap<UUID, QueueingSegmentListener<K, V, ? extends Event<K, V>>>());",
      "right" : "this(new ConcurrentHashMap<UUID, QueueingSegmentListener<K, V, ? extends Event<K, V>>>());",
      "info" : "ConstructorInvocation[9289-9379]:ConstructorInvocation[9289-9379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9490-10740]:Block[9490-10740]"
    }, {
      "left" : "segmentHandler = handler;",
      "right" : "segmentHandler = handler;",
      "info" : "ExpressionStatement[9498-9523]:ExpressionStatement[9498-9523]"
    }, {
      "left" : "listenersMap.put(CacheEntryCreated.class, cacheEntryCreatedListeners);",
      "right" : "listenersMap.put(CacheEntryCreated.class, cacheEntryCreatedListeners);",
      "info" : "ExpressionStatement[9531-9601]:ExpressionStatement[9531-9601]"
    }, {
      "left" : "listenersMap.put(CacheEntryRemoved.class, cacheEntryRemovedListeners);",
      "right" : "listenersMap.put(CacheEntryRemoved.class, cacheEntryRemovedListeners);",
      "info" : "ExpressionStatement[9608-9678]:ExpressionStatement[9608-9678]"
    }, {
      "left" : "listenersMap.put(CacheEntryVisited.class, cacheEntryVisitedListeners);",
      "right" : "listenersMap.put(CacheEntryVisited.class, cacheEntryVisitedListeners);",
      "info" : "ExpressionStatement[9685-9755]:ExpressionStatement[9685-9755]"
    }, {
      "left" : "listenersMap.put(CacheEntryModified.class, cacheEntryModifiedListeners);",
      "right" : "listenersMap.put(CacheEntryModified.class, cacheEntryModifiedListeners);",
      "info" : "ExpressionStatement[9762-9834]:ExpressionStatement[9762-9834]"
    }, {
      "left" : "listenersMap.put(CacheEntryActivated.class, cacheEntryActivatedListeners);",
      "right" : "listenersMap.put(CacheEntryActivated.class, cacheEntryActivatedListeners);",
      "info" : "ExpressionStatement[9841-9915]:ExpressionStatement[9841-9915]"
    }, {
      "left" : "listenersMap.put(CacheEntryPassivated.class, cacheEntryPassivatedListeners);",
      "right" : "listenersMap.put(CacheEntryPassivated.class, cacheEntryPassivatedListeners);",
      "info" : "ExpressionStatement[9922-9998]:ExpressionStatement[9922-9998]"
    }, {
      "left" : "listenersMap.put(CacheEntryLoaded.class, cacheEntryLoadedListeners);",
      "right" : "listenersMap.put(CacheEntryLoaded.class, cacheEntryLoadedListeners);",
      "info" : "ExpressionStatement[10005-10073]:ExpressionStatement[10005-10073]"
    }, {
      "left" : "listenersMap.put(CacheEntriesEvicted.class, cacheEntriesEvictedListeners);",
      "right" : "listenersMap.put(CacheEntriesEvicted.class, cacheEntriesEvictedListeners);",
      "info" : "ExpressionStatement[10080-10154]:ExpressionStatement[10080-10154]"
    }, {
      "left" : "listenersMap.put(TransactionRegistered.class, transactionRegisteredListeners);",
      "right" : "listenersMap.put(TransactionRegistered.class, transactionRegisteredListeners);",
      "info" : "ExpressionStatement[10161-10239]:ExpressionStatement[10161-10239]"
    }, {
      "left" : "listenersMap.put(TransactionCompleted.class, transactionCompletedListeners);",
      "right" : "listenersMap.put(TransactionCompleted.class, transactionCompletedListeners);",
      "info" : "ExpressionStatement[10246-10322]:ExpressionStatement[10246-10322]"
    }, {
      "left" : "listenersMap.put(CacheEntryInvalidated.class, cacheEntryInvalidatedListeners);",
      "right" : "listenersMap.put(CacheEntryInvalidated.class, cacheEntryInvalidatedListeners);",
      "info" : "ExpressionStatement[10329-10407]:ExpressionStatement[10329-10407]"
    }, {
      "left" : "listenersMap.put(DataRehashed.class, dataRehashedListeners);",
      "right" : "listenersMap.put(DataRehashed.class, dataRehashedListeners);",
      "info" : "ExpressionStatement[10414-10474]:ExpressionStatement[10414-10474]"
    }, {
      "left" : "listenersMap.put(TopologyChanged.class, topologyChangedListeners);",
      "right" : "listenersMap.put(TopologyChanged.class, topologyChangedListeners);",
      "info" : "ExpressionStatement[10481-10547]:ExpressionStatement[10481-10547]"
    }, {
      "left" : "listenersMap.put(PartitionStatusChanged.class, partitionChangedListeners);",
      "right" : "listenersMap.put(PartitionStatusChanged.class, partitionChangedListeners);",
      "info" : "ExpressionStatement[10554-10628]:ExpressionStatement[10554-10628]"
    }, {
      "left" : "listenersMap.put(CacheEntryEvicted.class, cacheEntryEvictedListeners);",
      "right" : "listenersMap.put(CacheEntryEvicted.class, cacheEntryEvictedListeners);",
      "info" : "ExpressionStatement[10665-10735]:ExpressionStatement[10665-10735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11145-11499]:Block[11145-11499]"
    }, {
      "left" : "this.cache = cache;",
      "right" : "this.cache = cache;",
      "info" : "ExpressionStatement[11153-11172]:ExpressionStatement[11153-11172]"
    }, {
      "left" : "this.clusteringDependentLogic = clusteringDependentLogic;",
      "right" : "this.clusteringDependentLogic = clusteringDependentLogic;",
      "info" : "ExpressionStatement[11179-11236]:ExpressionStatement[11179-11236]"
    }, {
      "left" : "this.transactionManager = transactionManager;",
      "right" : "this.transactionManager = transactionManager;",
      "info" : "ExpressionStatement[11243-11288]:ExpressionStatement[11243-11288]"
    }, {
      "left" : "this.config = config;",
      "right" : "this.config = config;",
      "info" : "ExpressionStatement[11295-11316]:ExpressionStatement[11295-11316]"
    }, {
      "left" : "this.distributionManager = distributionManager;",
      "right" : "this.distributionManager = distributionManager;",
      "info" : "ExpressionStatement[11323-11370]:ExpressionStatement[11323-11370]"
    }, {
      "left" : "this.entryRetriever = entryRetriever;",
      "right" : "this.entryRetriever = entryRetriever;",
      "info" : "ExpressionStatement[11377-11414]:ExpressionStatement[11377-11414]"
    }, {
      "left" : "this.entryFactory = entryFactory;",
      "right" : "this.entryFactory = entryFactory;",
      "info" : "ExpressionStatement[11421-11454]:ExpressionStatement[11421-11454]"
    }, {
      "left" : "this.eventManager = eventManager;",
      "right" : "this.eventManager = eventManager;",
      "info" : "ExpressionStatement[11461-11494]:ExpressionStatement[11461-11494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11537-12214]:Block[11537-12214]"
    }, {
      "left" : "super.start();",
      "right" : "super.start();",
      "info" : "ExpressionStatement[11545-11559]:ExpressionStatement[11545-11559]"
    }, {
      "left" : "this.distExecutorService = SecurityActions.getDefaultExecutorService(cache);",
      "right" : "this.distExecutorService = SecurityActions.getDefaultExecutorService(cache);",
      "info" : "ExpressionStatement[11566-11642]:ExpressionStatement[11566-11642]"
    }, {
      "left" : "componentRegistry = cache.getAdvancedCache().getComponentRegistry();",
      "right" : "componentRegistry = cache.getAdvancedCache().getComponentRegistry();",
      "info" : "ExpressionStatement[11649-11717]:ExpressionStatement[11649-11717]"
    }, {
      "left" : "if (filterIndexingServiceProviders == null)",
      "right" : "if (filterIndexingServiceProviders == null)",
      "info" : "IfStatement[11869-12209]:IfStatement[11869-12209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11913-12209]:Block[11913-12209]"
    }, {
      "left" : "filterIndexingServiceProviders = ServiceFinder.load(FilterIndexingServiceProvider.class);",
      "right" : "filterIndexingServiceProviders = ServiceFinder.load(FilterIndexingServiceProvider.class);",
      "info" : "ExpressionStatement[11924-12013]:ExpressionStatement[11924-12013]"
    }, {
      "left" : "for (FilterIndexingServiceProvider provider : filterIndexingServiceProviders)",
      "right" : "for (FilterIndexingServiceProvider provider : filterIndexingServiceProviders)",
      "info" : "EnhancedForStatement[12023-12201]:EnhancedForStatement[12023-12201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12101-12201]:Block[12101-12201]"
    }, {
      "left" : "componentRegistry.wireDependencies(provider);",
      "right" : "componentRegistry.wireDependencies(provider);",
      "info" : "ExpressionStatement[12115-12160]:ExpressionStatement[12115-12160]"
    }, {
      "left" : "provider.start();",
      "right" : "provider.start();",
      "info" : "ExpressionStatement[12173-12190]:ExpressionStatement[12173-12190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12251-12659]:Block[12251-12659]"
    }, {
      "left" : "super.stop();",
      "right" : "super.stop();",
      "info" : "ExpressionStatement[12259-12272]:ExpressionStatement[12259-12272]"
    }, {
      "left" : "if (filterIndexingServiceProviders != null)",
      "right" : "if (filterIndexingServiceProviders != null)",
      "info" : "IfStatement[12424-12654]:IfStatement[12424-12654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12468-12654]:Block[12468-12654]"
    }, {
      "left" : "for (FilterIndexingServiceProvider provider : filterIndexingServiceProviders)",
      "right" : "for (FilterIndexingServiceProvider provider : filterIndexingServiceProviders)",
      "info" : "EnhancedForStatement[12479-12598]:EnhancedForStatement[12479-12598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12557-12598]:Block[12557-12598]"
    }, {
      "left" : "provider.stop();",
      "right" : "provider.stop();",
      "info" : "ExpressionStatement[12571-12587]:ExpressionStatement[12571-12587]"
    }, {
      "left" : "filterIndexingServiceProviders = null;",
      "right" : "filterIndexingServiceProviders = null;",
      "info" : "ExpressionStatement[12608-12646]:ExpressionStatement[12608-12646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12700-12724]:Block[12700-12724]"
    }, {
      "left" : "return log;",
      "right" : "return log;",
      "info" : "ReturnStatement[12708-12719]:ReturnStatement[12708-12719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12800-12981]:Block[12800-12981]"
    }, {
      "left" : "if (this.typeConverter != null)",
      "right" : "if (this.typeConverter != null)",
      "info" : "IfStatement[12808-12934]:IfStatement[12808-12934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12840-12934]:Block[12840-12934]"
    }, {
      "left" : "throw new IllegalStateException(\"The type converter can be set only once\");",
      "right" : "throw new IllegalStateException(\"The type converter can be set only once\");",
      "info" : "ThrowStatement[12851-12926]:ThrowStatement[12851-12926]"
    }, {
      "left" : "this.typeConverter = typeConverter;",
      "right" : "this.typeConverter = typeConverter;",
      "info" : "ExpressionStatement[12941-12976]:ExpressionStatement[12941-12976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13092-13264]:Block[13092-13264]"
    }, {
      "left" : "if (l.clustered())",
      "right" : "if (l.clustered())",
      "info" : "IfStatement[13100-13228]:IfStatement[13100-13228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13119-13228]:Block[13119-13228]"
    }, {
      "left" : "return clusterAllowedListeners;",
      "right" : "return clusterAllowedListeners;",
      "info" : "ReturnStatement[13189-13220]:ReturnStatement[13189-13220]"
    }, {
      "left" : "return allowedListeners;",
      "right" : "return allowedListeners;",
      "info" : "ReturnStatement[13235-13259]:ReturnStatement[13235-13259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13328-14274]:Block[13328-14274]"
    }, {
      "left" : "if (transactionManager == null)",
      "right" : "if (transactionManager == null)",
      "info" : "IfStatement[13336-13399]:IfStatement[13336-13399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13368-13399]:Block[13368-13399]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13379-13391]:ReturnStatement[13379-13391]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13407-14269]:TryStatement[13407-14269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13411-14083]:Block[13411-14083]"
    }, {
      "left" : "switch (transactionManager.getStatus()) {\n            case Status.STATUS_ACTIVE:\n            case Status.STATUS_NO_TRANSACTION:\n               return null;\n            case Status.STATUS_MARKED_ROLLBACK:\n            case Status.STATUS_PREPARED:\n            case Status.STATUS_COMMITTED:\n            case Status.STATUS_ROLLEDBACK:\n            case Status.STATUS_UNKNOWN:\n            case Status.STATUS_PREPARING:\n            case Status.STATUS_COMMITTING:\n            case Status.STATUS_ROLLING_BACK:\n            default:\n               //suspend in default and in unknown status to be safer\n               return transactionManager.suspend();\n         }",
      "right" : "switch (transactionManager.getStatus()) {\n            case Status.STATUS_ACTIVE:\n            case Status.STATUS_NO_TRANSACTION:\n               return null;\n            case Status.STATUS_MARKED_ROLLBACK:\n            case Status.STATUS_PREPARED:\n            case Status.STATUS_COMMITTED:\n            case Status.STATUS_ROLLEDBACK:\n            case Status.STATUS_UNKNOWN:\n            case Status.STATUS_PREPARING:\n            case Status.STATUS_COMMITTING:\n            case Status.STATUS_ROLLING_BACK:\n            default:\n               //suspend in default and in unknown status to be safer\n               return transactionManager.suspend();\n         }",
      "info" : "SwitchStatement[13422-14075]:SwitchStatement[13422-14075]"
    }, {
      "left" : "case Status.STATUS_ACTIVE:",
      "right" : "case Status.STATUS_ACTIVE:",
      "info" : "SwitchCase[13476-13502]:SwitchCase[13476-13502]"
    }, {
      "left" : "case Status.STATUS_NO_TRANSACTION:",
      "right" : "case Status.STATUS_NO_TRANSACTION:",
      "info" : "SwitchCase[13515-13549]:SwitchCase[13515-13549]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13565-13577]:ReturnStatement[13565-13577]"
    }, {
      "left" : "case Status.STATUS_MARKED_ROLLBACK:",
      "right" : "case Status.STATUS_MARKED_ROLLBACK:",
      "info" : "SwitchCase[13590-13625]:SwitchCase[13590-13625]"
    }, {
      "left" : "case Status.STATUS_PREPARED:",
      "right" : "case Status.STATUS_PREPARED:",
      "info" : "SwitchCase[13638-13666]:SwitchCase[13638-13666]"
    }, {
      "left" : "case Status.STATUS_COMMITTED:",
      "right" : "case Status.STATUS_COMMITTED:",
      "info" : "SwitchCase[13679-13708]:SwitchCase[13679-13708]"
    }, {
      "left" : "case Status.STATUS_ROLLEDBACK:",
      "right" : "case Status.STATUS_ROLLEDBACK:",
      "info" : "SwitchCase[13721-13751]:SwitchCase[13721-13751]"
    }, {
      "left" : "case Status.STATUS_UNKNOWN:",
      "right" : "case Status.STATUS_UNKNOWN:",
      "info" : "SwitchCase[13764-13791]:SwitchCase[13764-13791]"
    }, {
      "left" : "case Status.STATUS_PREPARING:",
      "right" : "case Status.STATUS_PREPARING:",
      "info" : "SwitchCase[13804-13833]:SwitchCase[13804-13833]"
    }, {
      "left" : "case Status.STATUS_COMMITTING:",
      "right" : "case Status.STATUS_COMMITTING:",
      "info" : "SwitchCase[13846-13876]:SwitchCase[13846-13876]"
    }, {
      "left" : "case Status.STATUS_ROLLING_BACK:",
      "right" : "case Status.STATUS_ROLLING_BACK:",
      "info" : "SwitchCase[13889-13921]:SwitchCase[13889-13921]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[13934-13942]:SwitchCase[13934-13942]"
    }, {
      "left" : "return transactionManager.suspend();",
      "right" : "return transactionManager.suspend();",
      "info" : "ReturnStatement[14028-14064]:ReturnStatement[14028-14064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14104-14269]:Block[14104-14269]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[14115-14239]:IfStatement[14115-14239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14141-14239]:Block[14141-14239]"
    }, {
      "left" : "log.trace(\"An error occurred while trying to suspend a transaction.\", e);",
      "right" : "log.trace(\"An error occurred while trying to suspend a transaction.\", e);",
      "info" : "ExpressionStatement[14155-14228]:ExpressionStatement[14155-14228]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14249-14261]:ReturnStatement[14249-14261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14353-14709]:Block[14353-14709]"
    }, {
      "left" : "if (transaction == null || transactionManager == null)",
      "right" : "if (transaction == null || transactionManager == null)",
      "info" : "IfStatement[14361-14442]:IfStatement[14361-14442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14416-14442]:Block[14416-14442]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[14427-14434]:ReturnStatement[14427-14434]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14449-14704]:TryStatement[14449-14704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14453-14511]:Block[14453-14511]"
    }, {
      "left" : "transactionManager.resume(transaction);",
      "right" : "transactionManager.resume(transaction);",
      "info" : "ExpressionStatement[14464-14503]:ExpressionStatement[14464-14503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14532-14704]:Block[14532-14704]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[14543-14696]:IfStatement[14543-14696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14569-14696]:Block[14569-14696]"
    }, {
      "left" : "log.tracef(e, \"An error occurred while trying to resume a suspended transaction. tx=%s\", transaction);",
      "right" : "log.tracef(e, \"An error occurred while trying to resume a suspended transaction. tx=%s\", transaction);",
      "info" : "ExpressionStatement[14583-14685]:ExpressionStatement[14583-14685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14853-15638]:Block[14853-15638]"
    }, {
      "left" : "if (!cacheEntryCreatedListeners.isEmpty())",
      "right" : "if (!cacheEntryCreatedListeners.isEmpty())",
      "info" : "IfStatement[14861-15633]:IfStatement[14861-15633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14904-15633]:Block[14904-15633]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_CREATED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_CREATED);",
      "info" : "VariableDeclarationStatement[14915-14985]:VariableDeclarationStatement[14915-14985]"
    }, {
      "left" : "configureEvent(e, key, value, pre, ctx, command, null, null);",
      "right" : "configureEvent(e, key, value, pre, ctx, command, null, null);",
      "info" : "ExpressionStatement[14995-15056]:ExpressionStatement[14995-15056]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[15066-15154]:VariableDeclarationStatement[15066-15154]"
    }, {
      "left" : "boolean sendEvents = !ctx.isInTxScope();",
      "right" : "boolean sendEvents = !ctx.isInTxScope();",
      "info" : "VariableDeclarationStatement[15164-15204]:VariableDeclarationStatement[15164-15204]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[15214-15625]:TryStatement[15214-15625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15218-15518]:Block[15218-15518]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryCreatedListeners)",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryCreatedListeners)",
      "info" : "EnhancedForStatement[15232-15386]:EnhancedForStatement[15232-15386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15311-15386]:Block[15311-15386]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[15328-15372]:ExpressionStatement[15328-15372]"
    }, {
      "left" : "if (sendEvents)",
      "right" : "if (sendEvents)",
      "info" : "IfStatement[15399-15507]:IfStatement[15399-15507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15415-15507]:Block[15415-15507]"
    }, {
      "left" : "eventManager.sendEvents();",
      "right" : "eventManager.sendEvents();",
      "info" : "ExpressionStatement[15432-15458]:ExpressionStatement[15432-15458]"
    }, {
      "left" : "sendEvents = false;",
      "right" : "sendEvents = false;",
      "info" : "ExpressionStatement[15474-15493]:ExpressionStatement[15474-15493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15527-15625]:Block[15527-15625]"
    }, {
      "left" : "if (sendEvents)",
      "right" : "if (sendEvents)",
      "info" : "IfStatement[15541-15614]:IfStatement[15541-15614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15557-15614]:Block[15557-15614]"
    }, {
      "left" : "eventManager.dropEvents();",
      "right" : "eventManager.dropEvents();",
      "info" : "ExpressionStatement[15574-15600]:ExpressionStatement[15574-15600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15827-16636]:Block[15827-16636]"
    }, {
      "left" : "if (!cacheEntryModifiedListeners.isEmpty())",
      "right" : "if (!cacheEntryModifiedListeners.isEmpty())",
      "info" : "IfStatement[15835-16631]:IfStatement[15835-16631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15879-16631]:Block[15879-16631]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_MODIFIED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_MODIFIED);",
      "info" : "VariableDeclarationStatement[15890-15961]:VariableDeclarationStatement[15890-15961]"
    }, {
      "left" : "configureEvent(e, key, value, pre, ctx, command, previousValue, previousMetadata);",
      "right" : "configureEvent(e, key, value, pre, ctx, command, previousValue, previousMetadata);",
      "info" : "ExpressionStatement[15971-16053]:ExpressionStatement[15971-16053]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[16063-16151]:VariableDeclarationStatement[16063-16151]"
    }, {
      "left" : "boolean sendEvents = !ctx.isInTxScope();",
      "right" : "boolean sendEvents = !ctx.isInTxScope();",
      "info" : "VariableDeclarationStatement[16161-16201]:VariableDeclarationStatement[16161-16201]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16211-16623]:TryStatement[16211-16623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16215-16516]:Block[16215-16516]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryModifiedListeners)",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryModifiedListeners)",
      "info" : "EnhancedForStatement[16229-16384]:EnhancedForStatement[16229-16384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16309-16384]:Block[16309-16384]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[16326-16370]:ExpressionStatement[16326-16370]"
    }, {
      "left" : "if (sendEvents)",
      "right" : "if (sendEvents)",
      "info" : "IfStatement[16397-16505]:IfStatement[16397-16505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16413-16505]:Block[16413-16505]"
    }, {
      "left" : "eventManager.sendEvents();",
      "right" : "eventManager.sendEvents();",
      "info" : "ExpressionStatement[16430-16456]:ExpressionStatement[16430-16456]"
    }, {
      "left" : "sendEvents = false;",
      "right" : "sendEvents = false;",
      "info" : "ExpressionStatement[16472-16491]:ExpressionStatement[16472-16491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16525-16623]:Block[16525-16623]"
    }, {
      "left" : "if (sendEvents)",
      "right" : "if (sendEvents)",
      "info" : "IfStatement[16539-16612]:IfStatement[16539-16612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16555-16612]:Block[16555-16612]"
    }, {
      "left" : "eventManager.dropEvents();",
      "right" : "eventManager.dropEvents();",
      "info" : "ExpressionStatement[16572-16598]:ExpressionStatement[16572-16598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16845-17695]:Block[16845-17695]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryRemovedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryRemovedListeners))",
      "info" : "IfStatement[16853-17690]:IfStatement[16853-17690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16917-17690]:Block[16917-17690]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_REMOVED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_REMOVED);",
      "info" : "VariableDeclarationStatement[16928-16998]:VariableDeclarationStatement[16928-16998]"
    }, {
      "left" : "configureEvent(e, key, null, pre, ctx, command, previousValue, previousMetadata);",
      "right" : "configureEvent(e, key, null, pre, ctx, command, previousValue, previousMetadata);",
      "info" : "ExpressionStatement[17008-17089]:ExpressionStatement[17008-17089]"
    }, {
      "left" : "setTx(ctx, e);",
      "right" : "setTx(ctx, e);",
      "info" : "ExpressionStatement[17099-17113]:ExpressionStatement[17099-17113]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[17123-17211]:VariableDeclarationStatement[17123-17211]"
    }, {
      "left" : "boolean sendEvents = !ctx.isInTxScope();",
      "right" : "boolean sendEvents = !ctx.isInTxScope();",
      "info" : "VariableDeclarationStatement[17221-17261]:VariableDeclarationStatement[17221-17261]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17271-17682]:TryStatement[17271-17682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17275-17575]:Block[17275-17575]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryRemovedListeners)",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryRemovedListeners)",
      "info" : "EnhancedForStatement[17289-17443]:EnhancedForStatement[17289-17443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17368-17443]:Block[17368-17443]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[17385-17429]:ExpressionStatement[17385-17429]"
    }, {
      "left" : "if (sendEvents)",
      "right" : "if (sendEvents)",
      "info" : "IfStatement[17456-17564]:IfStatement[17456-17564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17472-17564]:Block[17472-17564]"
    }, {
      "left" : "eventManager.sendEvents();",
      "right" : "eventManager.sendEvents();",
      "info" : "ExpressionStatement[17489-17515]:ExpressionStatement[17489-17515]"
    }, {
      "left" : "sendEvents = false;",
      "right" : "sendEvents = false;",
      "info" : "ExpressionStatement[17531-17550]:ExpressionStatement[17531-17550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17584-17682]:Block[17584-17682]"
    }, {
      "left" : "if (sendEvents)",
      "right" : "if (sendEvents)",
      "info" : "IfStatement[17598-17671]:IfStatement[17598-17671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17614-17671]:Block[17614-17671]"
    }, {
      "left" : "eventManager.dropEvents();",
      "right" : "eventManager.dropEvents();",
      "info" : "ExpressionStatement[17631-17657]:ExpressionStatement[17631-17657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17903-18753]:Block[17903-18753]"
    }, {
      "left" : "if (typeConverter != null)",
      "right" : "if (typeConverter != null)",
      "info" : "IfStatement[17911-18119]:IfStatement[17911-18119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17938-18119]:Block[17938-18119]"
    }, {
      "left" : "key = (K) typeConverter.unboxKey(key);",
      "right" : "key = (K) typeConverter.unboxKey(key);",
      "info" : "ExpressionStatement[17949-17987]:ExpressionStatement[17949-17987]"
    }, {
      "left" : "value = (V) typeConverter.unboxValue(value);",
      "right" : "value = (V) typeConverter.unboxValue(value);",
      "info" : "ExpressionStatement[17997-18041]:ExpressionStatement[17997-18041]"
    }, {
      "left" : "previousValue = (V) typeConverter.unboxValue(previousValue);",
      "right" : "previousValue = (V) typeConverter.unboxValue(previousValue);",
      "info" : "ExpressionStatement[18051-18111]:ExpressionStatement[18051-18111]"
    }, {
      "left" : "e.setOriginLocal(ctx.isOriginLocal());",
      "right" : "e.setOriginLocal(ctx.isOriginLocal());",
      "info" : "ExpressionStatement[18127-18165]:ExpressionStatement[18127-18165]"
    }, {
      "left" : "e.setValue(pre ? previousValue : value);",
      "right" : "e.setValue(pre ? previousValue : value);",
      "info" : "ExpressionStatement[18172-18212]:ExpressionStatement[18172-18212]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[18219-18233]:ExpressionStatement[18219-18233]"
    }, {
      "left" : "e.setOldValue(previousValue);",
      "right" : "e.setOldValue(previousValue);",
      "info" : "ExpressionStatement[18240-18269]:ExpressionStatement[18240-18269]"
    }, {
      "left" : "e.setOldMetadata(previousMetadata);",
      "right" : "e.setOldMetadata(previousMetadata);",
      "info" : "ExpressionStatement[18276-18311]:ExpressionStatement[18276-18311]"
    }, {
      "left" : "CacheEntry entry = ctx.lookupEntry(key);",
      "right" : "CacheEntry entry = ctx.lookupEntry(key);",
      "info" : "VariableDeclarationStatement[18318-18358]:VariableDeclarationStatement[18318-18358]"
    }, {
      "left" : "if (entry != null)",
      "right" : "if (entry != null)",
      "info" : "IfStatement[18365-18532]:IfStatement[18365-18532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18384-18438]:Block[18384-18438]"
    }, {
      "left" : "e.setMetadata(entry.getMetadata());",
      "right" : "e.setMetadata(entry.getMetadata());",
      "info" : "ExpressionStatement[18395-18430]:ExpressionStatement[18395-18430]"
    }, {
      "left" : "if (command instanceof ClearCommand)",
      "right" : "if (command instanceof ClearCommand)",
      "info" : "IfStatement[18444-18532]:IfStatement[18444-18532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18481-18532]:Block[18481-18532]"
    }, {
      "left" : "e.setMetadata(previousMetadata);",
      "right" : "e.setMetadata(previousMetadata);",
      "info" : "ExpressionStatement[18492-18524]:ExpressionStatement[18492-18524]"
    }, {
      "left" : "Set<Flag> flags;",
      "right" : "Set<Flag> flags;",
      "info" : "VariableDeclarationStatement[18539-18555]:VariableDeclarationStatement[18539-18555]"
    }, {
      "left" : "if (command != null && (flags = command.getFlags()) != null && flags.contains(Flag.COMMAND_RETRY))",
      "right" : "if (command != null && (flags = command.getFlags()) != null && flags.contains(Flag.COMMAND_RETRY))",
      "info" : "IfStatement[18562-18706]:IfStatement[18562-18706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18661-18706]:Block[18661-18706]"
    }, {
      "left" : "e.setCommandRetried(true);",
      "right" : "e.setCommandRetried(true);",
      "info" : "ExpressionStatement[18672-18698]:ExpressionStatement[18672-18698]"
    }, {
      "left" : "e.setKey(key);",
      "right" : "e.setKey(key);",
      "info" : "ExpressionStatement[18713-18727]:ExpressionStatement[18713-18727]"
    }, {
      "left" : "setTx(ctx, e);",
      "right" : "setTx(ctx, e);",
      "info" : "ExpressionStatement[18734-18748]:ExpressionStatement[18734-18748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18888-19385]:Block[18888-19385]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryVisitedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryVisitedListeners))",
      "info" : "IfStatement[18896-19380]:IfStatement[18896-19380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18960-19380]:Block[18960-19380]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_VISITED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_VISITED);",
      "info" : "VariableDeclarationStatement[18971-19041]:VariableDeclarationStatement[18971-19041]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[19051-19065]:ExpressionStatement[19051-19065]"
    }, {
      "left" : "e.setKey(key);",
      "right" : "e.setKey(key);",
      "info" : "ExpressionStatement[19075-19089]:ExpressionStatement[19075-19089]"
    }, {
      "left" : "e.setValue(value);",
      "right" : "e.setValue(value);",
      "info" : "ExpressionStatement[19099-19117]:ExpressionStatement[19099-19117]"
    }, {
      "left" : "setTx(ctx, e);",
      "right" : "setTx(ctx, e);",
      "info" : "ExpressionStatement[19127-19141]:ExpressionStatement[19127-19141]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[19151-19239]:VariableDeclarationStatement[19151-19239]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryVisitedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryVisitedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[19249-19372]:EnhancedForStatement[19249-19372]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[19328-19372]:ExpressionStatement[19328-19372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19559-21524]:Block[19559-21524]"
    }, {
      "left" : "if (!entries.isEmpty())",
      "right" : "if (!entries.isEmpty())",
      "info" : "IfStatement[19567-21519]:IfStatement[19567-21519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19591-21519]:Block[19591-21519]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntriesEvictedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntriesEvictedListeners))",
      "info" : "IfStatement[19602-20879]:IfStatement[19602-20879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19668-20879]:Block[19668-20879]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "info" : "VariableDeclarationStatement[19682-19752]:VariableDeclarationStatement[19682-19752]"
    }, {
      "left" : "Map<K, V> evictedKeysAndValues = transformCollectionToMap(entries,\n               new InfinispanCollections.MapMakerFunction<K, V, InternalCacheEntry<? extends K, ? extends V>>() {\n                  @Override\n                  public Map.Entry<K, V> transform(final InternalCacheEntry<? extends K, ? extends V> input) {\n                     return new Map.Entry<K, V>() {\n                        @Override\n                        public K getKey() {\n                          return input.getKey();\n                        }\n\n                        @Override\n                        public V getValue() {\n                          return input.getValue();\n                        }\n\n                        @Override\n                        public V setValue(V value) {\n                          throw new UnsupportedOperationException();\n                        }\n                     };\n                  }\n               }\n            );",
      "right" : "Map<K, V> evictedKeysAndValues = transformCollectionToMap(entries,\n               new InfinispanCollections.MapMakerFunction<K, V, InternalCacheEntry<? extends K, ? extends V>>() {\n                  @Override\n                  public Map.Entry<K, V> transform(final InternalCacheEntry<? extends K, ? extends V> input) {\n                     return new Map.Entry<K, V>() {\n                        @Override\n                        public K getKey() {\n                          return input.getKey();\n                        }\n\n                        @Override\n                        public V getValue() {\n                          return input.getValue();\n                        }\n\n                        @Override\n                        public V setValue(V value) {\n                          throw new UnsupportedOperationException();\n                        }\n                     };\n                  }\n               }\n            );",
      "info" : "VariableDeclarationStatement[19765-20706]:VariableDeclarationStatement[19765-20706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20083-20674]:Block[20083-20674]"
    }, {
      "left" : "return new Map.Entry<K, V>() {\n                        @Override\n                        public K getKey() {\n                          return input.getKey();\n                        }\n\n                        @Override\n                        public V getValue() {\n                          return input.getValue();\n                        }\n\n                        @Override\n                        public V setValue(V value) {\n                          throw new UnsupportedOperationException();\n                        }\n                     };",
      "right" : "return new Map.Entry<K, V>() {\n                        @Override\n                        public K getKey() {\n                          return input.getKey();\n                        }\n\n                        @Override\n                        public V getValue() {\n                          return input.getValue();\n                        }\n\n                        @Override\n                        public V setValue(V value) {\n                          throw new UnsupportedOperationException();\n                        }\n                     };",
      "info" : "ReturnStatement[20106-20654]:ReturnStatement[20106-20654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20213-20289]:Block[20213-20289]"
    }, {
      "left" : "return input.getKey();",
      "right" : "return input.getKey();",
      "info" : "ReturnStatement[20241-20263]:ReturnStatement[20241-20263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20369-20447]:Block[20369-20447]"
    }, {
      "left" : "return input.getValue();",
      "right" : "return input.getValue();",
      "info" : "ReturnStatement[20397-20421]:ReturnStatement[20397-20421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20534-20630]:Block[20534-20630]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[20562-20604]:ThrowStatement[20562-20604]"
    }, {
      "left" : "e.setEntries(evictedKeysAndValues);",
      "right" : "e.setEntries(evictedKeysAndValues);",
      "info" : "ExpressionStatement[20720-20755]:ExpressionStatement[20720-20755]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntriesEvictedListeners) listener.invoke(e);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntriesEvictedListeners) listener.invoke(e);",
      "info" : "EnhancedForStatement[20768-20868]:EnhancedForStatement[20768-20868]"
    }, {
      "left" : "listener.invoke(e);",
      "right" : "listener.invoke(e);",
      "info" : "ExpressionStatement[20849-20868]:ExpressionStatement[20849-20868]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryEvictedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryEvictedListeners))",
      "info" : "IfStatement[20922-21511]:IfStatement[20922-21511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20986-21511]:Block[20986-21511]"
    }, {
      "left" : "for (InternalCacheEntry<? extends K, ? extends V> ice : entries)",
      "right" : "for (InternalCacheEntry<? extends K, ? extends V> ice : entries)",
      "info" : "EnhancedForStatement[21000-21500]:EnhancedForStatement[21000-21500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21065-21500]:Block[21065-21500]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "info" : "VariableDeclarationStatement[21082-21152]:VariableDeclarationStatement[21082-21152]"
    }, {
      "left" : "e.setKey(ice.getKey());",
      "right" : "e.setKey(ice.getKey());",
      "info" : "ExpressionStatement[21168-21191]:ExpressionStatement[21168-21191]"
    }, {
      "left" : "e.setValue(ice.getValue());",
      "right" : "e.setValue(ice.getValue());",
      "info" : "ExpressionStatement[21207-21234]:ExpressionStatement[21207-21234]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(ice.getKey());",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(ice.getKey());",
      "info" : "VariableDeclarationStatement[21250-21347]:VariableDeclarationStatement[21250-21347]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryEvictedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryEvictedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[21363-21486]:EnhancedForStatement[21363-21486]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[21442-21486]:ExpressionStatement[21442-21486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21655-22519]:Block[21655-22519]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[21663-21751]:VariableDeclarationStatement[21663-21751]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntriesEvictedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntriesEvictedListeners))",
      "info" : "IfStatement[21758-22139]:IfStatement[21758-22139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21824-22139]:Block[21824-22139]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "info" : "VariableDeclarationStatement[21835-21905]:VariableDeclarationStatement[21835-21905]"
    }, {
      "left" : "Map<K, V> map = Collections.singletonMap(key, value);",
      "right" : "Map<K, V> map = Collections.singletonMap(key, value);",
      "info" : "VariableDeclarationStatement[21915-21968]:VariableDeclarationStatement[21915-21968]"
    }, {
      "left" : "e.setEntries(map);",
      "right" : "e.setEntries(map);",
      "info" : "ExpressionStatement[21978-21996]:ExpressionStatement[21978-21996]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntriesEvictedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntriesEvictedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[22006-22131]:EnhancedForStatement[22006-22131]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[22087-22131]:ExpressionStatement[22087-22131]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryEvictedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryEvictedListeners))",
      "info" : "IfStatement[22176-22514]:IfStatement[22176-22514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22240-22514]:Block[22240-22514]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_EVICTED);",
      "info" : "VariableDeclarationStatement[22251-22321]:VariableDeclarationStatement[22251-22321]"
    }, {
      "left" : "e.setKey(key);",
      "right" : "e.setKey(key);",
      "info" : "ExpressionStatement[22331-22345]:ExpressionStatement[22331-22345]"
    }, {
      "left" : "e.setValue(value);",
      "right" : "e.setValue(value);",
      "info" : "ExpressionStatement[22355-22373]:ExpressionStatement[22355-22373]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryEvictedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryEvictedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[22383-22506]:EnhancedForStatement[22383-22506]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[22462-22506]:ExpressionStatement[22462-22506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22679-23184]:Block[22679-23184]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryInvalidatedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryInvalidatedListeners))",
      "info" : "IfStatement[22687-23179]:IfStatement[22687-23179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22755-23179]:Block[22755-23179]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_INVALIDATED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_INVALIDATED);",
      "info" : "VariableDeclarationStatement[22766-22840]:VariableDeclarationStatement[22766-22840]"
    }, {
      "left" : "configureEvent(e, key, value, pre, ctx, command, value, null);",
      "right" : "configureEvent(e, key, value, pre, ctx, command, value, null);",
      "info" : "ExpressionStatement[22850-22912]:ExpressionStatement[22850-22912]"
    }, {
      "left" : "setTx(ctx, e);",
      "right" : "setTx(ctx, e);",
      "info" : "ExpressionStatement[22922-22936]:ExpressionStatement[22922-22936]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[22946-23034]:VariableDeclarationStatement[22946-23034]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryInvalidatedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryInvalidatedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[23044-23171]:EnhancedForStatement[23044-23171]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[23127-23171]:ExpressionStatement[23127-23171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23327-23913]:Block[23327-23913]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryLoadedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryLoadedListeners))",
      "info" : "IfStatement[23335-23908]:IfStatement[23335-23908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23398-23908]:Block[23398-23908]"
    }, {
      "left" : "boolean originLocal = ctx.isOriginLocal();",
      "right" : "boolean originLocal = ctx.isOriginLocal();",
      "info" : "VariableDeclarationStatement[23409-23451]:VariableDeclarationStatement[23409-23451]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_LOADED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_LOADED);",
      "info" : "VariableDeclarationStatement[23461-23530]:VariableDeclarationStatement[23461-23530]"
    }, {
      "left" : "e.setOriginLocal(originLocal);",
      "right" : "e.setOriginLocal(originLocal);",
      "info" : "ExpressionStatement[23540-23570]:ExpressionStatement[23540-23570]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[23580-23594]:ExpressionStatement[23580-23594]"
    }, {
      "left" : "e.setKey(key);",
      "right" : "e.setKey(key);",
      "info" : "ExpressionStatement[23604-23618]:ExpressionStatement[23604-23618]"
    }, {
      "left" : "e.setValue(value);",
      "right" : "e.setValue(value);",
      "info" : "ExpressionStatement[23628-23646]:ExpressionStatement[23628-23646]"
    }, {
      "left" : "setTx(ctx, e);",
      "right" : "setTx(ctx, e);",
      "info" : "ExpressionStatement[23656-23670]:ExpressionStatement[23656-23670]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[23680-23768]:VariableDeclarationStatement[23680-23768]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryLoadedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryLoadedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[23778-23900]:EnhancedForStatement[23778-23900]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[23856-23900]:ExpressionStatement[23856-23900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24050-24645]:Block[24050-24645]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryActivatedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryActivatedListeners))",
      "info" : "IfStatement[24058-24640]:IfStatement[24058-24640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24124-24640]:Block[24124-24640]"
    }, {
      "left" : "boolean originLocal = ctx.isOriginLocal();",
      "right" : "boolean originLocal = ctx.isOriginLocal();",
      "info" : "VariableDeclarationStatement[24135-24177]:VariableDeclarationStatement[24135-24177]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_ACTIVATED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_ACTIVATED);",
      "info" : "VariableDeclarationStatement[24187-24259]:VariableDeclarationStatement[24187-24259]"
    }, {
      "left" : "e.setOriginLocal(originLocal);",
      "right" : "e.setOriginLocal(originLocal);",
      "info" : "ExpressionStatement[24269-24299]:ExpressionStatement[24269-24299]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[24309-24323]:ExpressionStatement[24309-24323]"
    }, {
      "left" : "e.setKey(key);",
      "right" : "e.setKey(key);",
      "info" : "ExpressionStatement[24333-24347]:ExpressionStatement[24333-24347]"
    }, {
      "left" : "e.setValue(value);",
      "right" : "e.setValue(value);",
      "info" : "ExpressionStatement[24357-24375]:ExpressionStatement[24357-24375]"
    }, {
      "left" : "setTx(ctx, e);",
      "right" : "setTx(ctx, e);",
      "info" : "ExpressionStatement[24385-24399]:ExpressionStatement[24385-24399]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[24409-24497]:VariableDeclarationStatement[24409-24497]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryActivatedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryActivatedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[24507-24632]:EnhancedForStatement[24507-24632]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[24588-24632]:ExpressionStatement[24588-24632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24711-24888]:Block[24711-24888]"
    }, {
      "left" : "if (ctx != null && ctx.isInTxScope())",
      "right" : "if (ctx != null && ctx.isInTxScope())",
      "info" : "IfStatement[24719-24883]:IfStatement[24719-24883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24757-24883]:Block[24757-24883]"
    }, {
      "left" : "GlobalTransaction tx = ((TxInvocationContext) ctx).getGlobalTransaction();",
      "right" : "GlobalTransaction tx = ((TxInvocationContext) ctx).getGlobalTransaction();",
      "info" : "VariableDeclarationStatement[24768-24842]:VariableDeclarationStatement[24768-24842]"
    }, {
      "left" : "e.setTransactionId(tx);",
      "right" : "e.setTransactionId(tx);",
      "info" : "ExpressionStatement[24852-24875]:ExpressionStatement[24852-24875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25026-25508]:Block[25026-25508]"
    }, {
      "left" : "if (isNotificationAllowed(command, cacheEntryPassivatedListeners))",
      "right" : "if (isNotificationAllowed(command, cacheEntryPassivatedListeners))",
      "info" : "IfStatement[25034-25503]:IfStatement[25034-25503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25101-25503]:Block[25101-25503]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_PASSIVATED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, CACHE_ENTRY_PASSIVATED);",
      "info" : "VariableDeclarationStatement[25112-25185]:VariableDeclarationStatement[25112-25185]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[25195-25209]:ExpressionStatement[25195-25209]"
    }, {
      "left" : "e.setKey(key);",
      "right" : "e.setKey(key);",
      "info" : "ExpressionStatement[25219-25233]:ExpressionStatement[25219-25233]"
    }, {
      "left" : "e.setValue(value);",
      "right" : "e.setValue(value);",
      "info" : "ExpressionStatement[25243-25261]:ExpressionStatement[25243-25261]"
    }, {
      "left" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "right" : "boolean isLocalNodePrimaryOwner = clusteringDependentLogic.localNodeIsPrimaryOwner(key);",
      "info" : "VariableDeclarationStatement[25271-25359]:VariableDeclarationStatement[25271-25359]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryPassivatedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryPassivatedListeners) listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "EnhancedForStatement[25369-25495]:EnhancedForStatement[25369-25495]"
    }, {
      "left" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "right" : "listener.invoke(e, isLocalNodePrimaryOwner);",
      "info" : "ExpressionStatement[25451-25495]:ExpressionStatement[25451-25495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25639-26281]:Block[25639-26281]"
    }, {
      "left" : "if (!transactionCompletedListeners.isEmpty())",
      "right" : "if (!transactionCompletedListeners.isEmpty())",
      "info" : "IfStatement[25647-26276]:IfStatement[25647-26276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25693-26276]:Block[25693-26276]"
    }, {
      "left" : "boolean isOriginLocal = ctx.isOriginLocal();",
      "right" : "boolean isOriginLocal = ctx.isOriginLocal();",
      "info" : "VariableDeclarationStatement[25704-25748]:VariableDeclarationStatement[25704-25748]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, TRANSACTION_COMPLETED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, TRANSACTION_COMPLETED);",
      "info" : "VariableDeclarationStatement[25758-25830]:VariableDeclarationStatement[25758-25830]"
    }, {
      "left" : "e.setOriginLocal(isOriginLocal);",
      "right" : "e.setOriginLocal(isOriginLocal);",
      "info" : "ExpressionStatement[25840-25872]:ExpressionStatement[25840-25872]"
    }, {
      "left" : "e.setTransactionId(transaction);",
      "right" : "e.setTransactionId(transaction);",
      "info" : "ExpressionStatement[25882-25914]:ExpressionStatement[25882-25914]"
    }, {
      "left" : "e.setTransactionSuccessful(successful);",
      "right" : "e.setTransactionSuccessful(successful);",
      "info" : "ExpressionStatement[25924-25963]:ExpressionStatement[25924-25963]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : transactionCompletedListeners) listener.invoke(e);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : transactionCompletedListeners) listener.invoke(e);",
      "info" : "EnhancedForStatement[25973-26074]:EnhancedForStatement[25973-26074]"
    }, {
      "left" : "listener.invoke(e);",
      "right" : "listener.invoke(e);",
      "info" : "ExpressionStatement[26055-26074]:ExpressionStatement[26055-26074]"
    }, {
      "left" : "if (ctx.isInTxScope())",
      "right" : "if (ctx.isInTxScope())",
      "info" : "IfStatement[26084-26268]:IfStatement[26084-26268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26107-26268]:Block[26107-26268]"
    }, {
      "left" : "if (successful)",
      "right" : "if (successful)",
      "info" : "IfStatement[26121-26257]:IfStatement[26121-26257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26137-26194]:Block[26137-26194]"
    }, {
      "left" : "eventManager.sendEvents();",
      "right" : "eventManager.sendEvents();",
      "info" : "ExpressionStatement[26154-26180]:ExpressionStatement[26154-26180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26200-26257]:Block[26200-26257]"
    }, {
      "left" : "eventManager.dropEvents();",
      "right" : "eventManager.dropEvents();",
      "info" : "ExpressionStatement[26217-26243]:ExpressionStatement[26217-26243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26399-26753]:Block[26399-26753]"
    }, {
      "left" : "if (!transactionRegisteredListeners.isEmpty())",
      "right" : "if (!transactionRegisteredListeners.isEmpty())",
      "info" : "IfStatement[26407-26748]:IfStatement[26407-26748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26454-26748]:Block[26454-26748]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, TRANSACTION_REGISTERED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, TRANSACTION_REGISTERED);",
      "info" : "VariableDeclarationStatement[26465-26538]:VariableDeclarationStatement[26465-26538]"
    }, {
      "left" : "e.setOriginLocal(isOriginLocal);",
      "right" : "e.setOriginLocal(isOriginLocal);",
      "info" : "ExpressionStatement[26548-26580]:ExpressionStatement[26548-26580]"
    }, {
      "left" : "e.setTransactionId(globalTransaction);",
      "right" : "e.setTransactionId(globalTransaction);",
      "info" : "ExpressionStatement[26590-26628]:ExpressionStatement[26590-26628]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : transactionRegisteredListeners) listener.invoke(e);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : transactionRegisteredListeners) listener.invoke(e);",
      "info" : "EnhancedForStatement[26638-26740]:EnhancedForStatement[26638-26740]"
    }, {
      "left" : "listener.invoke(e);",
      "right" : "listener.invoke(e);",
      "info" : "ExpressionStatement[26721-26740]:ExpressionStatement[26721-26740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26905-27343]:Block[26905-27343]"
    }, {
      "left" : "if (!dataRehashedListeners.isEmpty())",
      "right" : "if (!dataRehashedListeners.isEmpty())",
      "info" : "IfStatement[26913-27338]:IfStatement[26913-27338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26951-27338]:Block[26951-27338]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, DATA_REHASHED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, DATA_REHASHED);",
      "info" : "VariableDeclarationStatement[26962-27026]:VariableDeclarationStatement[26962-27026]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[27036-27050]:ExpressionStatement[27036-27050]"
    }, {
      "left" : "e.setConsistentHashAtStart(readCH);",
      "right" : "e.setConsistentHashAtStart(readCH);",
      "info" : "ExpressionStatement[27060-27095]:ExpressionStatement[27060-27095]"
    }, {
      "left" : "e.setConsistentHashAtEnd(writeCH);",
      "right" : "e.setConsistentHashAtEnd(writeCH);",
      "info" : "ExpressionStatement[27105-27139]:ExpressionStatement[27105-27139]"
    }, {
      "left" : "e.setUnionConsistentHash(unionCH);",
      "right" : "e.setUnionConsistentHash(unionCH);",
      "info" : "ExpressionStatement[27149-27183]:ExpressionStatement[27149-27183]"
    }, {
      "left" : "e.setNewTopologyId(newTopologyId);",
      "right" : "e.setNewTopologyId(newTopologyId);",
      "info" : "ExpressionStatement[27193-27227]:ExpressionStatement[27193-27227]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : dataRehashedListeners) listener.invoke(e);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : dataRehashedListeners) listener.invoke(e);",
      "info" : "EnhancedForStatement[27237-27330]:EnhancedForStatement[27237-27330]"
    }, {
      "left" : "listener.invoke(e);",
      "right" : "listener.invoke(e);",
      "info" : "ExpressionStatement[27311-27330]:ExpressionStatement[27311-27330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27481-27992]:Block[27481-27992]"
    }, {
      "left" : "if (!topologyChangedListeners.isEmpty())",
      "right" : "if (!topologyChangedListeners.isEmpty())",
      "info" : "IfStatement[27489-27987]:IfStatement[27489-27987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27530-27987]:Block[27530-27987]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, TOPOLOGY_CHANGED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, TOPOLOGY_CHANGED);",
      "info" : "VariableDeclarationStatement[27541-27608]:VariableDeclarationStatement[27541-27608]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[27618-27632]:ExpressionStatement[27618-27632]"
    }, {
      "left" : "if (oldTopology != null)",
      "right" : "if (oldTopology != null)",
      "info" : "IfStatement[27642-27756]:IfStatement[27642-27756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27667-27756]:Block[27667-27756]"
    }, {
      "left" : "e.setConsistentHashAtStart(oldTopology.getReadConsistentHash());",
      "right" : "e.setConsistentHashAtStart(oldTopology.getReadConsistentHash());",
      "info" : "ExpressionStatement[27681-27745]:ExpressionStatement[27681-27745]"
    }, {
      "left" : "e.setConsistentHashAtEnd(newTopology.getWriteConsistentHash());",
      "right" : "e.setConsistentHashAtEnd(newTopology.getWriteConsistentHash());",
      "info" : "ExpressionStatement[27766-27829]:ExpressionStatement[27766-27829]"
    }, {
      "left" : "e.setNewTopologyId(newTopologyId);",
      "right" : "e.setNewTopologyId(newTopologyId);",
      "info" : "ExpressionStatement[27839-27873]:ExpressionStatement[27839-27873]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : topologyChangedListeners) listener.invoke(e);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : topologyChangedListeners) listener.invoke(e);",
      "info" : "EnhancedForStatement[27883-27979]:EnhancedForStatement[27883-27979]"
    }, {
      "left" : "listener.invoke(e);",
      "right" : "listener.invoke(e);",
      "info" : "ExpressionStatement[27960-27979]:ExpressionStatement[27960-27979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28087-28405]:Block[28087-28405]"
    }, {
      "left" : "if (!partitionChangedListeners.isEmpty())",
      "right" : "if (!partitionChangedListeners.isEmpty())",
      "info" : "IfStatement[28095-28400]:IfStatement[28095-28400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28137-28400]:Block[28137-28400]"
    }, {
      "left" : "EventImpl<K, V> e = EventImpl.createEvent(cache, PARTITION_STATUS_CHANGED);",
      "right" : "EventImpl<K, V> e = EventImpl.createEvent(cache, PARTITION_STATUS_CHANGED);",
      "info" : "VariableDeclarationStatement[28148-28223]:VariableDeclarationStatement[28148-28223]"
    }, {
      "left" : "e.setPre(pre);",
      "right" : "e.setPre(pre);",
      "info" : "ExpressionStatement[28233-28247]:ExpressionStatement[28233-28247]"
    }, {
      "left" : "e.setAvailabilityMode(mode);",
      "right" : "e.setAvailabilityMode(mode);",
      "info" : "ExpressionStatement[28257-28285]:ExpressionStatement[28257-28285]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : partitionChangedListeners) listener.invoke(e);",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : partitionChangedListeners) listener.invoke(e);",
      "info" : "EnhancedForStatement[28295-28392]:EnhancedForStatement[28295-28392]"
    }, {
      "left" : "listener.invoke(e);",
      "right" : "listener.invoke(e);",
      "info" : "ExpressionStatement[28373-28392]:ExpressionStatement[28373-28392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28521-30476]:Block[28521-30476]"
    }, {
      "left" : "for (CacheEntryEvent<K, V> event : events)",
      "right" : "for (CacheEntryEvent<K, V> event : events)",
      "info" : "EnhancedForStatement[28529-30471]:EnhancedForStatement[28529-30471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28572-30471]:Block[28572-30471]"
    }, {
      "left" : "if (event.isPre())",
      "right" : "if (event.isPre())",
      "info" : "IfStatement[28583-28720]:IfStatement[28583-28720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28602-28720]:Block[28602-28720]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Events for cluster listener should never be pre change\");",
      "right" : "throw new IllegalArgumentException(\"Events for cluster listener should never be pre change\");",
      "info" : "ThrowStatement[28616-28709]:ThrowStatement[28616-28709]"
    }, {
      "left" : "switch (event.getType()) {\n            case CACHE_ENTRY_MODIFIED:\n               for (CacheEntryListenerInvocation<K, V> listener : cacheEntryModifiedListeners) {\n                  if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {\n                     // We force invocation, since it means the owning node passed filters already and they\n                     // already converted so don't run converter either\n                     listener.invokeNoChecks(event, false, true);\n                  }\n               }\n               break;\n            case CACHE_ENTRY_CREATED:\n               for (CacheEntryListenerInvocation<K, V> listener : cacheEntryCreatedListeners) {\n                  if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {\n                     // We force invocation, since it means the owning node passed filters already and they\n                     // already converted so don't run converter either\n                     listener.invokeNoChecks(event, false, true);\n                  }\n               }\n               break;\n            case CACHE_ENTRY_REMOVED:\n               for (CacheEntryListenerInvocation<K, V> listener : cacheEntryRemovedListeners) {\n                  if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {\n                     // We force invocation, since it means the owning node passed filters already and they\n                     // already converted so don't run converter either\n                     listener.invokeNoChecks(event, false, true);\n                  }\n               }\n               break;\n            default:\n               throw new IllegalArgumentException(\"Unexpected event type encountered!\");\n         }",
      "right" : "switch (event.getType()) {\n            case CACHE_ENTRY_MODIFIED:\n               for (CacheEntryListenerInvocation<K, V> listener : cacheEntryModifiedListeners) {\n                  if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {\n                     // We force invocation, since it means the owning node passed filters already and they\n                     // already converted so don't run converter either\n                     listener.invokeNoChecks(event, false, true);\n                  }\n               }\n               break;\n            case CACHE_ENTRY_CREATED:\n               for (CacheEntryListenerInvocation<K, V> listener : cacheEntryCreatedListeners) {\n                  if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {\n                     // We force invocation, since it means the owning node passed filters already and they\n                     // already converted so don't run converter either\n                     listener.invokeNoChecks(event, false, true);\n                  }\n               }\n               break;\n            case CACHE_ENTRY_REMOVED:\n               for (CacheEntryListenerInvocation<K, V> listener : cacheEntryRemovedListeners) {\n                  if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {\n                     // We force invocation, since it means the owning node passed filters already and they\n                     // already converted so don't run converter either\n                     listener.invokeNoChecks(event, false, true);\n                  }\n               }\n               break;\n            default:\n               throw new IllegalArgumentException(\"Unexpected event type encountered!\");\n         }",
      "info" : "SwitchStatement[28730-30463]:SwitchStatement[28730-30463]"
    }, {
      "left" : "case CACHE_ENTRY_MODIFIED:",
      "right" : "case CACHE_ENTRY_MODIFIED:",
      "info" : "SwitchCase[28769-28795]:SwitchCase[28769-28795]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryModifiedListeners)",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryModifiedListeners)",
      "info" : "EnhancedForStatement[28811-29264]:EnhancedForStatement[28811-29264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28891-29264]:Block[28891-29264]"
    }, {
      "left" : "if (listener.isClustered() && uuid.equals(listener.getIdentifier()))",
      "right" : "if (listener.isClustered() && uuid.equals(listener.getIdentifier()))",
      "info" : "IfStatement[28911-29247]:IfStatement[28911-29247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28980-29247]:Block[28980-29247]"
    }, {
      "left" : "listener.invokeNoChecks(event, false, true);",
      "right" : "listener.invokeNoChecks(event, false, true);",
      "info" : "ExpressionStatement[29183-29227]:ExpressionStatement[29183-29227]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29280-29286]:BreakStatement[29280-29286]"
    }, {
      "left" : "case CACHE_ENTRY_CREATED:",
      "right" : "case CACHE_ENTRY_CREATED:",
      "info" : "SwitchCase[29299-29324]:SwitchCase[29299-29324]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryCreatedListeners)",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryCreatedListeners)",
      "info" : "EnhancedForStatement[29340-29792]:EnhancedForStatement[29340-29792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29419-29792]:Block[29419-29792]"
    }, {
      "left" : "if (listener.isClustered() && uuid.equals(listener.getIdentifier()))",
      "right" : "if (listener.isClustered() && uuid.equals(listener.getIdentifier()))",
      "info" : "IfStatement[29439-29775]:IfStatement[29439-29775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29508-29775]:Block[29508-29775]"
    }, {
      "left" : "listener.invokeNoChecks(event, false, true);",
      "right" : "listener.invokeNoChecks(event, false, true);",
      "info" : "ExpressionStatement[29711-29755]:ExpressionStatement[29711-29755]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29808-29814]:BreakStatement[29808-29814]"
    }, {
      "left" : "case CACHE_ENTRY_REMOVED:",
      "right" : "case CACHE_ENTRY_REMOVED:",
      "info" : "SwitchCase[29827-29852]:SwitchCase[29827-29852]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryRemovedListeners)",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : cacheEntryRemovedListeners)",
      "info" : "EnhancedForStatement[29868-30320]:EnhancedForStatement[29868-30320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29947-30320]:Block[29947-30320]"
    }, {
      "left" : "if (listener.isClustered() && uuid.equals(listener.getIdentifier()))",
      "right" : "if (listener.isClustered() && uuid.equals(listener.getIdentifier()))",
      "info" : "IfStatement[29967-30303]:IfStatement[29967-30303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30036-30303]:Block[30036-30303]"
    }, {
      "left" : "listener.invokeNoChecks(event, false, true);",
      "right" : "listener.invokeNoChecks(event, false, true);",
      "info" : "ExpressionStatement[30239-30283]:ExpressionStatement[30239-30283]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30336-30342]:BreakStatement[30336-30342]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[30355-30363]:SwitchCase[30355-30363]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Unexpected event type encountered!\");",
      "right" : "throw new IllegalArgumentException(\"Unexpected event type encountered!\");",
      "info" : "ThrowStatement[30379-30452]:ThrowStatement[30379-30452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30577-31273]:Block[30577-31273]"
    }, {
      "left" : "Set<Object> enlistedAlready = new HashSet<>();",
      "right" : "Set<Object> enlistedAlready = new HashSet<>();",
      "info" : "VariableDeclarationStatement[30585-30631]:VariableDeclarationStatement[30585-30631]"
    }, {
      "left" : "Set<DistributedCallable> callables = new HashSet<>();",
      "right" : "Set<DistributedCallable> callables = new HashSet<>();",
      "info" : "VariableDeclarationStatement[30638-30691]:VariableDeclarationStatement[30638-30691]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[30699-30821]:IfStatement[30699-30821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30725-30821]:Block[30725-30821]"
    }, {
      "left" : "log.tracef(\"Request received to get cluster listeners currently registered\");",
      "right" : "log.tracef(\"Request received to get cluster listeners currently registered\");",
      "info" : "ExpressionStatement[30736-30813]:ExpressionStatement[30736-30813]"
    }, {
      "left" : "registerClusterListenerCallablesToInstall(enlistedAlready, callables, cacheEntryModifiedListeners);",
      "right" : "registerClusterListenerCallablesToInstall(enlistedAlready, callables, cacheEntryModifiedListeners);",
      "info" : "ExpressionStatement[30829-30928]:ExpressionStatement[30829-30928]"
    }, {
      "left" : "registerClusterListenerCallablesToInstall(enlistedAlready, callables, cacheEntryCreatedListeners);",
      "right" : "registerClusterListenerCallablesToInstall(enlistedAlready, callables, cacheEntryCreatedListeners);",
      "info" : "ExpressionStatement[30935-31033]:ExpressionStatement[30935-31033]"
    }, {
      "left" : "registerClusterListenerCallablesToInstall(enlistedAlready, callables, cacheEntryRemovedListeners);",
      "right" : "registerClusterListenerCallablesToInstall(enlistedAlready, callables, cacheEntryRemovedListeners);",
      "info" : "ExpressionStatement[31040-31138]:ExpressionStatement[31040-31138]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[31146-31243]:IfStatement[31146-31243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31172-31243]:Block[31172-31243]"
    }, {
      "left" : "log.tracef(\"Cluster listeners found %s\", callables);",
      "right" : "log.tracef(\"Cluster listeners found %s\", callables);",
      "info" : "ExpressionStatement[31183-31235]:ExpressionStatement[31183-31235]"
    }, {
      "left" : "return callables;",
      "right" : "return callables;",
      "info" : "ReturnStatement[31251-31268]:ReturnStatement[31251-31268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31576-32730]:Block[31576-32730]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> listener : listenerInvocations)",
      "right" : "for (CacheEntryListenerInvocation<K, V> listener : listenerInvocations)",
      "info" : "EnhancedForStatement[31584-32725]:EnhancedForStatement[31584-32725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31656-32725]:Block[31656-32725]"
    }, {
      "left" : "if (!enlistedAlready.contains(listener.getTarget()))",
      "right" : "if (!enlistedAlready.contains(listener.getTarget()))",
      "info" : "IfStatement[31667-32717]:IfStatement[31667-32717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31720-32717]:Block[31720-32717]"
    }, {
      "left" : "if (listener.isClustered())",
      "right" : "if (listener.isClustered())",
      "info" : "IfStatement[31801-32706]:IfStatement[31801-32706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31829-32232]:Block[31829-32232]"
    }, {
      "left" : "callables.add(new ClusterListenerReplicateCallable(listener.getIdentifier(),\n                                                                  cache.getCacheManager().getAddress(), listener.getFilter(),\n                                                                  listener.getConverter(), listener.isSync()));",
      "right" : "callables.add(new ClusterListenerReplicateCallable(listener.getIdentifier(),\n                                                                  cache.getCacheManager().getAddress(), listener.getFilter(),\n                                                                  listener.getConverter(), listener.isSync()));",
      "info" : "ExpressionStatement[31846-32160]:ExpressionStatement[31846-32160]"
    }, {
      "left" : "enlistedAlready.add(listener.getTarget());",
      "right" : "enlistedAlready.add(listener.getTarget());",
      "info" : "ExpressionStatement[32176-32218]:ExpressionStatement[32176-32218]"
    }, {
      "left" : "if (listener.getTarget() instanceof RemoteClusterListener)",
      "right" : "if (listener.getTarget() instanceof RemoteClusterListener)",
      "info" : "IfStatement[32250-32706]:IfStatement[32250-32706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32309-32706]:Block[32309-32706]"
    }, {
      "left" : "RemoteClusterListener lcl = (RemoteClusterListener)listener.getTarget();",
      "right" : "RemoteClusterListener lcl = (RemoteClusterListener)listener.getTarget();",
      "info" : "VariableDeclarationStatement[32326-32398]:VariableDeclarationStatement[32326-32398]"
    }, {
      "left" : "callables.add(new ClusterListenerReplicateCallable(lcl.getId(), lcl.getOwnerAddress(), listener.getFilter(),\n                                                                  listener.getConverter(), listener.isSync()));",
      "right" : "callables.add(new ClusterListenerReplicateCallable(lcl.getId(), lcl.getOwnerAddress(), listener.getFilter(),\n                                                                  listener.getConverter(), listener.isSync()));",
      "info" : "ExpressionStatement[32414-32634]:ExpressionStatement[32414-32634]"
    }, {
      "left" : "enlistedAlready.add(listener.getTarget());",
      "right" : "enlistedAlready.add(listener.getTarget());",
      "info" : "ExpressionStatement[32650-32692]:ExpressionStatement[32650-32692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32849-32956]:Block[32849-32956]"
    }, {
      "left" : "return (cmd == null || !cmd.hasFlag(Flag.SKIP_LISTENER_NOTIFICATION)) && !listeners.isEmpty();",
      "right" : "return (cmd == null || !cmd.hasFlag(Flag.SKIP_LISTENER_NOTIFICATION)) && !listeners.isEmpty();",
      "info" : "ReturnStatement[32857-32951]:ReturnStatement[32857-32951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33015-33068]:Block[33015-33068]"
    }, {
      "left" : "addListener(listener, null, null, null);",
      "right" : "addListener(listener, null, null, null);",
      "info" : "ExpressionStatement[33023-33063]:ExpressionStatement[33023-33063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33152-33212]:Block[33152-33212]"
    }, {
      "left" : "addListener(listener, null, null, classLoader);",
      "right" : "addListener(listener, null, null, classLoader);",
      "info" : "ExpressionStatement[33160-33207]:ExpressionStatement[33160-33207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33325-33423]:Block[33325-33423]"
    }, {
      "left" : "addListener(listener, new KeyFilterAsCacheEventFilter<K>(filter), null, classLoader);",
      "right" : "addListener(listener, new KeyFilterAsCacheEventFilter<K>(filter), null, classLoader);",
      "info" : "ExpressionStatement[33333-33418]:ExpressionStatement[33333-33418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34090-41082]:Block[34090-41082]"
    }, {
      "left" : "final Listener l = testListenerClassValidity(listener.getClass());",
      "right" : "final Listener l = testListenerClassValidity(listener.getClass());",
      "info" : "VariableDeclarationStatement[34098-34164]:VariableDeclarationStatement[34098-34164]"
    }, {
      "left" : "final UUID generatedId = UUID.randomUUID();",
      "right" : "final UUID generatedId = UUID.randomUUID();",
      "info" : "VariableDeclarationStatement[34171-34214]:VariableDeclarationStatement[34171-34214]"
    }, {
      "left" : "final CacheMode cacheMode = config.clustering().cacheMode();",
      "right" : "final CacheMode cacheMode = config.clustering().cacheMode();",
      "info" : "VariableDeclarationStatement[34221-34281]:VariableDeclarationStatement[34221-34281]"
    }, {
      "left" : "FilterIndexingServiceProvider indexingProvider = null;",
      "right" : "FilterIndexingServiceProvider indexingProvider = null;",
      "info" : "VariableDeclarationStatement[34289-34343]:VariableDeclarationStatement[34289-34343]"
    }, {
      "left" : "boolean foundMethods = false;",
      "right" : "boolean foundMethods = false;",
      "info" : "VariableDeclarationStatement[34350-34379]:VariableDeclarationStatement[34350-34379]"
    }, {
      "left" : "if (filter instanceof IndexedFilter)",
      "right" : "if (filter instanceof IndexedFilter)",
      "info" : "IfStatement[34386-35360]:IfStatement[34386-35360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34423-35360]:Block[34423-35360]"
    }, {
      "left" : "IndexedFilter indexedFilter = (IndexedFilter) filter;",
      "right" : "IndexedFilter indexedFilter = (IndexedFilter) filter;",
      "info" : "VariableDeclarationStatement[34434-34487]:VariableDeclarationStatement[34434-34487]"
    }, {
      "left" : "indexingProvider = findIndexingServiceProvider(indexedFilter);",
      "right" : "indexingProvider = findIndexingServiceProvider(indexedFilter);",
      "info" : "ExpressionStatement[34497-34559]:ExpressionStatement[34497-34559]"
    }, {
      "left" : "if (indexingProvider != null)",
      "right" : "if (indexingProvider != null)",
      "info" : "IfStatement[34569-35352]:IfStatement[34569-35352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34599-35352]:Block[34599-35352]"
    }, {
      "left" : "DelegatingCacheInvocationBuilder builder = new DelegatingCacheInvocationBuilder(indexingProvider);",
      "right" : "DelegatingCacheInvocationBuilder builder = new DelegatingCacheInvocationBuilder(indexingProvider);",
      "info" : "VariableDeclarationStatement[34613-34711]:VariableDeclarationStatement[34613-34711]"
    }, {
      "left" : "builder\n                  .setIncludeCurrentState(l.includeCurrentState())\n                  .setClustered(l.clustered())\n                  .setOnlyPrimary(l.clustered() ? cacheMode.isDistributed() : l.primaryOnly())\n                  .setObservation(l.clustered() ? Listener.Observation.POST : l.observation())\n                  .setFilter(filter)\n                  .setConverter(converter)\n                  .setIdentifier(generatedId)\n                  .setClassLoader(classLoader);",
      "right" : "builder\n                  .setIncludeCurrentState(l.includeCurrentState())\n                  .setClustered(l.clustered())\n                  .setOnlyPrimary(l.clustered() ? cacheMode.isDistributed() : l.primaryOnly())\n                  .setObservation(l.clustered() ? Listener.Observation.POST : l.observation())\n                  .setFilter(filter)\n                  .setConverter(converter)\n                  .setIdentifier(generatedId)\n                  .setClassLoader(classLoader);",
      "info" : "ExpressionStatement[34724-35209]:ExpressionStatement[34724-35209]"
    }, {
      "left" : "foundMethods = validateAndAddListenerInvocations(listener, builder);",
      "right" : "foundMethods = validateAndAddListenerInvocations(listener, builder);",
      "info" : "ExpressionStatement[35222-35290]:ExpressionStatement[35222-35290]"
    }, {
      "left" : "builder.registerListenerInvocations();",
      "right" : "builder.registerListenerInvocations();",
      "info" : "ExpressionStatement[35303-35341]:ExpressionStatement[35303-35341]"
    }, {
      "left" : "if (indexingProvider == null)",
      "right" : "if (indexingProvider == null)",
      "info" : "IfStatement[35367-36027]:IfStatement[35367-36027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35397-36027]:Block[35397-36027]"
    }, {
      "left" : "CacheInvocationBuilder builder = new CacheInvocationBuilder();",
      "right" : "CacheInvocationBuilder builder = new CacheInvocationBuilder();",
      "info" : "VariableDeclarationStatement[35408-35470]:VariableDeclarationStatement[35408-35470]"
    }, {
      "left" : "builder\n               .setIncludeCurrentState(l.includeCurrentState())\n               .setClustered(l.clustered())\n               .setOnlyPrimary(l.clustered() ? cacheMode.isDistributed() : l.primaryOnly())\n               .setObservation(l.clustered() ? Listener.Observation.POST : l.observation())\n               .setFilter(filter)\n               .setConverter(converter)\n               .setIdentifier(generatedId)\n               .setClassLoader(classLoader);",
      "right" : "builder\n               .setIncludeCurrentState(l.includeCurrentState())\n               .setClustered(l.clustered())\n               .setOnlyPrimary(l.clustered() ? cacheMode.isDistributed() : l.primaryOnly())\n               .setObservation(l.clustered() ? Listener.Observation.POST : l.observation())\n               .setFilter(filter)\n               .setConverter(converter)\n               .setIdentifier(generatedId)\n               .setClassLoader(classLoader);",
      "info" : "ExpressionStatement[35480-35941]:ExpressionStatement[35480-35941]"
    }, {
      "left" : "foundMethods = validateAndAddListenerInvocations(listener, builder);",
      "right" : "foundMethods = validateAndAddListenerInvocations(listener, builder);",
      "info" : "ExpressionStatement[35951-36019]:ExpressionStatement[35951-36019]"
    }, {
      "left" : "if (foundMethods && l.clustered())",
      "right" : "if (foundMethods && l.clustered())",
      "info" : "IfStatement[36035-39070]:IfStatement[36035-39070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36070-39070]:Block[36070-39070]"
    }, {
      "left" : "if (l.observation() == Listener.Observation.PRE)",
      "right" : "if (l.observation() == Listener.Observation.PRE)",
      "info" : "IfStatement[36081-39062]:IfStatement[36081-39062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36130-36229]:Block[36130-36229]"
    }, {
      "left" : "throw log.clusterListenerRegisteredWithOnlyPreEvents(listener.getClass());",
      "right" : "throw log.clusterListenerRegisteredWithOnlyPreEvents(listener.getClass());",
      "info" : "ThrowStatement[36144-36218]:ThrowStatement[36144-36218]"
    }, {
      "left" : "if (cacheMode.isInvalidation())",
      "right" : "if (cacheMode.isInvalidation())",
      "info" : "IfStatement[36235-39062]:IfStatement[36235-39062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36267-36394]:Block[36267-36394]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Cluster listeners cannot be used with Invalidation Caches!\");",
      "right" : "throw new UnsupportedOperationException(\"Cluster listeners cannot be used with Invalidation Caches!\");",
      "info" : "ThrowStatement[36281-36383]:ThrowStatement[36281-36383]"
    }, {
      "left" : "if (cacheMode.isDistributed())",
      "right" : "if (cacheMode.isDistributed())",
      "info" : "IfStatement[36400-39062]:IfStatement[36400-39062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36431-39062]:Block[36431-39062]"
    }, {
      "left" : "clusterListenerIDs.put(listener, generatedId);",
      "right" : "clusterListenerIDs.put(listener, generatedId);",
      "info" : "ExpressionStatement[36445-36491]:ExpressionStatement[36445-36491]"
    }, {
      "left" : "EmbeddedCacheManager manager = cache.getCacheManager();",
      "right" : "EmbeddedCacheManager manager = cache.getCacheManager();",
      "info" : "VariableDeclarationStatement[36504-36559]:VariableDeclarationStatement[36504-36559]"
    }, {
      "left" : "Address ourAddress = manager.getAddress();",
      "right" : "Address ourAddress = manager.getAddress();",
      "info" : "VariableDeclarationStatement[36572-36614]:VariableDeclarationStatement[36572-36614]"
    }, {
      "left" : "List<Address> members = manager.getMembers();",
      "right" : "List<Address> members = manager.getMembers();",
      "info" : "VariableDeclarationStatement[36628-36673]:VariableDeclarationStatement[36628-36673]"
    }, {
      "left" : "if (members != null && members.size() > 1)",
      "right" : "if (members != null && members.size() > 1)",
      "info" : "IfStatement[36768-39051]:IfStatement[36768-39051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36811-39051]:Block[36811-39051]"
    }, {
      "left" : "DistributedExecutionCompletionService decs = new DistributedExecutionCompletionService(distExecutorService);",
      "right" : "DistributedExecutionCompletionService decs = new DistributedExecutionCompletionService(distExecutorService);",
      "info" : "VariableDeclarationStatement[36828-36936]:VariableDeclarationStatement[36828-36936]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[36953-37160]:IfStatement[36953-37160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36979-37160]:Block[36979-37160]"
    }, {
      "left" : "log.tracef(\"Replicating cluster listener to other nodes %s for cluster listener with id %s\",\n                             members, generatedId);",
      "right" : "log.tracef(\"Replicating cluster listener to other nodes %s for cluster listener with id %s\",\n                             members, generatedId);",
      "info" : "ExpressionStatement[36999-37143]:ExpressionStatement[36999-37143]"
    }, {
      "left" : "Callable callable = new ClusterListenerReplicateCallable(generatedId, ourAddress, filter, converter, l.sync());",
      "right" : "Callable callable = new ClusterListenerReplicateCallable(generatedId, ourAddress, filter, converter, l.sync());",
      "info" : "VariableDeclarationStatement[37176-37287]:VariableDeclarationStatement[37176-37287]"
    }, {
      "left" : "for (Address member : members)",
      "right" : "for (Address member : members)",
      "info" : "EnhancedForStatement[37303-37476]:EnhancedForStatement[37303-37476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37334-37476]:Block[37334-37476]"
    }, {
      "left" : "if (!member.equals(ourAddress))",
      "right" : "if (!member.equals(ourAddress))",
      "info" : "IfStatement[37354-37459]:IfStatement[37354-37459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37386-37459]:Block[37386-37459]"
    }, {
      "left" : "decs.submit(member, callable);",
      "right" : "decs.submit(member, callable);",
      "info" : "ExpressionStatement[37409-37439]:ExpressionStatement[37409-37439]"
    }, {
      "left" : "for (int i = 0; i < members.size() - 1; ++i)",
      "right" : "for (int i = 0; i < members.size() - 1; ++i)",
      "info" : "ForStatement[37493-37860]:ForStatement[37493-37860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37538-37860]:Block[37538-37860]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[37558-37843]:TryStatement[37558-37843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37562-37623]:Block[37562-37623]"
    }, {
      "left" : "decs.take().get();",
      "right" : "decs.take().get();",
      "info" : "ExpressionStatement[37585-37603]:ExpressionStatement[37585-37603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37655-37734]:Block[37655-37734]"
    }, {
      "left" : "throw new CacheListenerException(e);",
      "right" : "throw new CacheListenerException(e);",
      "info" : "ThrowStatement[37678-37714]:ThrowStatement[37678-37714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37764-37843]:Block[37764-37843]"
    }, {
      "left" : "throw new CacheListenerException(e);",
      "right" : "throw new CacheListenerException(e);",
      "info" : "ThrowStatement[37787-37823]:ThrowStatement[37787-37823]"
    }, {
      "left" : "int extraCount = 0;",
      "right" : "int extraCount = 0;",
      "info" : "VariableDeclarationStatement[37877-37896]:VariableDeclarationStatement[37877-37896]"
    }, {
      "left" : "List<Address> membersAfter = manager.getMembers();",
      "right" : "List<Address> membersAfter = manager.getMembers();",
      "info" : "VariableDeclarationStatement[38099-38149]:VariableDeclarationStatement[38099-38149]"
    }, {
      "left" : "for (Address member : membersAfter)",
      "right" : "for (Address member : membersAfter)",
      "info" : "EnhancedForStatement[38165-38661]:EnhancedForStatement[38165-38661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38201-38661]:Block[38201-38661]"
    }, {
      "left" : "if (!members.contains(member) && !member.equals(ourAddress))",
      "right" : "if (!members.contains(member) && !member.equals(ourAddress))",
      "info" : "IfStatement[38221-38644]:IfStatement[38221-38644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38282-38644]:Block[38282-38644]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[38305-38537]:IfStatement[38305-38537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38331-38537]:Block[38331-38537]"
    }, {
      "left" : "log.tracef(\"Found additional node %s that joined during replication of cluster listener with id %s\",\n                                   member, generatedId);",
      "right" : "log.tracef(\"Found additional node %s that joined during replication of cluster listener with id %s\",\n                                   member, generatedId);",
      "info" : "ExpressionStatement[38357-38514]:ExpressionStatement[38357-38514]"
    }, {
      "left" : "extraCount++;",
      "right" : "extraCount++;",
      "info" : "ExpressionStatement[38559-38572]:ExpressionStatement[38559-38572]"
    }, {
      "left" : "decs.submit(member, callable);",
      "right" : "decs.submit(member, callable);",
      "info" : "ExpressionStatement[38594-38624]:ExpressionStatement[38594-38624]"
    }, {
      "left" : "for (int i = 0; i < extraCount; ++i)",
      "right" : "for (int i = 0; i < extraCount; ++i)",
      "info" : "ForStatement[38678-39037]:ForStatement[38678-39037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38715-39037]:Block[38715-39037]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[38735-39020]:TryStatement[38735-39020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38739-38800]:Block[38739-38800]"
    }, {
      "left" : "decs.take().get();",
      "right" : "decs.take().get();",
      "info" : "ExpressionStatement[38762-38780]:ExpressionStatement[38762-38780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38832-38911]:Block[38832-38911]"
    }, {
      "left" : "throw new CacheListenerException(e);",
      "right" : "throw new CacheListenerException(e);",
      "info" : "ThrowStatement[38855-38891]:ThrowStatement[38855-38891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38941-39020]:Block[38941-39020]"
    }, {
      "left" : "throw new CacheListenerException(e);",
      "right" : "throw new CacheListenerException(e);",
      "info" : "ThrowStatement[38964-39000]:ThrowStatement[38964-39000]"
    }, {
      "left" : "QueueingSegmentListener handler = segmentHandler.remove(generatedId);",
      "right" : "QueueingSegmentListener handler = segmentHandler.remove(generatedId);",
      "info" : "VariableDeclarationStatement[39163-39232]:VariableDeclarationStatement[39163-39232]"
    }, {
      "left" : "if (handler != null)",
      "right" : "if (handler != null)",
      "info" : "IfStatement[39239-41077]:IfStatement[39239-41077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39260-41077]:Block[39260-41077]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[39271-39394]:IfStatement[39271-39394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39297-39394]:Block[39297-39394]"
    }, {
      "left" : "log.tracef(\"Listener %s requests initial state for cache\", generatedId);",
      "right" : "log.tracef(\"Listener %s requests initial state for cache\", generatedId);",
      "info" : "ExpressionStatement[39311-39383]:ExpressionStatement[39311-39383]"
    }, {
      "left" : "final KeyValueFilter usedFilter;",
      "right" : "final KeyValueFilter usedFilter;",
      "info" : "VariableDeclarationStatement[39404-39436]:VariableDeclarationStatement[39404-39436]"
    }, {
      "left" : "final Converter usedConverter;",
      "right" : "final Converter usedConverter;",
      "info" : "VariableDeclarationStatement[39446-39476]:VariableDeclarationStatement[39446-39476]"
    }, {
      "left" : "if (filter instanceof CacheEventFilterConverter && (filter == converter || converter == null))",
      "right" : "if (filter instanceof CacheEventFilterConverter && (filter == converter || converter == null))",
      "info" : "IfStatement[39486-39959]:IfStatement[39486-39959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39581-39744]:Block[39581-39744]"
    }, {
      "left" : "usedFilter = new CacheEventFilterConverterAsKeyValueFilterConverter((CacheEventFilterConverter) filter);",
      "right" : "usedFilter = new CacheEventFilterConverterAsKeyValueFilterConverter((CacheEventFilterConverter) filter);",
      "info" : "ExpressionStatement[39595-39699]:ExpressionStatement[39595-39699]"
    }, {
      "left" : "usedConverter = null;",
      "right" : "usedConverter = null;",
      "info" : "ExpressionStatement[39712-39733]:ExpressionStatement[39712-39733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39750-39959]:Block[39750-39959]"
    }, {
      "left" : "usedFilter = filter == null ? null : new CacheEventFilterAsKeyValueFilter(filter);",
      "right" : "usedFilter = filter == null ? null : new CacheEventFilterAsKeyValueFilter(filter);",
      "info" : "ExpressionStatement[39764-39846]:ExpressionStatement[39764-39846]"
    }, {
      "left" : "usedConverter = converter == null ? null : new CacheEventConverterAsConverter(converter);",
      "right" : "usedConverter = converter == null ? null : new CacheEventConverterAsConverter(converter);",
      "info" : "ExpressionStatement[39859-39948]:ExpressionStatement[39859-39948]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[39969-40697]:TryStatement[39969-40697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40095-40697]:Block[40095-40697]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[40109-40686]:WhileStatement[40109-40686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40136-40686]:Block[40136-40686]"
    }, {
      "left" : "CacheEntry<K, C> entry = iterator.next();",
      "right" : "CacheEntry<K, C> entry = iterator.next();",
      "info" : "VariableDeclarationStatement[40153-40194]:VariableDeclarationStatement[40153-40194]"
    }, {
      "left" : "Object value = handler.markKeyAsProcessing(entry.getKey());",
      "right" : "Object value = handler.markKeyAsProcessing(entry.getKey());",
      "info" : "VariableDeclarationStatement[40292-40351]:VariableDeclarationStatement[40292-40351]"
    }, {
      "left" : "if (value == BaseQueueingSegmentListener.REMOVED)",
      "right" : "if (value == BaseQueueingSegmentListener.REMOVED)",
      "info" : "IfStatement[40367-40539]:IfStatement[40367-40539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40417-40539]:Block[40417-40539]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[40513-40522]:ContinueStatement[40513-40522]"
    }, {
      "left" : "raiseEventForInitialTransfer(generatedId, entry, l.clustered());",
      "right" : "raiseEventForInitialTransfer(generatedId, entry, l.clustered());",
      "info" : "ExpressionStatement[40555-40619]:ExpressionStatement[40555-40619]"
    }, {
      "left" : "handler.notifiedKey(entry.getKey());",
      "right" : "handler.notifiedKey(entry.getKey());",
      "info" : "ExpressionStatement[40636-40672]:ExpressionStatement[40636-40672]"
    }, {
      "left" : "Set<CacheEntry> entries = handler.findCreatedEntries();",
      "right" : "Set<CacheEntry> entries = handler.findCreatedEntries();",
      "info" : "VariableDeclarationStatement[40708-40763]:VariableDeclarationStatement[40708-40763]"
    }, {
      "left" : "for (CacheEntry entry : entries)",
      "right" : "for (CacheEntry entry : entries)",
      "info" : "EnhancedForStatement[40774-40896]:EnhancedForStatement[40774-40896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40807-40896]:Block[40807-40896]"
    }, {
      "left" : "raiseEventForInitialTransfer(generatedId, entry, l.clustered());",
      "right" : "raiseEventForInitialTransfer(generatedId, entry, l.clustered());",
      "info" : "ExpressionStatement[40821-40885]:ExpressionStatement[40821-40885]"
    }, {
      "left" : "if (log.isTraceEnabled())",
      "right" : "if (log.isTraceEnabled())",
      "info" : "IfStatement[40907-41031]:IfStatement[40907-41031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40933-41031]:Block[40933-41031]"
    }, {
      "left" : "log.tracef(\"Listener %s initial state for cache completed\", generatedId);",
      "right" : "log.tracef(\"Listener %s initial state for cache completed\", generatedId);",
      "info" : "ExpressionStatement[40947-41020]:ExpressionStatement[40947-41020]"
    }, {
      "left" : "handler.transferComplete();",
      "right" : "handler.transferComplete();",
      "info" : "ExpressionStatement[41042-41069]:ExpressionStatement[41042-41069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41182-41480]:Block[41182-41480]"
    }, {
      "left" : "for (FilterIndexingServiceProvider provider : filterIndexingServiceProviders)",
      "right" : "for (FilterIndexingServiceProvider provider : filterIndexingServiceProviders)",
      "info" : "EnhancedForStatement[41190-41372]:EnhancedForStatement[41190-41372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41268-41372]:Block[41268-41372]"
    }, {
      "left" : "if (provider.supportsFilter(indexedFilter))",
      "right" : "if (provider.supportsFilter(indexedFilter))",
      "info" : "IfStatement[41279-41364]:IfStatement[41279-41364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41323-41364]:Block[41323-41364]"
    }, {
      "left" : "return provider;",
      "right" : "return provider;",
      "info" : "ReturnStatement[41337-41353]:ReturnStatement[41337-41353]"
    }, {
      "left" : "log.noFilterIndexingServiceProviderFound(indexedFilter.getClass().getName());",
      "right" : "log.noFilterIndexingServiceProviderFound(indexedFilter.getClass().getName());",
      "info" : "ExpressionStatement[41379-41456]:ExpressionStatement[41379-41456]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[41463-41475]:ReturnStatement[41463-41475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41621-41694]:Block[41621-41694]"
    }, {
      "left" : "return super.getListenerCollectionForAnnotation(annotation);",
      "right" : "return super.getListenerCollectionForAnnotation(annotation);",
      "info" : "ReturnStatement[41629-41689]:ReturnStatement[41629-41689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41795-42800]:Block[41795-42800]"
    }, {
      "left" : "EventImpl preEvent;",
      "right" : "EventImpl preEvent;",
      "info" : "VariableDeclarationStatement[41803-41822]:VariableDeclarationStatement[41803-41822]"
    }, {
      "left" : "if (clustered)",
      "right" : "if (clustered)",
      "info" : "IfStatement[41829-42093]:IfStatement[41829-42093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41844-41933]:Block[41844-41933]"
    }, {
      "left" : "preEvent = null;",
      "right" : "preEvent = null;",
      "info" : "ExpressionStatement[41909-41925]:ExpressionStatement[41909-41925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41939-42093]:Block[41939-42093]"
    }, {
      "left" : "preEvent = EventImpl.createEvent(cache, CACHE_ENTRY_CREATED);",
      "right" : "preEvent = EventImpl.createEvent(cache, CACHE_ENTRY_CREATED);",
      "info" : "ExpressionStatement[41950-42011]:ExpressionStatement[41950-42011]"
    }, {
      "left" : "preEvent.setKey(entry.getKey());",
      "right" : "preEvent.setKey(entry.getKey());",
      "info" : "ExpressionStatement[42021-42053]:ExpressionStatement[42021-42053]"
    }, {
      "left" : "preEvent.setPre(true);",
      "right" : "preEvent.setPre(true);",
      "info" : "ExpressionStatement[42063-42085]:ExpressionStatement[42063-42085]"
    }, {
      "left" : "EventImpl postEvent = EventImpl.createEvent(cache, CACHE_ENTRY_CREATED);",
      "right" : "EventImpl postEvent = EventImpl.createEvent(cache, CACHE_ENTRY_CREATED);",
      "info" : "VariableDeclarationStatement[42101-42173]:VariableDeclarationStatement[42101-42173]"
    }, {
      "left" : "postEvent.setKey(entry.getKey());",
      "right" : "postEvent.setKey(entry.getKey());",
      "info" : "ExpressionStatement[42180-42213]:ExpressionStatement[42180-42213]"
    }, {
      "left" : "postEvent.setValue(entry.getValue());",
      "right" : "postEvent.setValue(entry.getValue());",
      "info" : "ExpressionStatement[42220-42257]:ExpressionStatement[42220-42257]"
    }, {
      "left" : "postEvent.setMetadata(entry.getMetadata());",
      "right" : "postEvent.setMetadata(entry.getMetadata());",
      "info" : "ExpressionStatement[42264-42307]:ExpressionStatement[42264-42307]"
    }, {
      "left" : "postEvent.setPre(false);",
      "right" : "postEvent.setPre(false);",
      "info" : "ExpressionStatement[42314-42338]:ExpressionStatement[42314-42338]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> invocation : cacheEntryCreatedListeners)",
      "right" : "for (CacheEntryListenerInvocation<K, V> invocation : cacheEntryCreatedListeners)",
      "info" : "EnhancedForStatement[42346-42795]:EnhancedForStatement[42346-42795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42427-42795]:Block[42427-42795]"
    }, {
      "left" : "if (invocation.getIdentifier() == identifier)",
      "right" : "if (invocation.getIdentifier() == identifier)",
      "info" : "IfStatement[42492-42787]:IfStatement[42492-42787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42538-42787]:Block[42538-42787]"
    }, {
      "left" : "if (preEvent != null)",
      "right" : "if (preEvent != null)",
      "info" : "IfStatement[42552-42714]:IfStatement[42552-42714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42574-42714]:Block[42574-42714]"
    }, {
      "left" : "invocation.invokeNoChecks(preEvent, true, true);",
      "right" : "invocation.invokeNoChecks(preEvent, true, true);",
      "info" : "ExpressionStatement[42652-42700]:ExpressionStatement[42652-42700]"
    }, {
      "left" : "invocation.invokeNoChecks(postEvent, true, true);",
      "right" : "invocation.invokeNoChecks(postEvent, true, true);",
      "info" : "ExpressionStatement[42727-42776]:ExpressionStatement[42727-42776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42888-42937]:Block[42888-42937]"
    }, {
      "left" : "addListener(listener, filter, null);",
      "right" : "addListener(listener, filter, null);",
      "info" : "ExpressionStatement[42896-42932]:ExpressionStatement[42896-42932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43103-43163]:Block[43103-43163]"
    }, {
      "left" : "addListener(listener, filter, converter, null);",
      "right" : "addListener(listener, filter, converter, null);",
      "info" : "ExpressionStatement[43111-43158]:ExpressionStatement[43111-43158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43573-43606]:Block[43573-43606]"
    }, {
      "left" : "return filter;",
      "right" : "return filter;",
      "info" : "ReturnStatement[43584-43598]:ReturnStatement[43584-43598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43701-43763]:Block[43701-43763]"
    }, {
      "left" : "this.filter = filter;",
      "right" : "this.filter = filter;",
      "info" : "ExpressionStatement[43712-43733]:ExpressionStatement[43712-43733]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43743-43755]:ReturnStatement[43743-43755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43838-43874]:Block[43838-43874]"
    }, {
      "left" : "return converter;",
      "right" : "return converter;",
      "info" : "ReturnStatement[43849-43866]:ReturnStatement[43849-43866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43981-44049]:Block[43981-44049]"
    }, {
      "left" : "this.converter = converter;",
      "right" : "this.converter = converter;",
      "info" : "ExpressionStatement[43992-44019]:ExpressionStatement[43992-44019]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44029-44041]:ReturnStatement[44029-44041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44088-44126]:Block[44088-44126]"
    }, {
      "left" : "return onlyPrimary;",
      "right" : "return onlyPrimary;",
      "info" : "ReturnStatement[44099-44118]:ReturnStatement[44099-44118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44200-44272]:Block[44200-44272]"
    }, {
      "left" : "this.onlyPrimary = onlyPrimary;",
      "right" : "this.onlyPrimary = onlyPrimary;",
      "info" : "ExpressionStatement[44211-44242]:ExpressionStatement[44211-44242]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44252-44264]:ReturnStatement[44252-44264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44309-44345]:Block[44309-44345]"
    }, {
      "left" : "return clustered;",
      "right" : "return clustered;",
      "info" : "ReturnStatement[44320-44337]:ReturnStatement[44320-44337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44415-44483]:Block[44415-44483]"
    }, {
      "left" : "this.clustered = clustered;",
      "right" : "this.clustered = clustered;",
      "info" : "ExpressionStatement[44426-44453]:ExpressionStatement[44426-44453]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44463-44475]:ReturnStatement[44463-44475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44519-44556]:Block[44519-44556]"
    }, {
      "left" : "return identifier;",
      "right" : "return identifier;",
      "info" : "ReturnStatement[44530-44548]:ReturnStatement[44530-44548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44625-44695]:Block[44625-44695]"
    }, {
      "left" : "this.identifier = identifier;",
      "right" : "this.identifier = identifier;",
      "info" : "ExpressionStatement[44636-44665]:ExpressionStatement[44636-44665]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44675-44687]:ReturnStatement[44675-44687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44742-44788]:Block[44742-44788]"
    }, {
      "left" : "return includeCurrentState;",
      "right" : "return includeCurrentState;",
      "info" : "ReturnStatement[44753-44780]:ReturnStatement[44753-44780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44878-44966]:Block[44878-44966]"
    }, {
      "left" : "this.includeCurrentState = includeCurrentState;",
      "right" : "this.includeCurrentState = includeCurrentState;",
      "info" : "ExpressionStatement[44889-44936]:ExpressionStatement[44889-44936]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44946-44958]:ReturnStatement[44946-44958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45019-45057]:Block[45019-45057]"
    }, {
      "left" : "return observation;",
      "right" : "return observation;",
      "info" : "ReturnStatement[45030-45049]:ReturnStatement[45030-45049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45144-45216]:Block[45144-45216]"
    }, {
      "left" : "this.observation = observation;",
      "right" : "this.observation = observation;",
      "info" : "ExpressionStatement[45155-45186]:ExpressionStatement[45155-45186]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[45196-45208]:ReturnStatement[45196-45208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45290-48260]:Block[45290-48260]"
    }, {
      "left" : "ListenerInvocation<Event<K, V>> invocation = new ListenerInvocationImpl(target, method, sync, classLoader,\n                                                                                 subject);",
      "right" : "ListenerInvocation<Event<K, V>> invocation = new ListenerInvocationImpl(target, method, sync, classLoader,\n                                                                                 subject);",
      "info" : "VariableDeclarationStatement[45301-45498]:VariableDeclarationStatement[45301-45498]"
    }, {
      "left" : "wireFilterAndConverterDependencies(filter, converter);",
      "right" : "wireFilterAndConverterDependencies(filter, converter);",
      "info" : "ExpressionStatement[45509-45563]:ExpressionStatement[45509-45563]"
    }, {
      "left" : "CacheEntryListenerInvocation<K, V> returnValue;",
      "right" : "CacheEntryListenerInvocation<K, V> returnValue;",
      "info" : "VariableDeclarationStatement[45732-45779]:VariableDeclarationStatement[45732-45779]"
    }, {
      "left" : "if (includeCurrentState)",
      "right" : "if (includeCurrentState)",
      "info" : "IfStatement[45790-48223]:IfStatement[45790-48223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45815-47839]:Block[45815-47839]"
    }, {
      "left" : "if (clustered)",
      "right" : "if (clustered)",
      "info" : "IfStatement[45931-47828]:IfStatement[45931-47828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45946-46848]:Block[45946-46848]"
    }, {
      "left" : "QueueingSegmentListener handler = segmentHandler.get(identifier);",
      "right" : "QueueingSegmentListener handler = segmentHandler.get(identifier);",
      "info" : "VariableDeclarationStatement[45963-46028]:VariableDeclarationStatement[45963-46028]"
    }, {
      "left" : "if (handler == null)",
      "right" : "if (handler == null)",
      "info" : "IfStatement[46044-46603]:IfStatement[46044-46603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46065-46603]:Block[46065-46603]"
    }, {
      "left" : "if (config.clustering().cacheMode().isDistributed())",
      "right" : "if (config.clustering().cacheMode().isDistributed())",
      "info" : "IfStatement[46085-46369]:IfStatement[46085-46369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46138-46265]:Block[46138-46265]"
    }, {
      "left" : "handler = new DistributedQueueingSegmentListener(entryFactory, distributionManager);",
      "right" : "handler = new DistributedQueueingSegmentListener(entryFactory, distributionManager);",
      "info" : "ExpressionStatement[46161-46245]:ExpressionStatement[46161-46245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46271-46369]:Block[46271-46369]"
    }, {
      "left" : "handler = new QueueingAllSegmentListener(entryFactory);",
      "right" : "handler = new QueueingAllSegmentListener(entryFactory);",
      "info" : "ExpressionStatement[46294-46349]:ExpressionStatement[46294-46349]"
    }, {
      "left" : "QueueingSegmentListener currentQueue = segmentHandler.putIfAbsent(identifier, handler);",
      "right" : "QueueingSegmentListener currentQueue = segmentHandler.putIfAbsent(identifier, handler);",
      "info" : "VariableDeclarationStatement[46388-46475]:VariableDeclarationStatement[46388-46475]"
    }, {
      "left" : "if (currentQueue != null)",
      "right" : "if (currentQueue != null)",
      "info" : "IfStatement[46494-46586]:IfStatement[46494-46586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46520-46586]:Block[46520-46586]"
    }, {
      "left" : "handler = currentQueue;",
      "right" : "handler = currentQueue;",
      "info" : "ExpressionStatement[46543-46566]:ExpressionStatement[46543-46566]"
    }, {
      "left" : "returnValue = new ClusteredListenerInvocation<K, V>(invocation, handler, filter, converter, annotation,\n                                                                   onlyPrimary, identifier, sync, observation);",
      "right" : "returnValue = new ClusteredListenerInvocation<K, V>(invocation, handler, filter, converter, annotation,\n                                                                   onlyPrimary, identifier, sync, observation);",
      "info" : "ExpressionStatement[46619-46834]:ExpressionStatement[46619-46834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46854-47828]:Block[46854-47828]"
    }, {
      "left" : "returnValue = new BaseCacheEntryListenerInvocation(invocation, filter, converter, annotation,\n                                                                  onlyPrimary, clustered, identifier, sync, observation);",
      "right" : "returnValue = new BaseCacheEntryListenerInvocation(invocation, filter, converter, annotation,\n                                                                  onlyPrimary, clustered, identifier, sync, observation);",
      "info" : "ExpressionStatement[47599-47814]:ExpressionStatement[47599-47814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47845-48223]:Block[47845-48223]"
    }, {
      "left" : "returnValue = new BaseCacheEntryListenerInvocation(invocation, filter, converter, annotation, onlyPrimary,\n                                                               clustered, identifier, sync, observation);",
      "right" : "returnValue = new BaseCacheEntryListenerInvocation(invocation, filter, converter, annotation, onlyPrimary,\n                                                               clustered, identifier, sync, observation);",
      "info" : "ExpressionStatement[48000-48212]:ExpressionStatement[48000-48212]"
    }, {
      "left" : "return returnValue;",
      "right" : "return returnValue;",
      "info" : "ReturnStatement[48233-48252]:ReturnStatement[48233-48252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48423-48657]:Block[48423-48657]"
    }, {
      "left" : "if (filter != null)",
      "right" : "if (filter != null)",
      "info" : "IfStatement[48434-48522]:IfStatement[48434-48522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48454-48522]:Block[48454-48522]"
    }, {
      "left" : "componentRegistry.wireDependencies(filter);",
      "right" : "componentRegistry.wireDependencies(filter);",
      "info" : "ExpressionStatement[48468-48511]:ExpressionStatement[48468-48511]"
    }, {
      "left" : "if (converter != null && converter != filter)",
      "right" : "if (converter != null && converter != filter)",
      "info" : "IfStatement[48532-48649]:IfStatement[48532-48649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48578-48649]:Block[48578-48649]"
    }, {
      "left" : "componentRegistry.wireDependencies(converter);",
      "right" : "componentRegistry.wireDependencies(converter);",
      "info" : "ExpressionStatement[48592-48638]:ExpressionStatement[48592-48638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49026-49070]:Block[49026-49070]"
    }, {
      "left" : "this.provider = provider;",
      "right" : "this.provider = provider;",
      "info" : "ExpressionStatement[49037-49062]:ExpressionStatement[49037-49062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49154-49671]:Block[49154-49671]"
    }, {
      "left" : "DelegatingCacheEntryListenerInvocation<K, V> invocation = provider.interceptListenerInvocation(super.build());",
      "right" : "DelegatingCacheEntryListenerInvocation<K, V> invocation = provider.interceptListenerInvocation(super.build());",
      "info" : "VariableDeclarationStatement[49165-49275]:VariableDeclarationStatement[49165-49275]"
    }, {
      "left" : "List<DelegatingCacheEntryListenerInvocation<K, V>> invocations = listeners.get(invocation.getAnnotation());",
      "right" : "List<DelegatingCacheEntryListenerInvocation<K, V>> invocations = listeners.get(invocation.getAnnotation());",
      "info" : "VariableDeclarationStatement[49285-49392]:VariableDeclarationStatement[49285-49392]"
    }, {
      "left" : "if (invocations == null)",
      "right" : "if (invocations == null)",
      "info" : "IfStatement[49402-49597]:IfStatement[49402-49597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49427-49597]:Block[49427-49597]"
    }, {
      "left" : "invocations = new ArrayList<DelegatingCacheEntryListenerInvocation<K, V>>(2);",
      "right" : "invocations = new ArrayList<DelegatingCacheEntryListenerInvocation<K, V>>(2);",
      "info" : "ExpressionStatement[49441-49518]:ExpressionStatement[49441-49518]"
    }, {
      "left" : "listeners.put(invocation.getAnnotation(), invocations);",
      "right" : "listeners.put(invocation.getAnnotation(), invocations);",
      "info" : "ExpressionStatement[49531-49586]:ExpressionStatement[49531-49586]"
    }, {
      "left" : "invocations.add(invocation);",
      "right" : "invocations.add(invocation);",
      "info" : "ExpressionStatement[49607-49635]:ExpressionStatement[49607-49635]"
    }, {
      "left" : "return invocation;",
      "right" : "return invocation;",
      "info" : "ReturnStatement[49645-49663]:ReturnStatement[49645-49663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49714-49988]:Block[49714-49988]"
    }, {
      "left" : "if (!listeners.isEmpty())",
      "right" : "if (!listeners.isEmpty())",
      "info" : "IfStatement[49725-49980]:IfStatement[49725-49980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49751-49980]:Block[49751-49980]"
    }, {
      "left" : "boolean filterAndConvert = filter == converter || converter == null;",
      "right" : "boolean filterAndConvert = filter == converter || converter == null;",
      "info" : "VariableDeclarationStatement[49765-49833]:VariableDeclarationStatement[49765-49833]"
    }, {
      "left" : "provider.registerListenerInvocations(clustered, onlyPrimary, filterAndConvert, (IndexedFilter<?, ?, ?>) filter, listeners);",
      "right" : "provider.registerListenerInvocations(clustered, onlyPrimary, filterAndConvert, (IndexedFilter<?, ?, ?>) filter, listeners);",
      "info" : "ExpressionStatement[49846-49969]:ExpressionStatement[49846-49969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50775-50927]:Block[50775-50927]"
    }, {
      "left" : "super(invocation, filter, converter, annotation, onlyPrimary, false, identifier, sync, observation);",
      "right" : "super(invocation, filter, converter, annotation, onlyPrimary, false, identifier, sync, observation);",
      "info" : "SuperConstructorInvocation[50786-50886]:SuperConstructorInvocation[50786-50886]"
    }, {
      "left" : "this.handler = handler;",
      "right" : "this.handler = handler;",
      "info" : "ExpressionStatement[50896-50919]:ExpressionStatement[50896-50919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51002-51121]:Block[51002-51121]"
    }, {
      "left" : "if (!handler.handleEvent(event, invocation))",
      "right" : "if (!handler.handleEvent(event, invocation))",
      "info" : "IfStatement[51013-51113]:IfStatement[51013-51113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51058-51113]:Block[51058-51113]"
    }, {
      "left" : "super.doRealInvocation(event);",
      "right" : "super.doRealInvocation(event);",
      "info" : "ExpressionStatement[51072-51102]:ExpressionStatement[51072-51102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52077-52228]:Block[52077-52228]"
    }, {
      "left" : "super(invocation, filter, converter, annotation, onlyPrimary, true, identifier, sync, observation);",
      "right" : "super(invocation, filter, converter, annotation, onlyPrimary, true, identifier, sync, observation);",
      "info" : "SuperConstructorInvocation[52088-52187]:SuperConstructorInvocation[52088-52187]"
    }, {
      "left" : "this.handler = handler;",
      "right" : "this.handler = handler;",
      "info" : "ExpressionStatement[52197-52220]:ExpressionStatement[52197-52220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52290-52409]:Block[52290-52409]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Clustered initial transfer don't support regular events!\");",
      "right" : "throw new UnsupportedOperationException(\"Clustered initial transfer don't support regular events!\");",
      "info" : "ThrowStatement[52301-52401]:ThrowStatement[52301-52401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52484-52707]:Block[52484-52707]"
    }, {
      "left" : "if (!handler.handleEvent((CacheEntryEvent<K,V>)event, invocation))",
      "right" : "if (!handler.handleEvent((CacheEntryEvent<K,V>)event, invocation))",
      "info" : "IfStatement[52577-52699]:IfStatement[52577-52699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52644-52699]:Block[52644-52699]"
    }, {
      "left" : "super.doRealInvocation(event);",
      "right" : "super.doRealInvocation(event);",
      "info" : "ExpressionStatement[52658-52688]:ExpressionStatement[52658-52688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53955-54419]:Block[53955-54419]"
    }, {
      "left" : "this.invocation = invocation;",
      "right" : "this.invocation = invocation;",
      "info" : "ExpressionStatement[53966-53995]:ExpressionStatement[53966-53995]"
    }, {
      "left" : "this.filter = filter;",
      "right" : "this.filter = filter;",
      "info" : "ExpressionStatement[54005-54026]:ExpressionStatement[54005-54026]"
    }, {
      "left" : "this.converter = converter;",
      "right" : "this.converter = converter;",
      "info" : "ExpressionStatement[54036-54063]:ExpressionStatement[54036-54063]"
    }, {
      "left" : "this.filterAndConvert = filter instanceof CacheEventFilterConverter && (filter == converter || converter == null);",
      "right" : "this.filterAndConvert = filter instanceof CacheEventFilterConverter && (filter == converter || converter == null);",
      "info" : "ExpressionStatement[54073-54187]:ExpressionStatement[54073-54187]"
    }, {
      "left" : "this.onlyPrimary = onlyPrimary;",
      "right" : "this.onlyPrimary = onlyPrimary;",
      "info" : "ExpressionStatement[54197-54228]:ExpressionStatement[54197-54228]"
    }, {
      "left" : "this.clustered = clustered;",
      "right" : "this.clustered = clustered;",
      "info" : "ExpressionStatement[54238-54265]:ExpressionStatement[54238-54265]"
    }, {
      "left" : "this.identifier = identifier;",
      "right" : "this.identifier = identifier;",
      "info" : "ExpressionStatement[54275-54304]:ExpressionStatement[54275-54304]"
    }, {
      "left" : "this.annotation = annotation;",
      "right" : "this.annotation = annotation;",
      "info" : "ExpressionStatement[54314-54343]:ExpressionStatement[54314-54343]"
    }, {
      "left" : "this.sync = sync;",
      "right" : "this.sync = sync;",
      "info" : "ExpressionStatement[54353-54370]:ExpressionStatement[54353-54370]"
    }, {
      "left" : "this.observation = observation;",
      "right" : "this.observation = observation;",
      "info" : "ExpressionStatement[54380-54411]:ExpressionStatement[54380-54411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54778-55067]:Block[54828-55117]"
    }, {
      "left" : "CacheEntryEvent<K, V> resultingEvent = shouldInvoke(event, isLocalNodePrimaryOwner);",
      "right" : "CacheEntryEvent<K, V> resultingEvent = shouldInvoke(event, isLocalNodePrimaryOwner);",
      "info" : "VariableDeclarationStatement[54856-54940]:VariableDeclarationStatement[54906-54990]"
    }, {
      "left" : "if (resultingEvent != null)",
      "right" : "if (resultingEvent != null)",
      "info" : "IfStatement[54950-55059]:IfStatement[55000-55109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54978-55059]:Block[55028-55109]"
    }, {
      "left" : "invokeNoChecks(resultingEvent, false, filterAndConvert);",
      "right" : "invokeNoChecks(resultingEvent, false, filterAndConvert);",
      "info" : "ExpressionStatement[54992-55048]:ExpressionStatement[55042-55098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55329-55843]:Block[55379-55893]"
    }, {
      "left" : "CacheEntryEvent<K, V> eventToUse;",
      "right" : "CacheEntryEvent<K, V> eventToUse;",
      "info" : "VariableDeclarationStatement[55512-55545]:VariableDeclarationStatement[55562-55595]"
    }, {
      "left" : "if (!skipConverter)",
      "right" : "if (!skipConverter)",
      "info" : "IfStatement[55555-55694]:IfStatement[55605-55744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55575-55644]:Block[55625-55694]"
    }, {
      "left" : "eventToUse = convertValue(converter, event);",
      "right" : "eventToUse = convertValue(converter, event);",
      "info" : "ExpressionStatement[55589-55633]:ExpressionStatement[55639-55683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55650-55694]:Block[55700-55744]"
    }, {
      "left" : "eventToUse = event;",
      "right" : "eventToUse = event;",
      "info" : "ExpressionStatement[55664-55683]:ExpressionStatement[55714-55733]"
    }, {
      "left" : "if (skipQueue)",
      "right" : "if (skipQueue)",
      "info" : "IfStatement[55705-55835]:IfStatement[55755-55885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55720-55775]:Block[55770-55825]"
    }, {
      "left" : "invocation.invoke(eventToUse);",
      "right" : "invocation.invoke(eventToUse);",
      "info" : "ExpressionStatement[55734-55764]:ExpressionStatement[55784-55814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55781-55835]:Block[55831-55885]"
    }, {
      "left" : "doRealInvocation(eventToUse);",
      "right" : "doRealInvocation(eventToUse);",
      "info" : "ExpressionStatement[55795-55824]:ExpressionStatement[55845-55874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55902-55946]:Block[55952-55996]"
    }, {
      "left" : "invocation.invoke(event);",
      "right" : "invocation.invoke(event);",
      "info" : "ExpressionStatement[55913-55938]:ExpressionStatement[55963-55988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57688-58201]:Block[57803-58316]"
    }, {
      "left" : "switch (event.getType()) {\n            case CACHE_ENTRY_ACTIVATED:\n            case CACHE_ENTRY_CREATED:\n            case CACHE_ENTRY_INVALIDATED:\n            case CACHE_ENTRY_LOADED:\n            case CACHE_ENTRY_MODIFIED:\n            case CACHE_ENTRY_PASSIVATED:\n            case CACHE_ENTRY_REMOVED:\n            case CACHE_ENTRY_VISITED:\n               return new EventType(event.isCommandRetried(), event.isPre(), event.getType());\n            default:\n               return null;\n         }",
      "right" : "switch (event.getType()) {\n            case CACHE_ENTRY_ACTIVATED:\n            case CACHE_ENTRY_CREATED:\n            case CACHE_ENTRY_INVALIDATED:\n            case CACHE_ENTRY_LOADED:\n            case CACHE_ENTRY_MODIFIED:\n            case CACHE_ENTRY_PASSIVATED:\n            case CACHE_ENTRY_REMOVED:\n            case CACHE_ENTRY_VISITED:\n               return new EventType(event.isCommandRetried(), event.isPre(), event.getType());\n            default:\n               return null;\n         }",
      "info" : "SwitchStatement[57699-58193]:SwitchStatement[57814-58308]"
    }, {
      "left" : "case CACHE_ENTRY_ACTIVATED:",
      "right" : "case CACHE_ENTRY_ACTIVATED:",
      "info" : "SwitchCase[57738-57765]:SwitchCase[57853-57880]"
    }, {
      "left" : "case CACHE_ENTRY_CREATED:",
      "right" : "case CACHE_ENTRY_CREATED:",
      "info" : "SwitchCase[57778-57803]:SwitchCase[57893-57918]"
    }, {
      "left" : "case CACHE_ENTRY_INVALIDATED:",
      "right" : "case CACHE_ENTRY_INVALIDATED:",
      "info" : "SwitchCase[57816-57845]:SwitchCase[57931-57960]"
    }, {
      "left" : "case CACHE_ENTRY_LOADED:",
      "right" : "case CACHE_ENTRY_LOADED:",
      "info" : "SwitchCase[57858-57882]:SwitchCase[57973-57997]"
    }, {
      "left" : "case CACHE_ENTRY_MODIFIED:",
      "right" : "case CACHE_ENTRY_MODIFIED:",
      "info" : "SwitchCase[57895-57921]:SwitchCase[58010-58036]"
    }, {
      "left" : "case CACHE_ENTRY_PASSIVATED:",
      "right" : "case CACHE_ENTRY_PASSIVATED:",
      "info" : "SwitchCase[57934-57962]:SwitchCase[58049-58077]"
    }, {
      "left" : "case CACHE_ENTRY_REMOVED:",
      "right" : "case CACHE_ENTRY_REMOVED:",
      "info" : "SwitchCase[57975-58000]:SwitchCase[58090-58115]"
    }, {
      "left" : "case CACHE_ENTRY_VISITED:",
      "right" : "case CACHE_ENTRY_VISITED:",
      "info" : "SwitchCase[58013-58038]:SwitchCase[58128-58153]"
    }, {
      "left" : "return new EventType(event.isCommandRetried(), event.isPre(), event.getType());",
      "right" : "return new EventType(event.isCommandRetried(), event.isPre(), event.getType());",
      "info" : "ReturnStatement[58054-58133]:ReturnStatement[58169-58248]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[58146-58154]:SwitchCase[58261-58269]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[58170-58182]:ReturnStatement[58285-58297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58251-58300]:Block[58366-58415]"
    }, {
      "left" : "return invocation.getTarget();",
      "right" : "return invocation.getTarget();",
      "info" : "ReturnStatement[58262-58292]:ReturnStatement[58377-58407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58382-58415]:Block[58497-58530]"
    }, {
      "left" : "return filter;",
      "right" : "return filter;",
      "info" : "ReturnStatement[58393-58407]:ReturnStatement[58508-58522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58506-58542]:Block[58621-58657]"
    }, {
      "left" : "return converter;",
      "right" : "return converter;",
      "info" : "ReturnStatement[58517-58534]:ReturnStatement[58632-58649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58595-58631]:Block[58710-58746]"
    }, {
      "left" : "return clustered;",
      "right" : "return clustered;",
      "info" : "ReturnStatement[58606-58623]:ReturnStatement[58721-58738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58683-58720]:Block[58798-58835]"
    }, {
      "left" : "return identifier;",
      "right" : "return identifier;",
      "info" : "ReturnStatement[58694-58712]:ReturnStatement[58809-58827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58795-58832]:Block[58910-58947]"
    }, {
      "left" : "return annotation;",
      "right" : "return annotation;",
      "info" : "ReturnStatement[58806-58824]:ReturnStatement[58921-58939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58970-60165]:Block[59085-60280]"
    }, {
      "left" : "CacheEntryEvent<K, V> returnedEvent;",
      "right" : "CacheEntryEvent<K, V> returnedEvent;",
      "info" : "VariableDeclarationStatement[58981-59017]:VariableDeclarationStatement[59096-59132]"
    }, {
      "left" : "if (converter != null)",
      "right" : "if (converter != null)",
      "info" : "IfStatement[59027-60126]:IfStatement[59142-60241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59050-60073]:Block[59165-60188]"
    }, {
      "left" : "if (event instanceof EventImpl)",
      "right" : "if (event instanceof EventImpl)",
      "info" : "IfStatement[59064-60062]:IfStatement[59179-60177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59096-59805]:Block[59211-59920]"
    }, {
      "left" : "EventImpl<K, V> eventImpl = (EventImpl<K, V>)event;",
      "right" : "EventImpl<K, V> eventImpl = (EventImpl<K, V>)event;",
      "info" : "VariableDeclarationStatement[59197-59248]:VariableDeclarationStatement[59312-59363]"
    }, {
      "left" : "Object newValue = converter.convert(eventImpl.getKey(), (V) eventImpl.getOldValue(),\n                                 eventImpl.getOldMetadata(), (V) eventImpl.getValue(),\n                                 eventImpl.getMetadata(), null);",
      "right" : "Object newValue = converter.convert(eventImpl.getKey(), (V) eventImpl.getOldValue(),\n                                 eventImpl.getOldMetadata(), (V) eventImpl.getValue(),\n                                 eventImpl.getMetadata(), null);",
      "info" : "VariableDeclarationStatement[59264-59500]:VariableDeclarationStatement[59379-59615]"
    }, {
      "left" : "if (newValue != eventImpl.getValue())",
      "right" : "if (newValue != eventImpl.getValue())",
      "info" : "IfStatement[59516-59791]:IfStatement[59631-59906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59554-59722]:Block[59669-59837]"
    }, {
      "left" : "EventImpl<K, V> clone = eventImpl.clone();",
      "right" : "EventImpl<K, V> clone = eventImpl.clone();",
      "info" : "VariableDeclarationStatement[59574-59616]:VariableDeclarationStatement[59689-59731]"
    }, {
      "left" : "clone.setValue((V) newValue);",
      "right" : "clone.setValue((V) newValue);",
      "info" : "ExpressionStatement[59635-59664]:ExpressionStatement[59750-59779]"
    }, {
      "left" : "returnedEvent = clone;",
      "right" : "returnedEvent = clone;",
      "info" : "ExpressionStatement[59683-59705]:ExpressionStatement[59798-59820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59728-59791]:Block[59843-59906]"
    }, {
      "left" : "returnedEvent = eventImpl;",
      "right" : "returnedEvent = eventImpl;",
      "info" : "ExpressionStatement[59748-59774]:ExpressionStatement[59863-59889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59811-60062]:Block[59926-60177]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Provided event should be org.infinispan.notifications.cachelistener.event.impl.EventImpl \" +\n                                                        \"when a converter is being used!\");",
      "right" : "throw new IllegalArgumentException(\"Provided event should be org.infinispan.notifications.cachelistener.event.impl.EventImpl \" +\n                                                        \"when a converter is being used!\");",
      "info" : "ThrowStatement[59828-60048]:ThrowStatement[59943-60163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60079-60126]:Block[60194-60241]"
    }, {
      "left" : "returnedEvent = event;",
      "right" : "returnedEvent = event;",
      "info" : "ExpressionStatement[60093-60115]:ExpressionStatement[60208-60230]"
    }, {
      "left" : "return returnedEvent;",
      "right" : "return returnedEvent;",
      "info" : "ReturnStatement[60136-60157]:ReturnStatement[60251-60272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60213-60244]:Block[60328-60359]"
    }, {
      "left" : "return sync;",
      "right" : "return sync;",
      "info" : "ReturnStatement[60224-60236]:ReturnStatement[60339-60351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60311-60864]:Block[60426-60979]"
    }, {
      "left" : "super.removeListener(listener);",
      "right" : "super.removeListener(listener);",
      "info" : "ExpressionStatement[60319-60350]:ExpressionStatement[60434-60465]"
    }, {
      "left" : "UUID id = clusterListenerIDs.remove(listener);",
      "right" : "UUID id = clusterListenerIDs.remove(listener);",
      "info" : "VariableDeclarationStatement[60357-60403]:VariableDeclarationStatement[60472-60518]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[60410-60859]:IfStatement[60525-60974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60426-60859]:Block[60541-60974]"
    }, {
      "left" : "List<Future<?>> futures = distExecutorService.submitEverywhere(new ClusterListenerRemoveCallable(id));",
      "right" : "List<Future<?>> futures = distExecutorService.submitEverywhere(new ClusterListenerRemoveCallable(id));",
      "info" : "VariableDeclarationStatement[60437-60539]:VariableDeclarationStatement[60552-60654]"
    }, {
      "left" : "for (Future<?> future : futures)",
      "right" : "for (Future<?> future : futures)",
      "info" : "EnhancedForStatement[60549-60851]:EnhancedForStatement[60664-60966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60582-60851]:Block[60697-60966]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[60596-60840]:TryStatement[60711-60955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60600-60644]:Block[60715-60759]"
    }, {
      "left" : "future.get();",
      "right" : "future.get();",
      "info" : "ExpressionStatement[60617-60630]:ExpressionStatement[60732-60745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60676-60743]:Block[60791-60858]"
    }, {
      "left" : "throw new CacheListenerException(e);",
      "right" : "throw new CacheListenerException(e);",
      "info" : "ThrowStatement[60693-60729]:ThrowStatement[60808-60844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60773-60840]:Block[60888-60955]"
    }, {
      "left" : "throw new CacheListenerException(e);",
      "right" : "throw new CacheListenerException(e);",
      "info" : "ThrowStatement[60790-60826]:ThrowStatement[60905-60941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61014-61407]:Block[61129-61522]"
    }, {
      "left" : "Set<CacheEntryListenerInvocation<K, V>> markedForRemoval = super.removeListenerInvocation(annotation, listener);",
      "right" : "Set<CacheEntryListenerInvocation<K, V>> markedForRemoval = super.removeListenerInvocation(annotation, listener);",
      "info" : "VariableDeclarationStatement[61022-61134]:VariableDeclarationStatement[61137-61249]"
    }, {
      "left" : "for (CacheEntryListenerInvocation<K, V> li : markedForRemoval)",
      "right" : "for (CacheEntryListenerInvocation<K, V> li : markedForRemoval)",
      "info" : "EnhancedForStatement[61141-61371]:EnhancedForStatement[61256-61486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61204-61371]:Block[61319-61486]"
    }, {
      "left" : "if (li instanceof DelegatingCacheEntryListenerInvocation)",
      "right" : "if (li instanceof DelegatingCacheEntryListenerInvocation)",
      "info" : "IfStatement[61215-61363]:IfStatement[61330-61478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61273-61363]:Block[61388-61478]"
    }, {
      "left" : "((DelegatingCacheEntryListenerInvocation<K, V>) li).unregister();",
      "right" : "((DelegatingCacheEntryListenerInvocation<K, V>) li).unregister();",
      "info" : "ExpressionStatement[61287-61352]:ExpressionStatement[61402-61467]"
    }, {
      "left" : "return markedForRemoval;",
      "right" : "return markedForRemoval;",
      "info" : "ReturnStatement[61378-61402]:ReturnStatement[61493-61517]"
    } ]
  },
  "interFileMappings" : { }
}