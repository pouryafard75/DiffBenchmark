{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final ClassInstantiator classInstantiator;",
      "right" : "private final ClassInstantiator classInstantiator;",
      "info" : "FieldDeclaration[591-641]:FieldDeclaration[591-641]"
    }, {
      "left" : "private final CachingMockBytecodeGenerator cachingMockBytecodeGenerator;",
      "right" : "private final CachingMockBytecodeGenerator cachingMockBytecodeGenerator;",
      "info" : "FieldDeclaration[646-718]:FieldDeclaration[646-718]"
    }, {
      "left" : "public ByteBuddyMockMaker()",
      "right" : "public ByteBuddyMockMaker()",
      "info" : "MethodDeclaration[724-893]:MethodDeclaration[724-893]"
    }, {
      "left" : "private <T> T ensureMockIsAssignableToMockedType(MockCreationSettings<T> settings, T mock)",
      "right" : "private <T> T ensureMockIsAssignableToMockedType(MockCreationSettings<T> settings, T mock)",
      "info" : "MethodDeclaration[2719-3114]:MethodDeclaration[2799-3194]"
    }, {
      "left" : "private static String describeClass(Class type)",
      "right" : "private static String describeClass(Class type)",
      "info" : "MethodDeclaration[3120-3308]:MethodDeclaration[3200-3388]"
    }, {
      "left" : "private static String describeClass(Object instance)",
      "right" : "private static String describeClass(Object instance)",
      "info" : "MethodDeclaration[3314-3453]:MethodDeclaration[3394-3533]"
    }, {
      "left" : "public MockHandler getHandler(Object mock)",
      "right" : "public MockHandler getHandler(Object mock)",
      "info" : "MethodDeclaration[3459-3710]:MethodDeclaration[3539-3790]"
    }, {
      "left" : "public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings)",
      "right" : "public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings)",
      "info" : "MethodDeclaration[3716-3984]:MethodDeclaration[3796-4064]"
    }, {
      "left" : "private static ClassInstantiator initializeClassInstantiator()",
      "right" : "private static ClassInstantiator initializeClassInstantiator()",
      "info" : "MethodDeclaration[3990-4938]:MethodDeclaration[4070-5018]"
    }, {
      "left" : "private static InternalMockHandler asInternalMockHandler(MockHandler handler)",
      "right" : "private static InternalMockHandler asInternalMockHandler(MockHandler handler)",
      "info" : "MethodDeclaration[4944-5394]:MethodDeclaration[5024-5474]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[724-730]:Modifier[724-730]"
    }, {
      "left" : "ByteBuddyMockMaker",
      "right" : "ByteBuddyMockMaker",
      "info" : "SimpleName[731-749]:SimpleName[731-749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[752-893]:Block[752-893]"
    }, {
      "left" : "classInstantiator = initializeClassInstantiator();",
      "right" : "classInstantiator = initializeClassInstantiator();",
      "info" : "ExpressionStatement[762-812]:ExpressionStatement[762-812]"
    }, {
      "left" : "cachingMockBytecodeGenerator = new CachingMockBytecodeGenerator();",
      "right" : "cachingMockBytecodeGenerator = new CachingMockBytecodeGenerator();",
      "info" : "ExpressionStatement[821-887]:ExpressionStatement[821-887]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2719-2726]:Modifier[2799-2806]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[2728-2729]:TypeParameter[2808-2809]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[2731-2732]:SimpleType[2811-2812]"
    }, {
      "left" : "ensureMockIsAssignableToMockedType",
      "right" : "ensureMockIsAssignableToMockedType",
      "info" : "SimpleName[2733-2767]:SimpleName[2813-2847]"
    }, {
      "left" : "MockCreationSettings<T> settings",
      "right" : "MockCreationSettings<T> settings",
      "info" : "SingleVariableDeclaration[2768-2800]:SingleVariableDeclaration[2848-2880]"
    }, {
      "left" : "T mock",
      "right" : "T mock",
      "info" : "SingleVariableDeclaration[2802-2808]:SingleVariableDeclaration[2882-2888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2810-3114]:Block[2890-3194]"
    }, {
      "left" : "Class<T> typeToMock = settings.getTypeToMock();",
      "right" : "Class<T> typeToMock = settings.getTypeToMock();",
      "info" : "VariableDeclarationStatement[3023-3070]:VariableDeclarationStatement[3103-3150]"
    }, {
      "left" : "return typeToMock.cast(mock);",
      "right" : "return typeToMock.cast(mock);",
      "info" : "ReturnStatement[3079-3108]:ReturnStatement[3159-3188]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3120-3127]:Modifier[3200-3207]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3128-3134]:Modifier[3208-3214]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3135-3141]:SimpleType[3215-3221]"
    }, {
      "left" : "describeClass",
      "right" : "describeClass",
      "info" : "SimpleName[3142-3155]:SimpleName[3222-3235]"
    }, {
      "left" : "Class type",
      "right" : "Class type",
      "info" : "SingleVariableDeclaration[3156-3166]:SingleVariableDeclaration[3236-3246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3168-3308]:Block[3248-3388]"
    }, {
      "left" : "return type == null ? \"null\" : \"'\" + type.getCanonicalName() + \"', loaded by classloader : '\" + type.getClassLoader() + \"'\";",
      "right" : "return type == null ? \"null\" : \"'\" + type.getCanonicalName() + \"', loaded by classloader : '\" + type.getClassLoader() + \"'\";",
      "info" : "ReturnStatement[3178-3302]:ReturnStatement[3258-3382]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3314-3321]:Modifier[3394-3401]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3322-3328]:Modifier[3402-3408]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3329-3335]:SimpleType[3409-3415]"
    }, {
      "left" : "describeClass",
      "right" : "describeClass",
      "info" : "SimpleName[3336-3349]:SimpleName[3416-3429]"
    }, {
      "left" : "Object instance",
      "right" : "Object instance",
      "info" : "SingleVariableDeclaration[3350-3365]:SingleVariableDeclaration[3430-3445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3367-3453]:Block[3447-3533]"
    }, {
      "left" : "return instance == null ? \"null\" : describeClass(instance.getClass());",
      "right" : "return instance == null ? \"null\" : describeClass(instance.getClass());",
      "info" : "ReturnStatement[3377-3447]:ReturnStatement[3457-3527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3459-3465]:Modifier[3539-3545]"
    }, {
      "left" : "MockHandler",
      "right" : "MockHandler",
      "info" : "SimpleType[3466-3477]:SimpleType[3546-3557]"
    }, {
      "left" : "getHandler",
      "right" : "getHandler",
      "info" : "SimpleName[3478-3488]:SimpleName[3558-3568]"
    }, {
      "left" : "Object mock",
      "right" : "Object mock",
      "info" : "SingleVariableDeclaration[3489-3500]:SingleVariableDeclaration[3569-3580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3502-3710]:Block[3582-3790]"
    }, {
      "left" : "if (!(mock instanceof MockMethodInterceptor.MockAccess))",
      "right" : "if (!(mock instanceof MockMethodInterceptor.MockAccess))",
      "info" : "IfStatement[3512-3605]:IfStatement[3592-3685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3569-3605]:Block[3649-3685]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3583-3595]:ReturnStatement[3663-3675]"
    }, {
      "left" : "return ((MockMethodInterceptor.MockAccess) mock).getMockitoInterceptor().getMockHandler();",
      "right" : "return ((MockMethodInterceptor.MockAccess) mock).getMockitoInterceptor().getMockHandler();",
      "info" : "ReturnStatement[3614-3704]:ReturnStatement[3694-3784]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3716-3722]:Modifier[3796-3802]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3723-3727]:PrimitiveType[3803-3807]"
    }, {
      "left" : "resetMock",
      "right" : "resetMock",
      "info" : "SimpleName[3728-3737]:SimpleName[3808-3817]"
    }, {
      "left" : "Object mock",
      "right" : "Object mock",
      "info" : "SingleVariableDeclaration[3738-3749]:SingleVariableDeclaration[3818-3829]"
    }, {
      "left" : "MockHandler newHandler",
      "right" : "MockHandler newHandler",
      "info" : "SingleVariableDeclaration[3751-3773]:SingleVariableDeclaration[3831-3853]"
    }, {
      "left" : "MockCreationSettings settings",
      "right" : "MockCreationSettings settings",
      "info" : "SingleVariableDeclaration[3775-3804]:SingleVariableDeclaration[3855-3884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3806-3984]:Block[3886-4064]"
    }, {
      "left" : "((MockMethodInterceptor.MockAccess) mock).setMockitoInterceptor(\n                new MockMethodInterceptor(asInternalMockHandler(newHandler), settings)\n        );",
      "right" : "((MockMethodInterceptor.MockAccess) mock).setMockitoInterceptor(\n                new MockMethodInterceptor(asInternalMockHandler(newHandler), settings)\n        );",
      "info" : "ExpressionStatement[3816-3978]:ExpressionStatement[3896-4058]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3990-3997]:Modifier[4070-4077]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3998-4004]:Modifier[4078-4084]"
    }, {
      "left" : "ClassInstantiator",
      "right" : "ClassInstantiator",
      "info" : "SimpleType[4005-4022]:SimpleType[4085-4102]"
    }, {
      "left" : "initializeClassInstantiator",
      "right" : "initializeClassInstantiator",
      "info" : "SimpleName[4023-4050]:SimpleName[4103-4130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4053-4938]:Block[4133-5018]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4063-4932]:TryStatement[4143-5012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4067-4464]:Block[4147-4544]"
    }, {
      "left" : "Class<?> objenesisClassLoader = Class.forName(\"org.mockito.internal.creation.bytebuddy.ClassInstantiator$UsingObjenesis\");",
      "right" : "Class<?> objenesisClassLoader = Class.forName(\"org.mockito.internal.creation.bytebuddy.ClassInstantiator$UsingObjenesis\");",
      "info" : "VariableDeclarationStatement[4081-4203]:VariableDeclarationStatement[4161-4283]"
    }, {
      "left" : "Constructor<?> usingClassCacheConstructor = objenesisClassLoader.getDeclaredConstructor(boolean.class);",
      "right" : "Constructor<?> usingClassCacheConstructor = objenesisClassLoader.getDeclaredConstructor(boolean.class);",
      "info" : "VariableDeclarationStatement[4216-4319]:VariableDeclarationStatement[4296-4399]"
    }, {
      "left" : "return ClassInstantiator.class.cast(usingClassCacheConstructor.newInstance(new GlobalConfiguration().enableClassCache()));",
      "right" : "return ClassInstantiator.class.cast(usingClassCacheConstructor.newInstance(new GlobalConfiguration().enableClassCache()));",
      "info" : "ReturnStatement[4332-4454]:ReturnStatement[4412-4534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4493-4932]:Block[4573-5012]"
    }, {
      "left" : "throw new IllegalStateException(join(\n                    \"Mockito could not create mock: Objenesis is missing on the classpath.\",\n                    \"Please add Objenesis on the classpath.\",\n                    \"\"\n            ), throwable);",
      "right" : "throw new IllegalStateException(join(\n                    \"Mockito could not create mock: Objenesis is missing on the classpath.\",\n                    \"Please add Objenesis on the classpath.\",\n                    \"\"\n            ), throwable);",
      "info" : "ThrowStatement[4680-4922]:ThrowStatement[4760-5002]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4944-4951]:Modifier[5024-5031]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4952-4958]:Modifier[5032-5038]"
    }, {
      "left" : "InternalMockHandler",
      "right" : "InternalMockHandler",
      "info" : "SimpleType[4959-4978]:SimpleType[5039-5058]"
    }, {
      "left" : "asInternalMockHandler",
      "right" : "asInternalMockHandler",
      "info" : "SimpleName[4979-5000]:SimpleName[5059-5080]"
    }, {
      "left" : "MockHandler handler",
      "right" : "MockHandler handler",
      "info" : "SingleVariableDeclaration[5001-5020]:SingleVariableDeclaration[5081-5100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5022-5394]:Block[5102-5474]"
    }, {
      "left" : "if (!(handler instanceof InternalMockHandler))",
      "right" : "if (!(handler instanceof InternalMockHandler))",
      "info" : "IfStatement[5032-5342]:IfStatement[5112-5422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5079-5342]:Block[5159-5422]"
    }, {
      "left" : "throw new MockitoException(join(\n                    \"At the moment you cannot provide own implementations of MockHandler.\",\n                    \"Please see the javadocs for the MockMaker interface.\",\n                    \"\"\n            ));",
      "right" : "throw new MockitoException(join(\n                    \"At the moment you cannot provide own implementations of MockHandler.\",\n                    \"Please see the javadocs for the MockMaker interface.\",\n                    \"\"\n            ));",
      "info" : "ThrowStatement[5093-5332]:ThrowStatement[5173-5412]"
    }, {
      "left" : "return (InternalMockHandler) handler;",
      "right" : "return (InternalMockHandler) handler;",
      "info" : "ReturnStatement[5351-5388]:ReturnStatement[5431-5468]"
    } ]
  },
  "interFileMappings" : { }
}