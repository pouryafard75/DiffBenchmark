{
  "matchedElements" : [
 {
    "left" : "class : EventState",
    "right" : "class : EventState",
    "info" : "TypeDeclaration[1259-13376]:TypeDeclaration[1259-13968]"
  }, {
    "left" : "handler",
    "right" : "handler",
    "info" : "FieldDeclaration[1923-1984]:FieldDeclaration[1923-1984]"
  }, {
    "left" : "maxCheckInterval",
    "right" : "maxCheckInterval",
    "info" : "FieldDeclaration[1990-2092]:FieldDeclaration[1990-2092]"
  }, {
    "left" : "convergence",
    "right" : "convergence",
    "info" : "FieldDeclaration[2098-2188]:FieldDeclaration[2098-2188]"
  }, {
    "left" : "maxIterationCount",
    "right" : "maxIterationCount",
    "info" : "FieldDeclaration[2194-2300]:FieldDeclaration[2194-2300]"
  }, {
    "left" : "t0",
    "right" : "t0",
    "info" : "FieldDeclaration[2306-2370]:FieldDeclaration[2306-2370]"
  }, {
    "left" : "g0",
    "right" : "g0",
    "info" : "FieldDeclaration[2376-2463]:FieldDeclaration[2376-2463]"
  }, {
    "left" : "g0Positive",
    "right" : "g0Positive",
    "info" : "FieldDeclaration[2469-2561]:FieldDeclaration[2469-2561]"
  }, {
    "left" : "pendingEvent",
    "right" : "pendingEvent",
    "info" : "FieldDeclaration[2567-2652]:FieldDeclaration[2567-2652]"
  }, {
    "left" : "pendingEventTime",
    "right" : "pendingEventTime",
    "info" : "FieldDeclaration[2658-2739]:FieldDeclaration[2658-2739]"
  }, {
    "left" : "previousEventTime",
    "right" : "previousEventTime",
    "info" : "FieldDeclaration[2745-2828]:FieldDeclaration[2745-2828]"
  }, {
    "left" : "forward",
    "right" : "forward",
    "info" : "FieldDeclaration[2834-2892]:FieldDeclaration[2834-2892]"
  }, {
    "left" : "increasing",
    "right" : "increasing",
    "info" : "FieldDeclaration[2898-3054]:FieldDeclaration[2898-3054]"
  }, {
    "left" : "nextAction",
    "right" : "nextAction",
    "info" : "FieldDeclaration[3060-3117]:FieldDeclaration[3060-3117]"
  }, {
    "left" : "public EventState(handler , maxCheckInterval double, convergence double, maxIterationCount int)",
    "right" : "public EventState(handler , maxCheckInterval double, convergence double, maxIterationCount int)",
    "info" : "MethodDeclaration[3123-4274]:MethodDeclaration[3123-4274]"
  }, {
    "left" : "public getEventHandler() : ",
    "right" : "public getEventHandler() : ",
    "info" : "MethodDeclaration[4280-4439]:MethodDeclaration[4280-4439]"
  }, {
    "left" : "public getMaxCheckInterval() : double",
    "right" : "public getMaxCheckInterval() : double",
    "info" : "MethodDeclaration[4445-4665]:MethodDeclaration[4445-4665]"
  }, {
    "left" : "public getConvergence() : double",
    "right" : "public getConvergence() : double",
    "info" : "MethodDeclaration[4671-4867]:MethodDeclaration[4671-4867]"
  }, {
    "left" : "public getMaxIterationCount() : int",
    "right" : "public getMaxIterationCount() : int",
    "info" : "MethodDeclaration[4873-5104]:MethodDeclaration[4873-5104]"
  }, {
    "left" : "public reinitializeBegin(tStart double, yStart ) : void",
    "right" : "public reinitializeBegin(tStart double, yStart ) : void",
    "info" : "MethodDeclaration[5110-5699]:MethodDeclaration[5110-5699]"
  }, {
    "left" : "public evaluateStep(interpolator ) : boolean",
    "right" : "public evaluateStep(interpolator ) : boolean",
    "info" : "MethodDeclaration[5705-11099]:MethodDeclaration[5705-11691]"
  }, {
    "left" : "public value(t double) : double",
    "right" : "public value(t double) : double",
    "info" : "MethodDeclaration[8159-8753]:MethodDeclaration[8751-9345]"
  }, {
    "left" : "public getEventTime() : double",
    "right" : "public getEventTime() : double",
    "info" : "MethodDeclaration[11105-11347]:MethodDeclaration[11697-11939]"
  }, {
    "left" : "public stepAccepted(t double, y ) : void",
    "right" : "public stepAccepted(t double, y ) : void",
    "info" : "MethodDeclaration[11353-12235]:MethodDeclaration[11945-12827]"
  }, {
    "left" : "public stop() : boolean",
    "right" : "public stop() : boolean",
    "info" : "MethodDeclaration[12241-12473]:MethodDeclaration[12833-13065]"
  }, {
    "left" : "public reset(t double, y ) : boolean",
    "right" : "public reset(t double, y ) : boolean",
    "info" : "MethodDeclaration[12479-13373]:MethodDeclaration[13071-13965]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3563-3569]:Modifier[3563-3569]"
  }, {
    "left" : "EventState",
    "right" : "EventState",
    "info" : "SimpleName[3570-3580]:SimpleName[3570-3580]"
  }, {
    "left" : "final EventHandler handler",
    "right" : "final EventHandler handler",
    "info" : "SingleVariableDeclaration[3581-3607]:SingleVariableDeclaration[3581-3607]"
  }, {
    "left" : "final double maxCheckInterval",
    "right" : "final double maxCheckInterval",
    "info" : "SingleVariableDeclaration[3609-3638]:SingleVariableDeclaration[3609-3638]"
  }, {
    "left" : "final double convergence",
    "right" : "final double convergence",
    "info" : "SingleVariableDeclaration[3662-3686]:SingleVariableDeclaration[3662-3686]"
  }, {
    "left" : "final int maxIterationCount",
    "right" : "final int maxIterationCount",
    "info" : "SingleVariableDeclaration[3688-3715]:SingleVariableDeclaration[3688-3715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3717-4274]:Block[3717-4274]"
  }, {
    "left" : "this.handler           = handler;",
    "right" : "this.handler           = handler;",
    "info" : "ExpressionStatement[3727-3760]:ExpressionStatement[3727-3760]"
  }, {
    "left" : "this.maxCheckInterval  = maxCheckInterval;",
    "right" : "this.maxCheckInterval  = maxCheckInterval;",
    "info" : "ExpressionStatement[3769-3811]:ExpressionStatement[3769-3811]"
  }, {
    "left" : "this.convergence       = Math.abs(convergence);",
    "right" : "this.convergence       = Math.abs(convergence);",
    "info" : "ExpressionStatement[3820-3867]:ExpressionStatement[3820-3867]"
  }, {
    "left" : "this.maxIterationCount = maxIterationCount;",
    "right" : "this.maxIterationCount = maxIterationCount;",
    "info" : "ExpressionStatement[3876-3919]:ExpressionStatement[3876-3919]"
  }, {
    "left" : "t0                = Double.NaN;",
    "right" : "t0                = Double.NaN;",
    "info" : "ExpressionStatement[3962-3993]:ExpressionStatement[3962-3993]"
  }, {
    "left" : "g0                = Double.NaN;",
    "right" : "g0                = Double.NaN;",
    "info" : "ExpressionStatement[4002-4033]:ExpressionStatement[4002-4033]"
  }, {
    "left" : "g0Positive        = true;",
    "right" : "g0Positive        = true;",
    "info" : "ExpressionStatement[4042-4067]:ExpressionStatement[4042-4067]"
  }, {
    "left" : "pendingEvent      = false;",
    "right" : "pendingEvent      = false;",
    "info" : "ExpressionStatement[4076-4102]:ExpressionStatement[4076-4102]"
  }, {
    "left" : "pendingEventTime  = Double.NaN;",
    "right" : "pendingEventTime  = Double.NaN;",
    "info" : "ExpressionStatement[4111-4142]:ExpressionStatement[4111-4142]"
  }, {
    "left" : "previousEventTime = Double.NaN;",
    "right" : "previousEventTime = Double.NaN;",
    "info" : "ExpressionStatement[4151-4182]:ExpressionStatement[4151-4182]"
  }, {
    "left" : "increasing        = true;",
    "right" : "increasing        = true;",
    "info" : "ExpressionStatement[4191-4216]:ExpressionStatement[4191-4216]"
  }, {
    "left" : "nextAction        = EventHandler.CONTINUE;",
    "right" : "nextAction        = EventHandler.CONTINUE;",
    "info" : "ExpressionStatement[4225-4267]:ExpressionStatement[4225-4267]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4370-4376]:Modifier[4370-4376]"
  }, {
    "left" : "EventHandler",
    "right" : "EventHandler",
    "info" : "SimpleType[4377-4389]:SimpleType[4377-4389]"
  }, {
    "left" : "getEventHandler",
    "right" : "getEventHandler",
    "info" : "SimpleName[4390-4405]:SimpleName[4390-4405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4408-4439]:Block[4408-4439]"
  }, {
    "left" : "return handler;",
    "right" : "return handler;",
    "info" : "ReturnStatement[4418-4433]:ReturnStatement[4418-4433]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4589-4595]:Modifier[4589-4595]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[4596-4602]:PrimitiveType[4596-4602]"
  }, {
    "left" : "getMaxCheckInterval",
    "right" : "getMaxCheckInterval",
    "info" : "SimpleName[4603-4622]:SimpleName[4603-4622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4625-4665]:Block[4625-4665]"
  }, {
    "left" : "return maxCheckInterval;",
    "right" : "return maxCheckInterval;",
    "info" : "ReturnStatement[4635-4659]:ReturnStatement[4635-4659]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4801-4807]:Modifier[4801-4807]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[4808-4814]:PrimitiveType[4808-4814]"
  }, {
    "left" : "getConvergence",
    "right" : "getConvergence",
    "info" : "SimpleName[4815-4829]:SimpleName[4815-4829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4832-4867]:Block[4832-4867]"
  }, {
    "left" : "return convergence;",
    "right" : "return convergence;",
    "info" : "ReturnStatement[4842-4861]:ReturnStatement[4842-4861]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5029-5035]:Modifier[5029-5035]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[5036-5039]:PrimitiveType[5036-5039]"
  }, {
    "left" : "getMaxIterationCount",
    "right" : "getMaxIterationCount",
    "info" : "SimpleName[5040-5060]:SimpleName[5040-5060]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5063-5104]:Block[5063-5104]"
  }, {
    "left" : "return maxIterationCount;",
    "right" : "return maxIterationCount;",
    "info" : "ReturnStatement[5073-5098]:ReturnStatement[5073-5098]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5497-5503]:Modifier[5497-5503]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5504-5508]:PrimitiveType[5504-5508]"
  }, {
    "left" : "reinitializeBegin",
    "right" : "reinitializeBegin",
    "info" : "SimpleName[5509-5526]:SimpleName[5509-5526]"
  }, {
    "left" : "final double tStart",
    "right" : "final double tStart",
    "info" : "SingleVariableDeclaration[5527-5546]:SingleVariableDeclaration[5527-5546]"
  }, {
    "left" : "final double[] yStart",
    "right" : "final double[] yStart",
    "info" : "SingleVariableDeclaration[5548-5569]:SingleVariableDeclaration[5548-5569]"
  }, {
    "left" : "EventException",
    "right" : "EventException",
    "info" : "SimpleType[5586-5600]:SimpleType[5586-5600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5601-5699]:Block[5601-5699]"
  }, {
    "left" : "t0 = tStart;",
    "right" : "t0 = tStart;",
    "info" : "ExpressionStatement[5611-5623]:ExpressionStatement[5611-5623]"
  }, {
    "left" : "g0 = handler.g(tStart, yStart);",
    "right" : "g0 = handler.g(tStart, yStart);",
    "info" : "ExpressionStatement[5632-5663]:ExpressionStatement[5632-5663]"
  }, {
    "left" : "g0Positive = g0 >= 0;",
    "right" : "g0Positive = g0 >= 0;",
    "info" : "ExpressionStatement[5672-5693]:ExpressionStatement[5672-5693]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6289-6295]:Modifier[6289-6295]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6296-6303]:PrimitiveType[6296-6303]"
  }, {
    "left" : "evaluateStep",
    "right" : "evaluateStep",
    "info" : "SimpleName[6304-6316]:SimpleName[6304-6316]"
  }, {
    "left" : "final StepInterpolator interpolator",
    "right" : "final StepInterpolator interpolator",
    "info" : "SingleVariableDeclaration[6317-6352]:SingleVariableDeclaration[6317-6352]"
  }, {
    "left" : "DerivativeException",
    "right" : "DerivativeException",
    "info" : "SimpleType[6369-6388]:SimpleType[6369-6388]"
  }, {
    "left" : "EventException",
    "right" : "EventException",
    "info" : "SimpleType[6390-6404]:SimpleType[6390-6404]"
  }, {
    "left" : "ConvergenceException",
    "right" : "ConvergenceException",
    "info" : "SimpleType[6406-6426]:SimpleType[6406-6426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6427-11099]:Block[6427-11691]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[6438-11092]:TryStatement[6438-11684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6442-10684]:Block[6442-11276]"
  }, {
    "left" : "forward = interpolator.isForward();",
    "right" : "forward = interpolator.isForward();",
    "info" : "ExpressionStatement[6457-6492]:ExpressionStatement[6457-6492]"
  }, {
    "left" : "final double t1 = interpolator.getCurrentTime();",
    "right" : "final double t1 = interpolator.getCurrentTime();",
    "info" : "VariableDeclarationStatement[6505-6553]:VariableDeclarationStatement[6505-6553]"
  }, {
    "left" : "final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));",
    "right" : "final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));",
    "info" : "VariableDeclarationStatement[6566-6651]:VariableDeclarationStatement[6566-6651]"
  }, {
    "left" : "final double h  = (t1 - t0) / n;",
    "right" : "final double h  = (t1 - t0) / n;",
    "info" : "VariableDeclarationStatement[6664-6696]:VariableDeclarationStatement[6664-6696]"
  }, {
    "left" : "double ta = t0;",
    "right" : "double ta = t0;",
    "info" : "VariableDeclarationStatement[6710-6725]:VariableDeclarationStatement[6710-6725]"
  }, {
    "left" : "double ga = g0;",
    "right" : "double ga = g0;",
    "info" : "VariableDeclarationStatement[6738-6753]:VariableDeclarationStatement[6738-6753]"
  }, {
    "left" : "double tb = t0 + (interpolator.isForward() ? convergence : -convergence);",
    "right" : "double tb = t0 + (interpolator.isForward() ? convergence : -convergence);",
    "info" : "VariableDeclarationStatement[6766-6839]:VariableDeclarationStatement[6766-6839]"
  }, {
    "left" : "for (int i = 0; i < n; ++i)",
    "right" : "for (int i = 0; i < n; ++i)",
    "info" : "ForStatement[6852-10519]:ForStatement[6852-11111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6880-10519]:Block[6880-11111]"
  }, {
    "left" : "tb += h;",
    "right" : "tb += h;",
    "info" : "ExpressionStatement[6967-6975]:ExpressionStatement[6967-6975]"
  }, {
    "left" : "interpolator.setInterpolatedTime(tb);",
    "right" : "interpolator.setInterpolatedTime(tb);",
    "info" : "ExpressionStatement[6992-7029]:ExpressionStatement[6992-7029]"
  }, {
    "left" : "final double gb = handler.g(tb, interpolator.getInterpolatedState());",
    "right" : "final double gb = handler.g(tb, interpolator.getInterpolatedState());",
    "info" : "VariableDeclarationStatement[7046-7115]:VariableDeclarationStatement[7046-7115]"
  }, {
    "left" : "if (g0Positive ^ (gb >= 0))",
    "right" : "if (g0Positive ^ (gb >= 0))",
    "info" : "IfStatement[7176-10504]:IfStatement[7176-11096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7204-10356]:Block[7204-10948]"
  }, {
    "left" : "increasing = gb >= ga;",
    "right" : "increasing = gb >= ga;",
    "info" : "ExpressionStatement[8027-8049]:ExpressionStatement[8619-8641]"
  }, {
    "left" : "final UnivariateRealFunction f = new UnivariateRealFunction() {\n                        public double value(final double t) throws FunctionEvaluationException {\n                            try {\n                                interpolator.setInterpolatedTime(t);\n                                return handler.g(t, interpolator.getInterpolatedState());\n                            } catch (DerivativeException e) {\n                                throw new FunctionEvaluationException(e, t);\n                            } catch (EventException e) {\n                                throw new FunctionEvaluationException(e, t);\n                            }\n                        }\n                    };",
    "right" : "final UnivariateRealFunction f = new UnivariateRealFunction() {\n                        public double value(final double t) throws FunctionEvaluationException {\n                            try {\n                                interpolator.setInterpolatedTime(t);\n                                return handler.g(t, interpolator.getInterpolatedState());\n                            } catch (DerivativeException e) {\n                                throw new FunctionEvaluationException(e, t);\n                            } catch (EventException e) {\n                                throw new FunctionEvaluationException(e, t);\n                            }\n                        }\n                    };",
    "info" : "VariableDeclarationStatement[8071-8776]:VariableDeclarationStatement[8663-9368]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8159-8165]:Modifier[8751-8757]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[8166-8172]:PrimitiveType[8758-8764]"
  }, {
    "left" : "value",
    "right" : "value",
    "info" : "SimpleName[8173-8178]:SimpleName[8765-8770]"
  }, {
    "left" : "final double t",
    "right" : "final double t",
    "info" : "SingleVariableDeclaration[8179-8193]:SingleVariableDeclaration[8771-8785]"
  }, {
    "left" : "FunctionEvaluationException",
    "right" : "FunctionEvaluationException",
    "info" : "SimpleType[8202-8229]:SimpleType[8794-8821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8230-8753]:Block[8822-9345]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[8260-8727]:TryStatement[8852-9319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8264-8454]:Block[8856-9046]"
  }, {
    "left" : "interpolator.setInterpolatedTime(t);",
    "right" : "interpolator.setInterpolatedTime(t);",
    "info" : "ExpressionStatement[8298-8334]:ExpressionStatement[8890-8926]"
  }, {
    "left" : "return handler.g(t, interpolator.getInterpolatedState());",
    "right" : "return handler.g(t, interpolator.getInterpolatedState());",
    "info" : "ReturnStatement[8367-8424]:ReturnStatement[8959-9016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8485-8593]:Block[9077-9185]"
  }, {
    "left" : "throw new FunctionEvaluationException(e, t);",
    "right" : "throw new FunctionEvaluationException(e, t);",
    "info" : "ThrowStatement[8519-8563]:ThrowStatement[9111-9155]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8619-8727]:Block[9211-9319]"
  }, {
    "left" : "throw new FunctionEvaluationException(e, t);",
    "right" : "throw new FunctionEvaluationException(e, t);",
    "info" : "ThrowStatement[8653-8697]:ThrowStatement[9245-9289]"
  }, {
    "left" : "final BrentSolver solver = new BrentSolver();",
    "right" : "final BrentSolver solver = new BrentSolver();",
    "info" : "VariableDeclarationStatement[8797-8842]:VariableDeclarationStatement[9389-9434]"
  }, {
    "left" : "solver.setAbsoluteAccuracy(convergence);",
    "right" : "solver.setAbsoluteAccuracy(convergence);",
    "info" : "ExpressionStatement[8863-8903]:ExpressionStatement[9455-9495]"
  }, {
    "left" : "solver.setMaximalIterationCount(maxIterationCount);",
    "right" : "solver.setMaximalIterationCount(maxIterationCount);",
    "info" : "ExpressionStatement[8924-8975]:ExpressionStatement[9516-9567]"
  }, {
    "left" : "final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);",
    "right" : "final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);",
    "info" : "VariableDeclarationStatement[8996-9079]:VariableDeclarationStatement[9588-9671]"
  }, {
    "left" : "if ((Math.abs(root - ta) <= convergence) &&\n                         (Math.abs(root - previousEventTime) <= convergence))",
    "right" : "if ((Math.abs(root - ta) <= convergence) &&\n                         (Math.abs(root - previousEventTime) <= convergence))",
    "info" : "IfStatement[9100-10337]:IfStatement[9692-10929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9222-9420]:Block[9814-10012]"
  }, {
    "left" : "ta = tb;",
    "right" : "ta = tb;",
    "info" : "ExpressionStatement[9357-9365]:ExpressionStatement[9949-9957]"
  }, {
    "left" : "ga = gb;",
    "right" : "ga = gb;",
    "info" : "ExpressionStatement[9390-9398]:ExpressionStatement[9982-9990]"
  }, {
    "left" : "if (Double.isNaN(previousEventTime) ||\n                               (Math.abs(previousEventTime - root) > convergence))",
    "right" : "if (Double.isNaN(previousEventTime) ||\n                               (Math.abs(previousEventTime - root) > convergence))",
    "info" : "IfStatement[9426-10337]:IfStatement[10018-10929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9548-10337]:Block[10140-10929]"
  }, {
    "left" : "pendingEventTime = root;",
    "right" : "pendingEventTime = root;",
    "info" : "ExpressionStatement[9574-9598]:ExpressionStatement[10166-10190]"
  }, {
    "left" : "if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence))",
    "right" : "if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence))",
    "info" : "IfStatement[9623-10080]:IfStatement[10215-10672]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9693-10080]:Block[10285-10672]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[10041-10054]:ReturnStatement[10633-10646]"
  }, {
    "left" : "pendingEvent = true;",
    "right" : "pendingEvent = true;",
    "info" : "ExpressionStatement[10258-10278]:ExpressionStatement[10850-10870]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[10303-10315]:ReturnStatement[10895-10907]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10362-10504]:Block[10954-11096]"
  }, {
    "left" : "ta = tb;",
    "right" : "ta = tb;",
    "info" : "ExpressionStatement[10449-10457]:ExpressionStatement[11041-11049]"
  }, {
    "left" : "ga = gb;",
    "right" : "ga = gb;",
    "info" : "ExpressionStatement[10478-10486]:ExpressionStatement[11070-11078]"
  }, {
    "left" : "pendingEvent     = false;",
    "right" : "pendingEvent     = false;",
    "info" : "ExpressionStatement[10579-10604]:ExpressionStatement[11171-11196]"
  }, {
    "left" : "pendingEventTime = Double.NaN;",
    "right" : "pendingEventTime = Double.NaN;",
    "info" : "ExpressionStatement[10617-10647]:ExpressionStatement[11209-11239]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[10660-10673]:ReturnStatement[11252-11265]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10723-11092]:Block[11315-11684]"
  }, {
    "left" : "final Throwable cause = e.getCause();",
    "right" : "final Throwable cause = e.getCause();",
    "info" : "VariableDeclarationStatement[10737-10774]:VariableDeclarationStatement[11329-11366]"
  }, {
    "left" : "if ((cause != null) && (cause instanceof DerivativeException))",
    "right" : "if ((cause != null) && (cause instanceof DerivativeException))",
    "info" : "IfStatement[10787-11041]:IfStatement[11379-11633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10850-10916]:Block[11442-11508]"
  }, {
    "left" : "throw (DerivativeException) cause;",
    "right" : "throw (DerivativeException) cause;",
    "info" : "ThrowStatement[10868-10902]:ThrowStatement[11460-11494]"
  }, {
    "left" : "if ((cause != null) && (cause instanceof EventException))",
    "right" : "if ((cause != null) && (cause instanceof EventException))",
    "info" : "IfStatement[10922-11041]:IfStatement[11514-11633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10980-11041]:Block[11572-11633]"
  }, {
    "left" : "throw (EventException) cause;",
    "right" : "throw (EventException) cause;",
    "info" : "ThrowStatement[10998-11027]:ThrowStatement[11590-11619]"
  }, {
    "left" : "throw new EventException(e);",
    "right" : "throw new EventException(e);",
    "info" : "ThrowStatement[11054-11082]:ThrowStatement[11646-11674]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11278-11284]:Modifier[11870-11876]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[11285-11291]:PrimitiveType[11877-11883]"
  }, {
    "left" : "getEventTime",
    "right" : "getEventTime",
    "info" : "SimpleName[11292-11304]:SimpleName[11884-11896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11307-11347]:Block[11899-11939]"
  }, {
    "left" : "return pendingEventTime;",
    "right" : "return pendingEventTime;",
    "info" : "ReturnStatement[11317-11341]:ReturnStatement[11909-11933]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11723-11729]:Modifier[12315-12321]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11730-11734]:PrimitiveType[12322-12326]"
  }, {
    "left" : "stepAccepted",
    "right" : "stepAccepted",
    "info" : "SimpleName[11735-11747]:SimpleName[12327-12339]"
  }, {
    "left" : "final double t",
    "right" : "final double t",
    "info" : "SingleVariableDeclaration[11748-11762]:SingleVariableDeclaration[12340-12354]"
  }, {
    "left" : "final double[] y",
    "right" : "final double[] y",
    "info" : "SingleVariableDeclaration[11764-11780]:SingleVariableDeclaration[12356-12372]"
  }, {
    "left" : "EventException",
    "right" : "EventException",
    "info" : "SimpleType[11797-11811]:SimpleType[12389-12403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11812-12235]:Block[12404-12827]"
  }, {
    "left" : "t0 = t;",
    "right" : "t0 = t;",
    "info" : "ExpressionStatement[11823-11830]:ExpressionStatement[12415-12422]"
  }, {
    "left" : "g0 = handler.g(t, y);",
    "right" : "g0 = handler.g(t, y);",
    "info" : "ExpressionStatement[11839-11860]:ExpressionStatement[12431-12452]"
  }, {
    "left" : "if (pendingEvent)",
    "right" : "if (pendingEvent)",
    "info" : "IfStatement[11870-12229]:IfStatement[12462-12821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11888-12130]:Block[12480-12722]"
  }, {
    "left" : "previousEventTime = t;",
    "right" : "previousEventTime = t;",
    "info" : "ExpressionStatement[11968-11990]:ExpressionStatement[12560-12582]"
  }, {
    "left" : "g0Positive        = increasing;",
    "right" : "g0Positive        = increasing;",
    "info" : "ExpressionStatement[12003-12034]:ExpressionStatement[12595-12626]"
  }, {
    "left" : "nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));",
    "right" : "nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));",
    "info" : "ExpressionStatement[12047-12120]:ExpressionStatement[12639-12712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12136-12229]:Block[12728-12821]"
  }, {
    "left" : "g0Positive = g0 >= 0;",
    "right" : "g0Positive = g0 >= 0;",
    "info" : "ExpressionStatement[12150-12171]:ExpressionStatement[12742-12763]"
  }, {
    "left" : "nextAction = EventHandler.CONTINUE;",
    "right" : "nextAction = EventHandler.CONTINUE;",
    "info" : "ExpressionStatement[12184-12219]:ExpressionStatement[12776-12811]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12396-12402]:Modifier[12988-12994]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12403-12410]:PrimitiveType[12995-13002]"
  }, {
    "left" : "stop",
    "right" : "stop",
    "info" : "SimpleName[12411-12415]:SimpleName[13003-13007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12418-12473]:Block[13010-13065]"
  }, {
    "left" : "return nextAction == EventHandler.STOP;",
    "right" : "return nextAction == EventHandler.STOP;",
    "info" : "ReturnStatement[12428-12467]:ReturnStatement[13020-13059]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12912-12918]:Modifier[13504-13510]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12919-12926]:PrimitiveType[13511-13518]"
  }, {
    "left" : "reset",
    "right" : "reset",
    "info" : "SimpleName[12927-12932]:SimpleName[13519-13524]"
  }, {
    "left" : "final double t",
    "right" : "final double t",
    "info" : "SingleVariableDeclaration[12933-12947]:SingleVariableDeclaration[13525-13539]"
  }, {
    "left" : "final double[] y",
    "right" : "final double[] y",
    "info" : "SingleVariableDeclaration[12949-12965]:SingleVariableDeclaration[13541-13557]"
  }, {
    "left" : "EventException",
    "right" : "EventException",
    "info" : "SimpleType[12982-12996]:SimpleType[13574-13588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12997-13373]:Block[13589-13965]"
  }, {
    "left" : "if (! pendingEvent)",
    "right" : "if (! pendingEvent)",
    "info" : "IfStatement[13008-13065]:IfStatement[13600-13657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13028-13065]:Block[13620-13657]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[13042-13055]:ReturnStatement[13634-13647]"
  }, {
    "left" : "if (nextAction == EventHandler.RESET_STATE)",
    "right" : "if (nextAction == EventHandler.RESET_STATE)",
    "info" : "IfStatement[13075-13168]:IfStatement[13667-13760]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13119-13168]:Block[13711-13760]"
  }, {
    "left" : "handler.resetState(t, y);",
    "right" : "handler.resetState(t, y);",
    "info" : "ExpressionStatement[13133-13158]:ExpressionStatement[13725-13750]"
  }, {
    "left" : "pendingEvent      = false;",
    "right" : "pendingEvent      = false;",
    "info" : "ExpressionStatement[13177-13203]:ExpressionStatement[13769-13795]"
  }, {
    "left" : "pendingEventTime  = Double.NaN;",
    "right" : "pendingEventTime  = Double.NaN;",
    "info" : "ExpressionStatement[13212-13243]:ExpressionStatement[13804-13835]"
  }, {
    "left" : "return (nextAction == EventHandler.RESET_STATE) ||\n               (nextAction == EventHandler.RESET_DERIVATIVES);",
    "right" : "return (nextAction == EventHandler.RESET_STATE) ||\n               (nextAction == EventHandler.RESET_DERIVATIVES);",
    "info" : "ReturnStatement[13253-13366]:ReturnStatement[13845-13958]"
  } ]
}