{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "TypeDeclaration[2362-21616]:TypeDeclaration[2362-21705]"
    }, {
      "left" : "protected final CodingConvention convention;",
      "right" : "protected final CodingConvention convention;",
      "info" : "FieldDeclaration[2550-2594]:FieldDeclaration[2550-2594]"
    }, {
      "left" : "final JSTypeRegistry typeRegistry;",
      "right" : "final JSTypeRegistry typeRegistry;",
      "info" : "FieldDeclaration[2597-2631]:FieldDeclaration[2597-2631]"
    }, {
      "left" : "private ChainableReverseAbstractInterpreter firstLink;",
      "right" : "private ChainableReverseAbstractInterpreter firstLink;",
      "info" : "FieldDeclaration[2634-2688]:FieldDeclaration[2634-2688]"
    }, {
      "left" : "private ChainableReverseAbstractInterpreter nextLink;",
      "right" : "private ChainableReverseAbstractInterpreter nextLink;",
      "info" : "FieldDeclaration[2691-2744]:FieldDeclaration[2691-2744]"
    }, {
      "left" : "public ChainableReverseAbstractInterpreter(CodingConvention convention,\n      JSTypeRegistry typeRegistry)",
      "right" : "public ChainableReverseAbstractInterpreter(CodingConvention convention,\n      JSTypeRegistry typeRegistry)",
      "info" : "MethodDeclaration[2748-3155]:MethodDeclaration[2748-3155]"
    }, {
      "left" : "public ChainableReverseAbstractInterpreter append(\n      ChainableReverseAbstractInterpreter lastLink)",
      "right" : "public ChainableReverseAbstractInterpreter append(\n      ChainableReverseAbstractInterpreter lastLink)",
      "info" : "MethodDeclaration[3159-3732]:MethodDeclaration[3159-3732]"
    }, {
      "left" : "public ChainableReverseAbstractInterpreter getFirst()",
      "right" : "public ChainableReverseAbstractInterpreter getFirst()",
      "info" : "MethodDeclaration[3736-3869]:MethodDeclaration[3736-3869]"
    }, {
      "left" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "right" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "info" : "MethodDeclaration[3873-4181]:MethodDeclaration[3873-4181]"
    }, {
      "left" : "protected FlowScope nextPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "right" : "protected FlowScope nextPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome)",
      "info" : "MethodDeclaration[4185-4585]:MethodDeclaration[4185-4585]"
    }, {
      "left" : "protected JSType getTypeIfRefinable(Node node, FlowScope scope)",
      "right" : "protected JSType getTypeIfRefinable(Node node, FlowScope scope)",
      "info" : "MethodDeclaration[4589-5813]:MethodDeclaration[4589-5813]"
    }, {
      "left" : "protected void declareNameInScope(FlowScope scope, Node node, JSType type)",
      "right" : "protected void declareNameInScope(FlowScope scope, Node node, JSType type)",
      "info" : "MethodDeclaration[5817-6829]:MethodDeclaration[5817-6829]"
    }, {
      "left" : "private final Visitor<JSType> restrictUndefinedVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null && enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return getNativeType(NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(VOID_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "right" : "private final Visitor<JSType> restrictUndefinedVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null && enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return getNativeType(NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(VOID_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "info" : "FieldDeclaration[6833-8949]:FieldDeclaration[6833-8949]"
    }, {
      "left" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "right" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "info" : "MethodDeclaration[6985-7318]:MethodDeclaration[6985-7318]"
    }, {
      "left" : "public JSType caseAllType()",
      "right" : "public JSType caseAllType()",
      "info" : "MethodDeclaration[7326-7500]:MethodDeclaration[7326-7500]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[7508-7612]:MethodDeclaration[7508-7612]"
    }, {
      "left" : "public JSType caseNoType()",
      "right" : "public JSType caseNoType()",
      "info" : "MethodDeclaration[7620-7711]:MethodDeclaration[7620-7711]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[7719-7820]:MethodDeclaration[7719-7820]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[7828-7924]:MethodDeclaration[7828-7924]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[7932-8027]:MethodDeclaration[7932-8027]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[8035-8134]:MethodDeclaration[8035-8134]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[8142-8234]:MethodDeclaration[8142-8234]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[8242-8341]:MethodDeclaration[8242-8341]"
    }, {
      "left" : "public JSType caseUnionType(UnionType type)",
      "right" : "public JSType caseUnionType(UnionType type)",
      "info" : "MethodDeclaration[8349-8484]:MethodDeclaration[8349-8484]"
    }, {
      "left" : "public JSType caseUnknownType()",
      "right" : "public JSType caseUnknownType()",
      "info" : "MethodDeclaration[8492-8593]:MethodDeclaration[8492-8593]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[8601-8676]:MethodDeclaration[8601-8676]"
    }, {
      "left" : "public JSType caseParameterizedType(ParameterizedType type)",
      "right" : "public JSType caseParameterizedType(ParameterizedType type)",
      "info" : "MethodDeclaration[8684-8806]:MethodDeclaration[8684-8806]"
    }, {
      "left" : "public JSType caseTemplateType(TemplateType templateType)",
      "right" : "public JSType caseTemplateType(TemplateType templateType)",
      "info" : "MethodDeclaration[8814-8942]:MethodDeclaration[8814-8942]"
    }, {
      "left" : "private final Visitor<JSType> restrictNullVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null &&\n            enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(NULL_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return getNativeType(VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "right" : "private final Visitor<JSType> restrictNullVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null &&\n            enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(NULL_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return getNativeType(VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
      "info" : "FieldDeclaration[8954-11072]:FieldDeclaration[8954-11072]"
    }, {
      "left" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "right" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "info" : "MethodDeclaration[9096-9441]:MethodDeclaration[9096-9441]"
    }, {
      "left" : "public JSType caseAllType()",
      "right" : "public JSType caseAllType()",
      "info" : "MethodDeclaration[9449-9623]:MethodDeclaration[9449-9623]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[9631-9735]:MethodDeclaration[9631-9735]"
    }, {
      "left" : "public JSType caseNoType()",
      "right" : "public JSType caseNoType()",
      "info" : "MethodDeclaration[9743-9834]:MethodDeclaration[9743-9834]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[9842-9943]:MethodDeclaration[9842-9943]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[9951-10047]:MethodDeclaration[9951-10047]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[10055-10130]:MethodDeclaration[10055-10130]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[10138-10237]:MethodDeclaration[10138-10237]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[10245-10337]:MethodDeclaration[10245-10337]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[10345-10444]:MethodDeclaration[10345-10444]"
    }, {
      "left" : "public JSType caseUnionType(UnionType type)",
      "right" : "public JSType caseUnionType(UnionType type)",
      "info" : "MethodDeclaration[10452-10587]:MethodDeclaration[10452-10587]"
    }, {
      "left" : "public JSType caseUnknownType()",
      "right" : "public JSType caseUnknownType()",
      "info" : "MethodDeclaration[10595-10696]:MethodDeclaration[10595-10696]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[10704-10799]:MethodDeclaration[10704-10799]"
    }, {
      "left" : "public JSType caseParameterizedType(ParameterizedType type)",
      "right" : "public JSType caseParameterizedType(ParameterizedType type)",
      "info" : "MethodDeclaration[10807-10929]:MethodDeclaration[10807-10929]"
    }, {
      "left" : "public JSType caseTemplateType(TemplateType templateType)",
      "right" : "public JSType caseTemplateType(TemplateType templateType)",
      "info" : "MethodDeclaration[10937-11065]:MethodDeclaration[10937-11065]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "TypeDeclaration[11076-13495]:TypeDeclaration[11076-13495]"
    }, {
      "left" : "protected abstract JSType caseTopType(JSType topType);",
      "right" : "protected abstract JSType caseTopType(JSType topType);",
      "info" : "MethodDeclaration[11286-11606]:MethodDeclaration[11286-11606]"
    }, {
      "left" : "public JSType caseAllType()",
      "right" : "public JSType caseAllType()",
      "info" : "MethodDeclaration[11612-11712]:MethodDeclaration[11612-11712]"
    }, {
      "left" : "public JSType caseUnknownType()",
      "right" : "public JSType caseUnknownType()",
      "info" : "MethodDeclaration[11718-11834]:MethodDeclaration[11718-11834]"
    }, {
      "left" : "public JSType caseUnionType(UnionType type)",
      "right" : "public JSType caseUnionType(UnionType type)",
      "info" : "MethodDeclaration[11840-12326]:MethodDeclaration[11840-12326]"
    }, {
      "left" : "public JSType caseNoType()",
      "right" : "public JSType caseNoType()",
      "info" : "MethodDeclaration[12332-12417]:MethodDeclaration[12332-12417]"
    }, {
      "left" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "right" : "public JSType caseEnumElementType(EnumElementType enumElementType)",
      "info" : "MethodDeclaration[12423-13241]:MethodDeclaration[12423-13241]"
    }, {
      "left" : "public JSType caseParameterizedType(ParameterizedType type)",
      "right" : "public JSType caseParameterizedType(ParameterizedType type)",
      "info" : "MethodDeclaration[13247-13363]:MethodDeclaration[13247-13363]"
    }, {
      "left" : "public JSType caseTemplateType(TemplateType templateType)",
      "right" : "public JSType caseTemplateType(TemplateType templateType)",
      "info" : "MethodDeclaration[13369-13491]:MethodDeclaration[13369-13491]"
    }, {
      "left" : "RestrictByTrueTypeOfResultVisitor",
      "right" : "RestrictByTrueTypeOfResultVisitor",
      "info" : "TypeDeclaration[13499-14487]:TypeDeclaration[13499-14487]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[13840-13913]:MethodDeclaration[13840-13913]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[13919-13991]:MethodDeclaration[13919-13991]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[13997-14087]:MethodDeclaration[13997-14087]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[14093-14162]:MethodDeclaration[14093-14162]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[14168-14239]:MethodDeclaration[14168-14239]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[14245-14331]:MethodDeclaration[14245-14331]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[14337-14408]:MethodDeclaration[14337-14408]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[14414-14483]:MethodDeclaration[14414-14483]"
    }, {
      "left" : "RestrictByFalseTypeOfResultVisitor",
      "right" : "RestrictByFalseTypeOfResultVisitor",
      "info" : "TypeDeclaration[14491-15705]:TypeDeclaration[14491-15705]"
    }, {
      "left" : "protected JSType caseTopType(JSType topType)",
      "right" : "protected JSType caseTopType(JSType topType)",
      "info" : "MethodDeclaration[14832-14920]:MethodDeclaration[14832-14920]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[14926-15024]:MethodDeclaration[14926-15024]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[15030-15125]:MethodDeclaration[15030-15125]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[15131-15221]:MethodDeclaration[15131-15221]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[15227-15316]:MethodDeclaration[15227-15316]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[15322-15415]:MethodDeclaration[15322-15415]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[15421-15507]:MethodDeclaration[15421-15507]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[15513-15606]:MethodDeclaration[15513-15606]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[15612-15701]:MethodDeclaration[15612-15701]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor",
      "right" : "RestrictByOneTypeOfResultVisitor",
      "info" : "TypeDeclaration[15709-18481]:TypeDeclaration[15709-18570]"
    }, {
      "left" : "private final String value;",
      "right" : "private final String value;",
      "info" : "FieldDeclaration[15892-16035]:FieldDeclaration[15892-16035]"
    }, {
      "left" : "private final boolean resultEqualsValue;",
      "right" : "private final boolean resultEqualsValue;",
      "info" : "FieldDeclaration[16041-16259]:FieldDeclaration[16041-16259]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor(String value, boolean resultEqualsValue)",
      "right" : "RestrictByOneTypeOfResultVisitor(String value, boolean resultEqualsValue)",
      "info" : "MethodDeclaration[16265-16422]:MethodDeclaration[16265-16422]"
    }, {
      "left" : "private boolean matchesExpectation(String result)",
      "right" : "private boolean matchesExpectation(String result)",
      "info" : "MethodDeclaration[16428-16724]:MethodDeclaration[16428-16724]"
    }, {
      "left" : "protected JSType caseTopType(JSType topType)",
      "right" : "protected JSType caseTopType(JSType topType)",
      "info" : "MethodDeclaration[16730-17021]:MethodDeclaration[16730-17021]"
    }, {
      "left" : "public JSType caseNoObjectType()",
      "right" : "public JSType caseNoObjectType()",
      "info" : "MethodDeclaration[17027-17218]:MethodDeclaration[17027-17218]"
    }, {
      "left" : "public JSType caseBooleanType()",
      "right" : "public JSType caseBooleanType()",
      "info" : "MethodDeclaration[17224-17358]:MethodDeclaration[17224-17358]"
    }, {
      "left" : "public JSType caseFunctionType(FunctionType type)",
      "right" : "public JSType caseFunctionType(FunctionType type)",
      "info" : "MethodDeclaration[17364-17494]:MethodDeclaration[17364-17494]"
    }, {
      "left" : "public JSType caseNullType()",
      "right" : "public JSType caseNullType()",
      "info" : "MethodDeclaration[17500-17627]:MethodDeclaration[17500-17627]"
    }, {
      "left" : "public JSType caseNumberType()",
      "right" : "public JSType caseNumberType()",
      "info" : "MethodDeclaration[17633-17764]:MethodDeclaration[17633-17764]"
    }, {
      "left" : "public JSType caseObjectType(ObjectType type)",
      "right" : "public JSType caseObjectType(ObjectType type)",
      "info" : "MethodDeclaration[17770-18204]:MethodDeclaration[17770-18293]"
    }, {
      "left" : "public JSType caseStringType()",
      "right" : "public JSType caseStringType()",
      "info" : "MethodDeclaration[18210-18341]:MethodDeclaration[18299-18430]"
    }, {
      "left" : "public JSType caseVoidType()",
      "right" : "public JSType caseVoidType()",
      "info" : "MethodDeclaration[18347-18477]:MethodDeclaration[18436-18566]"
    }, {
      "left" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
      "right" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
      "info" : "MethodDeclaration[18485-18702]:MethodDeclaration[18574-18791]"
    }, {
      "left" : "protected final JSType getRestrictedWithoutNull(JSType type)",
      "right" : "protected final JSType getRestrictedWithoutNull(JSType type)",
      "info" : "MethodDeclaration[18706-18908]:MethodDeclaration[18795-18997]"
    }, {
      "left" : "JSType getRestrictedByTypeOfResult(JSType type, String value,\n                                     boolean resultEqualsValue)",
      "right" : "JSType getRestrictedByTypeOfResult(JSType type, String value,\n                                     boolean resultEqualsValue)",
      "info" : "MethodDeclaration[18912-20622]:MethodDeclaration[19001-20711]"
    }, {
      "left" : "JSType getNativeType(JSTypeNative typeId)",
      "right" : "JSType getNativeType(JSTypeNative typeId)",
      "info" : "MethodDeclaration[20626-20720]:MethodDeclaration[20715-20809]"
    }, {
      "left" : "private JSType getNativeTypeForTypeOf(String value)",
      "right" : "private JSType getNativeTypeForTypeOf(String value)",
      "info" : "MethodDeclaration[20724-21614]:MethodDeclaration[20813-21703]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2446-2452]:Modifier[2446-2452]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2453-2461]:Modifier[2453-2461]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2462-2467]:TYPE_DECLARATION_KIND[2462-2467]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "SimpleName[2468-2503]:SimpleName[2468-2503]"
    }, {
      "left" : "ReverseAbstractInterpreter",
      "right" : "ReverseAbstractInterpreter",
      "info" : "SimpleType[2519-2545]:SimpleType[2519-2545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2884-2890]:Modifier[2884-2890]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "SimpleName[2891-2926]:SimpleName[2891-2926]"
    }, {
      "left" : "CodingConvention convention",
      "right" : "CodingConvention convention",
      "info" : "SingleVariableDeclaration[2927-2954]:SingleVariableDeclaration[2927-2954]"
    }, {
      "left" : "JSTypeRegistry typeRegistry",
      "right" : "JSTypeRegistry typeRegistry",
      "info" : "SingleVariableDeclaration[2962-2989]:SingleVariableDeclaration[2962-2989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2991-3155]:Block[2991-3155]"
    }, {
      "left" : "Preconditions.checkNotNull(convention);",
      "right" : "Preconditions.checkNotNull(convention);",
      "info" : "ExpressionStatement[2997-3036]:ExpressionStatement[2997-3036]"
    }, {
      "left" : "this.convention = convention;",
      "right" : "this.convention = convention;",
      "info" : "ExpressionStatement[3041-3070]:ExpressionStatement[3041-3070]"
    }, {
      "left" : "this.typeRegistry = typeRegistry;",
      "right" : "this.typeRegistry = typeRegistry;",
      "info" : "ExpressionStatement[3075-3108]:ExpressionStatement[3075-3108]"
    }, {
      "left" : "firstLink = this;",
      "right" : "firstLink = this;",
      "info" : "ExpressionStatement[3113-3130]:ExpressionStatement[3113-3130]"
    }, {
      "left" : "nextLink = null;",
      "right" : "nextLink = null;",
      "info" : "ExpressionStatement[3135-3151]:ExpressionStatement[3135-3151]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3472-3478]:Modifier[3472-3478]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "SimpleType[3479-3514]:SimpleType[3479-3514]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[3515-3521]:SimpleName[3515-3521]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter lastLink",
      "right" : "ChainableReverseAbstractInterpreter lastLink",
      "info" : "SingleVariableDeclaration[3529-3573]:SingleVariableDeclaration[3529-3573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3575-3732]:Block[3575-3732]"
    }, {
      "left" : "Preconditions.checkArgument(lastLink.nextLink == null);",
      "right" : "Preconditions.checkArgument(lastLink.nextLink == null);",
      "info" : "ExpressionStatement[3581-3636]:ExpressionStatement[3581-3636]"
    }, {
      "left" : "this.nextLink = lastLink;",
      "right" : "this.nextLink = lastLink;",
      "info" : "ExpressionStatement[3641-3666]:ExpressionStatement[3641-3666]"
    }, {
      "left" : "lastLink.firstLink = this.firstLink;",
      "right" : "lastLink.firstLink = this.firstLink;",
      "info" : "ExpressionStatement[3671-3707]:ExpressionStatement[3671-3707]"
    }, {
      "left" : "return lastLink;",
      "right" : "return lastLink;",
      "info" : "ReturnStatement[3712-3728]:ReturnStatement[3712-3728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3788-3794]:Modifier[3788-3794]"
    }, {
      "left" : "ChainableReverseAbstractInterpreter",
      "right" : "ChainableReverseAbstractInterpreter",
      "info" : "SimpleType[3795-3830]:SimpleType[3795-3830]"
    }, {
      "left" : "getFirst",
      "right" : "getFirst",
      "info" : "SimpleName[3831-3839]:SimpleName[3831-3839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3842-3869]:Block[3842-3869]"
    }, {
      "left" : "return firstLink;",
      "right" : "return firstLink;",
      "info" : "ReturnStatement[3848-3865]:ReturnStatement[3848-3865]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3950-3959]:Modifier[3950-3959]"
    }, {
      "left" : "FlowScope",
      "right" : "FlowScope",
      "info" : "SimpleType[3960-3969]:SimpleType[3960-3969]"
    }, {
      "left" : "firstPreciserScopeKnowingConditionOutcome",
      "right" : "firstPreciserScopeKnowingConditionOutcome",
      "info" : "SimpleName[3970-4011]:SimpleName[3970-4011]"
    }, {
      "left" : "Node condition",
      "right" : "Node condition",
      "info" : "SingleVariableDeclaration[4012-4026]:SingleVariableDeclaration[4012-4026]"
    }, {
      "left" : "FlowScope blindScope",
      "right" : "FlowScope blindScope",
      "info" : "SingleVariableDeclaration[4034-4054]:SingleVariableDeclaration[4034-4054]"
    }, {
      "left" : "boolean outcome",
      "right" : "boolean outcome",
      "info" : "SingleVariableDeclaration[4056-4071]:SingleVariableDeclaration[4056-4071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4073-4181]:Block[4073-4181]"
    }, {
      "left" : "return firstLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome);",
      "right" : "return firstLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome);",
      "info" : "ReturnStatement[4079-4177]:ReturnStatement[4079-4177]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4324-4333]:Modifier[4324-4333]"
    }, {
      "left" : "FlowScope",
      "right" : "FlowScope",
      "info" : "SimpleType[4334-4343]:SimpleType[4334-4343]"
    }, {
      "left" : "nextPreciserScopeKnowingConditionOutcome",
      "right" : "nextPreciserScopeKnowingConditionOutcome",
      "info" : "SimpleName[4344-4384]:SimpleName[4344-4384]"
    }, {
      "left" : "Node condition",
      "right" : "Node condition",
      "info" : "SingleVariableDeclaration[4385-4399]:SingleVariableDeclaration[4385-4399]"
    }, {
      "left" : "FlowScope blindScope",
      "right" : "FlowScope blindScope",
      "info" : "SingleVariableDeclaration[4407-4427]:SingleVariableDeclaration[4407-4427]"
    }, {
      "left" : "boolean outcome",
      "right" : "boolean outcome",
      "info" : "SingleVariableDeclaration[4429-4444]:SingleVariableDeclaration[4429-4444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4446-4585]:Block[4446-4585]"
    }, {
      "left" : "return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome) : blindScope;",
      "right" : "return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome) : blindScope;",
      "info" : "ReturnStatement[4452-4581]:ReturnStatement[4452-4581]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4811-4820]:Modifier[4811-4820]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[4821-4827]:SimpleType[4821-4827]"
    }, {
      "left" : "getTypeIfRefinable",
      "right" : "getTypeIfRefinable",
      "info" : "SimpleName[4828-4846]:SimpleName[4828-4846]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[4847-4856]:SingleVariableDeclaration[4847-4856]"
    }, {
      "left" : "FlowScope scope",
      "right" : "FlowScope scope",
      "info" : "SingleVariableDeclaration[4858-4873]:SingleVariableDeclaration[4858-4873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4875-5813]:Block[4875-5813]"
    }, {
      "left" : "switch (node.getType()) {\n      case Token.NAME:\n        StaticSlot<JSType> nameVar = scope.getSlot(node.getString());\n        if (nameVar != null) {\n          JSType nameVarType = nameVar.getType();\n          if (nameVarType == null) {\n            nameVarType = node.getJSType();\n          }\n          return nameVarType;\n        }\n        return null;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        if (qualifiedName == null) {\n          return null;\n        }\n        StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);\n        JSType propVarType = null;\n        if (propVar != null) {\n          propVarType = propVar.getType();\n        }\n        if (propVarType == null) {\n          propVarType = node.getJSType();\n        }\n        if (propVarType == null) {\n          propVarType = getNativeType(UNKNOWN_TYPE);\n        }\n        return propVarType;\n    }",
      "right" : "switch (node.getType()) {\n      case Token.NAME:\n        StaticSlot<JSType> nameVar = scope.getSlot(node.getString());\n        if (nameVar != null) {\n          JSType nameVarType = nameVar.getType();\n          if (nameVarType == null) {\n            nameVarType = node.getJSType();\n          }\n          return nameVarType;\n        }\n        return null;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        if (qualifiedName == null) {\n          return null;\n        }\n        StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);\n        JSType propVarType = null;\n        if (propVar != null) {\n          propVarType = propVar.getType();\n        }\n        if (propVarType == null) {\n          propVarType = node.getJSType();\n        }\n        if (propVarType == null) {\n          propVarType = getNativeType(UNKNOWN_TYPE);\n        }\n        return propVarType;\n    }",
      "info" : "SwitchStatement[4881-5792]:SwitchStatement[4881-5792]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.NAME:",
      "info" : "SwitchCase[4913-4929]:SwitchCase[4913-4929]"
    }, {
      "left" : "StaticSlot<JSType> nameVar = scope.getSlot(node.getString());",
      "right" : "StaticSlot<JSType> nameVar = scope.getSlot(node.getString());",
      "info" : "VariableDeclarationStatement[4938-4999]:VariableDeclarationStatement[4938-4999]"
    }, {
      "left" : "if (nameVar != null)",
      "right" : "if (nameVar != null)",
      "info" : "IfStatement[5008-5213]:IfStatement[5008-5213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5029-5213]:Block[5029-5213]"
    }, {
      "left" : "JSType nameVarType = nameVar.getType();",
      "right" : "JSType nameVarType = nameVar.getType();",
      "info" : "VariableDeclarationStatement[5041-5080]:VariableDeclarationStatement[5041-5080]"
    }, {
      "left" : "if (nameVarType == null)",
      "right" : "if (nameVarType == null)",
      "info" : "IfStatement[5091-5173]:IfStatement[5091-5173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5116-5173]:Block[5116-5173]"
    }, {
      "left" : "nameVarType = node.getJSType();",
      "right" : "nameVarType = node.getJSType();",
      "info" : "ExpressionStatement[5130-5161]:ExpressionStatement[5130-5161]"
    }, {
      "left" : "return nameVarType;",
      "right" : "return nameVarType;",
      "info" : "ReturnStatement[5184-5203]:ReturnStatement[5184-5203]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5222-5234]:ReturnStatement[5222-5234]"
    }, {
      "left" : "case Token.GETPROP:",
      "right" : "case Token.GETPROP:",
      "info" : "SwitchCase[5242-5261]:SwitchCase[5242-5261]"
    }, {
      "left" : "String qualifiedName = node.getQualifiedName();",
      "right" : "String qualifiedName = node.getQualifiedName();",
      "info" : "VariableDeclarationStatement[5270-5317]:VariableDeclarationStatement[5270-5317]"
    }, {
      "left" : "if (qualifiedName == null)",
      "right" : "if (qualifiedName == null)",
      "info" : "IfStatement[5326-5387]:IfStatement[5326-5387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5353-5387]:Block[5353-5387]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5365-5377]:ReturnStatement[5365-5377]"
    }, {
      "left" : "StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);",
      "right" : "StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);",
      "info" : "VariableDeclarationStatement[5396-5454]:VariableDeclarationStatement[5396-5454]"
    }, {
      "left" : "JSType propVarType = null;",
      "right" : "JSType propVarType = null;",
      "info" : "VariableDeclarationStatement[5463-5489]:VariableDeclarationStatement[5463-5489]"
    }, {
      "left" : "if (propVar != null)",
      "right" : "if (propVar != null)",
      "info" : "IfStatement[5498-5573]:IfStatement[5498-5573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5519-5573]:Block[5519-5573]"
    }, {
      "left" : "propVarType = propVar.getType();",
      "right" : "propVarType = propVar.getType();",
      "info" : "ExpressionStatement[5531-5563]:ExpressionStatement[5531-5563]"
    }, {
      "left" : "if (propVarType == null)",
      "right" : "if (propVarType == null)",
      "info" : "IfStatement[5582-5660]:IfStatement[5582-5660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5607-5660]:Block[5607-5660]"
    }, {
      "left" : "propVarType = node.getJSType();",
      "right" : "propVarType = node.getJSType();",
      "info" : "ExpressionStatement[5619-5650]:ExpressionStatement[5619-5650]"
    }, {
      "left" : "if (propVarType == null)",
      "right" : "if (propVarType == null)",
      "info" : "IfStatement[5669-5758]:IfStatement[5669-5758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5694-5758]:Block[5694-5758]"
    }, {
      "left" : "propVarType = getNativeType(UNKNOWN_TYPE);",
      "right" : "propVarType = getNativeType(UNKNOWN_TYPE);",
      "info" : "ExpressionStatement[5706-5748]:ExpressionStatement[5706-5748]"
    }, {
      "left" : "return propVarType;",
      "right" : "return propVarType;",
      "info" : "ReturnStatement[5767-5786]:ReturnStatement[5767-5786]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5797-5809]:ReturnStatement[5797-5809]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6050-6059]:Modifier[6050-6059]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6060-6064]:PrimitiveType[6060-6064]"
    }, {
      "left" : "declareNameInScope",
      "right" : "declareNameInScope",
      "info" : "SimpleName[6065-6083]:SimpleName[6065-6083]"
    }, {
      "left" : "FlowScope scope",
      "right" : "FlowScope scope",
      "info" : "SingleVariableDeclaration[6084-6099]:SingleVariableDeclaration[6084-6099]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[6101-6110]:SingleVariableDeclaration[6101-6110]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[6112-6123]:SingleVariableDeclaration[6112-6123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6125-6829]:Block[6125-6829]"
    }, {
      "left" : "switch (node.getType()) {\n      case Token.NAME:\n        scope.inferSlotType(node.getString(), type);\n        break;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        Preconditions.checkNotNull(qualifiedName);\n\n        JSType origType = node.getJSType();\n        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;\n        scope.inferQualifiedSlot(node, qualifiedName, origType, type);\n        break;\n\n      case Token.THIS:\n        // \"this\" references aren't currently modeled in the CFG.\n        break;\n\n      default:\n        throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());\n    }",
      "right" : "switch (node.getType()) {\n      case Token.NAME:\n        scope.inferSlotType(node.getString(), type);\n        break;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        Preconditions.checkNotNull(qualifiedName);\n\n        JSType origType = node.getJSType();\n        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;\n        scope.inferQualifiedSlot(node, qualifiedName, origType, type);\n        break;\n\n      case Token.THIS:\n        // \"this\" references aren't currently modeled in the CFG.\n        break;\n\n      default:\n        throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());\n    }",
      "info" : "SwitchStatement[6131-6825]:SwitchStatement[6131-6825]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.NAME:",
      "info" : "SwitchCase[6163-6179]:SwitchCase[6163-6179]"
    }, {
      "left" : "scope.inferSlotType(node.getString(), type);",
      "right" : "scope.inferSlotType(node.getString(), type);",
      "info" : "ExpressionStatement[6188-6232]:ExpressionStatement[6188-6232]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6241-6247]:BreakStatement[6241-6247]"
    }, {
      "left" : "case Token.GETPROP:",
      "right" : "case Token.GETPROP:",
      "info" : "SwitchCase[6255-6274]:SwitchCase[6255-6274]"
    }, {
      "left" : "String qualifiedName = node.getQualifiedName();",
      "right" : "String qualifiedName = node.getQualifiedName();",
      "info" : "VariableDeclarationStatement[6283-6330]:VariableDeclarationStatement[6283-6330]"
    }, {
      "left" : "Preconditions.checkNotNull(qualifiedName);",
      "right" : "Preconditions.checkNotNull(qualifiedName);",
      "info" : "ExpressionStatement[6339-6381]:ExpressionStatement[6339-6381]"
    }, {
      "left" : "JSType origType = node.getJSType();",
      "right" : "JSType origType = node.getJSType();",
      "info" : "VariableDeclarationStatement[6391-6426]:VariableDeclarationStatement[6391-6426]"
    }, {
      "left" : "origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;",
      "right" : "origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;",
      "info" : "ExpressionStatement[6435-6504]:ExpressionStatement[6435-6504]"
    }, {
      "left" : "scope.inferQualifiedSlot(node, qualifiedName, origType, type);",
      "right" : "scope.inferQualifiedSlot(node, qualifiedName, origType, type);",
      "info" : "ExpressionStatement[6513-6575]:ExpressionStatement[6513-6575]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6584-6590]:BreakStatement[6584-6590]"
    }, {
      "left" : "case Token.THIS:",
      "right" : "case Token.THIS:",
      "info" : "SwitchCase[6598-6614]:SwitchCase[6598-6614]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6689-6695]:BreakStatement[6689-6695]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[6703-6711]:SwitchCase[6703-6711]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());",
      "right" : "throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n            node.toStringTree());",
      "info" : "ThrowStatement[6720-6819]:ThrowStatement[6720-6819]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6985-6994]:MarkerAnnotation[6985-6994]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7001-7007]:Modifier[7001-7007]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7008-7014]:SimpleType[7008-7014]"
    }, {
      "left" : "caseEnumElementType",
      "right" : "caseEnumElementType",
      "info" : "SimpleName[7015-7034]:SimpleName[7015-7034]"
    }, {
      "left" : "EnumElementType enumElementType",
      "right" : "EnumElementType enumElementType",
      "info" : "SingleVariableDeclaration[7035-7066]:SingleVariableDeclaration[7035-7066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7068-7318]:Block[7068-7318]"
    }, {
      "left" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "right" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "info" : "VariableDeclarationStatement[7078-7139]:VariableDeclarationStatement[7078-7139]"
    }, {
      "left" : "if (type != null && enumElementType.getPrimitiveType().isEquivalentTo(type))",
      "right" : "if (type != null && enumElementType.getPrimitiveType().isEquivalentTo(type))",
      "info" : "IfStatement[7148-7310]:IfStatement[7148-7310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7225-7270]:Block[7225-7270]"
    }, {
      "left" : "return enumElementType;",
      "right" : "return enumElementType;",
      "info" : "ReturnStatement[7237-7260]:ReturnStatement[7237-7260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7276-7310]:Block[7276-7310]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[7288-7300]:ReturnStatement[7288-7300]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7326-7335]:MarkerAnnotation[7326-7335]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7342-7348]:Modifier[7342-7348]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7349-7355]:SimpleType[7349-7355]"
    }, {
      "left" : "caseAllType",
      "right" : "caseAllType",
      "info" : "SimpleName[7356-7367]:SimpleName[7356-7367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7370-7500]:Block[7370-7500]"
    }, {
      "left" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);",
      "right" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);",
      "info" : "ReturnStatement[7380-7492]:ReturnStatement[7380-7492]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7508-7517]:MarkerAnnotation[7508-7517]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7524-7530]:Modifier[7524-7530]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7531-7537]:SimpleType[7531-7537]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[7538-7554]:SimpleName[7538-7554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7557-7612]:Block[7557-7612]"
    }, {
      "left" : "return getNativeType(NO_OBJECT_TYPE);",
      "right" : "return getNativeType(NO_OBJECT_TYPE);",
      "info" : "ReturnStatement[7567-7604]:ReturnStatement[7567-7604]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7620-7629]:MarkerAnnotation[7620-7629]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7636-7642]:Modifier[7636-7642]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7643-7649]:SimpleType[7643-7649]"
    }, {
      "left" : "caseNoType",
      "right" : "caseNoType",
      "info" : "SimpleName[7650-7660]:SimpleName[7650-7660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7663-7711]:Block[7663-7711]"
    }, {
      "left" : "return getNativeType(NO_TYPE);",
      "right" : "return getNativeType(NO_TYPE);",
      "info" : "ReturnStatement[7673-7703]:ReturnStatement[7673-7703]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7719-7728]:MarkerAnnotation[7719-7728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7735-7741]:Modifier[7735-7741]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7742-7748]:SimpleType[7742-7748]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[7749-7764]:SimpleName[7749-7764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7767-7820]:Block[7767-7820]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[7777-7812]:ReturnStatement[7777-7812]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7828-7837]:MarkerAnnotation[7828-7837]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7844-7850]:Modifier[7844-7850]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7851-7857]:SimpleType[7851-7857]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[7858-7874]:SimpleName[7858-7874]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[7875-7892]:SingleVariableDeclaration[7875-7892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7894-7924]:Block[7894-7924]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[7904-7916]:ReturnStatement[7904-7916]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7932-7941]:MarkerAnnotation[7932-7941]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7948-7954]:Modifier[7948-7954]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[7955-7961]:SimpleType[7955-7961]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[7962-7974]:SimpleName[7962-7974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7977-8027]:Block[7977-8027]"
    }, {
      "left" : "return getNativeType(NULL_TYPE);",
      "right" : "return getNativeType(NULL_TYPE);",
      "info" : "ReturnStatement[7987-8019]:ReturnStatement[7987-8019]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8035-8044]:MarkerAnnotation[8035-8044]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8051-8057]:Modifier[8051-8057]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8058-8064]:SimpleType[8058-8064]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[8065-8079]:SimpleName[8065-8079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8082-8134]:Block[8082-8134]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[8092-8126]:ReturnStatement[8092-8126]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8142-8151]:MarkerAnnotation[8142-8151]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8158-8164]:Modifier[8158-8164]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8165-8171]:SimpleType[8165-8171]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[8172-8186]:SimpleName[8172-8186]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[8187-8202]:SingleVariableDeclaration[8187-8202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8204-8234]:Block[8204-8234]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[8214-8226]:ReturnStatement[8214-8226]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8242-8251]:MarkerAnnotation[8242-8251]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8258-8264]:Modifier[8258-8264]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8265-8271]:SimpleType[8265-8271]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[8272-8286]:SimpleName[8272-8286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8289-8341]:Block[8289-8341]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[8299-8333]:ReturnStatement[8299-8333]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8349-8358]:MarkerAnnotation[8349-8358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8365-8371]:Modifier[8365-8371]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8372-8378]:SimpleType[8372-8378]"
    }, {
      "left" : "caseUnionType",
      "right" : "caseUnionType",
      "info" : "SimpleName[8379-8392]:SimpleName[8379-8392]"
    }, {
      "left" : "UnionType type",
      "right" : "UnionType type",
      "info" : "SingleVariableDeclaration[8393-8407]:SingleVariableDeclaration[8393-8407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8409-8484]:Block[8409-8484]"
    }, {
      "left" : "return type.getRestrictedUnion(getNativeType(VOID_TYPE));",
      "right" : "return type.getRestrictedUnion(getNativeType(VOID_TYPE));",
      "info" : "ReturnStatement[8419-8476]:ReturnStatement[8419-8476]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8492-8501]:MarkerAnnotation[8492-8501]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8508-8514]:Modifier[8508-8514]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8515-8521]:SimpleType[8515-8521]"
    }, {
      "left" : "caseUnknownType",
      "right" : "caseUnknownType",
      "info" : "SimpleName[8522-8537]:SimpleName[8522-8537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8540-8593]:Block[8540-8593]"
    }, {
      "left" : "return getNativeType(UNKNOWN_TYPE);",
      "right" : "return getNativeType(UNKNOWN_TYPE);",
      "info" : "ReturnStatement[8550-8585]:ReturnStatement[8550-8585]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8601-8610]:MarkerAnnotation[8601-8610]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8617-8623]:Modifier[8617-8623]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8624-8630]:SimpleType[8624-8630]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[8631-8643]:SimpleName[8631-8643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8646-8676]:Block[8646-8676]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8656-8668]:ReturnStatement[8656-8668]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8684-8693]:MarkerAnnotation[8684-8693]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8700-8706]:Modifier[8700-8706]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8707-8713]:SimpleType[8707-8713]"
    }, {
      "left" : "caseParameterizedType",
      "right" : "caseParameterizedType",
      "info" : "SimpleName[8714-8735]:SimpleName[8714-8735]"
    }, {
      "left" : "ParameterizedType type",
      "right" : "ParameterizedType type",
      "info" : "SingleVariableDeclaration[8736-8758]:SingleVariableDeclaration[8736-8758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8760-8806]:Block[8760-8806]"
    }, {
      "left" : "return caseObjectType(type);",
      "right" : "return caseObjectType(type);",
      "info" : "ReturnStatement[8770-8798]:ReturnStatement[8770-8798]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8814-8823]:MarkerAnnotation[8814-8823]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8830-8836]:Modifier[8830-8836]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[8837-8843]:SimpleType[8837-8843]"
    }, {
      "left" : "caseTemplateType",
      "right" : "caseTemplateType",
      "info" : "SimpleName[8844-8860]:SimpleName[8844-8860]"
    }, {
      "left" : "TemplateType templateType",
      "right" : "TemplateType templateType",
      "info" : "SingleVariableDeclaration[8861-8886]:SingleVariableDeclaration[8861-8886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8888-8942]:Block[8888-8942]"
    }, {
      "left" : "return caseObjectType(templateType);",
      "right" : "return caseObjectType(templateType);",
      "info" : "ReturnStatement[8898-8934]:ReturnStatement[8898-8934]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9096-9105]:MarkerAnnotation[9096-9105]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9112-9118]:Modifier[9112-9118]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9119-9125]:SimpleType[9119-9125]"
    }, {
      "left" : "caseEnumElementType",
      "right" : "caseEnumElementType",
      "info" : "SimpleName[9126-9145]:SimpleName[9126-9145]"
    }, {
      "left" : "EnumElementType enumElementType",
      "right" : "EnumElementType enumElementType",
      "info" : "SingleVariableDeclaration[9146-9177]:SingleVariableDeclaration[9146-9177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9179-9441]:Block[9179-9441]"
    }, {
      "left" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "right" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "info" : "VariableDeclarationStatement[9189-9250]:VariableDeclarationStatement[9189-9250]"
    }, {
      "left" : "if (type != null &&\n            enumElementType.getPrimitiveType().isEquivalentTo(type))",
      "right" : "if (type != null &&\n            enumElementType.getPrimitiveType().isEquivalentTo(type))",
      "info" : "IfStatement[9259-9433]:IfStatement[9259-9433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9348-9393]:Block[9348-9393]"
    }, {
      "left" : "return enumElementType;",
      "right" : "return enumElementType;",
      "info" : "ReturnStatement[9360-9383]:ReturnStatement[9360-9383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9399-9433]:Block[9399-9433]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[9411-9423]:ReturnStatement[9411-9423]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9449-9458]:MarkerAnnotation[9449-9458]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9465-9471]:Modifier[9465-9471]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9472-9478]:SimpleType[9472-9478]"
    }, {
      "left" : "caseAllType",
      "right" : "caseAllType",
      "info" : "SimpleName[9479-9490]:SimpleName[9479-9490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9493-9623]:Block[9493-9623]"
    }, {
      "left" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);",
      "right" : "return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);",
      "info" : "ReturnStatement[9503-9615]:ReturnStatement[9503-9615]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9631-9640]:MarkerAnnotation[9631-9640]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9647-9653]:Modifier[9647-9653]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9654-9660]:SimpleType[9654-9660]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[9661-9677]:SimpleName[9661-9677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9680-9735]:Block[9680-9735]"
    }, {
      "left" : "return getNativeType(NO_OBJECT_TYPE);",
      "right" : "return getNativeType(NO_OBJECT_TYPE);",
      "info" : "ReturnStatement[9690-9727]:ReturnStatement[9690-9727]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9743-9752]:MarkerAnnotation[9743-9752]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9759-9765]:Modifier[9759-9765]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9766-9772]:SimpleType[9766-9772]"
    }, {
      "left" : "caseNoType",
      "right" : "caseNoType",
      "info" : "SimpleName[9773-9783]:SimpleName[9773-9783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9786-9834]:Block[9786-9834]"
    }, {
      "left" : "return getNativeType(NO_TYPE);",
      "right" : "return getNativeType(NO_TYPE);",
      "info" : "ReturnStatement[9796-9826]:ReturnStatement[9796-9826]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9842-9851]:MarkerAnnotation[9842-9851]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9858-9864]:Modifier[9858-9864]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9865-9871]:SimpleType[9865-9871]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[9872-9887]:SimpleName[9872-9887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9890-9943]:Block[9890-9943]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[9900-9935]:ReturnStatement[9900-9935]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9951-9960]:MarkerAnnotation[9951-9960]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9967-9973]:Modifier[9967-9973]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[9974-9980]:SimpleType[9974-9980]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[9981-9997]:SimpleName[9981-9997]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[9998-10015]:SingleVariableDeclaration[9998-10015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10017-10047]:Block[10017-10047]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[10027-10039]:ReturnStatement[10027-10039]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10055-10064]:MarkerAnnotation[10055-10064]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10071-10077]:Modifier[10071-10077]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10078-10084]:SimpleType[10078-10084]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[10085-10097]:SimpleName[10085-10097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10100-10130]:Block[10100-10130]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10110-10122]:ReturnStatement[10110-10122]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10138-10147]:MarkerAnnotation[10138-10147]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10154-10160]:Modifier[10154-10160]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10161-10167]:SimpleType[10161-10167]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[10168-10182]:SimpleName[10168-10182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10185-10237]:Block[10185-10237]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[10195-10229]:ReturnStatement[10195-10229]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10245-10254]:MarkerAnnotation[10245-10254]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10261-10267]:Modifier[10261-10267]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10268-10274]:SimpleType[10268-10274]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[10275-10289]:SimpleName[10275-10289]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[10290-10305]:SingleVariableDeclaration[10290-10305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10307-10337]:Block[10307-10337]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[10317-10329]:ReturnStatement[10317-10329]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10345-10354]:MarkerAnnotation[10345-10354]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10361-10367]:Modifier[10361-10367]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10368-10374]:SimpleType[10368-10374]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[10375-10389]:SimpleName[10375-10389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10392-10444]:Block[10392-10444]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[10402-10436]:ReturnStatement[10402-10436]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10452-10461]:MarkerAnnotation[10452-10461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10468-10474]:Modifier[10468-10474]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10475-10481]:SimpleType[10475-10481]"
    }, {
      "left" : "caseUnionType",
      "right" : "caseUnionType",
      "info" : "SimpleName[10482-10495]:SimpleName[10482-10495]"
    }, {
      "left" : "UnionType type",
      "right" : "UnionType type",
      "info" : "SingleVariableDeclaration[10496-10510]:SingleVariableDeclaration[10496-10510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10512-10587]:Block[10512-10587]"
    }, {
      "left" : "return type.getRestrictedUnion(getNativeType(NULL_TYPE));",
      "right" : "return type.getRestrictedUnion(getNativeType(NULL_TYPE));",
      "info" : "ReturnStatement[10522-10579]:ReturnStatement[10522-10579]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10595-10604]:MarkerAnnotation[10595-10604]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10611-10617]:Modifier[10611-10617]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10618-10624]:SimpleType[10618-10624]"
    }, {
      "left" : "caseUnknownType",
      "right" : "caseUnknownType",
      "info" : "SimpleName[10625-10640]:SimpleName[10625-10640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10643-10696]:Block[10643-10696]"
    }, {
      "left" : "return getNativeType(UNKNOWN_TYPE);",
      "right" : "return getNativeType(UNKNOWN_TYPE);",
      "info" : "ReturnStatement[10653-10688]:ReturnStatement[10653-10688]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10704-10713]:MarkerAnnotation[10704-10713]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10720-10726]:Modifier[10720-10726]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10727-10733]:SimpleType[10727-10733]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[10734-10746]:SimpleName[10734-10746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10749-10799]:Block[10749-10799]"
    }, {
      "left" : "return getNativeType(VOID_TYPE);",
      "right" : "return getNativeType(VOID_TYPE);",
      "info" : "ReturnStatement[10759-10791]:ReturnStatement[10759-10791]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10807-10816]:MarkerAnnotation[10807-10816]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10823-10829]:Modifier[10823-10829]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10830-10836]:SimpleType[10830-10836]"
    }, {
      "left" : "caseParameterizedType",
      "right" : "caseParameterizedType",
      "info" : "SimpleName[10837-10858]:SimpleName[10837-10858]"
    }, {
      "left" : "ParameterizedType type",
      "right" : "ParameterizedType type",
      "info" : "SingleVariableDeclaration[10859-10881]:SingleVariableDeclaration[10859-10881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10883-10929]:Block[10883-10929]"
    }, {
      "left" : "return caseObjectType(type);",
      "right" : "return caseObjectType(type);",
      "info" : "ReturnStatement[10893-10921]:ReturnStatement[10893-10921]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10937-10946]:MarkerAnnotation[10937-10946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10953-10959]:Modifier[10953-10959]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[10960-10966]:SimpleType[10960-10966]"
    }, {
      "left" : "caseTemplateType",
      "right" : "caseTemplateType",
      "info" : "SimpleName[10967-10983]:SimpleName[10967-10983]"
    }, {
      "left" : "TemplateType templateType",
      "right" : "TemplateType templateType",
      "info" : "SingleVariableDeclaration[10984-11009]:SingleVariableDeclaration[10984-11009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11011-11065]:Block[11011-11065]"
    }, {
      "left" : "return caseObjectType(templateType);",
      "right" : "return caseObjectType(templateType);",
      "info" : "ReturnStatement[11021-11057]:ReturnStatement[11021-11057]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[11201-11209]:Modifier[11201-11209]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[11210-11215]:TYPE_DECLARATION_KIND[11210-11215]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleName[11216-11245]:SimpleName[11216-11245]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11552-11561]:Modifier[11552-11561]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[11562-11570]:Modifier[11562-11570]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11571-11577]:SimpleType[11571-11577]"
    }, {
      "left" : "caseTopType",
      "right" : "caseTopType",
      "info" : "SimpleName[11578-11589]:SimpleName[11578-11589]"
    }, {
      "left" : "JSType topType",
      "right" : "JSType topType",
      "info" : "SingleVariableDeclaration[11590-11604]:SingleVariableDeclaration[11590-11604]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11612-11621]:MarkerAnnotation[11612-11621]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11626-11632]:Modifier[11626-11632]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11633-11639]:SimpleType[11633-11639]"
    }, {
      "left" : "caseAllType",
      "right" : "caseAllType",
      "info" : "SimpleName[11640-11651]:SimpleName[11640-11651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11654-11712]:Block[11654-11712]"
    }, {
      "left" : "return caseTopType(getNativeType(ALL_TYPE));",
      "right" : "return caseTopType(getNativeType(ALL_TYPE));",
      "info" : "ReturnStatement[11662-11706]:ReturnStatement[11662-11706]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11718-11727]:MarkerAnnotation[11718-11727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11732-11738]:Modifier[11732-11738]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11739-11745]:SimpleType[11739-11745]"
    }, {
      "left" : "caseUnknownType",
      "right" : "caseUnknownType",
      "info" : "SimpleName[11746-11761]:SimpleName[11746-11761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11764-11834]:Block[11764-11834]"
    }, {
      "left" : "return caseTopType(getNativeType(CHECKED_UNKNOWN_TYPE));",
      "right" : "return caseTopType(getNativeType(CHECKED_UNKNOWN_TYPE));",
      "info" : "ReturnStatement[11772-11828]:ReturnStatement[11772-11828]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11840-11849]:MarkerAnnotation[11840-11849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11854-11860]:Modifier[11854-11860]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11861-11867]:SimpleType[11861-11867]"
    }, {
      "left" : "caseUnionType",
      "right" : "caseUnionType",
      "info" : "SimpleName[11868-11881]:SimpleName[11868-11881]"
    }, {
      "left" : "UnionType type",
      "right" : "UnionType type",
      "info" : "SingleVariableDeclaration[11882-11896]:SingleVariableDeclaration[11882-11896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11898-12326]:Block[11898-12326]"
    }, {
      "left" : "JSType restricted = null;",
      "right" : "JSType restricted = null;",
      "info" : "VariableDeclarationStatement[11906-11931]:VariableDeclarationStatement[11906-11931]"
    }, {
      "left" : "for (JSType alternate : type.getAlternates())",
      "right" : "for (JSType alternate : type.getAlternates())",
      "info" : "EnhancedForStatement[11938-12295]:EnhancedForStatement[11938-12295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11984-12295]:Block[11984-12295]"
    }, {
      "left" : "JSType restrictedAlternate = alternate.visit(this);",
      "right" : "JSType restrictedAlternate = alternate.visit(this);",
      "info" : "VariableDeclarationStatement[11994-12045]:VariableDeclarationStatement[11994-12045]"
    }, {
      "left" : "if (restrictedAlternate != null)",
      "right" : "if (restrictedAlternate != null)",
      "info" : "IfStatement[12054-12287]:IfStatement[12054-12287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12087-12287]:Block[12087-12287]"
    }, {
      "left" : "if (restricted == null)",
      "right" : "if (restricted == null)",
      "info" : "IfStatement[12099-12277]:IfStatement[12099-12277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12123-12182]:Block[12123-12182]"
    }, {
      "left" : "restricted = restrictedAlternate;",
      "right" : "restricted = restrictedAlternate;",
      "info" : "ExpressionStatement[12137-12170]:ExpressionStatement[12137-12170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12188-12277]:Block[12188-12277]"
    }, {
      "left" : "restricted = restrictedAlternate.getLeastSupertype(restricted);",
      "right" : "restricted = restrictedAlternate.getLeastSupertype(restricted);",
      "info" : "ExpressionStatement[12202-12265]:ExpressionStatement[12202-12265]"
    }, {
      "left" : "return restricted;",
      "right" : "return restricted;",
      "info" : "ReturnStatement[12302-12320]:ReturnStatement[12302-12320]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12332-12341]:MarkerAnnotation[12332-12341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12346-12352]:Modifier[12346-12352]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[12353-12359]:SimpleType[12353-12359]"
    }, {
      "left" : "caseNoType",
      "right" : "caseNoType",
      "info" : "SimpleName[12360-12370]:SimpleName[12360-12370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12373-12417]:Block[12373-12417]"
    }, {
      "left" : "return getNativeType(NO_TYPE);",
      "right" : "return getNativeType(NO_TYPE);",
      "info" : "ReturnStatement[12381-12411]:ReturnStatement[12381-12411]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12423-12432]:MarkerAnnotation[12423-12432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12437-12443]:Modifier[12437-12443]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[12444-12450]:SimpleType[12444-12450]"
    }, {
      "left" : "caseEnumElementType",
      "right" : "caseEnumElementType",
      "info" : "SimpleName[12451-12470]:SimpleName[12451-12470]"
    }, {
      "left" : "EnumElementType enumElementType",
      "right" : "EnumElementType enumElementType",
      "info" : "SingleVariableDeclaration[12471-12502]:SingleVariableDeclaration[12471-12502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12504-13241]:Block[12504-13241]"
    }, {
      "left" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "right" : "JSType type = enumElementType.getPrimitiveType().visit(this);",
      "info" : "VariableDeclarationStatement[13003-13064]:VariableDeclarationStatement[13003-13064]"
    }, {
      "left" : "if (type != null &&\n          enumElementType.getPrimitiveType().isEquivalentTo(type))",
      "right" : "if (type != null &&\n          enumElementType.getPrimitiveType().isEquivalentTo(type))",
      "info" : "IfStatement[13071-13235]:IfStatement[13071-13235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13158-13199]:Block[13158-13199]"
    }, {
      "left" : "return enumElementType;",
      "right" : "return enumElementType;",
      "info" : "ReturnStatement[13168-13191]:ReturnStatement[13168-13191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13205-13235]:Block[13205-13235]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[13215-13227]:ReturnStatement[13215-13227]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13247-13256]:MarkerAnnotation[13247-13256]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13261-13267]:Modifier[13261-13267]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13268-13274]:SimpleType[13268-13274]"
    }, {
      "left" : "caseParameterizedType",
      "right" : "caseParameterizedType",
      "info" : "SimpleName[13275-13296]:SimpleName[13275-13296]"
    }, {
      "left" : "ParameterizedType type",
      "right" : "ParameterizedType type",
      "info" : "SingleVariableDeclaration[13297-13319]:SingleVariableDeclaration[13297-13319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13321-13363]:Block[13321-13363]"
    }, {
      "left" : "return caseObjectType(type);",
      "right" : "return caseObjectType(type);",
      "info" : "ReturnStatement[13329-13357]:ReturnStatement[13329-13357]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13369-13378]:MarkerAnnotation[13369-13378]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13383-13389]:Modifier[13383-13389]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13390-13396]:SimpleType[13390-13396]"
    }, {
      "left" : "caseTemplateType",
      "right" : "caseTemplateType",
      "info" : "SimpleName[13397-13413]:SimpleName[13397-13413]"
    }, {
      "left" : "TemplateType templateType",
      "right" : "TemplateType templateType",
      "info" : "SingleVariableDeclaration[13414-13439]:SingleVariableDeclaration[13414-13439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13441-13491]:Block[13441-13491]"
    }, {
      "left" : "return caseObjectType(templateType);",
      "right" : "return caseObjectType(templateType);",
      "info" : "ReturnStatement[13449-13485]:ReturnStatement[13449-13485]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[13741-13749]:Modifier[13741-13749]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[13750-13755]:TYPE_DECLARATION_KIND[13750-13755]"
    }, {
      "left" : "RestrictByTrueTypeOfResultVisitor",
      "right" : "RestrictByTrueTypeOfResultVisitor",
      "info" : "SimpleName[13756-13789]:SimpleName[13756-13789]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleType[13804-13833]:SimpleType[13804-13833]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13840-13849]:MarkerAnnotation[13840-13849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13854-13860]:Modifier[13854-13860]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13861-13867]:SimpleType[13861-13867]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[13868-13884]:SimpleName[13868-13884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13887-13913]:Block[13887-13913]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13895-13907]:ReturnStatement[13895-13907]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13919-13928]:MarkerAnnotation[13919-13928]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13933-13939]:Modifier[13933-13939]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[13940-13946]:SimpleType[13940-13946]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[13947-13962]:SimpleName[13947-13962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13965-13991]:Block[13965-13991]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13973-13985]:ReturnStatement[13973-13985]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13997-14006]:MarkerAnnotation[13997-14006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14011-14017]:Modifier[14011-14017]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14018-14024]:SimpleType[14018-14024]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[14025-14041]:SimpleName[14025-14041]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[14042-14059]:SingleVariableDeclaration[14042-14059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14061-14087]:Block[14061-14087]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14069-14081]:ReturnStatement[14069-14081]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14093-14102]:MarkerAnnotation[14093-14102]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14107-14113]:Modifier[14107-14113]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14114-14120]:SimpleType[14114-14120]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[14121-14133]:SimpleName[14121-14133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14136-14162]:Block[14136-14162]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14144-14156]:ReturnStatement[14144-14156]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14168-14177]:MarkerAnnotation[14168-14177]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14182-14188]:Modifier[14182-14188]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14189-14195]:SimpleType[14189-14195]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[14196-14210]:SimpleName[14196-14210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14213-14239]:Block[14213-14239]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14221-14233]:ReturnStatement[14221-14233]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14245-14254]:MarkerAnnotation[14245-14254]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14259-14265]:Modifier[14259-14265]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14266-14272]:SimpleType[14266-14272]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[14273-14287]:SimpleName[14273-14287]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[14288-14303]:SingleVariableDeclaration[14288-14303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14305-14331]:Block[14305-14331]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14313-14325]:ReturnStatement[14313-14325]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14337-14346]:MarkerAnnotation[14337-14346]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14351-14357]:Modifier[14351-14357]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14358-14364]:SimpleType[14358-14364]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[14365-14379]:SimpleName[14365-14379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14382-14408]:Block[14382-14408]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14390-14402]:ReturnStatement[14390-14402]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14414-14423]:MarkerAnnotation[14414-14423]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14428-14434]:Modifier[14428-14434]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14435-14441]:SimpleType[14435-14441]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[14442-14454]:SimpleName[14442-14454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14457-14483]:Block[14457-14483]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14465-14477]:ReturnStatement[14465-14477]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[14732-14740]:Modifier[14732-14740]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[14741-14746]:TYPE_DECLARATION_KIND[14741-14746]"
    }, {
      "left" : "RestrictByFalseTypeOfResultVisitor",
      "right" : "RestrictByFalseTypeOfResultVisitor",
      "info" : "SimpleName[14747-14781]:SimpleName[14747-14781]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleType[14796-14825]:SimpleType[14796-14825]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14832-14841]:MarkerAnnotation[14832-14841]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14846-14855]:Modifier[14846-14855]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14856-14862]:SimpleType[14856-14862]"
    }, {
      "left" : "caseTopType",
      "right" : "caseTopType",
      "info" : "SimpleName[14863-14874]:SimpleName[14863-14874]"
    }, {
      "left" : "JSType topType",
      "right" : "JSType topType",
      "info" : "SingleVariableDeclaration[14875-14889]:SingleVariableDeclaration[14875-14889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14891-14920]:Block[14891-14920]"
    }, {
      "left" : "return topType;",
      "right" : "return topType;",
      "info" : "ReturnStatement[14899-14914]:ReturnStatement[14899-14914]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14926-14935]:MarkerAnnotation[14926-14935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14940-14946]:Modifier[14940-14946]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[14947-14953]:SimpleType[14947-14953]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[14954-14970]:SimpleName[14954-14970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14973-15024]:Block[14973-15024]"
    }, {
      "left" : "return getNativeType(NO_OBJECT_TYPE);",
      "right" : "return getNativeType(NO_OBJECT_TYPE);",
      "info" : "ReturnStatement[14981-15018]:ReturnStatement[14981-15018]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15030-15039]:MarkerAnnotation[15030-15039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15044-15050]:Modifier[15044-15050]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15051-15057]:SimpleType[15051-15057]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[15058-15073]:SimpleName[15058-15073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15076-15125]:Block[15076-15125]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[15084-15119]:ReturnStatement[15084-15119]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15131-15140]:MarkerAnnotation[15131-15140]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15145-15151]:Modifier[15145-15151]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15152-15158]:SimpleType[15152-15158]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[15159-15175]:SimpleName[15159-15175]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[15176-15193]:SingleVariableDeclaration[15176-15193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15195-15221]:Block[15195-15221]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[15203-15215]:ReturnStatement[15203-15215]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15227-15236]:MarkerAnnotation[15227-15236]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15241-15247]:Modifier[15241-15247]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15248-15254]:SimpleType[15248-15254]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[15255-15267]:SimpleName[15255-15267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15270-15316]:Block[15270-15316]"
    }, {
      "left" : "return getNativeType(NULL_TYPE);",
      "right" : "return getNativeType(NULL_TYPE);",
      "info" : "ReturnStatement[15278-15310]:ReturnStatement[15278-15310]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15322-15331]:MarkerAnnotation[15322-15331]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15336-15342]:Modifier[15336-15342]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15343-15349]:SimpleType[15343-15349]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[15350-15364]:SimpleName[15350-15364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15367-15415]:Block[15367-15415]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[15375-15409]:ReturnStatement[15375-15409]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15421-15430]:MarkerAnnotation[15421-15430]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15435-15441]:Modifier[15435-15441]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15442-15448]:SimpleType[15442-15448]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[15449-15463]:SimpleName[15449-15463]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[15464-15479]:SingleVariableDeclaration[15464-15479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15481-15507]:Block[15481-15507]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[15489-15501]:ReturnStatement[15489-15501]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15513-15522]:MarkerAnnotation[15513-15522]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15527-15533]:Modifier[15527-15533]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15534-15540]:SimpleType[15534-15540]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[15541-15555]:SimpleName[15541-15555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15558-15606]:Block[15558-15606]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[15566-15600]:ReturnStatement[15566-15600]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15612-15621]:MarkerAnnotation[15612-15621]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15626-15632]:Modifier[15626-15632]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[15633-15639]:SimpleType[15633-15639]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[15640-15652]:SimpleName[15640-15652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15655-15701]:Block[15655-15701]"
    }, {
      "left" : "return getNativeType(VOID_TYPE);",
      "right" : "return getNativeType(VOID_TYPE);",
      "info" : "ReturnStatement[15663-15695]:ReturnStatement[15663-15695]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15795-15802]:Modifier[15795-15802]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[15803-15808]:TYPE_DECLARATION_KIND[15803-15808]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor",
      "right" : "RestrictByOneTypeOfResultVisitor",
      "info" : "SimpleName[15809-15841]:SimpleName[15809-15841]"
    }, {
      "left" : "RestrictByTypeOfResultVisitor",
      "right" : "RestrictByTypeOfResultVisitor",
      "info" : "SimpleType[15856-15885]:SimpleType[15856-15885]"
    }, {
      "left" : "RestrictByOneTypeOfResultVisitor",
      "right" : "RestrictByOneTypeOfResultVisitor",
      "info" : "SimpleName[16265-16297]:SimpleName[16265-16297]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[16298-16310]:SingleVariableDeclaration[16298-16310]"
    }, {
      "left" : "boolean resultEqualsValue",
      "right" : "boolean resultEqualsValue",
      "info" : "SingleVariableDeclaration[16312-16337]:SingleVariableDeclaration[16312-16337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16339-16422]:Block[16339-16422]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[16347-16366]:ExpressionStatement[16347-16366]"
    }, {
      "left" : "this.resultEqualsValue = resultEqualsValue;",
      "right" : "this.resultEqualsValue = resultEqualsValue;",
      "info" : "ExpressionStatement[16373-16416]:ExpressionStatement[16373-16416]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16611-16618]:Modifier[16611-16618]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16619-16626]:PrimitiveType[16619-16626]"
    }, {
      "left" : "matchesExpectation",
      "right" : "matchesExpectation",
      "info" : "SimpleName[16627-16645]:SimpleName[16627-16645]"
    }, {
      "left" : "String result",
      "right" : "String result",
      "info" : "SingleVariableDeclaration[16646-16659]:SingleVariableDeclaration[16646-16659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16661-16724]:Block[16661-16724]"
    }, {
      "left" : "return result.equals(value) == resultEqualsValue;",
      "right" : "return result.equals(value) == resultEqualsValue;",
      "info" : "ReturnStatement[16669-16718]:ReturnStatement[16669-16718]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16730-16739]:MarkerAnnotation[16730-16739]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[16744-16753]:Modifier[16744-16753]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[16754-16760]:SimpleType[16754-16760]"
    }, {
      "left" : "caseTopType",
      "right" : "caseTopType",
      "info" : "SimpleName[16761-16772]:SimpleName[16761-16772]"
    }, {
      "left" : "JSType topType",
      "right" : "JSType topType",
      "info" : "SingleVariableDeclaration[16773-16787]:SingleVariableDeclaration[16773-16787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16789-17021]:Block[16789-17021]"
    }, {
      "left" : "JSType result = topType;",
      "right" : "JSType result = topType;",
      "info" : "VariableDeclarationStatement[16797-16821]:VariableDeclarationStatement[16797-16821]"
    }, {
      "left" : "if (resultEqualsValue)",
      "right" : "if (resultEqualsValue)",
      "info" : "IfStatement[16828-16994]:IfStatement[16828-16994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16851-16994]:Block[16851-16994]"
    }, {
      "left" : "JSType typeByName = getNativeTypeForTypeOf(value);",
      "right" : "JSType typeByName = getNativeTypeForTypeOf(value);",
      "info" : "VariableDeclarationStatement[16861-16911]:VariableDeclarationStatement[16861-16911]"
    }, {
      "left" : "if (typeByName != null)",
      "right" : "if (typeByName != null)",
      "info" : "IfStatement[16920-16986]:IfStatement[16920-16986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16944-16986]:Block[16944-16986]"
    }, {
      "left" : "result = typeByName;",
      "right" : "result = typeByName;",
      "info" : "ExpressionStatement[16956-16976]:ExpressionStatement[16956-16976]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[17001-17015]:ReturnStatement[17001-17015]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17027-17036]:MarkerAnnotation[17027-17036]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17041-17047]:Modifier[17041-17047]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17048-17054]:SimpleType[17048-17054]"
    }, {
      "left" : "caseNoObjectType",
      "right" : "caseNoObjectType",
      "info" : "SimpleName[17055-17071]:SimpleName[17055-17071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17074-17218]:Block[17074-17218]"
    }, {
      "left" : "return (value.equals(\"object\") || value.equals(\"function\")) ==\n          resultEqualsValue ? getNativeType(NO_OBJECT_TYPE) : null;",
      "right" : "return (value.equals(\"object\") || value.equals(\"function\")) ==\n          resultEqualsValue ? getNativeType(NO_OBJECT_TYPE) : null;",
      "info" : "ReturnStatement[17082-17212]:ReturnStatement[17082-17212]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17224-17233]:MarkerAnnotation[17224-17233]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17238-17244]:Modifier[17238-17244]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17245-17251]:SimpleType[17245-17251]"
    }, {
      "left" : "caseBooleanType",
      "right" : "caseBooleanType",
      "info" : "SimpleName[17252-17267]:SimpleName[17252-17267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17270-17358]:Block[17270-17358]"
    }, {
      "left" : "return matchesExpectation(\"boolean\") ? getNativeType(BOOLEAN_TYPE) : null;",
      "right" : "return matchesExpectation(\"boolean\") ? getNativeType(BOOLEAN_TYPE) : null;",
      "info" : "ReturnStatement[17278-17352]:ReturnStatement[17278-17352]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17364-17373]:MarkerAnnotation[17364-17373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17378-17384]:Modifier[17378-17384]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17385-17391]:SimpleType[17385-17391]"
    }, {
      "left" : "caseFunctionType",
      "right" : "caseFunctionType",
      "info" : "SimpleName[17392-17408]:SimpleName[17392-17408]"
    }, {
      "left" : "FunctionType type",
      "right" : "FunctionType type",
      "info" : "SingleVariableDeclaration[17409-17426]:SingleVariableDeclaration[17409-17426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17428-17494]:Block[17428-17494]"
    }, {
      "left" : "return matchesExpectation(\"function\") ? type : null;",
      "right" : "return matchesExpectation(\"function\") ? type : null;",
      "info" : "ReturnStatement[17436-17488]:ReturnStatement[17436-17488]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17500-17509]:MarkerAnnotation[17500-17509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17514-17520]:Modifier[17514-17520]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17521-17527]:SimpleType[17521-17527]"
    }, {
      "left" : "caseNullType",
      "right" : "caseNullType",
      "info" : "SimpleName[17528-17540]:SimpleName[17528-17540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17543-17627]:Block[17543-17627]"
    }, {
      "left" : "return matchesExpectation(\"object\") ? getNativeType(NULL_TYPE) : null;",
      "right" : "return matchesExpectation(\"object\") ? getNativeType(NULL_TYPE) : null;",
      "info" : "ReturnStatement[17551-17621]:ReturnStatement[17551-17621]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17633-17642]:MarkerAnnotation[17633-17642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17647-17653]:Modifier[17647-17653]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17654-17660]:SimpleType[17654-17660]"
    }, {
      "left" : "caseNumberType",
      "right" : "caseNumberType",
      "info" : "SimpleName[17661-17675]:SimpleName[17661-17675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17678-17764]:Block[17678-17764]"
    }, {
      "left" : "return matchesExpectation(\"number\") ? getNativeType(NUMBER_TYPE) : null;",
      "right" : "return matchesExpectation(\"number\") ? getNativeType(NUMBER_TYPE) : null;",
      "info" : "ReturnStatement[17686-17758]:ReturnStatement[17686-17758]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17770-17779]:MarkerAnnotation[17770-17779]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17784-17790]:Modifier[17784-17790]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17791-17797]:SimpleType[17791-17797]"
    }, {
      "left" : "caseObjectType",
      "right" : "caseObjectType",
      "info" : "SimpleName[17798-17812]:SimpleName[17798-17812]"
    }, {
      "left" : "ObjectType type",
      "right" : "ObjectType type",
      "info" : "SingleVariableDeclaration[17813-17828]:SingleVariableDeclaration[17813-17828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17830-18204]:Block[17830-18293]"
    }, {
      "left" : "if (value.equals(\"function\"))",
      "right" : "if (value.equals(\"function\"))",
      "info" : "IfStatement[17838-18141]:IfStatement[17838-18230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17868-18141]:Block[17868-18230]"
    }, {
      "left" : "JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "right" : "JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "info" : "VariableDeclarationStatement[17878-17932]:VariableDeclarationStatement[17878-17932]"
    }, {
      "left" : "return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;",
      "right" : "return type.isSubtype(ctorType) ? null : type;",
      "info" : "ReturnStatement[17941-18012]:ReturnStatement[18166-18212]"
    }, {
      "left" : "resultEqualsValue",
      "right" : "resultEqualsValue",
      "info" : "SimpleName[17948-17965]:SimpleName[17945-17962]"
    }, {
      "left" : "ctorType",
      "right" : "type",
      "info" : "SimpleName[17969-17977]:SimpleName[18173-18177]"
    }, {
      "left" : "ctorType.isSubtype(type)",
      "right" : "type.isSubtype(ctorType)",
      "info" : "MethodInvocation[17969-17993]:MethodInvocation[18173-18197]"
    }, {
      "left" : "type",
      "right" : "ctorType",
      "info" : "SimpleName[17988-17992]:SimpleName[18188-18196]"
    }, {
      "left" : "ctorType",
      "right" : "type",
      "info" : "SimpleName[17996-18004]:SimpleName[18207-18211]"
    }, {
      "left" : "return matchesExpectation(\"object\") ? type : null;",
      "right" : "return matchesExpectation(\"object\") ? type : null;",
      "info" : "ReturnStatement[18148-18198]:ReturnStatement[18237-18287]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18210-18219]:MarkerAnnotation[18299-18308]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18224-18230]:Modifier[18313-18319]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18231-18237]:SimpleType[18320-18326]"
    }, {
      "left" : "caseStringType",
      "right" : "caseStringType",
      "info" : "SimpleName[18238-18252]:SimpleName[18327-18341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18255-18341]:Block[18344-18430]"
    }, {
      "left" : "return matchesExpectation(\"string\") ? getNativeType(STRING_TYPE) : null;",
      "right" : "return matchesExpectation(\"string\") ? getNativeType(STRING_TYPE) : null;",
      "info" : "ReturnStatement[18263-18335]:ReturnStatement[18352-18424]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18347-18356]:MarkerAnnotation[18436-18445]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18361-18367]:Modifier[18450-18456]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18368-18374]:SimpleType[18457-18463]"
    }, {
      "left" : "caseVoidType",
      "right" : "caseVoidType",
      "info" : "SimpleName[18375-18387]:SimpleName[18464-18476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18390-18477]:Block[18479-18566]"
    }, {
      "left" : "return matchesExpectation(\"undefined\") ? getNativeType(VOID_TYPE) : null;",
      "right" : "return matchesExpectation(\"undefined\") ? getNativeType(VOID_TYPE) : null;",
      "info" : "ReturnStatement[18398-18471]:ReturnStatement[18487-18560]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18560-18569]:Modifier[18649-18658]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18570-18575]:Modifier[18659-18664]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18576-18582]:SimpleType[18665-18671]"
    }, {
      "left" : "getRestrictedWithoutUndefined",
      "right" : "getRestrictedWithoutUndefined",
      "info" : "SimpleName[18583-18612]:SimpleName[18672-18701]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[18613-18624]:SingleVariableDeclaration[18702-18713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18626-18702]:Block[18715-18791]"
    }, {
      "left" : "return type == null ? null : type.visit(restrictUndefinedVisitor);",
      "right" : "return type == null ? null : type.visit(restrictUndefinedVisitor);",
      "info" : "ReturnStatement[18632-18698]:ReturnStatement[18721-18787]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18776-18785]:Modifier[18865-18874]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18786-18791]:Modifier[18875-18880]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18792-18798]:SimpleType[18881-18887]"
    }, {
      "left" : "getRestrictedWithoutNull",
      "right" : "getRestrictedWithoutNull",
      "info" : "SimpleName[18799-18823]:SimpleName[18888-18912]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[18824-18835]:SingleVariableDeclaration[18913-18924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18837-18908]:Block[18926-18997]"
    }, {
      "left" : "return type == null ? null : type.visit(restrictNullVisitor);",
      "right" : "return type == null ? null : type.visit(restrictNullVisitor);",
      "info" : "ReturnStatement[18843-18904]:ReturnStatement[18932-18993]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[20157-20163]:SimpleType[20246-20252]"
    }, {
      "left" : "getRestrictedByTypeOfResult",
      "right" : "getRestrictedByTypeOfResult",
      "info" : "SimpleName[20164-20191]:SimpleName[20253-20280]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[20192-20203]:SingleVariableDeclaration[20281-20292]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[20205-20217]:SingleVariableDeclaration[20294-20306]"
    }, {
      "left" : "boolean resultEqualsValue",
      "right" : "boolean resultEqualsValue",
      "info" : "SingleVariableDeclaration[20256-20281]:SingleVariableDeclaration[20345-20370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20283-20622]:Block[20372-20711]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[20289-20522]:IfStatement[20378-20611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20307-20522]:Block[20396-20611]"
    }, {
      "left" : "if (resultEqualsValue)",
      "right" : "if (resultEqualsValue)",
      "info" : "IfStatement[20315-20516]:IfStatement[20404-20605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20338-20480]:Block[20427-20569]"
    }, {
      "left" : "JSType result = getNativeTypeForTypeOf(value);",
      "right" : "JSType result = getNativeTypeForTypeOf(value);",
      "info" : "VariableDeclarationStatement[20348-20394]:VariableDeclarationStatement[20437-20483]"
    }, {
      "left" : "return result == null ? getNativeType(CHECKED_UNKNOWN_TYPE) : result;",
      "right" : "return result == null ? getNativeType(CHECKED_UNKNOWN_TYPE) : result;",
      "info" : "ReturnStatement[20403-20472]:ReturnStatement[20492-20561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20486-20516]:Block[20575-20605]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20496-20508]:ReturnStatement[20585-20597]"
    }, {
      "left" : "return type.visit(\n        new RestrictByOneTypeOfResultVisitor(value, resultEqualsValue));",
      "right" : "return type.visit(\n        new RestrictByOneTypeOfResultVisitor(value, resultEqualsValue));",
      "info" : "ReturnStatement[20527-20618]:ReturnStatement[20616-20707]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[20626-20632]:SimpleType[20715-20721]"
    }, {
      "left" : "getNativeType",
      "right" : "getNativeType",
      "info" : "SimpleName[20633-20646]:SimpleName[20722-20735]"
    }, {
      "left" : "JSTypeNative typeId",
      "right" : "JSTypeNative typeId",
      "info" : "SingleVariableDeclaration[20647-20666]:SingleVariableDeclaration[20736-20755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20668-20720]:Block[20757-20809]"
    }, {
      "left" : "return typeRegistry.getNativeType(typeId);",
      "right" : "return typeRegistry.getNativeType(typeId);",
      "info" : "ReturnStatement[20674-20716]:ReturnStatement[20763-20805]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21102-21109]:Modifier[21191-21198]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[21110-21116]:SimpleType[21199-21205]"
    }, {
      "left" : "getNativeTypeForTypeOf",
      "right" : "getNativeTypeForTypeOf",
      "info" : "SimpleName[21117-21139]:SimpleName[21206-21228]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[21140-21152]:SingleVariableDeclaration[21229-21241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21154-21614]:Block[21243-21703]"
    }, {
      "left" : "if (value.equals(\"number\"))",
      "right" : "if (value.equals(\"number\"))",
      "info" : "IfStatement[21160-21610]:IfStatement[21249-21699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21188-21236]:Block[21277-21325]"
    }, {
      "left" : "return getNativeType(NUMBER_TYPE);",
      "right" : "return getNativeType(NUMBER_TYPE);",
      "info" : "ReturnStatement[21196-21230]:ReturnStatement[21285-21319]"
    }, {
      "left" : "if (value.equals(\"boolean\"))",
      "right" : "if (value.equals(\"boolean\"))",
      "info" : "IfStatement[21242-21610]:IfStatement[21331-21699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21271-21320]:Block[21360-21409]"
    }, {
      "left" : "return getNativeType(BOOLEAN_TYPE);",
      "right" : "return getNativeType(BOOLEAN_TYPE);",
      "info" : "ReturnStatement[21279-21314]:ReturnStatement[21368-21403]"
    }, {
      "left" : "if (value.equals(\"string\"))",
      "right" : "if (value.equals(\"string\"))",
      "info" : "IfStatement[21326-21610]:IfStatement[21415-21699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21354-21402]:Block[21443-21491]"
    }, {
      "left" : "return getNativeType(STRING_TYPE);",
      "right" : "return getNativeType(STRING_TYPE);",
      "info" : "ReturnStatement[21362-21396]:ReturnStatement[21451-21485]"
    }, {
      "left" : "if (value.equals(\"undefined\"))",
      "right" : "if (value.equals(\"undefined\"))",
      "info" : "IfStatement[21408-21610]:IfStatement[21497-21699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21439-21485]:Block[21528-21574]"
    }, {
      "left" : "return getNativeType(VOID_TYPE);",
      "right" : "return getNativeType(VOID_TYPE);",
      "info" : "ReturnStatement[21447-21479]:ReturnStatement[21536-21568]"
    }, {
      "left" : "if (value.equals(\"function\"))",
      "right" : "if (value.equals(\"function\"))",
      "info" : "IfStatement[21491-21610]:IfStatement[21580-21699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21521-21578]:Block[21610-21667]"
    }, {
      "left" : "return getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "right" : "return getNativeType(U2U_CONSTRUCTOR_TYPE);",
      "info" : "ReturnStatement[21529-21572]:ReturnStatement[21618-21661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21584-21610]:Block[21673-21699]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21592-21604]:ReturnStatement[21681-21693]"
    } ]
  },
  "interFileMappings" : { }
}