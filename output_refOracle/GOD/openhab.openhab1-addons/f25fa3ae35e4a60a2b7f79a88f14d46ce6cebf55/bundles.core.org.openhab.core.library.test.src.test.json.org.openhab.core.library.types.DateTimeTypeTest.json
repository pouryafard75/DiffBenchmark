{
  "matchedElements" : [
 {
    "left" : "class : DateTimeTypeTest",
    "right" : "class : DateTimeTypeTest",
    "info" : "TypeDeclaration[785-6768]:TypeDeclaration[785-6987]"
  }, {
    "left" : "class : ParameterSet",
    "right" : "class : ParameterSet",
    "info" : "TypeDeclaration[1003-3438]:TypeDeclaration[911-3334]"
  }, {
    "left" : "defaultTimeZone",
    "right" : "defaultTimeZone",
    "info" : "FieldDeclaration[1160-1371]:FieldDeclaration[1068-1279]"
  }, {
    "left" : "inputTimeMap",
    "right" : "inputTimeMap",
    "info" : "FieldDeclaration[1374-1547]:FieldDeclaration[1282-1455]"
  }, {
    "left" : "inputTimeZone",
    "right" : "inputTimeZone",
    "info" : "FieldDeclaration[1550-1762]:FieldDeclaration[1458-1670]"
  }, {
    "left" : "inputTimeString",
    "right" : "inputTimeString",
    "info" : "FieldDeclaration[1765-2034]:FieldDeclaration[1673-1942]"
  }, {
    "left" : "expectedResult",
    "right" : "expectedResult",
    "info" : "FieldDeclaration[2037-2391]:FieldDeclaration[1945-2299]"
  }, {
    "left" : "public ParameterSet(defaultTimeZone , inputTimeMap , inputTimeZone , expectedResult )",
    "right" : "public ParameterSet(defaultTimeZone , inputTimeMap , inputTimeZone , expectedResult )",
    "info" : "MethodDeclaration[2395-2964]:MethodDeclaration[2303-2864]"
  }, {
    "left" : "public ParameterSet(defaultTimeZone , inputTimeString , expectedResult )",
    "right" : "public ParameterSet(defaultTimeZone , inputTimeString , expectedResult )",
    "info" : "MethodDeclaration[2970-3434]:MethodDeclaration[2870-3330]"
  }, {
    "left" : "public parameters() : ",
    "right" : "public parameters() : ",
    "info" : "MethodDeclaration[3441-5078]:MethodDeclaration[3337-4837]"
  }, {
    "left" : "parameterSet",
    "right" : "parameterSet",
    "info" : "FieldDeclaration[5081-5115]:FieldDeclaration[5192-5226]"
  }, {
    "left" : "public DateTimeTypeTest(parameterSet )",
    "right" : "public DateTimeTypeTest(parameterSet )",
    "info" : "MethodDeclaration[5118-5326]:MethodDeclaration[5229-5437]"
  }, {
    "left" : "public afterTest() : void",
    "right" : "public afterTest() : void",
    "info" : "MethodDeclaration[5329-5391]:MethodDeclaration[5440-5502]"
  }, {
    "left" : "public createDate() : void",
    "right" : "public createDate() : void",
    "info" : "MethodDeclaration[5394-6766]:MethodDeclaration[5505-6985]"
  } ],
  "mappings" : [
 {
    "left" : "@RunWith(Parameterized.class)",
    "right" : "@RunWith(Parameterized.class)",
    "info" : "SingleMemberAnnotation[846-875]:SingleMemberAnnotation[846-875]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[876-882]:Modifier[876-882]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[883-888]:TYPE_DECLARATION_KIND[883-888]"
  }, {
    "left" : "new SimpleDateFormat(DateTimeType.DATE_PATTERN)",
    "right" : "new SimpleDateFormat(DateTimeType.DATE_PATTERN)",
    "info" : "ClassInstanceCreation[952-999]:ClassInstanceCreation[6093-6140]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1123-1129]:Modifier[1031-1037]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1130-1136]:Modifier[1038-1044]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1137-1142]:TYPE_DECLARATION_KIND[1045-1050]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2631-2637]:Modifier[2539-2545]"
  }, {
    "left" : "ParameterSet",
    "right" : "ParameterSet",
    "info" : "SimpleName[2638-2650]:SimpleName[2546-2558]"
  }, {
    "left" : "TimeZone defaultTimeZone",
    "right" : "TimeZone defaultTimeZone",
    "info" : "SingleVariableDeclaration[2651-2675]:SingleVariableDeclaration[2559-2583]"
  }, {
    "left" : "Map<String, Integer> inputTimeMap",
    "right" : "Map<String, Integer> inputTimeMap",
    "info" : "SingleVariableDeclaration[2681-2714]:SingleVariableDeclaration[2585-2618]"
  }, {
    "left" : "TimeZone inputTimeZone",
    "right" : "TimeZone inputTimeZone",
    "info" : "SingleVariableDeclaration[2716-2738]:SingleVariableDeclaration[2620-2642]"
  }, {
    "left" : "String expectedResult",
    "right" : "String expectedResult",
    "info" : "SingleVariableDeclaration[2744-2765]:SingleVariableDeclaration[2644-2665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2767-2964]:Block[2667-2864]"
  }, {
    "left" : "this.defaultTimeZone = defaultTimeZone;",
    "right" : "this.defaultTimeZone = defaultTimeZone;",
    "info" : "ExpressionStatement[2772-2811]:ExpressionStatement[2672-2711]"
  }, {
    "left" : "this.inputTimeMap = inputTimeMap;",
    "right" : "this.inputTimeMap = inputTimeMap;",
    "info" : "ExpressionStatement[2815-2848]:ExpressionStatement[2715-2748]"
  }, {
    "left" : "this.inputTimeZone = inputTimeZone;",
    "right" : "this.inputTimeZone = inputTimeZone;",
    "info" : "ExpressionStatement[2852-2887]:ExpressionStatement[2752-2787]"
  }, {
    "left" : "this.inputTimeString = null;",
    "right" : "this.inputTimeString = null;",
    "info" : "ExpressionStatement[2891-2919]:ExpressionStatement[2791-2819]"
  }, {
    "left" : "this.expectedResult = expectedResult;",
    "right" : "this.expectedResult = expectedResult;",
    "info" : "ExpressionStatement[2923-2960]:ExpressionStatement[2823-2860]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3146-3152]:Modifier[3046-3052]"
  }, {
    "left" : "ParameterSet",
    "right" : "ParameterSet",
    "info" : "SimpleName[3153-3165]:SimpleName[3053-3065]"
  }, {
    "left" : "TimeZone defaultTimeZone",
    "right" : "TimeZone defaultTimeZone",
    "info" : "SingleVariableDeclaration[3166-3190]:SingleVariableDeclaration[3066-3090]"
  }, {
    "left" : "String inputTimeString",
    "right" : "String inputTimeString",
    "info" : "SingleVariableDeclaration[3192-3214]:SingleVariableDeclaration[3092-3114]"
  }, {
    "left" : "String expectedResult",
    "right" : "String expectedResult",
    "info" : "SingleVariableDeclaration[3220-3241]:SingleVariableDeclaration[3116-3137]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3243-3434]:Block[3139-3330]"
  }, {
    "left" : "this.defaultTimeZone = defaultTimeZone;",
    "right" : "this.defaultTimeZone = defaultTimeZone;",
    "info" : "ExpressionStatement[3248-3287]:ExpressionStatement[3144-3183]"
  }, {
    "left" : "this.inputTimeMap = null;",
    "right" : "this.inputTimeMap = null;",
    "info" : "ExpressionStatement[3291-3316]:ExpressionStatement[3187-3212]"
  }, {
    "left" : "this.inputTimeZone = null;",
    "right" : "this.inputTimeZone = null;",
    "info" : "ExpressionStatement[3320-3346]:ExpressionStatement[3216-3242]"
  }, {
    "left" : "this.inputTimeString = inputTimeString;",
    "right" : "this.inputTimeString = inputTimeString;",
    "info" : "ExpressionStatement[3350-3389]:ExpressionStatement[3246-3285]"
  }, {
    "left" : "this.expectedResult = expectedResult;",
    "right" : "this.expectedResult = expectedResult;",
    "info" : "ExpressionStatement[3393-3430]:ExpressionStatement[3289-3326]"
  }, {
    "left" : "@Parameters",
    "right" : "@Parameters",
    "info" : "MarkerAnnotation[3515-3526]:MarkerAnnotation[3411-3422]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3528-3534]:Modifier[3424-3430]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3535-3541]:Modifier[3431-3437]"
  }, {
    "left" : "Collection<Object[]>",
    "right" : "Collection<Object[]>",
    "info" : "ParameterizedType[3542-3562]:ParameterizedType[3438-3458]"
  }, {
    "left" : "parameters",
    "right" : "parameters",
    "info" : "SimpleName[3563-3573]:SimpleName[3459-3469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3576-5078]:Block[3472-4837]"
  }, {
    "left" : "Map<String, Integer> inputTimeMap = new HashMap<String,Integer>();",
    "right" : "Map<String, Integer> inputTimeMap = new HashMap<String,Integer>();",
    "info" : "VariableDeclarationStatement[3635-3701]:VariableDeclarationStatement[4894-4960]"
  }, {
    "left" : "inputTimeMap.put(\"year\", 2014);",
    "right" : "inputTimeMap.put(\"year\", 2014);",
    "info" : "ExpressionStatement[3704-3735]:ExpressionStatement[4963-4994]"
  }, {
    "left" : "inputTimeMap.put(\"month\", 2);",
    "right" : "inputTimeMap.put(\"month\", 2);",
    "info" : "ExpressionStatement[3738-3767]:ExpressionStatement[4997-5026]"
  }, {
    "left" : "inputTimeMap.put(\"date\", 30);",
    "right" : "inputTimeMap.put(\"date\", 30);",
    "info" : "ExpressionStatement[3770-3799]:ExpressionStatement[5029-5058]"
  }, {
    "left" : "inputTimeMap.put(\"hourOfDay\", 4);",
    "right" : "inputTimeMap.put(\"hourOfDay\", 10);",
    "info" : "ExpressionStatement[3802-3835]:ExpressionStatement[5061-5095]"
  }, {
    "left" : "4",
    "right" : "10",
    "info" : "NumberLiteral[3832-3833]:NumberLiteral[5091-5093]"
  }, {
    "left" : "inputTimeMap.put(\"minute\", 58);",
    "right" : "inputTimeMap.put(\"minute\", 58);",
    "info" : "ExpressionStatement[3838-3869]:ExpressionStatement[5098-5129]"
  }, {
    "left" : "inputTimeMap.put(\"second\", 47);",
    "right" : "inputTimeMap.put(\"second\", 47);",
    "info" : "ExpressionStatement[3872-3903]:ExpressionStatement[5132-5163]"
  }, {
    "left" : "return Arrays.asList(new Object[][] {\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"UTC\")  , inputTimeMap, TimeZone.getTimeZone(\"UTC\")   , \"2014-03-30T04:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"UTC\")  , inputTimeMap, TimeZone.getTimeZone(\"CET\")   , \"2014-03-30T02:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"UTC\")  , \"2014-03-30T04:58:47UTS\"                    , \"2014-03-30T04:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"CET\")  , inputTimeMap, TimeZone.getTimeZone(\"UTC\")   , \"2014-03-30T04:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"CET\")  , inputTimeMap, TimeZone.getTimeZone(\"CET\")   , \"2014-03-30T02:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"CET\")  , \"2014-03-30T04:58:47UTS\"                    , \"2014-03-30T04:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"GMT+2\"), inputTimeMap, TimeZone.getTimeZone(\"GMT+3\") , \"2014-03-30T01:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"GMT-2\"), inputTimeMap, TimeZone.getTimeZone(\"GMT+3\") , \"2014-03-30T01:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"GMT-2\"), inputTimeMap, TimeZone.getTimeZone(\"GMT-3\") , \"2014-03-30T07:58:47\") },\n\t\t});",
    "right" : "return Arrays.asList(new Object[][] {\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"UTC\")  , initTimeMap(), TimeZone.getTimeZone(\"UTC\")   , \"2014-03-30T10:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"UTC\")  , initTimeMap(), TimeZone.getTimeZone(\"CET\")   , \"2014-03-30T08:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"UTC\")  , \"2014-03-30T10:58:47UTS\"                    , \"2014-03-30T10:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"CET\")  , initTimeMap(), TimeZone.getTimeZone(\"UTC\")   , \"2014-03-30T12:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"CET\")  , initTimeMap(), TimeZone.getTimeZone(\"CET\")   , \"2014-03-30T10:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"CET\")  , \"2014-03-30T10:58:47UTS\"                    , \"2014-03-30T10:58:47\") },\n\t\t\t\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"GMT\"),   initTimeMap(), TimeZone.getTimeZone(\"GMT\")   , \"2014-03-30T10:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"GMT+2\"), initTimeMap(), TimeZone.getTimeZone(\"GML\") , \"2014-03-30T12:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"GMT-2\"), initTimeMap(), TimeZone.getTimeZone(\"GMT+3\") , \"2014-03-30T05:58:47\") },\n\t\t\t{ new ParameterSet(TimeZone.getTimeZone(\"GMT-2\"), initTimeMap(), TimeZone.getTimeZone(\"GMT-4\") , \"2014-03-30T12:58:47\") },\n\t\t});",
    "info" : "ReturnStatement[3907-5075]:ReturnStatement[3531-4834]"
  }, {
    "left" : "\"2014-03-30T04:58:47\"",
    "right" : "\"2014-03-30T10:58:47\"",
    "info" : "StringLiteral[4044-4065]:StringLiteral[3669-3690]"
  }, {
    "left" : "\"2014-03-30T02:58:47\"",
    "right" : "\"2014-03-30T08:58:47\"",
    "info" : "StringLiteral[4169-4190]:StringLiteral[3795-3816]"
  }, {
    "left" : "\"2014-03-30T04:58:47UTS\"",
    "right" : "\"2014-03-30T10:58:47UTS\"",
    "info" : "StringLiteral[4248-4272]:StringLiteral[3874-3898]"
  }, {
    "left" : "\"2014-03-30T04:58:47\"",
    "right" : "\"2014-03-30T10:58:47\"",
    "info" : "StringLiteral[4294-4315]:StringLiteral[3920-3941]"
  }, {
    "left" : "\"2014-03-30T04:58:47\"",
    "right" : "\"2014-03-30T12:58:47\"",
    "info" : "StringLiteral[4419-4440]:StringLiteral[4046-4067]"
  }, {
    "left" : "\"2014-03-30T02:58:47\"",
    "right" : "\"2014-03-30T10:58:47\"",
    "info" : "StringLiteral[4544-4565]:StringLiteral[4172-4193]"
  }, {
    "left" : "\"2014-03-30T04:58:47UTS\"",
    "right" : "\"2014-03-30T10:58:47UTS\"",
    "info" : "StringLiteral[4623-4647]:StringLiteral[4251-4275]"
  }, {
    "left" : "\"2014-03-30T04:58:47\"",
    "right" : "\"2014-03-30T10:58:47\"",
    "info" : "StringLiteral[4669-4690]:StringLiteral[4297-4318]"
  }, {
    "left" : "\"GMT+3\"",
    "right" : "\"GML\"",
    "info" : "StringLiteral[4783-4790]:StringLiteral[4542-4547]"
  }, {
    "left" : "\"2014-03-30T01:58:47\"",
    "right" : "\"2014-03-30T12:58:47\"",
    "info" : "StringLiteral[4794-4815]:StringLiteral[4551-4572]"
  }, {
    "left" : "\"2014-03-30T01:58:47\"",
    "right" : "\"2014-03-30T05:58:47\"",
    "info" : "StringLiteral[4919-4940]:StringLiteral[4677-4698]"
  }, {
    "left" : "\"GMT-3\"",
    "right" : "\"GMT-4\"",
    "info" : "StringLiteral[5033-5040]:StringLiteral[4792-4799]"
  }, {
    "left" : "\"2014-03-30T07:58:47\"",
    "right" : "\"2014-03-30T12:58:47\"",
    "info" : "StringLiteral[5044-5065]:StringLiteral[4803-4824]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5235-5241]:Modifier[5346-5352]"
  }, {
    "left" : "DateTimeTypeTest",
    "right" : "DateTimeTypeTest",
    "info" : "SimpleName[5242-5258]:SimpleName[5353-5369]"
  }, {
    "left" : "ParameterSet parameterSet",
    "right" : "ParameterSet parameterSet",
    "info" : "SingleVariableDeclaration[5259-5284]:SingleVariableDeclaration[5370-5395]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5286-5326]:Block[5397-5437]"
  }, {
    "left" : "this.parameterSet = parameterSet;",
    "right" : "this.parameterSet = parameterSet;",
    "info" : "ExpressionStatement[5290-5323]:ExpressionStatement[5401-5434]"
  }, {
    "left" : "@After",
    "right" : "@After",
    "info" : "MarkerAnnotation[5329-5335]:MarkerAnnotation[5440-5446]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5337-5343]:Modifier[5448-5454]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5344-5348]:PrimitiveType[5455-5459]"
  }, {
    "left" : "afterTest",
    "right" : "afterTest",
    "info" : "SimpleName[5349-5358]:SimpleName[5460-5469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5361-5391]:Block[5472-5502]"
  }, {
    "left" : "System.out.println(\"\");",
    "right" : "System.out.println(\"\");",
    "info" : "ExpressionStatement[5365-5388]:ExpressionStatement[5476-5499]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[5394-5399]:MarkerAnnotation[5505-5510]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5401-5407]:Modifier[5512-5518]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5408-5412]:PrimitiveType[5519-5523]"
  }, {
    "left" : "createDate",
    "right" : "createDate",
    "info" : "SimpleName[5413-5423]:SimpleName[5524-5534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5426-6766]:Block[5537-6985]"
  }, {
    "left" : "String inputTimeString;",
    "right" : "String inputTimeString;",
    "info" : "VariableDeclarationStatement[5430-5453]:VariableDeclarationStatement[5541-5564]"
  }, {
    "left" : "TimeZone.setDefault(parameterSet.defaultTimeZone);",
    "right" : "TimeZone.setDefault(parameterSet.defaultTimeZone);",
    "info" : "ExpressionStatement[5486-5536]:ExpressionStatement[5597-5647]"
  }, {
    "left" : "if (parameterSet.inputTimeString == null)",
    "right" : "if (parameterSet.inputTimeString == null)",
    "info" : "IfStatement[5569-6081]:IfStatement[5684-6234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5611-6019]:Block[5726-6172]"
  }, {
    "left" : "final Calendar calendar = Calendar.getInstance(parameterSet.inputTimeZone);",
    "right" : "final Calendar calendar = Calendar.getInstance(parameterSet.inputTimeZone);",
    "info" : "VariableDeclarationStatement[5616-5691]:VariableDeclarationStatement[5731-5806]"
  }, {
    "left" : "calendar.set(parameterSet.inputTimeMap.get(\"year\"), parameterSet.inputTimeMap.get(\"month\"), parameterSet.inputTimeMap.get(\"date\"), parameterSet.inputTimeMap.get(\"hourOfDay\"), parameterSet.inputTimeMap.get(\"minute\"), parameterSet.inputTimeMap.get(\"second\"));",
    "right" : "calendar.set(parameterSet.inputTimeMap.get(\"year\"), parameterSet.inputTimeMap.get(\"month\"), parameterSet.inputTimeMap.get(\"date\"), parameterSet.inputTimeMap.get(\"hourOfDay\"), parameterSet.inputTimeMap.get(\"minute\"), parameterSet.inputTimeMap.get(\"second\"));",
    "info" : "ExpressionStatement[5695-5952]:ExpressionStatement[5810-6067]"
  }, {
    "left" : "inputTimeString = dateFormatter.format(calendar.getTime());",
    "right" : "inputTimeString = new SimpleDateFormat(DateTimeType.DATE_PATTERN).format(calendar.getTime());",
    "info" : "ExpressionStatement[5956-6015]:ExpressionStatement[6075-6168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6025-6081]:Block[6178-6234]"
  }, {
    "left" : "inputTimeString = parameterSet.inputTimeString;",
    "right" : "inputTimeString = parameterSet.inputTimeString;",
    "info" : "ExpressionStatement[6030-6077]:ExpressionStatement[6183-6230]"
  }, {
    "left" : "DateTimeType dt = DateTimeType.valueOf(inputTimeString);",
    "right" : "DateTimeType dt = DateTimeType.valueOf(inputTimeString);",
    "info" : "VariableDeclarationStatement[6084-6140]:VariableDeclarationStatement[6240-6296]"
  }, {
    "left" : "System.out.println(\"createDate (Default TimeZone: \" + parameterSet.defaultTimeZone.getDisplayName(false, TimeZone.SHORT, Locale.ROOT) + \"):\");",
    "right" : "System.out.println(\"createDate (Default TimeZone: expected=\" + parameterSet.defaultTimeZone.getDisplayName(false, TimeZone.SHORT, Locale.ROOT) + \"|current=\"+TimeZone.getDefault().getDisplayName()+\"):\");",
    "info" : "ExpressionStatement[6184-6326]:ExpressionStatement[6340-6542]"
  }, {
    "left" : "\"createDate (Default TimeZone: \"",
    "right" : "\"createDate (Default TimeZone: expected=\"",
    "info" : "StringLiteral[6203-6235]:StringLiteral[6359-6400]"
  }, {
    "left" : "if (parameterSet.inputTimeZone == null)",
    "right" : "if (parameterSet.inputTimeZone == null)",
    "info" : "IfStatement[6329-6571]:IfStatement[6545-6787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6369-6428]:Block[6585-6644]"
  }, {
    "left" : "System.out.println(\"\\tInput: \" + inputTimeString);",
    "right" : "System.out.println(\"\\tInput: \" + inputTimeString);",
    "info" : "ExpressionStatement[6374-6424]:ExpressionStatement[6590-6640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6434-6571]:Block[6650-6787]"
  }, {
    "left" : "System.out.println(\"\\tInput: \" + inputTimeString+parameterSet.inputTimeZone.getDisplayName(false, TimeZone.SHORT, Locale.ROOT));",
    "right" : "System.out.println(\"\\tInput: \" + inputTimeString+parameterSet.inputTimeZone.getDisplayName(false, TimeZone.SHORT, Locale.ROOT));",
    "info" : "ExpressionStatement[6439-6567]:ExpressionStatement[6655-6783]"
  }, {
    "left" : "System.out.println(\"\\tExpected: \" + parameterSet.expectedResult);",
    "right" : "System.out.println(\"\\tExpected: \" + parameterSet.expectedResult);",
    "info" : "ExpressionStatement[6574-6639]:ExpressionStatement[6790-6855]"
  }, {
    "left" : "System.out.println(\"\\tResult  : \" + dt.toString());",
    "right" : "System.out.println(\"\\tResult  : \" + dt.toString());",
    "info" : "ExpressionStatement[6642-6693]:ExpressionStatement[6858-6909]"
  }, {
    "left" : "assertEquals(parameterSet.expectedResult, dt.toString());",
    "right" : "assertEquals(parameterSet.expectedResult, dt.toString());",
    "info" : "ExpressionStatement[6706-6763]:ExpressionStatement[6925-6982]"
  } ]
}