{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TokenStream",
      "right" : "TokenStream",
      "info" : "TypeDeclaration[1734-8605]:TypeDeclaration[1734-8710]"
    }, {
      "left" : "public static boolean isKeyword(String name)",
      "right" : "public static boolean isKeyword(String name)",
      "info" : "MethodDeclaration[1913-8220]:MethodDeclaration[1913-8220]"
    }, {
      "left" : "public static boolean isJSIdentifier(String s)",
      "right" : "public static boolean isJSIdentifier(String s)",
      "info" : "MethodDeclaration[8226-8603]:MethodDeclaration[8226-8708]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1882-1888]:Modifier[1882-1888]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1889-1894]:TYPE_DECLARATION_KIND[1889-1894]"
    }, {
      "left" : "TokenStream",
      "right" : "TokenStream",
      "info" : "SimpleName[1895-1906]:SimpleName[1895-1906]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1913-1919]:Modifier[1913-1919]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1920-1926]:Modifier[1920-1926]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1927-1934]:PrimitiveType[1927-1934]"
    }, {
      "left" : "isKeyword",
      "right" : "isKeyword",
      "info" : "SimpleName[1935-1944]:SimpleName[1935-1944]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[1945-1956]:SingleVariableDeclaration[1945-1956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1958-8220]:Block[1958-8220]"
    }, {
      "left" : "boolean id = false;",
      "right" : "boolean id = false;",
      "info" : "VariableDeclarationStatement[1968-1987]:VariableDeclarationStatement[1968-1987]"
    }, {
      "left" : "String s = name;",
      "right" : "String s = name;",
      "info" : "VariableDeclarationStatement[1996-2012]:VariableDeclarationStatement[1996-2012]"
    }, {
      "left" : "complete: {\n            String X = null;\n            int c;\n            partial: switch (s.length()) {\n            case 2: c=s.charAt(1);\n                if (c=='f') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='n') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='o') {\n                  if (s.charAt(0)=='d') {id=true; break complete;}\n                }\n                break partial;\n            case 3: switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                } break partial;\n            case 4: switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                } break partial;\n            case 5: switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                } break partial;\n            case 6: switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                } break partial;\n            case 7: switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                } break partial;\n            case 8: switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                } break partial;\n            case 9: c=s.charAt(0);\n                if (c=='i') { X=\"interface\";id=true; }\n                else if (c=='p') { X=\"protected\";id=true; }\n                else if (c=='t') { X=\"transient\";id=true; }\n                break partial;\n            case 10: c=s.charAt(1);\n                if (c=='m') { X=\"implements\";id=true; }\n                else if (c=='n') { X=\"instanceof\";id=true; }\n                break partial;\n            case 12: X=\"synchronized\";id=true; break partial;\n            }\n            // partial match validate the entire string the one possibility\n            if (X!=null && X!=s && !X.equals(s)) return false;\n        }",
      "right" : "complete: {\n            String X = null;\n            int c;\n            partial: switch (s.length()) {\n            case 2: c=s.charAt(1);\n                if (c=='f') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='n') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='o') {\n                  if (s.charAt(0)=='d') {id=true; break complete;}\n                }\n                break partial;\n            case 3: switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                } break partial;\n            case 4: switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                } break partial;\n            case 5: switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                } break partial;\n            case 6: switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                } break partial;\n            case 7: switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                } break partial;\n            case 8: switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                } break partial;\n            case 9: c=s.charAt(0);\n                if (c=='i') { X=\"interface\";id=true; }\n                else if (c=='p') { X=\"protected\";id=true; }\n                else if (c=='t') { X=\"transient\";id=true; }\n                break partial;\n            case 10: c=s.charAt(1);\n                if (c=='m') { X=\"implements\";id=true; }\n                else if (c=='n') { X=\"instanceof\";id=true; }\n                break partial;\n            case 12: X=\"synchronized\";id=true; break partial;\n            }\n            // partial match validate the entire string the one possibility\n            if (X!=null && X!=s && !X.equals(s)) return false;\n        }",
      "info" : "LabeledStatement[2021-8195]:LabeledStatement[2021-8195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2031-8195]:Block[2031-8195]"
    }, {
      "left" : "String X = null;",
      "right" : "String X = null;",
      "info" : "VariableDeclarationStatement[2045-2061]:VariableDeclarationStatement[2045-2061]"
    }, {
      "left" : "int c;",
      "right" : "int c;",
      "info" : "VariableDeclarationStatement[2074-2080]:VariableDeclarationStatement[2074-2080]"
    }, {
      "left" : "partial: switch (s.length()) {\n            case 2: c=s.charAt(1);\n                if (c=='f') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='n') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='o') {\n                  if (s.charAt(0)=='d') {id=true; break complete;}\n                }\n                break partial;\n            case 3: switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                } break partial;\n            case 4: switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                } break partial;\n            case 5: switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                } break partial;\n            case 6: switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                } break partial;\n            case 7: switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                } break partial;\n            case 8: switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                } break partial;\n            case 9: c=s.charAt(0);\n                if (c=='i') { X=\"interface\";id=true; }\n                else if (c=='p') { X=\"protected\";id=true; }\n                else if (c=='t') { X=\"transient\";id=true; }\n                break partial;\n            case 10: c=s.charAt(1);\n                if (c=='m') { X=\"implements\";id=true; }\n                else if (c=='n') { X=\"instanceof\";id=true; }\n                break partial;\n            case 12: X=\"synchronized\";id=true; break partial;\n            }",
      "right" : "partial: switch (s.length()) {\n            case 2: c=s.charAt(1);\n                if (c=='f') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='n') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='o') {\n                  if (s.charAt(0)=='d') {id=true; break complete;}\n                }\n                break partial;\n            case 3: switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                } break partial;\n            case 4: switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                } break partial;\n            case 5: switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                } break partial;\n            case 6: switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                } break partial;\n            case 7: switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                } break partial;\n            case 8: switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                } break partial;\n            case 9: c=s.charAt(0);\n                if (c=='i') { X=\"interface\";id=true; }\n                else if (c=='p') { X=\"protected\";id=true; }\n                else if (c=='t') { X=\"transient\";id=true; }\n                break partial;\n            case 10: c=s.charAt(1);\n                if (c=='m') { X=\"implements\";id=true; }\n                else if (c=='n') { X=\"instanceof\";id=true; }\n                break partial;\n            case 12: X=\"synchronized\";id=true; break partial;\n            }",
      "info" : "LabeledStatement[2093-8046]:LabeledStatement[2093-8046]"
    }, {
      "left" : "switch (s.length()) {\n            case 2: c=s.charAt(1);\n                if (c=='f') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='n') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='o') {\n                  if (s.charAt(0)=='d') {id=true; break complete;}\n                }\n                break partial;\n            case 3: switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                } break partial;\n            case 4: switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                } break partial;\n            case 5: switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                } break partial;\n            case 6: switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                } break partial;\n            case 7: switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                } break partial;\n            case 8: switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                } break partial;\n            case 9: c=s.charAt(0);\n                if (c=='i') { X=\"interface\";id=true; }\n                else if (c=='p') { X=\"protected\";id=true; }\n                else if (c=='t') { X=\"transient\";id=true; }\n                break partial;\n            case 10: c=s.charAt(1);\n                if (c=='m') { X=\"implements\";id=true; }\n                else if (c=='n') { X=\"instanceof\";id=true; }\n                break partial;\n            case 12: X=\"synchronized\";id=true; break partial;\n            }",
      "right" : "switch (s.length()) {\n            case 2: c=s.charAt(1);\n                if (c=='f') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='n') {\n                  if (s.charAt(0)=='i') {id=true; break complete;}\n                } else if (c=='o') {\n                  if (s.charAt(0)=='d') {id=true; break complete;}\n                }\n                break partial;\n            case 3: switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                } break partial;\n            case 4: switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                } break partial;\n            case 5: switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                } break partial;\n            case 6: switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                } break partial;\n            case 7: switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                } break partial;\n            case 8: switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                } break partial;\n            case 9: c=s.charAt(0);\n                if (c=='i') { X=\"interface\";id=true; }\n                else if (c=='p') { X=\"protected\";id=true; }\n                else if (c=='t') { X=\"transient\";id=true; }\n                break partial;\n            case 10: c=s.charAt(1);\n                if (c=='m') { X=\"implements\";id=true; }\n                else if (c=='n') { X=\"instanceof\";id=true; }\n                break partial;\n            case 12: X=\"synchronized\";id=true; break partial;\n            }",
      "info" : "SwitchStatement[2102-8046]:SwitchStatement[2102-8046]"
    }, {
      "left" : "case 2:",
      "right" : "case 2:",
      "info" : "SwitchCase[2136-2143]:SwitchCase[2136-2143]"
    }, {
      "left" : "c=s.charAt(1);",
      "right" : "c=s.charAt(1);",
      "info" : "ExpressionStatement[2144-2158]:ExpressionStatement[2144-2158]"
    }, {
      "left" : "if (c=='f')",
      "right" : "if (c=='f')",
      "info" : "IfStatement[2175-2481]:IfStatement[2175-2481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2187-2273]:Block[2187-2273]"
    }, {
      "left" : "if (s.charAt(0)=='i')",
      "right" : "if (s.charAt(0)=='i')",
      "info" : "IfStatement[2207-2255]:IfStatement[2207-2255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2229-2255]:Block[2229-2255]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[2230-2238]:ExpressionStatement[2230-2238]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[2239-2254]:BreakStatement[2239-2254]"
    }, {
      "left" : "if (c=='n')",
      "right" : "if (c=='n')",
      "info" : "IfStatement[2279-2481]:IfStatement[2279-2481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2291-2377]:Block[2291-2377]"
    }, {
      "left" : "if (s.charAt(0)=='i')",
      "right" : "if (s.charAt(0)=='i')",
      "info" : "IfStatement[2311-2359]:IfStatement[2311-2359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2333-2359]:Block[2333-2359]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[2334-2342]:ExpressionStatement[2334-2342]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[2343-2358]:BreakStatement[2343-2358]"
    }, {
      "left" : "if (c=='o')",
      "right" : "if (c=='o')",
      "info" : "IfStatement[2383-2481]:IfStatement[2383-2481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2395-2481]:Block[2395-2481]"
    }, {
      "left" : "if (s.charAt(0)=='d')",
      "right" : "if (s.charAt(0)=='d')",
      "info" : "IfStatement[2415-2463]:IfStatement[2415-2463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2437-2463]:Block[2437-2463]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[2438-2446]:ExpressionStatement[2438-2446]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[2447-2462]:BreakStatement[2447-2462]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[2498-2512]:BreakStatement[2498-2512]"
    }, {
      "left" : "case 3:",
      "right" : "case 3:",
      "info" : "SwitchCase[2525-2532]:SwitchCase[2525-2532]"
    }, {
      "left" : "switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                }",
      "right" : "switch (s.charAt(0)) {\n                case 'f':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='o') {\n                    id=true; break complete;\n                  } break partial;\n                case 'i':\n                  if (s.charAt(2)=='t' && s.charAt(1)=='n') {\n                    id=true; break complete;\n                  } break partial;\n                case 'n':\n                  if (s.charAt(2)=='w' && s.charAt(1)=='e') {\n                    id=true; break complete;\n                  } break partial;\n                case 't':\n                  if (s.charAt(2)=='y' && s.charAt(1)=='r') {\n                    id=true; break complete;\n                  } break partial;\n                case 'v':\n                  if (s.charAt(2)=='r' && s.charAt(1)=='a') {\n                    id=true; break complete;\n                  } break partial;\n                }",
      "info" : "SwitchStatement[2533-3413]:SwitchStatement[2533-3413]"
    }, {
      "left" : "case 'f':",
      "right" : "case 'f':",
      "info" : "SwitchCase[2572-2581]:SwitchCase[2572-2581]"
    }, {
      "left" : "if (s.charAt(2)=='r' && s.charAt(1)=='o')",
      "right" : "if (s.charAt(2)=='r' && s.charAt(1)=='o')",
      "info" : "IfStatement[2600-2708]:IfStatement[2600-2708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2642-2708]:Block[2642-2708]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[2664-2672]:ExpressionStatement[2664-2672]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[2673-2688]:BreakStatement[2673-2688]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[2709-2723]:BreakStatement[2709-2723]"
    }, {
      "left" : "case 'i':",
      "right" : "case 'i':",
      "info" : "SwitchCase[2740-2749]:SwitchCase[2740-2749]"
    }, {
      "left" : "if (s.charAt(2)=='t' && s.charAt(1)=='n')",
      "right" : "if (s.charAt(2)=='t' && s.charAt(1)=='n')",
      "info" : "IfStatement[2768-2876]:IfStatement[2768-2876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2810-2876]:Block[2810-2876]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[2832-2840]:ExpressionStatement[2832-2840]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[2841-2856]:BreakStatement[2841-2856]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[2877-2891]:BreakStatement[2877-2891]"
    }, {
      "left" : "case 'n':",
      "right" : "case 'n':",
      "info" : "SwitchCase[2908-2917]:SwitchCase[2908-2917]"
    }, {
      "left" : "if (s.charAt(2)=='w' && s.charAt(1)=='e')",
      "right" : "if (s.charAt(2)=='w' && s.charAt(1)=='e')",
      "info" : "IfStatement[2936-3044]:IfStatement[2936-3044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2978-3044]:Block[2978-3044]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[3000-3008]:ExpressionStatement[3000-3008]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[3009-3024]:BreakStatement[3009-3024]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[3045-3059]:BreakStatement[3045-3059]"
    }, {
      "left" : "case 't':",
      "right" : "case 't':",
      "info" : "SwitchCase[3076-3085]:SwitchCase[3076-3085]"
    }, {
      "left" : "if (s.charAt(2)=='y' && s.charAt(1)=='r')",
      "right" : "if (s.charAt(2)=='y' && s.charAt(1)=='r')",
      "info" : "IfStatement[3104-3212]:IfStatement[3104-3212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3146-3212]:Block[3146-3212]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[3168-3176]:ExpressionStatement[3168-3176]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[3177-3192]:BreakStatement[3177-3192]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[3213-3227]:BreakStatement[3213-3227]"
    }, {
      "left" : "case 'v':",
      "right" : "case 'v':",
      "info" : "SwitchCase[3244-3253]:SwitchCase[3244-3253]"
    }, {
      "left" : "if (s.charAt(2)=='r' && s.charAt(1)=='a')",
      "right" : "if (s.charAt(2)=='r' && s.charAt(1)=='a')",
      "info" : "IfStatement[3272-3380]:IfStatement[3272-3380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3314-3380]:Block[3314-3380]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[3336-3344]:ExpressionStatement[3336-3344]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[3345-3360]:BreakStatement[3345-3360]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[3381-3395]:BreakStatement[3381-3395]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[3414-3428]:BreakStatement[3414-3428]"
    }, {
      "left" : "case 4:",
      "right" : "case 4:",
      "info" : "SwitchCase[3441-3448]:SwitchCase[3441-3448]"
    }, {
      "left" : "switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                }",
      "right" : "switch (s.charAt(0)) {\n                case 'b': X=\"byte\";id=true; break partial;\n                case 'c': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='a') {\n                            id=true; break complete;} }\n                    else if (c=='r') {\n                      if (s.charAt(2)=='a' && s.charAt(1)=='h') {\n                        id=true; break complete;\n                      }\n                    }\n                    break partial;\n                case 'e': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='s' && s.charAt(1)=='l') {\n                            id=true; break complete;} }\n                    else if (c=='m') {\n                      if (s.charAt(2)=='u' && s.charAt(1)=='n') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'g': X=\"goto\";id=true; break partial;\n                case 'l': X=\"long\";id=true; break partial;\n                case 'n': X=\"null\";id=true; break partial;\n                case 't': c=s.charAt(3);\n                    if (c=='e') { if (s.charAt(2)=='u' && s.charAt(1)=='r') {\n                            id=true; break complete;} }\n                    else if (c=='s') {\n                      if (s.charAt(2)=='i' && s.charAt(1)=='h') {\n                            id=true; break complete;} }\n                    break partial;\n                case 'v': X=\"void\";id=true; break partial;\n                case 'w': X=\"with\";id=true; break partial;\n                }",
      "info" : "SwitchStatement[3449-4995]:SwitchStatement[3449-4995]"
    }, {
      "left" : "case 'b':",
      "right" : "case 'b':",
      "info" : "SwitchCase[3488-3497]:SwitchCase[3488-3497]"
    }, {
      "left" : "X=\"byte\";",
      "right" : "X=\"byte\";",
      "info" : "ExpressionStatement[3498-3507]:ExpressionStatement[3498-3507]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[3507-3515]:ExpressionStatement[3507-3515]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[3516-3530]:BreakStatement[3516-3530]"
    }, {
      "left" : "case 'c':",
      "right" : "case 'c':",
      "info" : "SwitchCase[3547-3556]:SwitchCase[3547-3556]"
    }, {
      "left" : "c=s.charAt(3);",
      "right" : "c=s.charAt(3);",
      "info" : "ExpressionStatement[3557-3571]:ExpressionStatement[3557-3571]"
    }, {
      "left" : "if (c=='e')",
      "right" : "if (c=='e')",
      "info" : "IfStatement[3592-3905]:IfStatement[3592-3905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3604-3705]:Block[3604-3705]"
    }, {
      "left" : "if (s.charAt(2)=='s' && s.charAt(1)=='a')",
      "right" : "if (s.charAt(2)=='s' && s.charAt(1)=='a')",
      "info" : "IfStatement[3606-3703]:IfStatement[3606-3703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3648-3703]:Block[3648-3703]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[3678-3686]:ExpressionStatement[3678-3686]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[3687-3702]:BreakStatement[3687-3702]"
    }, {
      "left" : "if (c=='r')",
      "right" : "if (c=='r')",
      "info" : "IfStatement[3731-3905]:IfStatement[3731-3905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3743-3905]:Block[3743-3905]"
    }, {
      "left" : "if (s.charAt(2)=='a' && s.charAt(1)=='h')",
      "right" : "if (s.charAt(2)=='a' && s.charAt(1)=='h')",
      "info" : "IfStatement[3767-3883]:IfStatement[3767-3883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3809-3883]:Block[3809-3883]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[3835-3843]:ExpressionStatement[3835-3843]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[3844-3859]:BreakStatement[3844-3859]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[3926-3940]:BreakStatement[3926-3940]"
    }, {
      "left" : "case 'e':",
      "right" : "case 'e':",
      "info" : "SwitchCase[3957-3966]:SwitchCase[3957-3966]"
    }, {
      "left" : "c=s.charAt(3);",
      "right" : "c=s.charAt(3);",
      "info" : "ExpressionStatement[3967-3981]:ExpressionStatement[3967-3981]"
    }, {
      "left" : "if (c=='e')",
      "right" : "if (c=='e')",
      "info" : "IfStatement[4002-4276]:IfStatement[4002-4276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4014-4115]:Block[4014-4115]"
    }, {
      "left" : "if (s.charAt(2)=='s' && s.charAt(1)=='l')",
      "right" : "if (s.charAt(2)=='s' && s.charAt(1)=='l')",
      "info" : "IfStatement[4016-4113]:IfStatement[4016-4113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4058-4113]:Block[4058-4113]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4088-4096]:ExpressionStatement[4088-4096]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[4097-4112]:BreakStatement[4097-4112]"
    }, {
      "left" : "if (c=='m')",
      "right" : "if (c=='m')",
      "info" : "IfStatement[4141-4276]:IfStatement[4141-4276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4153-4276]:Block[4153-4276]"
    }, {
      "left" : "if (s.charAt(2)=='u' && s.charAt(1)=='n')",
      "right" : "if (s.charAt(2)=='u' && s.charAt(1)=='n')",
      "info" : "IfStatement[4177-4274]:IfStatement[4177-4274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4219-4274]:Block[4219-4274]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4249-4257]:ExpressionStatement[4249-4257]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[4258-4273]:BreakStatement[4258-4273]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4297-4311]:BreakStatement[4297-4311]"
    }, {
      "left" : "case 'g':",
      "right" : "case 'g':",
      "info" : "SwitchCase[4328-4337]:SwitchCase[4328-4337]"
    }, {
      "left" : "X=\"goto\";",
      "right" : "X=\"goto\";",
      "info" : "ExpressionStatement[4338-4347]:ExpressionStatement[4338-4347]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4347-4355]:ExpressionStatement[4347-4355]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4356-4370]:BreakStatement[4356-4370]"
    }, {
      "left" : "case 'l':",
      "right" : "case 'l':",
      "info" : "SwitchCase[4387-4396]:SwitchCase[4387-4396]"
    }, {
      "left" : "X=\"long\";",
      "right" : "X=\"long\";",
      "info" : "ExpressionStatement[4397-4406]:ExpressionStatement[4397-4406]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4406-4414]:ExpressionStatement[4406-4414]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4415-4429]:BreakStatement[4415-4429]"
    }, {
      "left" : "case 'n':",
      "right" : "case 'n':",
      "info" : "SwitchCase[4446-4455]:SwitchCase[4446-4455]"
    }, {
      "left" : "X=\"null\";",
      "right" : "X=\"null\";",
      "info" : "ExpressionStatement[4456-4465]:ExpressionStatement[4456-4465]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4465-4473]:ExpressionStatement[4465-4473]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4474-4488]:BreakStatement[4474-4488]"
    }, {
      "left" : "case 't':",
      "right" : "case 't':",
      "info" : "SwitchCase[4505-4514]:SwitchCase[4505-4514]"
    }, {
      "left" : "c=s.charAt(3);",
      "right" : "c=s.charAt(3);",
      "info" : "ExpressionStatement[4515-4529]:ExpressionStatement[4515-4529]"
    }, {
      "left" : "if (c=='e')",
      "right" : "if (c=='e')",
      "info" : "IfStatement[4550-4824]:IfStatement[4550-4824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4562-4663]:Block[4562-4663]"
    }, {
      "left" : "if (s.charAt(2)=='u' && s.charAt(1)=='r')",
      "right" : "if (s.charAt(2)=='u' && s.charAt(1)=='r')",
      "info" : "IfStatement[4564-4661]:IfStatement[4564-4661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4606-4661]:Block[4606-4661]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4636-4644]:ExpressionStatement[4636-4644]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[4645-4660]:BreakStatement[4645-4660]"
    }, {
      "left" : "if (c=='s')",
      "right" : "if (c=='s')",
      "info" : "IfStatement[4689-4824]:IfStatement[4689-4824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4701-4824]:Block[4701-4824]"
    }, {
      "left" : "if (s.charAt(2)=='i' && s.charAt(1)=='h')",
      "right" : "if (s.charAt(2)=='i' && s.charAt(1)=='h')",
      "info" : "IfStatement[4725-4822]:IfStatement[4725-4822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4767-4822]:Block[4767-4822]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4797-4805]:ExpressionStatement[4797-4805]"
    }, {
      "left" : "break complete;",
      "right" : "break complete;",
      "info" : "BreakStatement[4806-4821]:BreakStatement[4806-4821]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4845-4859]:BreakStatement[4845-4859]"
    }, {
      "left" : "case 'v':",
      "right" : "case 'v':",
      "info" : "SwitchCase[4876-4885]:SwitchCase[4876-4885]"
    }, {
      "left" : "X=\"void\";",
      "right" : "X=\"void\";",
      "info" : "ExpressionStatement[4886-4895]:ExpressionStatement[4886-4895]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4895-4903]:ExpressionStatement[4895-4903]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4904-4918]:BreakStatement[4904-4918]"
    }, {
      "left" : "case 'w':",
      "right" : "case 'w':",
      "info" : "SwitchCase[4935-4944]:SwitchCase[4935-4944]"
    }, {
      "left" : "X=\"with\";",
      "right" : "X=\"with\";",
      "info" : "ExpressionStatement[4945-4954]:ExpressionStatement[4945-4954]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[4954-4962]:ExpressionStatement[4954-4962]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4963-4977]:BreakStatement[4963-4977]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[4996-5010]:BreakStatement[4996-5010]"
    }, {
      "left" : "case 5:",
      "right" : "case 5:",
      "info" : "SwitchCase[5023-5030]:SwitchCase[5023-5030]"
    }, {
      "left" : "switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                }",
      "right" : "switch (s.charAt(2)) {\n                case 'a': X=\"class\";id=true; break partial;\n                case 'e': X=\"break\";id=true; break partial;\n                case 'i': X=\"while\";id=true; break partial;\n                case 'l': X=\"false\";id=true; break partial;\n                case 'n': c=s.charAt(0);\n                    if (c=='c') { X=\"const\";id=true; }\n                    else if (c=='f') { X=\"final\";id=true; }\n                    break partial;\n                case 'o': c=s.charAt(0);\n                    if (c=='f') { X=\"float\";id=true; }\n                    else if (c=='s') { X=\"short\";id=true; }\n                    break partial;\n                case 'p': X=\"super\";id=true; break partial;\n                case 'r': X=\"throw\";id=true; break partial;\n                case 't': X=\"catch\";id=true; break partial;\n                }",
      "info" : "SwitchStatement[5031-5873]:SwitchStatement[5031-5873]"
    }, {
      "left" : "case 'a':",
      "right" : "case 'a':",
      "info" : "SwitchCase[5070-5079]:SwitchCase[5070-5079]"
    }, {
      "left" : "X=\"class\";",
      "right" : "X=\"class\";",
      "info" : "ExpressionStatement[5080-5090]:ExpressionStatement[5080-5090]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5090-5098]:ExpressionStatement[5090-5098]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5099-5113]:BreakStatement[5099-5113]"
    }, {
      "left" : "case 'e':",
      "right" : "case 'e':",
      "info" : "SwitchCase[5130-5139]:SwitchCase[5130-5139]"
    }, {
      "left" : "X=\"break\";",
      "right" : "X=\"break\";",
      "info" : "ExpressionStatement[5140-5150]:ExpressionStatement[5140-5150]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5150-5158]:ExpressionStatement[5150-5158]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5159-5173]:BreakStatement[5159-5173]"
    }, {
      "left" : "case 'i':",
      "right" : "case 'i':",
      "info" : "SwitchCase[5190-5199]:SwitchCase[5190-5199]"
    }, {
      "left" : "X=\"while\";",
      "right" : "X=\"while\";",
      "info" : "ExpressionStatement[5200-5210]:ExpressionStatement[5200-5210]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5210-5218]:ExpressionStatement[5210-5218]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5219-5233]:BreakStatement[5219-5233]"
    }, {
      "left" : "case 'l':",
      "right" : "case 'l':",
      "info" : "SwitchCase[5250-5259]:SwitchCase[5250-5259]"
    }, {
      "left" : "X=\"false\";",
      "right" : "X=\"false\";",
      "info" : "ExpressionStatement[5260-5270]:ExpressionStatement[5260-5270]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5270-5278]:ExpressionStatement[5270-5278]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5279-5293]:BreakStatement[5279-5293]"
    }, {
      "left" : "case 'n':",
      "right" : "case 'n':",
      "info" : "SwitchCase[5310-5319]:SwitchCase[5310-5319]"
    }, {
      "left" : "c=s.charAt(0);",
      "right" : "c=s.charAt(0);",
      "info" : "ExpressionStatement[5320-5334]:ExpressionStatement[5320-5334]"
    }, {
      "left" : "if (c=='c')",
      "right" : "if (c=='c')",
      "info" : "IfStatement[5355-5449]:IfStatement[5355-5449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5367-5389]:Block[5367-5389]"
    }, {
      "left" : "X=\"const\";",
      "right" : "X=\"const\";",
      "info" : "ExpressionStatement[5369-5379]:ExpressionStatement[5369-5379]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5379-5387]:ExpressionStatement[5379-5387]"
    }, {
      "left" : "if (c=='f')",
      "right" : "if (c=='f')",
      "info" : "IfStatement[5415-5449]:IfStatement[5415-5449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5427-5449]:Block[5427-5449]"
    }, {
      "left" : "X=\"final\";",
      "right" : "X=\"final\";",
      "info" : "ExpressionStatement[5429-5439]:ExpressionStatement[5429-5439]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5439-5447]:ExpressionStatement[5439-5447]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5470-5484]:BreakStatement[5470-5484]"
    }, {
      "left" : "case 'o':",
      "right" : "case 'o':",
      "info" : "SwitchCase[5501-5510]:SwitchCase[5501-5510]"
    }, {
      "left" : "c=s.charAt(0);",
      "right" : "c=s.charAt(0);",
      "info" : "ExpressionStatement[5511-5525]:ExpressionStatement[5511-5525]"
    }, {
      "left" : "if (c=='f')",
      "right" : "if (c=='f')",
      "info" : "IfStatement[5546-5640]:IfStatement[5546-5640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5558-5580]:Block[5558-5580]"
    }, {
      "left" : "X=\"float\";",
      "right" : "X=\"float\";",
      "info" : "ExpressionStatement[5560-5570]:ExpressionStatement[5560-5570]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5570-5578]:ExpressionStatement[5570-5578]"
    }, {
      "left" : "if (c=='s')",
      "right" : "if (c=='s')",
      "info" : "IfStatement[5606-5640]:IfStatement[5606-5640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5618-5640]:Block[5618-5640]"
    }, {
      "left" : "X=\"short\";",
      "right" : "X=\"short\";",
      "info" : "ExpressionStatement[5620-5630]:ExpressionStatement[5620-5630]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5630-5638]:ExpressionStatement[5630-5638]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5661-5675]:BreakStatement[5661-5675]"
    }, {
      "left" : "case 'p':",
      "right" : "case 'p':",
      "info" : "SwitchCase[5692-5701]:SwitchCase[5692-5701]"
    }, {
      "left" : "X=\"super\";",
      "right" : "X=\"super\";",
      "info" : "ExpressionStatement[5702-5712]:ExpressionStatement[5702-5712]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5712-5720]:ExpressionStatement[5712-5720]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5721-5735]:BreakStatement[5721-5735]"
    }, {
      "left" : "case 'r':",
      "right" : "case 'r':",
      "info" : "SwitchCase[5752-5761]:SwitchCase[5752-5761]"
    }, {
      "left" : "X=\"throw\";",
      "right" : "X=\"throw\";",
      "info" : "ExpressionStatement[5762-5772]:ExpressionStatement[5762-5772]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5772-5780]:ExpressionStatement[5772-5780]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5781-5795]:BreakStatement[5781-5795]"
    }, {
      "left" : "case 't':",
      "right" : "case 't':",
      "info" : "SwitchCase[5812-5821]:SwitchCase[5812-5821]"
    }, {
      "left" : "X=\"catch\";",
      "right" : "X=\"catch\";",
      "info" : "ExpressionStatement[5822-5832]:ExpressionStatement[5822-5832]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5832-5840]:ExpressionStatement[5832-5840]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5841-5855]:BreakStatement[5841-5855]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5874-5888]:BreakStatement[5874-5888]"
    }, {
      "left" : "case 6:",
      "right" : "case 6:",
      "info" : "SwitchCase[5901-5908]:SwitchCase[5901-5908]"
    }, {
      "left" : "switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                }",
      "right" : "switch (s.charAt(1)) {\n                case 'a': X=\"native\";id=true; break partial;\n                case 'e': c=s.charAt(0);\n                    if (c=='d') { X=\"delete\";id=true; }\n                    else if (c=='r') { X=\"return\";id=true; }\n                    break partial;\n                case 'h': X=\"throws\";id=true; break partial;\n                case 'm': X=\"import\";id=true; break partial;\n                case 'o': X=\"double\";id=true; break partial;\n                case 't': X=\"static\";id=true; break partial;\n                case 'u': X=\"public\";id=true; break partial;\n                case 'w': X=\"switch\";id=true; break partial;\n                case 'x': X=\"export\";id=true; break partial;\n                case 'y': X=\"typeof\";id=true; break partial;\n                }",
      "info" : "SwitchStatement[5909-6691]:SwitchStatement[5909-6691]"
    }, {
      "left" : "case 'a':",
      "right" : "case 'a':",
      "info" : "SwitchCase[5948-5957]:SwitchCase[5948-5957]"
    }, {
      "left" : "X=\"native\";",
      "right" : "X=\"native\";",
      "info" : "ExpressionStatement[5958-5969]:ExpressionStatement[5958-5969]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[5969-5977]:ExpressionStatement[5969-5977]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[5978-5992]:BreakStatement[5978-5992]"
    }, {
      "left" : "case 'e':",
      "right" : "case 'e':",
      "info" : "SwitchCase[6009-6018]:SwitchCase[6009-6018]"
    }, {
      "left" : "c=s.charAt(0);",
      "right" : "c=s.charAt(0);",
      "info" : "ExpressionStatement[6019-6033]:ExpressionStatement[6019-6033]"
    }, {
      "left" : "if (c=='d')",
      "right" : "if (c=='d')",
      "info" : "IfStatement[6054-6150]:IfStatement[6054-6150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6066-6089]:Block[6066-6089]"
    }, {
      "left" : "X=\"delete\";",
      "right" : "X=\"delete\";",
      "info" : "ExpressionStatement[6068-6079]:ExpressionStatement[6068-6079]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6079-6087]:ExpressionStatement[6079-6087]"
    }, {
      "left" : "if (c=='r')",
      "right" : "if (c=='r')",
      "info" : "IfStatement[6115-6150]:IfStatement[6115-6150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6127-6150]:Block[6127-6150]"
    }, {
      "left" : "X=\"return\";",
      "right" : "X=\"return\";",
      "info" : "ExpressionStatement[6129-6140]:ExpressionStatement[6129-6140]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6140-6148]:ExpressionStatement[6140-6148]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6171-6185]:BreakStatement[6171-6185]"
    }, {
      "left" : "case 'h':",
      "right" : "case 'h':",
      "info" : "SwitchCase[6202-6211]:SwitchCase[6202-6211]"
    }, {
      "left" : "X=\"throws\";",
      "right" : "X=\"throws\";",
      "info" : "ExpressionStatement[6212-6223]:ExpressionStatement[6212-6223]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6223-6231]:ExpressionStatement[6223-6231]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6232-6246]:BreakStatement[6232-6246]"
    }, {
      "left" : "case 'm':",
      "right" : "case 'm':",
      "info" : "SwitchCase[6263-6272]:SwitchCase[6263-6272]"
    }, {
      "left" : "X=\"import\";",
      "right" : "X=\"import\";",
      "info" : "ExpressionStatement[6273-6284]:ExpressionStatement[6273-6284]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6284-6292]:ExpressionStatement[6284-6292]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6293-6307]:BreakStatement[6293-6307]"
    }, {
      "left" : "case 'o':",
      "right" : "case 'o':",
      "info" : "SwitchCase[6324-6333]:SwitchCase[6324-6333]"
    }, {
      "left" : "X=\"double\";",
      "right" : "X=\"double\";",
      "info" : "ExpressionStatement[6334-6345]:ExpressionStatement[6334-6345]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6345-6353]:ExpressionStatement[6345-6353]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6354-6368]:BreakStatement[6354-6368]"
    }, {
      "left" : "case 't':",
      "right" : "case 't':",
      "info" : "SwitchCase[6385-6394]:SwitchCase[6385-6394]"
    }, {
      "left" : "X=\"static\";",
      "right" : "X=\"static\";",
      "info" : "ExpressionStatement[6395-6406]:ExpressionStatement[6395-6406]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6406-6414]:ExpressionStatement[6406-6414]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6415-6429]:BreakStatement[6415-6429]"
    }, {
      "left" : "case 'u':",
      "right" : "case 'u':",
      "info" : "SwitchCase[6446-6455]:SwitchCase[6446-6455]"
    }, {
      "left" : "X=\"public\";",
      "right" : "X=\"public\";",
      "info" : "ExpressionStatement[6456-6467]:ExpressionStatement[6456-6467]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6467-6475]:ExpressionStatement[6467-6475]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6476-6490]:BreakStatement[6476-6490]"
    }, {
      "left" : "case 'w':",
      "right" : "case 'w':",
      "info" : "SwitchCase[6507-6516]:SwitchCase[6507-6516]"
    }, {
      "left" : "X=\"switch\";",
      "right" : "X=\"switch\";",
      "info" : "ExpressionStatement[6517-6528]:ExpressionStatement[6517-6528]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6528-6536]:ExpressionStatement[6528-6536]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6537-6551]:BreakStatement[6537-6551]"
    }, {
      "left" : "case 'x':",
      "right" : "case 'x':",
      "info" : "SwitchCase[6568-6577]:SwitchCase[6568-6577]"
    }, {
      "left" : "X=\"export\";",
      "right" : "X=\"export\";",
      "info" : "ExpressionStatement[6578-6589]:ExpressionStatement[6578-6589]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6589-6597]:ExpressionStatement[6589-6597]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6598-6612]:BreakStatement[6598-6612]"
    }, {
      "left" : "case 'y':",
      "right" : "case 'y':",
      "info" : "SwitchCase[6629-6638]:SwitchCase[6629-6638]"
    }, {
      "left" : "X=\"typeof\";",
      "right" : "X=\"typeof\";",
      "info" : "ExpressionStatement[6639-6650]:ExpressionStatement[6639-6650]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6650-6658]:ExpressionStatement[6650-6658]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6659-6673]:BreakStatement[6659-6673]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6692-6706]:BreakStatement[6692-6706]"
    }, {
      "left" : "case 7:",
      "right" : "case 7:",
      "info" : "SwitchCase[6719-6726]:SwitchCase[6719-6726]"
    }, {
      "left" : "switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                }",
      "right" : "switch (s.charAt(1)) {\n                case 'a': X=\"package\";id=true; break partial;\n                case 'e': X=\"default\";id=true; break partial;\n                case 'i': X=\"finally\";id=true; break partial;\n                case 'o': X=\"boolean\";id=true; break partial;\n                case 'r': X=\"private\";id=true; break partial;\n                case 'x': X=\"extends\";id=true; break partial;\n                }",
      "info" : "SwitchStatement[6727-7139]:SwitchStatement[6727-7139]"
    }, {
      "left" : "case 'a':",
      "right" : "case 'a':",
      "info" : "SwitchCase[6766-6775]:SwitchCase[6766-6775]"
    }, {
      "left" : "X=\"package\";",
      "right" : "X=\"package\";",
      "info" : "ExpressionStatement[6776-6788]:ExpressionStatement[6776-6788]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6788-6796]:ExpressionStatement[6788-6796]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6797-6811]:BreakStatement[6797-6811]"
    }, {
      "left" : "case 'e':",
      "right" : "case 'e':",
      "info" : "SwitchCase[6828-6837]:SwitchCase[6828-6837]"
    }, {
      "left" : "X=\"default\";",
      "right" : "X=\"default\";",
      "info" : "ExpressionStatement[6838-6850]:ExpressionStatement[6838-6850]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6850-6858]:ExpressionStatement[6850-6858]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6859-6873]:BreakStatement[6859-6873]"
    }, {
      "left" : "case 'i':",
      "right" : "case 'i':",
      "info" : "SwitchCase[6890-6899]:SwitchCase[6890-6899]"
    }, {
      "left" : "X=\"finally\";",
      "right" : "X=\"finally\";",
      "info" : "ExpressionStatement[6900-6912]:ExpressionStatement[6900-6912]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6912-6920]:ExpressionStatement[6912-6920]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6921-6935]:BreakStatement[6921-6935]"
    }, {
      "left" : "case 'o':",
      "right" : "case 'o':",
      "info" : "SwitchCase[6952-6961]:SwitchCase[6952-6961]"
    }, {
      "left" : "X=\"boolean\";",
      "right" : "X=\"boolean\";",
      "info" : "ExpressionStatement[6962-6974]:ExpressionStatement[6962-6974]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[6974-6982]:ExpressionStatement[6974-6982]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[6983-6997]:BreakStatement[6983-6997]"
    }, {
      "left" : "case 'r':",
      "right" : "case 'r':",
      "info" : "SwitchCase[7014-7023]:SwitchCase[7014-7023]"
    }, {
      "left" : "X=\"private\";",
      "right" : "X=\"private\";",
      "info" : "ExpressionStatement[7024-7036]:ExpressionStatement[7024-7036]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7036-7044]:ExpressionStatement[7036-7044]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7045-7059]:BreakStatement[7045-7059]"
    }, {
      "left" : "case 'x':",
      "right" : "case 'x':",
      "info" : "SwitchCase[7076-7085]:SwitchCase[7076-7085]"
    }, {
      "left" : "X=\"extends\";",
      "right" : "X=\"extends\";",
      "info" : "ExpressionStatement[7086-7098]:ExpressionStatement[7086-7098]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7098-7106]:ExpressionStatement[7098-7106]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7107-7121]:BreakStatement[7107-7121]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7140-7154]:BreakStatement[7140-7154]"
    }, {
      "left" : "case 8:",
      "right" : "case 8:",
      "info" : "SwitchCase[7167-7174]:SwitchCase[7167-7174]"
    }, {
      "left" : "switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                }",
      "right" : "switch (s.charAt(0)) {\n                case 'a': X=\"abstract\";id=true; break partial;\n                case 'c': X=\"continue\";id=true; break partial;\n                case 'd': X=\"debugger\";id=true; break partial;\n                case 'f': X=\"function\";id=true; break partial;\n                case 'v': X=\"volatile\";id=true; break partial;\n                }",
      "info" : "SwitchStatement[7175-7530]:SwitchStatement[7175-7530]"
    }, {
      "left" : "case 'a':",
      "right" : "case 'a':",
      "info" : "SwitchCase[7214-7223]:SwitchCase[7214-7223]"
    }, {
      "left" : "X=\"abstract\";",
      "right" : "X=\"abstract\";",
      "info" : "ExpressionStatement[7224-7237]:ExpressionStatement[7224-7237]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7237-7245]:ExpressionStatement[7237-7245]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7246-7260]:BreakStatement[7246-7260]"
    }, {
      "left" : "case 'c':",
      "right" : "case 'c':",
      "info" : "SwitchCase[7277-7286]:SwitchCase[7277-7286]"
    }, {
      "left" : "X=\"continue\";",
      "right" : "X=\"continue\";",
      "info" : "ExpressionStatement[7287-7300]:ExpressionStatement[7287-7300]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7300-7308]:ExpressionStatement[7300-7308]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7309-7323]:BreakStatement[7309-7323]"
    }, {
      "left" : "case 'd':",
      "right" : "case 'd':",
      "info" : "SwitchCase[7340-7349]:SwitchCase[7340-7349]"
    }, {
      "left" : "X=\"debugger\";",
      "right" : "X=\"debugger\";",
      "info" : "ExpressionStatement[7350-7363]:ExpressionStatement[7350-7363]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7363-7371]:ExpressionStatement[7363-7371]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7372-7386]:BreakStatement[7372-7386]"
    }, {
      "left" : "case 'f':",
      "right" : "case 'f':",
      "info" : "SwitchCase[7403-7412]:SwitchCase[7403-7412]"
    }, {
      "left" : "X=\"function\";",
      "right" : "X=\"function\";",
      "info" : "ExpressionStatement[7413-7426]:ExpressionStatement[7413-7426]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7426-7434]:ExpressionStatement[7426-7434]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7435-7449]:BreakStatement[7435-7449]"
    }, {
      "left" : "case 'v':",
      "right" : "case 'v':",
      "info" : "SwitchCase[7466-7475]:SwitchCase[7466-7475]"
    }, {
      "left" : "X=\"volatile\";",
      "right" : "X=\"volatile\";",
      "info" : "ExpressionStatement[7476-7489]:ExpressionStatement[7476-7489]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7489-7497]:ExpressionStatement[7489-7497]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7498-7512]:BreakStatement[7498-7512]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7531-7545]:BreakStatement[7531-7545]"
    }, {
      "left" : "case 9:",
      "right" : "case 9:",
      "info" : "SwitchCase[7558-7565]:SwitchCase[7558-7565]"
    }, {
      "left" : "c=s.charAt(0);",
      "right" : "c=s.charAt(0);",
      "info" : "ExpressionStatement[7566-7580]:ExpressionStatement[7566-7580]"
    }, {
      "left" : "if (c=='i')",
      "right" : "if (c=='i')",
      "info" : "IfStatement[7597-7755]:IfStatement[7597-7755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7609-7635]:Block[7609-7635]"
    }, {
      "left" : "X=\"interface\";",
      "right" : "X=\"interface\";",
      "info" : "ExpressionStatement[7611-7625]:ExpressionStatement[7611-7625]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7625-7633]:ExpressionStatement[7625-7633]"
    }, {
      "left" : "if (c=='p')",
      "right" : "if (c=='p')",
      "info" : "IfStatement[7657-7755]:IfStatement[7657-7755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7669-7695]:Block[7669-7695]"
    }, {
      "left" : "X=\"protected\";",
      "right" : "X=\"protected\";",
      "info" : "ExpressionStatement[7671-7685]:ExpressionStatement[7671-7685]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7685-7693]:ExpressionStatement[7685-7693]"
    }, {
      "left" : "if (c=='t')",
      "right" : "if (c=='t')",
      "info" : "IfStatement[7717-7755]:IfStatement[7717-7755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7729-7755]:Block[7729-7755]"
    }, {
      "left" : "X=\"transient\";",
      "right" : "X=\"transient\";",
      "info" : "ExpressionStatement[7731-7745]:ExpressionStatement[7731-7745]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7745-7753]:ExpressionStatement[7745-7753]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7772-7786]:BreakStatement[7772-7786]"
    }, {
      "left" : "case 10:",
      "right" : "case 10:",
      "info" : "SwitchCase[7799-7807]:SwitchCase[7799-7807]"
    }, {
      "left" : "c=s.charAt(1);",
      "right" : "c=s.charAt(1);",
      "info" : "ExpressionStatement[7808-7822]:ExpressionStatement[7808-7822]"
    }, {
      "left" : "if (c=='m')",
      "right" : "if (c=='m')",
      "info" : "IfStatement[7839-7939]:IfStatement[7839-7939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7851-7878]:Block[7851-7878]"
    }, {
      "left" : "X=\"implements\";",
      "right" : "X=\"implements\";",
      "info" : "ExpressionStatement[7853-7868]:ExpressionStatement[7853-7868]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7868-7876]:ExpressionStatement[7868-7876]"
    }, {
      "left" : "if (c=='n')",
      "right" : "if (c=='n')",
      "info" : "IfStatement[7900-7939]:IfStatement[7900-7939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7912-7939]:Block[7912-7939]"
    }, {
      "left" : "X=\"instanceof\";",
      "right" : "X=\"instanceof\";",
      "info" : "ExpressionStatement[7914-7929]:ExpressionStatement[7914-7929]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[7929-7937]:ExpressionStatement[7929-7937]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[7956-7970]:BreakStatement[7956-7970]"
    }, {
      "left" : "case 12:",
      "right" : "case 12:",
      "info" : "SwitchCase[7983-7991]:SwitchCase[7983-7991]"
    }, {
      "left" : "X=\"synchronized\";",
      "right" : "X=\"synchronized\";",
      "info" : "ExpressionStatement[7992-8009]:ExpressionStatement[7992-8009]"
    }, {
      "left" : "id=true;",
      "right" : "id=true;",
      "info" : "ExpressionStatement[8009-8017]:ExpressionStatement[8009-8017]"
    }, {
      "left" : "break partial;",
      "right" : "break partial;",
      "info" : "BreakStatement[8018-8032]:BreakStatement[8018-8032]"
    }, {
      "left" : "if (X!=null && X!=s && !X.equals(s))",
      "right" : "if (X!=null && X!=s && !X.equals(s))",
      "info" : "IfStatement[8135-8185]:IfStatement[8135-8185]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8172-8185]:ReturnStatement[8172-8185]"
    }, {
      "left" : "return id;",
      "right" : "return id;",
      "info" : "ReturnStatement[8204-8214]:ReturnStatement[8204-8214]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8226-8232]:Modifier[8226-8232]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8233-8239]:Modifier[8233-8239]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8240-8247]:PrimitiveType[8240-8247]"
    }, {
      "left" : "isJSIdentifier",
      "right" : "isJSIdentifier",
      "info" : "SimpleName[8248-8262]:SimpleName[8248-8262]"
    }, {
      "left" : "String s",
      "right" : "String s",
      "info" : "SingleVariableDeclaration[8263-8271]:SingleVariableDeclaration[8263-8271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8273-8603]:Block[8273-8708]"
    }, {
      "left" : "int length = s.length();",
      "right" : "int length = s.length();",
      "info" : "VariableDeclarationStatement[8281-8305]:VariableDeclarationStatement[8281-8305]"
    }, {
      "left" : "if (length == 0 ||\n          !Character.isJavaIdentifierStart(s.charAt(0)))",
      "right" : "if (length == 0 ||\n          Character.isIdentifierIgnorable(s.charAt(0)) ||\n          !Character.isJavaIdentifierStart(s.charAt(0)))",
      "info" : "IfStatement[8313-8420]:IfStatement[8313-8478]"
    }, {
      "left" : "length == 0",
      "right" : "length == 0",
      "info" : "InfixExpression[8317-8328]:InfixExpression[8317-8328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8389-8420]:Block[8447-8478]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8399-8412]:ReturnStatement[8457-8470]"
    }, {
      "left" : "for (int i = 1; i < length; i++)",
      "right" : "for (int i = 1; i < length; i++)",
      "info" : "ForStatement[8428-8577]:ForStatement[8486-8682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8461-8577]:Block[8519-8682]"
    }, {
      "left" : "if (\n            !Character.isJavaIdentifierPart(s.charAt(i)))",
      "right" : "if (Character.isIdentifierIgnorable(s.charAt(i)) ||\n            !Character.isJavaIdentifierPart(s.charAt(i)))",
      "info" : "IfStatement[8471-8569]:IfStatement[8529-8674]"
    }, {
      "left" : "!Character.isJavaIdentifierPart(s.charAt(i))",
      "right" : "!Character.isJavaIdentifierPart(s.charAt(i))",
      "info" : "PrefixExpression[8488-8532]:PrefixExpression[8593-8637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8534-8569]:Block[8639-8674]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8546-8559]:ReturnStatement[8651-8664]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8585-8597]:ReturnStatement[8690-8702]"
    } ]
  },
  "interFileMappings" : { }
}