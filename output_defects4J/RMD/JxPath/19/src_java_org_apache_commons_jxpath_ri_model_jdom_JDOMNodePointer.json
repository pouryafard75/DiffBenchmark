{
  "matchedElements" : [
 {
    "left" : "class : JDOMNodePointer",
    "right" : "class : JDOMNodePointer",
    "info" : "TypeDeclaration[1828-26523]:TypeDeclaration[1828-26818]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[1992-2059]:FieldDeclaration[1992-2059]"
  }, {
    "left" : "node",
    "right" : "node",
    "info" : "FieldDeclaration[2065-2085]:FieldDeclaration[2065-2085]"
  }, {
    "left" : "id",
    "right" : "id",
    "info" : "FieldDeclaration[2090-2108]:FieldDeclaration[2090-2108]"
  }, {
    "left" : "localNamespaceResolver",
    "right" : "localNamespaceResolver",
    "info" : "FieldDeclaration[2113-2162]:FieldDeclaration[2113-2162]"
  }, {
    "left" : "XML_NAMESPACE_URI",
    "right" : "XML_NAMESPACE_URI",
    "info" : "FieldDeclaration[2168-2288]:FieldDeclaration[2168-2288]"
  }, {
    "left" : "XMLNS_NAMESPACE_URI",
    "right" : "XMLNS_NAMESPACE_URI",
    "info" : "FieldDeclaration[2294-2411]:FieldDeclaration[2294-2411]"
  }, {
    "left" : "public JDOMNodePointer(node , locale )",
    "right" : "public JDOMNodePointer(node , locale )",
    "info" : "MethodDeclaration[2417-2638]:MethodDeclaration[2417-2638]"
  }, {
    "left" : "public JDOMNodePointer(node , locale , id )",
    "right" : "public JDOMNodePointer(node , locale , id )",
    "info" : "MethodDeclaration[2644-2925]:MethodDeclaration[2644-2925]"
  }, {
    "left" : "public JDOMNodePointer(parent , node )",
    "right" : "public JDOMNodePointer(parent , node )",
    "info" : "MethodDeclaration[2931-3156]:MethodDeclaration[2931-3156]"
  }, {
    "left" : "public childIterator(test , reverse boolean, startWith ) : ",
    "right" : "public childIterator(test , reverse boolean, startWith ) : ",
    "info" : "MethodDeclaration[3162-3352]:MethodDeclaration[3162-3352]"
  }, {
    "left" : "public attributeIterator(name ) : ",
    "right" : "public attributeIterator(name ) : ",
    "info" : "MethodDeclaration[3358-3469]:MethodDeclaration[3358-3469]"
  }, {
    "left" : "public namespaceIterator() : ",
    "right" : "public namespaceIterator() : ",
    "info" : "MethodDeclaration[3475-3570]:MethodDeclaration[3475-3570]"
  }, {
    "left" : "public namespacePointer(prefix ) : ",
    "right" : "public namespacePointer(prefix ) : ",
    "info" : "MethodDeclaration[3576-3689]:MethodDeclaration[3576-3689]"
  }, {
    "left" : "public getNamespaceURI() : ",
    "right" : "public getNamespaceURI() : ",
    "info" : "MethodDeclaration[3695-3772]:MethodDeclaration[3695-3772]"
  }, {
    "left" : "private getNamespaceURI(node ) : ",
    "right" : "private getNamespaceURI(node ) : ",
    "info" : "MethodDeclaration[3778-4230]:MethodDeclaration[3778-4230]"
  }, {
    "left" : "public getNamespaceResolver() : ",
    "right" : "public getNamespaceResolver() : ",
    "info" : "MethodDeclaration[4236-4558]:MethodDeclaration[4236-4558]"
  }, {
    "left" : "public getNamespaceURI(prefix ) : ",
    "right" : "public getNamespaceURI(prefix ) : ",
    "info" : "MethodDeclaration[4564-5109]:MethodDeclaration[4564-5109]"
  }, {
    "left" : "public compareChildNodePointers(pointer1 , pointer2 ) : int",
    "right" : "public compareChildNodePointers(pointer1 , pointer2 ) : int",
    "info" : "MethodDeclaration[5115-6689]:MethodDeclaration[5115-6689]"
  }, {
    "left" : "public getBaseValue() : ",
    "right" : "public getBaseValue() : ",
    "info" : "MethodDeclaration[6695-6752]:MethodDeclaration[6695-6752]"
  }, {
    "left" : "public isCollection() : boolean",
    "right" : "public isCollection() : boolean",
    "info" : "MethodDeclaration[6758-6817]:MethodDeclaration[6758-6817]"
  }, {
    "left" : "public getLength() : int",
    "right" : "public getLength() : int",
    "info" : "MethodDeclaration[6823-6871]:MethodDeclaration[6823-6871]"
  }, {
    "left" : "public isLeaf() : boolean",
    "right" : "public isLeaf() : boolean",
    "info" : "MethodDeclaration[6877-7153]:MethodDeclaration[6877-7153]"
  }, {
    "left" : "public getName() : ",
    "right" : "public getName() : ",
    "info" : "MethodDeclaration[7159-7642]:MethodDeclaration[7159-7642]"
  }, {
    "left" : "public getImmediateNode() : ",
    "right" : "public getImmediateNode() : ",
    "info" : "MethodDeclaration[7648-7709]:MethodDeclaration[7648-7709]"
  }, {
    "left" : "public getValue() : ",
    "right" : "public getValue() : ",
    "info" : "MethodDeclaration[7715-8887]:MethodDeclaration[7715-8887]"
  }, {
    "left" : "public setValue(value ) : void",
    "right" : "public setValue(value ) : void",
    "info" : "MethodDeclaration[8893-10628]:MethodDeclaration[8893-10628]"
  }, {
    "left" : "private addContent(content ) : void",
    "right" : "private addContent(content ) : void",
    "info" : "MethodDeclaration[10634-11800]:MethodDeclaration[10634-11800]"
  }, {
    "left" : "public testNode(test ) : boolean",
    "right" : "public testNode(test ) : boolean",
    "info" : "MethodDeclaration[11806-11895]:MethodDeclaration[11806-11895]"
  }, {
    "left" : "public testNode(pointer , node , test ) : boolean",
    "right" : "public testNode(pointer , node , test ) : boolean",
    "info" : "MethodDeclaration[11901-14123]:MethodDeclaration[11901-14123]"
  }, {
    "left" : "private equalStrings(s1 , s2 ) : boolean",
    "right" : "private equalStrings(s1 , s2 ) : boolean",
    "info" : "MethodDeclaration[14129-14517]:MethodDeclaration[14129-14517]"
  }, {
    "left" : "public getPrefix(node ) : ",
    "right" : "public getPrefix(node ) : ",
    "info" : "MethodDeclaration[14523-15086]:MethodDeclaration[14523-15086]"
  }, {
    "left" : "public getLocalName(node ) : ",
    "right" : "public getLocalName(node ) : ",
    "info" : "MethodDeclaration[15092-15489]:MethodDeclaration[15092-15489]"
  }, {
    "left" : "public isLanguage(lang ) : boolean",
    "right" : "public isLanguage(lang ) : boolean",
    "info" : "MethodDeclaration[15495-16053]:MethodDeclaration[15495-16053]"
  }, {
    "left" : "protected getLanguage() : ",
    "right" : "protected getLanguage() : ",
    "info" : "MethodDeclaration[16059-16263]:MethodDeclaration[16059-16263]"
  }, {
    "left" : "protected findEnclosingAttribute(n , attrName , ns ...) : ",
    "right" : "protected findEnclosingAttribute(n , attrName , ns ...) : ",
    "info" : "MethodDeclaration[16269-16972]:MethodDeclaration[16269-16972]"
  }, {
    "left" : "private nodeParent(node ) : ",
    "right" : "private nodeParent(node ) : ",
    "info" : "MethodDeclaration[16978-17801]:MethodDeclaration[16978-17801]"
  }, {
    "left" : "public createChild(context , name , index int) : ",
    "right" : "public createChild(context , name , index int) : ",
    "info" : "MethodDeclaration[17807-18870]:MethodDeclaration[17807-18870]"
  }, {
    "left" : "public createChild(context , name , index int, value ) : ",
    "right" : "public createChild(context , name , index int, value ) : ",
    "info" : "MethodDeclaration[18876-19097]:MethodDeclaration[18876-19097]"
  }, {
    "left" : "public createAttribute(context , name ) : ",
    "right" : "public createAttribute(context , name ) : ",
    "info" : "MethodDeclaration[19103-20215]:MethodDeclaration[19103-20215]"
  }, {
    "left" : "public remove() : void",
    "right" : "public remove() : void",
    "info" : "MethodDeclaration[20221-20445]:MethodDeclaration[20221-20445]"
  }, {
    "left" : "public asPath() : ",
    "right" : "public asPath() : ",
    "info" : "MethodDeclaration[20451-22758]:MethodDeclaration[20451-22758]"
  }, {
    "left" : "private getRelativePositionByQName() : int",
    "right" : "private getRelativePositionByQName() : int",
    "info" : "MethodDeclaration[22764-23673]:MethodDeclaration[22764-23633]"
  }, {
    "left" : "private getRelativePositionOfElement() : int",
    "right" : "private getRelativePositionOfElement() : int",
    "info" : "MethodDeclaration[23680-24455]:MethodDeclaration[23975-24750]"
  }, {
    "left" : "private getRelativePositionOfTextNode() : int",
    "right" : "private getRelativePositionOfTextNode() : int",
    "info" : "MethodDeclaration[24461-25261]:MethodDeclaration[24756-25556]"
  }, {
    "left" : "private getRelativePositionOfPI() : int",
    "right" : "private getRelativePositionOfPI() : int",
    "info" : "MethodDeclaration[25267-26155]:MethodDeclaration[25562-26450]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[26161-26222]:MethodDeclaration[26456-26517]"
  }, {
    "left" : "public equals(object ) : boolean",
    "right" : "public equals(object ) : boolean",
    "info" : "MethodDeclaration[26228-26520]:MethodDeclaration[26523-26815]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1937-1943]:Modifier[1937-1943]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1944-1949]:TYPE_DECLARATION_KIND[1944-1949]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2525-2531]:Modifier[2525-2531]"
  }, {
    "left" : "JDOMNodePointer",
    "right" : "JDOMNodePointer",
    "info" : "SimpleName[2532-2547]:SimpleName[2532-2547]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[2548-2559]:SingleVariableDeclaration[2548-2559]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[2561-2574]:SingleVariableDeclaration[2561-2574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2576-2638]:Block[2576-2638]"
  }, {
    "left" : "super(null, locale);",
    "right" : "super(null, locale);",
    "info" : "SuperConstructorInvocation[2586-2606]:SuperConstructorInvocation[2586-2606]"
  }, {
    "left" : "this.node = node;",
    "right" : "this.node = node;",
    "info" : "ExpressionStatement[2615-2632]:ExpressionStatement[2615-2632]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2779-2785]:Modifier[2779-2785]"
  }, {
    "left" : "JDOMNodePointer",
    "right" : "JDOMNodePointer",
    "info" : "SimpleName[2786-2801]:SimpleName[2786-2801]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[2802-2813]:SingleVariableDeclaration[2802-2813]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[2815-2828]:SingleVariableDeclaration[2815-2828]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[2830-2839]:SingleVariableDeclaration[2830-2839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2841-2925]:Block[2841-2925]"
  }, {
    "left" : "super(null, locale);",
    "right" : "super(null, locale);",
    "info" : "SuperConstructorInvocation[2851-2871]:SuperConstructorInvocation[2851-2871]"
  }, {
    "left" : "this.node = node;",
    "right" : "this.node = node;",
    "info" : "ExpressionStatement[2880-2897]:ExpressionStatement[2880-2897]"
  }, {
    "left" : "this.id = id;",
    "right" : "this.id = id;",
    "info" : "ExpressionStatement[2906-2919]:ExpressionStatement[2906-2919]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3044-3050]:Modifier[3044-3050]"
  }, {
    "left" : "JDOMNodePointer",
    "right" : "JDOMNodePointer",
    "info" : "SimpleName[3051-3066]:SimpleName[3051-3066]"
  }, {
    "left" : "NodePointer parent",
    "right" : "NodePointer parent",
    "info" : "SingleVariableDeclaration[3067-3085]:SingleVariableDeclaration[3067-3085]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[3087-3098]:SingleVariableDeclaration[3087-3098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3100-3156]:Block[3100-3156]"
  }, {
    "left" : "super(parent);",
    "right" : "super(parent);",
    "info" : "SuperConstructorInvocation[3110-3124]:SuperConstructorInvocation[3110-3124]"
  }, {
    "left" : "this.node = node;",
    "right" : "this.node = node;",
    "info" : "ExpressionStatement[3133-3150]:ExpressionStatement[3133-3150]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3162-3168]:Modifier[3162-3168]"
  }, {
    "left" : "NodeIterator",
    "right" : "NodeIterator",
    "info" : "SimpleType[3169-3181]:SimpleType[3169-3181]"
  }, {
    "left" : "childIterator",
    "right" : "childIterator",
    "info" : "SimpleName[3182-3195]:SimpleName[3182-3195]"
  }, {
    "left" : "NodeTest test",
    "right" : "NodeTest test",
    "info" : "SingleVariableDeclaration[3205-3218]:SingleVariableDeclaration[3205-3218]"
  }, {
    "left" : "boolean reverse",
    "right" : "boolean reverse",
    "info" : "SingleVariableDeclaration[3228-3243]:SingleVariableDeclaration[3228-3243]"
  }, {
    "left" : "NodePointer startWith",
    "right" : "NodePointer startWith",
    "info" : "SingleVariableDeclaration[3253-3274]:SingleVariableDeclaration[3253-3274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3276-3352]:Block[3276-3352]"
  }, {
    "left" : "return new JDOMNodeIterator(this, test, reverse, startWith);",
    "right" : "return new JDOMNodeIterator(this, test, reverse, startWith);",
    "info" : "ReturnStatement[3286-3346]:ReturnStatement[3286-3346]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3358-3364]:Modifier[3358-3364]"
  }, {
    "left" : "NodeIterator",
    "right" : "NodeIterator",
    "info" : "SimpleType[3365-3377]:SimpleType[3365-3377]"
  }, {
    "left" : "attributeIterator",
    "right" : "attributeIterator",
    "info" : "SimpleName[3378-3395]:SimpleName[3378-3395]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[3396-3406]:SingleVariableDeclaration[3396-3406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3408-3469]:Block[3408-3469]"
  }, {
    "left" : "return new JDOMAttributeIterator(this, name);",
    "right" : "return new JDOMAttributeIterator(this, name);",
    "info" : "ReturnStatement[3418-3463]:ReturnStatement[3418-3463]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3475-3481]:Modifier[3475-3481]"
  }, {
    "left" : "NodeIterator",
    "right" : "NodeIterator",
    "info" : "SimpleType[3482-3494]:SimpleType[3482-3494]"
  }, {
    "left" : "namespaceIterator",
    "right" : "namespaceIterator",
    "info" : "SimpleName[3495-3512]:SimpleName[3495-3512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3515-3570]:Block[3515-3570]"
  }, {
    "left" : "return new JDOMNamespaceIterator(this);",
    "right" : "return new JDOMNamespaceIterator(this);",
    "info" : "ReturnStatement[3525-3564]:ReturnStatement[3525-3564]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3576-3582]:Modifier[3576-3582]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[3583-3594]:SimpleType[3583-3594]"
  }, {
    "left" : "namespacePointer",
    "right" : "namespacePointer",
    "info" : "SimpleName[3595-3611]:SimpleName[3595-3611]"
  }, {
    "left" : "String prefix",
    "right" : "String prefix",
    "info" : "SingleVariableDeclaration[3612-3625]:SingleVariableDeclaration[3612-3625]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3627-3689]:Block[3627-3689]"
  }, {
    "left" : "return new JDOMNamespacePointer(this, prefix);",
    "right" : "return new JDOMNamespacePointer(this, prefix);",
    "info" : "ReturnStatement[3637-3683]:ReturnStatement[3637-3683]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3695-3701]:Modifier[3695-3701]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3702-3708]:SimpleType[3702-3708]"
  }, {
    "left" : "getNamespaceURI",
    "right" : "getNamespaceURI",
    "info" : "SimpleName[3709-3724]:SimpleName[3709-3724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3727-3772]:Block[3727-3772]"
  }, {
    "left" : "return getNamespaceURI(node);",
    "right" : "return getNamespaceURI(node);",
    "info" : "ReturnStatement[3737-3766]:ReturnStatement[3737-3766]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3894-3901]:Modifier[3894-3901]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3902-3908]:Modifier[3902-3908]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3909-3915]:SimpleType[3909-3915]"
  }, {
    "left" : "getNamespaceURI",
    "right" : "getNamespaceURI",
    "info" : "SimpleName[3916-3931]:SimpleName[3916-3931]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[3932-3943]:SingleVariableDeclaration[3932-3943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3945-4230]:Block[3945-4230]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[3955-4203]:IfStatement[3955-4203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3984-4203]:Block[3984-4203]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[3998-4031]:VariableDeclarationStatement[3998-4031]"
  }, {
    "left" : "String ns = element.getNamespaceURI();",
    "right" : "String ns = element.getNamespaceURI();",
    "info" : "VariableDeclarationStatement[4044-4082]:VariableDeclarationStatement[4044-4082]"
  }, {
    "left" : "if (ns != null && ns.equals(\"\"))",
    "right" : "if (ns != null && ns.equals(\"\"))",
    "info" : "IfStatement[4095-4170]:IfStatement[4095-4170]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4128-4170]:Block[4128-4170]"
  }, {
    "left" : "ns = null;",
    "right" : "ns = null;",
    "info" : "ExpressionStatement[4146-4156]:ExpressionStatement[4146-4156]"
  }, {
    "left" : "return ns;",
    "right" : "return ns;",
    "info" : "ReturnStatement[4183-4193]:ReturnStatement[4183-4193]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[4212-4224]:ReturnStatement[4212-4224]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4236-4242]:Modifier[4236-4242]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[4243-4255]:Modifier[4243-4255]"
  }, {
    "left" : "NamespaceResolver",
    "right" : "NamespaceResolver",
    "info" : "SimpleType[4256-4273]:SimpleType[4256-4273]"
  }, {
    "left" : "getNamespaceResolver",
    "right" : "getNamespaceResolver",
    "info" : "SimpleName[4274-4294]:SimpleName[4274-4294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4297-4558]:Block[4297-4558]"
  }, {
    "left" : "if (localNamespaceResolver == null)",
    "right" : "if (localNamespaceResolver == null)",
    "info" : "IfStatement[4307-4513]:IfStatement[4307-4513]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4343-4513]:Block[4343-4513]"
  }, {
    "left" : "localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());",
    "right" : "localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());",
    "info" : "ExpressionStatement[4357-4434]:ExpressionStatement[4357-4434]"
  }, {
    "left" : "localNamespaceResolver.setNamespaceContextPointer(this);",
    "right" : "localNamespaceResolver.setNamespaceContextPointer(this);",
    "info" : "ExpressionStatement[4447-4503]:ExpressionStatement[4447-4503]"
  }, {
    "left" : "return localNamespaceResolver;",
    "right" : "return localNamespaceResolver;",
    "info" : "ReturnStatement[4522-4552]:ReturnStatement[4522-4552]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4564-4570]:Modifier[4564-4570]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4571-4577]:SimpleType[4571-4577]"
  }, {
    "left" : "getNamespaceURI",
    "right" : "getNamespaceURI",
    "info" : "SimpleName[4578-4593]:SimpleName[4578-4593]"
  }, {
    "left" : "String prefix",
    "right" : "String prefix",
    "info" : "SingleVariableDeclaration[4594-4607]:SingleVariableDeclaration[4594-4607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4609-5109]:Block[4609-5109]"
  }, {
    "left" : "if (prefix.equals(\"xml\"))",
    "right" : "if (prefix.equals(\"xml\"))",
    "info" : "IfStatement[4619-4709]:IfStatement[4619-4709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4645-4709]:Block[4645-4709]"
  }, {
    "left" : "return Namespace.XML_NAMESPACE.getURI();",
    "right" : "return Namespace.XML_NAMESPACE.getURI();",
    "info" : "ReturnStatement[4659-4699]:ReturnStatement[4659-4699]"
  }, {
    "left" : "Element element = null;",
    "right" : "Element element = null;",
    "info" : "VariableDeclarationStatement[4718-4741]:VariableDeclarationStatement[4718-4741]"
  }, {
    "left" : "if (node instanceof Document)",
    "right" : "if (node instanceof Document)",
    "info" : "IfStatement[4750-4849]:IfStatement[4750-4849]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4780-4849]:Block[4780-4849]"
  }, {
    "left" : "element = ((Document) node).getRootElement();",
    "right" : "element = ((Document) node).getRootElement();",
    "info" : "ExpressionStatement[4794-4839]:ExpressionStatement[4794-4839]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[4858-4936]:IfStatement[4858-4936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4887-4936]:Block[4887-4936]"
  }, {
    "left" : "element = (Element) node;",
    "right" : "element = (Element) node;",
    "info" : "ExpressionStatement[4901-4926]:ExpressionStatement[4901-4926]"
  }, {
    "left" : "if (element == null)",
    "right" : "if (element == null)",
    "info" : "IfStatement[4945-5002]:IfStatement[4945-5002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4966-5002]:Block[4966-5002]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[4980-4992]:ReturnStatement[4980-4992]"
  }, {
    "left" : "Namespace ns = element.getNamespace(prefix);",
    "right" : "Namespace ns = element.getNamespace(prefix);",
    "info" : "VariableDeclarationStatement[5011-5055]:VariableDeclarationStatement[5011-5055]"
  }, {
    "left" : "return ns == null ? null : ns.getURI();",
    "right" : "return ns == null ? null : ns.getURI();",
    "info" : "ReturnStatement[5064-5103]:ReturnStatement[5064-5103]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5115-5121]:Modifier[5115-5121]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[5122-5125]:PrimitiveType[5122-5125]"
  }, {
    "left" : "compareChildNodePointers",
    "right" : "compareChildNodePointers",
    "info" : "SimpleName[5126-5150]:SimpleName[5126-5150]"
  }, {
    "left" : "NodePointer pointer1",
    "right" : "NodePointer pointer1",
    "info" : "SingleVariableDeclaration[5160-5180]:SingleVariableDeclaration[5160-5180]"
  }, {
    "left" : "NodePointer pointer2",
    "right" : "NodePointer pointer2",
    "info" : "SingleVariableDeclaration[5190-5210]:SingleVariableDeclaration[5190-5210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5212-6689]:Block[5212-6689]"
  }, {
    "left" : "Object node1 = pointer1.getBaseValue();",
    "right" : "Object node1 = pointer1.getBaseValue();",
    "info" : "VariableDeclarationStatement[5222-5261]:VariableDeclarationStatement[5222-5261]"
  }, {
    "left" : "Object node2 = pointer2.getBaseValue();",
    "right" : "Object node2 = pointer2.getBaseValue();",
    "info" : "VariableDeclarationStatement[5270-5309]:VariableDeclarationStatement[5270-5309]"
  }, {
    "left" : "if (node1 == node2)",
    "right" : "if (node1 == node2)",
    "info" : "IfStatement[5318-5371]:IfStatement[5318-5371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5338-5371]:Block[5338-5371]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[5352-5361]:ReturnStatement[5352-5361]"
  }, {
    "left" : "if ((node1 instanceof Attribute) && !(node2 instanceof Attribute))",
    "right" : "if ((node1 instanceof Attribute) && !(node2 instanceof Attribute))",
    "info" : "IfStatement[5381-5482]:IfStatement[5381-5482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5448-5482]:Block[5448-5482]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[5462-5472]:ReturnStatement[5462-5472]"
  }, {
    "left" : "if (\n            !(node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "right" : "if (\n            !(node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "info" : "IfStatement[5491-5604]:IfStatement[5491-5604]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5571-5604]:Block[5571-5604]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[5585-5594]:ReturnStatement[5585-5594]"
  }, {
    "left" : "if (\n            (node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "right" : "if (\n            (node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "info" : "IfStatement[5613-6118]:IfStatement[5613-6118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5692-6118]:Block[5692-6118]"
  }, {
    "left" : "List list = ((Element) getNode()).getAttributes();",
    "right" : "List list = ((Element) getNode()).getAttributes();",
    "info" : "VariableDeclarationStatement[5706-5756]:VariableDeclarationStatement[5706-5756]"
  }, {
    "left" : "int length = list.size();",
    "right" : "int length = list.size();",
    "info" : "VariableDeclarationStatement[5769-5794]:VariableDeclarationStatement[5769-5794]"
  }, {
    "left" : "for (int i = 0; i < length; i++)",
    "right" : "for (int i = 0; i < length; i++)",
    "info" : "ForStatement[5807-6065]:ForStatement[5807-6065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5840-6065]:Block[5840-6065]"
  }, {
    "left" : "Object n = list.get(i);",
    "right" : "Object n = list.get(i);",
    "info" : "VariableDeclarationStatement[5858-5881]:VariableDeclarationStatement[5858-5881]"
  }, {
    "left" : "if (n == node1)",
    "right" : "if (n == node1)",
    "info" : "IfStatement[5898-6051]:IfStatement[5898-6051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5914-5964]:Block[5914-5964]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[5936-5946]:ReturnStatement[5936-5946]"
  }, {
    "left" : "if (n == node2)",
    "right" : "if (n == node2)",
    "info" : "IfStatement[5986-6051]:IfStatement[5986-6051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6002-6051]:Block[6002-6051]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[6024-6033]:ReturnStatement[6024-6033]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[6078-6087]:ReturnStatement[6078-6087]"
  }, {
    "left" : "if (!(node instanceof Element))",
    "right" : "if (!(node instanceof Element))",
    "info" : "IfStatement[6128-6336]:IfStatement[6128-6336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6160-6336]:Block[6160-6336]"
  }, {
    "left" : "throw new RuntimeException(\n                \"JXPath internal error: \"\n                    + \"compareChildNodes called for \"\n                    + node);",
    "right" : "throw new RuntimeException(\n                \"JXPath internal error: \"\n                    + \"compareChildNodes called for \"\n                    + node);",
    "info" : "ThrowStatement[6174-6326]:ThrowStatement[6174-6326]"
  }, {
    "left" : "List children = ((Element) node).getContent();",
    "right" : "List children = ((Element) node).getContent();",
    "info" : "VariableDeclarationStatement[6346-6392]:VariableDeclarationStatement[6346-6392]"
  }, {
    "left" : "int length = children.size();",
    "right" : "int length = children.size();",
    "info" : "VariableDeclarationStatement[6401-6430]:VariableDeclarationStatement[6401-6430]"
  }, {
    "left" : "for (int i = 0; i < length; i++)",
    "right" : "for (int i = 0; i < length; i++)",
    "info" : "ForStatement[6439-6664]:ForStatement[6439-6664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6472-6664]:Block[6472-6664]"
  }, {
    "left" : "Object n = children.get(i);",
    "right" : "Object n = children.get(i);",
    "info" : "VariableDeclarationStatement[6486-6513]:VariableDeclarationStatement[6486-6513]"
  }, {
    "left" : "if (n == node1)",
    "right" : "if (n == node1)",
    "info" : "IfStatement[6526-6584]:IfStatement[6526-6584]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6542-6584]:Block[6542-6584]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[6560-6570]:ReturnStatement[6560-6570]"
  }, {
    "left" : "if (n == node2)",
    "right" : "if (n == node2)",
    "info" : "IfStatement[6597-6654]:IfStatement[6597-6654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6613-6654]:Block[6613-6654]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[6631-6640]:ReturnStatement[6631-6640]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[6674-6683]:ReturnStatement[6674-6683]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6695-6701]:Modifier[6695-6701]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[6702-6708]:SimpleType[6702-6708]"
  }, {
    "left" : "getBaseValue",
    "right" : "getBaseValue",
    "info" : "SimpleName[6709-6721]:SimpleName[6709-6721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6724-6752]:Block[6724-6752]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[6734-6746]:ReturnStatement[6734-6746]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6758-6764]:Modifier[6758-6764]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6765-6772]:PrimitiveType[6765-6772]"
  }, {
    "left" : "isCollection",
    "right" : "isCollection",
    "info" : "SimpleName[6773-6785]:SimpleName[6773-6785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6788-6817]:Block[6788-6817]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6798-6811]:ReturnStatement[6798-6811]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6823-6829]:Modifier[6823-6829]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[6830-6833]:PrimitiveType[6830-6833]"
  }, {
    "left" : "getLength",
    "right" : "getLength",
    "info" : "SimpleName[6834-6843]:SimpleName[6834-6843]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6846-6871]:Block[6846-6871]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[6856-6865]:ReturnStatement[6856-6865]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6877-6883]:Modifier[6877-6883]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6884-6891]:PrimitiveType[6884-6891]"
  }, {
    "left" : "isLeaf",
    "right" : "isLeaf",
    "info" : "SimpleName[6892-6898]:SimpleName[6892-6898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6901-7153]:Block[6901-7153]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[6911-7013]:IfStatement[6911-7013]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6940-7013]:Block[6940-7013]"
  }, {
    "left" : "return ((Element) node).getContent().size() == 0;",
    "right" : "return ((Element) node).getContent().size() == 0;",
    "info" : "ReturnStatement[6954-7003]:ReturnStatement[6954-7003]"
  }, {
    "left" : "if (node instanceof Document)",
    "right" : "if (node instanceof Document)",
    "info" : "IfStatement[7022-7126]:IfStatement[7022-7126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7052-7126]:Block[7052-7126]"
  }, {
    "left" : "return ((Document) node).getContent().size() == 0;",
    "right" : "return ((Document) node).getContent().size() == 0;",
    "info" : "ReturnStatement[7066-7116]:ReturnStatement[7066-7116]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[7135-7147]:ReturnStatement[7135-7147]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7159-7165]:Modifier[7159-7165]"
  }, {
    "left" : "QName",
    "right" : "QName",
    "info" : "SimpleType[7166-7171]:SimpleType[7166-7171]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[7172-7179]:SimpleName[7172-7179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7182-7642]:Block[7182-7642]"
  }, {
    "left" : "String ns = null;",
    "right" : "String ns = null;",
    "info" : "VariableDeclarationStatement[7192-7209]:VariableDeclarationStatement[7192-7209]"
  }, {
    "left" : "String ln = null;",
    "right" : "String ln = null;",
    "info" : "VariableDeclarationStatement[7218-7235]:VariableDeclarationStatement[7218-7235]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[7244-7602]:IfStatement[7244-7602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7273-7473]:Block[7273-7473]"
  }, {
    "left" : "ns = ((Element) node).getNamespacePrefix();",
    "right" : "ns = ((Element) node).getNamespacePrefix();",
    "info" : "ExpressionStatement[7287-7330]:ExpressionStatement[7287-7330]"
  }, {
    "left" : "if (ns != null && ns.equals(\"\"))",
    "right" : "if (ns != null && ns.equals(\"\"))",
    "info" : "IfStatement[7343-7418]:IfStatement[7343-7418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7376-7418]:Block[7376-7418]"
  }, {
    "left" : "ns = null;",
    "right" : "ns = null;",
    "info" : "ExpressionStatement[7394-7404]:ExpressionStatement[7394-7404]"
  }, {
    "left" : "ln = ((Element) node).getName();",
    "right" : "ln = ((Element) node).getName();",
    "info" : "ExpressionStatement[7431-7463]:ExpressionStatement[7431-7463]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[7487-7602]:IfStatement[7487-7602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7530-7602]:Block[7530-7602]"
  }, {
    "left" : "ln = ((ProcessingInstruction) node).getTarget();",
    "right" : "ln = ((ProcessingInstruction) node).getTarget();",
    "info" : "ExpressionStatement[7544-7592]:ExpressionStatement[7544-7592]"
  }, {
    "left" : "return new QName(ns, ln);",
    "right" : "return new QName(ns, ln);",
    "info" : "ReturnStatement[7611-7636]:ReturnStatement[7611-7636]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7648-7654]:Modifier[7648-7654]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[7655-7661]:SimpleType[7655-7661]"
  }, {
    "left" : "getImmediateNode",
    "right" : "getImmediateNode",
    "info" : "SimpleName[7662-7678]:SimpleName[7662-7678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7681-7709]:Block[7681-7709]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[7691-7703]:ReturnStatement[7691-7703]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7715-7721]:Modifier[7715-7721]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[7722-7728]:SimpleType[7722-7728]"
  }, {
    "left" : "getValue",
    "right" : "getValue",
    "info" : "SimpleName[7729-7737]:SimpleName[7729-7737]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7740-8887]:Block[7740-8887]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[7750-8252]:IfStatement[7750-8252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7779-8252]:Block[7779-8252]"
  }, {
    "left" : "StringBuffer buf = new StringBuffer();",
    "right" : "StringBuffer buf = new StringBuffer();",
    "info" : "VariableDeclarationStatement[7793-7831]:VariableDeclarationStatement[7793-7831]"
  }, {
    "left" : "for (NodeIterator children = childIterator(null, false, null); children.setPosition(children.getPosition() + 1))",
    "right" : "for (NodeIterator children = childIterator(null, false, null); children.setPosition(children.getPosition() + 1))",
    "info" : "ForStatement[7844-8207]:ForStatement[7844-8207]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7958-8207]:Block[7958-8207]"
  }, {
    "left" : "NodePointer ptr = children.getNodePointer();",
    "right" : "NodePointer ptr = children.getNodePointer();",
    "info" : "VariableDeclarationStatement[7976-8020]:VariableDeclarationStatement[7976-8020]"
  }, {
    "left" : "if (ptr.getImmediateNode() instanceof Element || ptr.getImmediateNode() instanceof Text)",
    "right" : "if (ptr.getImmediateNode() instanceof Element || ptr.getImmediateNode() instanceof Text)",
    "info" : "IfStatement[8037-8193]:IfStatement[8037-8193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8126-8193]:Block[8126-8193]"
  }, {
    "left" : "buf.append(ptr.getValue());",
    "right" : "buf.append(ptr.getValue());",
    "info" : "ExpressionStatement[8148-8175]:ExpressionStatement[8148-8175]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[8220-8242]:ReturnStatement[8220-8242]"
  }, {
    "left" : "if (node instanceof Comment)",
    "right" : "if (node instanceof Comment)",
    "info" : "IfStatement[8261-8462]:IfStatement[8261-8462]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8290-8462]:Block[8290-8462]"
  }, {
    "left" : "String text = ((Comment) node).getText();",
    "right" : "String text = ((Comment) node).getText();",
    "info" : "VariableDeclarationStatement[8304-8345]:VariableDeclarationStatement[8304-8345]"
  }, {
    "left" : "if (text != null)",
    "right" : "if (text != null)",
    "info" : "IfStatement[8358-8427]:IfStatement[8358-8427]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8376-8427]:Block[8376-8427]"
  }, {
    "left" : "text = text.trim();",
    "right" : "text = text.trim();",
    "info" : "ExpressionStatement[8394-8413]:ExpressionStatement[8394-8413]"
  }, {
    "left" : "return text;",
    "right" : "return text;",
    "info" : "ReturnStatement[8440-8452]:ReturnStatement[8440-8452]"
  }, {
    "left" : "String result = null;",
    "right" : "String result = null;",
    "info" : "VariableDeclarationStatement[8471-8492]:VariableDeclarationStatement[8471-8492]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[8501-8584]:IfStatement[8501-8584]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8527-8584]:Block[8527-8584]"
  }, {
    "left" : "result = ((Text) node).getText();",
    "right" : "result = ((Text) node).getText();",
    "info" : "ExpressionStatement[8541-8574]:ExpressionStatement[8541-8574]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[8593-8710]:IfStatement[8593-8710]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8636-8710]:Block[8636-8710]"
  }, {
    "left" : "result = ((ProcessingInstruction) node).getData();",
    "right" : "result = ((ProcessingInstruction) node).getData();",
    "info" : "ExpressionStatement[8650-8700]:ExpressionStatement[8650-8700]"
  }, {
    "left" : "boolean trim = !\"preserve\".equals(findEnclosingAttribute(node, \"space\", Namespace.XML_NAMESPACE));",
    "right" : "boolean trim = !\"preserve\".equals(findEnclosingAttribute(node, \"space\", Namespace.XML_NAMESPACE));",
    "info" : "VariableDeclarationStatement[8719-8817]:VariableDeclarationStatement[8719-8817]"
  }, {
    "left" : "return result != null && trim ? result.trim() : result;",
    "right" : "return result != null && trim ? result.trim() : result;",
    "info" : "ReturnStatement[8826-8881]:ReturnStatement[8826-8881]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8893-8899]:Modifier[8893-8899]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8900-8904]:PrimitiveType[8900-8904]"
  }, {
    "left" : "setValue",
    "right" : "setValue",
    "info" : "SimpleName[8905-8913]:SimpleName[8905-8913]"
  }, {
    "left" : "Object value",
    "right" : "Object value",
    "info" : "SingleVariableDeclaration[8914-8926]:SingleVariableDeclaration[8914-8926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8928-10628]:Block[8928-10628]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[8938-10622]:IfStatement[8938-10622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8964-9263]:Block[8964-9263]"
  }, {
    "left" : "String string = (String) TypeUtils.convert(value, String.class);",
    "right" : "String string = (String) TypeUtils.convert(value, String.class);",
    "info" : "VariableDeclarationStatement[8978-9042]:VariableDeclarationStatement[8978-9042]"
  }, {
    "left" : "if (string != null && !string.equals(\"\"))",
    "right" : "if (string != null && !string.equals(\"\"))",
    "info" : "IfStatement[9055-9253]:IfStatement[9055-9253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9097-9159]:Block[9097-9159]"
  }, {
    "left" : "((Text) node).setText(string);",
    "right" : "((Text) node).setText(string);",
    "info" : "ExpressionStatement[9115-9145]:ExpressionStatement[9115-9145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9177-9253]:Block[9177-9253]"
  }, {
    "left" : "nodeParent(node).removeContent((Text) node);",
    "right" : "nodeParent(node).removeContent((Text) node);",
    "info" : "ExpressionStatement[9195-9239]:ExpressionStatement[9195-9239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9277-10622]:Block[9277-10622]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[9291-9324]:VariableDeclarationStatement[9291-9324]"
  }, {
    "left" : "element.getContent().clear();",
    "right" : "element.getContent().clear();",
    "info" : "ExpressionStatement[9337-9366]:ExpressionStatement[9337-9366]"
  }, {
    "left" : "if (value instanceof Element)",
    "right" : "if (value instanceof Element)",
    "info" : "IfStatement[9380-10612]:IfStatement[9380-10612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9410-9536]:Block[9410-9536]"
  }, {
    "left" : "Element valueElement = (Element) value;",
    "right" : "Element valueElement = (Element) value;",
    "info" : "VariableDeclarationStatement[9428-9467]:VariableDeclarationStatement[9428-9467]"
  }, {
    "left" : "addContent(valueElement.getContent());",
    "right" : "addContent(valueElement.getContent());",
    "info" : "ExpressionStatement[9484-9522]:ExpressionStatement[9484-9522]"
  }, {
    "left" : "if (value instanceof Document)",
    "right" : "if (value instanceof Document)",
    "info" : "IfStatement[9554-10612]:IfStatement[9554-10612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9585-9715]:Block[9585-9715]"
  }, {
    "left" : "Document valueDocument = (Document) value;",
    "right" : "Document valueDocument = (Document) value;",
    "info" : "VariableDeclarationStatement[9603-9645]:VariableDeclarationStatement[9603-9645]"
  }, {
    "left" : "addContent(valueDocument.getContent());",
    "right" : "addContent(valueDocument.getContent());",
    "info" : "ExpressionStatement[9662-9701]:ExpressionStatement[9662-9701]"
  }, {
    "left" : "if (value instanceof Text || value instanceof CDATA)",
    "right" : "if (value instanceof Text || value instanceof CDATA)",
    "info" : "IfStatement[9733-10612]:IfStatement[9733-10612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9786-9913]:Block[9786-9913]"
  }, {
    "left" : "String string = ((Text) value).getText();",
    "right" : "String string = ((Text) value).getText();",
    "info" : "VariableDeclarationStatement[9804-9845]:VariableDeclarationStatement[9804-9845]"
  }, {
    "left" : "element.addContent(new Text(string));",
    "right" : "element.addContent(new Text(string));",
    "info" : "ExpressionStatement[9862-9899]:ExpressionStatement[9862-9899]"
  }, {
    "left" : "if (value instanceof ProcessingInstruction)",
    "right" : "if (value instanceof ProcessingInstruction)",
    "info" : "IfStatement[9931-10612]:IfStatement[9931-10612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9975-10183]:Block[9975-10183]"
  }, {
    "left" : "ProcessingInstruction pi =\n                    (ProcessingInstruction) ((ProcessingInstruction) value)\n                        .clone();",
    "right" : "ProcessingInstruction pi =\n                    (ProcessingInstruction) ((ProcessingInstruction) value)\n                        .clone();",
    "info" : "VariableDeclarationStatement[9993-10129]:VariableDeclarationStatement[9993-10129]"
  }, {
    "left" : "element.addContent(pi);",
    "right" : "element.addContent(pi);",
    "info" : "ExpressionStatement[10146-10169]:ExpressionStatement[10146-10169]"
  }, {
    "left" : "if (value instanceof Comment)",
    "right" : "if (value instanceof Comment)",
    "info" : "IfStatement[10201-10612]:IfStatement[10201-10612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10231-10362]:Block[10231-10362]"
  }, {
    "left" : "Comment comment = (Comment) ((Comment) value).clone();",
    "right" : "Comment comment = (Comment) ((Comment) value).clone();",
    "info" : "VariableDeclarationStatement[10249-10303]:VariableDeclarationStatement[10249-10303]"
  }, {
    "left" : "element.addContent(comment);",
    "right" : "element.addContent(comment);",
    "info" : "ExpressionStatement[10320-10348]:ExpressionStatement[10320-10348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10380-10612]:Block[10380-10612]"
  }, {
    "left" : "String string = (String) TypeUtils.convert(value, String.class);",
    "right" : "String string = (String) TypeUtils.convert(value, String.class);",
    "info" : "VariableDeclarationStatement[10398-10462]:VariableDeclarationStatement[10398-10462]"
  }, {
    "left" : "if (string != null && !string.equals(\"\"))",
    "right" : "if (string != null && !string.equals(\"\"))",
    "info" : "IfStatement[10479-10598]:IfStatement[10479-10598]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10521-10598]:Block[10521-10598]"
  }, {
    "left" : "element.addContent(new Text(string));",
    "right" : "element.addContent(new Text(string));",
    "info" : "ExpressionStatement[10543-10580]:ExpressionStatement[10543-10580]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10727-10734]:Modifier[10727-10734]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10735-10739]:PrimitiveType[10735-10739]"
  }, {
    "left" : "addContent",
    "right" : "addContent",
    "info" : "SimpleName[10740-10750]:SimpleName[10740-10750]"
  }, {
    "left" : "List content",
    "right" : "List content",
    "info" : "SingleVariableDeclaration[10751-10763]:SingleVariableDeclaration[10751-10763]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10765-11800]:Block[10765-11800]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[10775-10808]:VariableDeclarationStatement[10775-10808]"
  }, {
    "left" : "int count = content.size();",
    "right" : "int count = content.size();",
    "info" : "VariableDeclarationStatement[10817-10844]:VariableDeclarationStatement[10817-10844]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[10854-11794]:ForStatement[10854-11794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10886-11794]:Block[10886-11794]"
  }, {
    "left" : "Object child = content.get(i);",
    "right" : "Object child = content.get(i);",
    "info" : "VariableDeclarationStatement[10900-10930]:VariableDeclarationStatement[10900-10930]"
  }, {
    "left" : "if (child instanceof Element)",
    "right" : "if (child instanceof Element)",
    "info" : "IfStatement[10943-11784]:IfStatement[10943-11784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10973-11092]:Block[10973-11092]"
  }, {
    "left" : "child = ((Element) child).clone();",
    "right" : "child = ((Element) child).clone();",
    "info" : "ExpressionStatement[10991-11025]:ExpressionStatement[10991-11025]"
  }, {
    "left" : "element.addContent((Element) child);",
    "right" : "element.addContent((Element) child);",
    "info" : "ExpressionStatement[11042-11078]:ExpressionStatement[11042-11078]"
  }, {
    "left" : "if (child instanceof Text)",
    "right" : "if (child instanceof Text)",
    "info" : "IfStatement[11110-11784]:IfStatement[11110-11784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11137-11250]:Block[11137-11250]"
  }, {
    "left" : "child = ((Text) child).clone();",
    "right" : "child = ((Text) child).clone();",
    "info" : "ExpressionStatement[11155-11186]:ExpressionStatement[11155-11186]"
  }, {
    "left" : "element.addContent((Text) child);",
    "right" : "element.addContent((Text) child);",
    "info" : "ExpressionStatement[11203-11236]:ExpressionStatement[11203-11236]"
  }, {
    "left" : "if (node instanceof CDATA)",
    "right" : "if (node instanceof CDATA)",
    "info" : "IfStatement[11268-11784]:IfStatement[11268-11784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11295-11410]:Block[11295-11410]"
  }, {
    "left" : "child = ((CDATA) child).clone();",
    "right" : "child = ((CDATA) child).clone();",
    "info" : "ExpressionStatement[11313-11345]:ExpressionStatement[11313-11345]"
  }, {
    "left" : "element.addContent((CDATA) child);",
    "right" : "element.addContent((CDATA) child);",
    "info" : "ExpressionStatement[11362-11396]:ExpressionStatement[11362-11396]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[11428-11784]:IfStatement[11428-11784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11471-11618]:Block[11471-11618]"
  }, {
    "left" : "child = ((ProcessingInstruction) child).clone();",
    "right" : "child = ((ProcessingInstruction) child).clone();",
    "info" : "ExpressionStatement[11489-11537]:ExpressionStatement[11489-11537]"
  }, {
    "left" : "element.addContent((ProcessingInstruction) child);",
    "right" : "element.addContent((ProcessingInstruction) child);",
    "info" : "ExpressionStatement[11554-11604]:ExpressionStatement[11554-11604]"
  }, {
    "left" : "if (node instanceof Comment)",
    "right" : "if (node instanceof Comment)",
    "info" : "IfStatement[11636-11784]:IfStatement[11636-11784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11665-11784]:Block[11665-11784]"
  }, {
    "left" : "child = ((Comment) child).clone();",
    "right" : "child = ((Comment) child).clone();",
    "info" : "ExpressionStatement[11683-11717]:ExpressionStatement[11683-11717]"
  }, {
    "left" : "element.addContent((Comment) child);",
    "right" : "element.addContent((Comment) child);",
    "info" : "ExpressionStatement[11734-11770]:ExpressionStatement[11734-11770]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11806-11812]:Modifier[11806-11812]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11813-11820]:PrimitiveType[11813-11820]"
  }, {
    "left" : "testNode",
    "right" : "testNode",
    "info" : "SimpleName[11821-11829]:SimpleName[11821-11829]"
  }, {
    "left" : "NodeTest test",
    "right" : "NodeTest test",
    "info" : "SingleVariableDeclaration[11830-11843]:SingleVariableDeclaration[11830-11843]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11845-11895]:Block[11845-11895]"
  }, {
    "left" : "return testNode(this, node, test);",
    "right" : "return testNode(this, node, test);",
    "info" : "ReturnStatement[11855-11889]:ReturnStatement[11855-11889]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12099-12105]:Modifier[12099-12105]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12106-12112]:Modifier[12106-12112]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12113-12120]:PrimitiveType[12113-12120]"
  }, {
    "left" : "testNode",
    "right" : "testNode",
    "info" : "SimpleName[12121-12129]:SimpleName[12121-12129]"
  }, {
    "left" : "NodePointer pointer",
    "right" : "NodePointer pointer",
    "info" : "SingleVariableDeclaration[12139-12158]:SingleVariableDeclaration[12139-12158]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[12168-12179]:SingleVariableDeclaration[12168-12179]"
  }, {
    "left" : "NodeTest test",
    "right" : "NodeTest test",
    "info" : "SingleVariableDeclaration[12189-12202]:SingleVariableDeclaration[12189-12202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12204-14123]:Block[12204-14123]"
  }, {
    "left" : "if (test == null)",
    "right" : "if (test == null)",
    "info" : "IfStatement[12214-12268]:IfStatement[12214-12268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12232-12268]:Block[12232-12268]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12246-12258]:ReturnStatement[12246-12258]"
  }, {
    "left" : "if (test instanceof NodeNameTest)",
    "right" : "if (test instanceof NodeNameTest)",
    "info" : "IfStatement[12277-13193]:IfStatement[12277-13193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12311-13193]:Block[12311-13193]"
  }, {
    "left" : "if (!(node instanceof Element))",
    "right" : "if (!(node instanceof Element))",
    "info" : "IfStatement[12325-12402]:IfStatement[12325-12402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12357-12402]:Block[12357-12402]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[12375-12388]:ReturnStatement[12375-12388]"
  }, {
    "left" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
    "right" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
    "info" : "VariableDeclarationStatement[12416-12464]:VariableDeclarationStatement[12416-12464]"
  }, {
    "left" : "QName testName = nodeNameTest.getNodeName();",
    "right" : "QName testName = nodeNameTest.getNodeName();",
    "info" : "VariableDeclarationStatement[12477-12521]:VariableDeclarationStatement[12477-12521]"
  }, {
    "left" : "String namespaceURI = nodeNameTest.getNamespaceURI();",
    "right" : "String namespaceURI = nodeNameTest.getNamespaceURI();",
    "info" : "VariableDeclarationStatement[12534-12587]:VariableDeclarationStatement[12534-12587]"
  }, {
    "left" : "boolean wildcard = nodeNameTest.isWildcard();",
    "right" : "boolean wildcard = nodeNameTest.isWildcard();",
    "info" : "VariableDeclarationStatement[12600-12645]:VariableDeclarationStatement[12600-12645]"
  }, {
    "left" : "String testPrefix = testName.getPrefix();",
    "right" : "String testPrefix = testName.getPrefix();",
    "info" : "VariableDeclarationStatement[12658-12699]:VariableDeclarationStatement[12658-12699]"
  }, {
    "left" : "if (wildcard && testPrefix == null)",
    "right" : "if (wildcard && testPrefix == null)",
    "info" : "IfStatement[12712-12792]:IfStatement[12712-12792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12748-12792]:Block[12748-12792]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12766-12778]:ReturnStatement[12766-12778]"
  }, {
    "left" : "if (wildcard\n                || testName.getName()\n                        .equals(JDOMNodePointer.getLocalName(node)))",
    "right" : "if (wildcard\n                || testName.getName()\n                        .equals(JDOMNodePointer.getLocalName(node)))",
    "info" : "IfStatement[12805-13157]:IfStatement[12805-13157]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12925-13157]:Block[12925-13157]"
  }, {
    "left" : "String nodeNS = JDOMNodePointer.getNamespaceURI(node);",
    "right" : "String nodeNS = JDOMNodePointer.getNamespaceURI(node);",
    "info" : "VariableDeclarationStatement[12943-12997]:VariableDeclarationStatement[12943-12997]"
  }, {
    "left" : "return equalStrings(namespaceURI, nodeNS) || nodeNS == null\n                        && equalStrings(testPrefix, getPrefix(node));",
    "right" : "return equalStrings(namespaceURI, nodeNS) || nodeNS == null\n                        && equalStrings(testPrefix, getPrefix(node));",
    "info" : "ReturnStatement[13014-13143]:ReturnStatement[13014-13143]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[13170-13183]:ReturnStatement[13170-13183]"
  }, {
    "left" : "if (test instanceof NodeTypeTest)",
    "right" : "if (test instanceof NodeTypeTest)",
    "info" : "IfStatement[13202-13797]:IfStatement[13202-13797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13236-13797]:Block[13236-13797]"
  }, {
    "left" : "switch (((NodeTypeTest) test).getNodeType()) {\n                case Compiler.NODE_TYPE_NODE :\n                    return true;\n                case Compiler.NODE_TYPE_TEXT :\n                    return (node instanceof Text) || (node instanceof CDATA);\n                case Compiler.NODE_TYPE_COMMENT :\n                    return node instanceof Comment;\n                case Compiler.NODE_TYPE_PI :\n                    return node instanceof ProcessingInstruction;\n                default:\n                    return false;\n            }",
    "right" : "switch (((NodeTypeTest) test).getNodeType()) {\n                case Compiler.NODE_TYPE_NODE :\n                    return true;\n                case Compiler.NODE_TYPE_TEXT :\n                    return (node instanceof Text) || (node instanceof CDATA);\n                case Compiler.NODE_TYPE_COMMENT :\n                    return node instanceof Comment;\n                case Compiler.NODE_TYPE_PI :\n                    return node instanceof ProcessingInstruction;\n                default:\n                    return false;\n            }",
    "info" : "SwitchStatement[13250-13787]:SwitchStatement[13250-13787]"
  }, {
    "left" : "case Compiler.NODE_TYPE_NODE :",
    "right" : "case Compiler.NODE_TYPE_NODE :",
    "info" : "SwitchCase[13313-13343]:SwitchCase[13313-13343]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[13364-13376]:ReturnStatement[13364-13376]"
  }, {
    "left" : "case Compiler.NODE_TYPE_TEXT :",
    "right" : "case Compiler.NODE_TYPE_TEXT :",
    "info" : "SwitchCase[13393-13423]:SwitchCase[13393-13423]"
  }, {
    "left" : "return (node instanceof Text) || (node instanceof CDATA);",
    "right" : "return (node instanceof Text) || (node instanceof CDATA);",
    "info" : "ReturnStatement[13444-13501]:ReturnStatement[13444-13501]"
  }, {
    "left" : "case Compiler.NODE_TYPE_COMMENT :",
    "right" : "case Compiler.NODE_TYPE_COMMENT :",
    "info" : "SwitchCase[13518-13551]:SwitchCase[13518-13551]"
  }, {
    "left" : "return node instanceof Comment;",
    "right" : "return node instanceof Comment;",
    "info" : "ReturnStatement[13572-13603]:ReturnStatement[13572-13603]"
  }, {
    "left" : "case Compiler.NODE_TYPE_PI :",
    "right" : "case Compiler.NODE_TYPE_PI :",
    "info" : "SwitchCase[13620-13648]:SwitchCase[13620-13648]"
  }, {
    "left" : "return node instanceof ProcessingInstruction;",
    "right" : "return node instanceof ProcessingInstruction;",
    "info" : "ReturnStatement[13669-13714]:ReturnStatement[13669-13714]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[13731-13739]:SwitchCase[13731-13739]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[13760-13773]:ReturnStatement[13760-13773]"
  }, {
    "left" : "if (test instanceof ProcessingInstructionTest && node instanceof ProcessingInstruction)",
    "right" : "if (test instanceof ProcessingInstructionTest && node instanceof ProcessingInstruction)",
    "info" : "IfStatement[13806-14095]:IfStatement[13806-14095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13894-14095]:Block[13894-14095]"
  }, {
    "left" : "String testPI = ((ProcessingInstructionTest) test).getTarget();",
    "right" : "String testPI = ((ProcessingInstructionTest) test).getTarget();",
    "info" : "VariableDeclarationStatement[13908-13971]:VariableDeclarationStatement[13908-13971]"
  }, {
    "left" : "String nodePI = ((ProcessingInstruction) node).getTarget();",
    "right" : "String nodePI = ((ProcessingInstruction) node).getTarget();",
    "info" : "VariableDeclarationStatement[13984-14043]:VariableDeclarationStatement[13984-14043]"
  }, {
    "left" : "return testPI.equals(nodePI);",
    "right" : "return testPI.equals(nodePI);",
    "info" : "ReturnStatement[14056-14085]:ReturnStatement[14056-14085]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[14104-14117]:ReturnStatement[14104-14117]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14279-14286]:Modifier[14279-14286]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14287-14293]:Modifier[14287-14293]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[14294-14301]:PrimitiveType[14294-14301]"
  }, {
    "left" : "equalStrings",
    "right" : "equalStrings",
    "info" : "SimpleName[14302-14314]:SimpleName[14302-14314]"
  }, {
    "left" : "String s1",
    "right" : "String s1",
    "info" : "SingleVariableDeclaration[14315-14324]:SingleVariableDeclaration[14315-14324]"
  }, {
    "left" : "String s2",
    "right" : "String s2",
    "info" : "SingleVariableDeclaration[14326-14335]:SingleVariableDeclaration[14326-14335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14337-14517]:Block[14337-14517]"
  }, {
    "left" : "if (s1 == s2)",
    "right" : "if (s1 == s2)",
    "info" : "IfStatement[14347-14397]:IfStatement[14347-14397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14361-14397]:Block[14361-14397]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[14375-14387]:ReturnStatement[14375-14387]"
  }, {
    "left" : "s1 = s1 == null ? \"\" : s1.trim();",
    "right" : "s1 = s1 == null ? \"\" : s1.trim();",
    "info" : "ExpressionStatement[14406-14439]:ExpressionStatement[14406-14439]"
  }, {
    "left" : "s2 = s2 == null ? \"\" : s2.trim();",
    "right" : "s2 = s2 == null ? \"\" : s2.trim();",
    "info" : "ExpressionStatement[14448-14481]:ExpressionStatement[14448-14481]"
  }, {
    "left" : "return s1.equals(s2);",
    "right" : "return s1.equals(s2);",
    "info" : "ReturnStatement[14490-14511]:ReturnStatement[14490-14511]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14630-14636]:Modifier[14630-14636]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14637-14643]:Modifier[14637-14643]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[14644-14650]:SimpleType[14644-14650]"
  }, {
    "left" : "getPrefix",
    "right" : "getPrefix",
    "info" : "SimpleName[14651-14660]:SimpleName[14651-14660]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[14661-14672]:SingleVariableDeclaration[14661-14672]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14674-15086]:Block[14674-15086]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[14684-14865]:IfStatement[14684-14865]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14713-14865]:Block[14713-14865]"
  }, {
    "left" : "String prefix = ((Element) node).getNamespacePrefix();",
    "right" : "String prefix = ((Element) node).getNamespacePrefix();",
    "info" : "VariableDeclarationStatement[14727-14781]:VariableDeclarationStatement[14727-14781]"
  }, {
    "left" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "right" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "info" : "ReturnStatement[14794-14855]:ReturnStatement[14794-14855]"
  }, {
    "left" : "if (node instanceof Attribute)",
    "right" : "if (node instanceof Attribute)",
    "info" : "IfStatement[14874-15059]:IfStatement[14874-15059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14905-15059]:Block[14905-15059]"
  }, {
    "left" : "String prefix = ((Attribute) node).getNamespacePrefix();",
    "right" : "String prefix = ((Attribute) node).getNamespacePrefix();",
    "info" : "VariableDeclarationStatement[14919-14975]:VariableDeclarationStatement[14919-14975]"
  }, {
    "left" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "right" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "info" : "ReturnStatement[14988-15049]:ReturnStatement[14988-15049]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[15068-15080]:ReturnStatement[15068-15080]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15218-15224]:Modifier[15218-15224]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15225-15231]:Modifier[15225-15231]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[15232-15238]:SimpleType[15232-15238]"
  }, {
    "left" : "getLocalName",
    "right" : "getLocalName",
    "info" : "SimpleName[15239-15251]:SimpleName[15239-15251]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[15252-15263]:SingleVariableDeclaration[15252-15263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15265-15489]:Block[15265-15489]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[15275-15362]:IfStatement[15275-15362]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15304-15362]:Block[15304-15362]"
  }, {
    "left" : "return ((Element) node).getName();",
    "right" : "return ((Element) node).getName();",
    "info" : "ReturnStatement[15318-15352]:ReturnStatement[15318-15352]"
  }, {
    "left" : "if (node instanceof Attribute)",
    "right" : "if (node instanceof Attribute)",
    "info" : "IfStatement[15371-15462]:IfStatement[15371-15462]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15402-15462]:Block[15402-15462]"
  }, {
    "left" : "return ((Attribute) node).getName();",
    "right" : "return ((Attribute) node).getName();",
    "info" : "ReturnStatement[15416-15452]:ReturnStatement[15416-15452]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[15471-15483]:ReturnStatement[15471-15483]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15810-15816]:Modifier[15810-15816]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15817-15824]:PrimitiveType[15817-15824]"
  }, {
    "left" : "isLanguage",
    "right" : "isLanguage",
    "info" : "SimpleName[15825-15835]:SimpleName[15825-15835]"
  }, {
    "left" : "String lang",
    "right" : "String lang",
    "info" : "SingleVariableDeclaration[15836-15847]:SingleVariableDeclaration[15836-15847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15849-16053]:Block[15849-16053]"
  }, {
    "left" : "String current = getLanguage();",
    "right" : "String current = getLanguage();",
    "info" : "VariableDeclarationStatement[15859-15890]:VariableDeclarationStatement[15859-15890]"
  }, {
    "left" : "return current == null ? super.isLanguage(lang) : current.toUpperCase(\n                Locale.ENGLISH).startsWith(lang.toUpperCase(Locale.ENGLISH));",
    "right" : "return current == null ? super.isLanguage(lang) : current.toUpperCase(\n                Locale.ENGLISH).startsWith(lang.toUpperCase(Locale.ENGLISH));",
    "info" : "ReturnStatement[15899-16047]:ReturnStatement[15899-16047]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16147-16156]:Modifier[16147-16156]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[16157-16163]:SimpleType[16157-16163]"
  }, {
    "left" : "getLanguage",
    "right" : "getLanguage",
    "info" : "SimpleName[16164-16175]:SimpleName[16164-16175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16178-16263]:Block[16178-16263]"
  }, {
    "left" : "return findEnclosingAttribute(node, \"lang\", Namespace.XML_NAMESPACE);",
    "right" : "return findEnclosingAttribute(node, \"lang\", Namespace.XML_NAMESPACE);",
    "info" : "ReturnStatement[16188-16257]:ReturnStatement[16188-16257]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16520-16529]:Modifier[16520-16529]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16530-16536]:Modifier[16530-16536]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[16537-16543]:SimpleType[16537-16543]"
  }, {
    "left" : "findEnclosingAttribute",
    "right" : "findEnclosingAttribute",
    "info" : "SimpleName[16544-16566]:SimpleName[16544-16566]"
  }, {
    "left" : "Object n",
    "right" : "Object n",
    "info" : "SingleVariableDeclaration[16567-16575]:SingleVariableDeclaration[16567-16575]"
  }, {
    "left" : "String attrName",
    "right" : "String attrName",
    "info" : "SingleVariableDeclaration[16577-16592]:SingleVariableDeclaration[16577-16592]"
  }, {
    "left" : "Namespace ns",
    "right" : "Namespace ns",
    "info" : "SingleVariableDeclaration[16594-16606]:SingleVariableDeclaration[16594-16606]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16608-16972]:Block[16608-16972]"
  }, {
    "left" : "while (n != null)",
    "right" : "while (n != null)",
    "info" : "WhileStatement[16618-16945]:WhileStatement[16618-16945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16636-16945]:Block[16636-16945]"
  }, {
    "left" : "if (n instanceof Element)",
    "right" : "if (n instanceof Element)",
    "info" : "IfStatement[16650-16904]:IfStatement[16650-16904]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16676-16904]:Block[16676-16904]"
  }, {
    "left" : "Element e = (Element) n;",
    "right" : "Element e = (Element) n;",
    "info" : "VariableDeclarationStatement[16694-16718]:VariableDeclarationStatement[16694-16718]"
  }, {
    "left" : "String attr = e.getAttributeValue(attrName, ns);",
    "right" : "String attr = e.getAttributeValue(attrName, ns);",
    "info" : "VariableDeclarationStatement[16735-16783]:VariableDeclarationStatement[16735-16783]"
  }, {
    "left" : "if (attr != null && !attr.equals(\"\"))",
    "right" : "if (attr != null && !attr.equals(\"\"))",
    "info" : "IfStatement[16800-16890]:IfStatement[16800-16890]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16838-16890]:Block[16838-16890]"
  }, {
    "left" : "return attr;",
    "right" : "return attr;",
    "info" : "ReturnStatement[16860-16872]:ReturnStatement[16860-16872]"
  }, {
    "left" : "n = nodeParent(n);",
    "right" : "n = nodeParent(n);",
    "info" : "ExpressionStatement[16917-16935]:ExpressionStatement[16917-16935]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[16954-16966]:ReturnStatement[16954-16966]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[17097-17104]:Modifier[17097-17104]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[17105-17111]:Modifier[17105-17111]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[17112-17119]:SimpleType[17112-17119]"
  }, {
    "left" : "nodeParent",
    "right" : "nodeParent",
    "info" : "SimpleName[17120-17130]:SimpleName[17120-17130]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[17131-17142]:SingleVariableDeclaration[17131-17142]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17144-17801]:Block[17144-17801]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[17154-17324]:IfStatement[17154-17324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17183-17324]:Block[17183-17324]"
  }, {
    "left" : "Object parent = ((Element) node).getParent();",
    "right" : "Object parent = ((Element) node).getParent();",
    "info" : "VariableDeclarationStatement[17197-17242]:VariableDeclarationStatement[17197-17242]"
  }, {
    "left" : "return parent instanceof Element ? (Element) parent : null;",
    "right" : "return parent instanceof Element ? (Element) parent : null;",
    "info" : "ReturnStatement[17255-17314]:ReturnStatement[17255-17314]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[17333-17426]:IfStatement[17333-17426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17359-17426]:Block[17359-17426]"
  }, {
    "left" : "return (Element) ((Text) node).getParent();",
    "right" : "return (Element) ((Text) node).getParent();",
    "info" : "ReturnStatement[17373-17416]:ReturnStatement[17373-17416]"
  }, {
    "left" : "if (node instanceof CDATA)",
    "right" : "if (node instanceof CDATA)",
    "info" : "IfStatement[17435-17530]:IfStatement[17435-17530]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17462-17530]:Block[17462-17530]"
  }, {
    "left" : "return (Element) ((CDATA) node).getParent();",
    "right" : "return (Element) ((CDATA) node).getParent();",
    "info" : "ReturnStatement[17476-17520]:ReturnStatement[17476-17520]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[17539-17666]:IfStatement[17539-17666]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17582-17666]:Block[17582-17666]"
  }, {
    "left" : "return (Element) ((ProcessingInstruction) node).getParent();",
    "right" : "return (Element) ((ProcessingInstruction) node).getParent();",
    "info" : "ReturnStatement[17596-17656]:ReturnStatement[17596-17656]"
  }, {
    "left" : "if (node instanceof Comment)",
    "right" : "if (node instanceof Comment)",
    "info" : "IfStatement[17675-17774]:IfStatement[17675-17774]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17704-17774]:Block[17704-17774]"
  }, {
    "left" : "return (Element) ((Comment) node).getParent();",
    "right" : "return (Element) ((Comment) node).getParent();",
    "info" : "ReturnStatement[17718-17764]:ReturnStatement[17718-17764]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[17783-17795]:ReturnStatement[17783-17795]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17807-17813]:Modifier[17807-17813]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[17814-17825]:SimpleType[17814-17825]"
  }, {
    "left" : "createChild",
    "right" : "createChild",
    "info" : "SimpleName[17826-17837]:SimpleName[17826-17837]"
  }, {
    "left" : "JXPathContext context",
    "right" : "JXPathContext context",
    "info" : "SingleVariableDeclaration[17847-17868]:SingleVariableDeclaration[17847-17868]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[17878-17888]:SingleVariableDeclaration[17878-17888]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[17898-17907]:SingleVariableDeclaration[17898-17907]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17909-18870]:Block[17909-18870]"
  }, {
    "left" : "if (index == WHOLE_COLLECTION)",
    "right" : "if (index == WHOLE_COLLECTION)",
    "info" : "IfStatement[17919-17984]:IfStatement[17919-17984]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17950-17984]:Block[17950-17984]"
  }, {
    "left" : "index = 0;",
    "right" : "index = 0;",
    "info" : "ExpressionStatement[17964-17974]:ExpressionStatement[17964-17974]"
  }, {
    "left" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
    "right" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
    "info" : "VariableDeclarationStatement[17993-18190]:VariableDeclarationStatement[17993-18190]"
  }, {
    "left" : "if (success)",
    "right" : "if (success)",
    "info" : "IfStatement[18199-18675]:IfStatement[18199-18675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18212-18675]:Block[18212-18675]"
  }, {
    "left" : "NodeTest nodeTest;",
    "right" : "NodeTest nodeTest;",
    "info" : "VariableDeclarationStatement[18226-18244]:VariableDeclarationStatement[18226-18244]"
  }, {
    "left" : "String prefix = name.getPrefix();",
    "right" : "String prefix = name.getPrefix();",
    "info" : "VariableDeclarationStatement[18257-18290]:VariableDeclarationStatement[18257-18290]"
  }, {
    "left" : "String namespaceURI = prefix == null ? null : context\n                    .getNamespaceURI(prefix);",
    "right" : "String namespaceURI = prefix == null ? null : context\n                    .getNamespaceURI(prefix);",
    "info" : "VariableDeclarationStatement[18303-18402]:VariableDeclarationStatement[18303-18402]"
  }, {
    "left" : "nodeTest = new NodeNameTest(name, namespaceURI);",
    "right" : "nodeTest = new NodeNameTest(name, namespaceURI);",
    "info" : "ExpressionStatement[18415-18463]:ExpressionStatement[18415-18463]"
  }, {
    "left" : "NodeIterator it =\n                childIterator(nodeTest, false, null);",
    "right" : "NodeIterator it =\n                childIterator(nodeTest, false, null);",
    "info" : "VariableDeclarationStatement[18477-18548]:VariableDeclarationStatement[18477-18548]"
  }, {
    "left" : "if (it != null && it.setPosition(index + 1))",
    "right" : "if (it != null && it.setPosition(index + 1))",
    "info" : "IfStatement[18561-18665]:IfStatement[18561-18665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18606-18665]:Block[18606-18665]"
  }, {
    "left" : "return it.getNodePointer();",
    "right" : "return it.getNodePointer();",
    "info" : "ReturnStatement[18624-18651]:ReturnStatement[18624-18651]"
  }, {
    "left" : "throw new JXPathAbstractFactoryException(\"Factory could not create \"\n                + \"a child node for path: \" + asPath() + \"/\" + name + \"[\"\n                + (index + 1) + \"]\");",
    "right" : "throw new JXPathAbstractFactoryException(\"Factory could not create \"\n                + \"a child node for path: \" + asPath() + \"/\" + name + \"[\"\n                + (index + 1) + \"]\");",
    "info" : "ThrowStatement[18684-18864]:ThrowStatement[18684-18864]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18876-18882]:Modifier[18876-18882]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[18883-18894]:SimpleType[18883-18894]"
  }, {
    "left" : "createChild",
    "right" : "createChild",
    "info" : "SimpleName[18895-18906]:SimpleName[18895-18906]"
  }, {
    "left" : "JXPathContext context",
    "right" : "JXPathContext context",
    "info" : "SingleVariableDeclaration[18920-18941]:SingleVariableDeclaration[18920-18941]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[18943-18953]:SingleVariableDeclaration[18943-18953]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[18955-18964]:SingleVariableDeclaration[18955-18964]"
  }, {
    "left" : "Object value",
    "right" : "Object value",
    "info" : "SingleVariableDeclaration[18966-18978]:SingleVariableDeclaration[18966-18978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18980-19097]:Block[18980-19097]"
  }, {
    "left" : "NodePointer ptr = createChild(context, name, index);",
    "right" : "NodePointer ptr = createChild(context, name, index);",
    "info" : "VariableDeclarationStatement[18990-19042]:VariableDeclarationStatement[18990-19042]"
  }, {
    "left" : "ptr.setValue(value);",
    "right" : "ptr.setValue(value);",
    "info" : "ExpressionStatement[19051-19071]:ExpressionStatement[19051-19071]"
  }, {
    "left" : "return ptr;",
    "right" : "return ptr;",
    "info" : "ReturnStatement[19080-19091]:ReturnStatement[19080-19091]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19103-19109]:Modifier[19103-19109]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[19110-19121]:SimpleType[19110-19121]"
  }, {
    "left" : "createAttribute",
    "right" : "createAttribute",
    "info" : "SimpleName[19122-19137]:SimpleName[19122-19137]"
  }, {
    "left" : "JXPathContext context",
    "right" : "JXPathContext context",
    "info" : "SingleVariableDeclaration[19138-19159]:SingleVariableDeclaration[19138-19159]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[19161-19171]:SingleVariableDeclaration[19161-19171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19173-20215]:Block[19173-20215]"
  }, {
    "left" : "if (!(node instanceof Element))",
    "right" : "if (!(node instanceof Element))",
    "info" : "IfStatement[19183-19283]:IfStatement[19183-19283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19215-19283]:Block[19215-19283]"
  }, {
    "left" : "return super.createAttribute(context, name);",
    "right" : "return super.createAttribute(context, name);",
    "info" : "ReturnStatement[19229-19273]:ReturnStatement[19229-19273]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[19293-19326]:VariableDeclarationStatement[19293-19326]"
  }, {
    "left" : "String prefix = name.getPrefix();",
    "right" : "String prefix = name.getPrefix();",
    "info" : "VariableDeclarationStatement[19335-19368]:VariableDeclarationStatement[19335-19368]"
  }, {
    "left" : "if (prefix != null)",
    "right" : "if (prefix != null)",
    "info" : "IfStatement[19377-20095]:IfStatement[19377-20095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19397-19899]:Block[19397-19899]"
  }, {
    "left" : "String namespaceUri = getNamespaceResolver().getNamespaceURI(prefix);",
    "right" : "String namespaceUri = getNamespaceResolver().getNamespaceURI(prefix);",
    "info" : "VariableDeclarationStatement[19411-19480]:VariableDeclarationStatement[19411-19480]"
  }, {
    "left" : "if (namespaceUri == null)",
    "right" : "if (namespaceUri == null)",
    "info" : "IfStatement[19493-19637]:IfStatement[19493-19637]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19519-19637]:Block[19519-19637]"
  }, {
    "left" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
    "right" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
    "info" : "ThrowStatement[19537-19623]:ThrowStatement[19537-19623]"
  }, {
    "left" : "Namespace ns = Namespace.getNamespace(prefix, namespaceUri);",
    "right" : "Namespace ns = Namespace.getNamespace(prefix, namespaceUri);",
    "info" : "VariableDeclarationStatement[19650-19710]:VariableDeclarationStatement[19650-19710]"
  }, {
    "left" : "Attribute attr = element.getAttribute(name.getName(), ns);",
    "right" : "Attribute attr = element.getAttribute(name.getName(), ns);",
    "info" : "VariableDeclarationStatement[19723-19781]:VariableDeclarationStatement[19723-19781]"
  }, {
    "left" : "if (attr == null)",
    "right" : "if (attr == null)",
    "info" : "IfStatement[19794-19889]:IfStatement[19794-19889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19812-19889]:Block[19812-19889]"
  }, {
    "left" : "element.setAttribute(name.getName(), \"\", ns);",
    "right" : "element.setAttribute(name.getName(), \"\", ns);",
    "info" : "ExpressionStatement[19830-19875]:ExpressionStatement[19830-19875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19913-20095]:Block[19913-20095]"
  }, {
    "left" : "Attribute attr = element.getAttribute(name.getName());",
    "right" : "Attribute attr = element.getAttribute(name.getName());",
    "info" : "VariableDeclarationStatement[19927-19981]:VariableDeclarationStatement[19927-19981]"
  }, {
    "left" : "if (attr == null)",
    "right" : "if (attr == null)",
    "info" : "IfStatement[19994-20085]:IfStatement[19994-20085]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20012-20085]:Block[20012-20085]"
  }, {
    "left" : "element.setAttribute(name.getName(), \"\");",
    "right" : "element.setAttribute(name.getName(), \"\");",
    "info" : "ExpressionStatement[20030-20071]:ExpressionStatement[20030-20071]"
  }, {
    "left" : "NodeIterator it = attributeIterator(name);",
    "right" : "NodeIterator it = attributeIterator(name);",
    "info" : "VariableDeclarationStatement[20104-20146]:VariableDeclarationStatement[20104-20146]"
  }, {
    "left" : "it.setPosition(1);",
    "right" : "it.setPosition(1);",
    "info" : "ExpressionStatement[20155-20173]:ExpressionStatement[20155-20173]"
  }, {
    "left" : "return it.getNodePointer();",
    "right" : "return it.getNodePointer();",
    "info" : "ReturnStatement[20182-20209]:ReturnStatement[20182-20209]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20221-20227]:Modifier[20221-20227]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20228-20232]:PrimitiveType[20228-20232]"
  }, {
    "left" : "remove",
    "right" : "remove",
    "info" : "SimpleName[20233-20239]:SimpleName[20233-20239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20242-20445]:Block[20242-20445]"
  }, {
    "left" : "Element parent = nodeParent(node);",
    "right" : "Element parent = nodeParent(node);",
    "info" : "VariableDeclarationStatement[20252-20286]:VariableDeclarationStatement[20252-20286]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[20295-20397]:IfStatement[20295-20397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20315-20397]:Block[20315-20397]"
  }, {
    "left" : "throw new JXPathException(\"Cannot remove root JDOM node\");",
    "right" : "throw new JXPathException(\"Cannot remove root JDOM node\");",
    "info" : "ThrowStatement[20329-20387]:ThrowStatement[20329-20387]"
  }, {
    "left" : "parent.getContent().remove(node);",
    "right" : "parent.getContent().remove(node);",
    "info" : "ExpressionStatement[20406-20439]:ExpressionStatement[20406-20439]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20451-20457]:Modifier[20451-20457]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[20458-20464]:SimpleType[20458-20464]"
  }, {
    "left" : "asPath",
    "right" : "asPath",
    "info" : "SimpleName[20465-20471]:SimpleName[20465-20471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20474-22758]:Block[20474-22758]"
  }, {
    "left" : "if (id != null)",
    "right" : "if (id != null)",
    "info" : "IfStatement[20484-20558]:IfStatement[20484-20558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20500-20558]:Block[20500-20558]"
  }, {
    "left" : "return \"id('\" + escape(id) + \"')\";",
    "right" : "return \"id('\" + escape(id) + \"')\";",
    "info" : "ReturnStatement[20514-20548]:ReturnStatement[20514-20548]"
  }, {
    "left" : "StringBuffer buffer = new StringBuffer();",
    "right" : "StringBuffer buffer = new StringBuffer();",
    "info" : "VariableDeclarationStatement[20568-20609]:VariableDeclarationStatement[20568-20609]"
  }, {
    "left" : "if (parent != null)",
    "right" : "if (parent != null)",
    "info" : "IfStatement[20618-20693]:IfStatement[20618-20693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20638-20693]:Block[20638-20693]"
  }, {
    "left" : "buffer.append(parent.asPath());",
    "right" : "buffer.append(parent.asPath());",
    "info" : "ExpressionStatement[20652-20683]:ExpressionStatement[20652-20683]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[20702-22718]:IfStatement[20702-22718]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20731-22202]:Block[20731-22202]"
  }, {
    "left" : "if (parent instanceof JDOMNodePointer)",
    "right" : "if (parent instanceof JDOMNodePointer)",
    "info" : "IfStatement[20914-22192]:IfStatement[20914-22192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20953-22192]:Block[20953-22192]"
  }, {
    "left" : "if (buffer.length() == 0\n                    || buffer.charAt(buffer.length() - 1) != '/')",
    "right" : "if (buffer.length() == 0\n                    || buffer.charAt(buffer.length() - 1) != '/')",
    "info" : "IfStatement[20971-21121]:IfStatement[20971-21121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21062-21121]:Block[21062-21121]"
  }, {
    "left" : "buffer.append('/');",
    "right" : "buffer.append('/');",
    "info" : "ExpressionStatement[21084-21103]:ExpressionStatement[21084-21103]"
  }, {
    "left" : "String nsURI = getNamespaceURI();",
    "right" : "String nsURI = getNamespaceURI();",
    "info" : "VariableDeclarationStatement[21138-21171]:VariableDeclarationStatement[21138-21171]"
  }, {
    "left" : "String ln = JDOMNodePointer.getLocalName(node);",
    "right" : "String ln = JDOMNodePointer.getLocalName(node);",
    "info" : "VariableDeclarationStatement[21188-21235]:VariableDeclarationStatement[21188-21235]"
  }, {
    "left" : "if (nsURI == null)",
    "right" : "if (nsURI == null)",
    "info" : "IfStatement[21253-22177]:IfStatement[21253-22177]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21272-21447]:Block[21272-21447]"
  }, {
    "left" : "buffer.append(ln);",
    "right" : "buffer.append(ln);",
    "info" : "ExpressionStatement[21294-21312]:ExpressionStatement[21294-21312]"
  }, {
    "left" : "buffer.append('[');",
    "right" : "buffer.append('[');",
    "info" : "ExpressionStatement[21333-21352]:ExpressionStatement[21333-21352]"
  }, {
    "left" : "buffer.append(getRelativePositionByQName()).append(']');",
    "right" : "buffer.append(getRelativePositionByQName()).append(']');",
    "info" : "ExpressionStatement[21373-21429]:ExpressionStatement[21373-21429]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21469-22177]:Block[21469-22177]"
  }, {
    "left" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
    "right" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
    "info" : "VariableDeclarationStatement[21491-21547]:VariableDeclarationStatement[21491-21547]"
  }, {
    "left" : "if (prefix != null)",
    "right" : "if (prefix != null)",
    "info" : "IfStatement[21568-22159]:IfStatement[21568-22159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21588-21902]:Block[21588-21902]"
  }, {
    "left" : "buffer.append(prefix);",
    "right" : "buffer.append(prefix);",
    "info" : "ExpressionStatement[21614-21636]:ExpressionStatement[21614-21636]"
  }, {
    "left" : "buffer.append(':');",
    "right" : "buffer.append(':');",
    "info" : "ExpressionStatement[21661-21680]:ExpressionStatement[21661-21680]"
  }, {
    "left" : "buffer.append(ln);",
    "right" : "buffer.append(ln);",
    "info" : "ExpressionStatement[21705-21723]:ExpressionStatement[21705-21723]"
  }, {
    "left" : "buffer.append('[');",
    "right" : "buffer.append('[');",
    "info" : "ExpressionStatement[21748-21767]:ExpressionStatement[21748-21767]"
  }, {
    "left" : "buffer.append(getRelativePositionByQName());",
    "right" : "buffer.append(getRelativePositionByQName());",
    "info" : "ExpressionStatement[21792-21836]:ExpressionStatement[21792-21836]"
  }, {
    "left" : "buffer.append(']');",
    "right" : "buffer.append(']');",
    "info" : "ExpressionStatement[21861-21880]:ExpressionStatement[21861-21880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21928-22159]:Block[21928-22159]"
  }, {
    "left" : "buffer.append(\"node()\");",
    "right" : "buffer.append(\"node()\");",
    "info" : "ExpressionStatement[21954-21978]:ExpressionStatement[21954-21978]"
  }, {
    "left" : "buffer.append('[');",
    "right" : "buffer.append('[');",
    "info" : "ExpressionStatement[22003-22022]:ExpressionStatement[22003-22022]"
  }, {
    "left" : "buffer.append(getRelativePositionOfElement());",
    "right" : "buffer.append(getRelativePositionOfElement());",
    "info" : "ExpressionStatement[22047-22093]:ExpressionStatement[22047-22093]"
  }, {
    "left" : "buffer.append(']');",
    "right" : "buffer.append(']');",
    "info" : "ExpressionStatement[22118-22137]:ExpressionStatement[22118-22137]"
  }, {
    "left" : "if (node instanceof Text || node instanceof CDATA)",
    "right" : "if (node instanceof Text || node instanceof CDATA)",
    "info" : "IfStatement[22216-22718]:IfStatement[22216-22718]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22267-22417]:Block[22267-22417]"
  }, {
    "left" : "buffer.append(\"/text()\");",
    "right" : "buffer.append(\"/text()\");",
    "info" : "ExpressionStatement[22281-22306]:ExpressionStatement[22281-22306]"
  }, {
    "left" : "buffer.append('[').append(getRelativePositionOfTextNode()).append(\n                ']');",
    "right" : "buffer.append('[').append(getRelativePositionOfTextNode()).append(\n                ']');",
    "info" : "ExpressionStatement[22319-22407]:ExpressionStatement[22319-22407]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[22431-22718]:IfStatement[22431-22718]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22474-22718]:Block[22474-22718]"
  }, {
    "left" : "buffer.append(\"/processing-instruction(\\'\").append(((ProcessingInstruction) node).getTarget()).append(\n                \"')\");",
    "right" : "buffer.append(\"/processing-instruction(\\'\").append(((ProcessingInstruction) node).getTarget()).append(\n                \"')\");",
    "info" : "ExpressionStatement[22488-22613]:ExpressionStatement[22488-22613]"
  }, {
    "left" : "buffer.append('[').append(getRelativePositionOfPI()).append(\n                ']');",
    "right" : "buffer.append('[').append(getRelativePositionOfPI()).append(\n                ']');",
    "info" : "ExpressionStatement[22626-22708]:ExpressionStatement[22626-22708]"
  }, {
    "left" : "return buffer.toString();",
    "right" : "return buffer.toString();",
    "info" : "ReturnStatement[22727-22752]:ReturnStatement[22727-22752]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22864-22871]:Modifier[22864-22871]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[22872-22875]:PrimitiveType[22872-22875]"
  }, {
    "left" : "getRelativePositionByQName",
    "right" : "getRelativePositionByQName",
    "info" : "SimpleName[22876-22902]:SimpleName[22876-22902]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22905-23673]:Block[22905-23633]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[22915-23649]:IfStatement[22915-23609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22944-23649]:Block[22944-23609]"
  }, {
    "left" : "Object parent = ((Element) node).getParent();",
    "right" : "Object parent = ((Element) node).getParent();",
    "info" : "VariableDeclarationStatement[22958-23003]:VariableDeclarationStatement[22958-23003]"
  }, {
    "left" : "if (!(parent instanceof Element))",
    "right" : "if (!(parent instanceof Element))",
    "info" : "IfStatement[23016-23091]:IfStatement[23016-23091]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23050-23091]:Block[23050-23091]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[23068-23077]:ReturnStatement[23068-23077]"
  }, {
    "left" : "List children = ((Element) parent).getContent();",
    "right" : "List children = ((Element) parent).getContent();",
    "info" : "VariableDeclarationStatement[23105-23153]:VariableDeclarationStatement[23105-23153]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[23166-23180]:VariableDeclarationStatement[23166-23180]"
  }, {
    "left" : "String name = ((Element) node).getQualifiedName();",
    "right" : "String name = ((Element) node).getQualifiedName();",
    "info" : "VariableDeclarationStatement[23193-23243]:VariableDeclarationStatement[23193-23243]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[23256-23613]:ForStatement[23256-23573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23298-23613]:Block[23298-23573]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[23316-23347]:VariableDeclarationStatement[23316-23347]"
  }, {
    "left" : "if ((child instanceof Element)\n                    && ((Element) child).getQualifiedName().equals(name))",
    "right" : "if (child instanceof Element && matchesQName(((Element) child)))",
    "info" : "IfStatement[23364-23517]:IfStatement[23364-23477]"
  }, {
    "left" : "child instanceof Element",
    "right" : "child instanceof Element",
    "info" : "InstanceofExpression[23369-23393]:InstanceofExpression[23368-23392]"
  }, {
    "left" : "((Element) child)",
    "right" : "((Element) child)",
    "info" : "ParenthesizedExpression[23418-23435]:ParenthesizedExpression[23409-23426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23469-23517]:Block[23429-23477]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[23491-23499]:ExpressionStatement[23451-23459]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[23534-23599]:IfStatement[23494-23559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23553-23599]:Block[23513-23559]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23575-23581]:BreakStatement[23535-23541]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[23626-23639]:ReturnStatement[23586-23599]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[23658-23667]:ReturnStatement[23618-23627]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23773-23780]:Modifier[24068-24075]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[23781-23784]:PrimitiveType[24076-24079]"
  }, {
    "left" : "getRelativePositionOfElement",
    "right" : "getRelativePositionOfElement",
    "info" : "SimpleName[23785-23813]:SimpleName[24080-24108]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23816-24455]:Block[24111-24750]"
  }, {
    "left" : "Object parent = ((Element) node).getParent();",
    "right" : "Object parent = ((Element) node).getParent();",
    "info" : "VariableDeclarationStatement[23826-23871]:VariableDeclarationStatement[24121-24166]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[23880-23933]:IfStatement[24175-24228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23900-23933]:Block[24195-24228]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[23914-23923]:ReturnStatement[24209-24218]"
  }, {
    "left" : "List children;",
    "right" : "List children;",
    "info" : "VariableDeclarationStatement[23942-23956]:VariableDeclarationStatement[24237-24251]"
  }, {
    "left" : "if (parent instanceof Element)",
    "right" : "if (parent instanceof Element)",
    "info" : "IfStatement[23965-24145]:IfStatement[24260-24440]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23996-24063]:Block[24291-24358]"
  }, {
    "left" : "children = ((Element) parent).getContent();",
    "right" : "children = ((Element) parent).getContent();",
    "info" : "ExpressionStatement[24010-24053]:ExpressionStatement[24305-24348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24077-24145]:Block[24372-24440]"
  }, {
    "left" : "children = ((Document) parent).getContent();",
    "right" : "children = ((Document) parent).getContent();",
    "info" : "ExpressionStatement[24091-24135]:ExpressionStatement[24386-24430]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[24154-24168]:VariableDeclarationStatement[24449-24463]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[24177-24427]:ForStatement[24472-24722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24219-24427]:Block[24514-24722]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[24233-24264]:VariableDeclarationStatement[24528-24559]"
  }, {
    "left" : "if (child instanceof Element)",
    "right" : "if (child instanceof Element)",
    "info" : "IfStatement[24277-24347]:IfStatement[24572-24642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24307-24347]:Block[24602-24642]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[24325-24333]:ExpressionStatement[24620-24628]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[24360-24417]:IfStatement[24655-24712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24379-24417]:Block[24674-24712]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24397-24403]:BreakStatement[24692-24698]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[24436-24449]:ReturnStatement[24731-24744]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[24564-24571]:Modifier[24859-24866]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[24572-24575]:PrimitiveType[24867-24870]"
  }, {
    "left" : "getRelativePositionOfTextNode",
    "right" : "getRelativePositionOfTextNode",
    "info" : "SimpleName[24576-24605]:SimpleName[24871-24900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24608-25261]:Block[24903-25556]"
  }, {
    "left" : "Element parent;",
    "right" : "Element parent;",
    "info" : "VariableDeclarationStatement[24618-24633]:VariableDeclarationStatement[24913-24928]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[24642-24821]:IfStatement[24937-25116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24668-24737]:Block[24963-25032]"
  }, {
    "left" : "parent = (Element) ((Text) node).getParent();",
    "right" : "parent = (Element) ((Text) node).getParent();",
    "info" : "ExpressionStatement[24682-24727]:ExpressionStatement[24977-25022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24751-24821]:Block[25046-25116]"
  }, {
    "left" : "parent = (Element) ((CDATA) node).getParent();",
    "right" : "parent = (Element) ((CDATA) node).getParent();",
    "info" : "ExpressionStatement[24765-24811]:ExpressionStatement[25060-25106]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[24830-24883]:IfStatement[25125-25178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24850-24883]:Block[25145-25178]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[24864-24873]:ReturnStatement[25159-25168]"
  }, {
    "left" : "List children = parent.getContent();",
    "right" : "List children = parent.getContent();",
    "info" : "VariableDeclarationStatement[24892-24928]:VariableDeclarationStatement[25187-25223]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[24937-24951]:VariableDeclarationStatement[25232-25246]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[24960-25233]:ForStatement[25255-25528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25002-25233]:Block[25297-25528]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[25016-25047]:VariableDeclarationStatement[25311-25342]"
  }, {
    "left" : "if (child instanceof Text || child instanceof CDATA)",
    "right" : "if (child instanceof Text || child instanceof CDATA)",
    "info" : "IfStatement[25060-25153]:IfStatement[25355-25448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25113-25153]:Block[25408-25448]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[25131-25139]:ExpressionStatement[25426-25434]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[25166-25223]:IfStatement[25461-25518]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25185-25223]:Block[25480-25518]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[25203-25209]:BreakStatement[25498-25504]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[25242-25255]:ReturnStatement[25537-25550]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25395-25402]:Modifier[25690-25697]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[25403-25406]:PrimitiveType[25698-25701]"
  }, {
    "left" : "getRelativePositionOfPI",
    "right" : "getRelativePositionOfPI",
    "info" : "SimpleName[25407-25430]:SimpleName[25702-25725]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25433-26155]:Block[25728-26450]"
  }, {
    "left" : "String target = ((ProcessingInstruction) node).getTarget();",
    "right" : "String target = ((ProcessingInstruction) node).getTarget();",
    "info" : "VariableDeclarationStatement[25443-25502]:VariableDeclarationStatement[25738-25797]"
  }, {
    "left" : "Element parent = (Element) ((ProcessingInstruction) node).getParent();",
    "right" : "Element parent = (Element) ((ProcessingInstruction) node).getParent();",
    "info" : "VariableDeclarationStatement[25511-25581]:VariableDeclarationStatement[25806-25876]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[25590-25643]:IfStatement[25885-25938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25610-25643]:Block[25905-25938]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[25624-25633]:ReturnStatement[25919-25928]"
  }, {
    "left" : "List children = parent.getContent();",
    "right" : "List children = parent.getContent();",
    "info" : "VariableDeclarationStatement[25652-25688]:VariableDeclarationStatement[25947-25983]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[25697-25711]:VariableDeclarationStatement[25992-26006]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[25720-26127]:ForStatement[26015-26422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25762-26127]:Block[26057-26422]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[25776-25807]:VariableDeclarationStatement[26071-26102]"
  }, {
    "left" : "if (child instanceof ProcessingInstruction\n                && (target == null\n                    || target.equals(\n                        ((ProcessingInstruction) child).getTarget())))",
    "right" : "if (child instanceof ProcessingInstruction\n                && (target == null\n                    || target.equals(\n                        ((ProcessingInstruction) child).getTarget())))",
    "info" : "IfStatement[25820-26047]:IfStatement[26115-26342]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26007-26047]:Block[26302-26342]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[26025-26033]:ExpressionStatement[26320-26328]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[26060-26117]:IfStatement[26355-26412]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26079-26117]:Block[26374-26412]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[26097-26103]:BreakStatement[26392-26398]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[26136-26149]:ReturnStatement[26431-26444]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26161-26167]:Modifier[26456-26462]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[26168-26171]:PrimitiveType[26463-26466]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[26172-26180]:SimpleName[26467-26475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26183-26222]:Block[26478-26517]"
  }, {
    "left" : "return node.hashCode();",
    "right" : "return node.hashCode();",
    "info" : "ReturnStatement[26193-26216]:ReturnStatement[26488-26511]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26228-26234]:Modifier[26523-26529]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[26235-26242]:PrimitiveType[26530-26537]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[26243-26249]:SimpleName[26538-26544]"
  }, {
    "left" : "Object object",
    "right" : "Object object",
    "info" : "SingleVariableDeclaration[26250-26263]:SingleVariableDeclaration[26545-26558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26265-26520]:Block[26560-26815]"
  }, {
    "left" : "if (object == this)",
    "right" : "if (object == this)",
    "info" : "IfStatement[26275-26331]:IfStatement[26570-26626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26295-26331]:Block[26590-26626]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[26309-26321]:ReturnStatement[26604-26616]"
  }, {
    "left" : "if (!(object instanceof JDOMNodePointer))",
    "right" : "if (!(object instanceof JDOMNodePointer))",
    "info" : "IfStatement[26341-26420]:IfStatement[26636-26715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26383-26420]:Block[26678-26715]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[26397-26410]:ReturnStatement[26692-26705]"
  }, {
    "left" : "JDOMNodePointer other = (JDOMNodePointer) object;",
    "right" : "JDOMNodePointer other = (JDOMNodePointer) object;",
    "info" : "VariableDeclarationStatement[26430-26479]:VariableDeclarationStatement[26725-26774]"
  }, {
    "left" : "return node == other.node;",
    "right" : "return node == other.node;",
    "info" : "ReturnStatement[26488-26514]:ReturnStatement[26783-26809]"
  } ]
}