{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "RequireThisCheck",
      "right" : "RequireThisCheck",
      "info" : "TypeDeclaration[1318-6482]:TypeDeclaration[1318-7032]"
    }, {
      "left" : "public static final String MSG_METHOD = \"require.this.method\";",
      "right" : "public static final String MSG_METHOD = \"require.this.method\";",
      "info" : "FieldDeclaration[2531-2700]:FieldDeclaration[2531-2700]"
    }, {
      "left" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "right" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "info" : "FieldDeclaration[2706-2879]:FieldDeclaration[2706-2879]"
    }, {
      "left" : "private boolean checkFields = true;",
      "right" : "private boolean checkFields = true;",
      "info" : "FieldDeclaration[2885-2969]:FieldDeclaration[2885-2969]"
    }, {
      "left" : "private boolean checkMethods = true;",
      "right" : "private boolean checkMethods = true;",
      "info" : "FieldDeclaration[2974-3060]:FieldDeclaration[2974-3060]"
    }, {
      "left" : "public void setCheckFields(boolean checkFields)",
      "right" : "public void setCheckFields(boolean checkFields)",
      "info" : "MethodDeclaration[3066-3280]:MethodDeclaration[3066-3280]"
    }, {
      "left" : "public void setCheckMethods(boolean checkMethods)",
      "right" : "public void setCheckMethods(boolean checkMethods)",
      "info" : "MethodDeclaration[3286-3507]:MethodDeclaration[3286-3507]"
    }, {
      "left" : "public int[] getDefaultTokens()",
      "right" : "public int[] getDefaultTokens()",
      "info" : "MethodDeclaration[3513-3912]:MethodDeclaration[3513-3912]"
    }, {
      "left" : "public int[] getRequiredTokens()",
      "right" : "public int[] getRequiredTokens()",
      "info" : "MethodDeclaration[3918-4007]:MethodDeclaration[3918-4007]"
    }, {
      "left" : "public int[] getAcceptableTokens()",
      "right" : "public int[] getAcceptableTokens()",
      "info" : "MethodDeclaration[4013-4137]:MethodDeclaration[4013-4137]"
    }, {
      "left" : "public void visitToken(DetailAST ast)",
      "right" : "public void visitToken(DetailAST ast)",
      "info" : "MethodDeclaration[4143-4323]:MethodDeclaration[4143-4323]"
    }, {
      "left" : "private void processIDENT(DetailAST ast)",
      "right" : "private void processField(DetailAST ast, int parentType)",
      "info" : "MethodDeclaration[4329-6480]:MethodDeclaration[5326-6382]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3233-3280]:Block[3233-3280]"
    }, {
      "left" : "this.checkFields = checkFields;",
      "right" : "this.checkFields = checkFields;",
      "info" : "ExpressionStatement[3243-3274]:ExpressionStatement[3243-3274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3458-3507]:Block[3458-3507]"
    }, {
      "left" : "this.checkMethods = checkMethods;",
      "right" : "this.checkMethods = checkMethods;",
      "info" : "ExpressionStatement[3468-3501]:ExpressionStatement[3468-3501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3559-3912]:Block[3559-3912]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "right" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "info" : "ReturnStatement[3569-3906]:ReturnStatement[3569-3906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3965-4007]:Block[3965-4007]"
    }, {
      "left" : "return getDefaultTokens();",
      "right" : "return getDefaultTokens();",
      "info" : "ReturnStatement[3975-4001]:ReturnStatement[3975-4001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4062-4137]:Block[4062-4137]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "right" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "info" : "ReturnStatement[4072-4131]:ReturnStatement[4072-4131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4195-4323]:Block[4195-4323]"
    }, {
      "left" : "super.visitToken(ast);",
      "right" : "super.visitToken(ast);",
      "info" : "ExpressionStatement[4205-4227]:ExpressionStatement[4205-4227]"
    }, {
      "left" : "if (ast.getType() == TokenTypes.IDENT)",
      "right" : "if (ast.getType() == TokenTypes.IDENT)",
      "info" : "IfStatement[4236-4317]:IfStatement[4236-4317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4275-4317]:Block[4275-4317]"
    }, {
      "left" : "processIDENT(ast);",
      "right" : "processIDENT(ast);",
      "info" : "ExpressionStatement[4289-4307]:ExpressionStatement[4289-4307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4546-6480]:Block[5524-6382]"
    }, {
      "left" : "final int parentType = ast.getParent().getType();",
      "right" : "final int parentType = ast.getParent().getType();",
      "info" : "VariableDeclarationStatement[4556-4605]:VariableDeclarationStatement[4556-4605]"
    }, {
      "left" : "if (parentType == TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR\n            || parentType == TokenTypes.ANNOTATION\n            || parentType == TokenTypes.ANNOTATION_FIELD_DEF)",
      "right" : "if (isDeclarationToken(parentType))",
      "info" : "IfStatement[4615-4871]:IfStatement[6121-6235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4786-4871]:Block[6157-6235]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4854-4861]:ReturnStatement[6218-6225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4959-5132]:Block[4904-5140]"
    }, {
      "left" : "if (checkMethods && isClassMethod(ast.getText()))",
      "right" : "if (checkMethods && isClassMethod(ast.getText()))",
      "info" : "IfStatement[4973-5102]:IfStatement[4966-5103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5023-5102]:Block[5016-5103]"
    }, {
      "left" : "log(ast, \"require.this.method\", ast.getText());",
      "right" : "log(ast, \"require.this.method\", ast.getText());",
      "info" : "ExpressionStatement[5041-5088]:ExpressionStatement[5038-5085]"
    }, {
      "left" : "if (ScopeUtils.getSurroundingScope(ast) == null)",
      "right" : "if (ScopeUtils.getSurroundingScope(ast) == null)",
      "info" : "IfStatement[5272-5483]:IfStatement[5534-5745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5321-5483]:Block[5583-5745]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5466-5473]:ReturnStatement[5728-5735]"
    }, {
      "left" : "if (parentType == TokenTypes.DOT\n            && ast.getPreviousSibling() != null)",
      "right" : "if (parentType == TokenTypes.DOT\n                && ast.getPreviousSibling() != null)",
      "info" : "IfStatement[5493-5671]:IfStatement[5755-5937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5575-5671]:Block[5841-5937]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5654-5661]:ReturnStatement[5920-5927]"
    }, {
      "left" : "if (parentType == TokenTypes.TYPE\n            || parentType == TokenTypes.LITERAL_NEW)",
      "right" : "if (parentType == TokenTypes.TYPE\n                || parentType == TokenTypes.LITERAL_NEW)",
      "info" : "IfStatement[5680-5842]:IfStatement[5946-6112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5767-5842]:Block[6037-6112]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5825-5832]:ReturnStatement[6095-6102]"
    }, {
      "left" : "final String name = ast.getText();",
      "right" : "final String name = ast.getText();",
      "info" : "VariableDeclarationStatement[6343-6377]:VariableDeclarationStatement[6245-6279]"
    }, {
      "left" : "if (isClassField(name))",
      "right" : "if (isClassField(name))",
      "info" : "IfStatement[6386-6474]:IfStatement[6288-6376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6410-6474]:Block[6312-6376]"
    }, {
      "left" : "log(ast, \"require.this.variable\", name);",
      "right" : "log(ast, \"require.this.variable\", name);",
      "info" : "ExpressionStatement[6424-6464]:ExpressionStatement[6326-6366]"
    } ]
  },
  "interFileMappings" : { }
}