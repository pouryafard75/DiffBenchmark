{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "XmlSerializerProvider",
      "right" : "XmlSerializerProvider",
      "info" : "TypeDeclaration[842-9591]:TypeDeclaration[842-9714]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1119-1167]:FieldDeclaration[1119-1167]"
    }, {
      "left" : "protected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");",
      "right" : "protected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");",
      "info" : "FieldDeclaration[1173-1413]:FieldDeclaration[1173-1413]"
    }, {
      "left" : "protected final XmlRootNameLookup _rootNameLookup;",
      "right" : "protected final XmlRootNameLookup _rootNameLookup;",
      "info" : "FieldDeclaration[1419-1469]:FieldDeclaration[1419-1469]"
    }, {
      "left" : "public XmlSerializerProvider(XmlRootNameLookup rootNames)",
      "right" : "public XmlSerializerProvider(XmlRootNameLookup rootNames)",
      "info" : "MethodDeclaration[1475-1598]:MethodDeclaration[1475-1598]"
    }, {
      "left" : "public XmlSerializerProvider(XmlSerializerProvider src,\n            SerializationConfig config, SerializerFactory f)",
      "right" : "public XmlSerializerProvider(XmlSerializerProvider src,\n            SerializationConfig config, SerializerFactory f)",
      "info" : "MethodDeclaration[1604-1811]:MethodDeclaration[1604-1811]"
    }, {
      "left" : "public DefaultSerializerProvider createInstance(SerializationConfig config,\n            SerializerFactory jsf)",
      "right" : "public DefaultSerializerProvider createInstance(SerializationConfig config,\n            SerializerFactory jsf)",
      "info" : "MethodDeclaration[2011-2204]:MethodDeclaration[2011-2204]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
      "info" : "MethodDeclaration[2210-3791]:MethodDeclaration[2210-3791]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType)\n        throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType)\n        throws IOException",
      "info" : "MethodDeclaration[3797-5331]:MethodDeclaration[3797-5331]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> ser) throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> ser) throws IOException",
      "info" : "MethodDeclaration[5359-6935]:MethodDeclaration[5359-6935]"
    }, {
      "left" : "protected void _serializeXmlNull(JsonGenerator jgen) throws IOException",
      "right" : "protected void _serializeXmlNull(JsonGenerator jgen) throws IOException",
      "info" : "MethodDeclaration[6941-7316]:MethodDeclaration[6941-7439]"
    }, {
      "left" : "protected void _startRootArray(ToXmlGenerator xgen, QName rootName) throws IOException",
      "right" : "protected void _startRootArray(ToXmlGenerator xgen, QName rootName) throws IOException",
      "info" : "MethodDeclaration[7326-7569]:MethodDeclaration[7449-7692]"
    }, {
      "left" : "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException",
      "right" : "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException",
      "info" : "MethodDeclaration[7579-8628]:MethodDeclaration[7702-8751]"
    }, {
      "left" : "protected QName _rootNameFromConfig()",
      "right" : "protected QName _rootNameFromConfig()",
      "info" : "MethodDeclaration[8634-8998]:MethodDeclaration[8757-9121]"
    }, {
      "left" : "protected ToXmlGenerator _asXmlGenerator(JsonGenerator gen)\n        throws JsonMappingException",
      "right" : "protected ToXmlGenerator _asXmlGenerator(JsonGenerator gen)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[9004-9585]:MethodDeclaration[9127-9708]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1027-1033]:Modifier[1027-1033]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1034-1039]:TYPE_DECLARATION_KIND[1034-1039]"
    }, {
      "left" : "XmlSerializerProvider",
      "right" : "XmlSerializerProvider",
      "info" : "SimpleName[1040-1061]:SimpleName[1040-1061]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[1070-1095]:SimpleType[1070-1095]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1475-1481]:Modifier[1475-1481]"
    }, {
      "left" : "XmlSerializerProvider",
      "right" : "XmlSerializerProvider",
      "info" : "SimpleName[1482-1503]:SimpleName[1482-1503]"
    }, {
      "left" : "XmlRootNameLookup rootNames",
      "right" : "XmlRootNameLookup rootNames",
      "info" : "SingleVariableDeclaration[1504-1531]:SingleVariableDeclaration[1504-1531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1537-1598]:Block[1537-1598]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[1547-1555]:SuperConstructorInvocation[1547-1555]"
    }, {
      "left" : "_rootNameLookup = rootNames;",
      "right" : "_rootNameLookup = rootNames;",
      "info" : "ExpressionStatement[1564-1592]:ExpressionStatement[1564-1592]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1604-1610]:Modifier[1604-1610]"
    }, {
      "left" : "XmlSerializerProvider",
      "right" : "XmlSerializerProvider",
      "info" : "SimpleName[1611-1632]:SimpleName[1611-1632]"
    }, {
      "left" : "XmlSerializerProvider src",
      "right" : "XmlSerializerProvider src",
      "info" : "SingleVariableDeclaration[1633-1658]:SingleVariableDeclaration[1633-1658]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[1672-1698]:SingleVariableDeclaration[1672-1698]"
    }, {
      "left" : "SerializerFactory f",
      "right" : "SerializerFactory f",
      "info" : "SingleVariableDeclaration[1700-1719]:SingleVariableDeclaration[1700-1719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1725-1811]:Block[1725-1811]"
    }, {
      "left" : "super(src, config, f);",
      "right" : "super(src, config, f);",
      "info" : "SuperConstructorInvocation[1735-1757]:SuperConstructorInvocation[1735-1757]"
    }, {
      "left" : "_rootNameLookup  = src._rootNameLookup;",
      "right" : "_rootNameLookup  = src._rootNameLookup;",
      "info" : "ExpressionStatement[1766-1805]:ExpressionStatement[1766-1805]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2011-2020]:MarkerAnnotation[2011-2020]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2025-2031]:Modifier[2025-2031]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[2032-2057]:SimpleType[2032-2057]"
    }, {
      "left" : "createInstance",
      "right" : "createInstance",
      "info" : "SimpleName[2058-2072]:SimpleName[2058-2072]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[2073-2099]:SingleVariableDeclaration[2073-2099]"
    }, {
      "left" : "SerializerFactory jsf",
      "right" : "SerializerFactory jsf",
      "info" : "SingleVariableDeclaration[2113-2134]:SingleVariableDeclaration[2113-2134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2136-2204]:Block[2136-2204]"
    }, {
      "left" : "return new XmlSerializerProvider(this, config, jsf);",
      "right" : "return new XmlSerializerProvider(this, config, jsf);",
      "info" : "ReturnStatement[2146-2198]:ReturnStatement[2146-2198]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[2210-2239]:SingleMemberAnnotation[2210-2239]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2244-2253]:MarkerAnnotation[2244-2253]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2258-2264]:Modifier[2258-2264]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2265-2269]:PrimitiveType[2265-2269]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[2270-2284]:SimpleName[2270-2284]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[2285-2302]:SingleVariableDeclaration[2285-2302]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[2304-2316]:SingleVariableDeclaration[2304-2316]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2325-2336]:SimpleType[2325-2336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2341-3791]:Block[2341-3791]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[2351-2437]:IfStatement[2351-2437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2370-2437]:Block[2370-2437]"
    }, {
      "left" : "_serializeXmlNull(gen);",
      "right" : "_serializeXmlNull(gen);",
      "info" : "ExpressionStatement[2384-2407]:ExpressionStatement[2384-2407]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[2420-2427]:ReturnStatement[2420-2427]"
    }, {
      "left" : "final Class<?> cls = value.getClass();",
      "right" : "final Class<?> cls = value.getClass();",
      "info" : "VariableDeclarationStatement[2446-2484]:VariableDeclarationStatement[2446-2484]"
    }, {
      "left" : "final boolean asArray;",
      "right" : "final boolean asArray;",
      "info" : "VariableDeclarationStatement[2493-2515]:VariableDeclarationStatement[2493-2515]"
    }, {
      "left" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "right" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "info" : "VariableDeclarationStatement[2524-2573]:VariableDeclarationStatement[2524-2573]"
    }, {
      "left" : "if (xgen == null)",
      "right" : "if (xgen == null)",
      "info" : "IfStatement[2582-3046]:IfStatement[2582-3046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2600-2668]:Block[2600-2668]"
    }, {
      "left" : "asArray = false;",
      "right" : "asArray = false;",
      "info" : "ExpressionStatement[2642-2658]:ExpressionStatement[2642-2658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2674-3046]:Block[2674-3046]"
    }, {
      "left" : "QName rootName = _rootNameFromConfig();",
      "right" : "QName rootName = _rootNameFromConfig();",
      "info" : "VariableDeclarationStatement[2688-2727]:VariableDeclarationStatement[2688-2727]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[2740-2848]:IfStatement[2740-2848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2762-2848]:Block[2762-2848]"
    }, {
      "left" : "rootName = _rootNameLookup.findRootName(cls, _config);",
      "right" : "rootName = _rootNameLookup.findRootName(cls, _config);",
      "info" : "ExpressionStatement[2780-2834]:ExpressionStatement[2780-2834]"
    }, {
      "left" : "_initWithRootName(xgen, rootName);",
      "right" : "_initWithRootName(xgen, rootName);",
      "info" : "ExpressionStatement[2861-2895]:ExpressionStatement[2861-2895]"
    }, {
      "left" : "asArray = TypeUtil.isIndexedType(cls);",
      "right" : "asArray = TypeUtil.isIndexedType(cls);",
      "info" : "ExpressionStatement[2908-2946]:ExpressionStatement[2908-2946]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[2959-3036]:IfStatement[2959-3036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2972-3036]:Block[2972-3036]"
    }, {
      "left" : "_startRootArray(xgen, rootName);",
      "right" : "_startRootArray(xgen, rootName);",
      "info" : "ExpressionStatement[2990-3022]:ExpressionStatement[2990-3022]"
    }, {
      "left" : "final JsonSerializer<Object> ser = findTypedValueSerializer(cls, true, null);",
      "right" : "final JsonSerializer<Object> ser = findTypedValueSerializer(cls, true, null);",
      "info" : "VariableDeclarationStatement[3107-3184]:VariableDeclarationStatement[3107-3184]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3193-3672]:TryStatement[3193-3672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3197-3253]:Block[3197-3253]"
    }, {
      "left" : "ser.serialize(value, gen, this);",
      "right" : "ser.serialize(value, gen, this);",
      "info" : "ExpressionStatement[3211-3243]:ExpressionStatement[3211-3243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3278-3372]:Block[3278-3372]"
    }, {
      "left" : "throw ioe;",
      "right" : "throw ioe;",
      "info" : "ThrowStatement[3352-3362]:ThrowStatement[3352-3362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3393-3672]:Block[3393-3672]"
    }, {
      "left" : "String msg = e.getMessage();",
      "right" : "String msg = e.getMessage();",
      "info" : "VariableDeclarationStatement[3462-3490]:VariableDeclarationStatement[3462-3490]"
    }, {
      "left" : "if (msg == null)",
      "right" : "if (msg == null)",
      "info" : "IfStatement[3503-3604]:IfStatement[3503-3604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3520-3604]:Block[3520-3604]"
    }, {
      "left" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "right" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "info" : "ExpressionStatement[3538-3590]:ExpressionStatement[3538-3590]"
    }, {
      "left" : "throw JsonMappingException.from(gen, msg, e);",
      "right" : "throw JsonMappingException.from(gen, msg, e);",
      "info" : "ThrowStatement[3617-3662]:ThrowStatement[3617-3662]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[3727-3785]:IfStatement[3727-3785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3740-3785]:Block[3740-3785]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[3754-3775]:ExpressionStatement[3754-3775]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[3797-3826]:SingleMemberAnnotation[3797-3826]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3831-3840]:MarkerAnnotation[3831-3840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3845-3851]:Modifier[3845-3851]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3852-3856]:PrimitiveType[3852-3856]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[3857-3871]:SimpleName[3857-3871]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[3872-3889]:SingleVariableDeclaration[3872-3889]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[3891-3903]:SingleVariableDeclaration[3891-3903]"
    }, {
      "left" : "JavaType rootType",
      "right" : "JavaType rootType",
      "info" : "SingleVariableDeclaration[3905-3922]:SingleVariableDeclaration[3905-3922]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[3939-3950]:SimpleType[3939-3950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3955-5331]:Block[3955-5331]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[3965-4051]:IfStatement[3965-4051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3984-4051]:Block[3984-4051]"
    }, {
      "left" : "_serializeXmlNull(gen);",
      "right" : "_serializeXmlNull(gen);",
      "info" : "ExpressionStatement[3998-4021]:ExpressionStatement[3998-4021]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4034-4041]:ReturnStatement[4034-4041]"
    }, {
      "left" : "final boolean asArray;",
      "right" : "final boolean asArray;",
      "info" : "VariableDeclarationStatement[4060-4082]:VariableDeclarationStatement[4060-4082]"
    }, {
      "left" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "right" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "info" : "VariableDeclarationStatement[4091-4140]:VariableDeclarationStatement[4091-4140]"
    }, {
      "left" : "if (xgen == null)",
      "right" : "if (xgen == null)",
      "info" : "IfStatement[4149-4623]:IfStatement[4149-4623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4167-4235]:Block[4167-4235]"
    }, {
      "left" : "asArray = false;",
      "right" : "asArray = false;",
      "info" : "ExpressionStatement[4209-4225]:ExpressionStatement[4209-4225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4241-4623]:Block[4241-4623]"
    }, {
      "left" : "QName rootName = _rootNameFromConfig();",
      "right" : "QName rootName = _rootNameFromConfig();",
      "info" : "VariableDeclarationStatement[4255-4294]:VariableDeclarationStatement[4255-4294]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[4307-4420]:IfStatement[4307-4420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4329-4420]:Block[4329-4420]"
    }, {
      "left" : "rootName = _rootNameLookup.findRootName(rootType, _config);",
      "right" : "rootName = _rootNameLookup.findRootName(rootType, _config);",
      "info" : "ExpressionStatement[4347-4406]:ExpressionStatement[4347-4406]"
    }, {
      "left" : "_initWithRootName(xgen, rootName);",
      "right" : "_initWithRootName(xgen, rootName);",
      "info" : "ExpressionStatement[4433-4467]:ExpressionStatement[4433-4467]"
    }, {
      "left" : "asArray = TypeUtil.isIndexedType(rootType);",
      "right" : "asArray = TypeUtil.isIndexedType(rootType);",
      "info" : "ExpressionStatement[4480-4523]:ExpressionStatement[4480-4523]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[4536-4613]:IfStatement[4536-4613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4549-4613]:Block[4549-4613]"
    }, {
      "left" : "_startRootArray(xgen, rootName);",
      "right" : "_startRootArray(xgen, rootName);",
      "info" : "ExpressionStatement[4567-4599]:ExpressionStatement[4567-4599]"
    }, {
      "left" : "final JsonSerializer<Object> ser = findTypedValueSerializer(rootType, true, null);",
      "right" : "final JsonSerializer<Object> ser = findTypedValueSerializer(rootType, true, null);",
      "info" : "VariableDeclarationStatement[4633-4715]:VariableDeclarationStatement[4633-4715]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4767-5212]:TryStatement[4767-5212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4771-4827]:Block[4771-4827]"
    }, {
      "left" : "ser.serialize(value, gen, this);",
      "right" : "ser.serialize(value, gen, this);",
      "info" : "ExpressionStatement[4785-4817]:ExpressionStatement[4785-4817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4852-4922]:Block[4852-4922]"
    }, {
      "left" : "throw ioe;",
      "right" : "throw ioe;",
      "info" : "ThrowStatement[4902-4912]:ThrowStatement[4902-4912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4943-5212]:Block[4943-5212]"
    }, {
      "left" : "String msg = e.getMessage();",
      "right" : "String msg = e.getMessage();",
      "info" : "VariableDeclarationStatement[5002-5030]:VariableDeclarationStatement[5002-5030]"
    }, {
      "left" : "if (msg == null)",
      "right" : "if (msg == null)",
      "info" : "IfStatement[5043-5144]:IfStatement[5043-5144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5060-5144]:Block[5060-5144]"
    }, {
      "left" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "right" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "info" : "ExpressionStatement[5078-5130]:ExpressionStatement[5078-5130]"
    }, {
      "left" : "throw JsonMappingException.from(gen, msg, e);",
      "right" : "throw JsonMappingException.from(gen, msg, e);",
      "info" : "ThrowStatement[5157-5202]:ThrowStatement[5157-5202]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[5267-5325]:IfStatement[5267-5325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5280-5325]:Block[5280-5325]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[5294-5315]:ExpressionStatement[5294-5315]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[5359-5388]:SingleMemberAnnotation[5359-5388]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5393-5402]:MarkerAnnotation[5393-5402]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5407-5413]:Modifier[5407-5413]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5414-5418]:PrimitiveType[5414-5418]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[5419-5433]:SimpleName[5419-5433]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[5434-5451]:SingleVariableDeclaration[5434-5451]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[5453-5465]:SingleVariableDeclaration[5453-5465]"
    }, {
      "left" : "JavaType rootType",
      "right" : "JavaType rootType",
      "info" : "SingleVariableDeclaration[5467-5484]:SingleVariableDeclaration[5467-5484]"
    }, {
      "left" : "JsonSerializer<Object> ser",
      "right" : "JsonSerializer<Object> ser",
      "info" : "SingleVariableDeclaration[5498-5524]:SingleVariableDeclaration[5498-5524]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5533-5544]:SimpleType[5533-5544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5549-6935]:Block[5549-6935]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[5559-5645]:IfStatement[5559-5645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5578-5645]:Block[5578-5645]"
    }, {
      "left" : "_serializeXmlNull(gen);",
      "right" : "_serializeXmlNull(gen);",
      "info" : "ExpressionStatement[5592-5615]:ExpressionStatement[5592-5615]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5628-5635]:ReturnStatement[5628-5635]"
    }, {
      "left" : "final boolean asArray;",
      "right" : "final boolean asArray;",
      "info" : "VariableDeclarationStatement[5654-5676]:VariableDeclarationStatement[5654-5676]"
    }, {
      "left" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "right" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "info" : "VariableDeclarationStatement[5685-5734]:VariableDeclarationStatement[5685-5734]"
    }, {
      "left" : "if (xgen == null)",
      "right" : "if (xgen == null)",
      "info" : "IfStatement[5743-6217]:IfStatement[5743-6217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5761-5829]:Block[5761-5829]"
    }, {
      "left" : "asArray = false;",
      "right" : "asArray = false;",
      "info" : "ExpressionStatement[5803-5819]:ExpressionStatement[5803-5819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5835-6217]:Block[5835-6217]"
    }, {
      "left" : "QName rootName = _rootNameFromConfig();",
      "right" : "QName rootName = _rootNameFromConfig();",
      "info" : "VariableDeclarationStatement[5849-5888]:VariableDeclarationStatement[5849-5888]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[5901-6014]:IfStatement[5901-6014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5923-6014]:Block[5923-6014]"
    }, {
      "left" : "rootName = _rootNameLookup.findRootName(rootType, _config);",
      "right" : "rootName = _rootNameLookup.findRootName(rootType, _config);",
      "info" : "ExpressionStatement[5941-6000]:ExpressionStatement[5941-6000]"
    }, {
      "left" : "_initWithRootName(xgen, rootName);",
      "right" : "_initWithRootName(xgen, rootName);",
      "info" : "ExpressionStatement[6027-6061]:ExpressionStatement[6027-6061]"
    }, {
      "left" : "asArray = TypeUtil.isIndexedType(rootType);",
      "right" : "asArray = TypeUtil.isIndexedType(rootType);",
      "info" : "ExpressionStatement[6074-6117]:ExpressionStatement[6074-6117]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[6130-6207]:IfStatement[6130-6207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6143-6207]:Block[6143-6207]"
    }, {
      "left" : "_startRootArray(xgen, rootName);",
      "right" : "_startRootArray(xgen, rootName);",
      "info" : "ExpressionStatement[6161-6193]:ExpressionStatement[6161-6193]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[6226-6320]:IfStatement[6226-6320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6243-6320]:Block[6243-6320]"
    }, {
      "left" : "ser = findTypedValueSerializer(rootType, true, null);",
      "right" : "ser = findTypedValueSerializer(rootType, true, null);",
      "info" : "ExpressionStatement[6257-6310]:ExpressionStatement[6257-6310]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6372-6817]:TryStatement[6372-6817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6376-6432]:Block[6376-6432]"
    }, {
      "left" : "ser.serialize(value, gen, this);",
      "right" : "ser.serialize(value, gen, this);",
      "info" : "ExpressionStatement[6390-6422]:ExpressionStatement[6390-6422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6457-6527]:Block[6457-6527]"
    }, {
      "left" : "throw ioe;",
      "right" : "throw ioe;",
      "info" : "ThrowStatement[6507-6517]:ThrowStatement[6507-6517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6548-6817]:Block[6548-6817]"
    }, {
      "left" : "String msg = e.getMessage();",
      "right" : "String msg = e.getMessage();",
      "info" : "VariableDeclarationStatement[6607-6635]:VariableDeclarationStatement[6607-6635]"
    }, {
      "left" : "if (msg == null)",
      "right" : "if (msg == null)",
      "info" : "IfStatement[6648-6749]:IfStatement[6648-6749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6665-6749]:Block[6665-6749]"
    }, {
      "left" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "right" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "info" : "ExpressionStatement[6683-6735]:ExpressionStatement[6683-6735]"
    }, {
      "left" : "throw JsonMappingException.from(gen, msg, e);",
      "right" : "throw JsonMappingException.from(gen, msg, e);",
      "info" : "ThrowStatement[6762-6807]:ThrowStatement[6762-6807]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[6871-6929]:IfStatement[6871-6929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6884-6929]:Block[6884-6929]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[6898-6919]:ExpressionStatement[6898-6919]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6941-6950]:Modifier[6941-6950]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6951-6955]:PrimitiveType[6951-6955]"
    }, {
      "left" : "_serializeXmlNull",
      "right" : "_serializeXmlNull",
      "info" : "SimpleName[6956-6973]:SimpleName[6956-6973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7017-7316]:Block[7017-7439]"
    }, {
      "left" : "if (jgen instanceof ToXmlGenerator)",
      "right" : "if (jgen instanceof ToXmlGenerator)",
      "info" : "IfStatement[7147-7268]:IfStatement[7280-7391]"
    }, {
      "left" : "super.serializeValue(jgen, null);",
      "right" : "super.serializeValue(jgen, null);",
      "info" : "ExpressionStatement[7277-7310]:ExpressionStatement[7400-7433]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7326-7335]:Modifier[7449-7458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7336-7340]:PrimitiveType[7459-7463]"
    }, {
      "left" : "_startRootArray",
      "right" : "_startRootArray",
      "info" : "SimpleName[7341-7356]:SimpleName[7464-7479]"
    }, {
      "left" : "ToXmlGenerator xgen",
      "right" : "ToXmlGenerator xgen",
      "info" : "SingleVariableDeclaration[7357-7376]:SingleVariableDeclaration[7480-7499]"
    }, {
      "left" : "QName rootName",
      "right" : "QName rootName",
      "info" : "SingleVariableDeclaration[7378-7392]:SingleVariableDeclaration[7501-7515]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[7401-7412]:SimpleType[7524-7535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7417-7569]:Block[7540-7692]"
    }, {
      "left" : "xgen.writeStartObject();",
      "right" : "xgen.writeStartObject();",
      "info" : "ExpressionStatement[7427-7451]:ExpressionStatement[7550-7574]"
    }, {
      "left" : "xgen.writeFieldName(\"item\");",
      "right" : "xgen.writeFieldName(\"item\");",
      "info" : "ExpressionStatement[7535-7563]:ExpressionStatement[7658-7686]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7579-7588]:Modifier[7702-7711]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7589-7593]:PrimitiveType[7712-7716]"
    }, {
      "left" : "_initWithRootName",
      "right" : "_initWithRootName",
      "info" : "SimpleName[7594-7611]:SimpleName[7717-7734]"
    }, {
      "left" : "ToXmlGenerator xgen",
      "right" : "ToXmlGenerator xgen",
      "info" : "SingleVariableDeclaration[7612-7631]:SingleVariableDeclaration[7735-7754]"
    }, {
      "left" : "QName rootName",
      "right" : "QName rootName",
      "info" : "SingleVariableDeclaration[7633-7647]:SingleVariableDeclaration[7756-7770]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[7656-7667]:SimpleType[7779-7790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7672-8628]:Block[7795-8751]"
    }, {
      "left" : "if (!xgen.setNextNameIfMissing(rootName))",
      "right" : "if (!xgen.setNextNameIfMissing(rootName))",
      "info" : "IfStatement[7882-8079]:IfStatement[8005-8202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7924-8079]:Block[8047-8202]"
    }, {
      "left" : "if (xgen.inRoot())",
      "right" : "if (xgen.inRoot())",
      "info" : "IfStatement[7991-8069]:IfStatement[8114-8192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8010-8069]:Block[8133-8192]"
    }, {
      "left" : "xgen.setNextName(rootName);",
      "right" : "xgen.setNextName(rootName);",
      "info" : "ExpressionStatement[8028-8055]:ExpressionStatement[8151-8178]"
    }, {
      "left" : "xgen.initGenerator();",
      "right" : "xgen.initGenerator();",
      "info" : "ExpressionStatement[8088-8109]:ExpressionStatement[8211-8232]"
    }, {
      "left" : "String ns = rootName.getNamespaceURI();",
      "right" : "String ns = rootName.getNamespaceURI();",
      "info" : "VariableDeclarationStatement[8118-8157]:VariableDeclarationStatement[8241-8280]"
    }, {
      "left" : "if (ns != null && ns.length() > 0)",
      "right" : "if (ns != null && ns.length() > 0)",
      "info" : "IfStatement[8386-8622]:IfStatement[8509-8745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8421-8622]:Block[8544-8745]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8435-8612]:TryStatement[8558-8735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8439-8516]:Block[8562-8639]"
    }, {
      "left" : "xgen.getStaxWriter().setDefaultNamespace(ns);",
      "right" : "xgen.getStaxWriter().setDefaultNamespace(ns);",
      "info" : "ExpressionStatement[8457-8502]:ExpressionStatement[8580-8625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8546-8612]:Block[8669-8735]"
    }, {
      "left" : "StaxUtil.throwXmlAsIOException(e);",
      "right" : "StaxUtil.throwXmlAsIOException(e);",
      "info" : "ExpressionStatement[8564-8598]:ExpressionStatement[8687-8721]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8634-8643]:Modifier[8757-8766]"
    }, {
      "left" : "QName",
      "right" : "QName",
      "info" : "SimpleType[8644-8649]:SimpleType[8767-8772]"
    }, {
      "left" : "_rootNameFromConfig",
      "right" : "_rootNameFromConfig",
      "info" : "SimpleName[8650-8669]:SimpleName[8773-8792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8676-8998]:Block[8799-9121]"
    }, {
      "left" : "PropertyName name = _config.getFullRootName();",
      "right" : "PropertyName name = _config.getFullRootName();",
      "info" : "VariableDeclarationStatement[8686-8732]:VariableDeclarationStatement[8809-8855]"
    }, {
      "left" : "if (name == null)",
      "right" : "if (name == null)",
      "info" : "IfStatement[8741-8795]:IfStatement[8864-8918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8759-8795]:Block[8882-8918]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8773-8785]:ReturnStatement[8896-8908]"
    }, {
      "left" : "String ns = name.getNamespace();",
      "right" : "String ns = name.getNamespace();",
      "info" : "VariableDeclarationStatement[8804-8836]:VariableDeclarationStatement[8927-8959]"
    }, {
      "left" : "if (ns == null || ns.isEmpty())",
      "right" : "if (ns == null || ns.isEmpty())",
      "info" : "IfStatement[8845-8940]:IfStatement[8968-9063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8877-8940]:Block[9000-9063]"
    }, {
      "left" : "return new QName(name.getSimpleName());",
      "right" : "return new QName(name.getSimpleName());",
      "info" : "ReturnStatement[8891-8930]:ReturnStatement[9014-9053]"
    }, {
      "left" : "return new QName(ns, name.getSimpleName());",
      "right" : "return new QName(ns, name.getSimpleName());",
      "info" : "ReturnStatement[8949-8992]:ReturnStatement[9072-9115]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[9004-9013]:Modifier[9127-9136]"
    }, {
      "left" : "ToXmlGenerator",
      "right" : "ToXmlGenerator",
      "info" : "SimpleType[9014-9028]:SimpleType[9137-9151]"
    }, {
      "left" : "_asXmlGenerator",
      "right" : "_asXmlGenerator",
      "info" : "SimpleName[9029-9044]:SimpleName[9152-9167]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[9045-9062]:SingleVariableDeclaration[9168-9185]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[9079-9099]:SimpleType[9202-9222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9104-9585]:Block[9227-9708]"
    }, {
      "left" : "if (!(gen instanceof ToXmlGenerator))",
      "right" : "if (!(gen instanceof ToXmlGenerator))",
      "info" : "IfStatement[9197-9542]:IfStatement[9320-9665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9235-9542]:Block[9358-9665]"
    }, {
      "left" : "if (!(gen instanceof TokenBuffer))",
      "right" : "if (!(gen instanceof TokenBuffer))",
      "info" : "IfStatement[9275-9507]:IfStatement[9398-9630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9310-9507]:Block[9433-9630]"
    }, {
      "left" : "throw JsonMappingException.from(gen,\n                        \"XmlMapper does not with generators of type other than ToXmlGenerator; got: \"+gen.getClass().getName());",
      "right" : "throw JsonMappingException.from(gen,\n                        \"XmlMapper does not with generators of type other than ToXmlGenerator; got: \"+gen.getClass().getName());",
      "info" : "ThrowStatement[9328-9493]:ThrowStatement[9451-9616]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9520-9532]:ReturnStatement[9643-9655]"
    }, {
      "left" : "return (ToXmlGenerator) gen;",
      "right" : "return (ToXmlGenerator) gen;",
      "info" : "ReturnStatement[9551-9579]:ReturnStatement[9674-9702]"
    } ]
  },
  "interFileMappings" : { }
}