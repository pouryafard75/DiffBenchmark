{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Entities",
      "right" : "Entities",
      "info" : "TypeDeclaration[208-6769]:TypeDeclaration[240-5853]"
    }, {
      "left" : "enum : EscapeMode",
      "right" : "enum : EscapeMode",
      "info" : "EnumDeclaration[434-942]:EnumDeclaration[466-974]"
    }, {
      "left" : "private Map<Character, String> map;",
      "right" : "private Map<Character, String> map;",
      "info" : "FieldDeclaration[729-764]:FieldDeclaration[761-796]"
    }, {
      "left" : "EscapeMode(Map<Character, String> map)",
      "right" : "EscapeMode(Map<Character, String> map)",
      "info" : "MethodDeclaration[774-852]:MethodDeclaration[806-884]"
    }, {
      "left" : "public Map<Character, String> getMap()",
      "right" : "public Map<Character, String> getMap()",
      "info" : "MethodDeclaration[862-936]:MethodDeclaration[894-968]"
    }, {
      "left" : "private static final Map<String, Character> full;",
      "right" : "private static final Map<String, Character> full;",
      "info" : "FieldDeclaration[948-997]:FieldDeclaration[980-1029]"
    }, {
      "left" : "private static final Map<Character, String> xhtmlByVal;",
      "right" : "private static final Map<Character, String> xhtmlByVal;",
      "info" : "FieldDeclaration[1002-1057]:FieldDeclaration[1034-1089]"
    }, {
      "left" : "private static final Map<String, Character> base;",
      "right" : "private static final Map<String, Character> base;",
      "info" : "FieldDeclaration[1062-1111]:FieldDeclaration[1094-1143]"
    }, {
      "left" : "private static final Map<Character, String> baseByVal;",
      "right" : "private static final Map<Character, String> baseByVal;",
      "info" : "FieldDeclaration[1116-1170]:FieldDeclaration[1148-1202]"
    }, {
      "left" : "private static final Map<Character, String> fullByVal;",
      "right" : "private static final Map<Character, String> fullByVal;",
      "info" : "FieldDeclaration[1175-1229]:FieldDeclaration[1207-1261]"
    }, {
      "left" : "private static final Pattern unescapePattern = Pattern.compile(\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\\\d*);?\");",
      "right" : "private static final Pattern unescapePattern = Pattern.compile(\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\\\d*);?\");",
      "info" : "FieldDeclaration[1234-1341]:FieldDeclaration[1266-1373]"
    }, {
      "left" : "private static final Pattern strictUnescapePattern = Pattern.compile(\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\\\d*);\");",
      "right" : "private static final Pattern strictUnescapePattern = Pattern.compile(\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\\\d*);\");",
      "info" : "FieldDeclaration[1346-1458]:FieldDeclaration[1378-1490]"
    }, {
      "left" : "private Entities()",
      "right" : "private Entities()",
      "info" : "MethodDeclaration[1464-1485]:MethodDeclaration[1496-1517]"
    }, {
      "left" : "public static boolean isNamedEntity(String name)",
      "right" : "public static boolean isNamedEntity(String name)",
      "info" : "MethodDeclaration[1491-1761]:MethodDeclaration[1523-1793]"
    }, {
      "left" : "public static Character getCharacterByName(String name)",
      "right" : "public static Character getCharacterByName(String name)",
      "info" : "MethodDeclaration[2018-2305]:MethodDeclaration[2154-2441]"
    }, {
      "left" : "static String escape(String string, Document.OutputSettings out)",
      "right" : "static String escape(String string, Document.OutputSettings out)",
      "info" : "MethodDeclaration[2315-2451]:MethodDeclaration[2451-2587]"
    }, {
      "left" : "static String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",
      "right" : "static String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",
      "info" : "MethodDeclaration[2457-3095]:MethodDeclaration[2593-3231]"
    }, {
      "left" : "static String unescape(String string)",
      "right" : "static String unescape(String string)",
      "info" : "MethodDeclaration[3101-3186]:MethodDeclaration[3237-3322]"
    }, {
      "left" : "static String unescape(String string, boolean strict)",
      "right" : "static String unescape(String string, boolean strict)",
      "info" : "MethodDeclaration[3192-4545]:MethodDeclaration[3328-3629]"
    }, {
      "left" : "private static final Object[][] xhtmlArray = {\n            {\"quot\", 0x00022},\n            {\"amp\", 0x00026},\n            {\"apos\", 0x00027},\n            {\"lt\", 0x0003C},\n            {\"gt\", 0x0003E}\n    };",
      "right" : "private static final Object[][] xhtmlArray = {\n            {\"quot\", 0x00022},\n            {\"amp\", 0x00026},\n            {\"apos\", 0x00027},\n            {\"lt\", 0x0003C},\n            {\"gt\", 0x0003E}\n    };",
      "info" : "FieldDeclaration[4588-4790]:FieldDeclaration[3672-3874]"
    }, {
      "left" : "private static Map<String, Character> loadEntities(String filename)",
      "right" : "private static Map<String, Character> loadEntities(String filename)",
      "info" : "MethodDeclaration[5317-6114]:MethodDeclaration[4401-5198]"
    }, {
      "left" : "private static Map<Character, String> toCharacterKey(Map<String, Character> inMap)",
      "right" : "private static Map<Character, String> toCharacterKey(Map<String, Character> inMap)",
      "info" : "MethodDeclaration[6120-6767]:MethodDeclaration[5204-5851]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[813-852]:Block[845-884]"
    }, {
      "left" : "this.map = map;",
      "right" : "this.map = map;",
      "info" : "ExpressionStatement[827-842]:ExpressionStatement[859-874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[901-936]:Block[933-968]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[915-926]:ReturnStatement[947-958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1483-1485]:Block[1515-1517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1715-1761]:Block[1747-1793]"
    }, {
      "left" : "return full.containsKey(name);",
      "right" : "return full.containsKey(name);",
      "info" : "ReturnStatement[1725-1755]:ReturnStatement[1757-1787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2267-2305]:Block[2403-2441]"
    }, {
      "left" : "return full.get(name);",
      "right" : "return full.get(name);",
      "info" : "ReturnStatement[2277-2299]:ReturnStatement[2413-2435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2380-2451]:Block[2516-2587]"
    }, {
      "left" : "return escape(string, out.encoder(), out.escapeMode());",
      "right" : "return escape(string, out.encoder(), out.escapeMode());",
      "info" : "ReturnStatement[2390-2445]:ReturnStatement[2526-2581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2540-3095]:Block[2676-3231]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder(string.length() * 2);",
      "right" : "StringBuilder accum = new StringBuilder(string.length() * 2);",
      "info" : "VariableDeclarationStatement[2550-2611]:VariableDeclarationStatement[2686-2747]"
    }, {
      "left" : "Map<Character, String> map = escapeMode.getMap();",
      "right" : "Map<Character, String> map = escapeMode.getMap();",
      "info" : "VariableDeclarationStatement[2620-2669]:VariableDeclarationStatement[2756-2805]"
    }, {
      "left" : "for (int pos = 0; pos < string.length(); pos++)",
      "right" : "for (int pos = 0; pos < string.length(); pos++)",
      "info" : "ForStatement[2679-3055]:ForStatement[2815-3191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2727-3055]:Block[2863-3191]"
    }, {
      "left" : "Character c = string.charAt(pos);",
      "right" : "Character c = string.charAt(pos);",
      "info" : "VariableDeclarationStatement[2741-2774]:VariableDeclarationStatement[2877-2910]"
    }, {
      "left" : "if (map.containsKey(c))",
      "right" : "if (map.containsKey(c))",
      "info" : "IfStatement[2787-3045]:IfStatement[2923-3181]"
    }, {
      "left" : "accum.append('&').append(map.get(c)).append(';');",
      "right" : "accum.append('&').append(map.get(c)).append(';');",
      "info" : "ExpressionStatement[2827-2876]:ExpressionStatement[2963-3012]"
    }, {
      "left" : "if (encoder.canEncode(c))",
      "right" : "if (encoder.canEncode(c))",
      "info" : "IfStatement[2894-3045]:IfStatement[3030-3181]"
    }, {
      "left" : "accum.append(c.charValue());",
      "right" : "accum.append(c.charValue());",
      "info" : "ExpressionStatement[2936-2964]:ExpressionStatement[3072-3100]"
    }, {
      "left" : "accum.append(\"&#\").append((int) c).append(';');",
      "right" : "accum.append(\"&#\").append((int) c).append(';');",
      "info" : "ExpressionStatement[2998-3045]:ExpressionStatement[3134-3181]"
    }, {
      "left" : "return accum.toString();",
      "right" : "return accum.toString();",
      "info" : "ReturnStatement[3065-3089]:ReturnStatement[3201-3225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3139-3186]:Block[3275-3322]"
    }, {
      "left" : "return unescape(string, false);",
      "right" : "return unescape(string, false);",
      "info" : "ReturnStatement[3149-3180]:ReturnStatement[3285-3316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3430-4545]:Block[3566-3629]"
    }, {
      "left" : "return accum.toString();",
      "right" : "return Parser.unescapeEntities(string, strict);",
      "info" : "ReturnStatement[4515-4539]:ReturnStatement[3576-3623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4803-5311]:Block[3887-4395]"
    }, {
      "left" : "xhtmlByVal = new HashMap<Character, String>();",
      "right" : "xhtmlByVal = new HashMap<Character, String>();",
      "info" : "ExpressionStatement[4813-4859]:ExpressionStatement[3897-3943]"
    }, {
      "left" : "base = loadEntities(\"entities-base.properties\");",
      "right" : "base = loadEntities(\"entities-base.properties\");",
      "info" : "ExpressionStatement[4868-4916]:ExpressionStatement[3952-4000]"
    }, {
      "left" : "baseByVal = toCharacterKey(base);",
      "right" : "baseByVal = toCharacterKey(base);",
      "info" : "ExpressionStatement[4951-4984]:ExpressionStatement[4035-4068]"
    }, {
      "left" : "full = loadEntities(\"entities-full.properties\");",
      "right" : "full = loadEntities(\"entities-full.properties\");",
      "info" : "ExpressionStatement[4993-5041]:ExpressionStatement[4077-4125]"
    }, {
      "left" : "fullByVal = toCharacterKey(full);",
      "right" : "fullByVal = toCharacterKey(full);",
      "info" : "ExpressionStatement[5077-5110]:ExpressionStatement[4161-4194]"
    }, {
      "left" : "for (Object[] entity : xhtmlArray)",
      "right" : "for (Object[] entity : xhtmlArray)",
      "info" : "EnhancedForStatement[5120-5305]:EnhancedForStatement[4204-4389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5155-5305]:Block[4239-4389]"
    }, {
      "left" : "Character c = Character.valueOf((char) ((Integer) entity[1]).intValue());",
      "right" : "Character c = Character.valueOf((char) ((Integer) entity[1]).intValue());",
      "info" : "VariableDeclarationStatement[5169-5242]:VariableDeclarationStatement[4253-4326]"
    }, {
      "left" : "xhtmlByVal.put(c, ((String) entity[0]));",
      "right" : "xhtmlByVal.put(c, ((String) entity[0]));",
      "info" : "ExpressionStatement[5255-5295]:ExpressionStatement[4339-4379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5385-6114]:Block[4469-5198]"
    }, {
      "left" : "Properties properties = new Properties();",
      "right" : "Properties properties = new Properties();",
      "info" : "VariableDeclarationStatement[5395-5436]:VariableDeclarationStatement[4479-4520]"
    }, {
      "left" : "Map<String, Character> entities = new HashMap<String, Character>();",
      "right" : "Map<String, Character> entities = new HashMap<String, Character>();",
      "info" : "VariableDeclarationStatement[5445-5512]:VariableDeclarationStatement[4529-4596]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5521-5826]:TryStatement[4605-4910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5525-5668]:Block[4609-4752]"
    }, {
      "left" : "InputStream in = Entities.class.getResourceAsStream(filename);",
      "right" : "InputStream in = Entities.class.getResourceAsStream(filename);",
      "info" : "VariableDeclarationStatement[5539-5601]:VariableDeclarationStatement[4623-4685]"
    }, {
      "left" : "properties.load(in);",
      "right" : "properties.load(in);",
      "info" : "ExpressionStatement[5614-5634]:ExpressionStatement[4698-4718]"
    }, {
      "left" : "in.close();",
      "right" : "in.close();",
      "info" : "ExpressionStatement[5647-5658]:ExpressionStatement[4731-4742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5691-5826]:Block[4775-4910]"
    }, {
      "left" : "throw new MissingResourceException(\"Error loading entities resource: \" + e.getMessage(), \"Entities\", filename);",
      "right" : "throw new MissingResourceException(\"Error loading entities resource: \" + e.getMessage(), \"Entities\", filename);",
      "info" : "ThrowStatement[5705-5816]:ThrowStatement[4789-4900]"
    }, {
      "left" : "for (Map.Entry entry: properties.entrySet())",
      "right" : "for (Map.Entry entry: properties.entrySet())",
      "info" : "EnhancedForStatement[5836-6083]:EnhancedForStatement[4920-5167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5881-6083]:Block[4965-5167]"
    }, {
      "left" : "Character val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));",
      "right" : "Character val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));",
      "info" : "VariableDeclarationStatement[5895-5985]:VariableDeclarationStatement[4979-5069]"
    }, {
      "left" : "String name = (String) entry.getKey();",
      "right" : "String name = (String) entry.getKey();",
      "info" : "VariableDeclarationStatement[5998-6036]:VariableDeclarationStatement[5082-5120]"
    }, {
      "left" : "entities.put(name, val);",
      "right" : "entities.put(name, val);",
      "info" : "ExpressionStatement[6049-6073]:ExpressionStatement[5133-5157]"
    }, {
      "left" : "return entities;",
      "right" : "return entities;",
      "info" : "ReturnStatement[6092-6108]:ReturnStatement[5176-5192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6203-6767]:Block[5287-5851]"
    }, {
      "left" : "Map<Character, String> outMap = new HashMap<Character, String>();",
      "right" : "Map<Character, String> outMap = new HashMap<Character, String>();",
      "info" : "VariableDeclarationStatement[6213-6278]:VariableDeclarationStatement[5297-5362]"
    }, {
      "left" : "for (Map.Entry<String, Character> entry: inMap.entrySet())",
      "right" : "for (Map.Entry<String, Character> entry: inMap.entrySet())",
      "info" : "EnhancedForStatement[6287-6738]:EnhancedForStatement[5371-5822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6346-6738]:Block[5430-5822]"
    }, {
      "left" : "Character character = entry.getValue();",
      "right" : "Character character = entry.getValue();",
      "info" : "VariableDeclarationStatement[6360-6399]:VariableDeclarationStatement[5444-5483]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[6412-6441]:VariableDeclarationStatement[5496-5525]"
    }, {
      "left" : "if (outMap.containsKey(character))",
      "right" : "if (outMap.containsKey(character))",
      "info" : "IfStatement[6455-6728]:IfStatement[5539-5812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6490-6662]:Block[5574-5746]"
    }, {
      "left" : "if (name.toLowerCase().equals(name))",
      "right" : "if (name.toLowerCase().equals(name))",
      "info" : "IfStatement[6563-6648]:IfStatement[5647-5732]"
    }, {
      "left" : "outMap.put(character, name);",
      "right" : "outMap.put(character, name);",
      "info" : "ExpressionStatement[6620-6648]:ExpressionStatement[5704-5732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6668-6728]:Block[5752-5812]"
    }, {
      "left" : "outMap.put(character, name);",
      "right" : "outMap.put(character, name);",
      "info" : "ExpressionStatement[6686-6714]:ExpressionStatement[5770-5798]"
    }, {
      "left" : "return outMap;",
      "right" : "return outMap;",
      "info" : "ReturnStatement[6747-6761]:ReturnStatement[5831-5845]"
    } ]
  },
  "interFileMappings" : { }
}