{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "WebMvcAutoConfigurationTests",
      "right" : "WebMvcAutoConfigurationTests",
      "info" : "TypeDeclaration[3570-19450]:TypeDeclaration[3623-14977]"
    }, {
      "left" : "private static final MockEmbeddedServletContainerFactory containerFactory = new MockEmbeddedServletContainerFactory();",
      "right" : "private static final MockEmbeddedServletContainerFactory containerFactory = new MockEmbeddedServletContainerFactory();",
      "info" : "FieldDeclaration[3744-3862]:FieldDeclaration[3824-3942]"
    }, {
      "left" : "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();",
      "right" : "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();",
      "info" : "FieldDeclaration[3865-3931]:FieldDeclaration[3945-4011]"
    }, {
      "left" : "private AnnotationConfigEmbeddedWebApplicationContext context;",
      "right" : "private AnnotationConfigEmbeddedWebApplicationContext context;",
      "info" : "FieldDeclaration[3934-3996]:FieldDeclaration[4014-4076]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[3999-4090]:MethodDeclaration[4079-4170]"
    }, {
      "left" : "public void handerAdaptersCreated() throws Exception",
      "right" : "public void handerAdaptersCreated() throws Exception",
      "info" : "MethodDeclaration[4093-4789]:MethodDeclaration[4173-4615]"
    }, {
      "left" : "public void handerMappingsCreated() throws Exception",
      "right" : "public void handerMappingsCreated() throws Exception",
      "info" : "MethodDeclaration[4792-5202]:MethodDeclaration[4618-4774]"
    }, {
      "left" : "public void resourceHandlerMapping() throws Exception",
      "right" : "public void resourceHandlerMapping() throws Exception",
      "info" : "MethodDeclaration[5205-5883]:MethodDeclaration[4777-5201]"
    }, {
      "left" : "public void resourceHandlerMappingOverrideWebjars() throws Exception",
      "right" : "public void resourceHandlerMappingOverrideWebjars() throws Exception",
      "info" : "MethodDeclaration[5886-6509]:MethodDeclaration[5204-5571]"
    }, {
      "left" : "public void resourceHandlerMappingOverrideAll() throws Exception",
      "right" : "public void resourceHandlerMappingOverrideAll() throws Exception",
      "info" : "MethodDeclaration[6512-7124]:MethodDeclaration[5574-5927]"
    }, {
      "left" : "public void resourceHandlerMappingDisabled() throws Exception",
      "right" : "public void resourceHandlerMappingDisabled() throws Exception",
      "info" : "MethodDeclaration[7127-7691]:MethodDeclaration[5930-6181]"
    }, {
      "left" : "public void noLocaleResolver() throws Exception",
      "right" : "public void noLocaleResolver() throws Exception",
      "info" : "MethodDeclaration[7694-8146]:MethodDeclaration[6184-6376]"
    }, {
      "left" : "public void overrideLocale() throws Exception",
      "right" : "public void overrideLocale() throws Exception",
      "info" : "MethodDeclaration[8149-9108]:MethodDeclaration[6379-7004]"
    }, {
      "left" : "public void noDateFormat() throws Exception",
      "right" : "public void noDateFormat() throws Exception",
      "info" : "MethodDeclaration[9111-9729]:MethodDeclaration[7007-7365]"
    }, {
      "left" : "public void overrideDateFormat() throws Exception",
      "right" : "public void overrideDateFormat() throws Exception",
      "info" : "MethodDeclaration[9732-10425]:MethodDeclaration[7368-7717]"
    }, {
      "left" : "public void noMessageCodesResolver() throws Exception",
      "right" : "public void noMessageCodesResolver() throws Exception",
      "info" : "MethodDeclaration[10428-10886]:MethodDeclaration[7720-7918]"
    }, {
      "left" : "public void overrideMessageCodesFormat() throws Exception",
      "right" : "public void overrideMessageCodesFormat() throws Exception",
      "info" : "MethodDeclaration[10889-11471]:MethodDeclaration[7921-8186]"
    }, {
      "left" : "protected Map<String, List<Resource>> getFaviconMappingLocations()\n\t\t\tthrows IllegalAccessException",
      "right" : "protected Map<String, List<Resource>> getFaviconMappingLocations()\n\t\t\tthrows IllegalAccessException",
      "info" : "MethodDeclaration[11474-11713]:MethodDeclaration[8189-8428]"
    }, {
      "left" : "protected Map<String, List<Resource>> getResourceMappingLocations()\n\t\t\tthrows IllegalAccessException",
      "right" : "protected Map<String, List<Resource>> getResourceMappingLocations()\n\t\t\tthrows IllegalAccessException",
      "info" : "MethodDeclaration[11716-11957]:MethodDeclaration[8431-8672]"
    }, {
      "left" : "protected Map<String, List<Resource>> getMappingLocations(HandlerMapping mapping)\n\t\t\tthrows IllegalAccessException",
      "right" : "protected Map<String, List<Resource>> getMappingLocations(HandlerMapping mapping)\n\t\t\tthrows IllegalAccessException",
      "info" : "MethodDeclaration[11960-12741]:MethodDeclaration[8675-9456]"
    }, {
      "left" : "public void ignoreDefaultModelOnRedirectIsTrue() throws Exception",
      "right" : "public void ignoreDefaultModelOnRedirectIsTrue() throws Exception",
      "info" : "MethodDeclaration[12744-13286]:MethodDeclaration[9459-9747]"
    }, {
      "left" : "public void overrideIgnoreDefaultModelOnRedirect() throws Exception",
      "right" : "public void overrideIgnoreDefaultModelOnRedirect() throws Exception",
      "info" : "MethodDeclaration[13289-13944]:MethodDeclaration[9750-10405]"
    }, {
      "left" : "public void customViewResolver() throws Exception",
      "right" : "public void customViewResolver() throws Exception",
      "info" : "MethodDeclaration[13947-14388]:MethodDeclaration[10408-10589]"
    }, {
      "left" : "public void customContentNegotiatingViewResolver() throws Exception",
      "right" : "public void customContentNegotiatingViewResolver() throws Exception",
      "info" : "MethodDeclaration[14391-15023]:MethodDeclaration[10592-10964]"
    }, {
      "left" : "public void faviconMapping() throws IllegalAccessException",
      "right" : "public void faviconMapping() throws IllegalAccessException",
      "info" : "MethodDeclaration[15026-15786]:MethodDeclaration[10967-11473]"
    }, {
      "left" : "public void faviconMappingDisabled() throws IllegalAccessException",
      "right" : "public void faviconMappingDisabled() throws IllegalAccessException",
      "info" : "MethodDeclaration[15789-16491]:MethodDeclaration[11476-11865]"
    }, {
      "left" : "public void defaultAsyncRequestTimeout() throws Exception",
      "right" : "public void defaultAsyncRequestTimeout() throws Exception",
      "info" : "MethodDeclaration[16494-17007]:MethodDeclaration[11868-12127]"
    }, {
      "left" : "public void customAsyncRequestTimeout() throws Exception",
      "right" : "private void load(String... environment)",
      "info" : "MethodDeclaration[17010-17659]:MethodDeclaration[13113-13185]"
    }, {
      "left" : "ViewConfig",
      "right" : "ViewConfig",
      "info" : "TypeDeclaration[17662-18039]:TypeDeclaration[13189-13566]"
    }, {
      "left" : "public View jsonView()",
      "right" : "public View jsonView()",
      "info" : "MethodDeclaration[17717-18035]:MethodDeclaration[13244-13562]"
    }, {
      "left" : "protected void renderMergedOutputModel(Map<String, Object> model,\n\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\t\t\t\tthrows Exception",
      "right" : "protected void renderMergedOutputModel(Map<String, Object> model,\n\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\t\t\t\tthrows Exception",
      "info" : "MethodDeclaration[17786-18025]:MethodDeclaration[13313-13552]"
    }, {
      "left" : "WebJars",
      "right" : "WebJars",
      "info" : "TypeDeclaration[18042-18306]:TypeDeclaration[13569-13833]"
    }, {
      "left" : "public void addResourceHandlers(ResourceHandlerRegistry registry)",
      "right" : "public void addResourceHandlers(ResourceHandlerRegistry registry)",
      "info" : "MethodDeclaration[18126-18302]:MethodDeclaration[13653-13829]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "TypeDeclaration[18309-18564]:TypeDeclaration[13836-14091]"
    }, {
      "left" : "public void addResourceHandlers(ResourceHandlerRegistry registry)",
      "right" : "public void addResourceHandlers(ResourceHandlerRegistry registry)",
      "info" : "MethodDeclaration[18398-18560]:MethodDeclaration[13925-14087]"
    }, {
      "left" : "Config",
      "right" : "Config",
      "info" : "TypeDeclaration[18567-18917]:TypeDeclaration[14094-14444]"
    }, {
      "left" : "public EmbeddedServletContainerFactory containerFactory()",
      "right" : "public EmbeddedServletContainerFactory containerFactory()",
      "info" : "MethodDeclaration[18615-18714]:MethodDeclaration[14142-14241]"
    }, {
      "left" : "public EmbeddedServletContainerCustomizerBeanPostProcessor embeddedServletContainerCustomizerBeanPostProcessor()",
      "right" : "public EmbeddedServletContainerCustomizerBeanPostProcessor embeddedServletContainerCustomizerBeanPostProcessor()",
      "info" : "MethodDeclaration[18718-18913]:MethodDeclaration[14245-14440]"
    }, {
      "left" : "CustomViewResolver",
      "right" : "CustomViewResolver",
      "info" : "TypeDeclaration[18920-19064]:TypeDeclaration[14447-14591]"
    }, {
      "left" : "public ViewResolver viewResolver()",
      "right" : "public ViewResolver viewResolver()",
      "info" : "MethodDeclaration[18980-19060]:MethodDeclaration[14507-14587]"
    }, {
      "left" : "CustomContentNegotiatingViewResolver",
      "right" : "CustomContentNegotiatingViewResolver",
      "info" : "TypeDeclaration[19067-19265]:TypeDeclaration[14594-14792]"
    }, {
      "left" : "public ContentNegotiatingViewResolver myViewResolver()",
      "right" : "public ContentNegotiatingViewResolver myViewResolver()",
      "info" : "MethodDeclaration[19145-19261]:MethodDeclaration[14672-14788]"
    }, {
      "left" : "MyViewResolver",
      "right" : "MyViewResolver",
      "info" : "TypeDeclaration[19268-19447]:TypeDeclaration[14795-14974]"
    }, {
      "left" : "public View resolveViewName(String viewName, Locale locale) throws Exception",
      "right" : "public View resolveViewName(String viewName, Locale locale) throws Exception",
      "info" : "MethodDeclaration[19333-19443]:MethodDeclaration[14860-14970]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3698-3704]:Modifier[3778-3784]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3705-3710]:TYPE_DECLARATION_KIND[3785-3790]"
    }, {
      "left" : "WebMvcAutoConfigurationTests",
      "right" : "WebMvcAutoConfigurationTests",
      "info" : "SimpleName[3711-3739]:SimpleName[3791-3819]"
    }, {
      "left" : "@After",
      "right" : "@After",
      "info" : "MarkerAnnotation[3999-4005]:MarkerAnnotation[4079-4085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4007-4013]:Modifier[4087-4093]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4014-4018]:PrimitiveType[4094-4098]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[4019-4024]:SimpleName[4099-4104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4027-4090]:Block[4107-4170]"
    }, {
      "left" : "if (this.context != null)",
      "right" : "if (this.context != null)",
      "info" : "IfStatement[4031-4087]:IfStatement[4111-4167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4087]:Block[4137-4167]"
    }, {
      "left" : "this.context.close();",
      "right" : "this.context.close();",
      "info" : "ExpressionStatement[4062-4083]:ExpressionStatement[4142-4163]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[4093-4098]:MarkerAnnotation[4173-4178]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4100-4106]:Modifier[4180-4186]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4107-4111]:PrimitiveType[4187-4191]"
    }, {
      "left" : "handerAdaptersCreated",
      "right" : "handerAdaptersCreated",
      "info" : "SimpleName[4112-4133]:SimpleName[4192-4213]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4143-4152]:SimpleType[4223-4232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4153-4789]:Block[4233-4615]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[4162-4169]:SimpleName[4237-4241]"
    }, {
      "left" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load();",
      "info" : "ExpressionStatement[4227-4392]:ExpressionStatement[4237-4244]"
    }, {
      "left" : "assertEquals(3, this.context.getBeanNamesForType(HandlerAdapter.class).length);",
      "right" : "assertEquals(3, this.context.getBeanNamesForType(HandlerAdapter.class).length);",
      "info" : "ExpressionStatement[4421-4500]:ExpressionStatement[4247-4326]"
    }, {
      "left" : "assertFalse(this.context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t.getMessageConverters().isEmpty());",
      "right" : "assertFalse(this.context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t.getMessageConverters().isEmpty());",
      "info" : "ExpressionStatement[4503-4611]:ExpressionStatement[4329-4437]"
    }, {
      "left" : "assertEquals(this.context.getBean(HttpMessageConverters.class).getConverters(),\n\t\t\t\tthis.context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t\t.getMessageConverters());",
      "right" : "assertEquals(this.context.getBean(HttpMessageConverters.class).getConverters(),\n\t\t\t\tthis.context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t\t.getMessageConverters());",
      "info" : "ExpressionStatement[4614-4786]:ExpressionStatement[4440-4612]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[4792-4797]:MarkerAnnotation[4618-4623]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4799-4805]:Modifier[4625-4631]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4806-4810]:PrimitiveType[4791-4795]"
    }, {
      "left" : "handerMappingsCreated",
      "right" : "handerMappingsCreated",
      "info" : "SimpleName[4811-4832]:SimpleName[4637-4658]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[4842-4851]:SimpleType[4668-4677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4852-5202]:Block[4678-4774]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[4861-4868]:SimpleName[4682-4686]"
    }, {
      "left" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load();",
      "info" : "ExpressionStatement[4926-5091]:ExpressionStatement[4682-4689]"
    }, {
      "left" : "assertEquals(6, this.context.getBeanNamesForType(HandlerMapping.class).length);",
      "right" : "assertEquals(6, this.context.getBeanNamesForType(HandlerMapping.class).length);",
      "info" : "ExpressionStatement[5120-5199]:ExpressionStatement[4692-4771]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[5205-5210]:MarkerAnnotation[4777-4782]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5212-5218]:Modifier[4784-4790]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5219-5223]:PrimitiveType[5218-5222]"
    }, {
      "left" : "resourceHandlerMapping",
      "right" : "resourceHandlerMapping",
      "info" : "SimpleName[5224-5246]:SimpleName[4796-4818]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[5256-5265]:SimpleType[4828-4837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5266-5883]:Block[4838-5201]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[5275-5282]:SimpleName[4842-4846]"
    }, {
      "left" : "Config",
      "right" : "Map",
      "info" : "SimpleName[5362-5368]:SimpleName[4852-4855]"
    }, {
      "left" : "WebMvcAutoConfiguration",
      "right" : "String",
      "info" : "SimpleType[5376-5399]:SimpleType[4856-4862]"
    }, {
      "left" : "HttpMessageConvertersAutoConfiguration",
      "right" : "List",
      "info" : "SimpleType[5411-5449]:SimpleType[4864-4868]"
    }, {
      "left" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "right" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "info" : "VariableDeclarationStatement[5534-5611]:VariableDeclarationStatement[4852-4929]"
    }, {
      "left" : "Map",
      "right" : "Map",
      "info" : "SimpleType[5534-5537]:SimpleType[5307-5310]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5538-5544]:SimpleType[5311-5317]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[5546-5550]:SimpleType[5319-5323]"
    }, {
      "left" : "Resource",
      "right" : "Resource",
      "info" : "SimpleType[5551-5559]:SimpleType[5324-5332]"
    }, {
      "left" : "mappingLocations",
      "right" : "mappingLocations",
      "info" : "SimpleName[5562-5578]:SimpleName[5398-5414]"
    }, {
      "left" : "getResourceMappingLocations",
      "right" : "getResourceMappingLocations",
      "info" : "SimpleName[5581-5608]:SimpleName[5354-5381]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/**\").size(), equalTo(5));",
      "right" : "assertThat(mappingLocations.get(\"/**\").size(), equalTo(5));",
      "info" : "ExpressionStatement[5614-5673]:ExpressionStatement[4932-4991]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/webjars/**\").size(), equalTo(1));",
      "right" : "assertThat(mappingLocations.get(\"/webjars/**\").size(), equalTo(1));",
      "info" : "ExpressionStatement[5676-5743]:ExpressionStatement[4994-5061]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[5723-5727]:SimpleName[5434-5438]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/webjars/**\").get(0),\n\t\t\t\tequalTo((Resource) new ClassPathResource(\"/META-INF/resources/webjars/\")));",
      "right" : "assertThat(mappingLocations.get(\"/webjars/**\").get(0),\n\t\t\t\tequalTo((Resource) new ClassPathResource(\"/META-INF/resources/webjars/\")));",
      "info" : "ExpressionStatement[5746-5880]:ExpressionStatement[5064-5198]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[5886-5891]:MarkerAnnotation[12130-12135]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[5887-5891]:SimpleName[5575-5579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5893-5899]:Modifier[5582-5588]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5900-5904]:PrimitiveType[5589-5593]"
    }, {
      "left" : "resourceHandlerMappingOverrideWebjars",
      "right" : "resourceHandlerMappingOverrideWebjars",
      "info" : "SimpleName[5905-5942]:SimpleName[5223-5260]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[5952-5961]:SimpleType[5637-5646]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[5952-5961]:SimpleType[12184-12193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5962-6509]:Block[5280-5571]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[5971-5978]:SimpleName[5284-5288]"
    }, {
      "left" : "this.context.register(WebJars.class, Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load(WebJars.class);",
      "info" : "ExpressionStatement[6036-6216]:ExpressionStatement[5284-5304]"
    }, {
      "left" : "WebJars.class",
      "right" : "WebJars.class",
      "info" : "TypeLiteral[6058-6071]:TypeLiteral[5289-5302]"
    }, {
      "left" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "right" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "info" : "VariableDeclarationStatement[6245-6322]:VariableDeclarationStatement[5307-5384]"
    }, {
      "left" : "Map",
      "right" : "Map",
      "info" : "SimpleType[6245-6248]:SimpleType[5679-5682]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6249-6255]:SimpleType[5683-5689]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[6257-6261]:SimpleType[5691-5695]"
    }, {
      "left" : "Resource",
      "right" : "Resource",
      "info" : "SimpleType[6262-6270]:SimpleType[5696-5704]"
    }, {
      "left" : "mappingLocations",
      "right" : "mappingLocations",
      "info" : "SimpleName[6273-6289]:SimpleName[5707-5723]"
    }, {
      "left" : "getResourceMappingLocations",
      "right" : "getResourceMappingLocations",
      "info" : "SimpleName[6292-6319]:SimpleName[5726-5753]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/webjars/**\").size(), equalTo(1));",
      "right" : "assertThat(mappingLocations.get(\"/webjars/**\").size(), equalTo(1));",
      "info" : "ExpressionStatement[6325-6392]:ExpressionStatement[5387-5454]"
    }, {
      "left" : "mappingLocations",
      "right" : "mappingLocations",
      "info" : "SimpleName[6336-6352]:SimpleName[5335-5351]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[6372-6376]:SimpleName[5041-5045]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/webjars/**\").get(0),\n\t\t\t\tequalTo((Resource) new ClassPathResource(\"/foo/\")));",
      "right" : "assertThat(mappingLocations.get(\"/webjars/**\").get(0),\n\t\t\t\tequalTo((Resource) new ClassPathResource(\"/foo/\")));",
      "info" : "ExpressionStatement[6395-6506]:ExpressionStatement[5457-5568]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[6512-6517]:MarkerAnnotation[5574-5579]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[6513-6517]:SimpleName[6185-6189]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6519-6525]:Modifier[6191-6197]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6526-6530]:PrimitiveType[6198-6202]"
    }, {
      "left" : "resourceHandlerMappingOverrideAll",
      "right" : "resourceHandlerMappingOverrideAll",
      "info" : "SimpleName[6531-6564]:SimpleName[5594-5627]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[6574-6583]:SimpleType[5637-5646]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[6574-6583]:SimpleType[6229-6238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6584-7124]:Block[5647-5927]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[6593-6600]:SimpleName[5651-5655]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AllResources",
      "info" : "SimpleName[6607-6652]:SimpleName[5656-5668]"
    }, {
      "left" : "this.context.register(AllResources.class, Config.class,\n\t\t\t\tWebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load(AllResources.class);",
      "info" : "ExpressionStatement[6658-6847]:ExpressionStatement[5651-5676]"
    }, {
      "left" : "AllResources.class",
      "right" : "AllResources.class",
      "info" : "TypeLiteral[6680-6698]:TypeLiteral[5656-5674]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleType[6680-6692]:SimpleType[6248-6260]"
    }, {
      "left" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "right" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "info" : "VariableDeclarationStatement[6876-6953]:VariableDeclarationStatement[5679-5756]"
    }, {
      "left" : "Map",
      "right" : "Map",
      "info" : "SimpleType[6876-6879]:SimpleType[6050-6053]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6880-6886]:SimpleType[6054-6060]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[6888-6892]:SimpleType[6062-6066]"
    }, {
      "left" : "Resource",
      "right" : "Resource",
      "info" : "SimpleType[6893-6901]:SimpleType[6067-6075]"
    }, {
      "left" : "mappingLocations",
      "right" : "mappingLocations",
      "info" : "SimpleName[6904-6920]:SimpleName[6078-6094]"
    }, {
      "left" : "getResourceMappingLocations",
      "right" : "getResourceMappingLocations",
      "info" : "SimpleName[6923-6950]:SimpleName[6097-6124]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/**\").size(), equalTo(1));",
      "right" : "assertThat(mappingLocations.get(\"/**\").size(), equalTo(1));",
      "info" : "ExpressionStatement[6956-7015]:ExpressionStatement[5759-5818]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/**\").get(0),\n\t\t\t\tequalTo((Resource) new ClassPathResource(\"/foo/\")));",
      "right" : "assertThat(mappingLocations.get(\"/**\").get(0),\n\t\t\t\tequalTo((Resource) new ClassPathResource(\"/foo/\")));",
      "info" : "ExpressionStatement[7018-7121]:ExpressionStatement[5821-5924]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[7127-7132]:MarkerAnnotation[5930-5935]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[7128-7132]:SimpleName[6380-6384]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7134-7140]:Modifier[6386-6392]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7141-7145]:PrimitiveType[6393-6397]"
    }, {
      "left" : "resourceHandlerMappingDisabled",
      "right" : "resourceHandlerMappingDisabled",
      "info" : "SimpleName[7146-7176]:SimpleName[5949-5979]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[7186-7195]:SimpleType[5989-5998]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[7186-7195]:SimpleType[6422-6431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7196-7691]:Block[5999-6181]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[7205-7212]:SimpleName[6003-6007]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AnnotationConfigEmbeddedWebApplicationContext",
      "info" : "SimpleType[7219-7264]:SimpleType[12583-12628]"
    }, {
      "left" : "EnvironmentTestUtils.addEnvironment(this.context,\n\t\t\t\t\"spring.resources.add-mappings:false\");",
      "right" : "load(\"spring.resources.add-mappings:false\");",
      "info" : "ExpressionStatement[7270-7363]:ExpressionStatement[6003-6047]"
    }, {
      "left" : "EnvironmentTestUtils",
      "right" : "EnvironmentTestUtils",
      "info" : "METHOD_INVOCATION_RECEIVER[7270-7290]:METHOD_INVOCATION_RECEIVER[12634-12654]"
    }, {
      "left" : "addEnvironment",
      "right" : "addEnvironment",
      "info" : "SimpleName[7291-7305]:SimpleName[12655-12669]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[7306-7310]:ThisExpression[7123-7127]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[7311-7318]:SimpleName[7128-7135]"
    }, {
      "left" : "\"spring.resources.add-mappings:false\"",
      "right" : "\"spring.resources.add-mappings:false\"",
      "info" : "StringLiteral[7324-7361]:StringLiteral[6008-6045]"
    }, {
      "left" : "register",
      "right" : "register",
      "info" : "SimpleName[7379-7387]:SimpleName[13013-13021]"
    }, {
      "left" : "Config",
      "right" : "Map",
      "info" : "SimpleType[7388-7394]:SimpleType[6050-6053]"
    }, {
      "left" : "WebMvcAutoConfiguration",
      "right" : "String",
      "info" : "SimpleType[7402-7425]:SimpleType[6054-6060]"
    }, {
      "left" : "HttpMessageConvertersAutoConfiguration",
      "right" : "List",
      "info" : "SimpleType[7437-7475]:SimpleType[6062-6066]"
    }, {
      "left" : "PropertyPlaceholderAutoConfiguration",
      "right" : "Resource",
      "info" : "SimpleType[7487-7523]:SimpleType[6067-6075]"
    }, {
      "left" : "refresh",
      "right" : "refresh",
      "info" : "SimpleName[7547-7554]:SimpleName[13097-13104]"
    }, {
      "left" : "Map",
      "right" : "Map",
      "info" : "SimpleType[7560-7563]:SimpleType[4852-4855]"
    }, {
      "left" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "right" : "Map<String, List<Resource>> mappingLocations = getResourceMappingLocations();",
      "info" : "VariableDeclarationStatement[7560-7637]:VariableDeclarationStatement[6050-6127]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7564-7570]:SimpleType[4856-4862]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[7572-7576]:SimpleType[4864-4868]"
    }, {
      "left" : "Resource",
      "right" : "Resource",
      "info" : "SimpleType[7577-7585]:SimpleType[4869-4877]"
    }, {
      "left" : "mappingLocations",
      "right" : "mappingLocations",
      "info" : "SimpleName[7588-7604]:SimpleName[4880-4896]"
    }, {
      "left" : "getResourceMappingLocations",
      "right" : "getResourceMappingLocations",
      "info" : "SimpleName[7607-7634]:SimpleName[4899-4926]"
    }, {
      "left" : "assertThat(mappingLocations.size(), equalTo(0));",
      "right" : "assertThat(mappingLocations.size(), equalTo(0));",
      "info" : "ExpressionStatement[7640-7688]:ExpressionStatement[6130-6178]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[7694-7699]:MarkerAnnotation[6184-6189]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[7695-7699]:SimpleName[7369-7373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7701-7707]:Modifier[7375-7381]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7708-7712]:PrimitiveType[7382-7386]"
    }, {
      "left" : "noLocaleResolver",
      "right" : "noLocaleResolver",
      "info" : "SimpleName[7713-7729]:SimpleName[6203-6219]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[7739-7748]:SimpleType[6229-6238]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[7739-7748]:SimpleType[7415-7424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7749-8146]:Block[6239-6376]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[7753-7757]:ThisExpression[7526-7530]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[7758-7765]:SimpleName[7531-7538]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "load",
      "info" : "SimpleName[7772-7817]:SimpleName[6243-6247]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AllResources",
      "info" : "SimpleType[7772-7817]:SimpleType[6248-6260]"
    }, {
      "left" : "this.context.register(AllResources.class, Config.class,\n\t\t\t\tWebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load(AllResources.class);",
      "info" : "ExpressionStatement[7823-8012]:ExpressionStatement[6243-6268]"
    }, {
      "left" : "AllResources.class",
      "right" : "AllResources.class",
      "info" : "TypeLiteral[7845-7863]:TypeLiteral[6248-6266]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleType[7845-7857]:SimpleType[7434-7446]"
    }, {
      "left" : "this.thrown.expect(NoSuchBeanDefinitionException.class);",
      "right" : "this.thrown.expect(NoSuchBeanDefinitionException.class);",
      "info" : "ExpressionStatement[8041-8097]:ExpressionStatement[6271-6327]"
    }, {
      "left" : "this.context.getBean(LocaleResolver.class);",
      "right" : "this.context.getBean(LocaleResolver.class);",
      "info" : "ExpressionStatement[8100-8143]:ExpressionStatement[6330-6373]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[8149-8154]:MarkerAnnotation[6379-6384]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[8150-8154]:SimpleName[7721-7725]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8156-8162]:Modifier[7727-7733]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8163-8167]:PrimitiveType[7734-7738]"
    }, {
      "left" : "overrideLocale",
      "right" : "overrideLocale",
      "info" : "SimpleName[8168-8182]:SimpleName[6398-6412]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[8192-8201]:SimpleType[6422-6431]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[8192-8201]:SimpleType[7771-7780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8202-9108]:Block[6432-7004]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AllResources",
      "info" : "SimpleName[8225-8270]:SimpleName[6441-6453]"
    }, {
      "left" : "EnvironmentTestUtils",
      "right" : "load",
      "info" : "SimpleName[8298-8318]:SimpleName[6436-6440]"
    }, {
      "left" : "EnvironmentTestUtils.addEnvironment(this.context, \"spring.mvc.locale:en_UK\");",
      "right" : "load(AllResources.class, \"spring.mvc.locale:en_UK\");",
      "info" : "ExpressionStatement[8298-8375]:ExpressionStatement[6436-6488]"
    }, {
      "left" : "\"spring.mvc.locale:en_UK\"",
      "right" : "\"spring.mvc.locale:en_UK\"",
      "info" : "StringLiteral[8348-8373]:StringLiteral[6461-6486]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleType[8400-8412]:SimpleType[7995-8007]"
    }, {
      "left" : "MockHttpServletRequest request = new MockHttpServletRequest();",
      "right" : "MockHttpServletRequest request = new MockHttpServletRequest();",
      "info" : "VariableDeclarationStatement[8644-8706]:VariableDeclarationStatement[6540-6602]"
    }, {
      "left" : "request.addPreferredLocale(StringUtils.parseLocaleString(\"nl_NL\"));",
      "right" : "request.addPreferredLocale(StringUtils.parseLocaleString(\"nl_NL\"));",
      "info" : "ExpressionStatement[8709-8776]:ExpressionStatement[6605-6672]"
    }, {
      "left" : "LocaleResolver localeResolver = this.context.getBean(LocaleResolver.class);",
      "right" : "LocaleResolver localeResolver = this.context.getBean(LocaleResolver.class);",
      "info" : "VariableDeclarationStatement[8779-8854]:VariableDeclarationStatement[6675-6750]"
    }, {
      "left" : "Locale locale = localeResolver.resolveLocale(request);",
      "right" : "Locale locale = localeResolver.resolveLocale(request);",
      "info" : "VariableDeclarationStatement[8857-8911]:VariableDeclarationStatement[6753-6807]"
    }, {
      "left" : "assertThat(localeResolver, instanceOf(FixedLocaleResolver.class));",
      "right" : "assertThat(localeResolver, instanceOf(FixedLocaleResolver.class));",
      "info" : "ExpressionStatement[8914-8980]:ExpressionStatement[6810-6876]"
    }, {
      "left" : "assertThat(locale.toString(), equalTo(\"en_UK\"));",
      "right" : "assertThat(locale.toString(), equalTo(\"en_UK\"));",
      "info" : "ExpressionStatement[9057-9105]:ExpressionStatement[6953-7001]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[9111-9116]:MarkerAnnotation[7007-7012]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[9112-9116]:SimpleName[7922-7926]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9118-9124]:Modifier[7928-7934]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9125-9129]:PrimitiveType[7935-7939]"
    }, {
      "left" : "noDateFormat",
      "right" : "noDateFormat",
      "info" : "SimpleName[9130-9142]:SimpleName[7026-7038]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[9152-9161]:SimpleType[7048-7057]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[9152-9161]:SimpleType[7976-7985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9162-9729]:Block[7058-7365]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[9171-9178]:SimpleName[7062-7066]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AllResources",
      "info" : "SimpleName[9185-9230]:SimpleName[7067-7079]"
    }, {
      "left" : "this.context.register(AllResources.class, Config.class,\n\t\t\t\tWebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load(AllResources.class);",
      "info" : "ExpressionStatement[9236-9425]:ExpressionStatement[7062-7087]"
    }, {
      "left" : "AllResources.class",
      "right" : "AllResources.class",
      "info" : "TypeLiteral[9258-9276]:TypeLiteral[7067-7085]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleType[9258-9270]:SimpleType[7790-7802]"
    }, {
      "left" : "FormattingConversionService cs = this.context\n\t\t\t\t.getBean(FormattingConversionService.class);",
      "right" : "FormattingConversionService cs = this.context\n\t\t\t\t.getBean(FormattingConversionService.class);",
      "info" : "VariableDeclarationStatement[9454-9548]:VariableDeclarationStatement[7090-7184]"
    }, {
      "left" : "getBean",
      "right" : "getBean",
      "info" : "SimpleName[9505-9512]:SimpleName[7544-7551]"
    }, {
      "left" : "Date date = new DateTime(1988, 6, 25, 20, 30).toDate();",
      "right" : "Date date = new DateTime(1988, 6, 25, 20, 30).toDate();",
      "info" : "VariableDeclarationStatement[9551-9606]:VariableDeclarationStatement[7187-7242]"
    }, {
      "left" : "assertThat(cs.convert(date, String.class), equalTo(date.toString()));",
      "right" : "assertThat(cs.convert(date, String.class), equalTo(date.toString()));",
      "info" : "ExpressionStatement[9657-9726]:ExpressionStatement[7293-7362]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[9732-9737]:MarkerAnnotation[7368-7373]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[9733-9737]:SimpleName[7008-7012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9739-9745]:Modifier[7014-7020]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9746-9750]:PrimitiveType[7021-7025]"
    }, {
      "left" : "overrideDateFormat",
      "right" : "overrideDateFormat",
      "info" : "SimpleName[9751-9769]:SimpleName[7387-7405]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[9779-9788]:SimpleType[7048-7057]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[9779-9788]:SimpleType[7415-7424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9789-10425]:Block[7425-7717]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AllResources",
      "info" : "SimpleName[9812-9857]:SimpleName[7434-7446]"
    }, {
      "left" : "EnvironmentTestUtils",
      "right" : "load",
      "info" : "SimpleName[9890-9910]:SimpleName[7429-7433]"
    }, {
      "left" : "EnvironmentTestUtils.addEnvironment(this.context,\n\t\t\t\t\"spring.mvc.dateFormat:dd*MM*yyyy\");",
      "right" : "load(AllResources.class, \"spring.mvc.dateFormat:dd*MM*yyyy\");",
      "info" : "ExpressionStatement[9890-9980]:ExpressionStatement[7429-7490]"
    }, {
      "left" : "\"spring.mvc.dateFormat:dd*MM*yyyy\"",
      "right" : "\"spring.mvc.dateFormat:dd*MM*yyyy\"",
      "info" : "StringLiteral[9944-9978]:StringLiteral[7454-7488]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleType[10005-10017]:SimpleType[7067-7079]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[10175-10179]:ThisExpression[9585-9589]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[10180-10187]:SimpleName[9590-9597]"
    }, {
      "left" : "FormattingConversionService cs = this.context\n\t\t\t\t.getBean(FormattingConversionService.class);",
      "right" : "FormattingConversionService cs = this.context\n\t\t\t\t.getBean(FormattingConversionService.class);",
      "info" : "VariableDeclarationStatement[10201-10295]:VariableDeclarationStatement[7493-7587]"
    }, {
      "left" : "getBean",
      "right" : "getBean",
      "info" : "SimpleName[10252-10259]:SimpleName[9603-9610]"
    }, {
      "left" : "Date date = new DateTime(1988, 6, 25, 20, 30).toDate();",
      "right" : "Date date = new DateTime(1988, 6, 25, 20, 30).toDate();",
      "info" : "VariableDeclarationStatement[10298-10353]:VariableDeclarationStatement[7590-7645]"
    }, {
      "left" : "assertThat(cs.convert(date, String.class), equalTo(\"25*06*1988\"));",
      "right" : "assertThat(cs.convert(date, String.class), equalTo(\"25*06*1988\"));",
      "info" : "ExpressionStatement[10356-10422]:ExpressionStatement[7648-7714]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[10428-10433]:MarkerAnnotation[7720-7725]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[10429-10433]:SimpleName[9460-9464]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10435-10441]:Modifier[9466-9472]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10442-10446]:PrimitiveType[9473-9477]"
    }, {
      "left" : "noMessageCodesResolver",
      "right" : "noMessageCodesResolver",
      "info" : "SimpleName[10447-10469]:SimpleName[7739-7761]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[10479-10488]:SimpleType[7771-7780]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[10479-10488]:SimpleType[9522-9531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10489-10886]:Block[7781-7918]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[10498-10505]:SimpleName[7785-7789]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AllResources",
      "info" : "SimpleType[10512-10557]:SimpleType[7790-7802]"
    }, {
      "left" : "this.context.register(AllResources.class, Config.class,\n\t\t\t\tWebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load(AllResources.class);",
      "info" : "ExpressionStatement[10563-10752]:ExpressionStatement[7785-7810]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleType[10585-10597]:SimpleType[6441-6453]"
    }, {
      "left" : "AllResources.class",
      "right" : "AllResources.class",
      "info" : "TypeLiteral[10585-10603]:TypeLiteral[7790-7808]"
    }, {
      "left" : "assertNull(this.context.getBean(WebMvcAutoConfigurationAdapter.class)\n\t\t\t\t.getMessageCodesResolver());",
      "right" : "assertNull(this.context.getBean(WebMvcAutoConfigurationAdapter.class)\n\t\t\t\t.getMessageCodesResolver());",
      "info" : "ExpressionStatement[10781-10883]:ExpressionStatement[7813-7915]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[10889-10894]:MarkerAnnotation[7921-7926]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[10890-10894]:SimpleName[10409-10413]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10896-10902]:Modifier[10415-10421]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10903-10907]:PrimitiveType[10422-10426]"
    }, {
      "left" : "overrideMessageCodesFormat",
      "right" : "overrideMessageCodesFormat",
      "info" : "SimpleName[10908-10934]:SimpleName[7940-7966]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[10944-10953]:SimpleType[7976-7985]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[10944-10953]:SimpleType[10455-10464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10954-11471]:Block[7986-8186]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "AllResources",
      "info" : "SimpleType[10977-11022]:SimpleType[7995-8007]"
    }, {
      "left" : "EnvironmentTestUtils",
      "right" : "load",
      "info" : "SimpleName[11028-11048]:SimpleName[7990-7994]"
    }, {
      "left" : "EnvironmentTestUtils.addEnvironment(this.context,\n\t\t\t\t\"spring.mvc.messageCodesResolverFormat:POSTFIX_ERROR_CODE\");",
      "right" : "load(AllResources.class, \"spring.mvc.messageCodesResolverFormat:POSTFIX_ERROR_CODE\");",
      "info" : "ExpressionStatement[11028-11142]:ExpressionStatement[7990-8075]"
    }, {
      "left" : "\"spring.mvc.messageCodesResolverFormat:POSTFIX_ERROR_CODE\"",
      "right" : "\"spring.mvc.messageCodesResolverFormat:POSTFIX_ERROR_CODE\"",
      "info" : "StringLiteral[11082-11140]:StringLiteral[8015-8073]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleType[11167-11179]:SimpleType[5656-5668]"
    }, {
      "left" : "assertNotNull(this.context.getBean(WebMvcAutoConfigurationAdapter.class)\n\t\t\t\t.getMessageCodesResolver());",
      "right" : "assertNotNull(this.context.getBean(WebMvcAutoConfigurationAdapter.class)\n\t\t\t\t.getMessageCodesResolver());",
      "info" : "ExpressionStatement[11363-11468]:ExpressionStatement[8078-8183]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11474-11483]:Modifier[8189-8198]"
    }, {
      "left" : "Map<String, List<Resource>>",
      "right" : "Map<String, List<Resource>>",
      "info" : "ParameterizedType[11484-11511]:ParameterizedType[8199-8226]"
    }, {
      "left" : "getFaviconMappingLocations",
      "right" : "getFaviconMappingLocations",
      "info" : "SimpleName[11512-11538]:SimpleName[8227-8253]"
    }, {
      "left" : "IllegalAccessException",
      "right" : "IllegalAccessException",
      "info" : "SimpleType[11551-11573]:SimpleType[8266-8288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11574-11713]:Block[8289-8428]"
    }, {
      "left" : "HandlerMapping mapping = (HandlerMapping) this.context\n\t\t\t\t.getBean(\"faviconHandlerMapping\");",
      "right" : "HandlerMapping mapping = (HandlerMapping) this.context\n\t\t\t\t.getBean(\"faviconHandlerMapping\");",
      "info" : "VariableDeclarationStatement[11578-11671]:VariableDeclarationStatement[8293-8386]"
    }, {
      "left" : "return getMappingLocations(mapping);",
      "right" : "return getMappingLocations(mapping);",
      "info" : "ReturnStatement[11674-11710]:ReturnStatement[8389-8425]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11716-11725]:Modifier[8431-8440]"
    }, {
      "left" : "Map<String, List<Resource>>",
      "right" : "Map<String, List<Resource>>",
      "info" : "ParameterizedType[11726-11753]:ParameterizedType[8441-8468]"
    }, {
      "left" : "getResourceMappingLocations",
      "right" : "getResourceMappingLocations",
      "info" : "SimpleName[11754-11781]:SimpleName[8469-8496]"
    }, {
      "left" : "IllegalAccessException",
      "right" : "IllegalAccessException",
      "info" : "SimpleType[11794-11816]:SimpleType[8509-8531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11817-11957]:Block[8532-8672]"
    }, {
      "left" : "HandlerMapping mapping = (HandlerMapping) this.context\n\t\t\t\t.getBean(\"resourceHandlerMapping\");",
      "right" : "HandlerMapping mapping = (HandlerMapping) this.context\n\t\t\t\t.getBean(\"resourceHandlerMapping\");",
      "info" : "VariableDeclarationStatement[11821-11915]:VariableDeclarationStatement[8536-8630]"
    }, {
      "left" : "return getMappingLocations(mapping);",
      "right" : "return getMappingLocations(mapping);",
      "info" : "ReturnStatement[11918-11954]:ReturnStatement[8633-8669]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[11960-11990]:SingleMemberAnnotation[8675-8705]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11992-12001]:Modifier[8707-8716]"
    }, {
      "left" : "Map<String, List<Resource>>",
      "right" : "Map<String, List<Resource>>",
      "info" : "ParameterizedType[12002-12029]:ParameterizedType[8717-8744]"
    }, {
      "left" : "getMappingLocations",
      "right" : "getMappingLocations",
      "info" : "SimpleName[12030-12049]:SimpleName[8745-8764]"
    }, {
      "left" : "HandlerMapping mapping",
      "right" : "HandlerMapping mapping",
      "info" : "SingleVariableDeclaration[12050-12072]:SingleVariableDeclaration[8765-8787]"
    }, {
      "left" : "IllegalAccessException",
      "right" : "IllegalAccessException",
      "info" : "SimpleType[12084-12106]:SimpleType[8799-8821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12107-12741]:Block[8822-9456]"
    }, {
      "left" : "Map<String, List<Resource>> mappingLocations = new LinkedHashMap<String, List<Resource>>();",
      "right" : "Map<String, List<Resource>> mappingLocations = new LinkedHashMap<String, List<Resource>>();",
      "info" : "VariableDeclarationStatement[12111-12202]:VariableDeclarationStatement[8826-8917]"
    }, {
      "left" : "if (mapping instanceof SimpleUrlHandlerMapping)",
      "right" : "if (mapping instanceof SimpleUrlHandlerMapping)",
      "info" : "IfStatement[12205-12711]:IfStatement[8920-9426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12253-12711]:Block[8968-9426]"
    }, {
      "left" : "Field locationsField = ReflectionUtils.findField(\n\t\t\t\t\tResourceHttpRequestHandler.class, \"locations\");",
      "right" : "Field locationsField = ReflectionUtils.findField(\n\t\t\t\t\tResourceHttpRequestHandler.class, \"locations\");",
      "info" : "VariableDeclarationStatement[12258-12360]:VariableDeclarationStatement[8973-9075]"
    }, {
      "left" : "locationsField.setAccessible(true);",
      "right" : "locationsField.setAccessible(true);",
      "info" : "ExpressionStatement[12364-12399]:ExpressionStatement[9079-9114]"
    }, {
      "left" : "for (Map.Entry<String, Object> entry : ((SimpleUrlHandlerMapping) mapping)\n\t\t\t\t\t.getHandlerMap().entrySet())",
      "right" : "for (Map.Entry<String, Object> entry : ((SimpleUrlHandlerMapping) mapping)\n\t\t\t\t\t.getHandlerMap().entrySet())",
      "info" : "EnhancedForStatement[12403-12707]:EnhancedForStatement[9118-9422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12512-12707]:Block[9227-9422]"
    }, {
      "left" : "ResourceHttpRequestHandler handler = (ResourceHttpRequestHandler) entry\n\t\t\t\t\t\t.getValue();",
      "right" : "ResourceHttpRequestHandler handler = (ResourceHttpRequestHandler) entry\n\t\t\t\t\t\t.getValue();",
      "info" : "VariableDeclarationStatement[12518-12608]:VariableDeclarationStatement[9233-9323]"
    }, {
      "left" : "mappingLocations.put(entry.getKey(),\n\t\t\t\t\t\t(List<Resource>) locationsField.get(handler));",
      "right" : "mappingLocations.put(entry.getKey(),\n\t\t\t\t\t\t(List<Resource>) locationsField.get(handler));",
      "info" : "ExpressionStatement[12613-12702]:ExpressionStatement[9328-9417]"
    }, {
      "left" : "return mappingLocations;",
      "right" : "return mappingLocations;",
      "info" : "ReturnStatement[12714-12738]:ReturnStatement[9429-9453]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[12744-12749]:MarkerAnnotation[9459-9464]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[12745-12749]:SimpleName[11477-11481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12751-12757]:Modifier[11483-11489]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12758-12762]:PrimitiveType[12144-12148]"
    }, {
      "left" : "ignoreDefaultModelOnRedirectIsTrue",
      "right" : "ignoreDefaultModelOnRedirectIsTrue",
      "info" : "SimpleName[12763-12797]:SimpleName[9478-9512]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[12807-12816]:SimpleType[9522-9531]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[12807-12816]:SimpleType[11923-11932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12817-13286]:Block[9532-9747]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[12821-12825]:ThisExpression[12288-12292]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[12826-12833]:SimpleName[12293-12300]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "load",
      "info" : "SimpleName[12840-12885]:SimpleName[9536-9540]"
    }, {
      "left" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load();",
      "info" : "ExpressionStatement[12891-13056]:ExpressionStatement[9536-9543]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[12891-12895]:ThisExpression[11986-11990]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[12896-12903]:SimpleName[11991-11998]"
    }, {
      "left" : "Config",
      "right" : "Config",
      "info" : "SimpleType[12913-12919]:SimpleType[12853-12859]"
    }, {
      "left" : "WebMvcAutoConfiguration",
      "right" : "WebMvcAutoConfiguration",
      "info" : "SimpleType[12927-12950]:SimpleType[12867-12890]"
    }, {
      "left" : "HttpMessageConvertersAutoConfiguration",
      "right" : "HttpMessageConvertersAutoConfiguration",
      "info" : "SimpleType[12962-13000]:SimpleType[12902-12940]"
    }, {
      "left" : "PropertyPlaceholderAutoConfiguration",
      "right" : "PropertyPlaceholderAutoConfiguration",
      "info" : "SimpleType[13012-13048]:SimpleType[12952-12988]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[13059-13063]:ThisExpression[12564-12568]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[13064-13071]:SimpleName[12569-12576]"
    }, {
      "left" : "RequestMappingHandlerAdapter adapter = this.context\n\t\t\t\t.getBean(RequestMappingHandlerAdapter.class);",
      "right" : "RequestMappingHandlerAdapter adapter = this.context\n\t\t\t\t.getBean(RequestMappingHandlerAdapter.class);",
      "info" : "VariableDeclarationStatement[13085-13186]:VariableDeclarationStatement[9546-9647]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[13124-13128]:ThisExpression[12670-12674]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[13129-13136]:SimpleName[12675-12682]"
    }, {
      "left" : "getBean",
      "right" : "getBean",
      "info" : "SimpleName[13142-13149]:SimpleName[12004-12011]"
    }, {
      "left" : "assertEquals(true,\n\t\t\t\tReflectionTestUtils.getField(adapter, \"ignoreDefaultModelOnRedirect\"));",
      "right" : "assertEquals(true,\n\t\t\t\tReflectionTestUtils.getField(adapter, \"ignoreDefaultModelOnRedirect\"));",
      "info" : "ExpressionStatement[13189-13283]:ExpressionStatement[9650-9744]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[13289-13294]:MarkerAnnotation[9750-9755]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13296-13302]:Modifier[9757-9763]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13303-13307]:PrimitiveType[9764-9768]"
    }, {
      "left" : "overrideIgnoreDefaultModelOnRedirect",
      "right" : "overrideIgnoreDefaultModelOnRedirect",
      "info" : "SimpleName[13308-13344]:SimpleName[9769-9805]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[13354-13363]:SimpleType[9815-9824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13364-13944]:Block[9825-10405]"
    }, {
      "left" : "this.context = new AnnotationConfigEmbeddedWebApplicationContext();",
      "right" : "this.context = new AnnotationConfigEmbeddedWebApplicationContext();",
      "info" : "ExpressionStatement[13368-13435]:ExpressionStatement[9829-9896]"
    }, {
      "left" : "EnvironmentTestUtils.addEnvironment(this.context,\n\t\t\t\t\"spring.mvc.ignore-default-model-on-redirect:false\");",
      "right" : "EnvironmentTestUtils.addEnvironment(this.context,\n\t\t\t\t\"spring.mvc.ignore-default-model-on-redirect:false\");",
      "info" : "ExpressionStatement[13438-13545]:ExpressionStatement[9899-10006]"
    }, {
      "left" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "info" : "ExpressionStatement[13548-13713]:ExpressionStatement[10009-10174]"
    }, {
      "left" : "this.context.refresh();",
      "right" : "this.context.refresh();",
      "info" : "ExpressionStatement[13716-13739]:ExpressionStatement[10177-10200]"
    }, {
      "left" : "RequestMappingHandlerAdapter adapter = this.context\n\t\t\t\t.getBean(RequestMappingHandlerAdapter.class);",
      "right" : "RequestMappingHandlerAdapter adapter = this.context\n\t\t\t\t.getBean(RequestMappingHandlerAdapter.class);",
      "info" : "VariableDeclarationStatement[13742-13843]:VariableDeclarationStatement[10203-10304]"
    }, {
      "left" : "assertEquals(false,\n\t\t\t\tReflectionTestUtils.getField(adapter, \"ignoreDefaultModelOnRedirect\"));",
      "right" : "assertEquals(false,\n\t\t\t\tReflectionTestUtils.getField(adapter, \"ignoreDefaultModelOnRedirect\"));",
      "info" : "ExpressionStatement[13846-13941]:ExpressionStatement[10307-10402]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[13947-13952]:MarkerAnnotation[10408-10413]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[13948-13952]:SimpleName[11869-11873]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13954-13960]:Modifier[11875-11881]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13961-13965]:PrimitiveType[13121-13125]"
    }, {
      "left" : "customViewResolver",
      "right" : "customViewResolver",
      "info" : "SimpleName[13966-13984]:SimpleName[10427-10445]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[13994-14003]:SimpleType[10455-10464]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[13994-14003]:SimpleType[12184-12193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14004-14388]:Block[10465-10589]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[14008-14012]:ThisExpression[13084-13088]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[14013-14020]:SimpleName[13089-13096]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "load",
      "info" : "SimpleName[14027-14072]:SimpleName[10469-10473]"
    }, {
      "left" : "this.context.register(Config.class, CustomViewResolver.class,\n\t\t\t\tWebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load(CustomViewResolver.class);",
      "info" : "ExpressionStatement[14078-14273]:ExpressionStatement[10469-10500]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "ThisExpression[14078-14082]:ThisExpression[13000-13004]"
    }, {
      "left" : "context",
      "right" : "context",
      "info" : "SimpleName[14083-14090]:SimpleName[13005-13012]"
    }, {
      "left" : "CustomViewResolver.class",
      "right" : "CustomViewResolver.class",
      "info" : "TypeLiteral[14114-14138]:TypeLiteral[10474-10498]"
    }, {
      "left" : "assertThat(this.context.getBean(\"viewResolver\"), instanceOf(MyViewResolver.class));",
      "right" : "assertThat(this.context.getBean(\"viewResolver\"), instanceOf(MyViewResolver.class));",
      "info" : "ExpressionStatement[14302-14385]:ExpressionStatement[10503-10586]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[14391-14396]:MarkerAnnotation[10592-10597]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[14392-14396]:SimpleName[12131-12135]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14398-14404]:Modifier[12137-12143]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14405-14409]:PrimitiveType[12510-12514]"
    }, {
      "left" : "customContentNegotiatingViewResolver",
      "right" : "customContentNegotiatingViewResolver",
      "info" : "SimpleName[14410-14446]:SimpleName[10611-10647]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[14456-14465]:SimpleType[10657-10666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14466-15023]:Block[10667-10964]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[14475-14482]:SimpleName[10671-10675]"
    }, {
      "left" : "this.context.register(Config.class, CustomContentNegotiatingViewResolver.class,\n\t\t\t\tWebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load(CustomContentNegotiatingViewResolver.class);",
      "info" : "ExpressionStatement[14540-14753]:ExpressionStatement[10671-10720]"
    }, {
      "left" : "CustomContentNegotiatingViewResolver.class",
      "right" : "CustomContentNegotiatingViewResolver.class",
      "info" : "TypeLiteral[14576-14618]:TypeLiteral[10676-10718]"
    }, {
      "left" : "Map<String, ContentNegotiatingViewResolver> beans = this.context\n\t\t\t\t.getBeansOfType(ContentNegotiatingViewResolver.class);",
      "right" : "Map<String, ContentNegotiatingViewResolver> beans = this.context\n\t\t\t\t.getBeansOfType(ContentNegotiatingViewResolver.class);",
      "info" : "VariableDeclarationStatement[14782-14905]:VariableDeclarationStatement[10723-10846]"
    }, {
      "left" : "assertThat(beans.size(), equalTo(1));",
      "right" : "assertThat(beans.size(), equalTo(1));",
      "info" : "ExpressionStatement[14908-14945]:ExpressionStatement[10849-10886]"
    }, {
      "left" : "assertThat(beans.keySet().iterator().next(), equalTo(\"myViewResolver\"));",
      "right" : "assertThat(beans.keySet().iterator().next(), equalTo(\"myViewResolver\"));",
      "info" : "ExpressionStatement[14948-15020]:ExpressionStatement[10889-10961]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[15026-15031]:MarkerAnnotation[10967-10972]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15033-15039]:Modifier[10974-10980]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15040-15044]:PrimitiveType[11882-11886]"
    }, {
      "left" : "faviconMapping",
      "right" : "faviconMapping",
      "info" : "SimpleName[15045-15059]:SimpleName[10986-11000]"
    }, {
      "left" : "IllegalAccessException",
      "right" : "IllegalAccessException",
      "info" : "SimpleType[15069-15091]:SimpleType[11010-11032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15092-15786]:Block[11033-11473]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[15101-15108]:SimpleName[11037-11041]"
    }, {
      "left" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load();",
      "info" : "ExpressionStatement[15166-15331]:ExpressionStatement[11037-11044]"
    }, {
      "left" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(ResourceHttpRequestHandler.class).get(\n\t\t\t\t\t\t\"faviconRequestHandler\"), is(notNullValue()));",
      "right" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(ResourceHttpRequestHandler.class).get(\n\t\t\t\t\t\t\"faviconRequestHandler\"), is(notNullValue()));",
      "info" : "ExpressionStatement[15360-15495]:ExpressionStatement[11047-11182]"
    }, {
      "left" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(SimpleUrlHandlerMapping.class).get(\n\t\t\t\t\t\t\"faviconHandlerMapping\"), is(notNullValue()));",
      "right" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(SimpleUrlHandlerMapping.class).get(\n\t\t\t\t\t\t\"faviconHandlerMapping\"), is(notNullValue()));",
      "info" : "ExpressionStatement[15498-15630]:ExpressionStatement[11185-11317]"
    }, {
      "left" : "Map<String, List<Resource>> mappingLocations = getFaviconMappingLocations();",
      "right" : "Map<String, List<Resource>> mappingLocations = getFaviconMappingLocations();",
      "info" : "VariableDeclarationStatement[15633-15709]:VariableDeclarationStatement[11320-11396]"
    }, {
      "left" : "assertThat(mappingLocations.get(\"/**/favicon.ico\").size(), equalTo(5));",
      "right" : "assertThat(mappingLocations.get(\"/**/favicon.ico\").size(), equalTo(5));",
      "info" : "ExpressionStatement[15712-15783]:ExpressionStatement[11399-11470]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[15789-15794]:MarkerAnnotation[11476-11481]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[15790-15794]:SimpleName[10593-10597]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15796-15802]:Modifier[10599-10605]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15803-15807]:PrimitiveType[11490-11494]"
    }, {
      "left" : "faviconMappingDisabled",
      "right" : "faviconMappingDisabled",
      "info" : "SimpleName[15808-15830]:SimpleName[11495-11517]"
    }, {
      "left" : "IllegalAccessException",
      "right" : "IllegalAccessException",
      "info" : "SimpleType[15840-15862]:SimpleType[11527-11549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15863-16491]:Block[11550-11865]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[15872-15879]:SimpleName[11554-11558]"
    }, {
      "left" : "EnvironmentTestUtils.addEnvironment(this.context,\n\t\t\t\t\"spring.mvc.favicon.enabled:false\");",
      "right" : "load(\"spring.mvc.favicon.enabled:false\");",
      "info" : "ExpressionStatement[16105-16195]:ExpressionStatement[11554-11595]"
    }, {
      "left" : "\"spring.mvc.favicon.enabled:false\"",
      "right" : "\"spring.mvc.favicon.enabled:false\"",
      "info" : "StringLiteral[16159-16193]:StringLiteral[11559-11593]"
    }, {
      "left" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(ResourceHttpRequestHandler.class).get(\n\t\t\t\t\t\t\"faviconRequestHandler\"), is(nullValue()));",
      "right" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(ResourceHttpRequestHandler.class).get(\n\t\t\t\t\t\t\"faviconRequestHandler\"), is(nullValue()));",
      "info" : "ExpressionStatement[16224-16356]:ExpressionStatement[11598-11730]"
    }, {
      "left" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(SimpleUrlHandlerMapping.class).get(\n\t\t\t\t\t\t\"faviconHandlerMapping\"), is(nullValue()));",
      "right" : "assertThat(\n\t\t\t\tthis.context.getBeansOfType(SimpleUrlHandlerMapping.class).get(\n\t\t\t\t\t\t\"faviconHandlerMapping\"), is(nullValue()));",
      "info" : "ExpressionStatement[16359-16488]:ExpressionStatement[11733-11862]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[16494-16499]:MarkerAnnotation[11868-11873]"
    }, {
      "left" : "Test",
      "right" : "Test",
      "info" : "SimpleName[16495-16499]:SimpleName[5931-5935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16501-16507]:Modifier[5937-5943]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16508-16512]:PrimitiveType[10981-10985]"
    }, {
      "left" : "defaultAsyncRequestTimeout",
      "right" : "defaultAsyncRequestTimeout",
      "info" : "SimpleName[16513-16539]:SimpleName[11887-11913]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[16549-16558]:SimpleType[5989-5998]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[16549-16558]:SimpleType[11923-11932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16559-17007]:Block[11933-12127]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[16568-16575]:SimpleName[11937-11941]"
    }, {
      "left" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "load();",
      "info" : "ExpressionStatement[16633-16798]:ExpressionStatement[11937-11944]"
    }, {
      "left" : "RequestMappingHandlerAdapter adapter = this.context\n\t\t\t\t.getBean(RequestMappingHandlerAdapter.class);",
      "right" : "RequestMappingHandlerAdapter adapter = this.context\n\t\t\t\t.getBean(RequestMappingHandlerAdapter.class);",
      "info" : "VariableDeclarationStatement[16827-16928]:VariableDeclarationStatement[11947-12048]"
    }, {
      "left" : "getBean",
      "right" : "getBean",
      "info" : "SimpleName[16884-16891]:SimpleName[12306-12313]"
    }, {
      "left" : "assertNull(ReflectionTestUtils.getField(adapter, \"asyncRequestTimeout\"));",
      "right" : "assertNull(ReflectionTestUtils.getField(adapter, \"asyncRequestTimeout\"));",
      "info" : "ExpressionStatement[16931-17004]:ExpressionStatement[12051-12124]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[17010-17015]:MarkerAnnotation[5204-5209]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17017-17023]:Modifier[5211-5217]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17024-17028]:PrimitiveType[10606-10610]"
    }, {
      "left" : "customAsyncRequestTimeout",
      "right" : "customAsyncRequestTimeout",
      "info" : "SimpleName[17029-17054]:SimpleName[12149-12174]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[17064-17073]:SimpleType[5270-5279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17074-17659]:Block[13154-13185]"
    }, {
      "left" : "this.context",
      "right" : "this.context",
      "info" : "FieldAccess[17078-17090]:FieldAccess[12288-12300]"
    }, {
      "left" : "this.context = new AnnotationConfigEmbeddedWebApplicationContext();",
      "right" : "this.context = new AnnotationConfigEmbeddedWebApplicationContext();",
      "info" : "ExpressionStatement[17078-17145]:ExpressionStatement[12564-12631]"
    }, {
      "left" : "context",
      "right" : "load",
      "info" : "SimpleName[17083-17090]:SimpleName[12198-12202]"
    }, {
      "left" : "AnnotationConfigEmbeddedWebApplicationContext",
      "right" : "Class",
      "info" : "SimpleName[17097-17142]:SimpleName[12520-12525]"
    }, {
      "left" : "EnvironmentTestUtils",
      "right" : "configClasses",
      "info" : "SimpleName[17148-17168]:SimpleName[12785-12798]"
    }, {
      "left" : "EnvironmentTestUtils.addEnvironment(this.context,\n\t\t\t\t\"spring.mvc.async.request-timeout:123456\");",
      "right" : "configClasses.add(config);",
      "info" : "ExpressionStatement[17148-17245]:ExpressionStatement[12785-12811]"
    }, {
      "left" : "addEnvironment",
      "right" : "add",
      "info" : "SimpleName[17169-17183]:SimpleName[12799-12802]"
    }, {
      "left" : "context",
      "right" : "config",
      "info" : "SimpleName[17189-17196]:SimpleName[12803-12809]"
    }, {
      "left" : "\"spring.mvc.async.request-timeout:123456\"",
      "right" : "\"spring.mvc.async.request-timeout:123456\"",
      "info" : "StringLiteral[17202-17243]:StringLiteral[12203-12244]"
    }, {
      "left" : "this.context.register(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class);",
      "right" : "configClasses.addAll(Arrays.asList(Config.class, WebMvcAutoConfiguration.class,\n\t\t\t\tHttpMessageConvertersAutoConfiguration.class,\n\t\t\t\tPropertyPlaceholderAutoConfiguration.class));",
      "info" : "ExpressionStatement[17248-17413]:ExpressionStatement[12818-12997]"
    }, {
      "left" : "context",
      "right" : "addAll",
      "info" : "SimpleName[17253-17260]:SimpleName[12832-12838]"
    }, {
      "left" : "register",
      "right" : "Arrays",
      "info" : "SimpleName[17261-17269]:SimpleName[12839-12845]"
    }, {
      "left" : "Config",
      "right" : "asList",
      "info" : "SimpleName[17270-17276]:SimpleName[12846-12852]"
    }, {
      "left" : "Config.class",
      "right" : "Config.class",
      "info" : "TypeLiteral[17270-17282]:TypeLiteral[12853-12865]"
    }, {
      "left" : "WebMvcAutoConfiguration.class",
      "right" : "WebMvcAutoConfiguration.class",
      "info" : "TypeLiteral[17284-17313]:TypeLiteral[12867-12896]"
    }, {
      "left" : "HttpMessageConvertersAutoConfiguration.class",
      "right" : "HttpMessageConvertersAutoConfiguration.class",
      "info" : "TypeLiteral[17319-17363]:TypeLiteral[12902-12946]"
    }, {
      "left" : "PropertyPlaceholderAutoConfiguration.class",
      "right" : "PropertyPlaceholderAutoConfiguration.class",
      "info" : "TypeLiteral[17369-17411]:TypeLiteral[12952-12994]"
    }, {
      "left" : "this.context.refresh()",
      "right" : "this.context.register(configClasses.toArray(new Class<?>[configClasses.size()]))",
      "info" : "MethodInvocation[17416-17438]:MethodInvocation[13000-13080]"
    }, {
      "left" : "this.context.refresh();",
      "right" : "this.context.refresh();",
      "info" : "ExpressionStatement[17416-17439]:ExpressionStatement[13084-13107]"
    }, {
      "left" : "context",
      "right" : "configClasses",
      "info" : "SimpleName[17421-17428]:SimpleName[13022-13035]"
    }, {
      "left" : "refresh",
      "right" : "size",
      "info" : "SimpleName[17429-17436]:SimpleName[13071-13075]"
    }, {
      "left" : "RequestMappingHandlerAdapter",
      "right" : "RequestMappingHandlerAdapter",
      "info" : "SimpleType[17442-17470]:SimpleType[12249-12277]"
    }, {
      "left" : "RequestMappingHandlerAdapter",
      "right" : "String",
      "info" : "SimpleType[17442-17470]:SimpleType[13131-13137]"
    }, {
      "left" : "adapter",
      "right" : "adapter",
      "info" : "SimpleName[17471-17478]:SimpleName[12278-12285]"
    }, {
      "left" : "this.context\n\t\t\t\t.getBean(RequestMappingHandlerAdapter.class)",
      "right" : "load(null, environment)",
      "info" : "MethodInvocation[17481-17542]:MethodInvocation[13158-13181]"
    }, {
      "left" : "context",
      "right" : "environment",
      "info" : "SimpleName[17486-17493]:SimpleName[13169-13180]"
    }, {
      "left" : "getBean",
      "right" : "getBean",
      "info" : "SimpleName[17499-17506]:SimpleName[7141-7148]"
    }, {
      "left" : "RequestMappingHandlerAdapter",
      "right" : "RequestMappingHandlerAdapter",
      "info" : "SimpleType[17507-17535]:SimpleType[12314-12342]"
    }, {
      "left" : "Object actual = ReflectionTestUtils.getField(adapter, \"asyncRequestTimeout\");",
      "right" : "Object actual = ReflectionTestUtils.getField(adapter, \"asyncRequestTimeout\");",
      "info" : "VariableDeclarationStatement[17546-17623]:VariableDeclarationStatement[12353-12430]"
    }, {
      "left" : "assertEquals(123456L, actual);",
      "right" : "assertEquals(123456L, actual);",
      "info" : "ExpressionStatement[17626-17656]:ExpressionStatement[12433-12463]"
    }, {
      "left" : "@Configuration",
      "right" : "@Configuration",
      "info" : "MarkerAnnotation[17662-17676]:MarkerAnnotation[13189-13203]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[17678-17687]:Modifier[13205-13214]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17688-17694]:Modifier[13215-13221]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[17695-17700]:TYPE_DECLARATION_KIND[13222-13227]"
    }, {
      "left" : "ViewConfig",
      "right" : "ViewConfig",
      "info" : "SimpleName[17701-17711]:SimpleName[13228-13238]"
    }, {
      "left" : "@Bean",
      "right" : "@Bean",
      "info" : "MarkerAnnotation[17717-17722]:MarkerAnnotation[13244-13249]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17725-17731]:Modifier[13252-13258]"
    }, {
      "left" : "View",
      "right" : "View",
      "info" : "SimpleType[17732-17736]:SimpleType[13259-13263]"
    }, {
      "left" : "jsonView",
      "right" : "jsonView",
      "info" : "SimpleName[17737-17745]:SimpleName[13264-13272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17748-18035]:Block[13275-13562]"
    }, {
      "left" : "return new AbstractView() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void renderMergedOutputModel(Map<String, Object> model,\n\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\t\t\t\tthrows Exception {\n\t\t\t\t\tresponse.getOutputStream().write(\"Hello World\".getBytes());\n\t\t\t\t}\n\t\t\t};",
      "right" : "return new AbstractView() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void renderMergedOutputModel(Map<String, Object> model,\n\t\t\t\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\t\t\t\tthrows Exception {\n\t\t\t\t\tresponse.getOutputStream().write(\"Hello World\".getBytes());\n\t\t\t\t}\n\t\t\t};",
      "info" : "ReturnStatement[17753-18031]:ReturnStatement[13280-13558]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17786-17795]:MarkerAnnotation[13313-13322]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[17800-17809]:Modifier[13327-13336]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17810-17814]:PrimitiveType[13337-13341]"
    }, {
      "left" : "renderMergedOutputModel",
      "right" : "renderMergedOutputModel",
      "info" : "SimpleName[17815-17838]:SimpleName[13342-13365]"
    }, {
      "left" : "Map<String, Object> model",
      "right" : "Map<String, Object> model",
      "info" : "SingleVariableDeclaration[17839-17864]:SingleVariableDeclaration[13366-13391]"
    }, {
      "left" : "HttpServletRequest request",
      "right" : "HttpServletRequest request",
      "info" : "SingleVariableDeclaration[17872-17898]:SingleVariableDeclaration[13399-13425]"
    }, {
      "left" : "HttpServletResponse response",
      "right" : "HttpServletResponse response",
      "info" : "SingleVariableDeclaration[17900-17928]:SingleVariableDeclaration[13427-13455]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[17943-17952]:SimpleType[13470-13479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17953-18025]:Block[13480-13552]"
    }, {
      "left" : "response.getOutputStream().write(\"Hello World\".getBytes());",
      "right" : "response.getOutputStream().write(\"Hello World\".getBytes());",
      "info" : "ExpressionStatement[17960-18019]:ExpressionStatement[13487-13546]"
    }, {
      "left" : "@Configuration",
      "right" : "@Configuration",
      "info" : "MarkerAnnotation[18042-18056]:MarkerAnnotation[13569-13583]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18058-18067]:Modifier[13585-13594]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18068-18074]:Modifier[13595-13601]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[18075-18080]:TYPE_DECLARATION_KIND[13602-13607]"
    }, {
      "left" : "WebJars",
      "right" : "WebJars",
      "info" : "SimpleName[18081-18088]:SimpleName[13608-13615]"
    }, {
      "left" : "WebMvcConfigurerAdapter",
      "right" : "WebMvcConfigurerAdapter",
      "info" : "SimpleType[18097-18120]:SimpleType[13624-13647]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18126-18135]:MarkerAnnotation[13653-13662]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18138-18144]:Modifier[13665-13671]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18145-18149]:PrimitiveType[13672-13676]"
    }, {
      "left" : "addResourceHandlers",
      "right" : "addResourceHandlers",
      "info" : "SimpleName[18150-18169]:SimpleName[13677-13696]"
    }, {
      "left" : "ResourceHandlerRegistry registry",
      "right" : "ResourceHandlerRegistry registry",
      "info" : "SingleVariableDeclaration[18170-18202]:SingleVariableDeclaration[13697-13729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18204-18302]:Block[13731-13829]"
    }, {
      "left" : "registry.addResourceHandler(\"/webjars/**\").addResourceLocations(\n\t\t\t\t\t\"classpath:/foo/\");",
      "right" : "registry.addResourceHandler(\"/webjars/**\").addResourceLocations(\n\t\t\t\t\t\"classpath:/foo/\");",
      "info" : "ExpressionStatement[18209-18298]:ExpressionStatement[13736-13825]"
    }, {
      "left" : "@Configuration",
      "right" : "@Configuration",
      "info" : "MarkerAnnotation[18309-18323]:MarkerAnnotation[13836-13850]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18325-18334]:Modifier[13852-13861]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18335-18341]:Modifier[13862-13868]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[18342-18347]:TYPE_DECLARATION_KIND[13869-13874]"
    }, {
      "left" : "AllResources",
      "right" : "AllResources",
      "info" : "SimpleName[18348-18360]:SimpleName[13875-13887]"
    }, {
      "left" : "WebMvcConfigurerAdapter",
      "right" : "WebMvcConfigurerAdapter",
      "info" : "SimpleType[18369-18392]:SimpleType[13896-13919]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18398-18407]:MarkerAnnotation[13925-13934]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18410-18416]:Modifier[13937-13943]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18417-18421]:PrimitiveType[13944-13948]"
    }, {
      "left" : "addResourceHandlers",
      "right" : "addResourceHandlers",
      "info" : "SimpleName[18422-18441]:SimpleName[13949-13968]"
    }, {
      "left" : "ResourceHandlerRegistry registry",
      "right" : "ResourceHandlerRegistry registry",
      "info" : "SingleVariableDeclaration[18442-18474]:SingleVariableDeclaration[13969-14001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18476-18560]:Block[14003-14087]"
    }, {
      "left" : "registry.addResourceHandler(\"/**\").addResourceLocations(\"classpath:/foo/\");",
      "right" : "registry.addResourceHandler(\"/**\").addResourceLocations(\"classpath:/foo/\");",
      "info" : "ExpressionStatement[18481-18556]:ExpressionStatement[14008-14083]"
    }, {
      "left" : "@Configuration",
      "right" : "@Configuration",
      "info" : "MarkerAnnotation[18567-18581]:MarkerAnnotation[14094-14108]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18583-18589]:Modifier[14110-14116]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18590-18596]:Modifier[14117-14123]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[18597-18602]:TYPE_DECLARATION_KIND[14124-14129]"
    }, {
      "left" : "Config",
      "right" : "Config",
      "info" : "SimpleName[18603-18609]:SimpleName[14130-14136]"
    }, {
      "left" : "@Bean",
      "right" : "@Bean",
      "info" : "MarkerAnnotation[18615-18620]:MarkerAnnotation[14142-14147]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18623-18629]:Modifier[14150-14156]"
    }, {
      "left" : "EmbeddedServletContainerFactory",
      "right" : "EmbeddedServletContainerFactory",
      "info" : "SimpleType[18630-18661]:SimpleType[14157-14188]"
    }, {
      "left" : "containerFactory",
      "right" : "containerFactory",
      "info" : "SimpleName[18662-18678]:SimpleName[14189-14205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18681-18714]:Block[14208-14241]"
    }, {
      "left" : "return containerFactory;",
      "right" : "return containerFactory;",
      "info" : "ReturnStatement[18686-18710]:ReturnStatement[14213-14237]"
    }, {
      "left" : "@Bean",
      "right" : "@Bean",
      "info" : "MarkerAnnotation[18718-18723]:MarkerAnnotation[14245-14250]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18726-18732]:Modifier[14253-14259]"
    }, {
      "left" : "EmbeddedServletContainerCustomizerBeanPostProcessor",
      "right" : "EmbeddedServletContainerCustomizerBeanPostProcessor",
      "info" : "SimpleType[18733-18784]:SimpleType[14260-14311]"
    }, {
      "left" : "embeddedServletContainerCustomizerBeanPostProcessor",
      "right" : "embeddedServletContainerCustomizerBeanPostProcessor",
      "info" : "SimpleName[18785-18836]:SimpleName[14312-14363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18839-18913]:Block[14366-14440]"
    }, {
      "left" : "return new EmbeddedServletContainerCustomizerBeanPostProcessor();",
      "right" : "return new EmbeddedServletContainerCustomizerBeanPostProcessor();",
      "info" : "ReturnStatement[18844-18909]:ReturnStatement[14371-14436]"
    }, {
      "left" : "@Configuration",
      "right" : "@Configuration",
      "info" : "MarkerAnnotation[18920-18934]:MarkerAnnotation[14447-14461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18936-18942]:Modifier[14463-14469]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18943-18949]:Modifier[14470-14476]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[18950-18955]:TYPE_DECLARATION_KIND[14477-14482]"
    }, {
      "left" : "CustomViewResolver",
      "right" : "CustomViewResolver",
      "info" : "SimpleName[18956-18974]:SimpleName[14483-14501]"
    }, {
      "left" : "@Bean",
      "right" : "@Bean",
      "info" : "MarkerAnnotation[18980-18985]:MarkerAnnotation[14507-14512]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18988-18994]:Modifier[14515-14521]"
    }, {
      "left" : "ViewResolver",
      "right" : "ViewResolver",
      "info" : "SimpleType[18995-19007]:SimpleType[14522-14534]"
    }, {
      "left" : "viewResolver",
      "right" : "viewResolver",
      "info" : "SimpleName[19008-19020]:SimpleName[14535-14547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19023-19060]:Block[14550-14587]"
    }, {
      "left" : "return new MyViewResolver();",
      "right" : "return new MyViewResolver();",
      "info" : "ReturnStatement[19028-19056]:ReturnStatement[14555-14583]"
    }, {
      "left" : "@Configuration",
      "right" : "@Configuration",
      "info" : "MarkerAnnotation[19067-19081]:MarkerAnnotation[14594-14608]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19083-19089]:Modifier[14610-14616]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19090-19096]:Modifier[14617-14623]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[19097-19102]:TYPE_DECLARATION_KIND[14624-14629]"
    }, {
      "left" : "CustomContentNegotiatingViewResolver",
      "right" : "CustomContentNegotiatingViewResolver",
      "info" : "SimpleName[19103-19139]:SimpleName[14630-14666]"
    }, {
      "left" : "@Bean",
      "right" : "@Bean",
      "info" : "MarkerAnnotation[19145-19150]:MarkerAnnotation[14672-14677]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19153-19159]:Modifier[14680-14686]"
    }, {
      "left" : "ContentNegotiatingViewResolver",
      "right" : "ContentNegotiatingViewResolver",
      "info" : "SimpleType[19160-19190]:SimpleType[14687-14717]"
    }, {
      "left" : "myViewResolver",
      "right" : "myViewResolver",
      "info" : "SimpleName[19191-19205]:SimpleName[14718-14732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19208-19261]:Block[14735-14788]"
    }, {
      "left" : "return new ContentNegotiatingViewResolver();",
      "right" : "return new ContentNegotiatingViewResolver();",
      "info" : "ReturnStatement[19213-19257]:ReturnStatement[14740-14784]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19268-19275]:Modifier[14795-14802]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19276-19282]:Modifier[14803-14809]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[19283-19288]:TYPE_DECLARATION_KIND[14810-14815]"
    }, {
      "left" : "MyViewResolver",
      "right" : "MyViewResolver",
      "info" : "SimpleName[19289-19303]:SimpleName[14816-14830]"
    }, {
      "left" : "ViewResolver",
      "right" : "ViewResolver",
      "info" : "SimpleType[19315-19327]:SimpleType[14842-14854]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19333-19342]:MarkerAnnotation[14860-14869]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19345-19351]:Modifier[14872-14878]"
    }, {
      "left" : "View",
      "right" : "View",
      "info" : "SimpleType[19352-19356]:SimpleType[14879-14883]"
    }, {
      "left" : "resolveViewName",
      "right" : "resolveViewName",
      "info" : "SimpleName[19357-19372]:SimpleName[14884-14899]"
    }, {
      "left" : "String viewName",
      "right" : "String viewName",
      "info" : "SingleVariableDeclaration[19373-19388]:SingleVariableDeclaration[14900-14915]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[19390-19403]:SingleVariableDeclaration[14917-14930]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[19412-19421]:SimpleType[14939-14948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19422-19443]:Block[14949-14970]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19427-19439]:ReturnStatement[14954-14966]"
    } ]
  },
  "interFileMappings" : { }
}