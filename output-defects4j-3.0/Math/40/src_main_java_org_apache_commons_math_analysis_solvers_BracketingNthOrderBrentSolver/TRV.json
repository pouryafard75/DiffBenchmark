{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final double DEFAULT_ABSOLUTE_ACCURACY = 1e-6;",
      "right" : "private static final double DEFAULT_ABSOLUTE_ACCURACY = 1e-6;",
      "info" : "FieldDeclaration[1913-2012]:FieldDeclaration[1913-2012]"
    }, {
      "left" : "private static final int DEFAULT_MAXIMAL_ORDER = 5;",
      "right" : "private static final int DEFAULT_MAXIMAL_ORDER = 5;",
      "info" : "FieldDeclaration[2018-2103]:FieldDeclaration[2018-2103]"
    }, {
      "left" : "private static final int MAXIMAL_AGING = 2;",
      "right" : "private static final int MAXIMAL_AGING = 2;",
      "info" : "FieldDeclaration[2109-2235]:FieldDeclaration[2109-2235]"
    }, {
      "left" : "private static final double REDUCTION_FACTOR = 1.0 / 16.0;",
      "right" : "private static final double REDUCTION_FACTOR = 1.0 / 16.0;",
      "info" : "FieldDeclaration[2241-2376]:FieldDeclaration[2241-2376]"
    }, {
      "left" : "private final int maximalOrder;",
      "right" : "private final int maximalOrder;",
      "info" : "FieldDeclaration[2382-2439]:FieldDeclaration[2382-2439]"
    }, {
      "left" : "private AllowedSolution allowed;",
      "right" : "private AllowedSolution allowed;",
      "info" : "FieldDeclaration[2445-2542]:FieldDeclaration[2445-2542]"
    }, {
      "left" : "public BracketingNthOrderBrentSolver()",
      "right" : "public BracketingNthOrderBrentSolver()",
      "info" : "MethodDeclaration[2548-2766]:MethodDeclaration[2548-2766]"
    }, {
      "left" : "public BracketingNthOrderBrentSolver(final double absoluteAccuracy,\n                                         final int maximalOrder)\n        throws NumberIsTooSmallException",
      "right" : "public BracketingNthOrderBrentSolver(final double absoluteAccuracy,\n                                         final int maximalOrder)\n        throws NumberIsTooSmallException",
      "info" : "MethodDeclaration[2772-3410]:MethodDeclaration[2772-3410]"
    }, {
      "left" : "public BracketingNthOrderBrentSolver(final double relativeAccuracy,\n                                         final double absoluteAccuracy,\n                                         final int maximalOrder)\n        throws NumberIsTooSmallException",
      "right" : "public BracketingNthOrderBrentSolver(final double relativeAccuracy,\n                                         final double absoluteAccuracy,\n                                         final int maximalOrder)\n        throws NumberIsTooSmallException",
      "info" : "MethodDeclaration[3416-4194]:MethodDeclaration[3416-4194]"
    }, {
      "left" : "public BracketingNthOrderBrentSolver(final double relativeAccuracy,\n                                         final double absoluteAccuracy,\n                                         final double functionValueAccuracy,\n                                         final int maximalOrder)\n        throws NumberIsTooSmallException",
      "right" : "public BracketingNthOrderBrentSolver(final double relativeAccuracy,\n                                         final double absoluteAccuracy,\n                                         final double functionValueAccuracy,\n                                         final int maximalOrder)\n        throws NumberIsTooSmallException",
      "info" : "MethodDeclaration[4200-5139]:MethodDeclaration[4200-5139]"
    }, {
      "left" : "public int getMaximalOrder()",
      "right" : "public int getMaximalOrder()",
      "info" : "MethodDeclaration[5145-5278]:MethodDeclaration[5145-5278]"
    }, {
      "left" : "private double guessX(final double targetY, final double[] x, final double[] y,\n                          final int start, final int end)",
      "right" : "private double guessX(final double targetY, final double[] x, final double[] y,\n                          final int start, final int end)",
      "info" : "MethodDeclaration[12938-14325]:MethodDeclaration[13340-14727]"
    }, {
      "left" : "public double solve(int maxEval, UnivariateFunction f, double min,\n                        double max, AllowedSolution allowedSolution)",
      "right" : "public double solve(int maxEval, UnivariateFunction f, double min,\n                        double max, AllowedSolution allowedSolution)",
      "info" : "MethodDeclaration[14331-14589]:MethodDeclaration[14733-14991]"
    }, {
      "left" : "public double solve(int maxEval, UnivariateFunction f, double min,\n                        double max, double startValue,\n                        AllowedSolution allowedSolution)",
      "right" : "public double solve(int maxEval, UnivariateFunction f, double min,\n                        double max, double startValue,\n                        AllowedSolution allowedSolution)",
      "info" : "MethodDeclaration[14595-14908]:MethodDeclaration[14997-15310]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2656-2662]:Modifier[2656-2662]"
    }, {
      "left" : "BracketingNthOrderBrentSolver",
      "right" : "BracketingNthOrderBrentSolver",
      "info" : "SimpleName[2663-2692]:SimpleName[2663-2692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2695-2766]:Block[2695-2766]"
    }, {
      "left" : "this(DEFAULT_ABSOLUTE_ACCURACY, DEFAULT_MAXIMAL_ORDER);",
      "right" : "this(DEFAULT_ABSOLUTE_ACCURACY, DEFAULT_MAXIMAL_ORDER);",
      "info" : "ConstructorInvocation[2705-2760]:ConstructorInvocation[2705-2760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2991-2997]:Modifier[2991-2997]"
    }, {
      "left" : "BracketingNthOrderBrentSolver",
      "right" : "BracketingNthOrderBrentSolver",
      "info" : "SimpleName[2998-3027]:SimpleName[2998-3027]"
    }, {
      "left" : "final double absoluteAccuracy",
      "right" : "final double absoluteAccuracy",
      "info" : "SingleVariableDeclaration[3028-3057]:SingleVariableDeclaration[3028-3057]"
    }, {
      "left" : "final int maximalOrder",
      "right" : "final int maximalOrder",
      "info" : "SingleVariableDeclaration[3100-3122]:SingleVariableDeclaration[3100-3122]"
    }, {
      "left" : "NumberIsTooSmallException",
      "right" : "NumberIsTooSmallException",
      "info" : "SimpleType[3139-3164]:SimpleType[3139-3164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3165-3410]:Block[3165-3410]"
    }, {
      "left" : "super(absoluteAccuracy);",
      "right" : "super(absoluteAccuracy);",
      "info" : "SuperConstructorInvocation[3175-3199]:SuperConstructorInvocation[3175-3199]"
    }, {
      "left" : "if (maximalOrder < 2)",
      "right" : "if (maximalOrder < 2)",
      "info" : "IfStatement[3208-3313]:IfStatement[3208-3313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3230-3313]:Block[3230-3313]"
    }, {
      "left" : "throw new NumberIsTooSmallException(maximalOrder, 2, true);",
      "right" : "throw new NumberIsTooSmallException(maximalOrder, 2, true);",
      "info" : "ThrowStatement[3244-3303]:ThrowStatement[3244-3303]"
    }, {
      "left" : "this.maximalOrder = maximalOrder;",
      "right" : "this.maximalOrder = maximalOrder;",
      "info" : "ExpressionStatement[3322-3355]:ExpressionStatement[3322-3355]"
    }, {
      "left" : "this.allowed = AllowedSolution.ANY_SIDE;",
      "right" : "this.allowed = AllowedSolution.ANY_SIDE;",
      "info" : "ExpressionStatement[3364-3404]:ExpressionStatement[3364-3404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3685-3691]:Modifier[3685-3691]"
    }, {
      "left" : "BracketingNthOrderBrentSolver",
      "right" : "BracketingNthOrderBrentSolver",
      "info" : "SimpleName[3692-3721]:SimpleName[3692-3721]"
    }, {
      "left" : "final double relativeAccuracy",
      "right" : "final double relativeAccuracy",
      "info" : "SingleVariableDeclaration[3722-3751]:SingleVariableDeclaration[3722-3751]"
    }, {
      "left" : "final double absoluteAccuracy",
      "right" : "final double absoluteAccuracy",
      "info" : "SingleVariableDeclaration[3794-3823]:SingleVariableDeclaration[3794-3823]"
    }, {
      "left" : "final int maximalOrder",
      "right" : "final int maximalOrder",
      "info" : "SingleVariableDeclaration[3866-3888]:SingleVariableDeclaration[3866-3888]"
    }, {
      "left" : "NumberIsTooSmallException",
      "right" : "NumberIsTooSmallException",
      "info" : "SimpleType[3905-3930]:SimpleType[3905-3930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3931-4194]:Block[3931-4194]"
    }, {
      "left" : "super(relativeAccuracy, absoluteAccuracy);",
      "right" : "super(relativeAccuracy, absoluteAccuracy);",
      "info" : "SuperConstructorInvocation[3941-3983]:SuperConstructorInvocation[3941-3983]"
    }, {
      "left" : "if (maximalOrder < 2)",
      "right" : "if (maximalOrder < 2)",
      "info" : "IfStatement[3992-4097]:IfStatement[3992-4097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4014-4097]:Block[4014-4097]"
    }, {
      "left" : "throw new NumberIsTooSmallException(maximalOrder, 2, true);",
      "right" : "throw new NumberIsTooSmallException(maximalOrder, 2, true);",
      "info" : "ThrowStatement[4028-4087]:ThrowStatement[4028-4087]"
    }, {
      "left" : "this.maximalOrder = maximalOrder;",
      "right" : "this.maximalOrder = maximalOrder;",
      "info" : "ExpressionStatement[4106-4139]:ExpressionStatement[4106-4139]"
    }, {
      "left" : "this.allowed = AllowedSolution.ANY_SIDE;",
      "right" : "this.allowed = AllowedSolution.ANY_SIDE;",
      "info" : "ExpressionStatement[4148-4188]:ExpressionStatement[4148-4188]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4530-4536]:Modifier[4530-4536]"
    }, {
      "left" : "BracketingNthOrderBrentSolver",
      "right" : "BracketingNthOrderBrentSolver",
      "info" : "SimpleName[4537-4566]:SimpleName[4537-4566]"
    }, {
      "left" : "final double relativeAccuracy",
      "right" : "final double relativeAccuracy",
      "info" : "SingleVariableDeclaration[4567-4596]:SingleVariableDeclaration[4567-4596]"
    }, {
      "left" : "final double absoluteAccuracy",
      "right" : "final double absoluteAccuracy",
      "info" : "SingleVariableDeclaration[4639-4668]:SingleVariableDeclaration[4639-4668]"
    }, {
      "left" : "final double functionValueAccuracy",
      "right" : "final double functionValueAccuracy",
      "info" : "SingleVariableDeclaration[4711-4745]:SingleVariableDeclaration[4711-4745]"
    }, {
      "left" : "final int maximalOrder",
      "right" : "final int maximalOrder",
      "info" : "SingleVariableDeclaration[4788-4810]:SingleVariableDeclaration[4788-4810]"
    }, {
      "left" : "NumberIsTooSmallException",
      "right" : "NumberIsTooSmallException",
      "info" : "SimpleType[4827-4852]:SimpleType[4827-4852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4853-5139]:Block[4853-5139]"
    }, {
      "left" : "super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy);",
      "right" : "super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy);",
      "info" : "SuperConstructorInvocation[4863-4928]:SuperConstructorInvocation[4863-4928]"
    }, {
      "left" : "if (maximalOrder < 2)",
      "right" : "if (maximalOrder < 2)",
      "info" : "IfStatement[4937-5042]:IfStatement[4937-5042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4959-5042]:Block[4959-5042]"
    }, {
      "left" : "throw new NumberIsTooSmallException(maximalOrder, 2, true);",
      "right" : "throw new NumberIsTooSmallException(maximalOrder, 2, true);",
      "info" : "ThrowStatement[4973-5032]:ThrowStatement[4973-5032]"
    }, {
      "left" : "this.maximalOrder = maximalOrder;",
      "right" : "this.maximalOrder = maximalOrder;",
      "info" : "ExpressionStatement[5051-5084]:ExpressionStatement[5051-5084]"
    }, {
      "left" : "this.allowed = AllowedSolution.ANY_SIDE;",
      "right" : "this.allowed = AllowedSolution.ANY_SIDE;",
      "info" : "ExpressionStatement[5093-5133]:ExpressionStatement[5093-5133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5213-5219]:Modifier[5213-5219]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5220-5223]:PrimitiveType[5220-5223]"
    }, {
      "left" : "getMaximalOrder",
      "right" : "getMaximalOrder",
      "info" : "SimpleName[5224-5239]:SimpleName[5224-5239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5242-5278]:Block[5242-5278]"
    }, {
      "left" : "return maximalOrder;",
      "right" : "return maximalOrder;",
      "info" : "ReturnStatement[5252-5272]:ReturnStatement[5252-5272]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13704-13711]:Modifier[14106-14113]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[13712-13718]:PrimitiveType[14114-14120]"
    }, {
      "left" : "guessX",
      "right" : "guessX",
      "info" : "SimpleName[13719-13725]:SimpleName[14121-14127]"
    }, {
      "left" : "final double targetY",
      "right" : "final double targetY",
      "info" : "SingleVariableDeclaration[13726-13746]:SingleVariableDeclaration[14128-14148]"
    }, {
      "left" : "final double[] x",
      "right" : "final double[] x",
      "info" : "SingleVariableDeclaration[13748-13764]:SingleVariableDeclaration[14150-14166]"
    }, {
      "left" : "final double[] y",
      "right" : "final double[] y",
      "info" : "SingleVariableDeclaration[13766-13782]:SingleVariableDeclaration[14168-14184]"
    }, {
      "left" : "final int start",
      "right" : "final int start",
      "info" : "SingleVariableDeclaration[13810-13825]:SingleVariableDeclaration[14212-14227]"
    }, {
      "left" : "final int end",
      "right" : "final int end",
      "info" : "SingleVariableDeclaration[13827-13840]:SingleVariableDeclaration[14229-14242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13842-14325]:Block[14244-14727]"
    }, {
      "left" : "for (int i = start; i < end - 1; ++i)",
      "right" : "for (int i = start; i < end - 1; ++i)",
      "info" : "ForStatement[13917-14137]:ForStatement[14319-14539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13955-14137]:Block[14357-14539]"
    }, {
      "left" : "final int delta = i + 1 - start;",
      "right" : "final int delta = i + 1 - start;",
      "info" : "VariableDeclarationStatement[13969-14001]:VariableDeclarationStatement[14371-14403]"
    }, {
      "left" : "for (int j = end - 1; j > i; --j)",
      "right" : "for (int j = end - 1; j > i; --j)",
      "info" : "ForStatement[14014-14127]:ForStatement[14416-14529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14048-14127]:Block[14450-14529]"
    }, {
      "left" : "x[j] = (x[j] - x[j-1]) / (y[j] - y[j - delta]);",
      "right" : "x[j] = (x[j] - x[j-1]) / (y[j] - y[j - delta]);",
      "info" : "ExpressionStatement[14066-14113]:ExpressionStatement[14468-14515]"
    }, {
      "left" : "double x0 = 0;",
      "right" : "double x0 = 0;",
      "info" : "VariableDeclarationStatement[14178-14192]:VariableDeclarationStatement[14580-14594]"
    }, {
      "left" : "for (int j = end - 1; j >= start; --j)",
      "right" : "for (int j = end - 1; j >= start; --j)",
      "info" : "ForStatement[14201-14298]:ForStatement[14603-14700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14240-14298]:Block[14642-14700]"
    }, {
      "left" : "x0 = x[j] + x0 * (targetY - y[j]);",
      "right" : "x0 = x[j] + x0 * (targetY - y[j]);",
      "info" : "ExpressionStatement[14254-14288]:ExpressionStatement[14656-14690]"
    }, {
      "left" : "return x0;",
      "right" : "return x0;",
      "info" : "ReturnStatement[14308-14318]:ReturnStatement[14710-14720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14356-14362]:Modifier[14758-14764]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[14363-14369]:PrimitiveType[14765-14771]"
    }, {
      "left" : "solve",
      "right" : "solve",
      "info" : "SimpleName[14370-14375]:SimpleName[14772-14777]"
    }, {
      "left" : "int maxEval",
      "right" : "int maxEval",
      "info" : "SingleVariableDeclaration[14376-14387]:SingleVariableDeclaration[14778-14789]"
    }, {
      "left" : "UnivariateFunction f",
      "right" : "UnivariateFunction f",
      "info" : "SingleVariableDeclaration[14389-14409]:SingleVariableDeclaration[14791-14811]"
    }, {
      "left" : "double min",
      "right" : "double min",
      "info" : "SingleVariableDeclaration[14411-14421]:SingleVariableDeclaration[14813-14823]"
    }, {
      "left" : "double max",
      "right" : "double max",
      "info" : "SingleVariableDeclaration[14447-14457]:SingleVariableDeclaration[14849-14859]"
    }, {
      "left" : "AllowedSolution allowedSolution",
      "right" : "AllowedSolution allowedSolution",
      "info" : "SingleVariableDeclaration[14459-14490]:SingleVariableDeclaration[14861-14892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14492-14589]:Block[14894-14991]"
    }, {
      "left" : "this.allowed = allowedSolution;",
      "right" : "this.allowed = allowedSolution;",
      "info" : "ExpressionStatement[14502-14533]:ExpressionStatement[14904-14935]"
    }, {
      "left" : "return super.solve(maxEval, f, min, max);",
      "right" : "return super.solve(maxEval, f, min, max);",
      "info" : "ReturnStatement[14542-14583]:ReturnStatement[14944-14985]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14620-14626]:Modifier[15022-15028]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[14627-14633]:PrimitiveType[15029-15035]"
    }, {
      "left" : "solve",
      "right" : "solve",
      "info" : "SimpleName[14634-14639]:SimpleName[15036-15041]"
    }, {
      "left" : "int maxEval",
      "right" : "int maxEval",
      "info" : "SingleVariableDeclaration[14640-14651]:SingleVariableDeclaration[15042-15053]"
    }, {
      "left" : "UnivariateFunction f",
      "right" : "UnivariateFunction f",
      "info" : "SingleVariableDeclaration[14653-14673]:SingleVariableDeclaration[15055-15075]"
    }, {
      "left" : "double min",
      "right" : "double min",
      "info" : "SingleVariableDeclaration[14675-14685]:SingleVariableDeclaration[15077-15087]"
    }, {
      "left" : "double max",
      "right" : "double max",
      "info" : "SingleVariableDeclaration[14711-14721]:SingleVariableDeclaration[15113-15123]"
    }, {
      "left" : "double startValue",
      "right" : "double startValue",
      "info" : "SingleVariableDeclaration[14723-14740]:SingleVariableDeclaration[15125-15142]"
    }, {
      "left" : "AllowedSolution allowedSolution",
      "right" : "AllowedSolution allowedSolution",
      "info" : "SingleVariableDeclaration[14766-14797]:SingleVariableDeclaration[15168-15199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14799-14908]:Block[15201-15310]"
    }, {
      "left" : "this.allowed = allowedSolution;",
      "right" : "this.allowed = allowedSolution;",
      "info" : "ExpressionStatement[14809-14840]:ExpressionStatement[15211-15242]"
    }, {
      "left" : "return super.solve(maxEval, f, min, max, startValue);",
      "right" : "return super.solve(maxEval, f, min, max, startValue);",
      "info" : "ReturnStatement[14849-14902]:ReturnStatement[15251-15304]"
    } ]
  },
  "interFileMappings" : { }
}