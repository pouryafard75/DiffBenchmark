{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static <T extends Comparable<? super T>> AbstractComparableAssert<?, T> assertThat(T actual)",
      "right" : "public static <T extends Comparable<? super T>> AbstractComparableAssert<?, T> assertThat(T actual)",
      "info" : "MethodDeclaration[8074-8443]:MethodDeclaration[4825-5194]"
    }, {
      "left" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterable<? extends T> actual)",
      "right" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterable<? extends T> actual)",
      "info" : "MethodDeclaration[8447-8779]:MethodDeclaration[2857-3189]"
    }, {
      "left" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterator<? extends T> actual)",
      "right" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterator<? extends T> actual)",
      "info" : "MethodDeclaration[8783-9427]:MethodDeclaration[3193-3837]"
    }, {
      "left" : "public static AbstractPathAssert<?> assertThat(Path actual)",
      "right" : "public static AbstractPathAssert<?> assertThat(Path actual)",
      "info" : "MethodDeclaration[10532-10777]:MethodDeclaration[4157-4402]"
    }, {
      "left" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> assertThat(List<? extends T> actual)",
      "right" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> assertThat(List<? extends T> actual)",
      "info" : "MethodDeclaration[12749-13061]:MethodDeclaration[3841-4153]"
    }, {
      "left" : "public static <T extends AssertDelegateTarget> T assertThat(T assertion)",
      "right" : "public static <T extends AssertDelegateTarget> T assertThat(T assertion)",
      "info" : "MethodDeclaration[14154-16206]:MethodDeclaration[5198-7250]"
    }, {
      "left" : "public static <T> T assertThat(final AssertProvider<T> component)",
      "right" : "public static <T> T assertThat(final AssertProvider<T> component)",
      "info" : "MethodDeclaration[16210-16698]:MethodDeclaration[1950-2438]"
    }, {
      "left" : "public static <K, V> MapAssert<K, V> assertThat(Map<K, V> actual)",
      "right" : "public static <K, V> MapAssert<K, V> assertThat(Map<K, V> actual)",
      "info" : "MethodDeclaration[16996-17411]:MethodDeclaration[4406-4821]"
    }, {
      "left" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[18239-18556]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "protected Assertions()",
      "right" : "protected Assertions()",
      "info" : "MethodDeclaration[59961-60051]:MethodDeclaration[2442-2532]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8388-8443]:Block[5139-5194]"
    }, {
      "left" : "return new GenericComparableAssert<>(actual);",
      "right" : "return new GenericComparableAssert<>(actual);",
      "info" : "ReturnStatement[8394-8439]:ReturnStatement[5145-5190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8733-8779]:Block[3143-3189]"
    }, {
      "left" : "return new IterableAssert<>(actual);",
      "right" : "return new IterableAssert<>(actual);",
      "info" : "ReturnStatement[8739-8775]:ReturnStatement[3149-3185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9381-9427]:Block[3791-3837]"
    }, {
      "left" : "return new IterableAssert<>(actual);",
      "right" : "return new IterableAssert<>(actual);",
      "info" : "ReturnStatement[9387-9423]:ReturnStatement[3797-3833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10737-10777]:Block[4362-4402]"
    }, {
      "left" : "return new PathAssert(actual);",
      "right" : "return new PathAssert(actual);",
      "info" : "ReturnStatement[10743-10773]:ReturnStatement[4368-4398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13019-13061]:Block[4111-4153]"
    }, {
      "left" : "return new ListAssert<>(actual);",
      "right" : "return new ListAssert<>(actual);",
      "info" : "ReturnStatement[13025-13057]:ReturnStatement[4117-4149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16179-16206]:Block[7223-7250]"
    }, {
      "left" : "return assertion;",
      "right" : "return assertion;",
      "info" : "ReturnStatement[16185-16202]:ReturnStatement[7229-7246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16658-16698]:Block[2398-2438]"
    }, {
      "left" : "return component.assertThat();",
      "right" : "return component.assertThat();",
      "info" : "ReturnStatement[16664-16694]:ReturnStatement[2404-2434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17370-17411]:Block[4780-4821]"
    }, {
      "left" : "return new MapAssert<>(actual);",
      "right" : "return new MapAssert<>(actual);",
      "info" : "ReturnStatement[17376-17407]:ReturnStatement[4786-4817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18508-18556]:Block[2805-2853]"
    }, {
      "left" : "return new CharSequenceAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[18514-18552]:ReturnStatement[2811-2849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60049-60051]:Block[2530-2532]"
    } ]
  },
  "interFileMappings" : { }
}