{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "TypeDeclaration[456-57873]:TypeDeclaration[456-58287]"
    }, {
      "left" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "right" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "info" : "FieldDeclaration[1199-1295]:FieldDeclaration[1199-1295]"
    }, {
      "left" : "protected ObjectCodec _objectCodec;",
      "right" : "protected ObjectCodec _objectCodec;",
      "info" : "FieldDeclaration[1466-1669]:FieldDeclaration[1466-1669]"
    }, {
      "left" : "protected int _generatorFeatures;",
      "right" : "protected int _generatorFeatures;",
      "info" : "FieldDeclaration[1675-1928]:FieldDeclaration[1675-1928]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[1934-1960]:FieldDeclaration[1934-1960]"
    }, {
      "left" : "protected boolean _hasNativeTypeIds;",
      "right" : "protected boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[1966-2036]:FieldDeclaration[1966-2036]"
    }, {
      "left" : "protected boolean _hasNativeObjectIds;",
      "right" : "protected boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[2042-2114]:FieldDeclaration[2042-2114]"
    }, {
      "left" : "protected boolean _mayHaveNativeIds;",
      "right" : "protected boolean _mayHaveNativeIds;",
      "info" : "FieldDeclaration[2120-2190]:FieldDeclaration[2120-2190]"
    }, {
      "left" : "protected Segment _first;",
      "right" : "protected Segment _first;",
      "info" : "FieldDeclaration[2534-2626]:FieldDeclaration[2574-2666]"
    }, {
      "left" : "protected Segment _last;",
      "right" : "protected Segment _last;",
      "info" : "FieldDeclaration[2632-2758]:FieldDeclaration[2672-2798]"
    }, {
      "left" : "protected int _appendAt;",
      "right" : "protected int _appendAt;",
      "info" : "FieldDeclaration[2768-2844]:FieldDeclaration[2808-2884]"
    }, {
      "left" : "protected Object _typeId;",
      "right" : "protected Object _typeId;",
      "info" : "FieldDeclaration[2850-3009]:FieldDeclaration[2890-3049]"
    }, {
      "left" : "protected Object _objectId;",
      "right" : "protected Object _objectId;",
      "info" : "FieldDeclaration[3015-3178]:FieldDeclaration[3055-3218]"
    }, {
      "left" : "protected boolean _hasNativeId = false;",
      "right" : "protected boolean _hasNativeId = false;",
      "info" : "FieldDeclaration[3184-3304]:FieldDeclaration[3224-3344]"
    }, {
      "left" : "protected JsonWriteContext _writeContext;",
      "right" : "protected JsonWriteContext _writeContext;",
      "info" : "FieldDeclaration[3474-3515]:FieldDeclaration[3514-3555]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec)",
      "right" : "public TokenBuffer(ObjectCodec codec)",
      "info" : "MethodDeclaration[3683-4084]:MethodDeclaration[3723-4124]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "right" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "info" : "MethodDeclaration[4090-4901]:MethodDeclaration[4130-4941]"
    }, {
      "left" : "public TokenBuffer(JsonParser p)",
      "right" : "public TokenBuffer(JsonParser p)",
      "info" : "MethodDeclaration[4907-5004]:MethodDeclaration[4947-5044]"
    }, {
      "left" : "public TokenBuffer(JsonParser p, DeserializationContext ctxt)",
      "right" : "public TokenBuffer(JsonParser p, DeserializationContext ctxt)",
      "info" : "MethodDeclaration[5010-5552]:MethodDeclaration[5050-5727]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[5558-5713]:MethodDeclaration[5882-6002]"
    }, {
      "left" : "public JsonParser asParser()",
      "right" : "public JsonParser asParser()",
      "info" : "MethodDeclaration[5719-6235]:MethodDeclaration[6008-6524]"
    }, {
      "left" : "public JsonParser asParser(ObjectCodec codec)",
      "right" : "public JsonParser asParser(ObjectCodec codec)",
      "info" : "MethodDeclaration[6241-6919]:MethodDeclaration[6530-7208]"
    }, {
      "left" : "public JsonParser asParser(JsonParser src)",
      "right" : "public JsonParser asParser(JsonParser src)",
      "info" : "MethodDeclaration[6925-7262]:MethodDeclaration[7214-7551]"
    }, {
      "left" : "public JsonToken firstToken()",
      "right" : "public JsonToken firstToken()",
      "info" : "MethodDeclaration[7444-7577]:MethodDeclaration[7733-7866]"
    }, {
      "left" : "public TokenBuffer append(TokenBuffer other) throws IOException",
      "right" : "public TokenBuffer append(TokenBuffer other) throws IOException",
      "info" : "MethodDeclaration[7798-8615]:MethodDeclaration[8087-8904]"
    }, {
      "left" : "public void serialize(JsonGenerator gen) throws IOException",
      "right" : "public void serialize(JsonGenerator gen) throws IOException",
      "info" : "MethodDeclaration[8625-13574]:MethodDeclaration[8914-13863]"
    }, {
      "left" : "public TokenBuffer deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
      "right" : "public TokenBuffer deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
      "info" : "MethodDeclaration[13580-14538]:MethodDeclaration[13869-14827]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[14544-16123]:MethodDeclaration[14833-16412]"
    }, {
      "left" : "private final void _appendNativeIds(StringBuilder sb)",
      "right" : "private final void _appendNativeIds(StringBuilder sb)",
      "info" : "MethodDeclaration[16129-16550]:MethodDeclaration[16418-16839]"
    }, {
      "left" : "public JsonGenerator enable(Feature f)",
      "right" : "public JsonGenerator enable(Feature f)",
      "info" : "MethodDeclaration[16755-16879]:MethodDeclaration[17044-17168]"
    }, {
      "left" : "public JsonGenerator disable(Feature f)",
      "right" : "public JsonGenerator disable(Feature f)",
      "info" : "MethodDeclaration[16885-17011]:MethodDeclaration[17174-17300]"
    }, {
      "left" : "public boolean isEnabled(Feature f)",
      "right" : "public boolean isEnabled(Feature f)",
      "info" : "MethodDeclaration[17098-17211]:MethodDeclaration[17387-17500]"
    }, {
      "left" : "public int getFeatureMask()",
      "right" : "public int getFeatureMask()",
      "info" : "MethodDeclaration[17217-17301]:MethodDeclaration[17506-17590]"
    }, {
      "left" : "public JsonGenerator setFeatureMask(int mask)",
      "right" : "public JsonGenerator setFeatureMask(int mask)",
      "info" : "MethodDeclaration[17307-17430]:MethodDeclaration[17596-17719]"
    }, {
      "left" : "public JsonGenerator useDefaultPrettyPrinter()",
      "right" : "public JsonGenerator useDefaultPrettyPrinter()",
      "info" : "MethodDeclaration[17440-17563]:MethodDeclaration[17729-17852]"
    }, {
      "left" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "right" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "info" : "MethodDeclaration[17569-17684]:MethodDeclaration[17858-17973]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[17690-17758]:MethodDeclaration[17979-18047]"
    }, {
      "left" : "public final JsonWriteContext getOutputContext()",
      "right" : "public final JsonWriteContext getOutputContext()",
      "info" : "MethodDeclaration[17764-17852]:MethodDeclaration[18053-18141]"
    }, {
      "left" : "public boolean canWriteBinaryNatively()",
      "right" : "public boolean canWriteBinaryNatively()",
      "info" : "MethodDeclaration[18068-18230]:MethodDeclaration[18357-18519]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[18447-18513]:MethodDeclaration[18736-18802]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[18519-18603]:MethodDeclaration[18808-18892]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[18609-18668]:MethodDeclaration[18898-18957]"
    }, {
      "left" : "public final void writeStartArray() throws IOException",
      "right" : "public final void writeStartArray() throws IOException",
      "info" : "MethodDeclaration[18881-19066]:MethodDeclaration[19170-19355]"
    }, {
      "left" : "public final void writeEndArray() throws IOException",
      "right" : "public final void writeEndArray() throws IOException",
      "info" : "MethodDeclaration[19072-19388]:MethodDeclaration[19361-19677]"
    }, {
      "left" : "public final void writeStartObject() throws IOException",
      "right" : "public final void writeStartObject() throws IOException",
      "info" : "MethodDeclaration[19394-19582]:MethodDeclaration[19683-19871]"
    }, {
      "left" : "public final void writeEndObject() throws IOException",
      "right" : "public final void writeEndObject() throws IOException",
      "info" : "MethodDeclaration[19588-19906]:MethodDeclaration[19877-20195]"
    }, {
      "left" : "public final void writeFieldName(String name) throws IOException",
      "right" : "public final void writeFieldName(String name) throws IOException",
      "info" : "MethodDeclaration[19912-20091]:MethodDeclaration[20201-20380]"
    }, {
      "left" : "public void writeFieldName(SerializableString name) throws IOException",
      "right" : "public void writeFieldName(SerializableString name) throws IOException",
      "info" : "MethodDeclaration[20097-20293]:MethodDeclaration[20386-20582]"
    }, {
      "left" : "public void writeString(String text) throws IOException",
      "right" : "public void writeString(String text) throws IOException",
      "info" : "MethodDeclaration[20507-20715]:MethodDeclaration[20796-21004]"
    }, {
      "left" : "public void writeString(char[] text, int offset, int len) throws IOException",
      "right" : "public void writeString(char[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[20721-20871]:MethodDeclaration[21010-21160]"
    }, {
      "left" : "public void writeString(SerializableString text) throws IOException",
      "right" : "public void writeString(SerializableString text) throws IOException",
      "info" : "MethodDeclaration[20877-21097]:MethodDeclaration[21166-21386]"
    }, {
      "left" : "public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException",
      "right" : "public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException",
      "info" : "MethodDeclaration[21107-21325]:MethodDeclaration[21396-21614]"
    }, {
      "left" : "public void writeUTF8String(byte[] text, int offset, int length) throws IOException",
      "right" : "public void writeUTF8String(byte[] text, int offset, int length) throws IOException",
      "info" : "MethodDeclaration[21331-21546]:MethodDeclaration[21620-21835]"
    }, {
      "left" : "public void writeRaw(String text) throws IOException",
      "right" : "public void writeRaw(String text) throws IOException",
      "info" : "MethodDeclaration[21552-21665]:MethodDeclaration[21841-21954]"
    }, {
      "left" : "public void writeRaw(String text, int offset, int len) throws IOException",
      "right" : "public void writeRaw(String text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[21671-21805]:MethodDeclaration[21960-22094]"
    }, {
      "left" : "public void writeRaw(SerializableString text) throws IOException",
      "right" : "public void writeRaw(SerializableString text) throws IOException",
      "info" : "MethodDeclaration[21811-21936]:MethodDeclaration[22100-22225]"
    }, {
      "left" : "public void writeRaw(char[] text, int offset, int len) throws IOException",
      "right" : "public void writeRaw(char[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[21946-22080]:MethodDeclaration[22235-22369]"
    }, {
      "left" : "public void writeRaw(char c) throws IOException",
      "right" : "public void writeRaw(char c) throws IOException",
      "info" : "MethodDeclaration[22086-22194]:MethodDeclaration[22375-22483]"
    }, {
      "left" : "public void writeRawValue(String text) throws IOException",
      "right" : "public void writeRawValue(String text) throws IOException",
      "info" : "MethodDeclaration[22200-22349]:MethodDeclaration[22489-22638]"
    }, {
      "left" : "public void writeRawValue(String text, int offset, int len) throws IOException",
      "right" : "public void writeRawValue(String text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[22355-22640]:MethodDeclaration[22644-22929]"
    }, {
      "left" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
      "right" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[22646-22827]:MethodDeclaration[22935-23116]"
    }, {
      "left" : "public void writeNumber(short i) throws IOException",
      "right" : "public void writeNumber(short i) throws IOException",
      "info" : "MethodDeclaration[23045-23181]:MethodDeclaration[23334-23470]"
    }, {
      "left" : "public void writeNumber(int i) throws IOException",
      "right" : "public void writeNumber(int i) throws IOException",
      "info" : "MethodDeclaration[23187-23323]:MethodDeclaration[23476-23612]"
    }, {
      "left" : "public void writeNumber(long l) throws IOException",
      "right" : "public void writeNumber(long l) throws IOException",
      "info" : "MethodDeclaration[23329-23463]:MethodDeclaration[23618-23752]"
    }, {
      "left" : "public void writeNumber(double d) throws IOException",
      "right" : "public void writeNumber(double d) throws IOException",
      "info" : "MethodDeclaration[23469-23609]:MethodDeclaration[23758-23898]"
    }, {
      "left" : "public void writeNumber(float f) throws IOException",
      "right" : "public void writeNumber(float f) throws IOException",
      "info" : "MethodDeclaration[23615-23753]:MethodDeclaration[23904-24042]"
    }, {
      "left" : "public void writeNumber(BigDecimal dec) throws IOException",
      "right" : "public void writeNumber(BigDecimal dec) throws IOException",
      "info" : "MethodDeclaration[23759-23974]:MethodDeclaration[24048-24263]"
    }, {
      "left" : "public void writeNumber(BigInteger v) throws IOException",
      "right" : "public void writeNumber(BigInteger v) throws IOException",
      "info" : "MethodDeclaration[23980-24187]:MethodDeclaration[24269-24476]"
    }, {
      "left" : "public void writeNumber(String encodedValue) throws IOException",
      "right" : "public void writeNumber(String encodedValue) throws IOException",
      "info" : "MethodDeclaration[24193-24479]:MethodDeclaration[24482-24768]"
    }, {
      "left" : "public void writeBoolean(boolean state) throws IOException",
      "right" : "public void writeBoolean(boolean state) throws IOException",
      "info" : "MethodDeclaration[24485-24636]:MethodDeclaration[24774-24925]"
    }, {
      "left" : "public void writeNull() throws IOException",
      "right" : "public void writeNull() throws IOException",
      "info" : "MethodDeclaration[24642-24745]:MethodDeclaration[24931-25034]"
    }, {
      "left" : "public void writeObject(Object value) throws IOException",
      "right" : "public void writeObject(Object value) throws IOException",
      "info" : "MethodDeclaration[24964-25767]:MethodDeclaration[25253-26056]"
    }, {
      "left" : "public void writeTree(TreeNode node) throws IOException",
      "right" : "public void writeTree(TreeNode node) throws IOException",
      "info" : "MethodDeclaration[25773-26168]:MethodDeclaration[26062-26457]"
    }, {
      "left" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException",
      "right" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException",
      "info" : "MethodDeclaration[26364-26953]:MethodDeclaration[26653-27242]"
    }, {
      "left" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "right" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "info" : "MethodDeclaration[26959-27398]:MethodDeclaration[27248-27687]"
    }, {
      "left" : "public boolean canWriteTypeId()",
      "right" : "public boolean canWriteTypeId()",
      "info" : "MethodDeclaration[27598-27685]:MethodDeclaration[27887-27974]"
    }, {
      "left" : "public boolean canWriteObjectId()",
      "right" : "public boolean canWriteObjectId()",
      "info" : "MethodDeclaration[27691-27782]:MethodDeclaration[27980-28071]"
    }, {
      "left" : "public void writeTypeId(Object id)",
      "right" : "public void writeTypeId(Object id)",
      "info" : "MethodDeclaration[27792-27899]:MethodDeclaration[28081-28188]"
    }, {
      "left" : "public void writeObjectId(Object id)",
      "right" : "public void writeObjectId(Object id)",
      "info" : "MethodDeclaration[27909-28020]:MethodDeclaration[28198-28309]"
    }, {
      "left" : "public void copyCurrentEvent(JsonParser p) throws IOException",
      "right" : "public void copyCurrentEvent(JsonParser p) throws IOException",
      "info" : "MethodDeclaration[28225-30677]:MethodDeclaration[28514-31091]"
    }, {
      "left" : "public void copyCurrentStructure(JsonParser jp) throws IOException",
      "right" : "public void copyCurrentStructure(JsonParser jp) throws IOException",
      "info" : "MethodDeclaration[30687-31789]:MethodDeclaration[31101-32203]"
    }, {
      "left" : "private final void _checkNativeIds(JsonParser jp) throws IOException",
      "right" : "private final void _checkNativeIds(JsonParser jp) throws IOException",
      "info" : "MethodDeclaration[31800-32070]:MethodDeclaration[32214-32484]"
    }, {
      "left" : "protected final void _append(JsonToken type)",
      "right" : "protected final void _append(JsonToken type)",
      "info" : "MethodDeclaration[32248-32619]:MethodDeclaration[32662-33033]"
    }, {
      "left" : "protected final void _append(JsonToken type, Object value)",
      "right" : "protected final void _append(JsonToken type, Object value)",
      "info" : "MethodDeclaration[32625-32995]:MethodDeclaration[33039-33409]"
    }, {
      "left" : "protected final void _appendRaw(int rawType, Object value)",
      "right" : "protected final void _appendRaw(int rawType, Object value)",
      "info" : "MethodDeclaration[33001-33383]:MethodDeclaration[33415-33797]"
    }, {
      "left" : "protected void _reportUnsupportedOperation()",
      "right" : "protected void _reportUnsupportedOperation()",
      "info" : "MethodDeclaration[33389-33554]:MethodDeclaration[33803-33968]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "TypeDeclaration[33734-49990]:TypeDeclaration[34148-50404]"
    }, {
      "left" : "protected ObjectCodec _codec;",
      "right" : "protected ObjectCodec _codec;",
      "info" : "FieldDeclaration[34003-34032]:FieldDeclaration[34417-34446]"
    }, {
      "left" : "protected final boolean _hasNativeTypeIds;",
      "right" : "protected final boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[34042-34130]:FieldDeclaration[34456-34544]"
    }, {
      "left" : "protected final boolean _hasNativeObjectIds;",
      "right" : "protected final boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[34140-34230]:FieldDeclaration[34554-34644]"
    }, {
      "left" : "protected final boolean _hasNativeIds;",
      "right" : "protected final boolean _hasNativeIds;",
      "info" : "FieldDeclaration[34240-34278]:FieldDeclaration[34654-34692]"
    }, {
      "left" : "protected Segment _segment;",
      "right" : "protected Segment _segment;",
      "info" : "FieldDeclaration[34481-34568]:FieldDeclaration[34895-34982]"
    }, {
      "left" : "protected int _segmentPtr;",
      "right" : "protected int _segmentPtr;",
      "info" : "FieldDeclaration[34578-34687]:FieldDeclaration[34992-35101]"
    }, {
      "left" : "protected JsonReadContext _parsingContext;",
      "right" : "protected JsonReadContext _parsingContext;",
      "info" : "FieldDeclaration[34697-34890]:FieldDeclaration[35111-35304]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[34908-34934]:FieldDeclaration[35322-35348]"
    }, {
      "left" : "protected transient ByteArrayBuilder _byteBuilder;",
      "right" : "protected transient ByteArrayBuilder _byteBuilder;",
      "info" : "FieldDeclaration[34944-34994]:FieldDeclaration[35358-35408]"
    }, {
      "left" : "protected JsonLocation _location = null;",
      "right" : "protected JsonLocation _location = null;",
      "info" : "FieldDeclaration[35004-35044]:FieldDeclaration[35418-35458]"
    }, {
      "left" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "right" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "info" : "MethodDeclaration[35252-35781]:MethodDeclaration[35666-36195]"
    }, {
      "left" : "public void setLocation(JsonLocation l)",
      "right" : "public void setLocation(JsonLocation l)",
      "info" : "MethodDeclaration[35791-35869]:MethodDeclaration[36205-36283]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[35887-35953]:MethodDeclaration[36301-36367]"
    }, {
      "left" : "public void setCodec(ObjectCodec c)",
      "right" : "public void setCodec(ObjectCodec c)",
      "info" : "MethodDeclaration[35963-36032]:MethodDeclaration[36377-36446]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[36042-36174]:MethodDeclaration[36456-36588]"
    }, {
      "left" : "public JsonToken peekNextToken() throws IOException",
      "right" : "public JsonToken peekNextToken() throws IOException",
      "info" : "MethodDeclaration[36394-36834]:MethodDeclaration[36808-37248]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[37048-37190]:MethodDeclaration[37462-37604]"
    }, {
      "left" : "public JsonToken nextToken() throws IOException",
      "right" : "public JsonToken nextToken() throws IOException",
      "info" : "MethodDeclaration[37401-39031]:MethodDeclaration[37815-39445]"
    }, {
      "left" : "public String nextFieldName() throws IOException",
      "right" : "public String nextFieldName() throws IOException",
      "info" : "MethodDeclaration[39041-39753]:MethodDeclaration[39455-40167]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[39763-39826]:MethodDeclaration[40177-40240]"
    }, {
      "left" : "public JsonStreamContext getParsingContext()",
      "right" : "public JsonStreamContext getParsingContext()",
      "info" : "MethodDeclaration[40035-40125]:MethodDeclaration[40449-40539]"
    }, {
      "left" : "public JsonLocation getTokenLocation()",
      "right" : "public JsonLocation getTokenLocation()",
      "info" : "MethodDeclaration[40135-40224]:MethodDeclaration[40549-40638]"
    }, {
      "left" : "public JsonLocation getCurrentLocation()",
      "right" : "public JsonLocation getCurrentLocation()",
      "info" : "MethodDeclaration[40234-40374]:MethodDeclaration[40648-40788]"
    }, {
      "left" : "public String getCurrentName()",
      "right" : "public String getCurrentName()",
      "info" : "MethodDeclaration[40384-40812]:MethodDeclaration[40798-41226]"
    }, {
      "left" : "public void overrideCurrentName(String name)",
      "right" : "public void overrideCurrentName(String name)",
      "info" : "MethodDeclaration[40822-41351]:MethodDeclaration[41236-41765]"
    }, {
      "left" : "public String getText()",
      "right" : "public String getText()",
      "info" : "MethodDeclaration[41578-42381]:MethodDeclaration[41992-42795]"
    }, {
      "left" : "public char[] getTextCharacters()",
      "right" : "public char[] getTextCharacters()",
      "info" : "MethodDeclaration[42391-42551]:MethodDeclaration[42805-42965]"
    }, {
      "left" : "public int getTextLength()",
      "right" : "public int getTextLength()",
      "info" : "MethodDeclaration[42561-42706]:MethodDeclaration[42975-43120]"
    }, {
      "left" : "public int getTextOffset()",
      "right" : "public int getTextOffset()",
      "info" : "MethodDeclaration[42716-42774]:MethodDeclaration[43130-43188]"
    }, {
      "left" : "public boolean hasTextCharacters()",
      "right" : "public boolean hasTextCharacters()",
      "info" : "MethodDeclaration[42784-42929]:MethodDeclaration[43198-43343]"
    }, {
      "left" : "public BigInteger getBigIntegerValue() throws IOException",
      "right" : "public BigInteger getBigIntegerValue() throws IOException",
      "info" : "MethodDeclaration[43167-43662]:MethodDeclaration[43581-44076]"
    }, {
      "left" : "public BigDecimal getDecimalValue() throws IOException",
      "right" : "public BigDecimal getDecimalValue() throws IOException",
      "info" : "MethodDeclaration[43672-44250]:MethodDeclaration[44086-44664]"
    }, {
      "left" : "public double getDoubleValue() throws IOException",
      "right" : "public double getDoubleValue() throws IOException",
      "info" : "MethodDeclaration[44260-44390]:MethodDeclaration[44674-44804]"
    }, {
      "left" : "public float getFloatValue() throws IOException",
      "right" : "public float getFloatValue() throws IOException",
      "info" : "MethodDeclaration[44400-44527]:MethodDeclaration[44814-44941]"
    }, {
      "left" : "public int getIntValue() throws IOException",
      "right" : "public int getIntValue() throws IOException",
      "info" : "MethodDeclaration[44537-44840]:MethodDeclaration[44951-45254]"
    }, {
      "left" : "public long getLongValue() throws IOException",
      "right" : "public long getLongValue() throws IOException",
      "info" : "MethodDeclaration[44850-44974]:MethodDeclaration[45264-45388]"
    }, {
      "left" : "public NumberType getNumberType() throws IOException",
      "right" : "public NumberType getNumberType() throws IOException",
      "info" : "MethodDeclaration[44984-45612]:MethodDeclaration[45398-46026]"
    }, {
      "left" : "public final Number getNumberValue() throws IOException",
      "right" : "public final Number getNumberValue() throws IOException",
      "info" : "MethodDeclaration[45622-46594]:MethodDeclaration[46036-47008]"
    }, {
      "left" : "public Object getEmbeddedObject()",
      "right" : "public Object getEmbeddedObject()",
      "info" : "MethodDeclaration[46822-47038]:MethodDeclaration[47236-47452]"
    }, {
      "left" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "right" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "info" : "MethodDeclaration[47048-48266]:MethodDeclaration[47462-48680]"
    }, {
      "left" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out) throws IOException",
      "right" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out) throws IOException",
      "info" : "MethodDeclaration[48276-48610]:MethodDeclaration[48690-49024]"
    }, {
      "left" : "public boolean canReadObjectId()",
      "right" : "public boolean canReadObjectId()",
      "info" : "MethodDeclaration[48814-48916]:MethodDeclaration[49228-49330]"
    }, {
      "left" : "public boolean canReadTypeId()",
      "right" : "public boolean canReadTypeId()",
      "info" : "MethodDeclaration[48926-49024]:MethodDeclaration[49340-49438]"
    }, {
      "left" : "public Object getTypeId()",
      "right" : "public Object getTypeId()",
      "info" : "MethodDeclaration[49034-49142]:MethodDeclaration[49448-49556]"
    }, {
      "left" : "public Object getObjectId()",
      "right" : "public Object getObjectId()",
      "info" : "MethodDeclaration[49152-49264]:MethodDeclaration[49566-49678]"
    }, {
      "left" : "protected final Object _currentObject()",
      "right" : "protected final Object _currentObject()",
      "info" : "MethodDeclaration[49470-49567]:MethodDeclaration[49884-49981]"
    }, {
      "left" : "protected final void _checkIsNumber() throws JsonParseException",
      "right" : "protected final void _checkIsNumber() throws JsonParseException",
      "info" : "MethodDeclaration[49577-49861]:MethodDeclaration[49991-50275]"
    }, {
      "left" : "protected void _handleEOF() throws JsonParseException",
      "right" : "protected void _handleEOF() throws JsonParseException",
      "info" : "MethodDeclaration[49871-49984]:MethodDeclaration[50285-50398]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "TypeDeclaration[50000-57871]:TypeDeclaration[50414-58285]"
    }, {
      "left" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "right" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "info" : "FieldDeclaration[50393-50441]:FieldDeclaration[50807-50855]"
    }, {
      "left" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "right" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "info" : "FieldDeclaration[50459-50660]:FieldDeclaration[50873-51074]"
    }, {
      "left" : "protected Segment _next;",
      "right" : "protected Segment _next;",
      "info" : "FieldDeclaration[51055-51079]:FieldDeclaration[51469-51493]"
    }, {
      "left" : "protected long _tokenTypes;",
      "right" : "protected long _tokenTypes;",
      "info" : "FieldDeclaration[51121-51299]:FieldDeclaration[51535-51713]"
    }, {
      "left" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "right" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "info" : "FieldDeclaration[51344-51410]:FieldDeclaration[51758-51824]"
    }, {
      "left" : "protected TreeMap<Integer,Object> _nativeIds;",
      "right" : "protected TreeMap<Integer,Object> _nativeIds;",
      "info" : "FieldDeclaration[51420-51570]:FieldDeclaration[51834-51984]"
    }, {
      "left" : "public Segment()",
      "right" : "public Segment()",
      "info" : "MethodDeclaration[51588-51608]:MethodDeclaration[52002-52022]"
    }, {
      "left" : "public JsonToken type(int index)",
      "right" : "public JsonToken type(int index)",
      "info" : "MethodDeclaration[51646-51894]:MethodDeclaration[52060-52308]"
    }, {
      "left" : "public int rawType(int index)",
      "right" : "public int rawType(int index)",
      "info" : "MethodDeclaration[51904-52127]:MethodDeclaration[52318-52541]"
    }, {
      "left" : "public Object get(int index)",
      "right" : "public Object get(int index)",
      "info" : "MethodDeclaration[52145-52220]:MethodDeclaration[52559-52634]"
    }, {
      "left" : "public Segment next()",
      "right" : "public Segment next()",
      "info" : "MethodDeclaration[52230-52269]:MethodDeclaration[52644-52683]"
    }, {
      "left" : "public boolean hasIds()",
      "right" : "public boolean hasIds()",
      "info" : "MethodDeclaration[52279-52478]:MethodDeclaration[52693-52892]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType)",
      "right" : "public Segment append(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[52531-52830]:MethodDeclaration[52945-53244]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[52840-53223]:MethodDeclaration[53254-53637]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[53233-53560]:MethodDeclaration[53647-53974]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[53570-53981]:MethodDeclaration[53984-54395]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[53991-54324]:MethodDeclaration[54405-54738]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[54334-54751]:MethodDeclaration[54748-55165]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType)",
      "right" : "private void set(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[54761-55169]:MethodDeclaration[55175-55583]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[55179-55521]:MethodDeclaration[55593-55935]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value)",
      "right" : "private void set(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[55531-55821]:MethodDeclaration[55945-56235]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[55831-56223]:MethodDeclaration[56245-56637]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value)",
      "right" : "private void set(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[56233-56520]:MethodDeclaration[56647-56934]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "right" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[56530-56903]:MethodDeclaration[56944-57317]"
    }, {
      "left" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "right" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[56913-57346]:MethodDeclaration[57327-57760]"
    }, {
      "left" : "public Object findObjectId(int index)",
      "right" : "public Object findObjectId(int index)",
      "info" : "MethodDeclaration[57356-57539]:MethodDeclaration[57770-57953]"
    }, {
      "left" : "public Object findTypeId(int index)",
      "right" : "public Object findTypeId(int index)",
      "info" : "MethodDeclaration[57557-57736]:MethodDeclaration[57971-58150]"
    }, {
      "left" : "private final int _typeIdIndex(int i)",
      "right" : "private final int _typeIdIndex(int i)",
      "info" : "MethodDeclaration[57746-57799]:MethodDeclaration[58160-58213]"
    }, {
      "left" : "private final int _objectIdIndex(int i)",
      "right" : "private final int _objectIdIndex(int i)",
      "info" : "MethodDeclaration[57808-57865]:MethodDeclaration[58222-58279]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4049-4084]:Block[4089-4124]"
    }, {
      "left" : "this(codec, false);",
      "right" : "this(codec, false);",
      "info" : "ConstructorInvocation[4059-4078]:ConstructorInvocation[4099-4118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4477-4901]:Block[4517-4941]"
    }, {
      "left" : "_objectCodec = codec;",
      "right" : "_objectCodec = codec;",
      "info" : "ExpressionStatement[4487-4508]:ExpressionStatement[4527-4548]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[4517-4565]:ExpressionStatement[4557-4605]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[4574-4631]:ExpressionStatement[4614-4671]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[4685-4716]:ExpressionStatement[4725-4756]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[4725-4739]:ExpressionStatement[4765-4779]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeIds;",
      "right" : "_hasNativeTypeIds = hasNativeIds;",
      "info" : "ExpressionStatement[4748-4781]:ExpressionStatement[4788-4821]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeIds;",
      "right" : "_hasNativeObjectIds = hasNativeIds;",
      "info" : "ExpressionStatement[4790-4825]:ExpressionStatement[4830-4865]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[4835-4895]:ExpressionStatement[4875-4935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4974-5004]:Block[5014-5044]"
    }, {
      "left" : "this(p, null);",
      "right" : "this(p, null);",
      "info" : "ConstructorInvocation[4984-4998]:ConstructorInvocation[5024-5038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5110-5552]:Block[5150-5727]"
    }, {
      "left" : "_objectCodec = p.getCodec();",
      "right" : "_objectCodec = p.getCodec();",
      "info" : "ExpressionStatement[5120-5148]:ExpressionStatement[5160-5188]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[5157-5205]:ExpressionStatement[5197-5245]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[5214-5271]:ExpressionStatement[5254-5311]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[5325-5356]:ExpressionStatement[5365-5396]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[5365-5379]:ExpressionStatement[5405-5419]"
    }, {
      "left" : "_hasNativeTypeIds = p.canReadTypeId();",
      "right" : "_hasNativeTypeIds = p.canReadTypeId();",
      "info" : "ExpressionStatement[5388-5426]:ExpressionStatement[5428-5466]"
    }, {
      "left" : "_hasNativeObjectIds = p.canReadObjectId();",
      "right" : "_hasNativeObjectIds = p.canReadObjectId();",
      "info" : "ExpressionStatement[5435-5477]:ExpressionStatement[5475-5517]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_forceBigDecimal = (ctxt == null) ? false\n                : ctxt.isEnabled(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);",
      "info" : "ExpressionStatement[5486-5546]:ExpressionStatement[5595-5721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5632-5713]:Block[5921-6002]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[5642-5707]:ReturnStatement[5931-5996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6189-6235]:Block[6478-6524]"
    }, {
      "left" : "return asParser(_objectCodec);",
      "right" : "return asParser(_objectCodec);",
      "info" : "ReturnStatement[6199-6229]:ReturnStatement[6488-6518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6830-6919]:Block[7119-7208]"
    }, {
      "left" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "ReturnStatement[6840-6913]:ReturnStatement[7129-7202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7095-7262]:Block[7384-7551]"
    }, {
      "left" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "VariableDeclarationStatement[7105-7191]:VariableDeclarationStatement[7394-7480]"
    }, {
      "left" : "p.setLocation(src.getTokenLocation());",
      "right" : "p.setLocation(src.getTokenLocation());",
      "info" : "ExpressionStatement[7200-7238]:ExpressionStatement[7489-7527]"
    }, {
      "left" : "return p;",
      "right" : "return p;",
      "info" : "ReturnStatement[7247-7256]:ReturnStatement[7536-7545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7474-7577]:Block[7763-7866]"
    }, {
      "left" : "if (_first != null)",
      "right" : "if (_first != null)",
      "info" : "IfStatement[7484-7550]:IfStatement[7773-7839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7504-7550]:Block[7793-7839]"
    }, {
      "left" : "return _first.type(0);",
      "right" : "return _first.type(0);",
      "info" : "ReturnStatement[7518-7540]:ReturnStatement[7807-7829]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7559-7571]:ReturnStatement[7848-7860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8111-8615]:Block[8400-8904]"
    }, {
      "left" : "if (!_hasNativeTypeIds)",
      "right" : "if (!_hasNativeTypeIds)",
      "info" : "IfStatement[8183-8276]:IfStatement[8472-8565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8207-8276]:Block[8496-8565]"
    }, {
      "left" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "right" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "info" : "ExpressionStatement[8223-8266]:ExpressionStatement[8512-8555]"
    }, {
      "left" : "if (!_hasNativeObjectIds)",
      "right" : "if (!_hasNativeObjectIds)",
      "info" : "IfStatement[8285-8382]:IfStatement[8574-8671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8311-8382]:Block[8600-8671]"
    }, {
      "left" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "right" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "info" : "ExpressionStatement[8325-8372]:ExpressionStatement[8614-8661]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[8391-8451]:ExpressionStatement[8680-8740]"
    }, {
      "left" : "JsonParser p = other.asParser();",
      "right" : "JsonParser p = other.asParser();",
      "info" : "VariableDeclarationStatement[8469-8501]:VariableDeclarationStatement[8758-8790]"
    }, {
      "left" : "while (p.nextToken() != null)",
      "right" : "while (p.nextToken() != null)",
      "info" : "WhileStatement[8510-8588]:WhileStatement[8799-8877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8540-8588]:Block[8829-8877]"
    }, {
      "left" : "copyCurrentStructure(p);",
      "right" : "copyCurrentStructure(p);",
      "info" : "ExpressionStatement[8554-8578]:ExpressionStatement[8843-8867]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8597-8609]:ReturnStatement[8886-8898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9088-13574]:Block[9377-13863]"
    }, {
      "left" : "Segment segment = _first;",
      "right" : "Segment segment = _first;",
      "info" : "VariableDeclarationStatement[9098-9123]:VariableDeclarationStatement[9387-9412]"
    }, {
      "left" : "int ptr = -1;",
      "right" : "int ptr = -1;",
      "info" : "VariableDeclarationStatement[9132-9145]:VariableDeclarationStatement[9421-9434]"
    }, {
      "left" : "final boolean checkIds = _mayHaveNativeIds;",
      "right" : "final boolean checkIds = _mayHaveNativeIds;",
      "info" : "VariableDeclarationStatement[9155-9198]:VariableDeclarationStatement[9444-9487]"
    }, {
      "left" : "boolean hasIds = checkIds && (segment.hasIds());",
      "right" : "boolean hasIds = checkIds && (segment.hasIds());",
      "info" : "VariableDeclarationStatement[9207-9255]:VariableDeclarationStatement[9496-9544]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[9265-13568]:WhileStatement[9554-13857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9278-13568]:Block[9567-13857]"
    }, {
      "left" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[9292-9516]:IfStatement[9581-9805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9333-9516]:Block[9622-9805]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[9351-9359]:ExpressionStatement[9640-9648]"
    }, {
      "left" : "segment = segment.next();",
      "right" : "segment = segment.next();",
      "info" : "ExpressionStatement[9376-9401]:ExpressionStatement[9665-9690]"
    }, {
      "left" : "if (segment == null)",
      "right" : "if (segment == null)",
      "info" : "IfStatement[9418-9445]:IfStatement[9707-9734]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9439-9445]:BreakStatement[9728-9734]"
    }, {
      "left" : "hasIds = checkIds && (segment.hasIds());",
      "right" : "hasIds = checkIds && (segment.hasIds());",
      "info" : "ExpressionStatement[9462-9502]:ExpressionStatement[9751-9791]"
    }, {
      "left" : "JsonToken t = segment.type(ptr);",
      "right" : "JsonToken t = segment.type(ptr);",
      "info" : "VariableDeclarationStatement[9529-9561]:VariableDeclarationStatement[9818-9850]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[9574-9595]:IfStatement[9863-9884]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9589-9595]:BreakStatement[9878-9884]"
    }, {
      "left" : "if (hasIds)",
      "right" : "if (hasIds)",
      "info" : "IfStatement[9609-9925]:IfStatement[9898-10214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9621-9925]:Block[9910-10214]"
    }, {
      "left" : "Object id = segment.findObjectId(ptr);",
      "right" : "Object id = segment.findObjectId(ptr);",
      "info" : "VariableDeclarationStatement[9639-9677]:VariableDeclarationStatement[9928-9966]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[9694-9772]:IfStatement[9983-10061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9710-9772]:Block[9999-10061]"
    }, {
      "left" : "gen.writeObjectId(id);",
      "right" : "gen.writeObjectId(id);",
      "info" : "ExpressionStatement[9732-9754]:ExpressionStatement[10021-10043]"
    }, {
      "left" : "id = segment.findTypeId(ptr);",
      "right" : "id = segment.findTypeId(ptr);",
      "info" : "ExpressionStatement[9789-9818]:ExpressionStatement[10078-10107]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[9835-9911]:IfStatement[10124-10200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9851-9911]:Block[10140-10200]"
    }, {
      "left" : "gen.writeTypeId(id);",
      "right" : "gen.writeTypeId(id);",
      "info" : "ExpressionStatement[9873-9893]:ExpressionStatement[10162-10182]"
    }, {
      "left" : "switch (t) {\n            case START_OBJECT:\n                gen.writeStartObject();\n                break;\n            case END_OBJECT:\n                gen.writeEndObject();\n                break;\n            case START_ARRAY:\n                gen.writeStartArray();\n                break;\n            case END_ARRAY:\n                gen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    gen.writeFieldName((SerializableString) ob);\n                } else {\n                    gen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        gen.writeString((SerializableString) ob);\n                    } else {\n                        gen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        gen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        gen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        gen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        gen.writeNumber((Short) n);\n                    } else {\n                        gen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        gen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        gen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        gen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        gen.writeNull();\n                    } else if (n instanceof String) {\n                        gen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                gen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                gen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                gen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                {\n                    Object value = segment.get(ptr);\n                    if (value instanceof RawValue) {\n                        ((RawValue) value).serialize(gen);\n                    } else {\n                        gen.writeObject(value);\n                    }\n                }\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "right" : "switch (t) {\n            case START_OBJECT:\n                gen.writeStartObject();\n                break;\n            case END_OBJECT:\n                gen.writeEndObject();\n                break;\n            case START_ARRAY:\n                gen.writeStartArray();\n                break;\n            case END_ARRAY:\n                gen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    gen.writeFieldName((SerializableString) ob);\n                } else {\n                    gen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        gen.writeString((SerializableString) ob);\n                    } else {\n                        gen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        gen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        gen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        gen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        gen.writeNumber((Short) n);\n                    } else {\n                        gen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        gen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        gen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        gen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        gen.writeNull();\n                    } else if (n instanceof String) {\n                        gen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                gen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                gen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                gen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                {\n                    Object value = segment.get(ptr);\n                    if (value instanceof RawValue) {\n                        ((RawValue) value).serialize(gen);\n                    } else {\n                        gen.writeObject(value);\n                    }\n                }\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "info" : "SwitchStatement[10006-13558]:SwitchStatement[10295-13847]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[10031-10049]:SwitchCase[10320-10338]"
    }, {
      "left" : "gen.writeStartObject();",
      "right" : "gen.writeStartObject();",
      "info" : "ExpressionStatement[10066-10089]:ExpressionStatement[10355-10378]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10106-10112]:BreakStatement[10395-10401]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[10125-10141]:SwitchCase[10414-10430]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[10158-10179]:ExpressionStatement[10447-10468]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10196-10202]:BreakStatement[10485-10491]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[10215-10232]:SwitchCase[10504-10521]"
    }, {
      "left" : "gen.writeStartArray();",
      "right" : "gen.writeStartArray();",
      "info" : "ExpressionStatement[10249-10271]:ExpressionStatement[10538-10560]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10288-10294]:BreakStatement[10577-10583]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[10307-10322]:SwitchCase[10596-10611]"
    }, {
      "left" : "gen.writeEndArray();",
      "right" : "gen.writeEndArray();",
      "info" : "ExpressionStatement[10339-10359]:ExpressionStatement[10628-10648]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10376-10382]:BreakStatement[10665-10671]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[10395-10411]:SwitchCase[10684-10700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10424-10809]:Block[10713-11098]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[10549-10578]:VariableDeclarationStatement[10838-10867]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[10595-10795]:IfStatement[10884-11084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10633-10717]:Block[10922-11006]"
    }, {
      "left" : "gen.writeFieldName((SerializableString) ob);",
      "right" : "gen.writeFieldName((SerializableString) ob);",
      "info" : "ExpressionStatement[10655-10699]:ExpressionStatement[10944-10988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10723-10795]:Block[11012-11084]"
    }, {
      "left" : "gen.writeFieldName((String) ob);",
      "right" : "gen.writeFieldName((String) ob);",
      "info" : "ExpressionStatement[10745-10777]:ExpressionStatement[11034-11066]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10826-10832]:BreakStatement[11115-11121]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[10845-10863]:SwitchCase[11134-11152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10880-11180]:Block[11169-11469]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[10902-10931]:VariableDeclarationStatement[11191-11220]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[10952-11162]:IfStatement[11241-11451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10990-11079]:Block[11279-11368]"
    }, {
      "left" : "gen.writeString((SerializableString) ob);",
      "right" : "gen.writeString((SerializableString) ob);",
      "info" : "ExpressionStatement[11016-11057]:ExpressionStatement[11305-11346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11085-11162]:Block[11374-11451]"
    }, {
      "left" : "gen.writeString((String) ob);",
      "right" : "gen.writeString((String) ob);",
      "info" : "ExpressionStatement[11111-11140]:ExpressionStatement[11400-11429]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11197-11203]:BreakStatement[11486-11492]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[11216-11238]:SwitchCase[11505-11527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11255-11865]:Block[11544-12154]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11277-11305]:VariableDeclarationStatement[11566-11594]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[11326-11847]:IfStatement[11615-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11352-11429]:Block[11641-11718]"
    }, {
      "left" : "gen.writeNumber((Integer) n);",
      "right" : "gen.writeNumber((Integer) n);",
      "info" : "ExpressionStatement[11378-11407]:ExpressionStatement[11667-11696]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[11435-11847]:IfStatement[11724-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11464-11544]:Block[11753-11833]"
    }, {
      "left" : "gen.writeNumber((BigInteger) n);",
      "right" : "gen.writeNumber((BigInteger) n);",
      "info" : "ExpressionStatement[11490-11522]:ExpressionStatement[11779-11811]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[11550-11847]:IfStatement[11839-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11573-11647]:Block[11862-11936]"
    }, {
      "left" : "gen.writeNumber((Long) n);",
      "right" : "gen.writeNumber((Long) n);",
      "info" : "ExpressionStatement[11599-11625]:ExpressionStatement[11888-11914]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[11653-11847]:IfStatement[11942-12136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11677-11752]:Block[11966-12041]"
    }, {
      "left" : "gen.writeNumber((Short) n);",
      "right" : "gen.writeNumber((Short) n);",
      "info" : "ExpressionStatement[11703-11730]:ExpressionStatement[11992-12019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11758-11847]:Block[12047-12136]"
    }, {
      "left" : "gen.writeNumber(((Number) n).intValue());",
      "right" : "gen.writeNumber(((Number) n).intValue());",
      "info" : "ExpressionStatement[11784-11825]:ExpressionStatement[12073-12114]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11882-11888]:BreakStatement[12171-12177]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[11901-11925]:SwitchCase[12190-12214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11942-12760]:Block[12231-13049]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11964-11992]:VariableDeclarationStatement[12253-12281]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[12013-12742]:IfStatement[12302-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12038-12130]:Block[12327-12419]"
    }, {
      "left" : "gen.writeNumber(((Double) n).doubleValue());",
      "right" : "gen.writeNumber(((Double) n).doubleValue());",
      "info" : "ExpressionStatement[12064-12108]:ExpressionStatement[12353-12397]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[12136-12742]:IfStatement[12425-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12165-12245]:Block[12454-12534]"
    }, {
      "left" : "gen.writeNumber((BigDecimal) n);",
      "right" : "gen.writeNumber((BigDecimal) n);",
      "info" : "ExpressionStatement[12191-12223]:ExpressionStatement[12480-12512]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[12251-12742]:IfStatement[12540-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12275-12365]:Block[12564-12654]"
    }, {
      "left" : "gen.writeNumber(((Float) n).floatValue());",
      "right" : "gen.writeNumber(((Float) n).floatValue());",
      "info" : "ExpressionStatement[12301-12343]:ExpressionStatement[12590-12632]"
    }, {
      "left" : "if (n == null)",
      "right" : "if (n == null)",
      "info" : "IfStatement[12371-12742]:IfStatement[12660-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12386-12450]:Block[12675-12739]"
    }, {
      "left" : "gen.writeNull();",
      "right" : "gen.writeNull();",
      "info" : "ExpressionStatement[12412-12428]:ExpressionStatement[12701-12717]"
    }, {
      "left" : "if (n instanceof String)",
      "right" : "if (n instanceof String)",
      "info" : "IfStatement[12456-12742]:IfStatement[12745-13031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12481-12557]:Block[12770-12846]"
    }, {
      "left" : "gen.writeNumber((String) n);",
      "right" : "gen.writeNumber((String) n);",
      "info" : "ExpressionStatement[12507-12535]:ExpressionStatement[12796-12824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12563-12742]:Block[12852-13031]"
    }, {
      "left" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "right" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "info" : "ThrowStatement[12589-12720]:ThrowStatement[12878-13009]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12777-12783]:BreakStatement[13066-13072]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[12796-12812]:SwitchCase[13085-13101]"
    }, {
      "left" : "gen.writeBoolean(true);",
      "right" : "gen.writeBoolean(true);",
      "info" : "ExpressionStatement[12829-12852]:ExpressionStatement[13118-13141]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12869-12875]:BreakStatement[13158-13164]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[12888-12905]:SwitchCase[13177-13194]"
    }, {
      "left" : "gen.writeBoolean(false);",
      "right" : "gen.writeBoolean(false);",
      "info" : "ExpressionStatement[12922-12946]:ExpressionStatement[13211-13235]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12963-12969]:BreakStatement[13252-13258]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[12982-12998]:SwitchCase[13271-13287]"
    }, {
      "left" : "gen.writeNull();",
      "right" : "gen.writeNull();",
      "info" : "ExpressionStatement[13015-13031]:ExpressionStatement[13304-13320]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13048-13054]:BreakStatement[13337-13343]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[13067-13094]:SwitchCase[13356-13383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13111-13394]:Block[13400-13683]"
    }, {
      "left" : "Object value = segment.get(ptr);",
      "right" : "Object value = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[13133-13165]:VariableDeclarationStatement[13422-13454]"
    }, {
      "left" : "if (value instanceof RawValue)",
      "right" : "if (value instanceof RawValue)",
      "info" : "IfStatement[13186-13376]:IfStatement[13475-13665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13217-13299]:Block[13506-13588]"
    }, {
      "left" : "((RawValue) value).serialize(gen);",
      "right" : "((RawValue) value).serialize(gen);",
      "info" : "ExpressionStatement[13243-13277]:ExpressionStatement[13532-13566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13305-13376]:Block[13594-13665]"
    }, {
      "left" : "gen.writeObject(value);",
      "right" : "gen.writeObject(value);",
      "info" : "ExpressionStatement[13331-13354]:ExpressionStatement[13620-13643]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13411-13417]:BreakStatement[13700-13706]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[13430-13438]:SwitchCase[13719-13727]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[13455-13544]:ThrowStatement[13744-13833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13771-14538]:Block[14060-14827]"
    }, {
      "left" : "if (p.getCurrentTokenId() != JsonToken.FIELD_NAME.id())",
      "right" : "if (p.getCurrentTokenId() != JsonToken.FIELD_NAME.id())",
      "info" : "IfStatement[13781-13910]:IfStatement[14070-14199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13837-13910]:Block[14126-14199]"
    }, {
      "left" : "copyCurrentStructure(p);",
      "right" : "copyCurrentStructure(p);",
      "info" : "ExpressionStatement[13851-13875]:ExpressionStatement[14140-14164]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13888-13900]:ReturnStatement[14177-14189]"
    }, {
      "left" : "JsonToken t;",
      "right" : "JsonToken t;",
      "info" : "VariableDeclarationStatement[14153-14165]:VariableDeclarationStatement[14442-14454]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[14174-14193]:ExpressionStatement[14463-14482]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[14202-14306]:DoStatement[14491-14595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14205-14253]:Block[14494-14542]"
    }, {
      "left" : "copyCurrentStructure(p);",
      "right" : "copyCurrentStructure(p);",
      "info" : "ExpressionStatement[14219-14243]:ExpressionStatement[14508-14532]"
    }, {
      "left" : "if (t != JsonToken.END_OBJECT)",
      "right" : "if (t != JsonToken.END_OBJECT)",
      "info" : "IfStatement[14315-14485]:IfStatement[14604-14774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14346-14485]:Block[14635-14774]"
    }, {
      "left" : "throw ctxt.mappingException(\"Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got \"+t);",
      "right" : "throw ctxt.mappingException(\"Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got \"+t);",
      "info" : "ThrowStatement[14360-14475]:ThrowStatement[14649-14764]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[14494-14511]:ExpressionStatement[14783-14800]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14520-14532]:ReturnStatement[14809-14821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14621-16123]:Block[14910-16412]"
    }, {
      "left" : "final int MAX_COUNT = 100;",
      "right" : "final int MAX_COUNT = 100;",
      "info" : "VariableDeclarationStatement[14680-14706]:VariableDeclarationStatement[14969-14995]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[14716-14755]:VariableDeclarationStatement[15005-15044]"
    }, {
      "left" : "sb.append(\"[TokenBuffer: \");",
      "right" : "sb.append(\"[TokenBuffer: \");",
      "info" : "ExpressionStatement[14764-14792]:ExpressionStatement[15053-15081]"
    }, {
      "left" : "JsonParser jp = asParser();",
      "right" : "JsonParser jp = asParser();",
      "info" : "VariableDeclarationStatement[14963-14990]:VariableDeclarationStatement[15252-15279]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[14999-15013]:VariableDeclarationStatement[15288-15302]"
    }, {
      "left" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "right" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "info" : "VariableDeclarationStatement[15022-15092]:VariableDeclarationStatement[15311-15381]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[15102-15931]:WhileStatement[15391-16220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15115-15931]:Block[15404-16220]"
    }, {
      "left" : "JsonToken t;",
      "right" : "JsonToken t;",
      "info" : "VariableDeclarationStatement[15129-15141]:VariableDeclarationStatement[15418-15430]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[15154-15900]:TryStatement[15443-16189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15158-15784]:Block[15447-16073]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[15176-15195]:ExpressionStatement[15465-15484]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[15212-15233]:IfStatement[15501-15522]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[15227-15233]:BreakStatement[15516-15522]"
    }, {
      "left" : "if (hasNativeIds)",
      "right" : "if (hasNativeIds)",
      "info" : "IfStatement[15251-15330]:IfStatement[15540-15619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15269-15330]:Block[15558-15619]"
    }, {
      "left" : "_appendNativeIds(sb);",
      "right" : "_appendNativeIds(sb);",
      "info" : "ExpressionStatement[15291-15312]:ExpressionStatement[15580-15601]"
    }, {
      "left" : "if (count < MAX_COUNT)",
      "right" : "if (count < MAX_COUNT)",
      "info" : "IfStatement[15372-15770]:IfStatement[15661-16059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15395-15770]:Block[15684-16059]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[15417-15496]:IfStatement[15706-15785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15432-15496]:Block[15721-15785]"
    }, {
      "left" : "sb.append(\", \");",
      "right" : "sb.append(\", \");",
      "info" : "ExpressionStatement[15458-15474]:ExpressionStatement[15747-15763]"
    }, {
      "left" : "sb.append(t.toString());",
      "right" : "sb.append(t.toString());",
      "info" : "ExpressionStatement[15517-15541]:ExpressionStatement[15806-15830]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[15562-15752]:IfStatement[15851-16041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15593-15752]:Block[15882-16041]"
    }, {
      "left" : "sb.append('(');",
      "right" : "sb.append('(');",
      "info" : "ExpressionStatement[15619-15634]:ExpressionStatement[15908-15923]"
    }, {
      "left" : "sb.append(jp.getCurrentName());",
      "right" : "sb.append(jp.getCurrentName());",
      "info" : "ExpressionStatement[15659-15690]:ExpressionStatement[15948-15979]"
    }, {
      "left" : "sb.append(')');",
      "right" : "sb.append(')');",
      "info" : "ExpressionStatement[15715-15730]:ExpressionStatement[16004-16019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15809-15900]:Block[16098-16189]"
    }, {
      "left" : "throw new IllegalStateException(ioe);",
      "right" : "throw new IllegalStateException(ioe);",
      "info" : "ThrowStatement[15849-15886]:ThrowStatement[16138-16175]"
    }, {
      "left" : "++count;",
      "right" : "++count;",
      "info" : "ExpressionStatement[15913-15921]:ExpressionStatement[16202-16210]"
    }, {
      "left" : "if (count >= MAX_COUNT)",
      "right" : "if (count >= MAX_COUNT)",
      "info" : "IfStatement[15941-16063]:IfStatement[16230-16352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15965-16063]:Block[16254-16352]"
    }, {
      "left" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "right" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "info" : "ExpressionStatement[15979-16053]:ExpressionStatement[16268-16342]"
    }, {
      "left" : "sb.append(']');",
      "right" : "sb.append(']');",
      "info" : "ExpressionStatement[16072-16087]:ExpressionStatement[16361-16376]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[16096-16117]:ReturnStatement[16385-16406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16187-16550]:Block[16476-16839]"
    }, {
      "left" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "right" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[16197-16247]:VariableDeclarationStatement[16486-16536]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[16256-16371]:IfStatement[16545-16660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16278-16371]:Block[16567-16660]"
    }, {
      "left" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "right" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "info" : "ExpressionStatement[16292-16361]:ExpressionStatement[16581-16650]"
    }, {
      "left" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "right" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[16380-16426]:VariableDeclarationStatement[16669-16715]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[16435-16544]:IfStatement[16724-16833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16455-16544]:Block[16744-16833]"
    }, {
      "left" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "right" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "info" : "ExpressionStatement[16469-16534]:ExpressionStatement[16758-16823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16808-16879]:Block[17097-17168]"
    }, {
      "left" : "_generatorFeatures |= f.getMask();",
      "right" : "_generatorFeatures |= f.getMask();",
      "info" : "ExpressionStatement[16818-16852]:ExpressionStatement[17107-17141]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16861-16873]:ReturnStatement[17150-17162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16939-17011]:Block[17228-17300]"
    }, {
      "left" : "_generatorFeatures &= ~f.getMask();",
      "right" : "_generatorFeatures &= ~f.getMask();",
      "info" : "ExpressionStatement[16949-16984]:ExpressionStatement[17238-17273]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16993-17005]:ReturnStatement[17282-17294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17148-17211]:Block[17437-17500]"
    }, {
      "left" : "return (_generatorFeatures & f.getMask()) != 0;",
      "right" : "return (_generatorFeatures & f.getMask()) != 0;",
      "info" : "ReturnStatement[17158-17205]:ReturnStatement[17447-17494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17259-17301]:Block[17548-17590]"
    }, {
      "left" : "return _generatorFeatures;",
      "right" : "return _generatorFeatures;",
      "info" : "ReturnStatement[17269-17295]:ReturnStatement[17558-17584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17367-17430]:Block[17656-17719]"
    }, {
      "left" : "_generatorFeatures = mask;",
      "right" : "_generatorFeatures = mask;",
      "info" : "ExpressionStatement[17377-17403]:ExpressionStatement[17666-17692]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17412-17424]:ReturnStatement[17701-17713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17501-17563]:Block[17790-17852]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17545-17557]:ReturnStatement[17834-17846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17629-17684]:Block[17918-17973]"
    }, {
      "left" : "_objectCodec = oc;",
      "right" : "_objectCodec = oc;",
      "info" : "ExpressionStatement[17639-17657]:ExpressionStatement[17928-17946]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17666-17678]:ReturnStatement[17955-17967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17734-17758]:Block[18023-18047]"
    }, {
      "left" : "return _objectCodec;",
      "right" : "return _objectCodec;",
      "info" : "ReturnStatement[17736-17756]:ReturnStatement[18025-18045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17827-17852]:Block[18116-18141]"
    }, {
      "left" : "return _writeContext;",
      "right" : "return _writeContext;",
      "info" : "ReturnStatement[17829-17850]:ReturnStatement[18118-18139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18202-18230]:Block[18491-18519]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[18212-18224]:ReturnStatement[18501-18513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18500-18513]:Block[18789-18802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18572-18603]:Block[18861-18892]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[18582-18597]:ExpressionStatement[18871-18886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18649-18668]:Block[18938-18957]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[18651-18666]:ReturnStatement[18940-18955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18954-19066]:Block[19243-19355]"
    }, {
      "left" : "_append(JsonToken.START_ARRAY);",
      "right" : "_append(JsonToken.START_ARRAY);",
      "info" : "ExpressionStatement[18964-18995]:ExpressionStatement[19253-19284]"
    }, {
      "left" : "_writeContext = _writeContext.createChildArrayContext();",
      "right" : "_writeContext = _writeContext.createChildArrayContext();",
      "info" : "ExpressionStatement[19004-19060]:ExpressionStatement[19293-19349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19143-19388]:Block[19432-19677]"
    }, {
      "left" : "_append(JsonToken.END_ARRAY);",
      "right" : "_append(JsonToken.END_ARRAY);",
      "info" : "ExpressionStatement[19153-19182]:ExpressionStatement[19442-19471]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[19269-19316]:VariableDeclarationStatement[19558-19605]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[19325-19382]:IfStatement[19614-19671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19340-19382]:Block[19629-19671]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[19354-19372]:ExpressionStatement[19643-19661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19468-19582]:Block[19757-19871]"
    }, {
      "left" : "_append(JsonToken.START_OBJECT);",
      "right" : "_append(JsonToken.START_OBJECT);",
      "info" : "ExpressionStatement[19478-19510]:ExpressionStatement[19767-19799]"
    }, {
      "left" : "_writeContext = _writeContext.createChildObjectContext();",
      "right" : "_writeContext = _writeContext.createChildObjectContext();",
      "info" : "ExpressionStatement[19519-19576]:ExpressionStatement[19808-19865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19660-19906]:Block[19949-20195]"
    }, {
      "left" : "_append(JsonToken.END_OBJECT);",
      "right" : "_append(JsonToken.END_OBJECT);",
      "info" : "ExpressionStatement[19670-19700]:ExpressionStatement[19959-19989]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[19787-19834]:VariableDeclarationStatement[20076-20123]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[19843-19900]:IfStatement[20132-20189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19858-19900]:Block[20147-20189]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[19872-19890]:ExpressionStatement[20161-20179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19995-20091]:Block[20284-20380]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[20005-20041]:ExpressionStatement[20294-20330]"
    }, {
      "left" : "_writeContext.writeFieldName(name);",
      "right" : "_writeContext.writeFieldName(name);",
      "info" : "ExpressionStatement[20050-20085]:ExpressionStatement[20339-20374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20186-20293]:Block[20475-20582]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[20196-20232]:ExpressionStatement[20485-20521]"
    }, {
      "left" : "_writeContext.writeFieldName(name.getValue());",
      "right" : "_writeContext.writeFieldName(name.getValue());",
      "info" : "ExpressionStatement[20241-20287]:ExpressionStatement[20530-20576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20577-20715]:Block[20866-21004]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[20587-20709]:IfStatement[20876-20998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20605-20641]:Block[20894-20930]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[20619-20631]:ExpressionStatement[20908-20920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20647-20709]:Block[20936-20998]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_append(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[20661-20699]:ExpressionStatement[20950-20988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20812-20871]:Block[21101-21160]"
    }, {
      "left" : "writeString(new String(text, offset, len));",
      "right" : "writeString(new String(text, offset, len));",
      "info" : "ExpressionStatement[20822-20865]:ExpressionStatement[21111-21154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20959-21097]:Block[21248-21386]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[20969-21091]:IfStatement[21258-21380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20987-21023]:Block[21276-21312]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[21001-21013]:ExpressionStatement[21290-21302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21029-21091]:Block[21318-21380]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_append(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[21043-21081]:ExpressionStatement[21332-21370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21212-21325]:Block[21501-21614]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21289-21319]:ExpressionStatement[21578-21608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21433-21546]:Block[21722-21835]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21510-21540]:ExpressionStatement[21799-21829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21619-21665]:Block[21908-21954]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21629-21659]:ExpressionStatement[21918-21948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21759-21805]:Block[22048-22094]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21769-21799]:ExpressionStatement[22058-22088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21890-21936]:Block[22179-22225]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21900-21930]:ExpressionStatement[22189-22219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22034-22080]:Block[22323-22369]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22044-22074]:ExpressionStatement[22333-22363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22148-22194]:Block[22437-22483]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22158-22188]:ExpressionStatement[22447-22477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22272-22349]:Block[22561-22638]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "info" : "ExpressionStatement[22282-22343]:ExpressionStatement[22571-22632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22448-22640]:Block[22737-22929]"
    }, {
      "left" : "if (offset > 0 || len != text.length())",
      "right" : "if (offset > 0 || len != text.length())",
      "info" : "IfStatement[22458-22564]:IfStatement[22747-22853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22498-22564]:Block[22787-22853]"
    }, {
      "left" : "text = text.substring(offset, offset+len);",
      "right" : "text = text.substring(offset, offset+len);",
      "info" : "ExpressionStatement[22512-22554]:ExpressionStatement[22801-22843]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new RawValue(text));",
      "info" : "ExpressionStatement[22573-22634]:ExpressionStatement[22862-22923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22739-22827]:Block[23028-23116]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, new String(text, offset, len));",
      "info" : "ExpressionStatement[22749-22821]:ExpressionStatement[23038-23110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23111-23181]:Block[23400-23470]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "info" : "ExpressionStatement[23121-23175]:ExpressionStatement[23410-23464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23251-23323]:Block[23540-23612]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "info" : "ExpressionStatement[23261-23317]:ExpressionStatement[23550-23606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23394-23463]:Block[23683-23752]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "info" : "ExpressionStatement[23404-23457]:ExpressionStatement[23693-23746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23536-23609]:Block[23825-23898]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "info" : "ExpressionStatement[23546-23603]:ExpressionStatement[23835-23892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23681-23753]:Block[23970-24042]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "info" : "ExpressionStatement[23691-23747]:ExpressionStatement[23980-24036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23832-23974]:Block[24121-24263]"
    }, {
      "left" : "if (dec == null)",
      "right" : "if (dec == null)",
      "info" : "IfStatement[23842-23968]:IfStatement[24131-24257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23859-23895]:Block[24148-24184]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[23873-23885]:ExpressionStatement[24162-24174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23901-23968]:Block[24190-24257]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "info" : "ExpressionStatement[23915-23958]:ExpressionStatement[24204-24247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24051-24187]:Block[24340-24476]"
    }, {
      "left" : "if (v == null)",
      "right" : "if (v == null)",
      "info" : "IfStatement[24061-24181]:IfStatement[24350-24470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24076-24112]:Block[24365-24401]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[24090-24102]:ExpressionStatement[24379-24391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24118-24181]:Block[24407-24470]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, v);",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, v);",
      "info" : "ExpressionStatement[24132-24171]:ExpressionStatement[24421-24460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24271-24479]:Block[24560-24768]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "info" : "ExpressionStatement[24421-24473]:ExpressionStatement[24710-24762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24558-24636]:Block[24847-24925]"
    }, {
      "left" : "_append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "right" : "_append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "info" : "ExpressionStatement[24568-24630]:ExpressionStatement[24857-24919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24699-24745]:Block[24988-25034]"
    }, {
      "left" : "_append(JsonToken.VALUE_NULL);",
      "right" : "_append(JsonToken.VALUE_NULL);",
      "info" : "ExpressionStatement[24709-24739]:ExpressionStatement[24998-25028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25039-25767]:Block[25328-26056]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[25049-25124]:IfStatement[25338-25413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25068-25124]:Block[25357-25413]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[25082-25094]:ExpressionStatement[25371-25383]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25107-25114]:ReturnStatement[25396-25403]"
    }, {
      "left" : "Class<?> raw = value.getClass();",
      "right" : "Class<?> raw = value.getClass();",
      "info" : "VariableDeclarationStatement[25133-25165]:VariableDeclarationStatement[25422-25454]"
    }, {
      "left" : "if (raw == byte[].class || (value instanceof RawValue))",
      "right" : "if (raw == byte[].class || (value instanceof RawValue))",
      "info" : "IfStatement[25174-25322]:IfStatement[25463-25611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25230-25322]:Block[25519-25611]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[25244-25292]:ExpressionStatement[25533-25581]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25305-25312]:ReturnStatement[25594-25601]"
    }, {
      "left" : "if (_objectCodec == null)",
      "right" : "if (_objectCodec == null)",
      "info" : "IfStatement[25331-25761]:IfStatement[25620-26050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25357-25694]:Block[25646-25983]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[25636-25684]:ExpressionStatement[25925-25973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25700-25761]:Block[25989-26050]"
    }, {
      "left" : "_objectCodec.writeValue(this, value);",
      "right" : "_objectCodec.writeValue(this, value);",
      "info" : "ExpressionStatement[25714-25751]:ExpressionStatement[26003-26040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25847-26168]:Block[26136-26457]"
    }, {
      "left" : "if (node == null)",
      "right" : "if (node == null)",
      "info" : "IfStatement[25857-25931]:IfStatement[26146-26220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25875-25931]:Block[26164-26220]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[25889-25901]:ExpressionStatement[26178-26190]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25914-25921]:ReturnStatement[26203-26210]"
    }, {
      "left" : "if (_objectCodec == null)",
      "right" : "if (_objectCodec == null)",
      "info" : "IfStatement[25941-26162]:IfStatement[26230-26451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25967-26097]:Block[26256-26386]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "info" : "ExpressionStatement[26040-26087]:ExpressionStatement[26329-26376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26103-26162]:Block[26392-26451]"
    }, {
      "left" : "_objectCodec.writeTree(this, node);",
      "right" : "_objectCodec.writeTree(this, node);",
      "info" : "ExpressionStatement[26117-26152]:ExpressionStatement[26406-26441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26485-26953]:Block[26774-27242]"
    }, {
      "left" : "byte[] copy = new byte[len];",
      "right" : "byte[] copy = new byte[len];",
      "info" : "VariableDeclarationStatement[26838-26866]:VariableDeclarationStatement[27127-27155]"
    }, {
      "left" : "System.arraycopy(data, offset, copy, 0, len);",
      "right" : "System.arraycopy(data, offset, copy, 0, len);",
      "info" : "ExpressionStatement[26875-26920]:ExpressionStatement[27164-27209]"
    }, {
      "left" : "writeObject(copy);",
      "right" : "writeObject(copy);",
      "info" : "ExpressionStatement[26929-26947]:ExpressionStatement[27218-27236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27340-27398]:Block[27629-27687]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[27350-27392]:ThrowStatement[27639-27681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27644-27685]:Block[27933-27974]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[27654-27679]:ReturnStatement[27943-27968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27739-27782]:Block[28028-28071]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[27749-27776]:ReturnStatement[28038-28065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27841-27899]:Block[28130-28188]"
    }, {
      "left" : "_typeId = id;",
      "right" : "_typeId = id;",
      "info" : "ExpressionStatement[27851-27864]:ExpressionStatement[28140-28153]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[27873-27893]:ExpressionStatement[28162-28182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27960-28020]:Block[28249-28309]"
    }, {
      "left" : "_objectId = id;",
      "right" : "_objectId = id;",
      "info" : "ExpressionStatement[27970-27985]:ExpressionStatement[28259-28274]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[27994-28014]:ExpressionStatement[28283-28303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28305-30677]:Block[28594-31091]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[28315-28381]:IfStatement[28604-28670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28338-28381]:Block[28627-28670]"
    }, {
      "left" : "_checkNativeIds(p);",
      "right" : "_checkNativeIds(p);",
      "info" : "ExpressionStatement[28352-28371]:ExpressionStatement[28641-28660]"
    }, {
      "left" : "switch (p.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(p.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (p.hasTextCharacters()) {\n                writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());\n            } else {\n                writeString(p.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n                /* 10-Oct-2015, tatu: Ideally we would first determine whether underlying\n                 *   number is already decoded into a number (in which case might as well\n                 *   access as number); or is still retained as text (in which case we\n                 *   should further defer decoding that may not need BigDecimal):\n                 */\n                switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(p.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "right" : "switch (p.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(p.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (p.hasTextCharacters()) {\n                writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());\n            } else {\n                writeString(p.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n            if (_forceBigDecimal) {\n                /* 10-Oct-2015, tatu: Ideally we would first determine whether underlying\n                 *   number is already decoded into a number (in which case might as well\n                 *   access as number); or is still retained as text (in which case we\n                 *   should further defer decoding that may not need BigDecimal):\n                 */\n                writeNumber(p.getDecimalValue());\n            } else {\n                switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n                }\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(p.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "info" : "SwitchStatement[28390-30671]:SwitchStatement[28679-31085]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[28429-28447]:SwitchCase[28718-28736]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[28460-28479]:ExpressionStatement[28749-28768]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28492-28498]:BreakStatement[29349-29355]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[28507-28523]:SwitchCase[28796-28812]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[28536-28553]:ExpressionStatement[28825-28842]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28566-28572]:BreakStatement[29095-29101]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[28581-28598]:SwitchCase[28870-28887]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[28611-28629]:ExpressionStatement[28900-28918]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28642-28648]:BreakStatement[28931-28937]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[28657-28672]:SwitchCase[28946-28961]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[28685-28701]:ExpressionStatement[28974-28990]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28714-28720]:BreakStatement[28855-28861]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[28729-28745]:SwitchCase[29018-29034]"
    }, {
      "left" : "writeFieldName(p.getCurrentName());",
      "right" : "writeFieldName(p.getCurrentName());",
      "info" : "ExpressionStatement[28758-28793]:ExpressionStatement[29047-29082]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28806-28812]:BreakStatement[28781-28787]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[28821-28839]:SwitchCase[29110-29128]"
    }, {
      "left" : "if (p.hasTextCharacters())",
      "right" : "if (p.hasTextCharacters())",
      "info" : "IfStatement[28852-29047]:IfStatement[29141-29336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28879-28984]:Block[29168-29273]"
    }, {
      "left" : "writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());",
      "right" : "writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());",
      "info" : "ExpressionStatement[28897-28970]:ExpressionStatement[29186-29259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28990-29047]:Block[29279-29336]"
    }, {
      "left" : "writeString(p.getText());",
      "right" : "writeString(p.getText());",
      "info" : "ExpressionStatement[29008-29033]:ExpressionStatement[29297-29322]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29060-29066]:BreakStatement[29003-29009]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[29075-29097]:SwitchCase[29364-29386]"
    }, {
      "left" : "switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }",
      "right" : "switch (p.getNumberType()) {\n            case INT:\n                writeNumber(p.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(p.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(p.getLongValue());\n            }",
      "info" : "SwitchStatement[29110-29417]:SwitchStatement[29399-29706]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[29151-29160]:SwitchCase[29440-29449]"
    }, {
      "left" : "writeNumber(p.getIntValue());",
      "right" : "writeNumber(p.getIntValue());",
      "info" : "ExpressionStatement[29177-29206]:ExpressionStatement[29466-29495]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29223-29229]:BreakStatement[29512-29518]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[29242-29259]:SwitchCase[29531-29548]"
    }, {
      "left" : "writeNumber(p.getBigIntegerValue());",
      "right" : "writeNumber(p.getBigIntegerValue());",
      "info" : "ExpressionStatement[29276-29312]:ExpressionStatement[29565-29601]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29329-29335]:BreakStatement[29618-29624]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29348-29356]:SwitchCase[29637-29645]"
    }, {
      "left" : "writeNumber(p.getLongValue());",
      "right" : "writeNumber(p.getLongValue());",
      "info" : "ExpressionStatement[29373-29403]:ExpressionStatement[29662-29692]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29430-29436]:BreakStatement[29719-29725]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[29445-29469]:SwitchCase[29734-29758]"
    }, {
      "left" : "switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n            }",
      "right" : "switch (p.getNumberType()) {\n                case BIG_DECIMAL:\n                    writeNumber(p.getDecimalValue());\n                    break;\n                case FLOAT:\n                    writeNumber(p.getFloatValue());\n                    break;\n                default:\n                    writeNumber(p.getDoubleValue());\n                }",
      "info" : "SwitchStatement[29855-30197]:SwitchStatement[30251-30597]"
    }, {
      "left" : "case BIG_DECIMAL:",
      "right" : "case BIG_DECIMAL:",
      "info" : "SwitchCase[29900-29917]:SwitchCase[30296-30313]"
    }, {
      "left" : "writeNumber(p.getDecimalValue());",
      "right" : "writeNumber(p.getDecimalValue());",
      "info" : "ExpressionStatement[29938-29971]:ExpressionStatement[30334-30367]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29992-29998]:BreakStatement[30388-30394]"
    }, {
      "left" : "case FLOAT:",
      "right" : "case FLOAT:",
      "info" : "SwitchCase[30015-30026]:SwitchCase[30411-30422]"
    }, {
      "left" : "writeNumber(p.getFloatValue());",
      "right" : "writeNumber(p.getFloatValue());",
      "info" : "ExpressionStatement[30047-30078]:ExpressionStatement[30443-30474]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30099-30105]:BreakStatement[30495-30501]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[30122-30130]:SwitchCase[30518-30526]"
    }, {
      "left" : "writeNumber(p.getDoubleValue());",
      "right" : "writeNumber(p.getDoubleValue());",
      "info" : "ExpressionStatement[30151-30183]:ExpressionStatement[30547-30579]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30210-30216]:BreakStatement[30950-30956]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[30225-30241]:SwitchCase[30639-30655]"
    }, {
      "left" : "writeBoolean(true);",
      "right" : "writeBoolean(true);",
      "info" : "ExpressionStatement[30254-30273]:ExpressionStatement[30668-30687]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30286-30292]:BreakStatement[30624-30630]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[30301-30318]:SwitchCase[30715-30732]"
    }, {
      "left" : "writeBoolean(false);",
      "right" : "writeBoolean(false);",
      "info" : "ExpressionStatement[30331-30351]:ExpressionStatement[30745-30765]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30364-30370]:BreakStatement[30847-30853]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[30379-30395]:SwitchCase[30793-30809]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[30408-30420]:ExpressionStatement[30822-30834]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30433-30439]:BreakStatement[30778-30784]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[30448-30475]:SwitchCase[30862-30889]"
    }, {
      "left" : "writeObject(p.getEmbeddedObject());",
      "right" : "writeObject(p.getEmbeddedObject());",
      "info" : "ExpressionStatement[30488-30523]:ExpressionStatement[30902-30937]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30536-30542]:BreakStatement[30700-30706]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[30551-30559]:SwitchCase[30965-30973]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[30572-30661]:ThrowStatement[30986-31075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30772-31789]:Block[31186-32203]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[30782-30817]:VariableDeclarationStatement[31196-31231]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[30879-31147]:IfStatement[31293-31561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30910-31147]:Block[31324-31561]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[30924-30999]:IfStatement[31338-31413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30947-30999]:Block[31361-31413]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[30965-30985]:ExpressionStatement[31379-31399]"
    }, {
      "left" : "writeFieldName(jp.getCurrentName());",
      "right" : "writeFieldName(jp.getCurrentName());",
      "info" : "ExpressionStatement[31012-31048]:ExpressionStatement[31426-31462]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[31061-31080]:ExpressionStatement[31475-31494]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[31157-31224]:IfStatement[31571-31638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31180-31224]:Block[31594-31638]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[31194-31214]:ExpressionStatement[31608-31628]"
    }, {
      "left" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "right" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "info" : "SwitchStatement[31242-31783]:SwitchStatement[31656-32197]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[31263-31280]:SwitchCase[31677-31694]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[31293-31311]:ExpressionStatement[31707-31725]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "right" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "info" : "WhileStatement[31324-31427]:WhileStatement[31738-31841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31370-31427]:Block[31784-31841]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[31388-31413]:ExpressionStatement[31802-31827]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[31440-31456]:ExpressionStatement[31854-31870]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31469-31475]:BreakStatement[31883-31889]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[31484-31502]:SwitchCase[31898-31916]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[31515-31534]:ExpressionStatement[31929-31948]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "right" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "info" : "WhileStatement[31547-31651]:WhileStatement[31961-32065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31594-31651]:Block[32008-32065]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[31612-31637]:ExpressionStatement[32026-32051]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[31664-31681]:ExpressionStatement[32078-32095]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31694-31700]:BreakStatement[32108-32114]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[31709-31717]:SwitchCase[32123-32131]"
    }, {
      "left" : "copyCurrentEvent(jp);",
      "right" : "copyCurrentEvent(jp);",
      "info" : "ExpressionStatement[31752-31773]:ExpressionStatement[32166-32187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31873-32070]:Block[32287-32484]"
    }, {
      "left" : "if ((_typeId = jp.getTypeId()) != null)",
      "right" : "if ((_typeId = jp.getTypeId()) != null)",
      "info" : "IfStatement[31883-31967]:IfStatement[32297-32381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31923-31967]:Block[32337-32381]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[31937-31957]:ExpressionStatement[32351-32371]"
    }, {
      "left" : "if ((_objectId = jp.getObjectId()) != null)",
      "right" : "if ((_objectId = jp.getObjectId()) != null)",
      "info" : "IfStatement[31976-32064]:IfStatement[32390-32478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32020-32064]:Block[32434-32478]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[32034-32054]:ExpressionStatement[32448-32468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32297-32619]:Block[32711-33033]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "info" : "VariableDeclarationStatement[32307-32451]:VariableDeclarationStatement[32721-32865]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[32460-32613]:IfStatement[32874-33027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32478-32514]:Block[32892-32928]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[32492-32504]:ExpressionStatement[32906-32918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32520-32613]:Block[32934-33027]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[32534-32547]:ExpressionStatement[32948-32961]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[32560-32574]:ExpressionStatement[32974-32988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32688-32995]:Block[33102-33409]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "info" : "VariableDeclarationStatement[32698-32856]:VariableDeclarationStatement[33112-33270]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[32865-32989]:IfStatement[33279-33403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32883-32919]:Block[33297-33333]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[32897-32909]:ExpressionStatement[33311-33323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32925-32989]:Block[33339-33403]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[32939-32952]:ExpressionStatement[33353-33366]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[32965-32979]:ExpressionStatement[33379-33393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33064-33383]:Block[33478-33797]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "info" : "VariableDeclarationStatement[33074-33244]:VariableDeclarationStatement[33488-33658]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[33253-33377]:IfStatement[33667-33791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33271-33307]:Block[33685-33721]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[33285-33297]:ExpressionStatement[33699-33711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33313-33377]:Block[33727-33791]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[33327-33340]:ExpressionStatement[33741-33754]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[33353-33367]:ExpressionStatement[33767-33781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33448-33554]:Block[33862-33968]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "right" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "info" : "ThrowStatement[33458-33548]:ThrowStatement[33872-33962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35397-35781]:Block[35811-36195]"
    }, {
      "left" : "super(0);",
      "right" : "super(0);",
      "info" : "SuperConstructorInvocation[35411-35420]:SuperConstructorInvocation[35825-35834]"
    }, {
      "left" : "_segment = firstSeg;",
      "right" : "_segment = firstSeg;",
      "info" : "ExpressionStatement[35433-35453]:ExpressionStatement[35847-35867]"
    }, {
      "left" : "_segmentPtr = -1;",
      "right" : "_segmentPtr = -1;",
      "info" : "ExpressionStatement[35466-35483]:ExpressionStatement[35880-35897]"
    }, {
      "left" : "_codec = codec;",
      "right" : "_codec = codec;",
      "info" : "ExpressionStatement[35512-35527]:ExpressionStatement[35926-35941]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[35540-35598]:ExpressionStatement[35954-36012]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "right" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "info" : "ExpressionStatement[35611-35648]:ExpressionStatement[36025-36062]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "right" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "info" : "ExpressionStatement[35661-35702]:ExpressionStatement[36075-36116]"
    }, {
      "left" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "right" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "info" : "ExpressionStatement[35715-35771]:ExpressionStatement[36129-36185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35831-35869]:Block[36245-36283]"
    }, {
      "left" : "_location = l;",
      "right" : "_location = l;",
      "info" : "ExpressionStatement[35845-35859]:ExpressionStatement[36259-36273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35935-35953]:Block[36349-36367]"
    }, {
      "left" : "return _codec;",
      "right" : "return _codec;",
      "info" : "ReturnStatement[35937-35951]:ReturnStatement[36351-36365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36017-36032]:Block[36431-36446]"
    }, {
      "left" : "_codec = c;",
      "right" : "_codec = c;",
      "info" : "ExpressionStatement[36019-36030]:ExpressionStatement[36433-36444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36085-36174]:Block[36499-36588]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[36099-36164]:ReturnStatement[36513-36578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36454-36834]:Block[36868-37248]"
    }, {
      "left" : "if (_closed)",
      "right" : "if (_closed)",
      "info" : "IfStatement[36520-36545]:IfStatement[36934-36959]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[36533-36545]:ReturnStatement[36947-36959]"
    }, {
      "left" : "Segment seg = _segment;",
      "right" : "Segment seg = _segment;",
      "info" : "VariableDeclarationStatement[36558-36581]:VariableDeclarationStatement[36972-36995]"
    }, {
      "left" : "int ptr = _segmentPtr+1;",
      "right" : "int ptr = _segmentPtr+1;",
      "info" : "VariableDeclarationStatement[36594-36618]:VariableDeclarationStatement[37008-37032]"
    }, {
      "left" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[36631-36767]:IfStatement[37045-37181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36670-36767]:Block[37084-37181]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[36688-36696]:ExpressionStatement[37102-37110]"
    }, {
      "left" : "seg = (seg == null) ? null : seg.next();",
      "right" : "seg = (seg == null) ? null : seg.next();",
      "info" : "ExpressionStatement[36713-36753]:ExpressionStatement[37127-37167]"
    }, {
      "left" : "return (seg == null) ? null : seg.type(ptr);",
      "right" : "return (seg == null) ? null : seg.type(ptr);",
      "info" : "ReturnStatement[36780-36824]:ReturnStatement[37194-37238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37105-37190]:Block[37519-37604]"
    }, {
      "left" : "if (!_closed)",
      "right" : "if (!_closed)",
      "info" : "IfStatement[37119-37180]:IfStatement[37533-37594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37133-37180]:Block[37547-37594]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[37151-37166]:ExpressionStatement[37565-37580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37475-39031]:Block[37889-39445]"
    }, {
      "left" : "if (_closed || (_segment == null))",
      "right" : "if (_closed || (_segment == null))",
      "info" : "IfStatement[37541-37588]:IfStatement[37955-38002]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[37576-37588]:ReturnStatement[37990-38002]"
    }, {
      "left" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[37644-37876]:IfStatement[38058-38290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37693-37876]:Block[38107-38290]"
    }, {
      "left" : "_segmentPtr = 0;",
      "right" : "_segmentPtr = 0;",
      "info" : "ExpressionStatement[37711-37727]:ExpressionStatement[38125-38141]"
    }, {
      "left" : "_segment = _segment.next();",
      "right" : "_segment = _segment.next();",
      "info" : "ExpressionStatement[37744-37771]:ExpressionStatement[38158-38185]"
    }, {
      "left" : "if (_segment == null)",
      "right" : "if (_segment == null)",
      "info" : "IfStatement[37788-37862]:IfStatement[38202-38276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37810-37862]:Block[38224-38276]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[37832-37844]:ReturnStatement[38246-38258]"
    }, {
      "left" : "_currToken = _segment.type(_segmentPtr);",
      "right" : "_currToken = _segment.type(_segmentPtr);",
      "info" : "ExpressionStatement[37889-37929]:ExpressionStatement[38303-38343]"
    }, {
      "left" : "if (_currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[37992-38990]:IfStatement[38406-39404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38032-38233]:Block[38446-38647]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[38050-38079]:VariableDeclarationStatement[38464-38493]"
    }, {
      "left" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "right" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "info" : "VariableDeclarationStatement[38096-38165]:VariableDeclarationStatement[38510-38579]"
    }, {
      "left" : "_parsingContext.setCurrentName(name);",
      "right" : "_parsingContext.setCurrentName(name);",
      "info" : "ExpressionStatement[38182-38219]:ExpressionStatement[38596-38633]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT)",
      "right" : "if (_currToken == JsonToken.START_OBJECT)",
      "info" : "IfStatement[38239-38990]:IfStatement[38653-39404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38281-38380]:Block[38695-38794]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "info" : "ExpressionStatement[38299-38366]:ExpressionStatement[38713-38780]"
    }, {
      "left" : "if (_currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[38386-38990]:IfStatement[38800-39404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38427-38525]:Block[38841-38939]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "info" : "ExpressionStatement[38445-38511]:ExpressionStatement[38859-38925]"
    }, {
      "left" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "right" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "info" : "IfStatement[38531-38990]:IfStatement[38945-39404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38628-38990]:Block[39042-39404]"
    }, {
      "left" : "_parsingContext = _parsingContext.getParent();",
      "right" : "_parsingContext = _parsingContext.getParent();",
      "info" : "ExpressionStatement[38715-38761]:ExpressionStatement[39129-39175]"
    }, {
      "left" : "if (_parsingContext == null)",
      "right" : "if (_parsingContext == null)",
      "info" : "IfStatement[38849-38976]:IfStatement[39263-39390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38878-38976]:Block[39292-39390]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[38900-38958]:ExpressionStatement[39314-39372]"
    }, {
      "left" : "return _currToken;",
      "right" : "return _currToken;",
      "info" : "ReturnStatement[39003-39021]:ReturnStatement[39417-39435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39116-39753]:Block[39530-40167]"
    }, {
      "left" : "if (_closed || (_segment == null))",
      "right" : "if (_closed || (_segment == null))",
      "info" : "IfStatement[39182-39229]:IfStatement[39596-39643]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[39217-39229]:ReturnStatement[39631-39643]"
    }, {
      "left" : "int ptr = _segmentPtr+1;",
      "right" : "int ptr = _segmentPtr+1;",
      "info" : "VariableDeclarationStatement[39243-39267]:VariableDeclarationStatement[39657-39681]"
    }, {
      "left" : "if (ptr < Segment.TOKENS_PER_SEGMENT && _segment.type(ptr) == JsonToken.FIELD_NAME)",
      "right" : "if (ptr < Segment.TOKENS_PER_SEGMENT && _segment.type(ptr) == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[39280-39659]:IfStatement[39694-40073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39364-39659]:Block[39778-40073]"
    }, {
      "left" : "_segmentPtr = ptr;",
      "right" : "_segmentPtr = ptr;",
      "info" : "ExpressionStatement[39382-39400]:ExpressionStatement[39796-39814]"
    }, {
      "left" : "Object ob = _segment.get(ptr);",
      "right" : "Object ob = _segment.get(ptr);",
      "info" : "VariableDeclarationStatement[39417-39447]:VariableDeclarationStatement[39831-39861]"
    }, {
      "left" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "right" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "info" : "VariableDeclarationStatement[39493-39562]:VariableDeclarationStatement[39907-39976]"
    }, {
      "left" : "_parsingContext.setCurrentName(name);",
      "right" : "_parsingContext.setCurrentName(name);",
      "info" : "ExpressionStatement[39579-39616]:ExpressionStatement[39993-40030]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[39633-39645]:ReturnStatement[40047-40059]"
    }, {
      "left" : "return (nextToken() == JsonToken.FIELD_NAME) ? getCurrentName() : null;",
      "right" : "return (nextToken() == JsonToken.FIELD_NAME) ? getCurrentName() : null;",
      "info" : "ReturnStatement[39672-39743]:ReturnStatement[40086-40157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39807-39826]:Block[40221-40240]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[39809-39824]:ReturnStatement[40223-40238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40098-40125]:Block[40512-40539]"
    }, {
      "left" : "return _parsingContext;",
      "right" : "return _parsingContext;",
      "info" : "ReturnStatement[40100-40123]:ReturnStatement[40514-40537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40192-40224]:Block[40606-40638]"
    }, {
      "left" : "return getCurrentLocation();",
      "right" : "return getCurrentLocation();",
      "info" : "ReturnStatement[40194-40222]:ReturnStatement[40608-40636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40293-40374]:Block[40707-40788]"
    }, {
      "left" : "return (_location == null) ? JsonLocation.NA : _location;",
      "right" : "return (_location == null) ? JsonLocation.NA : _location;",
      "info" : "ReturnStatement[40307-40364]:ReturnStatement[40721-40778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40433-40812]:Block[40847-41226]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[40535-40749]:IfStatement[40949-41163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40616-40749]:Block[41030-41163]"
    }, {
      "left" : "JsonReadContext parent = _parsingContext.getParent();",
      "right" : "JsonReadContext parent = _parsingContext.getParent();",
      "info" : "VariableDeclarationStatement[40634-40687]:VariableDeclarationStatement[41048-41101]"
    }, {
      "left" : "return parent.getCurrentName();",
      "right" : "return parent.getCurrentName();",
      "info" : "ReturnStatement[40704-40735]:ReturnStatement[41118-41149]"
    }, {
      "left" : "return _parsingContext.getCurrentName();",
      "right" : "return _parsingContext.getCurrentName();",
      "info" : "ReturnStatement[40762-40802]:ReturnStatement[41176-41216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40893-41351]:Block[41307-41765]"
    }, {
      "left" : "JsonReadContext ctxt = _parsingContext;",
      "right" : "JsonReadContext ctxt = _parsingContext;",
      "info" : "VariableDeclarationStatement[40992-41031]:VariableDeclarationStatement[41406-41445]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[41044-41181]:IfStatement[41458-41595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41125-41181]:Block[41539-41595]"
    }, {
      "left" : "ctxt = ctxt.getParent();",
      "right" : "ctxt = ctxt.getParent();",
      "info" : "ExpressionStatement[41143-41167]:ExpressionStatement[41557-41581]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[41194-41341]:TryStatement[41608-41755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41198-41256]:Block[41612-41670]"
    }, {
      "left" : "ctxt.setCurrentName(name);",
      "right" : "ctxt.setCurrentName(name);",
      "info" : "ExpressionStatement[41216-41242]:ExpressionStatement[41630-41656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41279-41341]:Block[41693-41755]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[41297-41327]:ThrowStatement[41711-41741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41628-42381]:Block[42042-42795]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[41677-42000]:IfStatement[42091-42414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41777-42000]:Block[42191-42414]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[41795-41824]:VariableDeclarationStatement[42209-42238]"
    }, {
      "left" : "if (ob instanceof String)",
      "right" : "if (ob instanceof String)",
      "info" : "IfStatement[41841-41926]:IfStatement[42255-42340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41867-41926]:Block[42281-42340]"
    }, {
      "left" : "return (String) ob;",
      "right" : "return (String) ob;",
      "info" : "ReturnStatement[41889-41908]:ReturnStatement[42303-42322]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[41943-41986]:ReturnStatement[42357-42400]"
    }, {
      "left" : "if (_currToken == null)",
      "right" : "if (_currToken == null)",
      "info" : "IfStatement[42013-42081]:IfStatement[42427-42495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42037-42081]:Block[42451-42495]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[42055-42067]:ReturnStatement[42469-42481]"
    }, {
      "left" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "right" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "info" : "SwitchStatement[42094-42371]:SwitchStatement[42508-42785]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[42128-42150]:SwitchCase[42542-42564]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[42163-42187]:SwitchCase[42577-42601]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[42204-42233]:VariableDeclarationStatement[42618-42647]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[42250-42293]:ReturnStatement[42664-42707]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[42306-42314]:SwitchCase[42720-42728]"
    }, {
      "left" : "return _currToken.asString();",
      "right" : "return _currToken.asString();",
      "info" : "ReturnStatement[42328-42357]:ReturnStatement[42742-42771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42443-42551]:Block[42857-42965]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[42457-42480]:VariableDeclarationStatement[42871-42894]"
    }, {
      "left" : "return (str == null) ? null : str.toCharArray();",
      "right" : "return (str == null) ? null : str.toCharArray();",
      "info" : "ReturnStatement[42493-42541]:ReturnStatement[42907-42955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42606-42706]:Block[43020-43120]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[42620-42643]:VariableDeclarationStatement[43034-43057]"
    }, {
      "left" : "return (str == null) ? 0 : str.length();",
      "right" : "return (str == null) ? 0 : str.length();",
      "info" : "ReturnStatement[42656-42696]:ReturnStatement[43070-43110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42761-42774]:Block[43175-43188]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[42763-42772]:ReturnStatement[43177-43186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42837-42929]:Block[43251-43343]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42906-42919]:ReturnStatement[43320-43333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43251-43662]:Block[43665-44076]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[43265-43293]:VariableDeclarationStatement[43679-43707]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[43306-43389]:IfStatement[43720-43803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43335-43389]:Block[43749-43803]"
    }, {
      "left" : "return (BigInteger) n;",
      "right" : "return (BigInteger) n;",
      "info" : "ReturnStatement[43353-43375]:ReturnStatement[43767-43789]"
    }, {
      "left" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "right" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "info" : "IfStatement[43402-43520]:IfStatement[43816-43934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43449-43520]:Block[43863-43934]"
    }, {
      "left" : "return ((BigDecimal) n).toBigInteger();",
      "right" : "return ((BigDecimal) n).toBigInteger();",
      "info" : "ReturnStatement[43467-43506]:ReturnStatement[43881-43920]"
    }, {
      "left" : "return BigInteger.valueOf(n.longValue());",
      "right" : "return BigInteger.valueOf(n.longValue());",
      "info" : "ReturnStatement[43611-43652]:ReturnStatement[44025-44066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43753-44250]:Block[44167-44664]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[43767-43795]:VariableDeclarationStatement[44181-44209]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[43808-43891]:IfStatement[44222-44305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43837-43891]:Block[44251-44305]"
    }, {
      "left" : "return (BigDecimal) n;",
      "right" : "return (BigDecimal) n;",
      "info" : "ReturnStatement[43855-43877]:ReturnStatement[44269-44291]"
    }, {
      "left" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "right" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "info" : "SwitchStatement[43904-44153]:SwitchStatement[44318-44567]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[43943-43952]:SwitchCase[44357-44366]"
    }, {
      "left" : "case LONG:",
      "right" : "case LONG:",
      "info" : "SwitchCase[43965-43975]:SwitchCase[44379-44389]"
    }, {
      "left" : "return BigDecimal.valueOf(n.longValue());",
      "right" : "return BigDecimal.valueOf(n.longValue());",
      "info" : "ReturnStatement[43992-44033]:ReturnStatement[44406-44447]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[44046-44063]:SwitchCase[44460-44477]"
    }, {
      "left" : "return new BigDecimal((BigInteger) n);",
      "right" : "return new BigDecimal((BigInteger) n);",
      "info" : "ReturnStatement[44080-44118]:ReturnStatement[44494-44532]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[44131-44139]:SwitchCase[44545-44553]"
    }, {
      "left" : "return BigDecimal.valueOf(n.doubleValue());",
      "right" : "return BigDecimal.valueOf(n.doubleValue());",
      "info" : "ReturnStatement[44197-44240]:ReturnStatement[44611-44654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44328-44390]:Block[44742-44804]"
    }, {
      "left" : "return getNumberValue().doubleValue();",
      "right" : "return getNumberValue().doubleValue();",
      "info" : "ReturnStatement[44342-44380]:ReturnStatement[44756-44794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44466-44527]:Block[44880-44941]"
    }, {
      "left" : "return getNumberValue().floatValue();",
      "right" : "return getNumberValue().floatValue();",
      "info" : "ReturnStatement[44480-44517]:ReturnStatement[44894-44931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44607-44840]:Block[45021-45254]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "right" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "info" : "IfStatement[44658-44782]:IfStatement[45072-45196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44704-44782]:Block[45118-45196]"
    }, {
      "left" : "return ((Number) _currentObject()).intValue();",
      "right" : "return ((Number) _currentObject()).intValue();",
      "info" : "ReturnStatement[44722-44768]:ReturnStatement[45136-45182]"
    }, {
      "left" : "return getNumberValue().intValue();",
      "right" : "return getNumberValue().intValue();",
      "info" : "ReturnStatement[44795-44830]:ReturnStatement[45209-45244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44914-44974]:Block[45328-45388]"
    }, {
      "left" : "return getNumberValue().longValue();",
      "right" : "return getNumberValue().longValue();",
      "info" : "ReturnStatement[44928-44964]:ReturnStatement[45342-45378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45063-45612]:Block[45477-46026]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[45077-45105]:VariableDeclarationStatement[45491-45519]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[45118-45166]:IfStatement[45532-45580]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[45144-45166]:ReturnStatement[45558-45580]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[45179-45225]:IfStatement[45593-45639]"
    }, {
      "left" : "return NumberType.LONG;",
      "right" : "return NumberType.LONG;",
      "info" : "ReturnStatement[45202-45225]:ReturnStatement[45616-45639]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[45238-45288]:IfStatement[45652-45702]"
    }, {
      "left" : "return NumberType.DOUBLE;",
      "right" : "return NumberType.DOUBLE;",
      "info" : "ReturnStatement[45263-45288]:ReturnStatement[45677-45702]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[45301-45360]:IfStatement[45715-45774]"
    }, {
      "left" : "return NumberType.BIG_DECIMAL;",
      "right" : "return NumberType.BIG_DECIMAL;",
      "info" : "ReturnStatement[45330-45360]:ReturnStatement[45744-45774]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[45373-45432]:IfStatement[45787-45846]"
    }, {
      "left" : "return NumberType.BIG_INTEGER;",
      "right" : "return NumberType.BIG_INTEGER;",
      "info" : "ReturnStatement[45402-45432]:ReturnStatement[45816-45846]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[45445-45493]:IfStatement[45859-45907]"
    }, {
      "left" : "return NumberType.FLOAT;",
      "right" : "return NumberType.FLOAT;",
      "info" : "ReturnStatement[45469-45493]:ReturnStatement[45883-45907]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[45506-45552]:IfStatement[45920-45966]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[45530-45552]:ReturnStatement[45944-45966]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45590-45602]:ReturnStatement[46004-46016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45696-46594]:Block[46110-47008]"
    }, {
      "left" : "_checkIsNumber();",
      "right" : "_checkIsNumber();",
      "info" : "ExpressionStatement[45710-45727]:ExpressionStatement[46124-46141]"
    }, {
      "left" : "Object value = _currentObject();",
      "right" : "Object value = _currentObject();",
      "info" : "VariableDeclarationStatement[45740-45772]:VariableDeclarationStatement[46154-46186]"
    }, {
      "left" : "if (value instanceof Number)",
      "right" : "if (value instanceof Number)",
      "info" : "IfStatement[45785-45868]:IfStatement[46199-46282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45814-45868]:Block[46228-46282]"
    }, {
      "left" : "return (Number) value;",
      "right" : "return (Number) value;",
      "info" : "ReturnStatement[45832-45854]:ReturnStatement[46246-46268]"
    }, {
      "left" : "if (value instanceof String)",
      "right" : "if (value instanceof String)",
      "info" : "IfStatement[46106-46354]:IfStatement[46520-46768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46135-46354]:Block[46549-46768]"
    }, {
      "left" : "String str = (String) value;",
      "right" : "String str = (String) value;",
      "info" : "VariableDeclarationStatement[46153-46181]:VariableDeclarationStatement[46567-46595]"
    }, {
      "left" : "if (str.indexOf('.') >= 0)",
      "right" : "if (str.indexOf('.') >= 0)",
      "info" : "IfStatement[46198-46296]:IfStatement[46612-46710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46225-46296]:Block[46639-46710]"
    }, {
      "left" : "return Double.parseDouble(str);",
      "right" : "return Double.parseDouble(str);",
      "info" : "ReturnStatement[46247-46278]:ReturnStatement[46661-46692]"
    }, {
      "left" : "return Long.parseLong(str);",
      "right" : "return Long.parseLong(str);",
      "info" : "ReturnStatement[46313-46340]:ReturnStatement[46727-46754]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[46367-46430]:IfStatement[46781-46844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46386-46430]:Block[46800-46844]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[46404-46416]:ReturnStatement[46818-46830]"
    }, {
      "left" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "right" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "info" : "ThrowStatement[46443-46584]:ThrowStatement[46857-46998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46882-47038]:Block[47296-47452]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[46896-47003]:IfStatement[47310-47417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46947-47003]:Block[47361-47417]"
    }, {
      "left" : "return _currentObject();",
      "right" : "return _currentObject();",
      "info" : "ReturnStatement[46965-46989]:ReturnStatement[47379-47403]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47016-47028]:ReturnStatement[47430-47442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47206-48266]:Block[47620-48680]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[47271-47591]:IfStatement[47685-48005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47322-47591]:Block[47736-48005]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[47400-47429]:VariableDeclarationStatement[47814-47843]"
    }, {
      "left" : "if (ob instanceof byte[])",
      "right" : "if (ob instanceof byte[])",
      "info" : "IfStatement[47446-47531]:IfStatement[47860-47945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47472-47531]:Block[47886-47945]"
    }, {
      "left" : "return (byte[]) ob;",
      "right" : "return (byte[]) ob;",
      "info" : "ReturnStatement[47494-47513]:ReturnStatement[47908-47927]"
    }, {
      "left" : "if (_currToken != JsonToken.VALUE_STRING)",
      "right" : "if (_currToken != JsonToken.VALUE_STRING)",
      "info" : "IfStatement[47604-47816]:IfStatement[48018-48230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47646-47816]:Block[48060-48230]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "info" : "ThrowStatement[47664-47802]:ThrowStatement[48078-48216]"
    }, {
      "left" : "final String str = getText();",
      "right" : "final String str = getText();",
      "info" : "VariableDeclarationStatement[47829-47858]:VariableDeclarationStatement[48243-48272]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[47871-47932]:IfStatement[48285-48346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47888-47932]:Block[48302-48346]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47906-47918]:ReturnStatement[48320-48332]"
    }, {
      "left" : "ByteArrayBuilder builder = _byteBuilder;",
      "right" : "ByteArrayBuilder builder = _byteBuilder;",
      "info" : "VariableDeclarationStatement[47945-47985]:VariableDeclarationStatement[48359-48399]"
    }, {
      "left" : "if (builder == null)",
      "right" : "if (builder == null)",
      "info" : "IfStatement[47998-48161]:IfStatement[48412-48575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48019-48102]:Block[48433-48516]"
    }, {
      "left" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "right" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "info" : "ExpressionStatement[48037-48088]:ExpressionStatement[48451-48502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48108-48161]:Block[48522-48575]"
    }, {
      "left" : "_byteBuilder.reset();",
      "right" : "_byteBuilder.reset();",
      "info" : "ExpressionStatement[48126-48147]:ExpressionStatement[48540-48561]"
    }, {
      "left" : "_decodeBase64(str, builder, b64variant);",
      "right" : "_decodeBase64(str, builder, b64variant);",
      "info" : "ExpressionStatement[48174-48214]:ExpressionStatement[48588-48628]"
    }, {
      "left" : "return builder.toByteArray();",
      "right" : "return builder.toByteArray();",
      "info" : "ReturnStatement[48227-48256]:ReturnStatement[48641-48670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48392-48610]:Block[48806-49024]"
    }, {
      "left" : "byte[] data = getBinaryValue(b64variant);",
      "right" : "byte[] data = getBinaryValue(b64variant);",
      "info" : "VariableDeclarationStatement[48406-48447]:VariableDeclarationStatement[48820-48861]"
    }, {
      "left" : "if (data != null)",
      "right" : "if (data != null)",
      "info" : "IfStatement[48460-48578]:IfStatement[48874-48992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48478-48578]:Block[48892-48992]"
    }, {
      "left" : "out.write(data, 0, data.length);",
      "right" : "out.write(data, 0, data.length);",
      "info" : "ExpressionStatement[48496-48528]:ExpressionStatement[48910-48942]"
    }, {
      "left" : "return data.length;",
      "right" : "return data.length;",
      "info" : "ReturnStatement[48545-48564]:ReturnStatement[48959-48978]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[48591-48600]:ReturnStatement[49005-49014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48865-48916]:Block[49279-49330]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[48879-48906]:ReturnStatement[49293-49320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48975-49024]:Block[49389-49438]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[48989-49014]:ReturnStatement[49403-49428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49078-49142]:Block[49492-49556]"
    }, {
      "left" : "return _segment.findTypeId(_segmentPtr);",
      "right" : "return _segment.findTypeId(_segmentPtr);",
      "info" : "ReturnStatement[49092-49132]:ReturnStatement[49506-49546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49198-49264]:Block[49612-49678]"
    }, {
      "left" : "return _segment.findObjectId(_segmentPtr);",
      "right" : "return _segment.findObjectId(_segmentPtr);",
      "info" : "ReturnStatement[49212-49254]:ReturnStatement[49626-49668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49510-49567]:Block[49924-49981]"
    }, {
      "left" : "return _segment.get(_segmentPtr);",
      "right" : "return _segment.get(_segmentPtr);",
      "info" : "ReturnStatement[49524-49557]:ReturnStatement[49938-49971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49649-49861]:Block[50063-50275]"
    }, {
      "left" : "if (_currToken == null || !_currToken.isNumeric())",
      "right" : "if (_currToken == null || !_currToken.isNumeric())",
      "info" : "IfStatement[49663-49851]:IfStatement[50077-50265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49714-49851]:Block[50128-50265]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "info" : "ThrowStatement[49732-49837]:ThrowStatement[50146-50251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49943-49984]:Block[50357-50398]"
    }, {
      "left" : "_throwInternal();",
      "right" : "_throwInternal();",
      "info" : "ExpressionStatement[49957-49974]:ExpressionStatement[50371-50388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50676-51011]:Block[51090-51425]"
    }, {
      "left" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "right" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "info" : "ExpressionStatement[50768-50809]:ExpressionStatement[51182-51223]"
    }, {
      "left" : "JsonToken[] t = JsonToken.values();",
      "right" : "JsonToken[] t = JsonToken.values();",
      "info" : "VariableDeclarationStatement[50822-50857]:VariableDeclarationStatement[51236-51271]"
    }, {
      "left" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "right" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "info" : "ExpressionStatement[50925-51001]:ExpressionStatement[51339-51415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51605-51608]:Block[52019-52022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51687-51894]:Block[52101-52308]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[51701-51722]:VariableDeclarationStatement[52115-52136]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[51735-51801]:IfStatement[52149-52215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51750-51801]:Block[52164-52215]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[51768-51787]:ExpressionStatement[52182-52201]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[51814-51839]:VariableDeclarationStatement[52228-52253]"
    }, {
      "left" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "right" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "info" : "ReturnStatement[51852-51884]:ReturnStatement[52266-52298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51942-52127]:Block[52356-52541]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[51956-51977]:VariableDeclarationStatement[52370-52391]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[51990-52056]:IfStatement[52404-52470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52005-52056]:Block[52419-52470]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[52023-52042]:ExpressionStatement[52437-52456]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[52069-52094]:VariableDeclarationStatement[52483-52508]"
    }, {
      "left" : "return ix;",
      "right" : "return ix;",
      "info" : "ReturnStatement[52107-52117]:ReturnStatement[52521-52531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52174-52220]:Block[52588-52634]"
    }, {
      "left" : "return _tokens[index];",
      "right" : "return _tokens[index];",
      "info" : "ReturnStatement[52188-52210]:ReturnStatement[52602-52624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52252-52269]:Block[52666-52683]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[52254-52267]:ReturnStatement[52668-52681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52428-52478]:Block[52842-52892]"
    }, {
      "left" : "return _nativeIds != null;",
      "right" : "return _nativeIds != null;",
      "info" : "ReturnStatement[52442-52468]:ReturnStatement[52856-52882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52593-52830]:Block[53007-53244]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[52607-52722]:IfStatement[53021-53136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52639-52722]:Block[53053-53136]"
    }, {
      "left" : "set(index, tokenType);",
      "right" : "set(index, tokenType);",
      "info" : "ExpressionStatement[52657-52679]:ExpressionStatement[53071-53093]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52696-52708]:ReturnStatement[53110-53122]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[52735-52757]:ExpressionStatement[53149-53171]"
    }, {
      "left" : "_next.set(0, tokenType);",
      "right" : "_next.set(0, tokenType);",
      "info" : "ExpressionStatement[52770-52794]:ExpressionStatement[53184-53208]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[52807-52820]:ReturnStatement[53221-53234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52950-53223]:Block[53364-53637]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[52964-53097]:IfStatement[53378-53511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52996-53097]:Block[53410-53511]"
    }, {
      "left" : "set(index, tokenType, objectId, typeId);",
      "right" : "set(index, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[53014-53054]:ExpressionStatement[53428-53468]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53071-53083]:ReturnStatement[53485-53497]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[53110-53132]:ExpressionStatement[53524-53546]"
    }, {
      "left" : "_next.set(0, tokenType, objectId, typeId);",
      "right" : "_next.set(0, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[53145-53187]:ExpressionStatement[53559-53601]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53200-53213]:ReturnStatement[53614-53627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53309-53560]:Block[53723-53974]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[53323-53445]:IfStatement[53737-53859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53355-53445]:Block[53769-53859]"
    }, {
      "left" : "set(index, tokenType, value);",
      "right" : "set(index, tokenType, value);",
      "info" : "ExpressionStatement[53373-53402]:ExpressionStatement[53787-53816]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53419-53431]:ReturnStatement[53833-53845]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[53458-53480]:ExpressionStatement[53872-53894]"
    }, {
      "left" : "_next.set(0, tokenType, value);",
      "right" : "_next.set(0, tokenType, value);",
      "info" : "ExpressionStatement[53493-53524]:ExpressionStatement[53907-53938]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53537-53550]:ReturnStatement[53951-53964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53694-53981]:Block[54108-54395]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[53708-53848]:IfStatement[54122-54262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53740-53848]:Block[54154-54262]"
    }, {
      "left" : "set(index, tokenType, value, objectId, typeId);",
      "right" : "set(index, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[53758-53805]:ExpressionStatement[54172-54219]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53822-53834]:ReturnStatement[54236-54248]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[53861-53883]:ExpressionStatement[54275-54297]"
    }, {
      "left" : "_next.set(0, tokenType, value, objectId, typeId);",
      "right" : "_next.set(0, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[53896-53945]:ExpressionStatement[54310-54359]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53958-53971]:ReturnStatement[54372-54385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54067-54324]:Block[54481-54738]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[54081-54206]:IfStatement[54495-54620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54113-54206]:Block[54527-54620]"
    }, {
      "left" : "set(index, rawTokenType, value);",
      "right" : "set(index, rawTokenType, value);",
      "info" : "ExpressionStatement[54131-54163]:ExpressionStatement[54545-54577]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[54180-54192]:ReturnStatement[54594-54606]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[54219-54241]:ExpressionStatement[54633-54655]"
    }, {
      "left" : "_next.set(0, rawTokenType, value);",
      "right" : "_next.set(0, rawTokenType, value);",
      "info" : "ExpressionStatement[54254-54288]:ExpressionStatement[54668-54702]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[54301-54314]:ReturnStatement[54715-54728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54458-54751]:Block[54872-55165]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[54472-54615]:IfStatement[54886-55029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54504-54615]:Block[54918-55029]"
    }, {
      "left" : "set(index, rawTokenType, value, objectId, typeId);",
      "right" : "set(index, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[54522-54572]:ExpressionStatement[54936-54986]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[54589-54601]:ReturnStatement[55003-55015]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[54628-54650]:ExpressionStatement[55042-55064]"
    }, {
      "left" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "right" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[54663-54715]:ExpressionStatement[55077-55129]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[54728-54741]:ReturnStatement[55142-55155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54818-55169]:Block[55232-55583]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[55000-55036]:VariableDeclarationStatement[55414-55450]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[55049-55122]:IfStatement[55463-55536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55064-55122]:Block[55478-55536]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[55082-55108]:ExpressionStatement[55496-55522]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[55135-55159]:ExpressionStatement[55549-55573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55284-55521]:Block[55698-55935]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[55298-55334]:VariableDeclarationStatement[55712-55748]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[55347-55420]:IfStatement[55761-55834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55362-55420]:Block[55776-55834]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[55380-55406]:ExpressionStatement[55794-55820]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[55433-55457]:ExpressionStatement[55847-55871]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[55470-55511]:ExpressionStatement[55884-55925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55602-55821]:Block[56016-56235]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[55616-55639]:ExpressionStatement[56030-56053]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[55652-55688]:VariableDeclarationStatement[56066-56102]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[55701-55774]:IfStatement[56115-56188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55716-55774]:Block[56130-56188]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[55734-55760]:ExpressionStatement[56148-56174]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[55787-55811]:ExpressionStatement[56201-56225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55950-56223]:Block[56364-56637]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[55964-55987]:ExpressionStatement[56378-56401]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[56000-56036]:VariableDeclarationStatement[56414-56450]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[56049-56122]:IfStatement[56463-56536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56064-56122]:Block[56478-56536]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[56082-56108]:ExpressionStatement[56496-56522]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[56135-56159]:ExpressionStatement[56549-56573]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[56172-56213]:ExpressionStatement[56586-56627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56301-56520]:Block[56715-56934]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[56315-56338]:ExpressionStatement[56729-56752]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[56351-56387]:VariableDeclarationStatement[56765-56801]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[56400-56473]:IfStatement[56814-56887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56415-56473]:Block[56829-56887]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[56433-56459]:ExpressionStatement[56847-56873]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[56486-56510]:ExpressionStatement[56900-56924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56630-56903]:Block[57044-57317]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[56644-56667]:ExpressionStatement[57058-57081]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[56680-56716]:VariableDeclarationStatement[57094-57130]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[56729-56802]:IfStatement[57143-57216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56744-56802]:Block[57158-57216]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[56762-56788]:ExpressionStatement[57176-57202]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[56815-56839]:ExpressionStatement[57229-57253]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[56852-56893]:ExpressionStatement[57266-57307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56999-57346]:Block[57413-57760]"
    }, {
      "left" : "if (_nativeIds == null)",
      "right" : "if (_nativeIds == null)",
      "info" : "IfStatement[57013-57112]:IfStatement[57427-57526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57037-57112]:Block[57451-57526]"
    }, {
      "left" : "_nativeIds = new TreeMap<Integer,Object>();",
      "right" : "_nativeIds = new TreeMap<Integer,Object>();",
      "info" : "ExpressionStatement[57055-57098]:ExpressionStatement[57469-57512]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[57125-57227]:IfStatement[57539-57641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57147-57227]:Block[57561-57641]"
    }, {
      "left" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "right" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "info" : "ExpressionStatement[57165-57213]:ExpressionStatement[57579-57627]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[57240-57336]:IfStatement[57654-57750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57260-57336]:Block[57674-57750]"
    }, {
      "left" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "right" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "info" : "ExpressionStatement[57278-57322]:ExpressionStatement[57692-57736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57440-57539]:Block[57854-57953]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "info" : "ReturnStatement[57454-57529]:ReturnStatement[57868-57943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57639-57736]:Block[58053-58150]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "info" : "ReturnStatement[57653-57726]:ReturnStatement[58067-58140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57784-57799]:Block[58198-58213]"
    }, {
      "left" : "return i+i;",
      "right" : "return i+i;",
      "info" : "ReturnStatement[57786-57797]:ReturnStatement[58200-58211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57848-57865]:Block[58262-58279]"
    }, {
      "left" : "return i+i+1;",
      "right" : "return i+i+1;",
      "info" : "ReturnStatement[57850-57863]:ReturnStatement[58264-58277]"
    } ]
  },
  "interFileMappings" : { }
}