{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "AlterUser",
      "right" : "AlterUser",
      "info" : "TypeDeclaration[597-3368]:TypeDeclaration[524-2807]"
    }, {
      "left" : "private int type;",
      "right" : "private int type;",
      "info" : "FieldDeclaration[767-784]:FieldDeclaration[694-711]"
    }, {
      "left" : "private User user;",
      "right" : "private User user;",
      "info" : "FieldDeclaration[789-807]:FieldDeclaration[716-734]"
    }, {
      "left" : "private String newName;",
      "right" : "private String newName;",
      "info" : "FieldDeclaration[812-835]:FieldDeclaration[739-762]"
    }, {
      "left" : "private Expression password;",
      "right" : "private Expression password;",
      "info" : "FieldDeclaration[840-868]:FieldDeclaration[767-795]"
    }, {
      "left" : "private Expression salt;",
      "right" : "private Expression salt;",
      "info" : "FieldDeclaration[873-897]:FieldDeclaration[800-824]"
    }, {
      "left" : "private Expression hash;",
      "right" : "private Expression hash;",
      "info" : "FieldDeclaration[902-926]:FieldDeclaration[829-853]"
    }, {
      "left" : "private boolean admin;",
      "right" : "private boolean admin;",
      "info" : "FieldDeclaration[931-953]:FieldDeclaration[858-880]"
    }, {
      "left" : "public AlterUser(Session session)",
      "right" : "public AlterUser(Session session)",
      "info" : "MethodDeclaration[959-1024]:MethodDeclaration[886-951]"
    }, {
      "left" : "public void setType(int type)",
      "right" : "public void setType(int type)",
      "info" : "MethodDeclaration[1030-1093]:MethodDeclaration[957-1020]"
    }, {
      "left" : "public void setNewName(String newName)",
      "right" : "public void setNewName(String newName)",
      "info" : "MethodDeclaration[1099-1177]:MethodDeclaration[1026-1104]"
    }, {
      "left" : "public void setUser(User user)",
      "right" : "public void setUser(User user)",
      "info" : "MethodDeclaration[1183-1247]:MethodDeclaration[1110-1174]"
    }, {
      "left" : "public void setAdmin(boolean admin)",
      "right" : "public void setAdmin(boolean admin)",
      "info" : "MethodDeclaration[1253-1324]:MethodDeclaration[1180-1251]"
    }, {
      "left" : "public void setSalt(Expression e)",
      "right" : "public void setSalt(Expression e)",
      "info" : "MethodDeclaration[1330-1389]:MethodDeclaration[1257-1316]"
    }, {
      "left" : "public void setHash(Expression e)",
      "right" : "public void setHash(Expression e)",
      "info" : "MethodDeclaration[1395-1454]:MethodDeclaration[1322-1381]"
    }, {
      "left" : "public void setPassword(Expression password)",
      "right" : "public void setPassword(Expression password)",
      "info" : "MethodDeclaration[1460-1546]:MethodDeclaration[1387-1473]"
    }, {
      "left" : "public int update()",
      "right" : "public int update()",
      "info" : "MethodDeclaration[1839-3310]:MethodDeclaration[1479-2735]"
    }, {
      "left" : "public int getType()",
      "right" : "public int getType()",
      "info" : "MethodDeclaration[3316-3365]:MethodDeclaration[2741-2804]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[993-1024]:Block[920-951]"
    }, {
      "left" : "super(session);",
      "right" : "super(session);",
      "info" : "SuperConstructorInvocation[1003-1018]:SuperConstructorInvocation[930-945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1060-1093]:Block[987-1020]"
    }, {
      "left" : "this.type = type;",
      "right" : "this.type = type;",
      "info" : "ExpressionStatement[1070-1087]:ExpressionStatement[997-1014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1138-1177]:Block[1065-1104]"
    }, {
      "left" : "this.newName = newName;",
      "right" : "this.newName = newName;",
      "info" : "ExpressionStatement[1148-1171]:ExpressionStatement[1075-1098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1214-1247]:Block[1141-1174]"
    }, {
      "left" : "this.user = user;",
      "right" : "this.user = user;",
      "info" : "ExpressionStatement[1224-1241]:ExpressionStatement[1151-1168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1289-1324]:Block[1216-1251]"
    }, {
      "left" : "this.admin = admin;",
      "right" : "this.admin = admin;",
      "info" : "ExpressionStatement[1299-1318]:ExpressionStatement[1226-1245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1364-1389]:Block[1291-1316]"
    }, {
      "left" : "salt = e;",
      "right" : "salt = e;",
      "info" : "ExpressionStatement[1374-1383]:ExpressionStatement[1301-1310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1429-1454]:Block[1356-1381]"
    }, {
      "left" : "hash = e;",
      "right" : "hash = e;",
      "info" : "ExpressionStatement[1439-1448]:ExpressionStatement[1366-1375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1505-1546]:Block[1432-1473]"
    }, {
      "left" : "this.password = password;",
      "right" : "this.password = password;",
      "info" : "ExpressionStatement[1515-1540]:ExpressionStatement[1442-1467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1859-3310]:Block[1513-2735]"
    }, {
      "left" : "session.commit(true);",
      "right" : "session.commit(true);",
      "info" : "ExpressionStatement[1869-1890]:ExpressionStatement[1523-1544]"
    }, {
      "left" : "Database db = session.getDatabase();",
      "right" : "Database db = session.getDatabase();",
      "info" : "VariableDeclarationStatement[1899-1935]:VariableDeclarationStatement[1553-1589]"
    }, {
      "left" : "switch (type) {\n        case CommandInterface.ALTER_USER_SET_PASSWORD:\n            if (user != session.getUser()) {\n                session.getUser().checkAdmin();\n            }\n            if (hash != null && salt != null) {\n                user.setSaltAndHash(getByteArray(salt), getByteArray(hash));\n            } else {\n                String name = newName == null ? user.getName() : newName;\n                char[] passwordChars = getCharArray(password);\n                byte[] userPasswordHash = SHA256.getKeyPasswordHash(name, passwordChars);\n                user.setUserPasswordHash(userPasswordHash);\n            }\n            break;\n        case CommandInterface.ALTER_USER_RENAME:\n            session.getUser().checkAdmin();\n            if (db.findUser(newName) != null || newName.equals(user.getName())) {\n                throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, newName);\n            }\n            db.renameDatabaseObject(session, user, newName);\n            break;\n        case CommandInterface.ALTER_USER_ADMIN:\n            session.getUser().checkAdmin();\n            if (!admin) {\n                user.checkOwnsNoSchemas();\n            }\n            user.setAdmin(admin);\n            break;\n        default:\n            DbException.throwInternalError(\"type=\" + type);\n        }",
      "right" : "switch (type) {\n        case CommandInterface.ALTER_USER_SET_PASSWORD:\n            if (user != session.getUser()) {\n                session.getUser().checkAdmin();\n            }\n            if (hash != null && salt != null) {\n                CreateUser.setSaltAndHash(user, session, salt, hash);\n            } else {\n                CreateUser.setPassword(user, session, password);\n            }\n            break;\n        case CommandInterface.ALTER_USER_RENAME:\n            session.getUser().checkAdmin();\n            if (db.findUser(newName) != null || newName.equals(user.getName())) {\n                throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, newName);\n            }\n            db.renameDatabaseObject(session, user, newName);\n            break;\n        case CommandInterface.ALTER_USER_ADMIN:\n            session.getUser().checkAdmin();\n            if (!admin) {\n                user.checkOwnsNoSchemas();\n            }\n            user.setAdmin(admin);\n            break;\n        default:\n            DbException.throwInternalError(\"type=\" + type);\n        }",
      "info" : "SwitchStatement[1944-3252]:SwitchStatement[1598-2677]"
    }, {
      "left" : "case CommandInterface.ALTER_USER_SET_PASSWORD:",
      "right" : "case CommandInterface.ALTER_USER_SET_PASSWORD:",
      "info" : "SwitchCase[1968-2014]:SwitchCase[1622-1668]"
    }, {
      "left" : "if (user != session.getUser())",
      "right" : "if (user != session.getUser())",
      "info" : "IfStatement[2027-2121]:IfStatement[1681-1775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2058-2121]:Block[1712-1775]"
    }, {
      "left" : "session.getUser().checkAdmin();",
      "right" : "session.getUser().checkAdmin();",
      "info" : "ExpressionStatement[2076-2107]:ExpressionStatement[1730-1761]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2581-2587]:BreakStatement[2006-2012]"
    }, {
      "left" : "case CommandInterface.ALTER_USER_RENAME:",
      "right" : "case CommandInterface.ALTER_USER_RENAME:",
      "info" : "SwitchCase[2596-2636]:SwitchCase[2021-2061]"
    }, {
      "left" : "session.getUser().checkAdmin();",
      "right" : "session.getUser().checkAdmin();",
      "info" : "ExpressionStatement[2649-2680]:ExpressionStatement[2074-2105]"
    }, {
      "left" : "if (db.findUser(newName) != null || newName.equals(user.getName()))",
      "right" : "if (db.findUser(newName) != null || newName.equals(user.getName()))",
      "info" : "IfStatement[2693-2857]:IfStatement[2118-2282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2761-2857]:Block[2186-2282]"
    }, {
      "left" : "throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, newName);",
      "right" : "throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, newName);",
      "info" : "ThrowStatement[2779-2843]:ThrowStatement[2204-2268]"
    }, {
      "left" : "db.renameDatabaseObject(session, user, newName);",
      "right" : "db.renameDatabaseObject(session, user, newName);",
      "info" : "ExpressionStatement[2870-2918]:ExpressionStatement[2295-2343]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2931-2937]:BreakStatement[2356-2362]"
    }, {
      "left" : "case CommandInterface.ALTER_USER_ADMIN:",
      "right" : "case CommandInterface.ALTER_USER_ADMIN:",
      "info" : "SwitchCase[2946-2985]:SwitchCase[2371-2410]"
    }, {
      "left" : "session.getUser().checkAdmin();",
      "right" : "session.getUser().checkAdmin();",
      "info" : "ExpressionStatement[2998-3029]:ExpressionStatement[2423-2454]"
    }, {
      "left" : "if (!admin)",
      "right" : "if (!admin)",
      "info" : "IfStatement[3042-3112]:IfStatement[2467-2537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3054-3112]:Block[2479-2537]"
    }, {
      "left" : "user.checkOwnsNoSchemas();",
      "right" : "user.checkOwnsNoSchemas();",
      "info" : "ExpressionStatement[3072-3098]:ExpressionStatement[2497-2523]"
    }, {
      "left" : "user.setAdmin(admin);",
      "right" : "user.setAdmin(admin);",
      "info" : "ExpressionStatement[3125-3146]:ExpressionStatement[2550-2571]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3159-3165]:BreakStatement[2584-2590]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[3174-3182]:SwitchCase[2599-2607]"
    }, {
      "left" : "DbException.throwInternalError(\"type=\" + type);",
      "right" : "DbException.throwInternalError(\"type=\" + type);",
      "info" : "ExpressionStatement[3195-3242]:ExpressionStatement[2620-2667]"
    }, {
      "left" : "db.update(session, user);",
      "right" : "db.update(session, user);",
      "info" : "ExpressionStatement[3261-3286]:ExpressionStatement[2686-2711]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[3295-3304]:ReturnStatement[2720-2729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3337-3365]:Block[2776-2804]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[3347-3359]:ReturnStatement[2786-2798]"
    } ]
  },
  "interFileMappings" : { }
}