{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -2362048321261811743L;",
      "right" : "private static final long serialVersionUID = -2362048321261811743L;",
      "info" : "FieldDeclaration[3327-3394]:FieldDeclaration[3327-3394]"
    }, {
      "left" : "private static final String DUMMY_PATTERN = \"\";",
      "right" : "private static final String DUMMY_PATTERN = \"\";",
      "info" : "FieldDeclaration[3400-3447]:FieldDeclaration[3400-3447]"
    }, {
      "left" : "private static final String ESCAPED_QUOTE = \"''\";",
      "right" : "private static final String ESCAPED_QUOTE = \"''\";",
      "info" : "FieldDeclaration[3452-3501]:FieldDeclaration[3452-3501]"
    }, {
      "left" : "private static final char START_FMT = ',';",
      "right" : "private static final char START_FMT = ',';",
      "info" : "FieldDeclaration[3506-3548]:FieldDeclaration[3506-3548]"
    }, {
      "left" : "private static final char END_FE = '}';",
      "right" : "private static final char END_FE = '}';",
      "info" : "FieldDeclaration[3553-3592]:FieldDeclaration[3553-3592]"
    }, {
      "left" : "private static final char START_FE = '{';",
      "right" : "private static final char START_FE = '{';",
      "info" : "FieldDeclaration[3597-3638]:FieldDeclaration[3597-3638]"
    }, {
      "left" : "private static final char QUOTE = '\\'';",
      "right" : "private static final char QUOTE = '\\'';",
      "info" : "FieldDeclaration[3643-3682]:FieldDeclaration[3643-3682]"
    }, {
      "left" : "private String toPattern;",
      "right" : "private String toPattern;",
      "info" : "FieldDeclaration[3688-3713]:FieldDeclaration[3688-3713]"
    }, {
      "left" : "private Map registry;",
      "right" : "private Map registry;",
      "info" : "FieldDeclaration[3718-3739]:FieldDeclaration[3718-3739]"
    }, {
      "left" : "public ExtendedMessageFormat(String pattern)",
      "right" : "public ExtendedMessageFormat(String pattern)",
      "info" : "MethodDeclaration[3745-4026]:MethodDeclaration[3745-4026]"
    }, {
      "left" : "public ExtendedMessageFormat(String pattern, Locale locale)",
      "right" : "public ExtendedMessageFormat(String pattern, Locale locale)",
      "info" : "MethodDeclaration[4032-4326]:MethodDeclaration[4032-4326]"
    }, {
      "left" : "public ExtendedMessageFormat(String pattern, Map registry)",
      "right" : "public ExtendedMessageFormat(String pattern, Map registry)",
      "info" : "MethodDeclaration[4332-4718]:MethodDeclaration[4332-4718]"
    }, {
      "left" : "public ExtendedMessageFormat(String pattern, Locale locale, Map registry)",
      "right" : "public ExtendedMessageFormat(String pattern, Locale locale, Map registry)",
      "info" : "MethodDeclaration[4724-5198]:MethodDeclaration[4724-5198]"
    }, {
      "left" : "public String toPattern()",
      "right" : "public String toPattern()",
      "info" : "MethodDeclaration[5204-5300]:MethodDeclaration[5204-5300]"
    }, {
      "left" : "public final void applyPattern(String pattern)",
      "right" : "public final void applyPattern(String pattern)",
      "info" : "MethodDeclaration[5306-8170]:MethodDeclaration[5306-8170]"
    }, {
      "left" : "public void setFormat(int formatElementIndex, Format newFormat)",
      "right" : "public void setFormat(int formatElementIndex, Format newFormat)",
      "info" : "MethodDeclaration[8176-8380]:MethodDeclaration[8176-8380]"
    }, {
      "left" : "public void setFormatByArgumentIndex(int argumentIndex, Format newFormat)",
      "right" : "public void setFormatByArgumentIndex(int argumentIndex, Format newFormat)",
      "info" : "MethodDeclaration[8386-8600]:MethodDeclaration[8386-8600]"
    }, {
      "left" : "public void setFormats(Format[] newFormats)",
      "right" : "public void setFormats(Format[] newFormats)",
      "info" : "MethodDeclaration[8606-8790]:MethodDeclaration[8606-8790]"
    }, {
      "left" : "public void setFormatsByArgumentIndex(Format[] newFormats)",
      "right" : "public void setFormatsByArgumentIndex(Format[] newFormats)",
      "info" : "MethodDeclaration[8796-8995]:MethodDeclaration[8796-8995]"
    }, {
      "left" : "private Format getFormat(String desc)",
      "right" : "private Format getFormat(String desc)",
      "info" : "MethodDeclaration[9001-9676]:MethodDeclaration[9001-9676]"
    }, {
      "left" : "private int readArgumentIndex(String pattern, ParsePosition pos)",
      "right" : "private int readArgumentIndex(String pattern, ParsePosition pos)",
      "info" : "MethodDeclaration[9682-11339]:MethodDeclaration[9682-11339]"
    }, {
      "left" : "private String parseFormatDescription(String pattern, ParsePosition pos)",
      "right" : "private String parseFormatDescription(String pattern, ParsePosition pos)",
      "info" : "MethodDeclaration[11345-12374]:MethodDeclaration[11345-12374]"
    }, {
      "left" : "private String insertFormats(String pattern, ArrayList customPatterns)",
      "right" : "private String insertFormats(String pattern, ArrayList customPatterns)",
      "info" : "MethodDeclaration[12380-13860]:MethodDeclaration[12380-13860]"
    }, {
      "left" : "private void seekNonWs(String pattern, ParsePosition pos)",
      "right" : "private void seekNonWs(String pattern, ParsePosition pos)",
      "info" : "MethodDeclaration[13866-14356]:MethodDeclaration[13866-14356]"
    }, {
      "left" : "private ParsePosition next(ParsePosition pos)",
      "right" : "private ParsePosition next(ParsePosition pos)",
      "info" : "MethodDeclaration[14362-14622]:MethodDeclaration[14362-14622]"
    }, {
      "left" : "private void getQuotedString(String pattern, ParsePosition pos,\n            boolean escapingOn)",
      "right" : "private void getQuotedString(String pattern, ParsePosition pos,\n            boolean escapingOn)",
      "info" : "MethodDeclaration[16153-16513]:MethodDeclaration[16176-16536]"
    }, {
      "left" : "private boolean containsElements(Collection coll)",
      "right" : "private boolean containsElements(Collection coll)",
      "info" : "MethodDeclaration[16519-17046]:MethodDeclaration[16542-17069]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3975-4026]:Block[3975-4026]"
    }, {
      "left" : "this(pattern, Locale.getDefault());",
      "right" : "this(pattern, Locale.getDefault());",
      "info" : "ConstructorInvocation[3985-4020]:ConstructorInvocation[3985-4020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4282-4326]:Block[4282-4326]"
    }, {
      "left" : "this(pattern, locale, null);",
      "right" : "this(pattern, locale, null);",
      "info" : "ConstructorInvocation[4292-4320]:ConstructorInvocation[4292-4320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4657-4718]:Block[4657-4718]"
    }, {
      "left" : "this(pattern, Locale.getDefault(), registry);",
      "right" : "this(pattern, Locale.getDefault(), registry);",
      "info" : "ConstructorInvocation[4667-4712]:ConstructorInvocation[4667-4712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5069-5198]:Block[5069-5198]"
    }, {
      "left" : "super(DUMMY_PATTERN);",
      "right" : "super(DUMMY_PATTERN);",
      "info" : "SuperConstructorInvocation[5079-5100]:SuperConstructorInvocation[5079-5100]"
    }, {
      "left" : "setLocale(locale);",
      "right" : "setLocale(locale);",
      "info" : "ExpressionStatement[5109-5127]:ExpressionStatement[5109-5127]"
    }, {
      "left" : "this.registry = registry;",
      "right" : "this.registry = registry;",
      "info" : "ExpressionStatement[5136-5161]:ExpressionStatement[5136-5161]"
    }, {
      "left" : "applyPattern(pattern);",
      "right" : "applyPattern(pattern);",
      "info" : "ExpressionStatement[5170-5192]:ExpressionStatement[5170-5192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5267-5300]:Block[5267-5300]"
    }, {
      "left" : "return toPattern;",
      "right" : "return toPattern;",
      "info" : "ReturnStatement[5277-5294]:ReturnStatement[5277-5294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5442-8170]:Block[5442-8170]"
    }, {
      "left" : "if (registry == null)",
      "right" : "if (registry == null)",
      "info" : "IfStatement[5452-5589]:IfStatement[5452-5589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5474-5589]:Block[5474-5589]"
    }, {
      "left" : "super.applyPattern(pattern);",
      "right" : "super.applyPattern(pattern);",
      "info" : "ExpressionStatement[5488-5516]:ExpressionStatement[5488-5516]"
    }, {
      "left" : "toPattern = super.toPattern();",
      "right" : "toPattern = super.toPattern();",
      "info" : "ExpressionStatement[5529-5559]:ExpressionStatement[5529-5559]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5572-5579]:ReturnStatement[5572-5579]"
    }, {
      "left" : "ArrayList foundFormats = new ArrayList();",
      "right" : "ArrayList foundFormats = new ArrayList();",
      "info" : "VariableDeclarationStatement[5598-5639]:VariableDeclarationStatement[5598-5639]"
    }, {
      "left" : "ArrayList foundDescriptions = new ArrayList();",
      "right" : "ArrayList foundDescriptions = new ArrayList();",
      "info" : "VariableDeclarationStatement[5648-5694]:VariableDeclarationStatement[5648-5694]"
    }, {
      "left" : "StringBuffer stripCustom = new StringBuffer(pattern.length());",
      "right" : "StringBuffer stripCustom = new StringBuffer(pattern.length());",
      "info" : "VariableDeclarationStatement[5703-5765]:VariableDeclarationStatement[5703-5765]"
    }, {
      "left" : "ParsePosition pos = new ParsePosition(0);",
      "right" : "ParsePosition pos = new ParsePosition(0);",
      "info" : "VariableDeclarationStatement[5775-5816]:VariableDeclarationStatement[5775-5816]"
    }, {
      "left" : "char[] c = pattern.toCharArray();",
      "right" : "char[] c = pattern.toCharArray();",
      "info" : "VariableDeclarationStatement[5825-5858]:VariableDeclarationStatement[5825-5858]"
    }, {
      "left" : "int fmtCount = 0;",
      "right" : "int fmtCount = 0;",
      "info" : "VariableDeclarationStatement[5867-5884]:VariableDeclarationStatement[5867-5884]"
    }, {
      "left" : "while (pos.getIndex() < pattern.length())",
      "right" : "while (pos.getIndex() < pattern.length())",
      "info" : "WhileStatement[5893-7500]:WhileStatement[5893-7500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5935-7500]:Block[5935-7500]"
    }, {
      "left" : "switch (c[pos.getIndex()]) {\n            case QUOTE:\n                appendQuotedString(pattern, pos, stripCustom, true);\n                break;\n            case START_FE:\n                fmtCount++;\n                seekNonWs(pattern, pos);\n                int start = pos.getIndex();\n                int index = readArgumentIndex(pattern, next(pos));\n                stripCustom.append(START_FE).append(index);\n                seekNonWs(pattern, pos);\n                Format format = null;\n                String formatDescription = null;\n                if (c[pos.getIndex()] == START_FMT) {\n                    formatDescription = parseFormatDescription(pattern,\n                            next(pos));\n                    format = getFormat(formatDescription);\n                    if (format == null) {\n                        stripCustom.append(START_FMT).append(formatDescription);\n                    }\n                }\n                foundFormats.add(format);\n                foundDescriptions.add(format == null ? null : formatDescription);\n                Validate.isTrue(foundFormats.size() == fmtCount);\n                Validate.isTrue(foundDescriptions.size() == fmtCount);\n                if (c[pos.getIndex()] != END_FE) {\n                    throw new IllegalArgumentException(\n                            \"Unreadable format element at position \" + start);\n                }\n                // fall through\n            default:\n                stripCustom.append(c[pos.getIndex()]);\n                next(pos);\n            }",
      "right" : "switch (c[pos.getIndex()]) {\n            case QUOTE:\n                appendQuotedString(pattern, pos, stripCustom, true);\n                break;\n            case START_FE:\n                fmtCount++;\n                seekNonWs(pattern, pos);\n                int start = pos.getIndex();\n                int index = readArgumentIndex(pattern, next(pos));\n                stripCustom.append(START_FE).append(index);\n                seekNonWs(pattern, pos);\n                Format format = null;\n                String formatDescription = null;\n                if (c[pos.getIndex()] == START_FMT) {\n                    formatDescription = parseFormatDescription(pattern,\n                            next(pos));\n                    format = getFormat(formatDescription);\n                    if (format == null) {\n                        stripCustom.append(START_FMT).append(formatDescription);\n                    }\n                }\n                foundFormats.add(format);\n                foundDescriptions.add(format == null ? null : formatDescription);\n                Validate.isTrue(foundFormats.size() == fmtCount);\n                Validate.isTrue(foundDescriptions.size() == fmtCount);\n                if (c[pos.getIndex()] != END_FE) {\n                    throw new IllegalArgumentException(\n                            \"Unreadable format element at position \" + start);\n                }\n                // fall through\n            default:\n                stripCustom.append(c[pos.getIndex()]);\n                next(pos);\n            }",
      "info" : "SwitchStatement[5949-7490]:SwitchStatement[5949-7490]"
    }, {
      "left" : "case QUOTE:",
      "right" : "case QUOTE:",
      "info" : "SwitchCase[5990-6001]:SwitchCase[5990-6001]"
    }, {
      "left" : "appendQuotedString(pattern, pos, stripCustom, true);",
      "right" : "appendQuotedString(pattern, pos, stripCustom, true);",
      "info" : "ExpressionStatement[6018-6070]:ExpressionStatement[6018-6070]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6087-6093]:BreakStatement[6087-6093]"
    }, {
      "left" : "case START_FE:",
      "right" : "case START_FE:",
      "info" : "SwitchCase[6106-6120]:SwitchCase[6106-6120]"
    }, {
      "left" : "fmtCount++;",
      "right" : "fmtCount++;",
      "info" : "ExpressionStatement[6137-6148]:ExpressionStatement[6137-6148]"
    }, {
      "left" : "seekNonWs(pattern, pos);",
      "right" : "seekNonWs(pattern, pos);",
      "info" : "ExpressionStatement[6165-6189]:ExpressionStatement[6165-6189]"
    }, {
      "left" : "int start = pos.getIndex();",
      "right" : "int start = pos.getIndex();",
      "info" : "VariableDeclarationStatement[6206-6233]:VariableDeclarationStatement[6206-6233]"
    }, {
      "left" : "int index = readArgumentIndex(pattern, next(pos));",
      "right" : "int index = readArgumentIndex(pattern, next(pos));",
      "info" : "VariableDeclarationStatement[6250-6300]:VariableDeclarationStatement[6250-6300]"
    }, {
      "left" : "stripCustom.append(START_FE).append(index);",
      "right" : "stripCustom.append(START_FE).append(index);",
      "info" : "ExpressionStatement[6317-6360]:ExpressionStatement[6317-6360]"
    }, {
      "left" : "seekNonWs(pattern, pos);",
      "right" : "seekNonWs(pattern, pos);",
      "info" : "ExpressionStatement[6377-6401]:ExpressionStatement[6377-6401]"
    }, {
      "left" : "Format format = null;",
      "right" : "Format format = null;",
      "info" : "VariableDeclarationStatement[6418-6439]:VariableDeclarationStatement[6418-6439]"
    }, {
      "left" : "String formatDescription = null;",
      "right" : "String formatDescription = null;",
      "info" : "VariableDeclarationStatement[6456-6488]:VariableDeclarationStatement[6456-6488]"
    }, {
      "left" : "if (c[pos.getIndex()] == START_FMT)",
      "right" : "if (c[pos.getIndex()] == START_FMT)",
      "info" : "IfStatement[6505-6876]:IfStatement[6505-6876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6541-6876]:Block[6541-6876]"
    }, {
      "left" : "formatDescription = parseFormatDescription(pattern,\n                            next(pos));",
      "right" : "formatDescription = parseFormatDescription(pattern,\n                            next(pos));",
      "info" : "ExpressionStatement[6563-6654]:ExpressionStatement[6563-6654]"
    }, {
      "left" : "format = getFormat(formatDescription);",
      "right" : "format = getFormat(formatDescription);",
      "info" : "ExpressionStatement[6675-6713]:ExpressionStatement[6675-6713]"
    }, {
      "left" : "if (format == null)",
      "right" : "if (format == null)",
      "info" : "IfStatement[6734-6858]:IfStatement[6734-6858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6754-6858]:Block[6754-6858]"
    }, {
      "left" : "stripCustom.append(START_FMT).append(formatDescription);",
      "right" : "stripCustom.append(START_FMT).append(formatDescription);",
      "info" : "ExpressionStatement[6780-6836]:ExpressionStatement[6780-6836]"
    }, {
      "left" : "foundFormats.add(format);",
      "right" : "foundFormats.add(format);",
      "info" : "ExpressionStatement[6893-6918]:ExpressionStatement[6893-6918]"
    }, {
      "left" : "foundDescriptions.add(format == null ? null : formatDescription);",
      "right" : "foundDescriptions.add(format == null ? null : formatDescription);",
      "info" : "ExpressionStatement[6935-7000]:ExpressionStatement[6935-7000]"
    }, {
      "left" : "Validate.isTrue(foundFormats.size() == fmtCount);",
      "right" : "Validate.isTrue(foundFormats.size() == fmtCount);",
      "info" : "ExpressionStatement[7017-7066]:ExpressionStatement[7017-7066]"
    }, {
      "left" : "Validate.isTrue(foundDescriptions.size() == fmtCount);",
      "right" : "Validate.isTrue(foundDescriptions.size() == fmtCount);",
      "info" : "ExpressionStatement[7083-7137]:ExpressionStatement[7083-7137]"
    }, {
      "left" : "if (c[pos.getIndex()] != END_FE)",
      "right" : "if (c[pos.getIndex()] != END_FE)",
      "info" : "IfStatement[7154-7341]:IfStatement[7154-7341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7187-7341]:Block[7187-7341]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                            \"Unreadable format element at position \" + start);",
      "right" : "throw new IllegalArgumentException(\n                            \"Unreadable format element at position \" + start);",
      "info" : "ThrowStatement[7209-7323]:ThrowStatement[7209-7323]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[7386-7394]:SwitchCase[7386-7394]"
    }, {
      "left" : "stripCustom.append(c[pos.getIndex()]);",
      "right" : "stripCustom.append(c[pos.getIndex()]);",
      "info" : "ExpressionStatement[7411-7449]:ExpressionStatement[7411-7449]"
    }, {
      "left" : "next(pos);",
      "right" : "next(pos);",
      "info" : "ExpressionStatement[7466-7476]:ExpressionStatement[7466-7476]"
    }, {
      "left" : "super.applyPattern(stripCustom.toString());",
      "right" : "super.applyPattern(stripCustom.toString());",
      "info" : "ExpressionStatement[7509-7552]:ExpressionStatement[7509-7552]"
    }, {
      "left" : "toPattern = insertFormats(super.toPattern(), foundDescriptions);",
      "right" : "toPattern = insertFormats(super.toPattern(), foundDescriptions);",
      "info" : "ExpressionStatement[7561-7625]:ExpressionStatement[7561-7625]"
    }, {
      "left" : "if (containsElements(foundFormats))",
      "right" : "if (containsElements(foundFormats))",
      "info" : "IfStatement[7634-8164]:IfStatement[7634-8164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7670-8164]:Block[7670-8164]"
    }, {
      "left" : "Format[] origFormats = getFormats();",
      "right" : "Format[] origFormats = getFormats();",
      "info" : "VariableDeclarationStatement[7684-7720]:VariableDeclarationStatement[7684-7720]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[7872-7882]:VariableDeclarationStatement[7872-7882]"
    }, {
      "left" : "for (Iterator it = foundFormats.iterator(); it.hasNext(); i++)",
      "right" : "for (Iterator it = foundFormats.iterator(); it.hasNext(); i++)",
      "info" : "ForStatement[7895-8111]:ForStatement[7895-8111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7958-8111]:Block[7958-8111]"
    }, {
      "left" : "Format f = (Format) it.next();",
      "right" : "Format f = (Format) it.next();",
      "info" : "VariableDeclarationStatement[7976-8006]:VariableDeclarationStatement[7976-8006]"
    }, {
      "left" : "if (f != null)",
      "right" : "if (f != null)",
      "info" : "IfStatement[8023-8097]:IfStatement[8023-8097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8038-8097]:Block[8038-8097]"
    }, {
      "left" : "origFormats[i] = f;",
      "right" : "origFormats[i] = f;",
      "info" : "ExpressionStatement[8060-8079]:ExpressionStatement[8060-8079]"
    }, {
      "left" : "super.setFormats(origFormats);",
      "right" : "super.setFormats(origFormats);",
      "info" : "ExpressionStatement[8124-8154]:ExpressionStatement[8124-8154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8322-8380]:Block[8322-8380]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8332-8374]:ThrowStatement[8332-8374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8542-8600]:Block[8542-8600]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8552-8594]:ThrowStatement[8552-8594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8732-8790]:Block[8732-8790]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8742-8784]:ThrowStatement[8742-8784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8937-8995]:Block[8937-8995]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8947-8989]:ThrowStatement[8947-8989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9165-9676]:Block[9165-9676]"
    }, {
      "left" : "if (registry != null)",
      "right" : "if (registry != null)",
      "info" : "IfStatement[9175-9649]:IfStatement[9175-9649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9197-9649]:Block[9197-9649]"
    }, {
      "left" : "String name = desc;",
      "right" : "String name = desc;",
      "info" : "VariableDeclarationStatement[9211-9230]:VariableDeclarationStatement[9211-9230]"
    }, {
      "left" : "String args = null;",
      "right" : "String args = null;",
      "info" : "VariableDeclarationStatement[9243-9262]:VariableDeclarationStatement[9243-9262]"
    }, {
      "left" : "int i = desc.indexOf(START_FMT);",
      "right" : "int i = desc.indexOf(START_FMT);",
      "info" : "VariableDeclarationStatement[9275-9307]:VariableDeclarationStatement[9275-9307]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[9320-9451]:IfStatement[9320-9451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9331-9451]:Block[9331-9451]"
    }, {
      "left" : "name = desc.substring(0, i).trim();",
      "right" : "name = desc.substring(0, i).trim();",
      "info" : "ExpressionStatement[9349-9384]:ExpressionStatement[9349-9384]"
    }, {
      "left" : "args = desc.substring(i + 1).trim();",
      "right" : "args = desc.substring(i + 1).trim();",
      "info" : "ExpressionStatement[9401-9437]:ExpressionStatement[9401-9437]"
    }, {
      "left" : "FormatFactory factory = (FormatFactory) registry.get(name);",
      "right" : "FormatFactory factory = (FormatFactory) registry.get(name);",
      "info" : "VariableDeclarationStatement[9464-9523]:VariableDeclarationStatement[9464-9523]"
    }, {
      "left" : "if (factory != null)",
      "right" : "if (factory != null)",
      "info" : "IfStatement[9536-9639]:IfStatement[9536-9639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9557-9639]:Block[9557-9639]"
    }, {
      "left" : "return factory.getFormat(name, args, getLocale());",
      "right" : "return factory.getFormat(name, args, getLocale());",
      "info" : "ReturnStatement[9575-9625]:ReturnStatement[9575-9625]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9658-9670]:ReturnStatement[9658-9670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9944-11339]:Block[9944-11339]"
    }, {
      "left" : "int start = pos.getIndex();",
      "right" : "int start = pos.getIndex();",
      "info" : "VariableDeclarationStatement[9954-9981]:VariableDeclarationStatement[9954-9981]"
    }, {
      "left" : "seekNonWs(pattern, pos);",
      "right" : "seekNonWs(pattern, pos);",
      "info" : "ExpressionStatement[9990-10014]:ExpressionStatement[9990-10014]"
    }, {
      "left" : "StringBuffer result = new StringBuffer();",
      "right" : "StringBuffer result = new StringBuffer();",
      "info" : "VariableDeclarationStatement[10023-10064]:VariableDeclarationStatement[10023-10064]"
    }, {
      "left" : "boolean error = false;",
      "right" : "boolean error = false;",
      "info" : "VariableDeclarationStatement[10073-10095]:VariableDeclarationStatement[10073-10095]"
    }, {
      "left" : "for (; !error && pos.getIndex() < pattern.length(); next(pos))",
      "right" : "for (; !error && pos.getIndex() < pattern.length(); next(pos))",
      "info" : "ForStatement[10104-10988]:ForStatement[10104-10988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10167-10988]:Block[10167-10988]"
    }, {
      "left" : "char c = pattern.charAt(pos.getIndex());",
      "right" : "char c = pattern.charAt(pos.getIndex());",
      "info" : "VariableDeclarationStatement[10181-10221]:VariableDeclarationStatement[10181-10221]"
    }, {
      "left" : "if (Character.isWhitespace(c))",
      "right" : "if (Character.isWhitespace(c))",
      "info" : "IfStatement[10234-10508]:IfStatement[10234-10508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10265-10508]:Block[10265-10508]"
    }, {
      "left" : "seekNonWs(pattern, pos);",
      "right" : "seekNonWs(pattern, pos);",
      "info" : "ExpressionStatement[10283-10307]:ExpressionStatement[10283-10307]"
    }, {
      "left" : "c = pattern.charAt(pos.getIndex());",
      "right" : "c = pattern.charAt(pos.getIndex());",
      "info" : "ExpressionStatement[10324-10359]:ExpressionStatement[10324-10359]"
    }, {
      "left" : "if (c != START_FMT && c != END_FE)",
      "right" : "if (c != START_FMT && c != END_FE)",
      "info" : "IfStatement[10376-10494]:IfStatement[10376-10494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10411-10494]:Block[10411-10494]"
    }, {
      "left" : "error = true;",
      "right" : "error = true;",
      "info" : "ExpressionStatement[10433-10446]:ExpressionStatement[10433-10446]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[10467-10476]:ContinueStatement[10467-10476]"
    }, {
      "left" : "if ((c == START_FMT || c == END_FE) && result.length() > 0)",
      "right" : "if ((c == START_FMT || c == END_FE) && result.length() > 0)",
      "info" : "IfStatement[10521-10905]:IfStatement[10521-10905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10581-10905]:Block[10581-10905]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10599-10891]:TryStatement[10599-10891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10603-10686]:Block[10603-10686]"
    }, {
      "left" : "return Integer.parseInt(result.toString());",
      "right" : "return Integer.parseInt(result.toString());",
      "info" : "ReturnStatement[10625-10668]:ReturnStatement[10625-10668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10719-10891]:Block[10719-10891]"
    }, {
      "left" : "error = !Character.isDigit(c);",
      "right" : "error = !Character.isDigit(c);",
      "info" : "ExpressionStatement[10918-10948]:ExpressionStatement[10918-10948]"
    }, {
      "left" : "result.append(c);",
      "right" : "result.append(c);",
      "info" : "ExpressionStatement[10961-10978]:ExpressionStatement[10961-10978]"
    }, {
      "left" : "if (error)",
      "right" : "if (error)",
      "info" : "IfStatement[10997-11220]:IfStatement[10997-11220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11008-11220]:Block[11008-11220]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                    \"Invalid format argument index at position \" + start + \": \"\n                            + pattern.substring(start, pos.getIndex()));",
      "right" : "throw new IllegalArgumentException(\n                    \"Invalid format argument index at position \" + start + \": \"\n                            + pattern.substring(start, pos.getIndex()));",
      "info" : "ThrowStatement[11022-11210]:ThrowStatement[11022-11210]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"Unterminated format element at position \" + start);",
      "right" : "throw new IllegalArgumentException(\n                \"Unterminated format element at position \" + start);",
      "info" : "ThrowStatement[11229-11333]:ThrowStatement[11229-11333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11617-12374]:Block[11617-12374]"
    }, {
      "left" : "int start = pos.getIndex();",
      "right" : "int start = pos.getIndex();",
      "info" : "VariableDeclarationStatement[11627-11654]:VariableDeclarationStatement[11627-11654]"
    }, {
      "left" : "seekNonWs(pattern, pos);",
      "right" : "seekNonWs(pattern, pos);",
      "info" : "ExpressionStatement[11663-11687]:ExpressionStatement[11663-11687]"
    }, {
      "left" : "int text = pos.getIndex();",
      "right" : "int text = pos.getIndex();",
      "info" : "VariableDeclarationStatement[11696-11722]:VariableDeclarationStatement[11696-11722]"
    }, {
      "left" : "int depth = 1;",
      "right" : "int depth = 1;",
      "info" : "VariableDeclarationStatement[11731-11745]:VariableDeclarationStatement[11731-11745]"
    }, {
      "left" : "for (; pos.getIndex() < pattern.length(); next(pos))",
      "right" : "for (; pos.getIndex() < pattern.length(); next(pos))",
      "info" : "ForStatement[11754-12255]:ForStatement[11754-12255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11807-12255]:Block[11807-12255]"
    }, {
      "left" : "switch (pattern.charAt(pos.getIndex())) {\n            case START_FE:\n                depth++;\n                break;\n            case END_FE:\n                depth--;\n                if (depth == 0) {\n                    return pattern.substring(text, pos.getIndex());\n                }\n                break;\n            case QUOTE:\n                getQuotedString(pattern, pos, false);\n                break;\n            }",
      "right" : "switch (pattern.charAt(pos.getIndex())) {\n            case START_FE:\n                depth++;\n                break;\n            case END_FE:\n                depth--;\n                if (depth == 0) {\n                    return pattern.substring(text, pos.getIndex());\n                }\n                break;\n            case QUOTE:\n                getQuotedString(pattern, pos, false);\n                break;\n            }",
      "info" : "SwitchStatement[11821-12245]:SwitchStatement[11821-12245]"
    }, {
      "left" : "case START_FE:",
      "right" : "case START_FE:",
      "info" : "SwitchCase[11875-11889]:SwitchCase[11875-11889]"
    }, {
      "left" : "depth++;",
      "right" : "depth++;",
      "info" : "ExpressionStatement[11906-11914]:ExpressionStatement[11906-11914]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11931-11937]:BreakStatement[11931-11937]"
    }, {
      "left" : "case END_FE:",
      "right" : "case END_FE:",
      "info" : "SwitchCase[11950-11962]:SwitchCase[11950-11962]"
    }, {
      "left" : "depth--;",
      "right" : "depth--;",
      "info" : "ExpressionStatement[11979-11987]:ExpressionStatement[11979-11987]"
    }, {
      "left" : "if (depth == 0)",
      "right" : "if (depth == 0)",
      "info" : "IfStatement[12004-12107]:IfStatement[12004-12107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12020-12107]:Block[12020-12107]"
    }, {
      "left" : "return pattern.substring(text, pos.getIndex());",
      "right" : "return pattern.substring(text, pos.getIndex());",
      "info" : "ReturnStatement[12042-12089]:ReturnStatement[12042-12089]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12124-12130]:BreakStatement[12124-12130]"
    }, {
      "left" : "case QUOTE:",
      "right" : "case QUOTE:",
      "info" : "SwitchCase[12143-12154]:SwitchCase[12143-12154]"
    }, {
      "left" : "getQuotedString(pattern, pos, false);",
      "right" : "getQuotedString(pattern, pos, false);",
      "info" : "ExpressionStatement[12171-12208]:ExpressionStatement[12171-12208]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12225-12231]:BreakStatement[12225-12231]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"Unterminated format element at position \" + start);",
      "right" : "throw new IllegalArgumentException(\n                \"Unterminated format element at position \" + start);",
      "info" : "ThrowStatement[12264-12368]:ThrowStatement[12264-12368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12670-13860]:Block[12670-13860]"
    }, {
      "left" : "if (!containsElements(customPatterns))",
      "right" : "if (!containsElements(customPatterns))",
      "info" : "IfStatement[12680-12758]:IfStatement[12680-12758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12719-12758]:Block[12719-12758]"
    }, {
      "left" : "return pattern;",
      "right" : "return pattern;",
      "info" : "ReturnStatement[12733-12748]:ReturnStatement[12733-12748]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(pattern.length() * 2);",
      "right" : "StringBuffer sb = new StringBuffer(pattern.length() * 2);",
      "info" : "VariableDeclarationStatement[12767-12824]:VariableDeclarationStatement[12767-12824]"
    }, {
      "left" : "ParsePosition pos = new ParsePosition(0);",
      "right" : "ParsePosition pos = new ParsePosition(0);",
      "info" : "VariableDeclarationStatement[12833-12874]:VariableDeclarationStatement[12833-12874]"
    }, {
      "left" : "int fe = -1;",
      "right" : "int fe = -1;",
      "info" : "VariableDeclarationStatement[12883-12895]:VariableDeclarationStatement[12883-12895]"
    }, {
      "left" : "int depth = 0;",
      "right" : "int depth = 0;",
      "info" : "VariableDeclarationStatement[12904-12918]:VariableDeclarationStatement[12904-12918]"
    }, {
      "left" : "while (pos.getIndex() < pattern.length())",
      "right" : "while (pos.getIndex() < pattern.length())",
      "info" : "WhileStatement[12927-13824]:WhileStatement[12927-13824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12969-13824]:Block[12969-13824]"
    }, {
      "left" : "char c = pattern.charAt(pos.getIndex());",
      "right" : "char c = pattern.charAt(pos.getIndex());",
      "info" : "VariableDeclarationStatement[12983-13023]:VariableDeclarationStatement[12983-13023]"
    }, {
      "left" : "switch (c) {\n            case QUOTE:\n                appendQuotedString(pattern, pos, sb, false);\n                break;\n            case START_FE:\n                depth++;\n                if (depth == 1) {\n                    fe++;\n                    sb.append(START_FE).append(\n                            readArgumentIndex(pattern, next(pos)));\n                    String customPattern = (String) customPatterns.get(fe);\n                    if (customPattern != null) {\n                        sb.append(START_FMT).append(customPattern);\n                    }\n                }\n                break;\n            case END_FE:\n                depth--;\n                //fall through:\n            default:\n                sb.append(c);\n                next(pos);\n            }",
      "right" : "switch (c) {\n            case QUOTE:\n                appendQuotedString(pattern, pos, sb, false);\n                break;\n            case START_FE:\n                depth++;\n                if (depth == 1) {\n                    fe++;\n                    sb.append(START_FE).append(\n                            readArgumentIndex(pattern, next(pos)));\n                    String customPattern = (String) customPatterns.get(fe);\n                    if (customPattern != null) {\n                        sb.append(START_FMT).append(customPattern);\n                    }\n                }\n                break;\n            case END_FE:\n                depth--;\n                //fall through:\n            default:\n                sb.append(c);\n                next(pos);\n            }",
      "info" : "SwitchStatement[13036-13814]:SwitchStatement[13036-13814]"
    }, {
      "left" : "case QUOTE:",
      "right" : "case QUOTE:",
      "info" : "SwitchCase[13061-13072]:SwitchCase[13061-13072]"
    }, {
      "left" : "appendQuotedString(pattern, pos, sb, false);",
      "right" : "appendQuotedString(pattern, pos, sb, false);",
      "info" : "ExpressionStatement[13089-13133]:ExpressionStatement[13089-13133]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13150-13156]:BreakStatement[13150-13156]"
    }, {
      "left" : "case START_FE:",
      "right" : "case START_FE:",
      "info" : "SwitchCase[13169-13183]:SwitchCase[13169-13183]"
    }, {
      "left" : "depth++;",
      "right" : "depth++;",
      "info" : "ExpressionStatement[13200-13208]:ExpressionStatement[13200-13208]"
    }, {
      "left" : "if (depth == 1)",
      "right" : "if (depth == 1)",
      "info" : "IfStatement[13225-13617]:IfStatement[13225-13617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13241-13617]:Block[13241-13617]"
    }, {
      "left" : "fe++;",
      "right" : "fe++;",
      "info" : "ExpressionStatement[13263-13268]:ExpressionStatement[13263-13268]"
    }, {
      "left" : "sb.append(START_FE).append(\n                            readArgumentIndex(pattern, next(pos)));",
      "right" : "sb.append(START_FE).append(\n                            readArgumentIndex(pattern, next(pos)));",
      "info" : "ExpressionStatement[13289-13384]:ExpressionStatement[13289-13384]"
    }, {
      "left" : "String customPattern = (String) customPatterns.get(fe);",
      "right" : "String customPattern = (String) customPatterns.get(fe);",
      "info" : "VariableDeclarationStatement[13405-13460]:VariableDeclarationStatement[13405-13460]"
    }, {
      "left" : "if (customPattern != null)",
      "right" : "if (customPattern != null)",
      "info" : "IfStatement[13481-13599]:IfStatement[13481-13599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13508-13599]:Block[13508-13599]"
    }, {
      "left" : "sb.append(START_FMT).append(customPattern);",
      "right" : "sb.append(START_FMT).append(customPattern);",
      "info" : "ExpressionStatement[13534-13577]:ExpressionStatement[13534-13577]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13634-13640]:BreakStatement[13634-13640]"
    }, {
      "left" : "case END_FE:",
      "right" : "case END_FE:",
      "info" : "SwitchCase[13653-13665]:SwitchCase[13653-13665]"
    }, {
      "left" : "depth--;",
      "right" : "depth--;",
      "info" : "ExpressionStatement[13682-13690]:ExpressionStatement[13682-13690]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[13735-13743]:SwitchCase[13735-13743]"
    }, {
      "left" : "sb.append(c);",
      "right" : "sb.append(c);",
      "info" : "ExpressionStatement[13760-13773]:ExpressionStatement[13760-13773]"
    }, {
      "left" : "next(pos);",
      "right" : "next(pos);",
      "info" : "ExpressionStatement[13790-13800]:ExpressionStatement[13790-13800]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[13833-13854]:ReturnStatement[13833-13854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14079-14356]:Block[14079-14356]"
    }, {
      "left" : "int len = 0;",
      "right" : "int len = 0;",
      "info" : "VariableDeclarationStatement[14089-14101]:VariableDeclarationStatement[14089-14101]"
    }, {
      "left" : "char[] buffer = pattern.toCharArray();",
      "right" : "char[] buffer = pattern.toCharArray();",
      "info" : "VariableDeclarationStatement[14110-14148]:VariableDeclarationStatement[14110-14148]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[14157-14350]:DoStatement[14157-14350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14160-14296]:Block[14160-14296]"
    }, {
      "left" : "len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",
      "right" : "len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",
      "info" : "ExpressionStatement[14174-14238]:ExpressionStatement[14174-14238]"
    }, {
      "left" : "pos.setIndex(pos.getIndex() + len);",
      "right" : "pos.setIndex(pos.getIndex() + len);",
      "info" : "ExpressionStatement[14251-14286]:ExpressionStatement[14251-14286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14553-14622]:Block[14553-14622]"
    }, {
      "left" : "pos.setIndex(pos.getIndex() + 1);",
      "right" : "pos.setIndex(pos.getIndex() + 1);",
      "info" : "ExpressionStatement[14563-14596]:ExpressionStatement[14563-14596]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[14605-14616]:ReturnStatement[14605-14616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16446-16513]:Block[16469-16536]"
    }, {
      "left" : "appendQuotedString(pattern, pos, null, escapingOn);",
      "right" : "appendQuotedString(pattern, pos, null, escapingOn);",
      "info" : "ExpressionStatement[16456-16507]:ExpressionStatement[16479-16530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16776-17046]:Block[16799-17069]"
    }, {
      "left" : "if (coll == null || coll.size() == 0)",
      "right" : "if (coll == null || coll.size() == 0)",
      "info" : "IfStatement[16786-16861]:IfStatement[16809-16884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16824-16861]:Block[16847-16884]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[16838-16851]:ReturnStatement[16861-16874]"
    }, {
      "left" : "for (Iterator iter = coll.iterator(); iter.hasNext())",
      "right" : "for (Iterator iter = coll.iterator(); iter.hasNext())",
      "info" : "ForStatement[16870-17018]:ForStatement[16893-17041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16925-17018]:Block[16948-17041]"
    }, {
      "left" : "if (iter.next() != null)",
      "right" : "if (iter.next() != null)",
      "info" : "IfStatement[16939-17008]:IfStatement[16962-17031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16964-17008]:Block[16987-17031]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[16982-16994]:ReturnStatement[17005-17017]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[17027-17040]:ReturnStatement[17050-17063]"
    } ]
  },
  "interFileMappings" : { }
}