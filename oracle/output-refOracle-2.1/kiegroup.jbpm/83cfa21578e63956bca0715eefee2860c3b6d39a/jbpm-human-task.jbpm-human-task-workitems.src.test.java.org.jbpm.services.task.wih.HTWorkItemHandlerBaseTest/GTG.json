{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "HTWorkItemHandlerBaseTest",
      "right" : "HTWorkItemHandlerBaseTest",
      "info" : "TypeDeclaration[1973-38606]:TypeDeclaration[1973-40556]"
    }, {
      "left" : "private static final int DEFAULT_WAIT_TIME = 5000;",
      "right" : "private static final int DEFAULT_WAIT_TIME = 5000;",
      "info" : "FieldDeclaration[2053-2103]:FieldDeclaration[2053-2103]"
    }, {
      "left" : "private static final int MANAGER_COMPLETION_WAIT_TIME = DEFAULT_WAIT_TIME;",
      "right" : "private static final int MANAGER_COMPLETION_WAIT_TIME = DEFAULT_WAIT_TIME;",
      "info" : "FieldDeclaration[2108-2182]:FieldDeclaration[2108-2182]"
    }, {
      "left" : "private static final int MANAGER_ABORT_WAIT_TIME = DEFAULT_WAIT_TIME;",
      "right" : "private static final int MANAGER_ABORT_WAIT_TIME = DEFAULT_WAIT_TIME;",
      "info" : "FieldDeclaration[2187-2256]:FieldDeclaration[2187-2256]"
    }, {
      "left" : "private WorkItemHandler handler;",
      "right" : "private WorkItemHandler handler;",
      "info" : "FieldDeclaration[2266-2298]:FieldDeclaration[2266-2298]"
    }, {
      "left" : "protected TestStatefulKnowledgeSession ksession;",
      "right" : "protected TestStatefulKnowledgeSession ksession;",
      "info" : "FieldDeclaration[2303-2351]:FieldDeclaration[2303-2351]"
    }, {
      "left" : "protected TaskService taskService;",
      "right" : "protected TaskService taskService;",
      "info" : "FieldDeclaration[2357-2391]:FieldDeclaration[2357-2391]"
    }, {
      "left" : "public void testTask() throws Exception",
      "right" : "public void testTask() throws Exception",
      "info" : "MethodDeclaration[2409-3905]:MethodDeclaration[2409-3905]"
    }, {
      "left" : "public void testTaskMultipleActors() throws Exception",
      "right" : "public void testTaskMultipleActors() throws Exception",
      "info" : "MethodDeclaration[3910-5187]:MethodDeclaration[3910-5187]"
    }, {
      "left" : "public void testTaskGroupActors() throws Exception",
      "right" : "public void testTaskGroupActors() throws Exception",
      "info" : "MethodDeclaration[5197-6701]:MethodDeclaration[5197-6701]"
    }, {
      "left" : "public void testTaskSingleAndGroupActors() throws Exception",
      "right" : "public void testTaskSingleAndGroupActors() throws Exception",
      "info" : "MethodDeclaration[6716-8058]:MethodDeclaration[6716-8058]"
    }, {
      "left" : "public void testTaskFail() throws Exception",
      "right" : "public void testTaskFail() throws Exception",
      "info" : "MethodDeclaration[8063-9338]:MethodDeclaration[8063-9338]"
    }, {
      "left" : "public void testTaskSkip() throws Exception",
      "right" : "public void testTaskSkip() throws Exception",
      "info" : "MethodDeclaration[9343-10547]:MethodDeclaration[9343-10547]"
    }, {
      "left" : "public void testTaskExit() throws Exception",
      "right" : "public void testTaskExit() throws Exception",
      "info" : "MethodDeclaration[10557-11757]:MethodDeclaration[10557-11757]"
    }, {
      "left" : "public void testTaskExitNonAdministrator() throws Exception",
      "right" : "public void testTaskExitNonAdministrator() throws Exception",
      "info" : "MethodDeclaration[11762-13178]:MethodDeclaration[11762-13178]"
    }, {
      "left" : "public void testTaskAbortSkippable() throws Exception",
      "right" : "public void testTaskAbortSkippable() throws Exception",
      "info" : "MethodDeclaration[13183-13981]:MethodDeclaration[13183-13981]"
    }, {
      "left" : "public void testTaskAbortNotSkippable() throws Exception",
      "right" : "public void testTaskAbortNotSkippable() throws Exception",
      "info" : "MethodDeclaration[13986-15026]:MethodDeclaration[13986-15026]"
    }, {
      "left" : "public void testTaskData() throws Exception",
      "right" : "public void testTaskData() throws Exception",
      "info" : "MethodDeclaration[15031-17606]:MethodDeclaration[15031-17606]"
    }, {
      "left" : "public void testTaskDataAutomaticMapping() throws Exception",
      "right" : "public void testTaskDataAutomaticMapping() throws Exception",
      "info" : "MethodDeclaration[17611-20644]:MethodDeclaration[17611-20661]"
    }, {
      "left" : "public void testTaskCreateFailedWithLog() throws Exception",
      "right" : "public void testTaskCreateFailedWithLog() throws Exception",
      "info" : "MethodDeclaration[20659-21701]:MethodDeclaration[20676-21718]"
    }, {
      "left" : "public void testTaskCreateFailedWithAbort() throws Exception",
      "right" : "public void testTaskCreateFailedWithAbort() throws Exception",
      "info" : "MethodDeclaration[21706-22751]:MethodDeclaration[21723-22768]"
    }, {
      "left" : "public void testTaskCreateFailedWithRethrow() throws Exception",
      "right" : "public void testTaskCreateFailedWithRethrow() throws Exception",
      "info" : "MethodDeclaration[22756-23922]:MethodDeclaration[22773-23939]"
    }, {
      "left" : "public void testTaskWithCreatedBy() throws Exception",
      "right" : "public void testTaskWithCreatedBy() throws Exception",
      "info" : "MethodDeclaration[23933-25374]:MethodDeclaration[23950-25391]"
    }, {
      "left" : "public void testTaskWithoutCreatedBy() throws Exception",
      "right" : "public void testTaskWithoutCreatedBy() throws Exception",
      "info" : "MethodDeclaration[25384-26783]:MethodDeclaration[25401-26800]"
    }, {
      "left" : "public void testTaskWitAutoClaimTaskWithActorAndGroup() throws Exception",
      "right" : "public void testTaskWitAutoClaimTaskWithActorAndGroup() throws Exception",
      "info" : "MethodDeclaration[26793-28263]:MethodDeclaration[26810-28280]"
    }, {
      "left" : "public void testTaskWithAutoClaimTaskWithGroupOnly() throws Exception",
      "right" : "public void testTaskWithAutoClaimTaskWithGroupOnly() throws Exception",
      "info" : "MethodDeclaration[28273-29683]:MethodDeclaration[28290-29700]"
    }, {
      "left" : "public void testTaskWithDueDate() throws Exception",
      "right" : "public void testTaskWithDueDate() throws Exception",
      "info" : "MethodDeclaration[29689-31212]:MethodDeclaration[29706-31229]"
    }, {
      "left" : "public void testTaskWithDelay() throws Exception",
      "right" : "public void testTaskWithDelay() throws Exception",
      "info" : "MethodDeclaration[31217-32782]:MethodDeclaration[31234-32798]"
    }, {
      "left" : "public void testTaskCompleteGroupActors() throws Exception",
      "right" : "public void testTaskCompleteGroupActors() throws Exception",
      "info" : "MethodDeclaration[32792-34257]:MethodDeclaration[32808-34273]"
    }, {
      "left" : "public void testTaskWithVariables() throws Exception",
      "right" : "public void testTaskWithVariables() throws Exception",
      "info" : "MethodDeclaration[34267-35887]:MethodDeclaration[34283-35797]"
    }, {
      "left" : "public void setHandler(WorkItemHandler handler)",
      "right" : "public void setHandler(WorkItemHandler handler)",
      "info" : "MethodDeclaration[35897-35984]:MethodDeclaration[37847-37934]"
    }, {
      "left" : "public WorkItemHandler getHandler()",
      "right" : "public WorkItemHandler getHandler()",
      "info" : "MethodDeclaration[35990-36057]:MethodDeclaration[37940-38007]"
    }, {
      "left" : "TestWorkItemManager",
      "right" : "TestWorkItemManager",
      "info" : "TypeDeclaration[36063-37850]:TypeDeclaration[38013-39800]"
    }, {
      "left" : "private volatile boolean completed;",
      "right" : "private volatile boolean completed;",
      "info" : "FieldDeclaration[36135-36170]:FieldDeclaration[38085-38120]"
    }, {
      "left" : "private volatile boolean aborted;",
      "right" : "private volatile boolean aborted;",
      "info" : "FieldDeclaration[36179-36212]:FieldDeclaration[38129-38162]"
    }, {
      "left" : "private volatile Map<String, Object> results;",
      "right" : "private volatile Map<String, Object> results;",
      "info" : "FieldDeclaration[36221-36266]:FieldDeclaration[38171-38216]"
    }, {
      "left" : "public synchronized boolean waitTillCompleted(long time)",
      "right" : "public synchronized boolean waitTillCompleted(long time)",
      "info" : "MethodDeclaration[36276-36611]:MethodDeclaration[38226-38561]"
    }, {
      "left" : "public synchronized boolean waitTillAborted(long time)",
      "right" : "public synchronized boolean waitTillAborted(long time)",
      "info" : "MethodDeclaration[36621-36948]:MethodDeclaration[38571-38898]"
    }, {
      "left" : "public void abortWorkItem(long id)",
      "right" : "public void abortWorkItem(long id)",
      "info" : "MethodDeclaration[36958-37034]:MethodDeclaration[38908-38984]"
    }, {
      "left" : "public synchronized boolean isAborted()",
      "right" : "public synchronized boolean isAborted()",
      "info" : "MethodDeclaration[37044-37123]:MethodDeclaration[38994-39073]"
    }, {
      "left" : "private synchronized void setAborted(boolean aborted)",
      "right" : "private synchronized void setAborted(boolean aborted)",
      "info" : "MethodDeclaration[37133-37259]:MethodDeclaration[39083-39209]"
    }, {
      "left" : "public void completeWorkItem(long id, Map<String, Object> results)",
      "right" : "public void completeWorkItem(long id, Map<String, Object> results)",
      "info" : "MethodDeclaration[37269-37415]:MethodDeclaration[39219-39365]"
    }, {
      "left" : "private synchronized void setCompleted(boolean completed)",
      "right" : "private synchronized void setCompleted(boolean completed)",
      "info" : "MethodDeclaration[37425-37559]:MethodDeclaration[39375-39509]"
    }, {
      "left" : "public synchronized boolean isCompleted()",
      "right" : "public synchronized boolean isCompleted()",
      "info" : "MethodDeclaration[37569-37652]:MethodDeclaration[39519-39602]"
    }, {
      "left" : "public Map<String, Object> getResults()",
      "right" : "public Map<String, Object> getResults()",
      "info" : "MethodDeclaration[37662-37741]:MethodDeclaration[39612-39691]"
    }, {
      "left" : "public void registerWorkItemHandler(String workItemName, WorkItemHandler handler)",
      "right" : "public void registerWorkItemHandler(String workItemName, WorkItemHandler handler)",
      "info" : "MethodDeclaration[37751-37844]:MethodDeclaration[39701-39794]"
    }, {
      "left" : "AddedTaskListener",
      "right" : "AddedTaskListener",
      "info" : "TypeDeclaration[37865-38604]:TypeDeclaration[39815-40554]"
    }, {
      "left" : "public AddedTaskListener()",
      "right" : "public AddedTaskListener()",
      "info" : "MethodDeclaration[37946-37997]:MethodDeclaration[39896-39947]"
    }, {
      "left" : "public AddedTaskListener(boolean throwException)",
      "right" : "public AddedTaskListener(boolean throwException)",
      "info" : "MethodDeclaration[38015-38125]:MethodDeclaration[39965-40075]"
    }, {
      "left" : "private boolean throwException = false;",
      "right" : "private boolean throwException = false;",
      "info" : "FieldDeclaration[38143-38182]:FieldDeclaration[40093-40132]"
    }, {
      "left" : "public boolean isThrowException()",
      "right" : "public boolean isThrowException()",
      "info" : "MethodDeclaration[38192-38272]:MethodDeclaration[40142-40222]"
    }, {
      "left" : "public void setThrowException(boolean throwException)",
      "right" : "public void setThrowException(boolean throwException)",
      "info" : "MethodDeclaration[38282-38397]:MethodDeclaration[40232-40347]"
    }, {
      "left" : "public void afterTaskAddedEvent(TaskEvent event)",
      "right" : "public void afterTaskAddedEvent(TaskEvent event)",
      "info" : "MethodDeclaration[38406-38598]:MethodDeclaration[40356-40548]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2459-3905]:Block[2459-3905]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[2469-2525]:VariableDeclarationStatement[2469-2525]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[2534-2571]:ExpressionStatement[2534-2571]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[2580-2623]:VariableDeclarationStatement[2580-2623]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[2632-2663]:ExpressionStatement[2632-2663]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[2672-2718]:ExpressionStatement[2672-2718]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[2727-2771]:ExpressionStatement[2727-2771]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[2780-2820]:ExpressionStatement[2780-2820]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[2829-2877]:ExpressionStatement[2829-2877]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[2886-2920]:ExpressionStatement[2886-2920]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[2929-2972]:ExpressionStatement[2929-2972]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[2991-3086]:VariableDeclarationStatement[2991-3086]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[3095-3125]:ExpressionStatement[3095-3125]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[3134-3166]:VariableDeclarationStatement[3134-3166]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[3175-3216]:ExpressionStatement[3175-3216]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[3225-3273]:ExpressionStatement[3225-3273]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[3282-3329]:ExpressionStatement[3282-3329]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[3338-3386]:ExpressionStatement[3338-3386]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[3395-3454]:ExpressionStatement[3395-3454]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "info" : "ExpressionStatement[3463-3520]:ExpressionStatement[3463-3520]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[3530-3577]:ExpressionStatement[3530-3577]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[3586-3642]:ExpressionStatement[3586-3642]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[3652-3720]:ExpressionStatement[3652-3720]"
    }, {
      "left" : "String actualOwner = (String) manager.getResults().get(\"ActorId\");",
      "right" : "String actualOwner = (String) manager.getResults().get(\"ActorId\");",
      "info" : "VariableDeclarationStatement[3738-3804]:VariableDeclarationStatement[3738-3804]"
    }, {
      "left" : "assertNotNull(actualOwner);",
      "right" : "assertNotNull(actualOwner);",
      "info" : "ExpressionStatement[3813-3840]:ExpressionStatement[3813-3840]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", actualOwner);",
      "right" : "assertEquals(\"Darth Vader\", actualOwner);",
      "info" : "ExpressionStatement[3849-3890]:ExpressionStatement[3849-3890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3974-5187]:Block[3974-5187]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[3984-4040]:VariableDeclarationStatement[3984-4040]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[4049-4086]:ExpressionStatement[4049-4086]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[4095-4138]:VariableDeclarationStatement[4095-4138]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[4147-4178]:ExpressionStatement[4147-4178]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[4187-4233]:ExpressionStatement[4187-4233]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[4242-4286]:ExpressionStatement[4242-4286]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[4295-4335]:ExpressionStatement[4295-4335]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader, Dalai Lama\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader, Dalai Lama\");",
      "info" : "ExpressionStatement[4344-4404]:ExpressionStatement[4344-4404]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[4413-4447]:ExpressionStatement[4413-4447]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[4456-4504]:ExpressionStatement[4456-4504]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[4523-4618]:VariableDeclarationStatement[4523-4618]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[4627-4657]:ExpressionStatement[4627-4657]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[4666-4698]:VariableDeclarationStatement[4666-4698]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[4707-4748]:ExpressionStatement[4707-4748]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[4757-4805]:ExpressionStatement[4757-4805]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[4814-4861]:ExpressionStatement[4814-4861]"
    }, {
      "left" : "assertEquals(Status.Ready, task.getStatus());",
      "right" : "assertEquals(Status.Ready, task.getStatus());",
      "info" : "ExpressionStatement[4870-4915]:ExpressionStatement[4870-4915]"
    }, {
      "left" : "taskService.claim(task.getId(), \"Darth Vader\");",
      "right" : "taskService.claim(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[4925-4972]:ExpressionStatement[4925-4972]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[4982-5029]:ExpressionStatement[4982-5029]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[5039-5095]:ExpressionStatement[5039-5095]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[5113-5181]:ExpressionStatement[5113-5181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5258-6701]:Block[5258-6701]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[5266-5322]:VariableDeclarationStatement[5266-5322]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[5331-5368]:ExpressionStatement[5331-5368]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[5377-5420]:VariableDeclarationStatement[5377-5420]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[5429-5460]:ExpressionStatement[5429-5460]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[5469-5515]:ExpressionStatement[5469-5515]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[5524-5568]:ExpressionStatement[5524-5568]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[5577-5617]:ExpressionStatement[5577-5617]"
    }, {
      "left" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "right" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "info" : "ExpressionStatement[5626-5672]:ExpressionStatement[5626-5672]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[5681-5715]:ExpressionStatement[5681-5715]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[5724-5772]:ExpressionStatement[5724-5772]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Luke Cage\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Luke Cage\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[5782-5875]:VariableDeclarationStatement[5782-5875]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[5884-5914]:ExpressionStatement[5884-5914]"
    }, {
      "left" : "TaskSummary taskSummary = tasks.get(0);",
      "right" : "TaskSummary taskSummary = tasks.get(0);",
      "info" : "VariableDeclarationStatement[5923-5962]:VariableDeclarationStatement[5923-5962]"
    }, {
      "left" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "right" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "info" : "ExpressionStatement[5971-6019]:ExpressionStatement[5971-6019]"
    }, {
      "left" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "right" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "info" : "ExpressionStatement[6028-6083]:ExpressionStatement[6028-6083]"
    }, {
      "left" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "right" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "info" : "ExpressionStatement[6092-6146]:ExpressionStatement[6092-6146]"
    }, {
      "left" : "assertEquals(Status.Ready, taskSummary.getStatus());",
      "right" : "assertEquals(Status.Ready, taskSummary.getStatus());",
      "info" : "ExpressionStatement[6155-6207]:ExpressionStatement[6155-6207]"
    }, {
      "left" : "PermissionDeniedException denied = null;",
      "right" : "PermissionDeniedException denied = null;",
      "info" : "VariableDeclarationStatement[6217-6257]:VariableDeclarationStatement[6217-6257]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6266-6420]:TryStatement[6266-6420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6270-6348]:Block[6270-6348]"
    }, {
      "left" : "taskService.claim(taskSummary.getId(), \"nocrusadaer\");",
      "right" : "taskService.claim(taskSummary.getId(), \"nocrusadaer\");",
      "info" : "ExpressionStatement[6284-6338]:ExpressionStatement[6284-6338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6385-6420]:Block[6385-6420]"
    }, {
      "left" : "denied = e;",
      "right" : "denied = e;",
      "info" : "ExpressionStatement[6399-6410]:ExpressionStatement[6399-6410]"
    }, {
      "left" : "assertNotNull(\"Should get permissed denied exception\", denied);",
      "right" : "assertNotNull(\"Should get permissed denied exception\", denied);",
      "info" : "ExpressionStatement[6430-6493]:ExpressionStatement[6430-6493]"
    }, {
      "left" : "Task task = taskService.getTaskById(taskSummary.getId());",
      "right" : "Task task = taskService.getTaskById(taskSummary.getId());",
      "info" : "VariableDeclarationStatement[6570-6627]:VariableDeclarationStatement[6570-6627]"
    }, {
      "left" : "assertEquals(Status.Ready, task.getTaskData().getStatus());",
      "right" : "assertEquals(Status.Ready, task.getTaskData().getStatus());",
      "info" : "ExpressionStatement[6636-6695]:ExpressionStatement[6636-6695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6786-8058]:Block[6786-8058]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[7026-7082]:VariableDeclarationStatement[7026-7082]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[7091-7128]:ExpressionStatement[7091-7128]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[7137-7180]:VariableDeclarationStatement[7137-7180]"
    }, {
      "left" : "workItem.setName(\"Human Task One\");",
      "right" : "workItem.setName(\"Human Task One\");",
      "info" : "ExpressionStatement[7189-7224]:ExpressionStatement[7189-7224]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskNameOne\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskNameOne\");",
      "info" : "ExpressionStatement[7233-7282]:ExpressionStatement[7233-7282]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[7291-7335]:ExpressionStatement[7291-7335]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[7344-7384]:ExpressionStatement[7344-7384]"
    }, {
      "left" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "right" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "info" : "ExpressionStatement[7393-7439]:ExpressionStatement[7393-7439]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[7448-7482]:ExpressionStatement[7448-7482]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[7491-7539]:ExpressionStatement[7491-7539]"
    }, {
      "left" : "workItem = new WorkItemImpl();",
      "right" : "workItem = new WorkItemImpl();",
      "info" : "ExpressionStatement[7552-7582]:ExpressionStatement[7552-7582]"
    }, {
      "left" : "workItem.setName(\"Human Task Two\");",
      "right" : "workItem.setName(\"Human Task Two\");",
      "info" : "ExpressionStatement[7591-7626]:ExpressionStatement[7591-7626]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskNameTwo\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskNameTwo\");",
      "info" : "ExpressionStatement[7635-7684]:ExpressionStatement[7635-7684]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[7693-7737]:ExpressionStatement[7693-7737]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[7746-7786]:ExpressionStatement[7746-7786]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[7795-7843]:ExpressionStatement[7795-7843]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[7852-7900]:ExpressionStatement[7852-7900]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[7918-8013]:VariableDeclarationStatement[7918-8013]"
    }, {
      "left" : "assertEquals(2, tasks.size());",
      "right" : "assertEquals(2, tasks.size());",
      "info" : "ExpressionStatement[8022-8052]:ExpressionStatement[8022-8052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8117-9338]:Block[8117-9338]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[8127-8183]:VariableDeclarationStatement[8127-8183]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[8192-8229]:ExpressionStatement[8192-8229]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[8238-8281]:VariableDeclarationStatement[8238-8281]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[8290-8321]:ExpressionStatement[8290-8321]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[8330-8376]:ExpressionStatement[8330-8376]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[8385-8429]:ExpressionStatement[8385-8429]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[8438-8478]:ExpressionStatement[8438-8478]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[8487-8535]:ExpressionStatement[8487-8535]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[8544-8578]:ExpressionStatement[8544-8578]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[8587-8635]:ExpressionStatement[8587-8635]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[8663-8758]:VariableDeclarationStatement[8663-8758]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[8767-8797]:ExpressionStatement[8767-8797]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[8806-8838]:VariableDeclarationStatement[8806-8838]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[8847-8888]:ExpressionStatement[8847-8888]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[8897-8945]:ExpressionStatement[8897-8945]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[8954-9001]:ExpressionStatement[8954-9001]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[9010-9058]:ExpressionStatement[9010-9058]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[9067-9126]:ExpressionStatement[9067-9126]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[9136-9183]:ExpressionStatement[9136-9183]"
    }, {
      "left" : "taskService.fail(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.fail(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[9201-9253]:ExpressionStatement[9201-9253]"
    }, {
      "left" : "assertTrue(manager.waitTillAborted(MANAGER_ABORT_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillAborted(MANAGER_ABORT_WAIT_TIME));",
      "info" : "ExpressionStatement[9271-9332]:ExpressionStatement[9271-9332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9397-10547]:Block[9397-10547]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[9407-9463]:VariableDeclarationStatement[9407-9463]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[9472-9509]:ExpressionStatement[9472-9509]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[9518-9561]:VariableDeclarationStatement[9518-9561]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[9570-9601]:ExpressionStatement[9570-9601]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[9610-9656]:ExpressionStatement[9610-9656]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[9665-9709]:ExpressionStatement[9665-9709]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[9718-9758]:ExpressionStatement[9718-9758]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[9767-9815]:ExpressionStatement[9767-9815]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[9824-9858]:ExpressionStatement[9824-9858]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[9867-9915]:ExpressionStatement[9867-9915]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[9943-10038]:VariableDeclarationStatement[9943-10038]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[10047-10077]:ExpressionStatement[10047-10077]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[10086-10118]:VariableDeclarationStatement[10086-10118]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[10127-10168]:ExpressionStatement[10127-10168]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[10177-10225]:ExpressionStatement[10177-10225]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[10234-10281]:ExpressionStatement[10234-10281]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[10290-10338]:ExpressionStatement[10290-10338]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[10347-10406]:ExpressionStatement[10347-10406]"
    }, {
      "left" : "taskService.skip(task.getId(), \"Darth Vader\");",
      "right" : "taskService.skip(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[10416-10462]:ExpressionStatement[10416-10462]"
    }, {
      "left" : "assertTrue(manager.waitTillAborted(MANAGER_ABORT_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillAborted(MANAGER_ABORT_WAIT_TIME));",
      "info" : "ExpressionStatement[10480-10541]:ExpressionStatement[10480-10541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10611-11757]:Block[10611-11757]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[10621-10677]:VariableDeclarationStatement[10621-10677]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[10686-10723]:ExpressionStatement[10686-10723]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[10732-10775]:VariableDeclarationStatement[10732-10775]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[10784-10815]:ExpressionStatement[10784-10815]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[10824-10870]:ExpressionStatement[10824-10870]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[10879-10923]:ExpressionStatement[10879-10923]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[10932-10972]:ExpressionStatement[10932-10972]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[10981-11029]:ExpressionStatement[10981-11029]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[11038-11072]:ExpressionStatement[11038-11072]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[11081-11129]:ExpressionStatement[11081-11129]"
    }, {
      "left" : "Task task = taskService.getTaskByWorkItemId(workItem.getId());",
      "right" : "Task task = taskService.getTaskByWorkItemId(workItem.getId());",
      "info" : "VariableDeclarationStatement[11147-11209]:VariableDeclarationStatement[11147-11209]"
    }, {
      "left" : "taskService.exit(task.getId(), \"Administrator\");",
      "right" : "taskService.exit(task.getId(), \"Administrator\");",
      "info" : "ExpressionStatement[11219-11267]:ExpressionStatement[11219-11267]"
    }, {
      "left" : "task = taskService.getTaskByWorkItemId(workItem.getId());",
      "right" : "task = taskService.getTaskByWorkItemId(workItem.getId());",
      "info" : "ExpressionStatement[11285-11342]:ExpressionStatement[11285-11342]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getNames().get(0).getText());",
      "right" : "assertEquals(\"TaskName\", task.getNames().get(0).getText());",
      "info" : "ExpressionStatement[11351-11410]:ExpressionStatement[11351-11410]"
    }, {
      "left" : "assertEquals(10, task.getPriority());",
      "right" : "assertEquals(10, task.getPriority());",
      "info" : "ExpressionStatement[11419-11456]:ExpressionStatement[11419-11456]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescriptions().get(0).getText());",
      "right" : "assertEquals(\"Comment\", task.getDescriptions().get(0).getText());",
      "info" : "ExpressionStatement[11465-11530]:ExpressionStatement[11465-11530]"
    }, {
      "left" : "assertEquals(Status.Exited, task.getTaskData().getStatus());",
      "right" : "assertEquals(Status.Exited, task.getTaskData().getStatus());",
      "info" : "ExpressionStatement[11539-11599]:ExpressionStatement[11539-11599]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[11617-11712]:VariableDeclarationStatement[11617-11712]"
    }, {
      "left" : "assertEquals(0, tasks.size());",
      "right" : "assertEquals(0, tasks.size());",
      "info" : "ExpressionStatement[11721-11751]:ExpressionStatement[11721-11751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11832-13178]:Block[11832-13178]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[11842-11898]:VariableDeclarationStatement[11842-11898]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[11907-11944]:ExpressionStatement[11907-11944]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[11953-11996]:VariableDeclarationStatement[11953-11996]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[12005-12036]:ExpressionStatement[12005-12036]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[12045-12091]:ExpressionStatement[12045-12091]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[12100-12144]:ExpressionStatement[12100-12144]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[12153-12193]:ExpressionStatement[12153-12193]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[12202-12250]:ExpressionStatement[12202-12250]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[12259-12293]:ExpressionStatement[12259-12293]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[12302-12350]:ExpressionStatement[12302-12350]"
    }, {
      "left" : "Task task = taskService.getTaskByWorkItemId(workItem.getId());",
      "right" : "Task task = taskService.getTaskByWorkItemId(workItem.getId());",
      "info" : "VariableDeclarationStatement[12368-12430]:VariableDeclarationStatement[12368-12430]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[12440-12649]:TryStatement[12440-12649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12444-12588]:Block[12444-12588]"
    }, {
      "left" : "taskService.exit(task.getId(), \"Darth Vader\");",
      "right" : "taskService.exit(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[12458-12504]:ExpressionStatement[12458-12504]"
    }, {
      "left" : "fail(\"Should not allow to exit task for non administrators\");",
      "right" : "fail(\"Should not allow to exit task for non administrators\");",
      "info" : "ExpressionStatement[12517-12578]:ExpressionStatement[12517-12578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12625-12649]:Block[12625-12649]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[12667-12762]:VariableDeclarationStatement[12667-12762]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[12771-12801]:ExpressionStatement[12771-12801]"
    }, {
      "left" : "TaskSummary taskSummary = tasks.get(0);",
      "right" : "TaskSummary taskSummary = tasks.get(0);",
      "info" : "VariableDeclarationStatement[12810-12849]:VariableDeclarationStatement[12810-12849]"
    }, {
      "left" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "right" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "info" : "ExpressionStatement[12858-12906]:ExpressionStatement[12858-12906]"
    }, {
      "left" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "right" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "info" : "ExpressionStatement[12915-12970]:ExpressionStatement[12915-12970]"
    }, {
      "left" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "right" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "info" : "ExpressionStatement[12979-13033]:ExpressionStatement[12979-13033]"
    }, {
      "left" : "assertEquals(Status.Reserved, taskSummary.getStatus());",
      "right" : "assertEquals(Status.Reserved, taskSummary.getStatus());",
      "info" : "ExpressionStatement[13042-13097]:ExpressionStatement[13042-13097]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", taskSummary.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", taskSummary.getActualOwner().getId());",
      "info" : "ExpressionStatement[13106-13172]:ExpressionStatement[13106-13172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13247-13981]:Block[13247-13981]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[13257-13313]:VariableDeclarationStatement[13257-13313]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[13322-13359]:ExpressionStatement[13322-13359]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[13368-13411]:VariableDeclarationStatement[13368-13411]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[13420-13451]:ExpressionStatement[13420-13451]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[13460-13506]:ExpressionStatement[13460-13506]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[13515-13559]:ExpressionStatement[13515-13559]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[13568-13608]:ExpressionStatement[13568-13608]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[13617-13665]:ExpressionStatement[13617-13665]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[13674-13708]:ExpressionStatement[13674-13708]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[13717-13765]:ExpressionStatement[13717-13765]"
    }, {
      "left" : "getHandler().abortWorkItem(workItem, manager);",
      "right" : "getHandler().abortWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[13785-13831]:ExpressionStatement[13785-13831]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[13841-13936]:VariableDeclarationStatement[13841-13936]"
    }, {
      "left" : "assertEquals(0, tasks.size());",
      "right" : "assertEquals(0, tasks.size());",
      "info" : "ExpressionStatement[13945-13975]:ExpressionStatement[13945-13975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14053-15026]:Block[14053-15026]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[14063-14119]:VariableDeclarationStatement[14063-14119]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[14128-14165]:ExpressionStatement[14128-14165]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[14174-14217]:VariableDeclarationStatement[14174-14217]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[14226-14257]:ExpressionStatement[14226-14257]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[14266-14312]:ExpressionStatement[14266-14312]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[14321-14365]:ExpressionStatement[14321-14365]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[14374-14414]:ExpressionStatement[14374-14414]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[14423-14471]:ExpressionStatement[14423-14471]"
    }, {
      "left" : "workItem.setParameter(\"Skippable\", \"false\");",
      "right" : "workItem.setParameter(\"Skippable\", \"false\");",
      "info" : "ExpressionStatement[14480-14524]:ExpressionStatement[14480-14524]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[14533-14567]:ExpressionStatement[14533-14567]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[14576-14624]:ExpressionStatement[14576-14624]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[14643-14738]:VariableDeclarationStatement[14643-14738]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[14747-14777]:ExpressionStatement[14747-14777]"
    }, {
      "left" : "getHandler().abortWorkItem(workItem, manager);",
      "right" : "getHandler().abortWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[14787-14833]:ExpressionStatement[14787-14833]"
    }, {
      "left" : "tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "ExpressionStatement[14904-14981]:ExpressionStatement[14904-14981]"
    }, {
      "left" : "assertEquals(0, tasks.size());",
      "right" : "assertEquals(0, tasks.size());",
      "info" : "ExpressionStatement[14990-15020]:ExpressionStatement[14990-15020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15085-17606]:Block[15085-17606]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[15095-15151]:VariableDeclarationStatement[15095-15151]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[15160-15197]:ExpressionStatement[15160-15197]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[15206-15249]:VariableDeclarationStatement[15206-15249]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[15258-15289]:ExpressionStatement[15258-15289]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[15298-15344]:ExpressionStatement[15298-15344]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[15353-15397]:ExpressionStatement[15353-15397]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[15406-15446]:ExpressionStatement[15406-15446]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[15455-15503]:ExpressionStatement[15455-15503]"
    }, {
      "left" : "workItem.setParameter(\"Content\", \"This is the content\");",
      "right" : "workItem.setParameter(\"Content\", \"This is the content\");",
      "info" : "ExpressionStatement[15512-15568]:ExpressionStatement[15512-15568]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[15577-15611]:ExpressionStatement[15577-15611]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[15620-15668]:ExpressionStatement[15620-15668]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[15678-15773]:VariableDeclarationStatement[15678-15773]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[15782-15812]:ExpressionStatement[15782-15812]"
    }, {
      "left" : "TaskSummary taskSummary = tasks.get(0);",
      "right" : "TaskSummary taskSummary = tasks.get(0);",
      "info" : "VariableDeclarationStatement[15821-15860]:VariableDeclarationStatement[15821-15860]"
    }, {
      "left" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "right" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "info" : "ExpressionStatement[15869-15917]:ExpressionStatement[15869-15917]"
    }, {
      "left" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "right" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "info" : "ExpressionStatement[15926-15981]:ExpressionStatement[15926-15981]"
    }, {
      "left" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "right" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "info" : "ExpressionStatement[15990-16044]:ExpressionStatement[15990-16044]"
    }, {
      "left" : "assertEquals(Status.Reserved, taskSummary.getStatus());",
      "right" : "assertEquals(Status.Reserved, taskSummary.getStatus());",
      "info" : "ExpressionStatement[16053-16108]:ExpressionStatement[16053-16108]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", taskSummary.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", taskSummary.getActualOwner().getId());",
      "info" : "ExpressionStatement[16117-16183]:ExpressionStatement[16117-16183]"
    }, {
      "left" : "Task task = taskService.getTaskById(taskSummary.getId());",
      "right" : "Task task = taskService.getTaskById(taskSummary.getId());",
      "info" : "VariableDeclarationStatement[16201-16258]:VariableDeclarationStatement[16201-16258]"
    }, {
      "left" : "assertEquals(AccessType.Inline, ((InternalTaskData) task.getTaskData()).getDocumentAccessType());",
      "right" : "assertEquals(AccessType.Inline, ((InternalTaskData) task.getTaskData()).getDocumentAccessType());",
      "info" : "ExpressionStatement[16267-16364]:ExpressionStatement[16267-16364]"
    }, {
      "left" : "assertEquals(task.getTaskData().getProcessSessionId(), TestStatefulKnowledgeSession.testSessionId.intValue());",
      "right" : "assertEquals(task.getTaskData().getProcessSessionId(), TestStatefulKnowledgeSession.testSessionId.intValue());",
      "info" : "ExpressionStatement[16373-16483]:ExpressionStatement[16373-16483]"
    }, {
      "left" : "long contentId = task.getTaskData().getDocumentContentId();",
      "right" : "long contentId = task.getTaskData().getDocumentContentId();",
      "info" : "VariableDeclarationStatement[16492-16551]:VariableDeclarationStatement[16492-16551]"
    }, {
      "left" : "assertTrue(contentId != -1);",
      "right" : "assertTrue(contentId != -1);",
      "info" : "ExpressionStatement[16560-16588]:ExpressionStatement[16560-16588]"
    }, {
      "left" : "Object data = ContentMarshallerHelper.unmarshall(\n                                                            taskService.getContentById(contentId).getContent(), \n                                                            ksession.getEnvironment());",
      "right" : "Object data = ContentMarshallerHelper.unmarshall(\n                                                            taskService.getContentById(contentId).getContent(), \n                                                            ksession.getEnvironment());",
      "info" : "VariableDeclarationStatement[16598-16848]:VariableDeclarationStatement[16598-16848]"
    }, {
      "left" : "assertEquals(\"This is the content\", data);",
      "right" : "assertEquals(\"This is the content\", data);",
      "info" : "ExpressionStatement[16857-16899]:ExpressionStatement[16857-16899]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[16909-16956]:ExpressionStatement[16909-16956]"
    }, {
      "left" : "Map<String, Object> results = new HashMap<String, Object>();",
      "right" : "Map<String, Object> results = new HashMap<String, Object>();",
      "info" : "VariableDeclarationStatement[16973-17033]:VariableDeclarationStatement[16973-17033]"
    }, {
      "left" : "results.put(\"Result\", \"This is the result\");",
      "right" : "results.put(\"Result\", \"This is the result\");",
      "info" : "ExpressionStatement[17042-17086]:ExpressionStatement[17042-17086]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", results);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", results);",
      "info" : "ExpressionStatement[17255-17314]:ExpressionStatement[17255-17314]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[17332-17400]:ExpressionStatement[17332-17400]"
    }, {
      "left" : "results = manager.getResults();",
      "right" : "results = manager.getResults();",
      "info" : "ExpressionStatement[17409-17440]:ExpressionStatement[17409-17440]"
    }, {
      "left" : "assertNotNull(results);",
      "right" : "assertNotNull(results);",
      "info" : "ExpressionStatement[17449-17472]:ExpressionStatement[17449-17472]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", results.get(\"ActorId\"));",
      "right" : "assertEquals(\"Darth Vader\", results.get(\"ActorId\"));",
      "info" : "ExpressionStatement[17481-17533]:ExpressionStatement[17481-17533]"
    }, {
      "left" : "assertEquals(\"This is the result\", results.get(\"Result\"));",
      "right" : "assertEquals(\"This is the result\", results.get(\"Result\"));",
      "info" : "ExpressionStatement[17542-17600]:ExpressionStatement[17542-17600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17681-20644]:Block[17681-20661]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[17691-17747]:VariableDeclarationStatement[17691-17747]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[17756-17793]:ExpressionStatement[17756-17793]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[17802-17845]:VariableDeclarationStatement[17802-17845]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[17854-17885]:ExpressionStatement[17854-17885]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[17894-17940]:ExpressionStatement[17894-17940]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[17949-17993]:ExpressionStatement[17949-17993]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[18002-18042]:ExpressionStatement[18002-18042]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[18051-18099]:ExpressionStatement[18051-18099]"
    }, {
      "left" : "MyObject myObject = new MyObject(\"MyObjectValue\");",
      "right" : "MyObject myObject = new MyObject(\"MyObjectValue\");",
      "info" : "VariableDeclarationStatement[18108-18158]:VariableDeclarationStatement[18108-18158]"
    }, {
      "left" : "workItem.setParameter(\"MyObject\", myObject);",
      "right" : "workItem.setParameter(\"MyObject\", myObject);",
      "info" : "ExpressionStatement[18167-18211]:ExpressionStatement[18167-18211]"
    }, {
      "left" : "Map<String, Object> mapParameter = new HashMap<String, Object>();",
      "right" : "Map<String, Object> mapParameter = new HashMap<String, Object>();",
      "info" : "VariableDeclarationStatement[18220-18285]:VariableDeclarationStatement[18220-18285]"
    }, {
      "left" : "mapParameter.put(\"MyObjectInsideTheMap\", myObject);",
      "right" : "mapParameter.put(\"MyObjectInsideTheMap\", myObject);",
      "info" : "ExpressionStatement[18294-18345]:ExpressionStatement[18294-18345]"
    }, {
      "left" : "workItem.setParameter(\"MyMap\", mapParameter);",
      "right" : "workItem.setParameter(\"MyMap\", mapParameter);",
      "info" : "ExpressionStatement[18354-18399]:ExpressionStatement[18354-18399]"
    }, {
      "left" : "workItem.setParameter(\"MyObject\", myObject);",
      "right" : "workItem.setParameter(\"MyObject\", myObject);",
      "info" : "ExpressionStatement[18408-18452]:ExpressionStatement[18408-18452]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[18461-18495]:ExpressionStatement[18461-18495]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[18504-18552]:ExpressionStatement[18504-18552]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[18588-18683]:VariableDeclarationStatement[18588-18683]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[18692-18722]:ExpressionStatement[18692-18722]"
    }, {
      "left" : "TaskSummary taskSummary = tasks.get(0);",
      "right" : "TaskSummary taskSummary = tasks.get(0);",
      "info" : "VariableDeclarationStatement[18731-18770]:VariableDeclarationStatement[18731-18770]"
    }, {
      "left" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "right" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "info" : "ExpressionStatement[18779-18827]:ExpressionStatement[18779-18827]"
    }, {
      "left" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "right" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "info" : "ExpressionStatement[18836-18891]:ExpressionStatement[18836-18891]"
    }, {
      "left" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "right" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "info" : "ExpressionStatement[18900-18954]:ExpressionStatement[18900-18954]"
    }, {
      "left" : "assertEquals(Status.Reserved, taskSummary.getStatus());",
      "right" : "assertEquals(Status.Reserved, taskSummary.getStatus());",
      "info" : "ExpressionStatement[18963-19018]:ExpressionStatement[18963-19018]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", taskSummary.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", taskSummary.getActualOwner().getId());",
      "info" : "ExpressionStatement[19027-19093]:ExpressionStatement[19027-19093]"
    }, {
      "left" : "Task task = taskService.getTaskById(taskSummary.getId());",
      "right" : "Task task = taskService.getTaskById(taskSummary.getId());",
      "info" : "VariableDeclarationStatement[19123-19180]:VariableDeclarationStatement[19123-19180]"
    }, {
      "left" : "assertEquals(AccessType.Inline, ((InternalTaskData) task.getTaskData()).getDocumentAccessType());",
      "right" : "assertEquals(AccessType.Inline, ((InternalTaskData) task.getTaskData()).getDocumentAccessType());",
      "info" : "ExpressionStatement[19189-19286]:ExpressionStatement[19189-19286]"
    }, {
      "left" : "long contentId = task.getTaskData().getDocumentContentId();",
      "right" : "long contentId = task.getTaskData().getDocumentContentId();",
      "info" : "VariableDeclarationStatement[19295-19354]:VariableDeclarationStatement[19295-19354]"
    }, {
      "left" : "assertTrue(contentId != -1);",
      "right" : "assertTrue(contentId != -1);",
      "info" : "ExpressionStatement[19363-19391]:ExpressionStatement[19363-19391]"
    }, {
      "left" : "Map<String, Object> data = (Map<String, Object>) ContentMarshallerHelper.unmarshall(\n                                                            taskService.getContentById(contentId).getContent(),  \n                                                            ksession.getEnvironment());",
      "right" : "Map<String, Object> data = (Map<String, Object>) ContentMarshallerHelper.unmarshall(\n                                                            taskService.getContentById(contentId).getContent(),  \n                                                            ksession.getEnvironment());",
      "info" : "VariableDeclarationStatement[19419-19705]:VariableDeclarationStatement[19419-19705]"
    }, {
      "left" : "assertEquals(\"MyObjectValue\", ((MyObject) data.get(\"MyObject\")).getValue());",
      "right" : "assertEquals(\"MyObjectValue\", ((MyObject) data.get(\"MyObject\")).getValue());",
      "info" : "ExpressionStatement[19834-19910]:ExpressionStatement[19834-19910]"
    }, {
      "left" : "assertEquals(\"10\", data.get(\"Priority\"));",
      "right" : "assertEquals(\"10\", data.get(\"Priority\"));",
      "info" : "ExpressionStatement[19919-19960]:ExpressionStatement[19919-19960]"
    }, {
      "left" : "assertEquals(\"MyObjectValue\", ((MyObject) ((Map<String, Object>) data.get(\"MyMap\")).get(\"MyObjectInsideTheMap\")).getValue());",
      "right" : "assertEquals(\"MyObjectValue\", ((MyObject) ((Map<String, Object>) data.get(\"MyMap\")).get\n                (\"MyObjectInsideTheMap\")).getValue());",
      "info" : "ExpressionStatement[19969-20094]:ExpressionStatement[19969-20111]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[20104-20151]:ExpressionStatement[20121-20168]"
    }, {
      "left" : "Map<String, Object> results = new HashMap<String, Object>();",
      "right" : "Map<String, Object> results = new HashMap<String, Object>();",
      "info" : "VariableDeclarationStatement[20161-20221]:VariableDeclarationStatement[20178-20238]"
    }, {
      "left" : "results.put(\"Result\", \"This is the result\");",
      "right" : "results.put(\"Result\", \"This is the result\");",
      "info" : "ExpressionStatement[20230-20274]:ExpressionStatement[20247-20291]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", results);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", results);",
      "info" : "ExpressionStatement[20301-20360]:ExpressionStatement[20318-20377]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[20370-20438]:ExpressionStatement[20387-20455]"
    }, {
      "left" : "results = manager.getResults();",
      "right" : "results = manager.getResults();",
      "info" : "ExpressionStatement[20447-20478]:ExpressionStatement[20464-20495]"
    }, {
      "left" : "assertNotNull(results);",
      "right" : "assertNotNull(results);",
      "info" : "ExpressionStatement[20487-20510]:ExpressionStatement[20504-20527]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", results.get(\"ActorId\"));",
      "right" : "assertEquals(\"Darth Vader\", results.get(\"ActorId\"));",
      "info" : "ExpressionStatement[20519-20571]:ExpressionStatement[20536-20588]"
    }, {
      "left" : "assertEquals(\"This is the result\", results.get(\"Result\"));",
      "right" : "assertEquals(\"This is the result\", results.get(\"Result\"));",
      "info" : "ExpressionStatement[20580-20638]:ExpressionStatement[20597-20655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20760-21701]:Block[20777-21718]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[20770-20826]:VariableDeclarationStatement[20787-20843]"
    }, {
      "left" : "((AbstractHTWorkItemHandler)handler).setAction(OnErrorAction.LOG);",
      "right" : "((AbstractHTWorkItemHandler)handler).setAction(OnErrorAction.LOG);",
      "info" : "ExpressionStatement[20835-20901]:ExpressionStatement[20852-20918]"
    }, {
      "left" : "TaskLifeCycleEventListener listener = new AddedTaskListener(true);",
      "right" : "TaskLifeCycleEventListener listener = new AddedTaskListener(true);",
      "info" : "VariableDeclarationStatement[20910-20976]:VariableDeclarationStatement[20927-20993]"
    }, {
      "left" : "((EventService<TaskLifeCycleEventListener>) taskService).registerTaskEventListener(listener);",
      "right" : "((EventService<TaskLifeCycleEventListener>) taskService).registerTaskEventListener(listener);",
      "info" : "ExpressionStatement[20985-21078]:ExpressionStatement[21002-21095]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[21096-21133]:ExpressionStatement[21113-21150]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[21142-21185]:VariableDeclarationStatement[21159-21202]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[21194-21225]:ExpressionStatement[21211-21242]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[21234-21280]:ExpressionStatement[21251-21297]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[21289-21333]:ExpressionStatement[21306-21350]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[21342-21382]:ExpressionStatement[21359-21399]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"DoesNotExist\");",
      "right" : "workItem.setParameter(\"ActorId\", \"DoesNotExist\");",
      "info" : "ExpressionStatement[21391-21440]:ExpressionStatement[21408-21457]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[21449-21483]:ExpressionStatement[21466-21500]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[21510-21553]:ExpressionStatement[21527-21570]"
    }, {
      "left" : "assertFalse(manager.isAborted());",
      "right" : "assertFalse(manager.isAborted());",
      "info" : "ExpressionStatement[21562-21595]:ExpressionStatement[21579-21612]"
    }, {
      "left" : "((EventService<TaskLifeCycleEventListener>) taskService).removeTaskEventListener(listener);",
      "right" : "((EventService<TaskLifeCycleEventListener>) taskService).removeTaskEventListener(listener);",
      "info" : "ExpressionStatement[21604-21695]:ExpressionStatement[21621-21712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21809-22751]:Block[21826-22768]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[21819-21875]:VariableDeclarationStatement[21836-21892]"
    }, {
      "left" : "TaskLifeCycleEventListener listener = new AddedTaskListener(true);",
      "right" : "TaskLifeCycleEventListener listener = new AddedTaskListener(true);",
      "info" : "VariableDeclarationStatement[21884-21950]:VariableDeclarationStatement[21901-21967]"
    }, {
      "left" : "((EventService<TaskLifeCycleEventListener>) taskService).registerTaskEventListener(listener);",
      "right" : "((EventService<TaskLifeCycleEventListener>) taskService).registerTaskEventListener(listener);",
      "info" : "ExpressionStatement[21959-22052]:ExpressionStatement[21976-22069]"
    }, {
      "left" : "((AbstractHTWorkItemHandler)handler).setAction(OnErrorAction.ABORT);",
      "right" : "((AbstractHTWorkItemHandler)handler).setAction(OnErrorAction.ABORT);",
      "info" : "ExpressionStatement[22070-22138]:ExpressionStatement[22087-22155]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[22147-22184]:ExpressionStatement[22164-22201]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[22193-22236]:VariableDeclarationStatement[22210-22253]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[22245-22276]:ExpressionStatement[22262-22293]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[22285-22331]:ExpressionStatement[22302-22348]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[22340-22384]:ExpressionStatement[22357-22401]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[22393-22433]:ExpressionStatement[22410-22450]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"DoesNotExist\");",
      "right" : "workItem.setParameter(\"ActorId\", \"DoesNotExist\");",
      "info" : "ExpressionStatement[22442-22491]:ExpressionStatement[22459-22508]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[22500-22534]:ExpressionStatement[22517-22551]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[22561-22604]:ExpressionStatement[22578-22621]"
    }, {
      "left" : "assertTrue(manager.isAborted());",
      "right" : "assertTrue(manager.isAborted());",
      "info" : "ExpressionStatement[22613-22645]:ExpressionStatement[22630-22662]"
    }, {
      "left" : "((EventService<TaskLifeCycleEventListener>) taskService).removeTaskEventListener(listener);",
      "right" : "((EventService<TaskLifeCycleEventListener>) taskService).removeTaskEventListener(listener);",
      "info" : "ExpressionStatement[22654-22745]:ExpressionStatement[22671-22762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22861-23922]:Block[22878-23939]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[22871-22927]:VariableDeclarationStatement[22888-22944]"
    }, {
      "left" : "TaskLifeCycleEventListener listener = new AddedTaskListener(true);",
      "right" : "TaskLifeCycleEventListener listener = new AddedTaskListener(true);",
      "info" : "VariableDeclarationStatement[22936-23002]:VariableDeclarationStatement[22953-23019]"
    }, {
      "left" : "((EventService<TaskLifeCycleEventListener>) taskService).registerTaskEventListener(listener);",
      "right" : "((EventService<TaskLifeCycleEventListener>) taskService).registerTaskEventListener(listener);",
      "info" : "ExpressionStatement[23011-23104]:ExpressionStatement[23028-23121]"
    }, {
      "left" : "((AbstractHTWorkItemHandler)handler).setAction(OnErrorAction.RETHROW);",
      "right" : "((AbstractHTWorkItemHandler)handler).setAction(OnErrorAction.RETHROW);",
      "info" : "ExpressionStatement[23122-23192]:ExpressionStatement[23139-23209]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[23201-23238]:ExpressionStatement[23218-23255]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[23247-23290]:VariableDeclarationStatement[23264-23307]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[23299-23330]:ExpressionStatement[23316-23347]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[23339-23385]:ExpressionStatement[23356-23402]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[23394-23438]:ExpressionStatement[23411-23455]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[23447-23487]:ExpressionStatement[23464-23504]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"DoesNotExist\");",
      "right" : "workItem.setParameter(\"ActorId\", \"DoesNotExist\");",
      "info" : "ExpressionStatement[23496-23545]:ExpressionStatement[23513-23562]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[23554-23588]:ExpressionStatement[23571-23605]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[23606-23816]:TryStatement[23623-23833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23610-23745]:Block[23627-23762]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[23624-23667]:ExpressionStatement[23641-23684]"
    }, {
      "left" : "fail(\"Should fail due to OnErroAction set to rethrow\");",
      "right" : "fail(\"Should fail due to OnErroAction set to rethrow\");",
      "info" : "ExpressionStatement[23680-23735]:ExpressionStatement[23697-23752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23766-23816]:Block[23783-23833]"
    }, {
      "left" : "((EventService<TaskLifeCycleEventListener>) taskService).removeTaskEventListener(listener);",
      "right" : "((EventService<TaskLifeCycleEventListener>) taskService).removeTaskEventListener(listener);",
      "info" : "ExpressionStatement[23825-23916]:ExpressionStatement[23842-23933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23996-25374]:Block[24013-25391]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[24006-24062]:VariableDeclarationStatement[24023-24079]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[24071-24108]:ExpressionStatement[24088-24125]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[24117-24160]:VariableDeclarationStatement[24134-24177]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[24169-24200]:ExpressionStatement[24186-24217]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[24209-24255]:ExpressionStatement[24226-24272]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[24264-24308]:ExpressionStatement[24281-24325]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[24317-24357]:ExpressionStatement[24334-24374]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[24366-24414]:ExpressionStatement[24383-24431]"
    }, {
      "left" : "workItem.setParameter(\"CreatedBy\", \"john\");",
      "right" : "workItem.setParameter(\"CreatedBy\", \"john\");",
      "info" : "ExpressionStatement[24423-24466]:ExpressionStatement[24440-24483]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[24475-24509]:ExpressionStatement[24492-24526]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[24518-24561]:ExpressionStatement[24535-24578]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[24580-24675]:VariableDeclarationStatement[24597-24692]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[24684-24714]:ExpressionStatement[24701-24731]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[24723-24755]:VariableDeclarationStatement[24740-24772]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[24764-24805]:ExpressionStatement[24781-24822]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[24814-24862]:ExpressionStatement[24831-24879]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[24871-24918]:ExpressionStatement[24888-24935]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[24927-24975]:ExpressionStatement[24944-24992]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[24984-25043]:ExpressionStatement[25001-25060]"
    }, {
      "left" : "assertEquals(\"john\", task.getCreatedBy().getId());",
      "right" : "assertEquals(\"john\", task.getCreatedBy().getId());",
      "info" : "ExpressionStatement[25052-25102]:ExpressionStatement[25069-25119]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "info" : "ExpressionStatement[25111-25168]:ExpressionStatement[25128-25185]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[25178-25225]:ExpressionStatement[25195-25242]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[25234-25290]:ExpressionStatement[25251-25307]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[25300-25368]:ExpressionStatement[25317-25385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25450-26783]:Block[25467-26800]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[25460-25516]:VariableDeclarationStatement[25477-25533]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[25525-25562]:ExpressionStatement[25542-25579]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[25571-25614]:VariableDeclarationStatement[25588-25631]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[25623-25654]:ExpressionStatement[25640-25671]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[25663-25709]:ExpressionStatement[25680-25726]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[25718-25762]:ExpressionStatement[25735-25779]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[25771-25811]:ExpressionStatement[25788-25828]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[25820-25868]:ExpressionStatement[25837-25885]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[25877-25911]:ExpressionStatement[25894-25928]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[25920-25963]:ExpressionStatement[25937-25980]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[25982-26077]:VariableDeclarationStatement[25999-26094]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[26086-26116]:ExpressionStatement[26103-26133]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[26125-26157]:VariableDeclarationStatement[26142-26174]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[26166-26207]:ExpressionStatement[26183-26224]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[26216-26264]:ExpressionStatement[26233-26281]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[26273-26320]:ExpressionStatement[26290-26337]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[26329-26377]:ExpressionStatement[26346-26394]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[26386-26445]:ExpressionStatement[26403-26462]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getCreatedBy().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getCreatedBy().getId());",
      "info" : "ExpressionStatement[26454-26511]:ExpressionStatement[26471-26528]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "info" : "ExpressionStatement[26520-26577]:ExpressionStatement[26537-26594]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[26587-26634]:ExpressionStatement[26604-26651]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[26643-26699]:ExpressionStatement[26660-26716]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[26709-26777]:ExpressionStatement[26726-26794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26876-28263]:Block[26893-28280]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[26886-26942]:VariableDeclarationStatement[26903-26959]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[26951-26988]:ExpressionStatement[26968-27005]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[26997-27040]:VariableDeclarationStatement[27014-27057]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[27049-27080]:ExpressionStatement[27066-27097]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[27089-27135]:ExpressionStatement[27106-27152]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[27144-27188]:ExpressionStatement[27161-27205]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[27197-27237]:ExpressionStatement[27214-27254]"
    }, {
      "left" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "right" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "info" : "ExpressionStatement[27246-27292]:ExpressionStatement[27263-27309]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[27301-27349]:ExpressionStatement[27318-27366]"
    }, {
      "left" : "workItem.setParameter(\"SwimlaneActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"SwimlaneActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[27358-27414]:ExpressionStatement[27375-27431]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[27423-27457]:ExpressionStatement[27440-27474]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[27466-27509]:ExpressionStatement[27483-27526]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[27528-27623]:VariableDeclarationStatement[27545-27640]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[27632-27662]:ExpressionStatement[27649-27679]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[27671-27703]:VariableDeclarationStatement[27688-27720]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[27712-27753]:ExpressionStatement[27729-27770]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[27762-27810]:ExpressionStatement[27779-27827]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[27819-27866]:ExpressionStatement[27836-27883]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[27875-27923]:ExpressionStatement[27892-27940]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[27932-27991]:ExpressionStatement[27949-28008]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "info" : "ExpressionStatement[28000-28057]:ExpressionStatement[28017-28074]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[28067-28114]:ExpressionStatement[28084-28131]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[28123-28179]:ExpressionStatement[28140-28196]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[28189-28257]:ExpressionStatement[28206-28274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28353-29683]:Block[28370-29700]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[28363-28419]:VariableDeclarationStatement[28380-28436]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[28428-28465]:ExpressionStatement[28445-28482]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[28474-28517]:VariableDeclarationStatement[28491-28534]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[28526-28557]:ExpressionStatement[28543-28574]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[28566-28612]:ExpressionStatement[28583-28629]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[28621-28665]:ExpressionStatement[28638-28682]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[28674-28714]:ExpressionStatement[28691-28731]"
    }, {
      "left" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "right" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "info" : "ExpressionStatement[28723-28769]:ExpressionStatement[28740-28786]"
    }, {
      "left" : "workItem.setParameter(\"SwimlaneActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"SwimlaneActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[28778-28834]:ExpressionStatement[28795-28851]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[28843-28877]:ExpressionStatement[28860-28894]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[28886-28929]:ExpressionStatement[28903-28946]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[28948-29043]:VariableDeclarationStatement[28965-29060]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[29052-29082]:ExpressionStatement[29069-29099]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[29091-29123]:VariableDeclarationStatement[29108-29140]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[29132-29173]:ExpressionStatement[29149-29190]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[29182-29230]:ExpressionStatement[29199-29247]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[29239-29286]:ExpressionStatement[29256-29303]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[29295-29343]:ExpressionStatement[29312-29360]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[29352-29411]:ExpressionStatement[29369-29428]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "info" : "ExpressionStatement[29420-29477]:ExpressionStatement[29437-29494]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[29487-29534]:ExpressionStatement[29504-29551]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[29543-29599]:ExpressionStatement[29560-29616]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[29609-29677]:ExpressionStatement[29626-29694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29750-31212]:Block[29767-31229]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[29760-29816]:VariableDeclarationStatement[29777-29833]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[29825-29862]:ExpressionStatement[29842-29879]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[29871-29914]:VariableDeclarationStatement[29888-29931]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[29923-29954]:ExpressionStatement[29940-29971]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[29963-30009]:ExpressionStatement[29980-30026]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[30018-30062]:ExpressionStatement[30035-30079]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[30071-30111]:ExpressionStatement[30088-30128]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[30120-30168]:ExpressionStatement[30137-30185]"
    }, {
      "left" : "workItem.setParameter(\"DueDate\", \"2013-11-25T10:35:00Z\");",
      "right" : "workItem.setParameter(\"DueDate\", \"2013-11-25T10:35:00Z\");",
      "info" : "ExpressionStatement[30177-30234]:ExpressionStatement[30194-30251]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[30252-30286]:ExpressionStatement[30269-30303]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[30295-30338]:ExpressionStatement[30312-30355]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[30357-30452]:VariableDeclarationStatement[30374-30469]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[30461-30491]:ExpressionStatement[30478-30508]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[30500-30532]:VariableDeclarationStatement[30517-30549]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[30541-30582]:ExpressionStatement[30558-30599]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[30591-30639]:ExpressionStatement[30608-30656]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[30648-30695]:ExpressionStatement[30665-30712]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[30704-30752]:ExpressionStatement[30721-30769]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[30761-30820]:ExpressionStatement[30778-30837]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "info" : "ExpressionStatement[30829-30886]:ExpressionStatement[30846-30903]"
    }, {
      "left" : "assertEquals(DateTimeUtils.parseDateTime(\"2013-11-25T10:35:00Z\"), task.getExpirationTime().getTime());",
      "right" : "assertEquals(DateTimeUtils.parseDateTime(\"2013-11-25T10:35:00Z\"), task.getExpirationTime().getTime());",
      "info" : "ExpressionStatement[30904-31006]:ExpressionStatement[30921-31023]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[31016-31063]:ExpressionStatement[31033-31080]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[31072-31128]:ExpressionStatement[31089-31145]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[31138-31206]:ExpressionStatement[31155-31223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31276-32782]:Block[31293-32798]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[31286-31342]:VariableDeclarationStatement[31303-31359]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[31351-31388]:ExpressionStatement[31368-31405]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[31397-31440]:VariableDeclarationStatement[31414-31457]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[31449-31480]:ExpressionStatement[31466-31497]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[31489-31535]:ExpressionStatement[31506-31552]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[31544-31588]:ExpressionStatement[31561-31605]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[31597-31637]:ExpressionStatement[31614-31654]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[31646-31694]:ExpressionStatement[31663-31711]"
    }, {
      "left" : "workItem.setParameter(\"DueDate\", \"P2d\");",
      "right" : "workItem.setParameter(\"DueDate\", \"P2d\");",
      "info" : "ExpressionStatement[31703-31743]:ExpressionStatement[31720-31760]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[31778-31812]:ExpressionStatement[31795-31829]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[31821-31864]:ExpressionStatement[31838-31881]"
    }, {
      "left" : "long currentTime = new Date().getTime();",
      "right" : "long currentTime = new Date().getTime();",
      "info" : "VariableDeclarationStatement[31873-31913]:VariableDeclarationStatement[31890-31930]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[31931-32026]:VariableDeclarationStatement[31948-32043]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[32035-32065]:ExpressionStatement[32052-32082]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "TaskSummary task = tasks.get(0);",
      "info" : "VariableDeclarationStatement[32074-32106]:VariableDeclarationStatement[32091-32123]"
    }, {
      "left" : "assertEquals(\"TaskName\", task.getName());",
      "right" : "assertEquals(\"TaskName\", task.getName());",
      "info" : "ExpressionStatement[32115-32156]:ExpressionStatement[32132-32173]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority().intValue());",
      "info" : "ExpressionStatement[32165-32213]:ExpressionStatement[32182-32230]"
    }, {
      "left" : "assertEquals(\"Comment\", task.getDescription());",
      "right" : "assertEquals(\"Comment\", task.getDescription());",
      "info" : "ExpressionStatement[32222-32269]:ExpressionStatement[32239-32286]"
    }, {
      "left" : "assertEquals(Status.Reserved, task.getStatus());",
      "right" : "assertEquals(Status.Reserved, task.getStatus());",
      "info" : "ExpressionStatement[32278-32326]:ExpressionStatement[32295-32343]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "info" : "ExpressionStatement[32335-32394]:ExpressionStatement[32352-32411]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "info" : "ExpressionStatement[32403-32460]:ExpressionStatement[32420-32477]"
    }, {
      "left" : "assertTrue( currentTime + DateTimeUtils.parseDuration(\"2d\") > task.getExpirationTime().getTime());",
      "right" : "assertTrue(currentTime + DateTimeUtils.parseDuration(\"2d\") > task.getExpirationTime().getTime());",
      "info" : "ExpressionStatement[32478-32576]:ExpressionStatement[32495-32592]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[32586-32633]:ExpressionStatement[32602-32649]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[32642-32698]:ExpressionStatement[32658-32714]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[32708-32776]:ExpressionStatement[32724-32792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32861-34257]:Block[32877-34273]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[32869-32925]:VariableDeclarationStatement[32885-32941]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[32934-32971]:ExpressionStatement[32950-32987]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[32980-33023]:VariableDeclarationStatement[32996-33039]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[33032-33063]:ExpressionStatement[33048-33079]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName\");",
      "info" : "ExpressionStatement[33072-33118]:ExpressionStatement[33088-33134]"
    }, {
      "left" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "right" : "workItem.setParameter(\"Comment\", \"Comment\");",
      "info" : "ExpressionStatement[33127-33171]:ExpressionStatement[33143-33187]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[33180-33220]:ExpressionStatement[33196-33236]"
    }, {
      "left" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "right" : "workItem.setParameter(\"GroupId\", \"Crusaders\");",
      "info" : "ExpressionStatement[33229-33275]:ExpressionStatement[33245-33291]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[33284-33318]:ExpressionStatement[33300-33334]"
    }, {
      "left" : "getHandler().executeWorkItem(workItem, manager);",
      "right" : "getHandler().executeWorkItem(workItem, manager);",
      "info" : "ExpressionStatement[33327-33375]:ExpressionStatement[33343-33391]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Luke Cage\", \"en-UK\");",
      "right" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Luke Cage\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[33385-33478]:VariableDeclarationStatement[33401-33494]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[33487-33517]:ExpressionStatement[33503-33533]"
    }, {
      "left" : "TaskSummary taskSummary = tasks.get(0);",
      "right" : "TaskSummary taskSummary = tasks.get(0);",
      "info" : "VariableDeclarationStatement[33526-33565]:VariableDeclarationStatement[33542-33581]"
    }, {
      "left" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "right" : "assertEquals(\"TaskName\", taskSummary.getName());",
      "info" : "ExpressionStatement[33574-33622]:ExpressionStatement[33590-33638]"
    }, {
      "left" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "right" : "assertEquals(10, taskSummary.getPriority().intValue());",
      "info" : "ExpressionStatement[33631-33686]:ExpressionStatement[33647-33702]"
    }, {
      "left" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "right" : "assertEquals(\"Comment\", taskSummary.getDescription());",
      "info" : "ExpressionStatement[33695-33749]:ExpressionStatement[33711-33765]"
    }, {
      "left" : "assertEquals(Status.Ready, taskSummary.getStatus());",
      "right" : "assertEquals(Status.Ready, taskSummary.getStatus());",
      "info" : "ExpressionStatement[33758-33810]:ExpressionStatement[33774-33826]"
    }, {
      "left" : "taskService.claim(taskSummary.getId(), \"Luke Cage\");",
      "right" : "taskService.claim(taskSummary.getId(), \"Luke Cage\");",
      "info" : "ExpressionStatement[33820-33872]:ExpressionStatement[33836-33888]"
    }, {
      "left" : "taskService.start(taskSummary.getId(), \"Luke Cage\");",
      "right" : "taskService.start(taskSummary.getId(), \"Luke Cage\");",
      "info" : "ExpressionStatement[33883-33935]:ExpressionStatement[33899-33951]"
    }, {
      "left" : "taskService.complete(taskSummary.getId(), \"Luke Cage\", null);",
      "right" : "taskService.complete(taskSummary.getId(), \"Luke Cage\", null);",
      "info" : "ExpressionStatement[33944-34005]:ExpressionStatement[33960-34021]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[34015-34083]:ExpressionStatement[34031-34099]"
    }, {
      "left" : "String actualOwner = (String) manager.getResults().get(\"ActorId\");",
      "right" : "String actualOwner = (String) manager.getResults().get(\"ActorId\");",
      "info" : "VariableDeclarationStatement[34101-34167]:VariableDeclarationStatement[34117-34183]"
    }, {
      "left" : "assertNotNull(actualOwner);",
      "right" : "assertNotNull(actualOwner);",
      "info" : "ExpressionStatement[34176-34203]:ExpressionStatement[34192-34219]"
    }, {
      "left" : "assertEquals(\"Luke Cage\", actualOwner);",
      "right" : "assertEquals(\"Luke Cage\", actualOwner);",
      "info" : "ExpressionStatement[34212-34251]:ExpressionStatement[34228-34267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34330-35887]:Block[34346-35797]"
    }, {
      "left" : "TestWorkItemManager manager = new TestWorkItemManager();",
      "right" : "final TestWorkItemManager manager = new TestWorkItemManager();",
      "info" : "VariableDeclarationStatement[34340-34396]:VariableDeclarationStatement[35883-35945]"
    }, {
      "left" : "ksession.setWorkItemManager(manager);",
      "right" : "ksession.setWorkItemManager(manager);",
      "info" : "ExpressionStatement[34405-34442]:ExpressionStatement[34427-34464]"
    }, {
      "left" : "WorkItemImpl workItem = new WorkItemImpl();",
      "right" : "final WorkItemImpl workItem = new WorkItemImpl();",
      "info" : "VariableDeclarationStatement[34451-34494]:VariableDeclarationStatement[36879-36928]"
    }, {
      "left" : "workItem.setName(\"Human Task\");",
      "right" : "workItem.setName(\"Human Task\");",
      "info" : "ExpressionStatement[34503-34534]:ExpressionStatement[36937-36968]"
    }, {
      "left" : "workItem.setParameter(\"NodeName\", \"TaskName ${task.taskData.processInstanceId}\");",
      "right" : "workItem.setParameter(\"NodeName\", \"TaskName ${task.taskData.processInstanceId}\");",
      "info" : "ExpressionStatement[34543-34624]:ExpressionStatement[36977-37058]"
    }, {
      "left" : "workItem.setParameter(\"Priority\", \"10\");",
      "right" : "workItem.setParameter(\"Priority\", \"10\");",
      "info" : "ExpressionStatement[34706-34746]:ExpressionStatement[37131-37171]"
    }, {
      "left" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "right" : "workItem.setParameter(\"ActorId\", \"Darth Vader\");",
      "info" : "ExpressionStatement[34755-34803]:ExpressionStatement[37180-37228]"
    }, {
      "left" : "workItem.setProcessInstanceId(10);",
      "right" : "workItem.setProcessInstanceId(10);",
      "info" : "ExpressionStatement[34812-34846]:ExpressionStatement[37237-37271]"
    }, {
      "left" : "handler.executeWorkItem(workItem, manager);",
      "right" : "handler.executeWorkItem(prepareWorkItemWithTaskVariables(taskDescriptionParam), manager);",
      "info" : "ExpressionStatement[34855-34898]:ExpressionStatement[34756-34845]"
    }, {
      "left" : "List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "right" : "final List<TaskSummary> tasks = taskService.getTasksAssignedAsPotentialOwner(\"Darth Vader\", \"en-UK\");",
      "info" : "VariableDeclarationStatement[34917-35012]:VariableDeclarationStatement[34856-34957]"
    }, {
      "left" : "assertEquals(1, tasks.size());",
      "right" : "assertEquals(1, tasks.size());",
      "info" : "ExpressionStatement[35021-35051]:ExpressionStatement[34966-34996]"
    }, {
      "left" : "TaskSummary task = tasks.get(0);",
      "right" : "final Task task = taskService.getTaskById(tasks.get(0).getId());",
      "info" : "VariableDeclarationStatement[35060-35092]:VariableDeclarationStatement[35005-35069]"
    }, {
      "left" : "assertEquals(10, task.getPriority().intValue());",
      "right" : "assertEquals(10, task.getPriority());",
      "info" : "ExpressionStatement[35182-35230]:ExpressionStatement[37509-37546]"
    }, {
      "left" : "assertEquals(\"Comment for task \" + task.getId(), task.getDescription());",
      "right" : "testTaskWithExpectedDescription(task, task.getDescription());",
      "info" : "ExpressionStatement[35239-35311]:ExpressionStatement[36339-36400]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", task.getActualOwner().getId());",
      "right" : "assertEquals(Status.Reserved, task.getTaskData().getStatus());",
      "info" : "ExpressionStatement[35377-35436]:ExpressionStatement[37621-37683]"
    }, {
      "left" : "assertEquals(10, task.getProcessInstanceId().intValue());",
      "right" : "assertEquals(10L, task.getTaskData().getProcessInstanceId());",
      "info" : "ExpressionStatement[35445-35502]:ExpressionStatement[37774-37835]"
    }, {
      "left" : "taskService.start(task.getId(), \"Darth Vader\");",
      "right" : "taskService.start(task.getId(), \"Darth Vader\");",
      "info" : "ExpressionStatement[35512-35559]:ExpressionStatement[35416-35463]"
    }, {
      "left" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "right" : "taskService.complete(task.getId(), \"Darth Vader\", null);",
      "info" : "ExpressionStatement[35568-35624]:ExpressionStatement[35472-35528]"
    }, {
      "left" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "right" : "assertTrue(manager.waitTillCompleted(MANAGER_COMPLETION_WAIT_TIME));",
      "info" : "ExpressionStatement[35634-35702]:ExpressionStatement[35538-35606]"
    }, {
      "left" : "String actualOwner = (String) manager.getResults().get(\"ActorId\");",
      "right" : "final String actualOwner = (String) manager.getResults().get(\"ActorId\");",
      "info" : "VariableDeclarationStatement[35720-35786]:VariableDeclarationStatement[35624-35696]"
    }, {
      "left" : "assertNotNull(actualOwner);",
      "right" : "assertNotNull(actualOwner);",
      "info" : "ExpressionStatement[35795-35822]:ExpressionStatement[35705-35732]"
    }, {
      "left" : "assertEquals(\"Darth Vader\", actualOwner);",
      "right" : "assertEquals(\"Darth Vader\", actualOwner);",
      "info" : "ExpressionStatement[35831-35872]:ExpressionStatement[35741-35782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35945-35984]:Block[37895-37934]"
    }, {
      "left" : "this.handler = handler;",
      "right" : "this.handler = handler;",
      "info" : "ExpressionStatement[35955-35978]:ExpressionStatement[37905-37928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36026-36057]:Block[37976-38007]"
    }, {
      "left" : "return handler;",
      "right" : "return handler;",
      "info" : "ReturnStatement[36036-36051]:ReturnStatement[37986-38001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36333-36611]:Block[38283-38561]"
    }, {
      "left" : "if (!isCompleted())",
      "right" : "if (!isCompleted())",
      "info" : "IfStatement[36347-36566]:IfStatement[38297-38516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36367-36566]:Block[38317-38516]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[36385-36552]:TryStatement[38335-38502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36389-36440]:Block[38339-38390]"
    }, {
      "left" : "wait(time);",
      "right" : "wait(time);",
      "info" : "ExpressionStatement[36411-36422]:ExpressionStatement[38361-38372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36472-36552]:Block[38422-38502]"
    }, {
      "left" : "return isCompleted();",
      "right" : "return isCompleted();",
      "info" : "ReturnStatement[36580-36601]:ReturnStatement[38530-38551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36676-36948]:Block[38626-38898]"
    }, {
      "left" : "if (!isAborted())",
      "right" : "if (!isAborted())",
      "info" : "IfStatement[36690-36905]:IfStatement[38640-38855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36708-36905]:Block[38658-38855]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[36726-36891]:TryStatement[38676-38841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36730-36781]:Block[38680-38731]"
    }, {
      "left" : "wait(time);",
      "right" : "wait(time);",
      "info" : "ExpressionStatement[36752-36763]:ExpressionStatement[38702-38713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36813-36891]:Block[38763-38841]"
    }, {
      "left" : "return isAborted();",
      "right" : "return isAborted();",
      "info" : "ReturnStatement[36919-36938]:ReturnStatement[38869-38888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36993-37034]:Block[38943-38984]"
    }, {
      "left" : "setAborted(true);",
      "right" : "setAborted(true);",
      "info" : "ExpressionStatement[37007-37024]:ExpressionStatement[38957-38974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37084-37123]:Block[39034-39073]"
    }, {
      "left" : "return aborted;",
      "right" : "return aborted;",
      "info" : "ReturnStatement[37098-37113]:ReturnStatement[39048-39063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37187-37259]:Block[39137-39209]"
    }, {
      "left" : "this.aborted = aborted;",
      "right" : "this.aborted = aborted;",
      "info" : "ExpressionStatement[37201-37224]:ExpressionStatement[39151-39174]"
    }, {
      "left" : "notifyAll();",
      "right" : "notifyAll();",
      "info" : "ExpressionStatement[37237-37249]:ExpressionStatement[39187-39199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37336-37415]:Block[39286-39365]"
    }, {
      "left" : "this.results = results;",
      "right" : "this.results = results;",
      "info" : "ExpressionStatement[37350-37373]:ExpressionStatement[39300-39323]"
    }, {
      "left" : "setCompleted(true);",
      "right" : "setCompleted(true);",
      "info" : "ExpressionStatement[37386-37405]:ExpressionStatement[39336-39355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37483-37559]:Block[39433-39509]"
    }, {
      "left" : "this.completed = completed;",
      "right" : "this.completed = completed;",
      "info" : "ExpressionStatement[37497-37524]:ExpressionStatement[39447-39474]"
    }, {
      "left" : "notifyAll();",
      "right" : "notifyAll();",
      "info" : "ExpressionStatement[37537-37549]:ExpressionStatement[39487-39499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37611-37652]:Block[39561-39602]"
    }, {
      "left" : "return completed;",
      "right" : "return completed;",
      "info" : "ReturnStatement[37625-37642]:ReturnStatement[39575-39592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37702-37741]:Block[39652-39691]"
    }, {
      "left" : "return results;",
      "right" : "return results;",
      "info" : "ReturnStatement[37716-37731]:ReturnStatement[39666-39681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37833-37844]:Block[39783-39794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37973-37997]:Block[39923-39947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38064-38125]:Block[40014-40075]"
    }, {
      "left" : "this.throwException = throwException;",
      "right" : "this.throwException = throwException;",
      "info" : "ExpressionStatement[38078-38115]:ExpressionStatement[40028-40065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38226-38272]:Block[40176-40222]"
    }, {
      "left" : "return throwException;",
      "right" : "return throwException;",
      "info" : "ReturnStatement[38240-38262]:ReturnStatement[40190-40212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38336-38397]:Block[40286-40347]"
    }, {
      "left" : "this.throwException = throwException;",
      "right" : "this.throwException = throwException;",
      "info" : "ExpressionStatement[38350-38387]:ExpressionStatement[40300-40337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38473-38598]:Block[40423-40548]"
    }, {
      "left" : "if (isThrowException())",
      "right" : "if (isThrowException())",
      "info" : "IfStatement[38487-38588]:IfStatement[40437-40538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38511-38588]:Block[40461-40538]"
    }, {
      "left" : "throw new RuntimeException(\"test exception\");",
      "right" : "throw new RuntimeException(\"test exception\");",
      "info" : "ThrowStatement[38529-38574]:ThrowStatement[40479-40524]"
    } ]
  },
  "interFileMappings" : { }
}