{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CheckBox",
      "right" : "CheckBox",
      "info" : "TypeDeclaration[1029-3966]:TypeDeclaration[1029-3777]"
    }, {
      "left" : "private Image image;",
      "right" : "private Image image;",
      "info" : "FieldDeclaration[1205-1225]:FieldDeclaration[1205-1225]"
    }, {
      "left" : "private Cell imageCell;",
      "right" : "private Cell imageCell;",
      "info" : "FieldDeclaration[1227-1250]:FieldDeclaration[1227-1250]"
    }, {
      "left" : "private CheckBoxStyle style;",
      "right" : "private CheckBoxStyle style;",
      "info" : "FieldDeclaration[1252-1280]:FieldDeclaration[1252-1280]"
    }, {
      "left" : "public CheckBox (String text, Skin skin)",
      "right" : "public CheckBox (String text, Skin skin)",
      "info" : "MethodDeclaration[1283-1373]:MethodDeclaration[1283-1373]"
    }, {
      "left" : "public CheckBox (String text, Skin skin, String styleName)",
      "right" : "public CheckBox (String text, Skin skin, String styleName)",
      "info" : "MethodDeclaration[1376-1495]:MethodDeclaration[1376-1495]"
    }, {
      "left" : "public void setCheckBoxRight (boolean right)",
      "right" : "public CheckBox (String text, CheckBoxStyle style)",
      "info" : "MethodDeclaration[1707-1960]:MethodDeclaration[1498-1771]"
    }, {
      "left" : "public void setStyle (ButtonStyle style)",
      "right" : "public void setStyle (ButtonStyle style)",
      "info" : "MethodDeclaration[1963-2181]:MethodDeclaration[1774-1992]"
    }, {
      "left" : "public CheckBoxStyle getStyle ()",
      "right" : "public CheckBoxStyle getStyle ()",
      "info" : "MethodDeclaration[2184-2379]:MethodDeclaration[1995-2190]"
    }, {
      "left" : "public void draw (Batch batch, float parentAlpha)",
      "right" : "public void draw (Batch batch, float parentAlpha)",
      "info" : "MethodDeclaration[2382-2955]:MethodDeclaration[2193-2766]"
    }, {
      "left" : "public Image getImage ()",
      "right" : "public Image getImage ()",
      "info" : "MethodDeclaration[2958-3003]:MethodDeclaration[2769-2814]"
    }, {
      "left" : "public Cell getImageCell ()",
      "right" : "public Cell getImageCell ()",
      "info" : "MethodDeclaration[3006-3058]:MethodDeclaration[2817-2869]"
    }, {
      "left" : "CheckBoxStyle",
      "right" : "CheckBoxStyle",
      "info" : "TypeDeclaration[3061-3964]:TypeDeclaration[2872-3775]"
    }, {
      "left" : "public Drawable checkboxOn, checkboxOff;",
      "right" : "public Drawable checkboxOn, checkboxOff;",
      "info" : "FieldDeclaration[3206-3246]:FieldDeclaration[3017-3057]"
    }, {
      "left" : "public Drawable checkboxOver, checkboxOnDisabled, checkboxOffDisabled;",
      "right" : "public Drawable checkboxOver, checkboxOnDisabled, checkboxOffDisabled;",
      "info" : "FieldDeclaration[3249-3338]:FieldDeclaration[3060-3149]"
    }, {
      "left" : "public CheckBoxStyle ()",
      "right" : "public CheckBoxStyle ()",
      "info" : "MethodDeclaration[3342-3371]:MethodDeclaration[3153-3182]"
    }, {
      "left" : "public CheckBoxStyle (Drawable checkboxOff, Drawable checkboxOn, BitmapFont font, Color fontColor)",
      "right" : "public CheckBoxStyle (Drawable checkboxOff, Drawable checkboxOn, BitmapFont font, Color fontColor)",
      "info" : "MethodDeclaration[3375-3599]:MethodDeclaration[3186-3410]"
    }, {
      "left" : "public CheckBoxStyle (CheckBoxStyle style)",
      "right" : "public CheckBoxStyle (CheckBoxStyle style)",
      "info" : "MethodDeclaration[3603-3961]:MethodDeclaration[3414-3772]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1324-1373]:Block[1324-1373]"
    }, {
      "left" : "this(text, skin.get(CheckBoxStyle.class));",
      "right" : "this(text, skin.get(CheckBoxStyle.class));",
      "info" : "ConstructorInvocation[1328-1370]:ConstructorInvocation[1328-1370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1435-1495]:Block[1435-1495]"
    }, {
      "left" : "this(text, skin.get(styleName, CheckBoxStyle.class));",
      "right" : "this(text, skin.get(styleName, CheckBoxStyle.class));",
      "info" : "ConstructorInvocation[1439-1492]:ConstructorInvocation[1439-1492]"
    }, {
      "left" : "clearChildren();",
      "right" : "clearChildren();",
      "info" : "ExpressionStatement[1575-1591]:ExpressionStatement[1575-1591]"
    }, {
      "left" : "setSize(getPrefWidth(), getPrefHeight());",
      "right" : "setSize(getPrefWidth(), getPrefHeight());",
      "info" : "ExpressionStatement[1660-1701]:ExpressionStatement[1727-1768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1752-1960]:Block[1549-1771]"
    }, {
      "left" : "Label label = getLabel();",
      "right" : "Label label = getLabel();",
      "info" : "VariableDeclarationStatement[1756-1781]:VariableDeclarationStatement[1594-1619]"
    }, {
      "left" : "imageCell = add(image = new Image(style.checkboxOff));",
      "right" : "imageCell = add(image = new Image(style.checkboxOff));",
      "info" : "ExpressionStatement[1815-1869]:ExpressionStatement[1622-1676]"
    }, {
      "left" : "imageCell = add(image = new Image(style.checkboxOff));",
      "right" : "label.setAlignment(Align.left);",
      "info" : "ExpressionStatement[1884-1938]:ExpressionStatement[1693-1724]"
    }, {
      "left" : "add(label);",
      "right" : "add(label);",
      "info" : "ExpressionStatement[1942-1953]:ExpressionStatement[1679-1690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2004-2181]:Block[1815-1992]"
    }, {
      "left" : "if (!(style instanceof CheckBoxStyle))",
      "right" : "if (!(style instanceof CheckBoxStyle))",
      "info" : "IfStatement[2008-2116]:IfStatement[1819-1927]"
    }, {
      "left" : "throw new IllegalArgumentException(\"style must be a CheckBoxStyle.\");",
      "right" : "throw new IllegalArgumentException(\"style must be a CheckBoxStyle.\");",
      "info" : "ThrowStatement[2047-2116]:ThrowStatement[1858-1927]"
    }, {
      "left" : "super.setStyle(style);",
      "right" : "super.setStyle(style);",
      "info" : "ExpressionStatement[2119-2141]:ExpressionStatement[1930-1952]"
    }, {
      "left" : "this.style = (CheckBoxStyle)style;",
      "right" : "this.style = (CheckBoxStyle)style;",
      "info" : "ExpressionStatement[2144-2178]:ExpressionStatement[1955-1989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2359-2379]:Block[2170-2190]"
    }, {
      "left" : "return style;",
      "right" : "return style;",
      "info" : "ReturnStatement[2363-2376]:ReturnStatement[2174-2187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2432-2955]:Block[2243-2766]"
    }, {
      "left" : "Drawable checkbox = null;",
      "right" : "Drawable checkbox = null;",
      "info" : "VariableDeclarationStatement[2436-2461]:VariableDeclarationStatement[2247-2272]"
    }, {
      "left" : "if (isDisabled())",
      "right" : "if (isDisabled())",
      "info" : "IfStatement[2464-2632]:IfStatement[2275-2443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2482-2632]:Block[2293-2443]"
    }, {
      "left" : "if (isChecked && style.checkboxOnDisabled != null)",
      "right" : "if (isChecked && style.checkboxOnDisabled != null)",
      "info" : "IfStatement[2487-2628]:IfStatement[2298-2439]"
    }, {
      "left" : "checkbox = style.checkboxOnDisabled;",
      "right" : "checkbox = style.checkboxOnDisabled;",
      "info" : "ExpressionStatement[2542-2578]:ExpressionStatement[2353-2389]"
    }, {
      "left" : "checkbox = style.checkboxOffDisabled;",
      "right" : "checkbox = style.checkboxOffDisabled;",
      "info" : "ExpressionStatement[2591-2628]:ExpressionStatement[2402-2439]"
    }, {
      "left" : "if (checkbox == null)",
      "right" : "if (checkbox == null)",
      "info" : "IfStatement[2635-2887]:IfStatement[2446-2698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2657-2887]:Block[2468-2698]"
    }, {
      "left" : "if (isChecked && style.checkboxOn != null)",
      "right" : "if (isChecked && style.checkboxOn != null)",
      "info" : "IfStatement[2662-2883]:IfStatement[2473-2694]"
    }, {
      "left" : "checkbox = style.checkboxOn;",
      "right" : "checkbox = style.checkboxOn;",
      "info" : "ExpressionStatement[2709-2737]:ExpressionStatement[2520-2548]"
    }, {
      "left" : "if (isOver() && style.checkboxOver != null && !isDisabled())",
      "right" : "if (isOver() && style.checkboxOver != null && !isDisabled())",
      "info" : "IfStatement[2746-2883]:IfStatement[2557-2694]"
    }, {
      "left" : "checkbox = style.checkboxOver;",
      "right" : "checkbox = style.checkboxOver;",
      "info" : "ExpressionStatement[2811-2841]:ExpressionStatement[2622-2652]"
    }, {
      "left" : "checkbox = style.checkboxOff;",
      "right" : "checkbox = style.checkboxOff;",
      "info" : "ExpressionStatement[2854-2883]:ExpressionStatement[2665-2694]"
    }, {
      "left" : "image.setDrawable(checkbox);",
      "right" : "image.setDrawable(checkbox);",
      "info" : "ExpressionStatement[2890-2918]:ExpressionStatement[2701-2729]"
    }, {
      "left" : "super.draw(batch, parentAlpha);",
      "right" : "super.draw(batch, parentAlpha);",
      "info" : "ExpressionStatement[2921-2952]:ExpressionStatement[2732-2763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2983-3003]:Block[2794-2814]"
    }, {
      "left" : "return image;",
      "right" : "return image;",
      "info" : "ReturnStatement[2987-3000]:ReturnStatement[2798-2811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3034-3058]:Block[2845-2869]"
    }, {
      "left" : "return imageCell;",
      "right" : "return imageCell;",
      "info" : "ReturnStatement[3038-3055]:ReturnStatement[2849-2866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3366-3371]:Block[3177-3182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3474-3599]:Block[3285-3410]"
    }, {
      "left" : "this.checkboxOff = checkboxOff;",
      "right" : "this.checkboxOff = checkboxOff;",
      "info" : "ExpressionStatement[3479-3510]:ExpressionStatement[3290-3321]"
    }, {
      "left" : "this.checkboxOn = checkboxOn;",
      "right" : "this.checkboxOn = checkboxOn;",
      "info" : "ExpressionStatement[3514-3543]:ExpressionStatement[3325-3354]"
    }, {
      "left" : "this.font = font;",
      "right" : "this.font = font;",
      "info" : "ExpressionStatement[3547-3564]:ExpressionStatement[3358-3375]"
    }, {
      "left" : "this.fontColor = fontColor;",
      "right" : "this.fontColor = fontColor;",
      "info" : "ExpressionStatement[3568-3595]:ExpressionStatement[3379-3406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3646-3961]:Block[3457-3772]"
    }, {
      "left" : "this.checkboxOff = style.checkboxOff;",
      "right" : "this.checkboxOff = style.checkboxOff;",
      "info" : "ExpressionStatement[3651-3688]:ExpressionStatement[3462-3499]"
    }, {
      "left" : "this.checkboxOn = style.checkboxOn;",
      "right" : "this.checkboxOn = style.checkboxOn;",
      "info" : "ExpressionStatement[3692-3727]:ExpressionStatement[3503-3538]"
    }, {
      "left" : "this.checkboxOver = style.checkboxOver;",
      "right" : "this.checkboxOver = style.checkboxOver;",
      "info" : "ExpressionStatement[3731-3770]:ExpressionStatement[3542-3581]"
    }, {
      "left" : "this.checkboxOffDisabled = style.checkboxOffDisabled;",
      "right" : "this.checkboxOffDisabled = style.checkboxOffDisabled;",
      "info" : "ExpressionStatement[3774-3827]:ExpressionStatement[3585-3638]"
    }, {
      "left" : "this.checkboxOnDisabled = style.checkboxOnDisabled;",
      "right" : "this.checkboxOnDisabled = style.checkboxOnDisabled;",
      "info" : "ExpressionStatement[3831-3882]:ExpressionStatement[3642-3693]"
    }, {
      "left" : "this.font = style.font;",
      "right" : "this.font = style.font;",
      "info" : "ExpressionStatement[3886-3909]:ExpressionStatement[3697-3720]"
    }, {
      "left" : "this.fontColor = new Color(style.fontColor);",
      "right" : "this.fontColor = new Color(style.fontColor);",
      "info" : "ExpressionStatement[3913-3957]:ExpressionStatement[3724-3768]"
    } ]
  },
  "interFileMappings" : { }
}