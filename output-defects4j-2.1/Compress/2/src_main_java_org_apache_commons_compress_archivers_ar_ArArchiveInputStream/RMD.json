{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ArArchiveInputStream",
      "right" : "ArArchiveInputStream",
      "info" : "TypeDeclaration[1039-5367]:TypeDeclaration[1039-6245]"
    }, {
      "left" : "private final InputStream input;",
      "right" : "private final InputStream input;",
      "info" : "FieldDeclaration[1199-1231]:FieldDeclaration[1199-1231]"
    }, {
      "left" : "private long offset = 0;",
      "right" : "private long offset = 0;",
      "info" : "FieldDeclaration[1236-1260]:FieldDeclaration[1236-1260]"
    }, {
      "left" : "private boolean closed;",
      "right" : "private boolean closed;",
      "info" : "FieldDeclaration[1265-1288]:FieldDeclaration[1265-1288]"
    }, {
      "left" : "public ArArchiveInputStream( final InputStream pInput )",
      "right" : "public ArArchiveInputStream( final InputStream pInput )",
      "info" : "MethodDeclaration[1507-1618]:MethodDeclaration[1590-1701]"
    }, {
      "left" : "public ArArchiveEntry getNextArEntry() throws IOException",
      "right" : "public ArArchiveEntry getNextArEntry() throws IOException",
      "info" : "MethodDeclaration[1624-3889]:MethodDeclaration[1707-4413]"
    }, {
      "left" : "public ArchiveEntry getNextEntry() throws IOException",
      "right" : "public ArchiveEntry getNextEntry() throws IOException",
      "info" : "MethodDeclaration[3896-3990]:MethodDeclaration[4420-4514]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[3996-4129]:MethodDeclaration[4520-4682]"
    }, {
      "left" : "public int read() throws IOException",
      "right" : "public int read() throws IOException",
      "info" : "MethodDeclaration[4135-4274]:MethodDeclaration[4688-4857]"
    }, {
      "left" : "public int read(byte[] b) throws IOException",
      "right" : "public int read(byte[] b) throws IOException",
      "info" : "MethodDeclaration[4280-4369]:MethodDeclaration[4863-4952]"
    }, {
      "left" : "public int read(byte[] b, final int off, final int len) throws IOException",
      "right" : "public int read(byte[] b, final int off, final int len) throws IOException",
      "info" : "MethodDeclaration[4375-4599]:MethodDeclaration[4958-5477]"
    }, {
      "left" : "public static boolean matches(byte[] signature, int length)",
      "right" : "public static boolean matches(byte[] signature, int length)",
      "info" : "MethodDeclaration[4605-5364]:MethodDeclaration[5483-6242]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1563-1618]:Block[1646-1701]"
    }, {
      "left" : "input = pInput;",
      "right" : "input = pInput;",
      "info" : "ExpressionStatement[1573-1588]:ExpressionStatement[1656-1671]"
    }, {
      "left" : "closed = false;",
      "right" : "closed = false;",
      "info" : "ExpressionStatement[1597-1612]:ExpressionStatement[1680-1695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1866-3889]:Block[1949-4413]"
    }, {
      "left" : "if (offset == 0)",
      "right" : "if (offset == 0)",
      "info" : "IfStatement[2000-2551]:IfStatement[2404-2955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2017-2551]:Block[2421-2955]"
    }, {
      "left" : "final byte[] expected = ArArchiveEntry.HEADER.getBytes();",
      "right" : "final byte[] expected = ArArchiveEntry.HEADER.getBytes();",
      "info" : "VariableDeclarationStatement[2031-2088]:VariableDeclarationStatement[2435-2492]"
    }, {
      "left" : "final byte[] realized = new byte[expected.length];",
      "right" : "final byte[] realized = new byte[expected.length];",
      "info" : "VariableDeclarationStatement[2101-2151]:VariableDeclarationStatement[2505-2555]"
    }, {
      "left" : "final int read = read(realized);",
      "right" : "final int read = read(realized);",
      "info" : "VariableDeclarationStatement[2165-2197]:VariableDeclarationStatement[2569-2601]"
    }, {
      "left" : "if (read != expected.length)",
      "right" : "if (read != expected.length)",
      "info" : "IfStatement[2210-2318]:IfStatement[2614-2722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2239-2318]:Block[2643-2722]"
    }, {
      "left" : "throw new IOException(\"failed to read header\");",
      "right" : "throw new IOException(\"failed to read header\");",
      "info" : "ThrowStatement[2257-2304]:ThrowStatement[2661-2708]"
    }, {
      "left" : "for (int i = 0; i < expected.length; i++)",
      "right" : "for (int i = 0; i < expected.length; i++)",
      "info" : "ForStatement[2331-2541]:ForStatement[2735-2945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2373-2541]:Block[2777-2945]"
    }, {
      "left" : "if (expected[i] != realized[i])",
      "right" : "if (expected[i] != realized[i])",
      "info" : "IfStatement[2391-2527]:IfStatement[2795-2931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2423-2527]:Block[2827-2931]"
    }, {
      "left" : "throw new IOException(\"invalid header \" + new String(realized));",
      "right" : "throw new IOException(\"invalid header \" + new String(realized));",
      "info" : "ThrowStatement[2445-2509]:ThrowStatement[2849-2913]"
    }, {
      "left" : "if (input.available() == 0)",
      "right" : "if (input.available() == 0)",
      "info" : "IfStatement[2589-2653]:IfStatement[3107-3171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2617-2653]:Block[3135-3171]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[2631-2643]:ReturnStatement[3149-3161]"
    }, {
      "left" : "if (offset % 2 != 0)",
      "right" : "if (offset % 2 != 0)",
      "info" : "IfStatement[2663-2715]:IfStatement[2965-3097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2684-2715]:Block[2986-3097]"
    }, {
      "left" : "final byte[] name = new byte[16];",
      "right" : "final byte[] name = new byte[16];",
      "info" : "VariableDeclarationStatement[2724-2757]:VariableDeclarationStatement[3181-3214]"
    }, {
      "left" : "final byte[] lastmodified = new byte[12];",
      "right" : "final byte[] lastmodified = new byte[12];",
      "info" : "VariableDeclarationStatement[2766-2807]:VariableDeclarationStatement[3223-3264]"
    }, {
      "left" : "final byte[] userid = new byte[6];",
      "right" : "final byte[] userid = new byte[6];",
      "info" : "VariableDeclarationStatement[2816-2850]:VariableDeclarationStatement[3273-3307]"
    }, {
      "left" : "final byte[] groupid = new byte[6];",
      "right" : "final byte[] groupid = new byte[6];",
      "info" : "VariableDeclarationStatement[2859-2894]:VariableDeclarationStatement[3316-3351]"
    }, {
      "left" : "final byte[] filemode = new byte[8];",
      "right" : "final byte[] filemode = new byte[8];",
      "info" : "VariableDeclarationStatement[2903-2939]:VariableDeclarationStatement[3360-3396]"
    }, {
      "left" : "final byte[] length = new byte[10];",
      "right" : "final byte[] length = new byte[10];",
      "info" : "VariableDeclarationStatement[2948-2983]:VariableDeclarationStatement[3405-3440]"
    }, {
      "left" : "read(name);",
      "right" : "read(name);",
      "info" : "ExpressionStatement[2993-3004]:ExpressionStatement[3450-3461]"
    }, {
      "left" : "read(lastmodified);",
      "right" : "read(lastmodified);",
      "info" : "ExpressionStatement[3013-3032]:ExpressionStatement[3470-3489]"
    }, {
      "left" : "read(userid);",
      "right" : "read(userid);",
      "info" : "ExpressionStatement[3041-3054]:ExpressionStatement[3498-3511]"
    }, {
      "left" : "read(groupid);",
      "right" : "read(groupid);",
      "info" : "ExpressionStatement[3063-3077]:ExpressionStatement[3520-3534]"
    }, {
      "left" : "read(filemode);",
      "right" : "read(filemode);",
      "info" : "ExpressionStatement[3086-3101]:ExpressionStatement[3543-3558]"
    }, {
      "left" : "read(length);",
      "right" : "read(length);",
      "info" : "ExpressionStatement[3110-3123]:ExpressionStatement[3567-3580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3133-3679]:Block[3590-4136]"
    }, {
      "left" : "final byte[] expected = ArArchiveEntry.TRAILER.getBytes();",
      "right" : "final byte[] expected = ArArchiveEntry.TRAILER.getBytes();",
      "info" : "VariableDeclarationStatement[3147-3205]:VariableDeclarationStatement[3604-3662]"
    }, {
      "left" : "final byte[] realized = new byte[expected.length];",
      "right" : "final byte[] realized = new byte[expected.length];",
      "info" : "VariableDeclarationStatement[3218-3268]:VariableDeclarationStatement[3675-3725]"
    }, {
      "left" : "final int read = read(realized);",
      "right" : "final int read = read(realized);",
      "info" : "VariableDeclarationStatement[3282-3314]:VariableDeclarationStatement[3739-3771]"
    }, {
      "left" : "if (read != expected.length)",
      "right" : "if (read != expected.length)",
      "info" : "IfStatement[3327-3441]:IfStatement[3784-3898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3356-3441]:Block[3813-3898]"
    }, {
      "left" : "throw new IOException(\"failed to read entry header\");",
      "right" : "throw new IOException(\"failed to read entry header\");",
      "info" : "ThrowStatement[3374-3427]:ThrowStatement[3831-3884]"
    }, {
      "left" : "for (int i = 0; i < expected.length; i++)",
      "right" : "for (int i = 0; i < expected.length; i++)",
      "info" : "ForStatement[3454-3669]:ForStatement[3911-4126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3496-3669]:Block[3953-4126]"
    }, {
      "left" : "if (expected[i] != realized[i])",
      "right" : "if (expected[i] != realized[i])",
      "info" : "IfStatement[3514-3655]:IfStatement[3971-4112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3546-3655]:Block[4003-4112]"
    }, {
      "left" : "throw new IOException(\"invalid entry header. not read the content?\");",
      "right" : "throw new IOException(\"invalid entry header. not read the content?\");",
      "info" : "ThrowStatement[3568-3637]:ThrowStatement[4025-4094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3950-3990]:Block[4474-4514]"
    }, {
      "left" : "return getNextArEntry();",
      "right" : "return getNextArEntry();",
      "info" : "ReturnStatement[3960-3984]:ReturnStatement[4484-4508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4035-4129]:Block[4559-4682]"
    }, {
      "left" : "if (!closed)",
      "right" : "if (!closed)",
      "info" : "IfStatement[4045-4123]:IfStatement[4569-4647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4058-4123]:Block[4582-4647]"
    }, {
      "left" : "closed = true;",
      "right" : "closed = true;",
      "info" : "ExpressionStatement[4072-4086]:ExpressionStatement[4596-4610]"
    }, {
      "left" : "input.close();",
      "right" : "input.close();",
      "info" : "ExpressionStatement[4099-4113]:ExpressionStatement[4623-4637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4172-4274]:Block[4725-4857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4325-4369]:Block[4908-4952]"
    }, {
      "left" : "return read(b, 0, b.length);",
      "right" : "return read(b, 0, b.length);",
      "info" : "ReturnStatement[4335-4363]:ReturnStatement[4918-4946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4450-4599]:Block[5033-5477]"
    }, {
      "left" : "int toRead = len;",
      "right" : "int toRead = len;",
      "info" : "VariableDeclarationStatement[4460-4477]:VariableDeclarationStatement[5043-5060]"
    }, {
      "left" : "final int ret = this.input.read(b, off, toRead);",
      "right" : "final int ret = this.input.read(b, off, toRead);",
      "info" : "VariableDeclarationStatement[4486-4534]:VariableDeclarationStatement[5364-5412]"
    }, {
      "left" : "offset += (ret > 0 ? ret : 0);",
      "right" : "offset += (ret > 0 ? ret : 0);",
      "info" : "ExpressionStatement[4543-4573]:ExpressionStatement[5421-5451]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[4582-4593]:ReturnStatement[5460-5471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4665-5364]:Block[5543-6242]"
    }, {
      "left" : "if (length < 8)",
      "right" : "if (length < 8)",
      "info" : "IfStatement[4707-4760]:IfStatement[5585-5638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4723-4760]:Block[5601-5638]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4737-4750]:ReturnStatement[5615-5628]"
    }, {
      "left" : "if (signature[0] != 0x21)",
      "right" : "if (signature[0] != 0x21)",
      "info" : "IfStatement[4769-4832]:IfStatement[5647-5710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4795-4832]:Block[5673-5710]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4809-4822]:ReturnStatement[5687-5700]"
    }, {
      "left" : "if (signature[1] != 0x3c)",
      "right" : "if (signature[1] != 0x3c)",
      "info" : "IfStatement[4841-4904]:IfStatement[5719-5782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4867-4904]:Block[5745-5782]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4881-4894]:ReturnStatement[5759-5772]"
    }, {
      "left" : "if (signature[2] != 0x61)",
      "right" : "if (signature[2] != 0x61)",
      "info" : "IfStatement[4913-4976]:IfStatement[5791-5854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4939-4976]:Block[5817-5854]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4953-4966]:ReturnStatement[5831-5844]"
    }, {
      "left" : "if (signature[3] != 0x72)",
      "right" : "if (signature[3] != 0x72)",
      "info" : "IfStatement[4985-5048]:IfStatement[5863-5926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5011-5048]:Block[5889-5926]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5025-5038]:ReturnStatement[5903-5916]"
    }, {
      "left" : "if (signature[4] != 0x63)",
      "right" : "if (signature[4] != 0x63)",
      "info" : "IfStatement[5057-5120]:IfStatement[5935-5998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5083-5120]:Block[5961-5998]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5097-5110]:ReturnStatement[5975-5988]"
    }, {
      "left" : "if (signature[5] != 0x68)",
      "right" : "if (signature[5] != 0x68)",
      "info" : "IfStatement[5129-5192]:IfStatement[6007-6070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5155-5192]:Block[6033-6070]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5169-5182]:ReturnStatement[6047-6060]"
    }, {
      "left" : "if (signature[6] != 0x3e)",
      "right" : "if (signature[6] != 0x3e)",
      "info" : "IfStatement[5201-5264]:IfStatement[6079-6142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5227-5264]:Block[6105-6142]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5241-5254]:ReturnStatement[6119-6132]"
    }, {
      "left" : "if (signature[7] != 0x0a)",
      "right" : "if (signature[7] != 0x0a)",
      "info" : "IfStatement[5273-5336]:IfStatement[6151-6214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5299-5336]:Block[6177-6214]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5313-5326]:ReturnStatement[6191-6204]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5346-5358]:ReturnStatement[6224-6236]"
    } ]
  },
  "interFileMappings" : { }
}