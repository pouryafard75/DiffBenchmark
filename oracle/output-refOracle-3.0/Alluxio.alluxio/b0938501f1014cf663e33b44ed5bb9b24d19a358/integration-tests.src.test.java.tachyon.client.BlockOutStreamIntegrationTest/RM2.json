{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BlockOutStreamIntegrationTest",
      "right" : "BlockOutStreamIntegrationTest",
      "info" : "TypeDeclaration[1085-2695]:TypeDeclaration[1085-3562]"
    }, {
      "left" : "private static LocalTachyonCluster sLocalTachyonCluster = null;",
      "right" : "private static LocalTachyonCluster sLocalTachyonCluster = null;",
      "info" : "FieldDeclaration[1209-1272]:FieldDeclaration[1209-1272]"
    }, {
      "left" : "public static final void afterClass() throws Exception",
      "right" : "public static final void afterClass() throws Exception",
      "info" : "MethodDeclaration[1276-1383]:MethodDeclaration[1276-1383]"
    }, {
      "left" : "public static final void beforeClass() throws IOException",
      "right" : "public static final void beforeClass() throws IOException",
      "info" : "MethodDeclaration[1387-1578]:MethodDeclaration[1387-1578]"
    }, {
      "left" : "public void disableLocalWriteTest() throws IOException",
      "right" : "public void disableLocalWriteTest() throws IOException",
      "info" : "MethodDeclaration[1582-2139]:MethodDeclaration[2357-2650]"
    }, {
      "left" : "public void enableLocalWriteTest() throws IOException",
      "right" : "public void enableLocalWriteTest() throws IOException",
      "info" : "MethodDeclaration[2143-2693]:MethodDeclaration[2654-2940]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1162-1168]:Modifier[1162-1168]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1169-1174]:TYPE_DECLARATION_KIND[1169-1174]"
    }, {
      "left" : "BlockOutStreamIntegrationTest",
      "right" : "BlockOutStreamIntegrationTest",
      "info" : "SimpleName[1175-1204]:SimpleName[1175-1204]"
    }, {
      "left" : "@AfterClass",
      "right" : "@AfterClass",
      "info" : "MarkerAnnotation[1276-1287]:MarkerAnnotation[1276-1287]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1290-1296]:Modifier[1290-1296]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1297-1303]:Modifier[1297-1303]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1304-1309]:Modifier[1304-1309]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1310-1314]:PrimitiveType[1310-1314]"
    }, {
      "left" : "afterClass",
      "right" : "afterClass",
      "info" : "SimpleName[1315-1325]:SimpleName[1315-1325]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1335-1344]:SimpleType[1335-1344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1345-1383]:Block[1345-1383]"
    }, {
      "left" : "sLocalTachyonCluster.stop();",
      "right" : "sLocalTachyonCluster.stop();",
      "info" : "ExpressionStatement[1351-1379]:ExpressionStatement[1351-1379]"
    }, {
      "left" : "@BeforeClass",
      "right" : "@BeforeClass",
      "info" : "MarkerAnnotation[1387-1399]:MarkerAnnotation[1387-1399]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1402-1408]:Modifier[1402-1408]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1409-1415]:Modifier[1409-1415]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1416-1421]:Modifier[1416-1421]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1422-1426]:PrimitiveType[1422-1426]"
    }, {
      "left" : "beforeClass",
      "right" : "beforeClass",
      "info" : "SimpleName[1427-1438]:SimpleName[1427-1438]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[1448-1459]:SimpleType[1448-1459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1460-1578]:Block[1460-1578]"
    }, {
      "left" : "sLocalTachyonCluster = new LocalTachyonCluster(10000, 1000, Constants.GB);",
      "right" : "sLocalTachyonCluster = new LocalTachyonCluster(10000, 1000, Constants.GB);",
      "info" : "ExpressionStatement[1466-1540]:ExpressionStatement[1466-1540]"
    }, {
      "left" : "sLocalTachyonCluster.start();",
      "right" : "sLocalTachyonCluster.start();",
      "info" : "ExpressionStatement[1545-1574]:ExpressionStatement[1545-1574]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1666-1672]:Modifier[2441-2447]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1673-1677]:PrimitiveType[2448-2452]"
    }, {
      "left" : "disableLocalWriteTest",
      "right" : "disableLocalWriteTest",
      "info" : "SimpleName[1678-1699]:SimpleName[2453-2474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1721-2139]:Block[2496-2650]"
    }, {
      "left" : "TachyonConf conf = sLocalTachyonCluster.getWorkerTachyonConf();",
      "right" : "TachyonConf conf = sLocalTachyonCluster.getWorkerTachyonConf();",
      "info" : "VariableDeclarationStatement[1727-1790]:VariableDeclarationStatement[2020-2083]"
    }, {
      "left" : "conf.set(Constants.USER_ENABLE_LOCAL_WRITE, \"false\");",
      "right" : "conf.set(Constants.USER_ENABLE_LOCAL_WRITE, Boolean.toString(isLocalWrite));",
      "info" : "ExpressionStatement[1795-1848]:ExpressionStatement[2088-2164]"
    }, {
      "left" : "TachyonFS fs = TachyonFS.get(conf);",
      "right" : "TachyonFS fs = TachyonFS.get(conf);",
      "info" : "VariableDeclarationStatement[1853-1888]:VariableDeclarationStatement[2169-2204]"
    }, {
      "left" : "TachyonFile file = fs.getFile(fs.createFile(new TachyonURI(\"/file_no_local_write\")));",
      "right" : "TachyonFile file = fs.getFile(fs.createFile(new TachyonURI(filename)));",
      "info" : "VariableDeclarationStatement[1894-1979]:VariableDeclarationStatement[2210-2281]"
    }, {
      "left" : "BlockOutStream.get(file, WriteType.MUST_CACHE, 0, conf)",
      "right" : "BlockOutStream.get(file, WriteType.MUST_CACHE, 0, conf)",
      "info" : "MethodInvocation[2004-2059]:MethodInvocation[2293-2348]"
    }, {
      "left" : "Assert.assertTrue(os instanceof RemoteBlockOutStream);",
      "right" : "Assert.assertTrue(os instanceof RemoteBlockOutStream);",
      "info" : "ExpressionStatement[2065-2119]:ExpressionStatement[2576-2630]"
    }, {
      "left" : "os.close();",
      "right" : "os.close();",
      "info" : "ExpressionStatement[2124-2135]:ExpressionStatement[2635-2646]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2226-2232]:Modifier[2737-2743]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2233-2237]:PrimitiveType[2744-2748]"
    }, {
      "left" : "enableLocalWriteTest",
      "right" : "enableLocalWriteTest",
      "info" : "SimpleName[2238-2258]:SimpleName[2749-2769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2280-2693]:Block[2791-2940]"
    }, {
      "left" : "TachyonConf conf = sLocalTachyonCluster.getWorkerTachyonConf();",
      "right" : "TachyonConf conf = sLocalTachyonCluster.getWorkerTachyonConf();",
      "info" : "VariableDeclarationStatement[2286-2349]:VariableDeclarationStatement[2020-2083]"
    }, {
      "left" : "conf.set(Constants.USER_ENABLE_LOCAL_WRITE, \"true\");",
      "right" : "conf.set(Constants.USER_ENABLE_LOCAL_WRITE, Boolean.toString(isLocalWrite));",
      "info" : "ExpressionStatement[2354-2406]:ExpressionStatement[2088-2164]"
    }, {
      "left" : "TachyonFS fs = TachyonFS.get(conf);",
      "right" : "TachyonFS fs = TachyonFS.get(conf);",
      "info" : "VariableDeclarationStatement[2411-2446]:VariableDeclarationStatement[2169-2204]"
    }, {
      "left" : "TachyonFile file = fs.getFile(fs.createFile(new TachyonURI(\"/file_local_write\")));",
      "right" : "TachyonFile file = fs.getFile(fs.createFile(new TachyonURI(filename)));",
      "info" : "VariableDeclarationStatement[2452-2534]:VariableDeclarationStatement[2210-2281]"
    }, {
      "left" : "BlockOutStream.get(file, WriteType.MUST_CACHE, 0, conf)",
      "right" : "BlockOutStream.get(file, WriteType.MUST_CACHE, 0, conf)",
      "info" : "MethodInvocation[2559-2614]:MethodInvocation[2293-2348]"
    }, {
      "left" : "Assert.assertTrue(os instanceof LocalBlockOutStream);",
      "right" : "Assert.assertTrue(os instanceof LocalBlockOutStream);",
      "info" : "ExpressionStatement[2620-2673]:ExpressionStatement[2867-2920]"
    }, {
      "left" : "os.close();",
      "right" : "os.close();",
      "info" : "ExpressionStatement[2678-2689]:ExpressionStatement[2925-2936]"
    } ]
  },
  "interFileMappings" : { }
}