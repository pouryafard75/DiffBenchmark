{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "HelpFormatter",
      "right" : "HelpFormatter",
      "info" : "TypeDeclaration[1032-29997]:TypeDeclaration[1032-29989]"
    }, {
      "left" : "public static final int DEFAULT_WIDTH = 74;",
      "right" : "public static final int DEFAULT_WIDTH = 74;",
      "info" : "FieldDeclaration[1337-1429]:FieldDeclaration[1337-1429]"
    }, {
      "left" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "right" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "info" : "FieldDeclaration[1435-1532]:FieldDeclaration[1435-1532]"
    }, {
      "left" : "public static final int DEFAULT_DESC_PAD = 3;",
      "right" : "public static final int DEFAULT_DESC_PAD = 3;",
      "info" : "FieldDeclaration[1538-1689]:FieldDeclaration[1538-1689]"
    }, {
      "left" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "right" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "info" : "FieldDeclaration[1695-1828]:FieldDeclaration[1695-1828]"
    }, {
      "left" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "right" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "info" : "FieldDeclaration[1834-1926]:FieldDeclaration[1834-1926]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "right" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "info" : "FieldDeclaration[1932-2032]:FieldDeclaration[1932-2032]"
    }, {
      "left" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "right" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "info" : "FieldDeclaration[2038-2130]:FieldDeclaration[2038-2130]"
    }, {
      "left" : "public int defaultWidth = DEFAULT_WIDTH;",
      "right" : "public int defaultWidth = DEFAULT_WIDTH;",
      "info" : "FieldDeclaration[2218-2430]:FieldDeclaration[2218-2430]"
    }, {
      "left" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "right" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "info" : "FieldDeclaration[2436-2672]:FieldDeclaration[2436-2672]"
    }, {
      "left" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "right" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "info" : "FieldDeclaration[2678-2954]:FieldDeclaration[2678-2954]"
    }, {
      "left" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "right" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "info" : "FieldDeclaration[2960-3228]:FieldDeclaration[2960-3228]"
    }, {
      "left" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "right" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "info" : "FieldDeclaration[3234-3466]:FieldDeclaration[3234-3466]"
    }, {
      "left" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "right" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "info" : "FieldDeclaration[3472-3690]:FieldDeclaration[3472-3690]"
    }, {
      "left" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "right" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "info" : "FieldDeclaration[3696-3927]:FieldDeclaration[3696-3927]"
    }, {
      "left" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "right" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "info" : "FieldDeclaration[3933-4150]:FieldDeclaration[3933-4150]"
    }, {
      "left" : "protected Comparator optionComparator = new OptionComparator();",
      "right" : "protected Comparator optionComparator = new OptionComparator();",
      "info" : "FieldDeclaration[4156-4387]:FieldDeclaration[4156-4387]"
    }, {
      "left" : "public void setWidth(int width)",
      "right" : "public void setWidth(int width)",
      "info" : "MethodDeclaration[4393-4564]:MethodDeclaration[4393-4564]"
    }, {
      "left" : "public int getWidth()",
      "right" : "public int getWidth()",
      "info" : "MethodDeclaration[4570-4710]:MethodDeclaration[4570-4710]"
    }, {
      "left" : "public void setLeftPadding(int padding)",
      "right" : "public void setLeftPadding(int padding)",
      "info" : "MethodDeclaration[4716-4913]:MethodDeclaration[4716-4913]"
    }, {
      "left" : "public int getLeftPadding()",
      "right" : "public int getLeftPadding()",
      "info" : "MethodDeclaration[4919-5079]:MethodDeclaration[4919-5079]"
    }, {
      "left" : "public void setDescPadding(int padding)",
      "right" : "public void setDescPadding(int padding)",
      "info" : "MethodDeclaration[5085-5282]:MethodDeclaration[5085-5282]"
    }, {
      "left" : "public int getDescPadding()",
      "right" : "public int getDescPadding()",
      "info" : "MethodDeclaration[5288-5448]:MethodDeclaration[5288-5448]"
    }, {
      "left" : "public void setSyntaxPrefix(String prefix)",
      "right" : "public void setSyntaxPrefix(String prefix)",
      "info" : "MethodDeclaration[5454-5659]:MethodDeclaration[5454-5659]"
    }, {
      "left" : "public String getSyntaxPrefix()",
      "right" : "public String getSyntaxPrefix()",
      "info" : "MethodDeclaration[5665-5836]:MethodDeclaration[5665-5836]"
    }, {
      "left" : "public void setNewLine(String newline)",
      "right" : "public void setNewLine(String newline)",
      "info" : "MethodDeclaration[5842-6030]:MethodDeclaration[5842-6030]"
    }, {
      "left" : "public String getNewLine()",
      "right" : "public String getNewLine()",
      "info" : "MethodDeclaration[6036-6187]:MethodDeclaration[6036-6187]"
    }, {
      "left" : "public void setOptPrefix(String prefix)",
      "right" : "public void setOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6193-6386]:MethodDeclaration[6193-6386]"
    }, {
      "left" : "public String getOptPrefix()",
      "right" : "public String getOptPrefix()",
      "info" : "MethodDeclaration[6392-6551]:MethodDeclaration[6392-6551]"
    }, {
      "left" : "public void setLongOptPrefix(String prefix)",
      "right" : "public void setLongOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6557-6766]:MethodDeclaration[6557-6766]"
    }, {
      "left" : "public String getLongOptPrefix()",
      "right" : "public String getLongOptPrefix()",
      "info" : "MethodDeclaration[6772-6947]:MethodDeclaration[6772-6947]"
    }, {
      "left" : "public void setArgName(String name)",
      "right" : "public void setArgName(String name)",
      "info" : "MethodDeclaration[6953-7132]:MethodDeclaration[6953-7132]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[7138-7289]:MethodDeclaration[7138-7289]"
    }, {
      "left" : "public Comparator getOptionComparator()",
      "right" : "public Comparator getOptionComparator()",
      "info" : "MethodDeclaration[7295-7547]:MethodDeclaration[7295-7547]"
    }, {
      "left" : "public void setOptionComparator(Comparator comparator)",
      "right" : "public void setOptionComparator(Comparator comparator)",
      "info" : "MethodDeclaration[7553-7994]:MethodDeclaration[7553-7994]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options)",
      "info" : "MethodDeclaration[8000-8427]:MethodDeclaration[8000-8427]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "info" : "MethodDeclaration[8433-8975]:MethodDeclaration[8433-8975]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[8981-9565]:MethodDeclaration[8981-9565]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[9571-10284]:MethodDeclaration[9571-10284]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[10290-10966]:MethodDeclaration[10290-10966]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[10972-11900]:MethodDeclaration[10972-11900]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "info" : "MethodDeclaration[11906-12981]:MethodDeclaration[11906-12981]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[12988-14747]:MethodDeclaration[12988-14747]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "right" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "info" : "MethodDeclaration[14753-16849]:MethodDeclaration[14753-16849]"
    }, {
      "left" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "right" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "info" : "MethodDeclaration[16855-17954]:MethodDeclaration[16855-17954]"
    }, {
      "left" : "private static void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "right" : "private static void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "info" : "MethodDeclaration[17960-18898]:MethodDeclaration[17960-18898]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "right" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "info" : "MethodDeclaration[18904-19445]:MethodDeclaration[18904-19445]"
    }, {
      "left" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "right" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "info" : "MethodDeclaration[19451-20270]:MethodDeclaration[19451-20270]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "info" : "MethodDeclaration[20276-20659]:MethodDeclaration[20276-20659]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[20665-21262]:MethodDeclaration[20665-21262]"
    }, {
      "left" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "right" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "info" : "MethodDeclaration[21350-24421]:MethodDeclaration[21350-24421]"
    }, {
      "left" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "right" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[24427-26047]:MethodDeclaration[24427-26039]"
    }, {
      "left" : "protected int findWrapPos(String text, int width, int startPos)",
      "right" : "protected int findWrapPos(String text, int width, int startPos)",
      "info" : "MethodDeclaration[26053-27871]:MethodDeclaration[26045-27863]"
    }, {
      "left" : "protected String createPadding(int len)",
      "right" : "protected String createPadding(int len)",
      "info" : "MethodDeclaration[27877-28289]:MethodDeclaration[27869-28281]"
    }, {
      "left" : "protected String rtrim(String s)",
      "right" : "protected String rtrim(String s)",
      "info" : "MethodDeclaration[28295-28823]:MethodDeclaration[28287-28815]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "TypeDeclaration[29069-29995]:TypeDeclaration[29061-29987]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[29257-29989]:MethodDeclaration[29249-29981]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4522-4564]:Block[4522-4564]"
    }, {
      "left" : "this.defaultWidth = width;",
      "right" : "this.defaultWidth = width;",
      "info" : "ExpressionStatement[4532-4558]:ExpressionStatement[4532-4558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4674-4710]:Block[4674-4710]"
    }, {
      "left" : "return defaultWidth;",
      "right" : "return defaultWidth;",
      "info" : "ReturnStatement[4684-4704]:ReturnStatement[4684-4704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4867-4913]:Block[4867-4913]"
    }, {
      "left" : "this.defaultLeftPad = padding;",
      "right" : "this.defaultLeftPad = padding;",
      "info" : "ExpressionStatement[4877-4907]:ExpressionStatement[4877-4907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5041-5079]:Block[5041-5079]"
    }, {
      "left" : "return defaultLeftPad;",
      "right" : "return defaultLeftPad;",
      "info" : "ReturnStatement[5051-5073]:ReturnStatement[5051-5073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5236-5282]:Block[5236-5282]"
    }, {
      "left" : "this.defaultDescPad = padding;",
      "right" : "this.defaultDescPad = padding;",
      "info" : "ExpressionStatement[5246-5276]:ExpressionStatement[5246-5276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5410-5448]:Block[5410-5448]"
    }, {
      "left" : "return defaultDescPad;",
      "right" : "return defaultDescPad;",
      "info" : "ReturnStatement[5420-5442]:ReturnStatement[5420-5442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5609-5659]:Block[5609-5659]"
    }, {
      "left" : "this.defaultSyntaxPrefix = prefix;",
      "right" : "this.defaultSyntaxPrefix = prefix;",
      "info" : "ExpressionStatement[5619-5653]:ExpressionStatement[5619-5653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5793-5836]:Block[5793-5836]"
    }, {
      "left" : "return defaultSyntaxPrefix;",
      "right" : "return defaultSyntaxPrefix;",
      "info" : "ReturnStatement[5803-5830]:ReturnStatement[5803-5830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5984-6030]:Block[5984-6030]"
    }, {
      "left" : "this.defaultNewLine = newline;",
      "right" : "this.defaultNewLine = newline;",
      "info" : "ExpressionStatement[5994-6024]:ExpressionStatement[5994-6024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6149-6187]:Block[6149-6187]"
    }, {
      "left" : "return defaultNewLine;",
      "right" : "return defaultNewLine;",
      "info" : "ReturnStatement[6159-6181]:ReturnStatement[6159-6181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6339-6386]:Block[6339-6386]"
    }, {
      "left" : "this.defaultOptPrefix = prefix;",
      "right" : "this.defaultOptPrefix = prefix;",
      "info" : "ExpressionStatement[6349-6380]:ExpressionStatement[6349-6380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6511-6551]:Block[6511-6551]"
    }, {
      "left" : "return defaultOptPrefix;",
      "right" : "return defaultOptPrefix;",
      "info" : "ReturnStatement[6521-6545]:ReturnStatement[6521-6545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6715-6766]:Block[6715-6766]"
    }, {
      "left" : "this.defaultLongOptPrefix = prefix;",
      "right" : "this.defaultLongOptPrefix = prefix;",
      "info" : "ExpressionStatement[6725-6760]:ExpressionStatement[6725-6760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6903-6947]:Block[6903-6947]"
    }, {
      "left" : "return defaultLongOptPrefix;",
      "right" : "return defaultLongOptPrefix;",
      "info" : "ReturnStatement[6913-6941]:ReturnStatement[6913-6941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7089-7132]:Block[7089-7132]"
    }, {
      "left" : "this.defaultArgName = name;",
      "right" : "this.defaultArgName = name;",
      "info" : "ExpressionStatement[7099-7126]:ExpressionStatement[7099-7126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7251-7289]:Block[7251-7289]"
    }, {
      "left" : "return defaultArgName;",
      "right" : "return defaultArgName;",
      "info" : "ReturnStatement[7261-7283]:ReturnStatement[7261-7283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7507-7547]:Block[7507-7547]"
    }, {
      "left" : "return optionComparator;",
      "right" : "return optionComparator;",
      "info" : "ReturnStatement[7517-7541]:ReturnStatement[7517-7541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7794-7994]:Block[7794-7994]"
    }, {
      "left" : "if (comparator == null)",
      "right" : "if (comparator == null)",
      "info" : "IfStatement[7804-7988]:IfStatement[7804-7988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7836-7907]:Block[7836-7907]"
    }, {
      "left" : "this.optionComparator = new OptionComparator();",
      "right" : "this.optionComparator = new OptionComparator();",
      "info" : "ExpressionStatement[7850-7897]:ExpressionStatement[7850-7897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7929-7988]:Block[7929-7988]"
    }, {
      "left" : "this.optionComparator = comparator;",
      "right" : "this.optionComparator = comparator;",
      "info" : "ExpressionStatement[7943-7978]:ExpressionStatement[7943-7978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8344-8427]:Block[8344-8427]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "info" : "ExpressionStatement[8354-8421]:ExpressionStatement[8354-8421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8888-8975]:Block[8888-8975]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "info" : "ExpressionStatement[8898-8969]:ExpressionStatement[8898-8969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9492-9565]:Block[9492-9565]"
    }, {
      "left" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[9502-9559]:ExpressionStatement[9502-9559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10193-10284]:Block[10193-10284]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "info" : "ExpressionStatement[10203-10278]:ExpressionStatement[10203-10278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10886-10966]:Block[10886-10966]"
    }, {
      "left" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[10896-10960]:ExpressionStatement[10896-10960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11705-11900]:Block[11705-11900]"
    }, {
      "left" : "PrintWriter pw = new PrintWriter(System.out);",
      "right" : "PrintWriter pw = new PrintWriter(System.out);",
      "info" : "VariableDeclarationStatement[11715-11760]:VariableDeclarationStatement[11715-11760]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "info" : "ExpressionStatement[11770-11874]:ExpressionStatement[11770-11874]"
    }, {
      "left" : "pw.flush();",
      "right" : "pw.flush();",
      "info" : "ExpressionStatement[11883-11894]:ExpressionStatement[11883-11894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12879-12981]:Block[12879-12981]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "info" : "ExpressionStatement[12889-12975]:ExpressionStatement[12889-12975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14069-14747]:Block[14069-14747]"
    }, {
      "left" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "right" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "info" : "IfStatement[14079-14238]:IfStatement[14079-14238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14149-14238]:Block[14149-14238]"
    }, {
      "left" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "right" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "info" : "ThrowStatement[14163-14228]:ThrowStatement[14163-14228]"
    }, {
      "left" : "if (autoUsage)",
      "right" : "if (autoUsage)",
      "info" : "IfStatement[14248-14424]:IfStatement[14248-14424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14271-14341]:Block[14271-14341]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax, options);",
      "right" : "printUsage(pw, width, cmdLineSyntax, options);",
      "info" : "ExpressionStatement[14285-14331]:ExpressionStatement[14285-14331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14363-14424]:Block[14363-14424]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax);",
      "right" : "printUsage(pw, width, cmdLineSyntax);",
      "info" : "ExpressionStatement[14377-14414]:ExpressionStatement[14377-14414]"
    }, {
      "left" : "if ((header != null) && (header.trim().length() > 0))",
      "right" : "if ((header != null) && (header.trim().length() > 0))",
      "info" : "IfStatement[14434-14552]:IfStatement[14434-14552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14496-14552]:Block[14496-14552]"
    }, {
      "left" : "printWrapped(pw, width, header);",
      "right" : "printWrapped(pw, width, header);",
      "info" : "ExpressionStatement[14510-14542]:ExpressionStatement[14510-14542]"
    }, {
      "left" : "printOptions(pw, width, options, leftPad, descPad);",
      "right" : "printOptions(pw, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[14562-14613]:ExpressionStatement[14562-14613]"
    }, {
      "left" : "if ((footer != null) && (footer.trim().length() > 0))",
      "right" : "if ((footer != null) && (footer.trim().length() > 0))",
      "info" : "IfStatement[14623-14741]:IfStatement[14623-14741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14685-14741]:Block[14685-14741]"
    }, {
      "left" : "printWrapped(pw, width, footer);",
      "right" : "printWrapped(pw, width, footer);",
      "info" : "ExpressionStatement[14699-14731]:ExpressionStatement[14699-14731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15152-16849]:Block[15152-16849]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "right" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "info" : "VariableDeclarationStatement[15202-15284]:VariableDeclarationStatement[15202-15284]"
    }, {
      "left" : "final Collection processedGroups = new ArrayList();",
      "right" : "final Collection processedGroups = new ArrayList();",
      "info" : "VariableDeclarationStatement[15347-15398]:VariableDeclarationStatement[15347-15398]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[15433-15447]:VariableDeclarationStatement[15433-15447]"
    }, {
      "left" : "List optList = new ArrayList(options.getOptions());",
      "right" : "List optList = new ArrayList(options.getOptions());",
      "info" : "VariableDeclarationStatement[15457-15508]:VariableDeclarationStatement[15457-15508]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[15517-15566]:ExpressionStatement[15517-15566]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[15611-16728]:ForStatement[15611-16728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15671-16728]:Block[15671-16728]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[15720-15747]:ExpressionStatement[15720-15747]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[15822-15873]:VariableDeclarationStatement[15822-15873]"
    }, {
      "left" : "if (group != null)",
      "right" : "if (group != null)",
      "info" : "IfStatement[15936-16626]:IfStatement[15936-16626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15967-16456]:Block[15967-16456]"
    }, {
      "left" : "if (!processedGroups.contains(group))",
      "right" : "if (!processedGroups.contains(group))",
      "info" : "IfStatement[16052-16330]:IfStatement[16052-16330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16106-16330]:Block[16106-16330]"
    }, {
      "left" : "processedGroups.add(group);",
      "right" : "processedGroups.add(group);",
      "info" : "ExpressionStatement[16187-16214]:ExpressionStatement[16187-16214]"
    }, {
      "left" : "appendOptionGroup(buff, group);",
      "right" : "appendOptionGroup(buff, group);",
      "info" : "ExpressionStatement[16281-16312]:ExpressionStatement[16281-16312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16546-16626]:Block[16546-16626]"
    }, {
      "left" : "appendOption(buff, option, option.isRequired());",
      "right" : "appendOption(buff, option, option.isRequired());",
      "info" : "ExpressionStatement[16564-16612]:ExpressionStatement[16564-16612]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[16640-16718]:IfStatement[16640-16718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16669-16718]:Block[16669-16718]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[16687-16704]:ExpressionStatement[16687-16704]"
    }, {
      "left" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "right" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "info" : "ExpressionStatement[16768-16843]:ExpressionStatement[16768-16843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17307-17954]:Block[17307-17954]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[17317-17391]:IfStatement[17317-17391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17350-17391]:Block[17350-17391]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[17364-17381]:ExpressionStatement[17364-17381]"
    }, {
      "left" : "List optList = new ArrayList(group.getOptions());",
      "right" : "List optList = new ArrayList(group.getOptions());",
      "info" : "VariableDeclarationStatement[17401-17450]:VariableDeclarationStatement[17401-17450]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[17459-17508]:ExpressionStatement[17459-17508]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[17563-17864]:ForStatement[17563-17864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17623-17864]:Block[17623-17864]"
    }, {
      "left" : "appendOption(buff, (Option) i.next(), true);",
      "right" : "appendOption(buff, (Option) i.next(), true);",
      "info" : "ExpressionStatement[17716-17760]:ExpressionStatement[17716-17760]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[17774-17854]:IfStatement[17774-17854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17803-17854]:Block[17803-17854]"
    }, {
      "left" : "buff.append(\" | \");",
      "right" : "buff.append(\" | \");",
      "info" : "ExpressionStatement[17821-17840]:ExpressionStatement[17821-17840]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[17874-17948]:IfStatement[17874-17948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17907-17948]:Block[17907-17948]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[17921-17938]:ExpressionStatement[17921-17938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18309-18898]:Block[18309-18898]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[18319-18383]:IfStatement[18319-18383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18342-18383]:Block[18342-18383]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[18356-18373]:ExpressionStatement[18356-18373]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[18393-18587]:IfStatement[18393-18587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18430-18495]:Block[18430-18495]"
    }, {
      "left" : "buff.append(\"-\").append(option.getOpt());",
      "right" : "buff.append(\"-\").append(option.getOpt());",
      "info" : "ExpressionStatement[18444-18485]:ExpressionStatement[18444-18485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18517-18587]:Block[18517-18587]"
    }, {
      "left" : "buff.append(\"--\").append(option.getLongOpt());",
      "right" : "buff.append(\"--\").append(option.getLongOpt());",
      "info" : "ExpressionStatement[18531-18577]:ExpressionStatement[18531-18577]"
    }, {
      "left" : "if (option.hasArg() && option.hasArgName())",
      "right" : "if (option.hasArg() && option.hasArgName())",
      "info" : "IfStatement[18634-18768]:IfStatement[18634-18768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18686-18768]:Block[18686-18768]"
    }, {
      "left" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[18700-18758]:ExpressionStatement[18700-18758]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[18828-18892]:IfStatement[18828-18892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18851-18892]:Block[18851-18892]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[18865-18882]:ExpressionStatement[18865-18882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19275-19445]:Block[19275-19445]"
    }, {
      "left" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "right" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "info" : "VariableDeclarationStatement[19285-19329]:VariableDeclarationStatement[19285-19329]"
    }, {
      "left" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "right" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "info" : "ExpressionStatement[19339-19439]:ExpressionStatement[19339-19439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20120-20270]:Block[20120-20270]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[20130-20167]:VariableDeclarationStatement[20130-20167]"
    }, {
      "left" : "renderOptions(sb, width, options, leftPad, descPad);",
      "right" : "renderOptions(sb, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[20177-20229]:ExpressionStatement[20177-20229]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[20238-20264]:ExpressionStatement[20238-20264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20610-20659]:Block[20610-20659]"
    }, {
      "left" : "printWrapped(pw, width, 0, text);",
      "right" : "printWrapped(pw, width, 0, text);",
      "info" : "ExpressionStatement[20620-20653]:ExpressionStatement[20620-20653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21099-21262]:Block[21099-21262]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(text.length());",
      "right" : "StringBuffer sb = new StringBuffer(text.length());",
      "info" : "VariableDeclarationStatement[21109-21159]:VariableDeclarationStatement[21109-21159]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "info" : "ExpressionStatement[21169-21221]:ExpressionStatement[21169-21221]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[21230-21256]:ExpressionStatement[21230-21256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22034-24421]:Block[22034-24421]"
    }, {
      "left" : "final String lpad = createPadding(leftPad);",
      "right" : "final String lpad = createPadding(leftPad);",
      "info" : "VariableDeclarationStatement[22044-22087]:VariableDeclarationStatement[22044-22087]"
    }, {
      "left" : "final String dpad = createPadding(descPad);",
      "right" : "final String dpad = createPadding(descPad);",
      "info" : "VariableDeclarationStatement[22096-22139]:VariableDeclarationStatement[22096-22139]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[22382-22394]:VariableDeclarationStatement[22382-22394]"
    }, {
      "left" : "StringBuffer optBuf;",
      "right" : "StringBuffer optBuf;",
      "info" : "VariableDeclarationStatement[22403-22423]:VariableDeclarationStatement[22403-22423]"
    }, {
      "left" : "List prefixList = new ArrayList();",
      "right" : "List prefixList = new ArrayList();",
      "info" : "VariableDeclarationStatement[22432-22466]:VariableDeclarationStatement[22432-22466]"
    }, {
      "left" : "List optList = options.helpOptions();",
      "right" : "List optList = options.helpOptions();",
      "info" : "VariableDeclarationStatement[22476-22513]:VariableDeclarationStatement[22476-22513]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[22523-22572]:ExpressionStatement[22523-22572]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[22582-23641]:ForStatement[22582-23641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22642-23641]:Block[22642-23641]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[22656-22690]:VariableDeclarationStatement[22656-22690]"
    }, {
      "left" : "optBuf = new StringBuffer(8);",
      "right" : "optBuf = new StringBuffer(8);",
      "info" : "ExpressionStatement[22703-22732]:ExpressionStatement[22703-22732]"
    }, {
      "left" : "if (option.getOpt() == null)",
      "right" : "if (option.getOpt() == null)",
      "info" : "IfStatement[22746-23210]:IfStatement[22746-23210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22787-22904]:Block[22787-22904]"
    }, {
      "left" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[22805-22890]:ExpressionStatement[22805-22890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22934-23210]:Block[22934-23210]"
    }, {
      "left" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "right" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "info" : "ExpressionStatement[22952-23021]:ExpressionStatement[22952-23021]"
    }, {
      "left" : "if (option.hasLongOpt())",
      "right" : "if (option.hasLongOpt())",
      "info" : "IfStatement[23039-23196]:IfStatement[23039-23196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23080-23196]:Block[23080-23196]"
    }, {
      "left" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[23102-23178]:ExpressionStatement[23102-23178]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[23224-23527]:IfStatement[23224-23527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23257-23527]:Block[23257-23527]"
    }, {
      "left" : "if (option.hasArgName())",
      "right" : "if (option.hasArgName())",
      "info" : "IfStatement[23275-23513]:IfStatement[23275-23513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23316-23416]:Block[23316-23416]"
    }, {
      "left" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[23338-23398]:ExpressionStatement[23338-23398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23454-23513]:Block[23454-23513]"
    }, {
      "left" : "optBuf.append(' ');",
      "right" : "optBuf.append(' ');",
      "info" : "ExpressionStatement[23476-23495]:ExpressionStatement[23476-23495]"
    }, {
      "left" : "prefixList.add(optBuf);",
      "right" : "prefixList.add(optBuf);",
      "info" : "ExpressionStatement[23541-23564]:ExpressionStatement[23541-23564]"
    }, {
      "left" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "right" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "info" : "ExpressionStatement[23577-23631]:ExpressionStatement[23577-23631]"
    }, {
      "left" : "int x = 0;",
      "right" : "int x = 0;",
      "info" : "VariableDeclarationStatement[23651-23661]:VariableDeclarationStatement[23651-23661]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[23671-24395]:ForStatement[23671-24395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23731-24395]:Block[23731-24395]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[23745-23779]:VariableDeclarationStatement[23745-23779]"
    }, {
      "left" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "right" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "info" : "ExpressionStatement[23792-23850]:ExpressionStatement[23792-23850]"
    }, {
      "left" : "if (optBuf.length() < max)",
      "right" : "if (optBuf.length() < max)",
      "info" : "IfStatement[23864-23987]:IfStatement[23864-23987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23903-23987]:Block[23903-23987]"
    }, {
      "left" : "optBuf.append(createPadding(max - optBuf.length()));",
      "right" : "optBuf.append(createPadding(max - optBuf.length()));",
      "info" : "ExpressionStatement[23921-23973]:ExpressionStatement[23921-23973]"
    }, {
      "left" : "optBuf.append(dpad);",
      "right" : "optBuf.append(dpad);",
      "info" : "ExpressionStatement[24001-24021]:ExpressionStatement[24001-24021]"
    }, {
      "left" : "int nextLineTabStop = max + descPad;",
      "right" : "int nextLineTabStop = max + descPad;",
      "info" : "VariableDeclarationStatement[24035-24071]:VariableDeclarationStatement[24035-24071]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[24085-24205]:IfStatement[24085-24205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24134-24205]:Block[24134-24205]"
    }, {
      "left" : "optBuf.append(option.getDescription());",
      "right" : "optBuf.append(option.getDescription());",
      "info" : "ExpressionStatement[24152-24191]:ExpressionStatement[24152-24191]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "info" : "ExpressionStatement[24219-24284]:ExpressionStatement[24219-24284]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[24298-24385]:IfStatement[24298-24385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24327-24385]:Block[24327-24385]"
    }, {
      "left" : "sb.append(defaultNewLine);",
      "right" : "sb.append(defaultNewLine);",
      "info" : "ExpressionStatement[24345-24371]:ExpressionStatement[24345-24371]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[24405-24415]:ReturnStatement[24405-24415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25024-26047]:Block[25024-26039]"
    }, {
      "left" : "int pos = findWrapPos(text, width, 0);",
      "right" : "int pos = findWrapPos(text, width, 0);",
      "info" : "VariableDeclarationStatement[25034-25072]:VariableDeclarationStatement[25034-25072]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[25082-25176]:IfStatement[25082-25176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25105-25176]:Block[25105-25176]"
    }, {
      "left" : "sb.append(rtrim(text));",
      "right" : "sb.append(rtrim(text));",
      "info" : "ExpressionStatement[25119-25142]:ExpressionStatement[25119-25142]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25156-25166]:ReturnStatement[25156-25166]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[25185-25249]:ExpressionStatement[25185-25249]"
    }, {
      "left" : "if (nextLineTabStop >= width)",
      "right" : "if (nextLineTabStop >= width)",
      "info" : "IfStatement[25259-25394]:IfStatement[25259-25386]"
    }, {
      "left" : "final String padding = createPadding(nextLineTabStop);",
      "right" : "final String padding = createPadding(nextLineTabStop);",
      "info" : "VariableDeclarationStatement[25500-25554]:VariableDeclarationStatement[25492-25546]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[25564-26041]:WhileStatement[25556-26033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25585-26041]:Block[25577-26033]"
    }, {
      "left" : "text = padding + text.substring(pos).trim();",
      "right" : "text = padding + text.substring(pos).trim();",
      "info" : "ExpressionStatement[25599-25643]:ExpressionStatement[25591-25635]"
    }, {
      "left" : "pos = findWrapPos(text, width, 0);",
      "right" : "pos = findWrapPos(text, width, 0);",
      "info" : "ExpressionStatement[25656-25690]:ExpressionStatement[25648-25682]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[25704-25807]:IfStatement[25696-25799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25731-25807]:Block[25723-25799]"
    }, {
      "left" : "sb.append(text);",
      "right" : "sb.append(text);",
      "info" : "ExpressionStatement[25749-25765]:ExpressionStatement[25741-25757]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25783-25793]:ReturnStatement[25775-25785]"
    }, {
      "left" : "if ( (text.length() > width) && (pos == nextLineTabStop - 1))",
      "right" : "if ( (text.length() > width) && (pos == nextLineTabStop - 1))",
      "info" : "IfStatement[25833-25953]:IfStatement[25825-25945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25909-25953]:Block[25901-25945]"
    }, {
      "left" : "pos = width;",
      "right" : "pos = width;",
      "info" : "ExpressionStatement[25927-25939]:ExpressionStatement[25919-25931]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[25967-26031]:ExpressionStatement[25959-26023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26734-27871]:Block[26726-27863]"
    }, {
      "left" : "int pos = -1;",
      "right" : "int pos = -1;",
      "info" : "VariableDeclarationStatement[26744-26757]:VariableDeclarationStatement[26736-26749]"
    }, {
      "left" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "right" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "info" : "IfStatement[26841-27129]:IfStatement[26833-27121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26995-27034]:Block[26987-27026]"
    }, {
      "left" : "return pos + 1;",
      "right" : "return pos + 1;",
      "info" : "ReturnStatement[27009-27024]:ReturnStatement[27001-27016]"
    }, {
      "left" : "if (startPos + width >= text.length())",
      "right" : "if (startPos + width >= text.length())",
      "info" : "IfStatement[27048-27129]:IfStatement[27040-27121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27095-27129]:Block[27087-27121]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[27109-27119]:ReturnStatement[27101-27111]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[27212-27235]:ExpressionStatement[27204-27227]"
    }, {
      "left" : "char c;",
      "right" : "char c;",
      "info" : "VariableDeclarationStatement[27245-27252]:VariableDeclarationStatement[27237-27244]"
    }, {
      "left" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[27262-27407]:WhileStatement[27254-27399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27377-27407]:Block[27369-27399]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[27391-27397]:ExpressionStatement[27383-27389]"
    }, {
      "left" : "if (pos > startPos)",
      "right" : "if (pos > startPos)",
      "info" : "IfStatement[27457-27520]:IfStatement[27449-27512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27485-27520]:Block[27477-27512]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[27499-27510]:ReturnStatement[27491-27502]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[27630-27653]:ExpressionStatement[27622-27645]"
    }, {
      "left" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[27663-27812]:WhileStatement[27655-27804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27782-27812]:Block[27774-27804]"
    }, {
      "left" : "++pos;",
      "right" : "++pos;",
      "info" : "ExpressionStatement[27796-27802]:ExpressionStatement[27788-27794]"
    }, {
      "left" : "return (pos == text.length()) ? (-1) : pos;",
      "right" : "return (pos == text.length()) ? (-1) : pos;",
      "info" : "ReturnStatement[27822-27865]:ReturnStatement[27814-27857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28115-28289]:Block[28107-28281]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(len);",
      "right" : "StringBuffer sb = new StringBuffer(len);",
      "info" : "VariableDeclarationStatement[28125-28165]:VariableDeclarationStatement[28117-28157]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[28175-28252]:ForStatement[28167-28244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28213-28252]:Block[28205-28244]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28227-28242]:ExpressionStatement[28219-28234]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[28262-28283]:ReturnStatement[28254-28275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28549-28823]:Block[28541-28815]"
    }, {
      "left" : "if ((s == null) || (s.length() == 0))",
      "right" : "if ((s == null) || (s.length() == 0))",
      "info" : "IfStatement[28559-28638]:IfStatement[28551-28630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28605-28638]:Block[28597-28630]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[28619-28628]:ReturnStatement[28611-28620]"
    }, {
      "left" : "int pos = s.length();",
      "right" : "int pos = s.length();",
      "info" : "VariableDeclarationStatement[28648-28669]:VariableDeclarationStatement[28640-28661]"
    }, {
      "left" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "right" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "info" : "WhileStatement[28679-28780]:WhileStatement[28671-28772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28750-28780]:Block[28742-28772]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[28764-28770]:ExpressionStatement[28756-28762]"
    }, {
      "left" : "return s.substring(0, pos);",
      "right" : "return s.substring(0, pos);",
      "info" : "ReturnStatement[28790-28817]:ReturnStatement[28782-28809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29830-29989]:Block[29822-29981]"
    }, {
      "left" : "Option opt1 = (Option) o1;",
      "right" : "Option opt1 = (Option) o1;",
      "info" : "VariableDeclarationStatement[29844-29870]:VariableDeclarationStatement[29836-29862]"
    }, {
      "left" : "Option opt2 = (Option) o2;",
      "right" : "Option opt2 = (Option) o2;",
      "info" : "VariableDeclarationStatement[29883-29909]:VariableDeclarationStatement[29875-29901]"
    }, {
      "left" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "right" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "info" : "ReturnStatement[29923-29979]:ReturnStatement[29915-29971]"
    } ]
  },
  "interFileMappings" : { }
}