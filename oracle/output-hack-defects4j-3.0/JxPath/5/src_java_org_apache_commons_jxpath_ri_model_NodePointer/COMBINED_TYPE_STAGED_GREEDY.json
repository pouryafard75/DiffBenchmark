{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "TypeDeclaration[1456-22609]:TypeDeclaration[1456-22449]"
    }, {
      "left" : "public static final int WHOLE_COLLECTION = Integer.MIN_VALUE;",
      "right" : "public static final int WHOLE_COLLECTION = Integer.MIN_VALUE;",
      "info" : "FieldDeclaration[1861-1922]:FieldDeclaration[1861-1922]"
    }, {
      "left" : "protected int index = WHOLE_COLLECTION;",
      "right" : "protected int index = WHOLE_COLLECTION;",
      "info" : "FieldDeclaration[1927-1966]:FieldDeclaration[1927-1966]"
    }, {
      "left" : "public static final String UNKNOWN_NAMESPACE = \"<<unknown namespace>>\";",
      "right" : "public static final String UNKNOWN_NAMESPACE = \"<<unknown namespace>>\";",
      "info" : "FieldDeclaration[1971-2042]:FieldDeclaration[1971-2042]"
    }, {
      "left" : "private boolean attribute = false;",
      "right" : "private boolean attribute = false;",
      "info" : "FieldDeclaration[2047-2081]:FieldDeclaration[2047-2081]"
    }, {
      "left" : "private transient Object rootNode;",
      "right" : "private transient Object rootNode;",
      "info" : "FieldDeclaration[2086-2120]:FieldDeclaration[2086-2120]"
    }, {
      "left" : "private NamespaceResolver namespaceResolver;",
      "right" : "private NamespaceResolver namespaceResolver;",
      "info" : "FieldDeclaration[2125-2169]:FieldDeclaration[2125-2169]"
    }, {
      "left" : "public static NodePointer newNodePointer(\n        QName name,\n        Object bean,\n        Locale locale)",
      "right" : "public static NodePointer newNodePointer(\n        QName name,\n        Object bean,\n        Locale locale)",
      "info" : "MethodDeclaration[2179-3089]:MethodDeclaration[2179-3089]"
    }, {
      "left" : "public static NodePointer newChildNodePointer(\n        NodePointer parent,\n        QName name,\n        Object bean)",
      "right" : "public static NodePointer newChildNodePointer(\n        NodePointer parent,\n        QName name,\n        Object bean)",
      "info" : "MethodDeclaration[3095-3876]:MethodDeclaration[3095-3876]"
    }, {
      "left" : "protected NodePointer parent;",
      "right" : "protected NodePointer parent;",
      "info" : "FieldDeclaration[3882-3911]:FieldDeclaration[3882-3911]"
    }, {
      "left" : "protected Locale locale;",
      "right" : "protected Locale locale;",
      "info" : "FieldDeclaration[3916-3940]:FieldDeclaration[3916-3940]"
    }, {
      "left" : "protected NodePointer(NodePointer parent)",
      "right" : "protected NodePointer(NodePointer parent)",
      "info" : "MethodDeclaration[3995-4074]:MethodDeclaration[3995-4074]"
    }, {
      "left" : "protected NodePointer(NodePointer parent, Locale locale)",
      "right" : "protected NodePointer(NodePointer parent, Locale locale)",
      "info" : "MethodDeclaration[4080-4204]:MethodDeclaration[4080-4204]"
    }, {
      "left" : "public NamespaceResolver getNamespaceResolver()",
      "right" : "public NamespaceResolver getNamespaceResolver()",
      "info" : "MethodDeclaration[4210-4431]:MethodDeclaration[4210-4431]"
    }, {
      "left" : "public void setNamespaceResolver(NamespaceResolver namespaceResolver)",
      "right" : "public void setNamespaceResolver(NamespaceResolver namespaceResolver)",
      "info" : "MethodDeclaration[4441-4570]:MethodDeclaration[4441-4570]"
    }, {
      "left" : "public NodePointer getParent()",
      "right" : "public NodePointer getParent()",
      "info" : "MethodDeclaration[4580-4808]:MethodDeclaration[4580-4808]"
    }, {
      "left" : "public NodePointer getImmediateParentPointer()",
      "right" : "public NodePointer getImmediateParentPointer()",
      "info" : "MethodDeclaration[4818-4895]:MethodDeclaration[4818-4895]"
    }, {
      "left" : "public void setAttribute(boolean attribute)",
      "right" : "public void setAttribute(boolean attribute)",
      "info" : "MethodDeclaration[4901-5073]:MethodDeclaration[4901-5073]"
    }, {
      "left" : "public boolean isAttribute()",
      "right" : "public boolean isAttribute()",
      "info" : "MethodDeclaration[5079-5227]:MethodDeclaration[5079-5227]"
    }, {
      "left" : "public boolean isRoot()",
      "right" : "public boolean isRoot()",
      "info" : "MethodDeclaration[5233-5362]:MethodDeclaration[5233-5362]"
    }, {
      "left" : "public abstract boolean isLeaf();",
      "right" : "public abstract boolean isLeaf();",
      "info" : "MethodDeclaration[5368-5466]:MethodDeclaration[5368-5466]"
    }, {
      "left" : "public boolean isNode()",
      "right" : "public boolean isNode()",
      "info" : "MethodDeclaration[5472-5595]:MethodDeclaration[5472-5595]"
    }, {
      "left" : "public boolean isContainer()",
      "right" : "public boolean isContainer()",
      "info" : "MethodDeclaration[5606-5791]:MethodDeclaration[5606-5791]"
    }, {
      "left" : "public int getIndex()",
      "right" : "public int getIndex()",
      "info" : "MethodDeclaration[5797-6176]:MethodDeclaration[5797-6176]"
    }, {
      "left" : "public void setIndex(int index)",
      "right" : "public void setIndex(int index)",
      "info" : "MethodDeclaration[6182-6249]:MethodDeclaration[6182-6249]"
    }, {
      "left" : "public abstract boolean isCollection();",
      "right" : "public abstract boolean isCollection();",
      "info" : "MethodDeclaration[6255-6407]:MethodDeclaration[6255-6407]"
    }, {
      "left" : "public abstract int getLength();",
      "right" : "public abstract int getLength();",
      "info" : "MethodDeclaration[6413-6633]:MethodDeclaration[6413-6633]"
    }, {
      "left" : "public Object getValue()",
      "right" : "public Object getValue()",
      "info" : "MethodDeclaration[6639-7099]:MethodDeclaration[6639-7099]"
    }, {
      "left" : "public NodePointer getValuePointer()",
      "right" : "public NodePointer getValuePointer()",
      "info" : "MethodDeclaration[7105-8224]:MethodDeclaration[7105-8224]"
    }, {
      "left" : "public NodePointer getImmediateValuePointer()",
      "right" : "public NodePointer getImmediateValuePointer()",
      "info" : "MethodDeclaration[8230-8473]:MethodDeclaration[8230-8473]"
    }, {
      "left" : "public boolean isActual()",
      "right" : "public boolean isActual()",
      "info" : "MethodDeclaration[8483-9266]:MethodDeclaration[8483-9266]"
    }, {
      "left" : "public abstract QName getName();",
      "right" : "public abstract QName getName();",
      "info" : "MethodDeclaration[9272-9371]:MethodDeclaration[9272-9371]"
    }, {
      "left" : "public abstract Object getBaseValue();",
      "right" : "public abstract Object getBaseValue();",
      "info" : "MethodDeclaration[9377-9612]:MethodDeclaration[9377-9612]"
    }, {
      "left" : "public Object getNodeValue()",
      "right" : "public Object getNodeValue()",
      "info" : "MethodDeclaration[9618-9846]:MethodDeclaration[9618-9846]"
    }, {
      "left" : "public Object getNode()",
      "right" : "public Object getNode()",
      "info" : "MethodDeclaration[9852-10126]:MethodDeclaration[9852-10126]"
    }, {
      "left" : "public Object getRootNode()",
      "right" : "public Object getRootNode()",
      "info" : "MethodDeclaration[10136-10321]:MethodDeclaration[10136-10321]"
    }, {
      "left" : "public abstract Object getImmediateNode();",
      "right" : "public abstract Object getImmediateNode();",
      "info" : "MethodDeclaration[10331-10488]:MethodDeclaration[10331-10488]"
    }, {
      "left" : "public abstract void setValue(Object value);",
      "right" : "public abstract void setValue(Object value);",
      "info" : "MethodDeclaration[10494-10660]:MethodDeclaration[10494-10660]"
    }, {
      "left" : "public abstract int compareChildNodePointers(\n            NodePointer pointer1, NodePointer pointer2);",
      "right" : "public abstract int compareChildNodePointers(\n            NodePointer pointer1, NodePointer pointer2);",
      "info" : "MethodDeclaration[10666-10927]:MethodDeclaration[10666-10927]"
    }, {
      "left" : "public boolean testNode(NodeTest test)",
      "right" : "public boolean testNode(NodeTest test)",
      "info" : "MethodDeclaration[10933-12200]:MethodDeclaration[10933-12200]"
    }, {
      "left" : "private static boolean equalStrings(String s1, String s2)",
      "right" : "private static boolean equalStrings(String s1, String s2)",
      "info" : "MethodDeclaration[12206-12327]:MethodDeclaration[12206-12327]"
    }, {
      "left" : "public NodePointer createPath(JXPathContext context, Object value)",
      "right" : "public NodePointer createPath(JXPathContext context, Object value)",
      "info" : "MethodDeclaration[12333-12551]:MethodDeclaration[12333-12551]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[12557-12799]:MethodDeclaration[12557-12799]"
    }, {
      "left" : "public NodePointer createPath(JXPathContext context)",
      "right" : "public NodePointer createPath(JXPathContext context)",
      "info" : "MethodDeclaration[12805-13103]:MethodDeclaration[12805-13103]"
    }, {
      "left" : "public NodePointer createChild(\n        JXPathContext context,\n        QName name,\n        int index,\n        Object value)",
      "right" : "public NodePointer createChild(\n        JXPathContext context,\n        QName name,\n        int index,\n        Object value)",
      "info" : "MethodDeclaration[13109-13712]:MethodDeclaration[13109-13712]"
    }, {
      "left" : "public NodePointer createChild(JXPathContext context, QName name, int index)",
      "right" : "public NodePointer createChild(JXPathContext context, QName name, int index)",
      "info" : "MethodDeclaration[13718-14293]:MethodDeclaration[13718-14293]"
    }, {
      "left" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "right" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "info" : "MethodDeclaration[14303-14630]:MethodDeclaration[14303-14630]"
    }, {
      "left" : "public Locale getLocale()",
      "right" : "public Locale getLocale()",
      "info" : "MethodDeclaration[14636-14983]:MethodDeclaration[14636-14983]"
    }, {
      "left" : "public boolean isLanguage(String lang)",
      "right" : "public boolean isLanguage(String lang)",
      "info" : "MethodDeclaration[14989-15326]:MethodDeclaration[14989-15326]"
    }, {
      "left" : "public NodeIterator childIterator(\n        NodeTest test,\n        boolean reverse,\n        NodePointer startWith)",
      "right" : "public NodeIterator childIterator(\n        NodeTest test,\n        boolean reverse,\n        NodePointer startWith)",
      "info" : "MethodDeclaration[16040-16524]:MethodDeclaration[16040-16524]"
    }, {
      "left" : "public NodeIterator attributeIterator(QName qname)",
      "right" : "public NodeIterator attributeIterator(QName qname)",
      "info" : "MethodDeclaration[16530-17000]:MethodDeclaration[16530-17000]"
    }, {
      "left" : "public NodeIterator namespaceIterator()",
      "right" : "public NodeIterator namespaceIterator()",
      "info" : "MethodDeclaration[17006-17266]:MethodDeclaration[17006-17266]"
    }, {
      "left" : "public NodePointer namespacePointer(String namespace)",
      "right" : "public NodePointer namespacePointer(String namespace)",
      "info" : "MethodDeclaration[17272-17553]:MethodDeclaration[17272-17553]"
    }, {
      "left" : "public String getNamespaceURI(String prefix)",
      "right" : "public String getNamespaceURI(String prefix)",
      "info" : "MethodDeclaration[17559-17708]:MethodDeclaration[17559-17708]"
    }, {
      "left" : "public String getNamespaceURI()",
      "right" : "public String getNamespaceURI()",
      "info" : "MethodDeclaration[17714-17853]:MethodDeclaration[17714-17853]"
    }, {
      "left" : "protected boolean isDefaultNamespace(String prefix)",
      "right" : "protected boolean isDefaultNamespace(String prefix)",
      "info" : "MethodDeclaration[17859-18251]:MethodDeclaration[17859-18251]"
    }, {
      "left" : "protected String getDefaultNamespaceURI()",
      "right" : "protected String getDefaultNamespaceURI()",
      "info" : "MethodDeclaration[18257-18327]:MethodDeclaration[18257-18327]"
    }, {
      "left" : "public Pointer getPointerByID(JXPathContext context, String id)",
      "right" : "public Pointer getPointerByID(JXPathContext context, String id)",
      "info" : "MethodDeclaration[18333-18492]:MethodDeclaration[18333-18492]"
    }, {
      "left" : "public Pointer getPointerByKey(\n        JXPathContext context,\n        String key,\n        String value)",
      "right" : "public Pointer getPointerByKey(\n        JXPathContext context,\n        String key,\n        String value)",
      "info" : "MethodDeclaration[18498-18723]:MethodDeclaration[18498-18723]"
    }, {
      "left" : "public String asPath()",
      "right" : "public String asPath()",
      "info" : "MethodDeclaration[18729-19590]:MethodDeclaration[18729-19590]"
    }, {
      "left" : "public Object clone()",
      "right" : "public Object clone()",
      "info" : "MethodDeclaration[19596-19993]:MethodDeclaration[19596-19993]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[19999-20056]:MethodDeclaration[19999-20056]"
    }, {
      "left" : "public int compareTo(Object object)",
      "right" : "public int compareTo(Object object)",
      "info" : "MethodDeclaration[20062-20741]:MethodDeclaration[20062-20741]"
    }, {
      "left" : "private int compareNodePointers(\n        NodePointer p1,\n        int depth1,\n        NodePointer p2,\n        int depth2)",
      "right" : "private int compareNodePointers(\n        NodePointer p1,\n        int depth1,\n        NodePointer p2,\n        int depth2)",
      "info" : "MethodDeclaration[20747-21750]:MethodDeclaration[20747-21590]"
    }, {
      "left" : "public void printPointerChain()",
      "right" : "public void printPointerChain()",
      "info" : "MethodDeclaration[21756-21899]:MethodDeclaration[21596-21739]"
    }, {
      "left" : "private static void printDeep(NodePointer pointer, String indent)",
      "right" : "private static void printDeep(NodePointer pointer, String indent)",
      "info" : "MethodDeclaration[21905-22607]:MethodDeclaration[21745-22447]"
    } ],
    "mappings" : [
 {
      "left" : "Pointer",
      "right" : "Pointer",
      "info" : "SimpleType[1846-1853]:SimpleType[1846-1853]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2349-2355]:Modifier[2349-2355]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2356-2362]:Modifier[2356-2362]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[2363-2374]:SimpleType[2363-2374]"
    }, {
      "left" : "newNodePointer",
      "right" : "newNodePointer",
      "info" : "SimpleName[2375-2389]:SimpleName[2375-2389]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[2399-2409]:SingleVariableDeclaration[2399-2409]"
    }, {
      "left" : "Object bean",
      "right" : "Object bean",
      "info" : "SingleVariableDeclaration[2419-2430]:SingleVariableDeclaration[2419-2430]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[2440-2453]:SingleVariableDeclaration[2440-2453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2460-3089]:Block[2460-3089]"
    }, {
      "left" : "NodePointer pointer = null;",
      "right" : "NodePointer pointer = null;",
      "info" : "VariableDeclarationStatement[2470-2497]:VariableDeclarationStatement[2470-2497]"
    }, {
      "left" : "if (bean == null)",
      "right" : "if (bean == null)",
      "info" : "IfStatement[2506-2616]:IfStatement[2506-2616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2524-2616]:Block[2524-2616]"
    }, {
      "left" : "pointer = new NullPointer(name, locale);",
      "right" : "pointer = new NullPointer(name, locale);",
      "info" : "ExpressionStatement[2538-2578]:ExpressionStatement[2538-2578]"
    }, {
      "left" : "return pointer;",
      "right" : "return pointer;",
      "info" : "ReturnStatement[2591-2606]:ReturnStatement[2591-2606]"
    }, {
      "left" : "NodePointerFactory[] factories =\n            JXPathContextReferenceImpl.getNodePointerFactories();",
      "right" : "NodePointerFactory[] factories =\n            JXPathContextReferenceImpl.getNodePointerFactories();",
      "info" : "VariableDeclarationStatement[2634-2732]:VariableDeclarationStatement[2634-2732]"
    }, {
      "left" : "for (int i = 0; i < factories.length; i++)",
      "right" : "for (int i = 0; i < factories.length; i++)",
      "info" : "ForStatement[2741-2950]:ForStatement[2741-2950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2784-2950]:Block[2784-2950]"
    }, {
      "left" : "pointer = factories[i].createNodePointer(name, bean, locale);",
      "right" : "pointer = factories[i].createNodePointer(name, bean, locale);",
      "info" : "ExpressionStatement[2798-2859]:ExpressionStatement[2798-2859]"
    }, {
      "left" : "if (pointer != null)",
      "right" : "if (pointer != null)",
      "info" : "IfStatement[2872-2940]:IfStatement[2872-2940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2893-2940]:Block[2893-2940]"
    }, {
      "left" : "return pointer;",
      "right" : "return pointer;",
      "info" : "ReturnStatement[2911-2926]:ReturnStatement[2911-2926]"
    }, {
      "left" : "throw new JXPathException(\n            \"Could not allocate a NodePointer for object of \"\n                + bean.getClass());",
      "right" : "throw new JXPathException(\n            \"Could not allocate a NodePointer for object of \"\n                + bean.getClass());",
      "info" : "ThrowStatement[2959-3083]:ThrowStatement[2959-3083]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3262-3268]:Modifier[3262-3268]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3269-3275]:Modifier[3269-3275]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[3276-3287]:SimpleType[3276-3287]"
    }, {
      "left" : "newChildNodePointer",
      "right" : "newChildNodePointer",
      "info" : "SimpleName[3288-3307]:SimpleName[3288-3307]"
    }, {
      "left" : "NodePointer parent",
      "right" : "NodePointer parent",
      "info" : "SingleVariableDeclaration[3317-3335]:SingleVariableDeclaration[3317-3335]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[3345-3355]:SingleVariableDeclaration[3345-3355]"
    }, {
      "left" : "Object bean",
      "right" : "Object bean",
      "info" : "SingleVariableDeclaration[3365-3376]:SingleVariableDeclaration[3365-3376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3383-3876]:Block[3383-3876]"
    }, {
      "left" : "NodePointerFactory[] factories =\n            JXPathContextReferenceImpl.getNodePointerFactories();",
      "right" : "NodePointerFactory[] factories =\n            JXPathContextReferenceImpl.getNodePointerFactories();",
      "info" : "VariableDeclarationStatement[3393-3491]:VariableDeclarationStatement[3393-3491]"
    }, {
      "left" : "for (int i = 0; i < factories.length; i++)",
      "right" : "for (int i = 0; i < factories.length; i++)",
      "info" : "ForStatement[3500-3737]:ForStatement[3500-3737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3543-3737]:Block[3543-3737]"
    }, {
      "left" : "NodePointer pointer =\n                factories[i].createNodePointer(parent, name, bean);",
      "right" : "NodePointer pointer =\n                factories[i].createNodePointer(parent, name, bean);",
      "info" : "VariableDeclarationStatement[3557-3646]:VariableDeclarationStatement[3557-3646]"
    }, {
      "left" : "if (pointer != null)",
      "right" : "if (pointer != null)",
      "info" : "IfStatement[3659-3727]:IfStatement[3659-3727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3680-3727]:Block[3680-3727]"
    }, {
      "left" : "return pointer;",
      "right" : "return pointer;",
      "info" : "ReturnStatement[3698-3713]:ReturnStatement[3698-3713]"
    }, {
      "left" : "throw new JXPathException(\n            \"Could not allocate a NodePointer for object of \"\n                + bean.getClass());",
      "right" : "throw new JXPathException(\n            \"Could not allocate a NodePointer for object of \"\n                + bean.getClass());",
      "info" : "ThrowStatement[3746-3870]:ThrowStatement[3746-3870]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3995-4004]:Modifier[3995-4004]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleName[4005-4016]:SimpleName[4005-4016]"
    }, {
      "left" : "NodePointer parent",
      "right" : "NodePointer parent",
      "info" : "SingleVariableDeclaration[4017-4035]:SingleVariableDeclaration[4017-4035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4037-4074]:Block[4037-4074]"
    }, {
      "left" : "this.parent = parent;",
      "right" : "this.parent = parent;",
      "info" : "ExpressionStatement[4047-4068]:ExpressionStatement[4047-4068]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4080-4089]:Modifier[4080-4089]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleName[4090-4101]:SimpleName[4090-4101]"
    }, {
      "left" : "NodePointer parent",
      "right" : "NodePointer parent",
      "info" : "SingleVariableDeclaration[4102-4120]:SingleVariableDeclaration[4102-4120]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[4122-4135]:SingleVariableDeclaration[4122-4135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4137-4204]:Block[4137-4204]"
    }, {
      "left" : "this.parent = parent;",
      "right" : "this.parent = parent;",
      "info" : "ExpressionStatement[4147-4168]:ExpressionStatement[4147-4168]"
    }, {
      "left" : "this.locale = locale;",
      "right" : "this.locale = locale;",
      "info" : "ExpressionStatement[4177-4198]:ExpressionStatement[4177-4198]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4210-4216]:Modifier[4210-4216]"
    }, {
      "left" : "NamespaceResolver",
      "right" : "NamespaceResolver",
      "info" : "SimpleType[4217-4234]:SimpleType[4217-4234]"
    }, {
      "left" : "getNamespaceResolver",
      "right" : "getNamespaceResolver",
      "info" : "SimpleName[4235-4255]:SimpleName[4235-4255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4258-4431]:Block[4258-4431]"
    }, {
      "left" : "if (namespaceResolver == null && parent != null)",
      "right" : "if (namespaceResolver == null && parent != null)",
      "info" : "IfStatement[4268-4391]:IfStatement[4268-4391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4317-4391]:Block[4317-4391]"
    }, {
      "left" : "namespaceResolver = parent.getNamespaceResolver();",
      "right" : "namespaceResolver = parent.getNamespaceResolver();",
      "info" : "ExpressionStatement[4331-4381]:ExpressionStatement[4331-4381]"
    }, {
      "left" : "return namespaceResolver;",
      "right" : "return namespaceResolver;",
      "info" : "ReturnStatement[4400-4425]:ReturnStatement[4400-4425]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4441-4447]:Modifier[4441-4447]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4448-4452]:PrimitiveType[4448-4452]"
    }, {
      "left" : "setNamespaceResolver",
      "right" : "setNamespaceResolver",
      "info" : "SimpleName[4453-4473]:SimpleName[4453-4473]"
    }, {
      "left" : "NamespaceResolver namespaceResolver",
      "right" : "NamespaceResolver namespaceResolver",
      "info" : "SingleVariableDeclaration[4474-4509]:SingleVariableDeclaration[4474-4509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4511-4570]:Block[4511-4570]"
    }, {
      "left" : "this.namespaceResolver = namespaceResolver;",
      "right" : "this.namespaceResolver = namespaceResolver;",
      "info" : "ExpressionStatement[4521-4564]:ExpressionStatement[4521-4564]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4580-4586]:Modifier[4580-4586]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[4587-4598]:SimpleType[4587-4598]"
    }, {
      "left" : "getParent",
      "right" : "getParent",
      "info" : "SimpleName[4599-4608]:SimpleName[4599-4608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4611-4808]:Block[4611-4808]"
    }, {
      "left" : "NodePointer pointer = parent;",
      "right" : "NodePointer pointer = parent;",
      "info" : "VariableDeclarationStatement[4621-4650]:VariableDeclarationStatement[4621-4650]"
    }, {
      "left" : "while (pointer != null && pointer.isContainer())",
      "right" : "while (pointer != null && pointer.isContainer())",
      "info" : "WhileStatement[4659-4778]:WhileStatement[4659-4778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4708-4778]:Block[4708-4778]"
    }, {
      "left" : "pointer = pointer.getImmediateParentPointer();",
      "right" : "pointer = pointer.getImmediateParentPointer();",
      "info" : "ExpressionStatement[4722-4768]:ExpressionStatement[4722-4768]"
    }, {
      "left" : "return pointer;",
      "right" : "return pointer;",
      "info" : "ReturnStatement[4787-4802]:ReturnStatement[4787-4802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4818-4824]:Modifier[4818-4824]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[4825-4836]:SimpleType[4825-4836]"
    }, {
      "left" : "getImmediateParentPointer",
      "right" : "getImmediateParentPointer",
      "info" : "SimpleName[4837-4862]:SimpleName[4837-4862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4865-4895]:Block[4865-4895]"
    }, {
      "left" : "return parent;",
      "right" : "return parent;",
      "info" : "ReturnStatement[4875-4889]:ReturnStatement[4875-4889]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4986-4992]:Modifier[4986-4992]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4993-4997]:PrimitiveType[4993-4997]"
    }, {
      "left" : "setAttribute",
      "right" : "setAttribute",
      "info" : "SimpleName[4998-5010]:SimpleName[4998-5010]"
    }, {
      "left" : "boolean attribute",
      "right" : "boolean attribute",
      "info" : "SingleVariableDeclaration[5011-5028]:SingleVariableDeclaration[5011-5028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5030-5073]:Block[5030-5073]"
    }, {
      "left" : "this.attribute = attribute;",
      "right" : "this.attribute = attribute;",
      "info" : "ExpressionStatement[5040-5067]:ExpressionStatement[5040-5067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5165-5171]:Modifier[5165-5171]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5172-5179]:PrimitiveType[5172-5179]"
    }, {
      "left" : "isAttribute",
      "right" : "isAttribute",
      "info" : "SimpleName[5180-5191]:SimpleName[5180-5191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5194-5227]:Block[5194-5227]"
    }, {
      "left" : "return attribute;",
      "right" : "return attribute;",
      "info" : "ReturnStatement[5204-5221]:ReturnStatement[5204-5221]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5300-5306]:Modifier[5300-5306]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5307-5314]:PrimitiveType[5307-5314]"
    }, {
      "left" : "isRoot",
      "right" : "isRoot",
      "info" : "SimpleName[5315-5321]:SimpleName[5315-5321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5324-5362]:Block[5324-5362]"
    }, {
      "left" : "return parent == null;",
      "right" : "return parent == null;",
      "info" : "ReturnStatement[5334-5356]:ReturnStatement[5334-5356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5433-5439]:Modifier[5433-5439]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[5440-5448]:Modifier[5440-5448]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5449-5456]:PrimitiveType[5449-5456]"
    }, {
      "left" : "isLeaf",
      "right" : "isLeaf",
      "info" : "SimpleName[5457-5463]:SimpleName[5457-5463]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5533-5539]:Modifier[5533-5539]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5540-5547]:PrimitiveType[5540-5547]"
    }, {
      "left" : "isNode",
      "right" : "isNode",
      "info" : "SimpleName[5548-5554]:SimpleName[5548-5554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5557-5595]:Block[5557-5595]"
    }, {
      "left" : "return !isContainer();",
      "right" : "return !isContainer();",
      "info" : "ReturnStatement[5567-5589]:ReturnStatement[5567-5589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5733-5739]:Modifier[5733-5739]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5740-5747]:PrimitiveType[5740-5747]"
    }, {
      "left" : "isContainer",
      "right" : "isContainer",
      "info" : "SimpleName[5748-5759]:SimpleName[5748-5759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5762-5791]:Block[5762-5791]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5772-5785]:ReturnStatement[5772-5785]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6125-6131]:Modifier[6125-6131]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6132-6135]:PrimitiveType[6132-6135]"
    }, {
      "left" : "getIndex",
      "right" : "getIndex",
      "info" : "SimpleName[6136-6144]:SimpleName[6136-6144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6147-6176]:Block[6147-6176]"
    }, {
      "left" : "return index;",
      "right" : "return index;",
      "info" : "ReturnStatement[6157-6170]:ReturnStatement[6157-6170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6182-6188]:Modifier[6182-6188]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6189-6193]:PrimitiveType[6189-6193]"
    }, {
      "left" : "setIndex",
      "right" : "setIndex",
      "info" : "SimpleName[6194-6202]:SimpleName[6194-6202]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[6203-6212]:SingleVariableDeclaration[6203-6212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6214-6249]:Block[6214-6249]"
    }, {
      "left" : "this.index = index;",
      "right" : "this.index = index;",
      "info" : "ExpressionStatement[6224-6243]:ExpressionStatement[6224-6243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6368-6374]:Modifier[6368-6374]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[6375-6383]:Modifier[6375-6383]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6384-6391]:PrimitiveType[6384-6391]"
    }, {
      "left" : "isCollection",
      "right" : "isCollection",
      "info" : "SimpleName[6392-6404]:SimpleName[6392-6404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6601-6607]:Modifier[6601-6607]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[6608-6616]:Modifier[6608-6616]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6617-6620]:PrimitiveType[6617-6620]"
    }, {
      "left" : "getLength",
      "right" : "getLength",
      "info" : "SimpleName[6621-6630]:SimpleName[6621-6630]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6833-6839]:Modifier[6833-6839]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[6840-6846]:SimpleType[6840-6846]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[6847-6855]:SimpleName[6847-6855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6858-7099]:Block[6858-7099]"
    }, {
      "left" : "NodePointer valuePointer = getValuePointer();",
      "right" : "NodePointer valuePointer = getValuePointer();",
      "info" : "VariableDeclarationStatement[6868-6913]:VariableDeclarationStatement[6868-6913]"
    }, {
      "left" : "if (valuePointer != this)",
      "right" : "if (valuePointer != this)",
      "info" : "IfStatement[6922-7003]:IfStatement[6922-7003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6948-7003]:Block[6948-7003]"
    }, {
      "left" : "return valuePointer.getValue();",
      "right" : "return valuePointer.getValue();",
      "info" : "ReturnStatement[6962-6993]:ReturnStatement[6962-6993]"
    }, {
      "left" : "return getNode();",
      "right" : "return getNode();",
      "info" : "ReturnStatement[7076-7093]:ReturnStatement[7076-7093]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8067-8073]:Modifier[8067-8073]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[8074-8085]:SimpleType[8074-8085]"
    }, {
      "left" : "getValuePointer",
      "right" : "getValuePointer",
      "info" : "SimpleName[8086-8101]:SimpleName[8086-8101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8104-8224]:Block[8104-8224]"
    }, {
      "left" : "NodePointer ivp = getImmediateValuePointer();",
      "right" : "NodePointer ivp = getImmediateValuePointer();",
      "info" : "VariableDeclarationStatement[8114-8159]:VariableDeclarationStatement[8114-8159]"
    }, {
      "left" : "return ivp == this ? this : ivp.getValuePointer();",
      "right" : "return ivp == this ? this : ivp.getValuePointer();",
      "info" : "ReturnStatement[8168-8218]:ReturnStatement[8168-8218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8399-8405]:Modifier[8399-8405]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[8406-8417]:SimpleType[8406-8417]"
    }, {
      "left" : "getImmediateValuePointer",
      "right" : "getImmediateValuePointer",
      "info" : "SimpleName[8418-8442]:SimpleName[8418-8442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8445-8473]:Block[8445-8473]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8455-8467]:ReturnStatement[8455-8467]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9154-9160]:Modifier[9154-9160]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9161-9168]:PrimitiveType[9161-9168]"
    }, {
      "left" : "isActual",
      "right" : "isActual",
      "info" : "SimpleName[9169-9177]:SimpleName[9169-9177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9180-9266]:Block[9180-9266]"
    }, {
      "left" : "return index == WHOLE_COLLECTION || index >= 0 && index < getLength();",
      "right" : "return index == WHOLE_COLLECTION || index >= 0 && index < getLength();",
      "info" : "ReturnStatement[9190-9260]:ReturnStatement[9190-9260]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9339-9345]:Modifier[9339-9345]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[9346-9354]:Modifier[9346-9354]"
    }, {
      "left" : "QName",
      "right" : "QName",
      "info" : "SimpleType[9355-9360]:SimpleType[9355-9360]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[9361-9368]:SimpleName[9361-9368]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9574-9580]:Modifier[9574-9580]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[9581-9589]:Modifier[9581-9589]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[9590-9596]:SimpleType[9590-9596]"
    }, {
      "left" : "getBaseValue",
      "right" : "getBaseValue",
      "info" : "SimpleName[9597-9609]:SimpleName[9597-9609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9784-9790]:Modifier[9784-9790]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[9791-9797]:SimpleType[9791-9797]"
    }, {
      "left" : "getNodeValue",
      "right" : "getNodeValue",
      "info" : "SimpleName[9798-9810]:SimpleName[9798-9810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9813-9846]:Block[9813-9846]"
    }, {
      "left" : "return getNode();",
      "right" : "return getNode();",
      "info" : "ReturnStatement[9823-9840]:ReturnStatement[9823-9840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10042-10048]:Modifier[10042-10048]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[10049-10055]:SimpleType[10049-10055]"
    }, {
      "left" : "getNode",
      "right" : "getNode",
      "info" : "SimpleName[10056-10063]:SimpleName[10056-10063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10066-10126]:Block[10066-10126]"
    }, {
      "left" : "return getValuePointer().getImmediateNode();",
      "right" : "return getValuePointer().getImmediateNode();",
      "info" : "ReturnStatement[10076-10120]:ReturnStatement[10076-10120]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10136-10142]:Modifier[10136-10142]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[10143-10149]:SimpleType[10143-10149]"
    }, {
      "left" : "getRootNode",
      "right" : "getRootNode",
      "info" : "SimpleName[10150-10161]:SimpleName[10150-10161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10164-10321]:Block[10164-10321]"
    }, {
      "left" : "if (rootNode == null)",
      "right" : "if (rootNode == null)",
      "info" : "IfStatement[10174-10290]:IfStatement[10174-10290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10196-10290]:Block[10196-10290]"
    }, {
      "left" : "rootNode = parent == null ? getImmediateNode() : parent.getRootNode();",
      "right" : "rootNode = parent == null ? getImmediateNode() : parent.getRootNode();",
      "info" : "ExpressionStatement[10210-10280]:ExpressionStatement[10210-10280]"
    }, {
      "left" : "return rootNode;",
      "right" : "return rootNode;",
      "info" : "ReturnStatement[10299-10315]:ReturnStatement[10299-10315]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10446-10452]:Modifier[10446-10452]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[10453-10461]:Modifier[10453-10461]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[10462-10468]:SimpleType[10462-10468]"
    }, {
      "left" : "getImmediateNode",
      "right" : "getImmediateNode",
      "info" : "SimpleName[10469-10485]:SimpleName[10469-10485]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10616-10622]:Modifier[10616-10622]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[10623-10631]:Modifier[10623-10631]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10632-10636]:PrimitiveType[10632-10636]"
    }, {
      "left" : "setValue",
      "right" : "setValue",
      "info" : "SimpleName[10637-10645]:SimpleName[10637-10645]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[10646-10658]:SingleVariableDeclaration[10646-10658]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10825-10831]:Modifier[10825-10831]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[10832-10840]:Modifier[10832-10840]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[10841-10844]:PrimitiveType[10841-10844]"
    }, {
      "left" : "compareChildNodePointers",
      "right" : "compareChildNodePointers",
      "info" : "SimpleName[10845-10869]:SimpleName[10845-10869]"
    }, {
      "left" : "NodePointer pointer1",
      "right" : "NodePointer pointer1",
      "info" : "SingleVariableDeclaration[10883-10903]:SingleVariableDeclaration[10883-10903]"
    }, {
      "left" : "NodePointer pointer2",
      "right" : "NodePointer pointer2",
      "info" : "SingleVariableDeclaration[10905-10925]:SingleVariableDeclaration[10905-10925]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11010-11016]:Modifier[11010-11016]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11017-11024]:PrimitiveType[11017-11024]"
    }, {
      "left" : "testNode",
      "right" : "testNode",
      "info" : "SimpleName[11025-11033]:SimpleName[11025-11033]"
    }, {
      "left" : "NodeTest test",
      "right" : "NodeTest test",
      "info" : "SingleVariableDeclaration[11034-11047]:SingleVariableDeclaration[11034-11047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11049-12200]:Block[11049-12200]"
    }, {
      "left" : "if (test == null)",
      "right" : "if (test == null)",
      "info" : "IfStatement[11059-11113]:IfStatement[11059-11113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11077-11113]:Block[11077-11113]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11091-11103]:ReturnStatement[11091-11103]"
    }, {
      "left" : "if (test instanceof NodeNameTest)",
      "right" : "if (test instanceof NodeNameTest)",
      "info" : "IfStatement[11122-12055]:IfStatement[11122-12055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11156-12055]:Block[11156-12055]"
    }, {
      "left" : "if (isContainer())",
      "right" : "if (isContainer())",
      "info" : "IfStatement[11170-11234]:IfStatement[11170-11234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11189-11234]:Block[11189-11234]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11207-11220]:ReturnStatement[11207-11220]"
    }, {
      "left" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
      "right" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
      "info" : "VariableDeclarationStatement[11247-11295]:VariableDeclarationStatement[11247-11295]"
    }, {
      "left" : "QName testName = nodeNameTest.getNodeName();",
      "right" : "QName testName = nodeNameTest.getNodeName();",
      "info" : "VariableDeclarationStatement[11308-11352]:VariableDeclarationStatement[11308-11352]"
    }, {
      "left" : "QName nodeName = getName();",
      "right" : "QName nodeName = getName();",
      "info" : "VariableDeclarationStatement[11365-11392]:VariableDeclarationStatement[11365-11392]"
    }, {
      "left" : "if (nodeName == null)",
      "right" : "if (nodeName == null)",
      "info" : "IfStatement[11405-11472]:IfStatement[11405-11472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11427-11472]:Block[11427-11472]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11445-11458]:ReturnStatement[11445-11458]"
    }, {
      "left" : "String testPrefix = testName.getPrefix();",
      "right" : "String testPrefix = testName.getPrefix();",
      "info" : "VariableDeclarationStatement[11498-11539]:VariableDeclarationStatement[11498-11539]"
    }, {
      "left" : "String nodePrefix = nodeName.getPrefix();",
      "right" : "String nodePrefix = nodeName.getPrefix();",
      "info" : "VariableDeclarationStatement[11552-11593]:VariableDeclarationStatement[11552-11593]"
    }, {
      "left" : "if (!equalStrings(testPrefix, nodePrefix))",
      "right" : "if (!equalStrings(testPrefix, nodePrefix))",
      "info" : "IfStatement[11606-11891]:IfStatement[11606-11891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11649-11891]:Block[11649-11891]"
    }, {
      "left" : "String testNS = getNamespaceURI(testPrefix);",
      "right" : "String testNS = getNamespaceURI(testPrefix);",
      "info" : "VariableDeclarationStatement[11667-11711]:VariableDeclarationStatement[11667-11711]"
    }, {
      "left" : "String nodeNS = getNamespaceURI(nodePrefix);",
      "right" : "String nodeNS = getNamespaceURI(nodePrefix);",
      "info" : "VariableDeclarationStatement[11728-11772]:VariableDeclarationStatement[11728-11772]"
    }, {
      "left" : "if (!equalStrings(testNS, nodeNS))",
      "right" : "if (!equalStrings(testNS, nodeNS))",
      "info" : "IfStatement[11789-11877]:IfStatement[11789-11877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11824-11877]:Block[11824-11877]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11846-11859]:ReturnStatement[11846-11859]"
    }, {
      "left" : "if (nodeNameTest.isWildcard())",
      "right" : "if (nodeNameTest.isWildcard())",
      "info" : "IfStatement[11904-11979]:IfStatement[11904-11979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11935-11979]:Block[11935-11979]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11953-11965]:ReturnStatement[11953-11965]"
    }, {
      "left" : "return testName.getName().equals(nodeName.getName());",
      "right" : "return testName.getName().equals(nodeName.getName());",
      "info" : "ReturnStatement[11992-12045]:ReturnStatement[11992-12045]"
    }, {
      "left" : "return test instanceof NodeTypeTest\n                && ((NodeTypeTest) test).getNodeType() == Compiler.NODE_TYPE_NODE && isNode();",
      "right" : "return test instanceof NodeTypeTest\n                && ((NodeTypeTest) test).getNodeType() == Compiler.NODE_TYPE_NODE && isNode();",
      "info" : "ReturnStatement[12064-12194]:ReturnStatement[12064-12194]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12206-12213]:Modifier[12206-12213]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12214-12220]:Modifier[12214-12220]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[12221-12228]:PrimitiveType[12221-12228]"
    }, {
      "left" : "equalStrings",
      "right" : "equalStrings",
      "info" : "SimpleName[12229-12241]:SimpleName[12229-12241]"
    }, {
      "left" : "String s1",
      "right" : "String s1",
      "info" : "SingleVariableDeclaration[12242-12251]:SingleVariableDeclaration[12242-12251]"
    }, {
      "left" : "String s2",
      "right" : "String s2",
      "info" : "SingleVariableDeclaration[12253-12262]:SingleVariableDeclaration[12253-12262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12264-12327]:Block[12264-12327]"
    }, {
      "left" : "return s1 == s2 || s1 != null && s1.equals(s2);",
      "right" : "return s1 == s2 || s1 != null && s1.equals(s2);",
      "info" : "ReturnStatement[12274-12321]:ReturnStatement[12274-12321]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12431-12437]:Modifier[12431-12437]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[12438-12449]:SimpleType[12438-12449]"
    }, {
      "left" : "createPath",
      "right" : "createPath",
      "info" : "SimpleName[12450-12460]:SimpleName[12450-12460]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[12461-12482]:SingleVariableDeclaration[12461-12482]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[12484-12496]:SingleVariableDeclaration[12484-12496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12498-12551]:Block[12498-12551]"
    }, {
      "left" : "setValue(value);",
      "right" : "setValue(value);",
      "info" : "ExpressionStatement[12508-12524]:ExpressionStatement[12508-12524]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12533-12545]:ReturnStatement[12533-12545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12640-12646]:Modifier[12640-12646]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12647-12651]:PrimitiveType[12647-12651]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[12652-12658]:SimpleName[12652-12658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12661-12799]:Block[12661-12799]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13022-13028]:Modifier[13022-13028]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[13029-13040]:SimpleType[13029-13040]"
    }, {
      "left" : "createPath",
      "right" : "createPath",
      "info" : "SimpleName[13041-13051]:SimpleName[13041-13051]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[13052-13073]:SingleVariableDeclaration[13052-13073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13075-13103]:Block[13075-13103]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13085-13097]:ReturnStatement[13085-13097]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13369-13375]:Modifier[13369-13375]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[13376-13387]:SimpleType[13376-13387]"
    }, {
      "left" : "createChild",
      "right" : "createChild",
      "info" : "SimpleName[13388-13399]:SimpleName[13388-13399]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[13409-13430]:SingleVariableDeclaration[13409-13430]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[13440-13450]:SingleVariableDeclaration[13440-13450]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[13460-13469]:SingleVariableDeclaration[13460-13469]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[13479-13491]:SingleVariableDeclaration[13479-13491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13498-13712]:Block[13498-13712]"
    }, {
      "left" : "throw new JXPathException(\"Cannot create an object for path \"\n                + asPath() + \"/\" + name + \"[\" + (index + 1) + \"]\"\n                + \", operation is not allowed for this type of node\");",
      "right" : "throw new JXPathException(\"Cannot create an object for path \"\n                + asPath() + \"/\" + name + \"[\" + (index + 1) + \"]\"\n                + \", operation is not allowed for this type of node\");",
      "info" : "ThrowStatement[13508-13706]:ThrowStatement[13508-13706]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13998-14004]:Modifier[13998-14004]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[14005-14016]:SimpleType[14005-14016]"
    }, {
      "left" : "createChild",
      "right" : "createChild",
      "info" : "SimpleName[14017-14028]:SimpleName[14017-14028]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[14029-14050]:SingleVariableDeclaration[14029-14050]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[14052-14062]:SingleVariableDeclaration[14052-14062]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[14064-14073]:SingleVariableDeclaration[14064-14073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14079-14293]:Block[14079-14293]"
    }, {
      "left" : "throw new JXPathException(\"Cannot create an object for path \"\n                + asPath() + \"/\" + name + \"[\" + (index + 1) + \"]\"\n                + \", operation is not allowed for this type of node\");",
      "right" : "throw new JXPathException(\"Cannot create an object for path \"\n                + asPath() + \"/\" + name + \"[\" + (index + 1) + \"]\"\n                + \", operation is not allowed for this type of node\");",
      "info" : "ThrowStatement[14089-14287]:ThrowStatement[14089-14287]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14368-14374]:Modifier[14368-14374]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[14375-14386]:SimpleType[14375-14386]"
    }, {
      "left" : "createAttribute",
      "right" : "createAttribute",
      "info" : "SimpleName[14387-14402]:SimpleName[14387-14402]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[14403-14424]:SingleVariableDeclaration[14403-14424]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[14426-14436]:SingleVariableDeclaration[14426-14436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14438-14630]:Block[14438-14630]"
    }, {
      "left" : "throw new JXPathException(\"Cannot create an attribute for path \"\n                + asPath() + \"/@\" + name\n                + \", operation is not allowed for this type of node\");",
      "right" : "throw new JXPathException(\"Cannot create an attribute for path \"\n                + asPath() + \"/@\" + name\n                + \", operation is not allowed for this type of node\");",
      "info" : "ThrowStatement[14448-14624]:ThrowStatement[14448-14624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14794-14800]:Modifier[14794-14800]"
    }, {
      "left" : "Locale",
      "right" : "Locale",
      "info" : "SimpleType[14801-14807]:SimpleType[14801-14807]"
    }, {
      "left" : "getLocale",
      "right" : "getLocale",
      "info" : "SimpleName[14808-14817]:SimpleName[14808-14817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14820-14983]:Block[14820-14983]"
    }, {
      "left" : "if (locale == null)",
      "right" : "if (locale == null)",
      "info" : "IfStatement[14830-14954]:IfStatement[14830-14954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14850-14954]:Block[14850-14954]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[14864-14944]:IfStatement[14864-14944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14884-14944]:Block[14884-14944]"
    }, {
      "left" : "locale = parent.getLocale();",
      "right" : "locale = parent.getLocale();",
      "info" : "ExpressionStatement[14902-14930]:ExpressionStatement[14902-14930]"
    }, {
      "left" : "return locale;",
      "right" : "return locale;",
      "info" : "ReturnStatement[14963-14977]:ReturnStatement[14963-14977]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15124-15130]:Modifier[15124-15130]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[15131-15138]:PrimitiveType[15131-15138]"
    }, {
      "left" : "isLanguage",
      "right" : "isLanguage",
      "info" : "SimpleName[15139-15149]:SimpleName[15139-15149]"
    }, {
      "left" : "String lang",
      "right" : "String lang",
      "info" : "SingleVariableDeclaration[15150-15161]:SingleVariableDeclaration[15150-15161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15163-15326]:Block[15163-15326]"
    }, {
      "left" : "Locale loc = getLocale();",
      "right" : "Locale loc = getLocale();",
      "info" : "VariableDeclarationStatement[15173-15198]:VariableDeclarationStatement[15173-15198]"
    }, {
      "left" : "String name = loc.toString().replace('_', '-');",
      "right" : "String name = loc.toString().replace('_', '-');",
      "info" : "VariableDeclarationStatement[15207-15254]:VariableDeclarationStatement[15207-15254]"
    }, {
      "left" : "return name.toUpperCase().startsWith(lang.toUpperCase());",
      "right" : "return name.toUpperCase().startsWith(lang.toUpperCase());",
      "info" : "ReturnStatement[15263-15320]:ReturnStatement[15263-15320]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16205-16211]:Modifier[16205-16211]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[16212-16224]:SimpleType[16212-16224]"
    }, {
      "left" : "childIterator",
      "right" : "childIterator",
      "info" : "SimpleName[16225-16238]:SimpleName[16225-16238]"
    }, {
      "left" : "NodeTest test",
      "right" : "NodeTest test",
      "info" : "SingleVariableDeclaration[16248-16261]:SingleVariableDeclaration[16248-16261]"
    }, {
      "left" : "boolean reverse",
      "right" : "boolean reverse",
      "info" : "SingleVariableDeclaration[16271-16286]:SingleVariableDeclaration[16271-16286]"
    }, {
      "left" : "NodePointer startWith",
      "right" : "NodePointer startWith",
      "info" : "SingleVariableDeclaration[16296-16317]:SingleVariableDeclaration[16296-16317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16324-16524]:Block[16324-16524]"
    }, {
      "left" : "NodePointer valuePointer = getValuePointer();",
      "right" : "NodePointer valuePointer = getValuePointer();",
      "info" : "VariableDeclarationStatement[16334-16379]:VariableDeclarationStatement[16334-16379]"
    }, {
      "left" : "return valuePointer == null || valuePointer == this ? null\n                : valuePointer.childIterator(test, reverse, startWith);",
      "right" : "return valuePointer == null || valuePointer == this ? null\n                : valuePointer.childIterator(test, reverse, startWith);",
      "info" : "ReturnStatement[16388-16518]:ReturnStatement[16388-16518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16764-16770]:Modifier[16764-16770]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[16771-16783]:SimpleType[16771-16783]"
    }, {
      "left" : "attributeIterator",
      "right" : "attributeIterator",
      "info" : "SimpleName[16784-16801]:SimpleName[16784-16801]"
    }, {
      "left" : "QName qname",
      "right" : "QName qname",
      "info" : "SingleVariableDeclaration[16802-16813]:SingleVariableDeclaration[16802-16813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16815-17000]:Block[16815-17000]"
    }, {
      "left" : "NodePointer valuePointer = getValuePointer();",
      "right" : "NodePointer valuePointer = getValuePointer();",
      "info" : "VariableDeclarationStatement[16825-16870]:VariableDeclarationStatement[16825-16870]"
    }, {
      "left" : "return valuePointer == null || valuePointer == this ? null\n                : valuePointer.attributeIterator(qname);",
      "right" : "return valuePointer == null || valuePointer == this ? null\n                : valuePointer.attributeIterator(qname);",
      "info" : "ReturnStatement[16879-16994]:ReturnStatement[16879-16994]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17198-17204]:Modifier[17198-17204]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[17205-17217]:SimpleType[17205-17217]"
    }, {
      "left" : "namespaceIterator",
      "right" : "namespaceIterator",
      "info" : "SimpleName[17218-17235]:SimpleName[17218-17235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17238-17266]:Block[17238-17266]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17248-17260]:ReturnStatement[17248-17260]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17471-17477]:Modifier[17471-17477]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[17478-17489]:SimpleType[17478-17489]"
    }, {
      "left" : "namespacePointer",
      "right" : "namespacePointer",
      "info" : "SimpleName[17490-17506]:SimpleName[17490-17506]"
    }, {
      "left" : "String namespace",
      "right" : "String namespace",
      "info" : "SingleVariableDeclaration[17507-17523]:SingleVariableDeclaration[17507-17523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17525-17553]:Block[17525-17553]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17535-17547]:ReturnStatement[17535-17547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17635-17641]:Modifier[17635-17641]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[17642-17648]:SimpleType[17642-17648]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[17649-17664]:SimpleName[17649-17664]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[17665-17678]:SingleVariableDeclaration[17665-17678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17680-17708]:Block[17680-17708]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17690-17702]:ReturnStatement[17690-17702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17793-17799]:Modifier[17793-17799]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[17800-17806]:SimpleType[17800-17806]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[17807-17822]:SimpleName[17807-17822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17825-17853]:Block[17825-17853]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17835-17847]:ReturnStatement[17835-17847]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[17994-18003]:Modifier[17994-18003]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18004-18011]:PrimitiveType[18004-18011]"
    }, {
      "left" : "isDefaultNamespace",
      "right" : "isDefaultNamespace",
      "info" : "SimpleName[18012-18030]:SimpleName[18012-18030]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[18031-18044]:SingleVariableDeclaration[18031-18044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18046-18251]:Block[18046-18251]"
    }, {
      "left" : "if (prefix == null)",
      "right" : "if (prefix == null)",
      "info" : "IfStatement[18056-18112]:IfStatement[18056-18112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18076-18112]:Block[18076-18112]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[18090-18102]:ReturnStatement[18090-18102]"
    }, {
      "left" : "String namespace = getNamespaceURI(prefix);",
      "right" : "String namespace = getNamespaceURI(prefix);",
      "info" : "VariableDeclarationStatement[18122-18165]:VariableDeclarationStatement[18122-18165]"
    }, {
      "left" : "return namespace != null && namespace.equals(getDefaultNamespaceURI());",
      "right" : "return namespace != null && namespace.equals(getDefaultNamespaceURI());",
      "info" : "ReturnStatement[18174-18245]:ReturnStatement[18174-18245]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18257-18266]:Modifier[18257-18266]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[18267-18273]:SimpleType[18267-18273]"
    }, {
      "left" : "getDefaultNamespaceURI",
      "right" : "getDefaultNamespaceURI",
      "info" : "SimpleName[18274-18296]:SimpleName[18274-18296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18299-18327]:Block[18299-18327]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18309-18321]:ReturnStatement[18309-18321]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18378-18384]:Modifier[18378-18384]"
    }, {
      "left" : "Pointer",
      "right" : "Pointer",
      "info" : "SimpleType[18385-18392]:SimpleType[18385-18392]"
    }, {
      "left" : "getPointerByID",
      "right" : "getPointerByID",
      "info" : "SimpleName[18393-18407]:SimpleName[18393-18407]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[18408-18429]:SingleVariableDeclaration[18408-18429]"
    }, {
      "left" : "String id",
      "right" : "String id",
      "info" : "SingleVariableDeclaration[18431-18440]:SingleVariableDeclaration[18431-18440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18442-18492]:Block[18442-18492]"
    }, {
      "left" : "return context.getPointerByID(id);",
      "right" : "return context.getPointerByID(id);",
      "info" : "ReturnStatement[18452-18486]:ReturnStatement[18452-18486]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18554-18560]:Modifier[18554-18560]"
    }, {
      "left" : "Pointer",
      "right" : "Pointer",
      "info" : "SimpleType[18561-18568]:SimpleType[18561-18568]"
    }, {
      "left" : "getPointerByKey",
      "right" : "getPointerByKey",
      "info" : "SimpleName[18569-18584]:SimpleName[18569-18584]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[18594-18615]:SingleVariableDeclaration[18594-18615]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[18625-18635]:SingleVariableDeclaration[18625-18635]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[18645-18657]:SingleVariableDeclaration[18645-18657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18664-18723]:Block[18664-18723]"
    }, {
      "left" : "return context.getPointerByKey(key, value);",
      "right" : "return context.getPointerByKey(key, value);",
      "info" : "ReturnStatement[18674-18717]:ReturnStatement[18674-18717]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18796-18802]:Modifier[18796-18802]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[18803-18809]:SimpleType[18803-18809]"
    }, {
      "left" : "asPath",
      "right" : "asPath",
      "info" : "SimpleName[18810-18816]:SimpleName[18810-18816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18819-19590]:Block[18819-19590]"
    }, {
      "left" : "if (parent != null && parent.isContainer())",
      "right" : "if (parent != null && parent.isContainer())",
      "info" : "IfStatement[18955-19046]:IfStatement[18955-19046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18999-19046]:Block[18999-19046]"
    }, {
      "left" : "return parent.asPath();",
      "right" : "return parent.asPath();",
      "info" : "ReturnStatement[19013-19036]:ReturnStatement[19013-19036]"
    }, {
      "left" : "StringBuffer buffer = new StringBuffer();",
      "right" : "StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[19056-19097]:VariableDeclarationStatement[19056-19097]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[19106-19181]:IfStatement[19106-19181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19126-19181]:Block[19126-19181]"
    }, {
      "left" : "buffer.append(parent.asPath());",
      "right" : "buffer.append(parent.asPath());",
      "info" : "ExpressionStatement[19140-19171]:ExpressionStatement[19140-19171]"
    }, {
      "left" : "if (buffer.length() == 0\n            || buffer.charAt(buffer.length() - 1) != '/')",
      "right" : "if (buffer.length() == 0\n            || buffer.charAt(buffer.length() - 1) != '/')",
      "info" : "IfStatement[19191-19317]:IfStatement[19191-19317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19274-19317]:Block[19274-19317]"
    }, {
      "left" : "buffer.append('/');",
      "right" : "buffer.append('/');",
      "info" : "ExpressionStatement[19288-19307]:ExpressionStatement[19288-19307]"
    }, {
      "left" : "if (attribute)",
      "right" : "if (attribute)",
      "info" : "IfStatement[19326-19384]:IfStatement[19326-19384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19341-19384]:Block[19341-19384]"
    }, {
      "left" : "buffer.append('@');",
      "right" : "buffer.append('@');",
      "info" : "ExpressionStatement[19355-19374]:ExpressionStatement[19355-19374]"
    }, {
      "left" : "buffer.append(getName());",
      "right" : "buffer.append(getName());",
      "info" : "ExpressionStatement[19393-19418]:ExpressionStatement[19393-19418]"
    }, {
      "left" : "if (index != WHOLE_COLLECTION && isCollection())",
      "right" : "if (index != WHOLE_COLLECTION && isCollection())",
      "info" : "IfStatement[19428-19550]:IfStatement[19428-19550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19477-19550]:Block[19477-19550]"
    }, {
      "left" : "buffer.append('[').append(index + 1).append(']');",
      "right" : "buffer.append('[').append(index + 1).append(']');",
      "info" : "ExpressionStatement[19491-19540]:ExpressionStatement[19491-19540]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[19559-19584]:ReturnStatement[19559-19584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19596-19602]:Modifier[19596-19602]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[19603-19609]:SimpleType[19603-19609]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[19610-19615]:SimpleName[19610-19615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19618-19993]:Block[19618-19993]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[19628-19966]:TryStatement[19628-19966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19632-19833]:Block[19632-19833]"
    }, {
      "left" : "NodePointer ptr = (NodePointer) super.clone();",
      "right" : "NodePointer ptr = (NodePointer) super.clone();",
      "info" : "VariableDeclarationStatement[19646-19692]:VariableDeclarationStatement[19646-19692]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[19705-19799]:IfStatement[19705-19799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19725-19799]:Block[19725-19799]"
    }, {
      "left" : "ptr.parent = (NodePointer) parent.clone();",
      "right" : "ptr.parent = (NodePointer) parent.clone();",
      "info" : "ExpressionStatement[19743-19785]:ExpressionStatement[19743-19785]"
    }, {
      "left" : "return ptr;",
      "right" : "return ptr;",
      "info" : "ReturnStatement[19812-19823]:ReturnStatement[19812-19823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19880-19966]:Block[19880-19966]"
    }, {
      "left" : "ex.printStackTrace();",
      "right" : "ex.printStackTrace();",
      "info" : "ExpressionStatement[19935-19956]:ExpressionStatement[19935-19956]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19975-19987]:ReturnStatement[19975-19987]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19999-20005]:Modifier[19999-20005]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[20006-20012]:SimpleType[20006-20012]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[20013-20021]:SimpleName[20013-20021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20024-20056]:Block[20024-20056]"
    }, {
      "left" : "return asPath();",
      "right" : "return asPath();",
      "info" : "ReturnStatement[20034-20050]:ReturnStatement[20034-20050]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20062-20068]:Modifier[20062-20068]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[20069-20072]:PrimitiveType[20069-20072]"
    }, {
      "left" : "compareTo",
      "right" : "compareTo",
      "info" : "SimpleName[20073-20082]:SimpleName[20073-20082]"
    }, {
      "left" : "Object object",
      "right" : "Object object",
      "info" : "SingleVariableDeclaration[20083-20096]:SingleVariableDeclaration[20083-20096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20098-20741]:Block[20098-20741]"
    }, {
      "left" : "NodePointer pointer = (NodePointer) object;",
      "right" : "NodePointer pointer = (NodePointer) object;",
      "info" : "VariableDeclarationStatement[20153-20196]:VariableDeclarationStatement[20153-20196]"
    }, {
      "left" : "if (parent == pointer.parent)",
      "right" : "if (parent == pointer.parent)",
      "info" : "IfStatement[20205-20334]:IfStatement[20205-20334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20235-20334]:Block[20235-20334]"
    }, {
      "left" : "return parent == null ? 0 : parent.compareChildNodePointers(this, pointer);",
      "right" : "return parent == null ? 0 : parent.compareChildNodePointers(this, pointer);",
      "info" : "ReturnStatement[20249-20324]:ReturnStatement[20249-20324]"
    }, {
      "left" : "int depth1 = 0;",
      "right" : "int depth1 = 0;",
      "info" : "VariableDeclarationStatement[20386-20401]:VariableDeclarationStatement[20386-20401]"
    }, {
      "left" : "NodePointer p1 = this;",
      "right" : "NodePointer p1 = this;",
      "info" : "VariableDeclarationStatement[20410-20432]:VariableDeclarationStatement[20410-20432]"
    }, {
      "left" : "while (p1 != null)",
      "right" : "while (p1 != null)",
      "info" : "WhileStatement[20441-20521]:WhileStatement[20441-20521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20460-20521]:Block[20460-20521]"
    }, {
      "left" : "depth1++;",
      "right" : "depth1++;",
      "info" : "ExpressionStatement[20474-20483]:ExpressionStatement[20474-20483]"
    }, {
      "left" : "p1 = p1.parent;",
      "right" : "p1 = p1.parent;",
      "info" : "ExpressionStatement[20496-20511]:ExpressionStatement[20496-20511]"
    }, {
      "left" : "int depth2 = 0;",
      "right" : "int depth2 = 0;",
      "info" : "VariableDeclarationStatement[20530-20545]:VariableDeclarationStatement[20530-20545]"
    }, {
      "left" : "NodePointer p2 = pointer;",
      "right" : "NodePointer p2 = pointer;",
      "info" : "VariableDeclarationStatement[20554-20579]:VariableDeclarationStatement[20554-20579]"
    }, {
      "left" : "while (p2 != null)",
      "right" : "while (p2 != null)",
      "info" : "WhileStatement[20588-20668]:WhileStatement[20588-20668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20607-20668]:Block[20607-20668]"
    }, {
      "left" : "depth2++;",
      "right" : "depth2++;",
      "info" : "ExpressionStatement[20621-20630]:ExpressionStatement[20621-20630]"
    }, {
      "left" : "p2 = p2.parent;",
      "right" : "p2 = p2.parent;",
      "info" : "ExpressionStatement[20643-20658]:ExpressionStatement[20643-20658]"
    }, {
      "left" : "return compareNodePointers(this, depth1, pointer, depth2);",
      "right" : "return compareNodePointers(this, depth1, pointer, depth2);",
      "info" : "ReturnStatement[20677-20735]:ReturnStatement[20677-20735]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20747-20754]:Modifier[20747-20754]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[20755-20758]:PrimitiveType[20755-20758]"
    }, {
      "left" : "compareNodePointers",
      "right" : "compareNodePointers",
      "info" : "SimpleName[20759-20778]:SimpleName[20759-20778]"
    }, {
      "left" : "NodePointer p1",
      "right" : "NodePointer p1",
      "info" : "SingleVariableDeclaration[20788-20802]:SingleVariableDeclaration[20788-20802]"
    }, {
      "left" : "int depth1",
      "right" : "int depth1",
      "info" : "SingleVariableDeclaration[20812-20822]:SingleVariableDeclaration[20812-20822]"
    }, {
      "left" : "NodePointer p2",
      "right" : "NodePointer p2",
      "info" : "SingleVariableDeclaration[20832-20846]:SingleVariableDeclaration[20832-20846]"
    }, {
      "left" : "int depth2",
      "right" : "int depth2",
      "info" : "SingleVariableDeclaration[20856-20866]:SingleVariableDeclaration[20856-20866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20873-21750]:Block[20873-21590]"
    }, {
      "left" : "if (depth1 < depth2)",
      "right" : "if (depth1 < depth2)",
      "info" : "IfStatement[20883-21027]:IfStatement[20883-21027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20904-21027]:Block[20904-21027]"
    }, {
      "left" : "int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);",
      "right" : "int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);",
      "info" : "VariableDeclarationStatement[20918-20981]:VariableDeclarationStatement[20918-20981]"
    }, {
      "left" : "return r == 0 ? -1 : r;",
      "right" : "return r == 0 ? -1 : r;",
      "info" : "ReturnStatement[20994-21017]:ReturnStatement[20994-21017]"
    }, {
      "left" : "if (depth1 > depth2)",
      "right" : "if (depth1 > depth2)",
      "info" : "IfStatement[21036-21179]:IfStatement[21036-21179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21057-21179]:Block[21057-21179]"
    }, {
      "left" : "int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);",
      "right" : "int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);",
      "info" : "VariableDeclarationStatement[21071-21134]:VariableDeclarationStatement[21071-21134]"
    }, {
      "left" : "return r == 0 ? 1 : r;",
      "right" : "return r == 0 ? 1 : r;",
      "info" : "ReturnStatement[21147-21169]:ReturnStatement[21147-21169]"
    }, {
      "left" : "if (p1 == null && p2 == null)",
      "right" : "if (p1 == null && p2 == null)",
      "info" : "IfStatement[21188-21251]:IfStatement[21188-21251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21218-21251]:Block[21218-21251]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[21232-21241]:ReturnStatement[21232-21241]"
    }, {
      "left" : "if (p1 != null && p1.equals(p2))",
      "right" : "if (p1 != null && p1.equals(p2))",
      "info" : "IfStatement[21261-21327]:IfStatement[21261-21327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21294-21327]:Block[21294-21327]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[21308-21317]:ReturnStatement[21308-21317]"
    }, {
      "left" : "if (depth1 == 1)",
      "right" : "if (depth1 == 1)",
      "info" : "IfStatement[21337-21547]:IfStatement[21337-21387]"
    }, {
      "left" : "int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);",
      "right" : "int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);",
      "info" : "VariableDeclarationStatement[21556-21630]:VariableDeclarationStatement[21396-21470]"
    }, {
      "left" : "if (r != 0)",
      "right" : "if (r != 0)",
      "info" : "IfStatement[21639-21684]:IfStatement[21479-21524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21651-21684]:Block[21491-21524]"
    }, {
      "left" : "return r;",
      "right" : "return r;",
      "info" : "ReturnStatement[21665-21674]:ReturnStatement[21505-21514]"
    }, {
      "left" : "return p1.parent.compareChildNodePointers(p1, p2);",
      "right" : "return p1.parent.compareChildNodePointers(p1, p2);",
      "info" : "ReturnStatement[21694-21744]:ReturnStatement[21534-21584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21831-21837]:Modifier[21671-21677]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21838-21842]:PrimitiveType[21678-21682]"
    }, {
      "left" : "printPointerChain",
      "right" : "printPointerChain",
      "info" : "SimpleName[21843-21860]:SimpleName[21683-21700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21863-21899]:Block[21703-21739]"
    }, {
      "left" : "printDeep(this, \"\");",
      "right" : "printDeep(this, \"\");",
      "info" : "ExpressionStatement[21873-21893]:ExpressionStatement[21713-21733]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21905-21912]:Modifier[21745-21752]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21913-21919]:Modifier[21753-21759]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21920-21924]:PrimitiveType[21760-21764]"
    }, {
      "left" : "printDeep",
      "right" : "printDeep",
      "info" : "SimpleName[21925-21934]:SimpleName[21765-21774]"
    }, {
      "left" : "NodePointer pointer",
      "right" : "NodePointer pointer",
      "info" : "SingleVariableDeclaration[21935-21954]:SingleVariableDeclaration[21775-21794]"
    }, {
      "left" : "String indent",
      "right" : "String indent",
      "info" : "SingleVariableDeclaration[21956-21969]:SingleVariableDeclaration[21796-21809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21971-22607]:Block[21811-22447]"
    }, {
      "left" : "if (indent.length() == 0)",
      "right" : "if (indent.length() == 0)",
      "info" : "IfStatement[21981-22457]:IfStatement[21821-22297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22007-22213]:Block[21847-22053]"
    }, {
      "left" : "System.err.println(\n                \"POINTER: \"\n                    + pointer\n                    + \"(\"\n                    + pointer.getClass().getName()\n                    + \")\");",
      "right" : "System.err.println(\n                \"POINTER: \"\n                    + pointer\n                    + \"(\"\n                    + pointer.getClass().getName()\n                    + \")\");",
      "info" : "ExpressionStatement[22021-22203]:ExpressionStatement[21861-22043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22227-22457]:Block[22067-22297]"
    }, {
      "left" : "System.err.println(\n                indent\n                    + \" of \"\n                    + pointer\n                    + \"(\"\n                    + pointer.getClass().getName()\n                    + \")\");",
      "right" : "System.err.println(\n                indent\n                    + \" of \"\n                    + pointer\n                    + \"(\"\n                    + pointer.getClass().getName()\n                    + \")\");",
      "info" : "ExpressionStatement[22241-22447]:ExpressionStatement[22081-22287]"
    }, {
      "left" : "if (pointer.getImmediateParentPointer() != null)",
      "right" : "if (pointer.getImmediateParentPointer() != null)",
      "info" : "IfStatement[22466-22601]:IfStatement[22306-22441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22515-22601]:Block[22355-22441]"
    }, {
      "left" : "printDeep(pointer.getImmediateParentPointer(), indent + \"  \");",
      "right" : "printDeep(pointer.getImmediateParentPointer(), indent + \"  \");",
      "info" : "ExpressionStatement[22529-22591]:ExpressionStatement[22369-22431]"
    } ]
  },
  "interFileMappings" : { }
}