{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "right" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "info" : "MethodDeclaration[1403-1494]:MethodDeclaration[1403-1494]"
    }, {
      "left" : "public final Object computeValue(EvalContext context)",
      "right" : "public final Object computeValue(EvalContext context)",
      "info" : "MethodDeclaration[1500-1695]:MethodDeclaration[1500-1695]"
    }, {
      "left" : "protected final int getPrecedence()",
      "right" : "protected final int getPrecedence()",
      "info" : "MethodDeclaration[1701-1762]:MethodDeclaration[1701-1762]"
    }, {
      "left" : "protected final boolean isSymmetric()",
      "right" : "protected final boolean isSymmetric()",
      "info" : "MethodDeclaration[1768-1835]:MethodDeclaration[1768-1835]"
    }, {
      "left" : "protected abstract boolean evaluateCompare(int compare);",
      "right" : "protected abstract boolean evaluateCompare(int compare);",
      "info" : "MethodDeclaration[1841-1897]:MethodDeclaration[1841-1897]"
    }, {
      "left" : "private Object reduce(Object o)",
      "right" : "private Object reduce(Object o)",
      "info" : "MethodDeclaration[2761-3020]:MethodDeclaration[2897-3156]"
    }, {
      "left" : "private boolean containsMatch(Iterator it, Object value)",
      "right" : "private boolean containsMatch(Iterator it, Object value)",
      "info" : "MethodDeclaration[3026-3279]:MethodDeclaration[3162-3415]"
    }, {
      "left" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "right" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "info" : "MethodDeclaration[3285-3629]:MethodDeclaration[3421-3765]"
    } ],
    "mappings" : [
 {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1403-1412]:Modifier[1403-1412]"
    }, {
      "left" : "CoreOperationRelationalExpression",
      "right" : "CoreOperationRelationalExpression",
      "info" : "SimpleName[1413-1446]:SimpleName[1413-1446]"
    }, {
      "left" : "Expression[] args",
      "right" : "Expression[] args",
      "info" : "SingleVariableDeclaration[1447-1464]:SingleVariableDeclaration[1447-1464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1466-1494]:Block[1466-1494]"
    }, {
      "left" : "super(args);",
      "right" : "super(args);",
      "info" : "SuperConstructorInvocation[1476-1488]:SuperConstructorInvocation[1476-1488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1500-1506]:Modifier[1500-1506]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1507-1512]:Modifier[1507-1512]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[1513-1519]:SimpleType[1513-1519]"
    }, {
      "left" : "computeValue",
      "right" : "computeValue",
      "info" : "SimpleName[1520-1532]:SimpleName[1520-1532]"
    }, {
      "left" : "EvalContext context",
      "right" : "EvalContext context",
      "info" : "SingleVariableDeclaration[1533-1552]:SingleVariableDeclaration[1533-1552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1554-1695]:Block[1554-1695]"
    }, {
      "left" : "return compute(args[0].computeValue(context), args[1]\n                .computeValue(context)) ? Boolean.TRUE : Boolean.FALSE;",
      "right" : "return compute(args[0].computeValue(context), args[1]\n                .computeValue(context)) ? Boolean.TRUE : Boolean.FALSE;",
      "info" : "ReturnStatement[1564-1689]:ReturnStatement[1564-1689]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1701-1710]:Modifier[1701-1710]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1711-1716]:Modifier[1711-1716]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[1717-1720]:PrimitiveType[1717-1720]"
    }, {
      "left" : "getPrecedence",
      "right" : "getPrecedence",
      "info" : "SimpleName[1721-1734]:SimpleName[1721-1734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1737-1762]:Block[1737-1762]"
    }, {
      "left" : "return 3;",
      "right" : "return 3;",
      "info" : "ReturnStatement[1747-1756]:ReturnStatement[1747-1756]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1768-1777]:Modifier[1768-1777]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1778-1783]:Modifier[1778-1783]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1784-1791]:PrimitiveType[1784-1791]"
    }, {
      "left" : "isSymmetric",
      "right" : "isSymmetric",
      "info" : "SimpleName[1792-1803]:SimpleName[1792-1803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1806-1835]:Block[1806-1835]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1816-1829]:ReturnStatement[1816-1829]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1841-1850]:Modifier[1841-1850]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1851-1859]:Modifier[1851-1859]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1860-1867]:PrimitiveType[1860-1867]"
    }, {
      "left" : "evaluateCompare",
      "right" : "evaluateCompare",
      "info" : "SimpleName[1868-1883]:SimpleName[1868-1883]"
    }, {
      "left" : "int compare",
      "right" : "int compare",
      "info" : "SingleVariableDeclaration[1884-1895]:SingleVariableDeclaration[1884-1895]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2761-2768]:Modifier[2897-2904]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[2769-2775]:SimpleType[2905-2911]"
    }, {
      "left" : "reduce",
      "right" : "reduce",
      "info" : "SimpleName[2776-2782]:SimpleName[2912-2918]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[2783-2791]:SingleVariableDeclaration[2919-2927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2793-3020]:Block[2929-3156]"
    }, {
      "left" : "if (o instanceof SelfContext)",
      "right" : "if (o instanceof SelfContext)",
      "info" : "IfStatement[2803-2902]:IfStatement[2939-3038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2833-2902]:Block[2969-3038]"
    }, {
      "left" : "o = ((EvalContext) o).getSingleNodePointer();",
      "right" : "o = ((EvalContext) o).getSingleNodePointer();",
      "info" : "ExpressionStatement[2847-2892]:ExpressionStatement[2983-3028]"
    }, {
      "left" : "if (o instanceof Collection)",
      "right" : "if (o instanceof Collection)",
      "info" : "IfStatement[2911-2996]:IfStatement[3047-3132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2940-2996]:Block[3076-3132]"
    }, {
      "left" : "o = ((Collection) o).iterator();",
      "right" : "o = ((Collection) o).iterator();",
      "info" : "ExpressionStatement[2954-2986]:ExpressionStatement[3090-3122]"
    }, {
      "left" : "return o;",
      "right" : "return o;",
      "info" : "ReturnStatement[3005-3014]:ReturnStatement[3141-3150]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3026-3033]:Modifier[3162-3169]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3034-3041]:PrimitiveType[3170-3177]"
    }, {
      "left" : "containsMatch",
      "right" : "containsMatch",
      "info" : "SimpleName[3042-3055]:SimpleName[3178-3191]"
    }, {
      "left" : "Iterator it",
      "right" : "Iterator it",
      "info" : "SingleVariableDeclaration[3056-3067]:SingleVariableDeclaration[3192-3203]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[3069-3081]:SingleVariableDeclaration[3205-3217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3083-3279]:Block[3219-3415]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[3093-3251]:WhileStatement[3229-3387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3114-3251]:Block[3250-3387]"
    }, {
      "left" : "Object element = it.next();",
      "right" : "Object element = it.next();",
      "info" : "VariableDeclarationStatement[3128-3155]:VariableDeclarationStatement[3264-3291]"
    }, {
      "left" : "if (compute(element, value))",
      "right" : "if (compute(element, value))",
      "info" : "IfStatement[3168-3241]:IfStatement[3304-3377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3197-3241]:Block[3333-3377]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3215-3227]:ReturnStatement[3351-3363]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3260-3273]:ReturnStatement[3396-3409]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3285-3292]:Modifier[3421-3428]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3293-3300]:PrimitiveType[3429-3436]"
    }, {
      "left" : "findMatch",
      "right" : "findMatch",
      "info" : "SimpleName[3301-3310]:SimpleName[3437-3446]"
    }, {
      "left" : "Iterator lit",
      "right" : "Iterator lit",
      "info" : "SingleVariableDeclaration[3311-3323]:SingleVariableDeclaration[3447-3459]"
    }, {
      "left" : "Iterator rit",
      "right" : "Iterator rit",
      "info" : "SingleVariableDeclaration[3325-3337]:SingleVariableDeclaration[3461-3473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3339-3629]:Block[3475-3765]"
    }, {
      "left" : "HashSet left = new HashSet();",
      "right" : "HashSet left = new HashSet();",
      "info" : "VariableDeclarationStatement[3349-3378]:VariableDeclarationStatement[3485-3514]"
    }, {
      "left" : "while (lit.hasNext())",
      "right" : "while (lit.hasNext())",
      "info" : "WhileStatement[3387-3454]:WhileStatement[3523-3590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3409-3454]:Block[3545-3590]"
    }, {
      "left" : "left.add(lit.next());",
      "right" : "left.add(lit.next());",
      "info" : "ExpressionStatement[3423-3444]:ExpressionStatement[3559-3580]"
    }, {
      "left" : "while (rit.hasNext())",
      "right" : "while (rit.hasNext())",
      "info" : "WhileStatement[3463-3601]:WhileStatement[3599-3737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3485-3601]:Block[3621-3737]"
    }, {
      "left" : "if (containsMatch(left.iterator(), rit.next()))",
      "right" : "if (containsMatch(left.iterator(), rit.next()))",
      "info" : "IfStatement[3499-3591]:IfStatement[3635-3727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3547-3591]:Block[3683-3727]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3565-3577]:ReturnStatement[3701-3713]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3610-3623]:ReturnStatement[3746-3759]"
    } ]
  },
  "interFileMappings" : { }
}