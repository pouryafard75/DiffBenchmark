{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected final static int C_DEFAULT = 0;",
      "right" : "protected final static int C_DEFAULT = 0;",
      "info" : "FieldDeclaration[923-964]:FieldDeclaration[923-964]"
    }, {
      "left" : "protected final static int C_STRING = 1;",
      "right" : "protected final static int C_STRING = 1;",
      "info" : "FieldDeclaration[969-1009]:FieldDeclaration[969-1009]"
    }, {
      "left" : "protected final static int C_INT = 2;",
      "right" : "protected final static int C_INT = 2;",
      "info" : "FieldDeclaration[1014-1051]:FieldDeclaration[1014-1051]"
    }, {
      "left" : "protected final static int C_LONG = 3;",
      "right" : "protected final static int C_LONG = 3;",
      "info" : "FieldDeclaration[1056-1094]:FieldDeclaration[1056-1094]"
    }, {
      "left" : "protected final static int C_DOUBLE = 4;",
      "right" : "protected final static int C_DOUBLE = 4;",
      "info" : "FieldDeclaration[1099-1139]:FieldDeclaration[1099-1139]"
    }, {
      "left" : "protected final static int C_BOOLEAN = 5;",
      "right" : "protected final static int C_BOOLEAN = 5;",
      "info" : "FieldDeclaration[1144-1185]:FieldDeclaration[1144-1185]"
    }, {
      "left" : "protected final static int C_DELEGATE = 6;",
      "right" : "protected final static int C_DELEGATE = 6;",
      "info" : "FieldDeclaration[1190-1232]:FieldDeclaration[1190-1232]"
    }, {
      "left" : "protected final static int C_PROPS = 7;",
      "right" : "protected final static int C_PROPS = 7;",
      "info" : "FieldDeclaration[1237-1276]:FieldDeclaration[1237-1276]"
    }, {
      "left" : "protected final static String[] TYPE_DESCS = new String[] {\n        \"default\",\n        \"String\", \"int\", \"long\", \"double\", \"boolean\",\n        \"delegate\", \"property-based\"\n    };",
      "right" : "protected final static String[] TYPE_DESCS = new String[] {\n        \"default\",\n        \"String\", \"int\", \"long\", \"double\", \"boolean\",\n        \"delegate\", \"property-based\"\n    };",
      "info" : "FieldDeclaration[1282-1458]:FieldDeclaration[1282-1458]"
    }, {
      "left" : "final protected BeanDescription _beanDesc;",
      "right" : "final protected BeanDescription _beanDesc;",
      "info" : "FieldDeclaration[1499-1541]:FieldDeclaration[1499-1541]"
    }, {
      "left" : "final protected boolean _canFixAccess;",
      "right" : "final protected boolean _canFixAccess;",
      "info" : "FieldDeclaration[1547-1585]:FieldDeclaration[1547-1585]"
    }, {
      "left" : "protected final AnnotatedWithParams[] _creators = new AnnotatedWithParams[8];",
      "right" : "protected final AnnotatedWithParams[] _creators = new AnnotatedWithParams[8];",
      "info" : "FieldDeclaration[1591-1758]:FieldDeclaration[1591-1758]"
    }, {
      "left" : "protected int _explicitCreators = 0;",
      "right" : "protected int _explicitCreators = 0;",
      "info" : "FieldDeclaration[1764-2006]:FieldDeclaration[1764-2006]"
    }, {
      "left" : "protected boolean _hasNonDefaultCreator = false;",
      "right" : "protected boolean _hasNonDefaultCreator = false;",
      "info" : "FieldDeclaration[2016-2064]:FieldDeclaration[2016-2064]"
    }, {
      "left" : "protected CreatorProperty[] _delegateArgs;",
      "right" : "protected CreatorProperty[] _delegateArgs;",
      "info" : "FieldDeclaration[2135-2177]:FieldDeclaration[2135-2177]"
    }, {
      "left" : "protected CreatorProperty[] _propertyBasedArgs;",
      "right" : "protected CreatorProperty[] _propertyBasedArgs;",
      "info" : "FieldDeclaration[2187-2234]:FieldDeclaration[2187-2234]"
    }, {
      "left" : "protected AnnotatedParameter _incompleteParameter;",
      "right" : "protected AnnotatedParameter _incompleteParameter;",
      "info" : "FieldDeclaration[2240-2290]:FieldDeclaration[2240-2290]"
    }, {
      "left" : "public CreatorCollector(BeanDescription beanDesc, boolean canFixAccess)",
      "right" : "public CreatorCollector(BeanDescription beanDesc, boolean canFixAccess)",
      "info" : "MethodDeclaration[2462-2613]:MethodDeclaration[2462-2613]"
    }, {
      "left" : "public ValueInstantiator constructValueInstantiator(DeserializationConfig config)",
      "right" : "public ValueInstantiator constructValueInstantiator(DeserializationConfig config)",
      "info" : "MethodDeclaration[2619-5104]:MethodDeclaration[2619-5104]"
    }, {
      "left" : "public void setDefaultCreator(AnnotatedWithParams creator)",
      "right" : "public void setDefaultCreator(AnnotatedWithParams creator)",
      "info" : "MethodDeclaration[5277-5770]:MethodDeclaration[5277-5770]"
    }, {
      "left" : "public void addStringCreator(AnnotatedWithParams creator, boolean explicit)",
      "right" : "public void addStringCreator(AnnotatedWithParams creator, boolean explicit)",
      "info" : "MethodDeclaration[5780-5914]:MethodDeclaration[5780-5914]"
    }, {
      "left" : "public void addIntCreator(AnnotatedWithParams creator, boolean explicit)",
      "right" : "public void addIntCreator(AnnotatedWithParams creator, boolean explicit)",
      "info" : "MethodDeclaration[5919-6047]:MethodDeclaration[5919-6047]"
    }, {
      "left" : "public void addLongCreator(AnnotatedWithParams creator, boolean explicit)",
      "right" : "public void addLongCreator(AnnotatedWithParams creator, boolean explicit)",
      "info" : "MethodDeclaration[6052-6182]:MethodDeclaration[6052-6182]"
    }, {
      "left" : "public void addDoubleCreator(AnnotatedWithParams creator, boolean explicit)",
      "right" : "public void addDoubleCreator(AnnotatedWithParams creator, boolean explicit)",
      "info" : "MethodDeclaration[6187-6321]:MethodDeclaration[6187-6321]"
    }, {
      "left" : "public void addBooleanCreator(AnnotatedWithParams creator, boolean explicit)",
      "right" : "public void addBooleanCreator(AnnotatedWithParams creator, boolean explicit)",
      "info" : "MethodDeclaration[6326-6462]:MethodDeclaration[6326-6462]"
    }, {
      "left" : "public void addDelegatingCreator(AnnotatedWithParams creator, boolean explicit,\n            CreatorProperty[] injectables)",
      "right" : "public void addDelegatingCreator(AnnotatedWithParams creator, boolean explicit,\n            CreatorProperty[] injectables)",
      "info" : "MethodDeclaration[6468-6692]:MethodDeclaration[6468-6692]"
    }, {
      "left" : "public void addPropertyCreator(AnnotatedWithParams creator, boolean explicit,\n            CreatorProperty[] properties)",
      "right" : "public void addPropertyCreator(AnnotatedWithParams creator, boolean explicit,\n            CreatorProperty[] properties)",
      "info" : "MethodDeclaration[6702-7801]:MethodDeclaration[6702-7801]"
    }, {
      "left" : "public void addIncompeteParameter(AnnotatedParameter parameter)",
      "right" : "public void addIncompeteParameter(AnnotatedParameter parameter)",
      "info" : "MethodDeclaration[7807-7978]:MethodDeclaration[7807-7978]"
    }, {
      "left" : "// since 2.5\n    public void addStringCreator(AnnotatedWithParams creator)",
      "right" : "// since 2.5\n    public void addStringCreator(AnnotatedWithParams creator)",
      "info" : "MethodDeclaration[8064-8200]:MethodDeclaration[8064-8200]"
    }, {
      "left" : "// since 2.5\n    public void addIntCreator(AnnotatedWithParams creator)",
      "right" : "// since 2.5\n    public void addIntCreator(AnnotatedWithParams creator)",
      "info" : "MethodDeclaration[8205-8339]:MethodDeclaration[8205-8339]"
    }, {
      "left" : "// since 2.5\n    public void addLongCreator(AnnotatedWithParams creator)",
      "right" : "// since 2.5\n    public void addLongCreator(AnnotatedWithParams creator)",
      "info" : "MethodDeclaration[8344-8479]:MethodDeclaration[8344-8479]"
    }, {
      "left" : "// since 2.5\n    public void addDoubleCreator(AnnotatedWithParams creator)",
      "right" : "// since 2.5\n    public void addDoubleCreator(AnnotatedWithParams creator)",
      "info" : "MethodDeclaration[8484-8621]:MethodDeclaration[8484-8621]"
    }, {
      "left" : "// since 2.5\n    public void addBooleanCreator(AnnotatedWithParams creator)",
      "right" : "// since 2.5\n    public void addBooleanCreator(AnnotatedWithParams creator)",
      "info" : "MethodDeclaration[8626-8764]:MethodDeclaration[8626-8764]"
    }, {
      "left" : "// since 2.5\n    public void addDelegatingCreator(AnnotatedWithParams creator, CreatorProperty[] injectables)",
      "right" : "// since 2.5\n    public void addDelegatingCreator(AnnotatedWithParams creator, CreatorProperty[] injectables)",
      "info" : "MethodDeclaration[8770-8958]:MethodDeclaration[8770-8958]"
    }, {
      "left" : "// since 2.5\n    public void addPropertyCreator(AnnotatedWithParams creator, CreatorProperty[] properties)",
      "right" : "// since 2.5\n    public void addPropertyCreator(AnnotatedWithParams creator, CreatorProperty[] properties)",
      "info" : "MethodDeclaration[8964-9146]:MethodDeclaration[8964-9146]"
    }, {
      "left" : "// since 2.5, remove from 2.6\n    protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, int typeIndex)",
      "right" : "// since 2.5, remove from 2.6\n    protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, int typeIndex)",
      "info" : "MethodDeclaration[9152-9376]:MethodDeclaration[9152-9376]"
    }, {
      "left" : "public boolean hasDefaultCreator()",
      "right" : "public boolean hasDefaultCreator()",
      "info" : "MethodDeclaration[9547-9668]:MethodDeclaration[9547-9668]"
    }, {
      "left" : "private <T extends AnnotatedMember> T _fixAccess(T member)",
      "right" : "private <T extends AnnotatedMember> T _fixAccess(T member)",
      "info" : "MethodDeclaration[9840-10063]:MethodDeclaration[9840-10063]"
    }, {
      "left" : "Vanilla",
      "right" : "Vanilla",
      "info" : "TypeDeclaration[11625-13031]:TypeDeclaration[12048-13454]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[11750-11798]:FieldDeclaration[12173-12221]"
    }, {
      "left" : "public final static int TYPE_COLLECTION = 1;",
      "right" : "public final static int TYPE_COLLECTION = 1;",
      "info" : "FieldDeclaration[11808-11852]:FieldDeclaration[12231-12275]"
    }, {
      "left" : "public final static int TYPE_MAP = 2;",
      "right" : "public final static int TYPE_MAP = 2;",
      "info" : "FieldDeclaration[11861-11898]:FieldDeclaration[12284-12321]"
    }, {
      "left" : "public final static int TYPE_HASH_MAP = 3;",
      "right" : "public final static int TYPE_HASH_MAP = 3;",
      "info" : "FieldDeclaration[11907-11949]:FieldDeclaration[12330-12372]"
    }, {
      "left" : "private final int _type;",
      "right" : "private final int _type;",
      "info" : "FieldDeclaration[11959-11983]:FieldDeclaration[12382-12406]"
    }, {
      "left" : "public Vanilla(int t)",
      "right" : "public Vanilla(int t)",
      "info" : "MethodDeclaration[12001-12057]:MethodDeclaration[12424-12480]"
    }, {
      "left" : "public String getValueTypeDesc()",
      "right" : "public String getValueTypeDesc()",
      "info" : "MethodDeclaration[12084-12429]:MethodDeclaration[12507-12852]"
    }, {
      "left" : "public boolean canInstantiate()",
      "right" : "public boolean canInstantiate()",
      "info" : "MethodDeclaration[12439-12505]:MethodDeclaration[12862-12928]"
    }, {
      "left" : "public boolean canCreateUsingDefault()",
      "right" : "public boolean canCreateUsingDefault()",
      "info" : "MethodDeclaration[12515-12589]:MethodDeclaration[12938-13012]"
    }, {
      "left" : "public Object createUsingDefault(DeserializationContext ctxt) throws IOException",
      "right" : "public Object createUsingDefault(DeserializationContext ctxt) throws IOException",
      "info" : "MethodDeclaration[12599-13025]:MethodDeclaration[13022-13448]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2538-2613]:Block[2538-2613]"
    }, {
      "left" : "_beanDesc = beanDesc;",
      "right" : "_beanDesc = beanDesc;",
      "info" : "ExpressionStatement[2548-2569]:ExpressionStatement[2548-2569]"
    }, {
      "left" : "_canFixAccess = canFixAccess;",
      "right" : "_canFixAccess = canFixAccess;",
      "info" : "ExpressionStatement[2578-2607]:ExpressionStatement[2578-2607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2705-5104]:Block[2705-5104]"
    }, {
      "left" : "JavaType delegateType;",
      "right" : "JavaType delegateType;",
      "info" : "VariableDeclarationStatement[2715-2737]:VariableDeclarationStatement[2715-2737]"
    }, {
      "left" : "boolean maybeVanilla = !_hasNonDefaultCreator;",
      "right" : "boolean maybeVanilla = !_hasNonDefaultCreator;",
      "info" : "VariableDeclarationStatement[2746-2792]:VariableDeclarationStatement[2746-2792]"
    }, {
      "left" : "if (maybeVanilla || (_creators[C_DELEGATE] == null))",
      "right" : "if (maybeVanilla || (_creators[C_DELEGATE] == null))",
      "info" : "IfStatement[2802-3461]:IfStatement[2802-3461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2855-2899]:Block[2855-2899]"
    }, {
      "left" : "delegateType = null;",
      "right" : "delegateType = null;",
      "info" : "ExpressionStatement[2869-2889]:ExpressionStatement[2869-2889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2905-3461]:Block[2905-3461]"
    }, {
      "left" : "int ix = 0;",
      "right" : "int ix = 0;",
      "info" : "VariableDeclarationStatement[2955-2966]:VariableDeclarationStatement[2955-2966]"
    }, {
      "left" : "if (_delegateArgs != null)",
      "right" : "if (_delegateArgs != null)",
      "info" : "IfStatement[2979-3282]:IfStatement[2979-3282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3006-3282]:Block[3006-3282]"
    }, {
      "left" : "for (int i = 0, len = _delegateArgs.length; i < len; ++i)",
      "right" : "for (int i = 0, len = _delegateArgs.length; i < len; ++i)",
      "info" : "ForStatement[3024-3268]:ForStatement[3024-3268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3082-3268]:Block[3082-3268]"
    }, {
      "left" : "if (_delegateArgs[i] == null)",
      "right" : "if (_delegateArgs[i] == null)",
      "info" : "IfStatement[3104-3250]:IfStatement[3104-3250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3134-3250]:Block[3134-3250]"
    }, {
      "left" : "ix = i;",
      "right" : "ix = i;",
      "info" : "ExpressionStatement[3190-3197]:ExpressionStatement[3190-3197]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3222-3228]:BreakStatement[3222-3228]"
    }, {
      "left" : "TypeBindings bindings = _beanDesc.bindingsForBeanType();",
      "right" : "TypeBindings bindings = _beanDesc.bindingsForBeanType();",
      "info" : "VariableDeclarationStatement[3295-3351]:VariableDeclarationStatement[3295-3351]"
    }, {
      "left" : "delegateType = bindings.resolveType(_creators[C_DELEGATE].getGenericParameterType(ix));",
      "right" : "delegateType = bindings.resolveType(_creators[C_DELEGATE].getGenericParameterType(ix));",
      "info" : "ExpressionStatement[3364-3451]:ExpressionStatement[3364-3451]"
    }, {
      "left" : "final JavaType type = _beanDesc.getType();",
      "right" : "final JavaType type = _beanDesc.getType();",
      "info" : "VariableDeclarationStatement[3471-3513]:VariableDeclarationStatement[3471-3513]"
    }, {
      "left" : "maybeVanilla &= !_hasNonDefaultCreator;",
      "right" : "maybeVanilla &= !_hasNonDefaultCreator;",
      "info" : "ExpressionStatement[3672-3711]:ExpressionStatement[3672-3711]"
    }, {
      "left" : "if (maybeVanilla)",
      "right" : "if (maybeVanilla)",
      "info" : "IfStatement[3721-4437]:IfStatement[3721-4437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3739-4437]:Block[3739-4437]"
    }, {
      "left" : "final Class<?> rawType = type.getRawClass();",
      "right" : "final Class<?> rawType = type.getRawClass();",
      "info" : "VariableDeclarationStatement[3947-3991]:VariableDeclarationStatement[3947-3991]"
    }, {
      "left" : "if (rawType == Collection.class || rawType == List.class || rawType == ArrayList.class)",
      "right" : "if (rawType == Collection.class || rawType == List.class || rawType == ArrayList.class)",
      "info" : "IfStatement[4004-4168]:IfStatement[4004-4168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4092-4168]:Block[4092-4168]"
    }, {
      "left" : "return new Vanilla(Vanilla.TYPE_COLLECTION);",
      "right" : "return new Vanilla(Vanilla.TYPE_COLLECTION);",
      "info" : "ReturnStatement[4110-4154]:ReturnStatement[4110-4154]"
    }, {
      "left" : "if (rawType == Map.class || rawType == LinkedHashMap.class)",
      "right" : "if (rawType == Map.class || rawType == LinkedHashMap.class)",
      "info" : "IfStatement[4181-4310]:IfStatement[4181-4310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4241-4310]:Block[4241-4310]"
    }, {
      "left" : "return new Vanilla(Vanilla.TYPE_MAP);",
      "right" : "return new Vanilla(Vanilla.TYPE_MAP);",
      "info" : "ReturnStatement[4259-4296]:ReturnStatement[4259-4296]"
    }, {
      "left" : "if (rawType == HashMap.class)",
      "right" : "if (rawType == HashMap.class)",
      "info" : "IfStatement[4323-4427]:IfStatement[4323-4427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4353-4427]:Block[4353-4427]"
    }, {
      "left" : "return new Vanilla(Vanilla.TYPE_HASH_MAP);",
      "right" : "return new Vanilla(Vanilla.TYPE_HASH_MAP);",
      "info" : "ReturnStatement[4371-4413]:ReturnStatement[4371-4413]"
    }, {
      "left" : "StdValueInstantiator inst = new StdValueInstantiator(config, type);",
      "right" : "StdValueInstantiator inst = new StdValueInstantiator(config, type);",
      "info" : "VariableDeclarationStatement[4455-4522]:VariableDeclarationStatement[4455-4522]"
    }, {
      "left" : "inst.configureFromObjectSettings(_creators[C_DEFAULT],\n                _creators[C_DELEGATE], delegateType, _delegateArgs,\n                _creators[C_PROPS], _propertyBasedArgs);",
      "right" : "inst.configureFromObjectSettings(_creators[C_DEFAULT],\n                _creators[C_DELEGATE], delegateType, _delegateArgs,\n                _creators[C_PROPS], _propertyBasedArgs);",
      "info" : "ExpressionStatement[4531-4710]:ExpressionStatement[4531-4710]"
    }, {
      "left" : "inst.configureFromStringCreator(_creators[C_STRING]);",
      "right" : "inst.configureFromStringCreator(_creators[C_STRING]);",
      "info" : "ExpressionStatement[4719-4772]:ExpressionStatement[4719-4772]"
    }, {
      "left" : "inst.configureFromIntCreator(_creators[C_INT]);",
      "right" : "inst.configureFromIntCreator(_creators[C_INT]);",
      "info" : "ExpressionStatement[4781-4828]:ExpressionStatement[4781-4828]"
    }, {
      "left" : "inst.configureFromLongCreator(_creators[C_LONG]);",
      "right" : "inst.configureFromLongCreator(_creators[C_LONG]);",
      "info" : "ExpressionStatement[4837-4886]:ExpressionStatement[4837-4886]"
    }, {
      "left" : "inst.configureFromDoubleCreator(_creators[C_DOUBLE]);",
      "right" : "inst.configureFromDoubleCreator(_creators[C_DOUBLE]);",
      "info" : "ExpressionStatement[4895-4948]:ExpressionStatement[4895-4948]"
    }, {
      "left" : "inst.configureFromBooleanCreator(_creators[C_BOOLEAN]);",
      "right" : "inst.configureFromBooleanCreator(_creators[C_BOOLEAN]);",
      "info" : "ExpressionStatement[4957-5012]:ExpressionStatement[4957-5012]"
    }, {
      "left" : "inst.configureIncompleteParameter(_incompleteParameter);",
      "right" : "inst.configureIncompleteParameter(_incompleteParameter);",
      "info" : "ExpressionStatement[5021-5077]:ExpressionStatement[5021-5077]"
    }, {
      "left" : "return inst;",
      "right" : "return inst;",
      "info" : "ReturnStatement[5086-5098]:ReturnStatement[5086-5098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5711-5770]:Block[5711-5770]"
    }, {
      "left" : "_creators[C_DEFAULT] = _fixAccess(creator);",
      "right" : "_creators[C_DEFAULT] = _fixAccess(creator);",
      "info" : "ExpressionStatement[5721-5764]:ExpressionStatement[5721-5764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5856-5914]:Block[5856-5914]"
    }, {
      "left" : "verifyNonDup(creator, C_STRING, explicit);",
      "right" : "verifyNonDup(creator, C_STRING, explicit);",
      "info" : "ExpressionStatement[5866-5908]:ExpressionStatement[5866-5908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5992-6047]:Block[5992-6047]"
    }, {
      "left" : "verifyNonDup(creator, C_INT, explicit);",
      "right" : "verifyNonDup(creator, C_INT, explicit);",
      "info" : "ExpressionStatement[6002-6041]:ExpressionStatement[6002-6041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6126-6182]:Block[6126-6182]"
    }, {
      "left" : "verifyNonDup(creator, C_LONG, explicit);",
      "right" : "verifyNonDup(creator, C_LONG, explicit);",
      "info" : "ExpressionStatement[6136-6176]:ExpressionStatement[6136-6176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6263-6321]:Block[6263-6321]"
    }, {
      "left" : "verifyNonDup(creator, C_DOUBLE, explicit);",
      "right" : "verifyNonDup(creator, C_DOUBLE, explicit);",
      "info" : "ExpressionStatement[6273-6315]:ExpressionStatement[6273-6315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6403-6462]:Block[6403-6462]"
    }, {
      "left" : "verifyNonDup(creator, C_BOOLEAN, explicit);",
      "right" : "verifyNonDup(creator, C_BOOLEAN, explicit);",
      "info" : "ExpressionStatement[6413-6456]:ExpressionStatement[6413-6456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6595-6692]:Block[6595-6692]"
    }, {
      "left" : "verifyNonDup(creator, C_DELEGATE, explicit);",
      "right" : "verifyNonDup(creator, C_DELEGATE, explicit);",
      "info" : "ExpressionStatement[6605-6649]:ExpressionStatement[6605-6649]"
    }, {
      "left" : "_delegateArgs = injectables;",
      "right" : "_delegateArgs = injectables;",
      "info" : "ExpressionStatement[6658-6686]:ExpressionStatement[6658-6686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6826-7801]:Block[6826-7801]"
    }, {
      "left" : "verifyNonDup(creator, C_PROPS, explicit);",
      "right" : "verifyNonDup(creator, C_PROPS, explicit);",
      "info" : "ExpressionStatement[6836-6877]:ExpressionStatement[6836-6877]"
    }, {
      "left" : "if (properties.length > 1)",
      "right" : "if (properties.length > 1)",
      "info" : "IfStatement[6962-7754]:IfStatement[6962-7754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6989-7754]:Block[6989-7754]"
    }, {
      "left" : "HashMap<String,Integer> names = new HashMap<String,Integer>();",
      "right" : "HashMap<String,Integer> names = new HashMap<String,Integer>();",
      "info" : "VariableDeclarationStatement[7003-7065]:VariableDeclarationStatement[7003-7065]"
    }, {
      "left" : "for (int i = 0, len = properties.length; i < len; ++i)",
      "right" : "for (int i = 0, len = properties.length; i < len; ++i)",
      "info" : "ForStatement[7078-7744]:ForStatement[7078-7744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7133-7744]:Block[7133-7744]"
    }, {
      "left" : "String name = properties[i].getName();",
      "right" : "String name = properties[i].getName();",
      "info" : "VariableDeclarationStatement[7151-7189]:VariableDeclarationStatement[7151-7189]"
    }, {
      "left" : "if (name.length() == 0 && properties[i].getInjectableValueId() != null)",
      "right" : "if (name.length() == 0 && properties[i].getInjectableValueId() != null)",
      "info" : "IfStatement[7365-7486]:IfStatement[7365-7486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7437-7486]:Block[7437-7486]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[7459-7468]:ContinueStatement[7459-7468]"
    }, {
      "left" : "Integer old = names.put(name, Integer.valueOf(i));",
      "right" : "Integer old = names.put(name, Integer.valueOf(i));",
      "info" : "VariableDeclarationStatement[7503-7553]:VariableDeclarationStatement[7503-7553]"
    }, {
      "left" : "if (old != null)",
      "right" : "if (old != null)",
      "info" : "IfStatement[7570-7730]:IfStatement[7570-7730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7587-7730]:Block[7587-7730]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Duplicate creator property \\\"\"+name+\"\\\" (index \"+old+\" vs \"+i+\")\");",
      "right" : "throw new IllegalArgumentException(\"Duplicate creator property \\\"\"+name+\"\\\" (index \"+old+\" vs \"+i+\")\");",
      "info" : "ThrowStatement[7609-7712]:ThrowStatement[7609-7712]"
    }, {
      "left" : "_propertyBasedArgs = properties;",
      "right" : "_propertyBasedArgs = properties;",
      "info" : "ExpressionStatement[7763-7795]:ExpressionStatement[7763-7795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7871-7978]:Block[7871-7978]"
    }, {
      "left" : "if (_incompleteParameter == null)",
      "right" : "if (_incompleteParameter == null)",
      "info" : "IfStatement[7881-7972]:IfStatement[7881-7972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7915-7972]:Block[7915-7972]"
    }, {
      "left" : "_incompleteParameter = parameter;",
      "right" : "_incompleteParameter = parameter;",
      "info" : "ExpressionStatement[7929-7962]:ExpressionStatement[7929-7962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8151-8200]:Block[8151-8200]"
    }, {
      "left" : "addStringCreator(creator, false);",
      "right" : "addStringCreator(creator, false);",
      "info" : "ExpressionStatement[8161-8194]:ExpressionStatement[8161-8194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8289-8339]:Block[8289-8339]"
    }, {
      "left" : "addBooleanCreator(creator, false);",
      "right" : "addBooleanCreator(creator, false);",
      "info" : "ExpressionStatement[8299-8333]:ExpressionStatement[8299-8333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8429-8479]:Block[8429-8479]"
    }, {
      "left" : "addBooleanCreator(creator, false);",
      "right" : "addBooleanCreator(creator, false);",
      "info" : "ExpressionStatement[8439-8473]:ExpressionStatement[8439-8473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8571-8621]:Block[8571-8621]"
    }, {
      "left" : "addBooleanCreator(creator, false);",
      "right" : "addBooleanCreator(creator, false);",
      "info" : "ExpressionStatement[8581-8615]:ExpressionStatement[8581-8615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8714-8764]:Block[8714-8764]"
    }, {
      "left" : "addBooleanCreator(creator, false);",
      "right" : "addBooleanCreator(creator, false);",
      "info" : "ExpressionStatement[8724-8758]:ExpressionStatement[8724-8758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8892-8958]:Block[8892-8958]"
    }, {
      "left" : "addDelegatingCreator(creator, false, injectables);",
      "right" : "addDelegatingCreator(creator, false, injectables);",
      "info" : "ExpressionStatement[8902-8952]:ExpressionStatement[8902-8952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9083-9146]:Block[9083-9146]"
    }, {
      "left" : "addPropertyCreator(creator, false, properties);",
      "right" : "addPropertyCreator(creator, false, properties);",
      "info" : "ExpressionStatement[9093-9140]:ExpressionStatement[9093-9140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9284-9376]:Block[9284-9376]"
    }, {
      "left" : "verifyNonDup(newOne, typeIndex, false);",
      "right" : "verifyNonDup(newOne, typeIndex, false);",
      "info" : "ExpressionStatement[9294-9333]:ExpressionStatement[9294-9333]"
    }, {
      "left" : "return _creators[typeIndex];",
      "right" : "return _creators[typeIndex];",
      "info" : "ReturnStatement[9342-9370]:ReturnStatement[9342-9370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9616-9668]:Block[9616-9668]"
    }, {
      "left" : "return _creators[C_DEFAULT] != null;",
      "right" : "return _creators[C_DEFAULT] != null;",
      "info" : "ReturnStatement[9626-9662]:ReturnStatement[9626-9662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9903-10063]:Block[9903-10063]"
    }, {
      "left" : "if (member != null && _canFixAccess)",
      "right" : "if (member != null && _canFixAccess)",
      "info" : "IfStatement[9913-10034]:IfStatement[9913-10034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9950-10034]:Block[9950-10034]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess((Member) member.getAnnotated());",
      "right" : "ClassUtil.checkAndFixAccess((Member) member.getAnnotated());",
      "info" : "ExpressionStatement[9964-10024]:ExpressionStatement[9964-10024]"
    }, {
      "left" : "return member;",
      "right" : "return member;",
      "info" : "ReturnStatement[10043-10057]:ReturnStatement[10043-10057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12023-12057]:Block[12446-12480]"
    }, {
      "left" : "_type = t;",
      "right" : "_type = t;",
      "info" : "ExpressionStatement[12037-12047]:ExpressionStatement[12460-12470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12135-12429]:Block[12558-12852]"
    }, {
      "left" : "switch (_type) {\n            case TYPE_COLLECTION: return ArrayList.class.getName();\n            case TYPE_MAP: return LinkedHashMap.class.getName();\n            case TYPE_HASH_MAP: return HashMap.class.getName();\n            }",
      "right" : "switch (_type) {\n            case TYPE_COLLECTION: return ArrayList.class.getName();\n            case TYPE_MAP: return LinkedHashMap.class.getName();\n            case TYPE_HASH_MAP: return HashMap.class.getName();\n            }",
      "info" : "SwitchStatement[12149-12376]:SwitchStatement[12572-12799]"
    }, {
      "left" : "case TYPE_COLLECTION:",
      "right" : "case TYPE_COLLECTION:",
      "info" : "SwitchCase[12178-12199]:SwitchCase[12601-12622]"
    }, {
      "left" : "return ArrayList.class.getName();",
      "right" : "return ArrayList.class.getName();",
      "info" : "ReturnStatement[12200-12233]:ReturnStatement[12623-12656]"
    }, {
      "left" : "case TYPE_MAP:",
      "right" : "case TYPE_MAP:",
      "info" : "SwitchCase[12246-12260]:SwitchCase[12669-12683]"
    }, {
      "left" : "return LinkedHashMap.class.getName();",
      "right" : "return LinkedHashMap.class.getName();",
      "info" : "ReturnStatement[12261-12298]:ReturnStatement[12684-12721]"
    }, {
      "left" : "case TYPE_HASH_MAP:",
      "right" : "case TYPE_HASH_MAP:",
      "info" : "SwitchCase[12311-12330]:SwitchCase[12734-12753]"
    }, {
      "left" : "return HashMap.class.getName();",
      "right" : "return HashMap.class.getName();",
      "info" : "ReturnStatement[12331-12362]:ReturnStatement[12754-12785]"
    }, {
      "left" : "return Object.class.getName();",
      "right" : "return Object.class.getName();",
      "info" : "ReturnStatement[12389-12419]:ReturnStatement[12812-12842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12489-12505]:Block[12912-12928]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12491-12503]:ReturnStatement[12914-12926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12572-12589]:Block[12995-13012]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12575-12587]:ReturnStatement[12998-13010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12698-13025]:Block[13121-13448]"
    }, {
      "left" : "switch (_type) {\n            case TYPE_COLLECTION: return new ArrayList<Object>();\n            case TYPE_MAP: return new LinkedHashMap<String,Object>();\n            case TYPE_HASH_MAP: return new HashMap<String,Object>();\n            }",
      "right" : "switch (_type) {\n            case TYPE_COLLECTION: return new ArrayList<Object>();\n            case TYPE_MAP: return new LinkedHashMap<String,Object>();\n            case TYPE_HASH_MAP: return new HashMap<String,Object>();\n            }",
      "info" : "SwitchStatement[12712-12947]:SwitchStatement[13135-13370]"
    }, {
      "left" : "case TYPE_COLLECTION:",
      "right" : "case TYPE_COLLECTION:",
      "info" : "SwitchCase[12741-12762]:SwitchCase[13164-13185]"
    }, {
      "left" : "return new ArrayList<Object>();",
      "right" : "return new ArrayList<Object>();",
      "info" : "ReturnStatement[12763-12794]:ReturnStatement[13186-13217]"
    }, {
      "left" : "case TYPE_MAP:",
      "right" : "case TYPE_MAP:",
      "info" : "SwitchCase[12807-12821]:SwitchCase[13230-13244]"
    }, {
      "left" : "return new LinkedHashMap<String,Object>();",
      "right" : "return new LinkedHashMap<String,Object>();",
      "info" : "ReturnStatement[12822-12864]:ReturnStatement[13245-13287]"
    }, {
      "left" : "case TYPE_HASH_MAP:",
      "right" : "case TYPE_HASH_MAP:",
      "info" : "SwitchCase[12877-12896]:SwitchCase[13300-13319]"
    }, {
      "left" : "return new HashMap<String,Object>();",
      "right" : "return new HashMap<String,Object>();",
      "info" : "ReturnStatement[12897-12933]:ReturnStatement[13320-13356]"
    }, {
      "left" : "throw new IllegalStateException(\"Unknown type \"+_type);",
      "right" : "throw new IllegalStateException(\"Unknown type \"+_type);",
      "info" : "ThrowStatement[12960-13015]:ThrowStatement[13383-13438]"
    } ]
  },
  "interFileMappings" : { }
}