{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "TypeDeclaration[116-9479]:TypeDeclaration[116-9965]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[460-508]:FieldDeclaration[460-508]"
    }, {
      "left" : "protected SimpleType(Class<?> cls)",
      "right" : "protected SimpleType(Class<?> cls)",
      "info" : "MethodDeclaration[676-1128]:MethodDeclaration[676-1128]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts)",
      "info" : "MethodDeclaration[1134-1325]:MethodDeclaration[1134-1325]"
    }, {
      "left" : "protected SimpleType(TypeBase base)",
      "right" : "protected SimpleType(TypeBase base)",
      "info" : "MethodDeclaration[1331-1554]:MethodDeclaration[1331-1554]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "info" : "MethodDeclaration[1560-1864]:MethodDeclaration[1560-1864]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts, int extraHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts, int extraHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "info" : "MethodDeclaration[1870-2303]:MethodDeclaration[1870-2303]"
    }, {
      "left" : "public static SimpleType constructUnsafe(Class<?> raw)",
      "right" : "public static SimpleType constructUnsafe(Class<?> raw)",
      "info" : "MethodDeclaration[2313-2943]:MethodDeclaration[2313-2943]"
    }, {
      "left" : "public static SimpleType construct(Class<?> cls)",
      "right" : "public static SimpleType construct(Class<?> cls)",
      "info" : "MethodDeclaration[2949-4506]:MethodDeclaration[2949-4553]"
    }, {
      "left" : "protected JavaType _narrow(Class<?> subclass)",
      "right" : "protected JavaType _narrow(Class<?> subclass)",
      "info" : "MethodDeclaration[4512-5276]:MethodDeclaration[4559-5323]"
    }, {
      "left" : "public JavaType withContentType(JavaType contentType)",
      "right" : "public JavaType withContentType(JavaType contentType)",
      "info" : "MethodDeclaration[5286-5475]:MethodDeclaration[5333-5522]"
    }, {
      "left" : "public SimpleType withTypeHandler(Object h)",
      "right" : "public SimpleType withTypeHandler(Object h)",
      "info" : "MethodDeclaration[5485-5728]:MethodDeclaration[5532-5775]"
    }, {
      "left" : "public JavaType withContentTypeHandler(Object h)",
      "right" : "public JavaType withContentTypeHandler(Object h)",
      "info" : "MethodDeclaration[5734-5956]:MethodDeclaration[5781-6003]"
    }, {
      "left" : "public SimpleType withValueHandler(Object h)",
      "right" : "public SimpleType withValueHandler(Object h)",
      "info" : "MethodDeclaration[5962-6206]:MethodDeclaration[6009-6253]"
    }, {
      "left" : "public  SimpleType withContentValueHandler(Object h)",
      "right" : "public  SimpleType withContentValueHandler(Object h)",
      "info" : "MethodDeclaration[6216-6443]:MethodDeclaration[6263-6490]"
    }, {
      "left" : "public SimpleType withStaticTyping()",
      "right" : "public SimpleType withStaticTyping()",
      "info" : "MethodDeclaration[6449-6658]:MethodDeclaration[6496-6705]"
    }, {
      "left" : "public JavaType refine(Class<?> rawType, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInterfaces)",
      "right" : "public JavaType refine(Class<?> rawType, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInterfaces)",
      "info" : "MethodDeclaration[6664-6890]:MethodDeclaration[6711-6937]"
    }, {
      "left" : "protected String buildCanonicalName()",
      "right" : "protected String buildCanonicalName()",
      "info" : "MethodDeclaration[6900-7448]:MethodDeclaration[6947-7495]"
    }, {
      "left" : "public boolean isContainerType()",
      "right" : "public boolean isContainerType()",
      "info" : "MethodDeclaration[7616-7680]:MethodDeclaration[7663-7727]"
    }, {
      "left" : "public StringBuilder getErasedSignature(StringBuilder sb)",
      "right" : "public StringBuilder getErasedSignature(StringBuilder sb)",
      "info" : "MethodDeclaration[7686-7815]:MethodDeclaration[7733-7862]"
    }, {
      "left" : "public StringBuilder getGenericSignature(StringBuilder sb)",
      "right" : "public StringBuilder getGenericSignature(StringBuilder sb)",
      "info" : "MethodDeclaration[7825-8255]:MethodDeclaration[7872-8302]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[8429-8986]:MethodDeclaration[9258-9472]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[8992-9477]:MethodDeclaration[9478-9963]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[380-386]:Modifier[380-386]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[387-392]:TYPE_DECLARATION_KIND[387-392]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[393-403]:SimpleName[393-403]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1025-1034]:Modifier[1025-1034]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1035-1045]:SimpleName[1035-1045]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1046-1058]:SingleVariableDeclaration[1046-1058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1060-1128]:Block[1060-1128]"
    }, {
      "left" : "this(cls, TypeBindings.emptyBindings(), null, null);",
      "right" : "this(cls, TypeBindings.emptyBindings(), null, null);",
      "info" : "ConstructorInvocation[1070-1122]:ConstructorInvocation[1070-1122]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1134-1143]:Modifier[1134-1143]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1144-1154]:SimpleName[1144-1154]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1155-1167]:SingleVariableDeclaration[1155-1167]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[1169-1190]:SingleVariableDeclaration[1169-1190]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[1204-1223]:SingleVariableDeclaration[1204-1223]"
    }, {
      "left" : "JavaType[] superInts",
      "right" : "JavaType[] superInts",
      "info" : "SingleVariableDeclaration[1225-1245]:SingleVariableDeclaration[1225-1245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1247-1325]:Block[1247-1325]"
    }, {
      "left" : "this(cls, bindings, superClass, superInts, null, null, false);",
      "right" : "this(cls, bindings, superClass, superInts, null, null, false);",
      "info" : "ConstructorInvocation[1257-1319]:ConstructorInvocation[1257-1319]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1490-1499]:Modifier[1490-1499]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1500-1510]:SimpleName[1500-1510]"
    }, {
      "left" : "TypeBase base",
      "right" : "TypeBase base",
      "info" : "SingleVariableDeclaration[1511-1524]:SingleVariableDeclaration[1511-1524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1526-1554]:Block[1526-1554]"
    }, {
      "left" : "super(base);",
      "right" : "super(base);",
      "info" : "SuperConstructorInvocation[1536-1548]:SuperConstructorInvocation[1536-1548]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1560-1569]:Modifier[1560-1569]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1570-1580]:SimpleName[1570-1580]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1581-1593]:SingleVariableDeclaration[1581-1593]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[1595-1616]:SingleVariableDeclaration[1595-1616]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[1630-1649]:SingleVariableDeclaration[1630-1649]"
    }, {
      "left" : "JavaType[] superInts",
      "right" : "JavaType[] superInts",
      "info" : "SingleVariableDeclaration[1651-1671]:SingleVariableDeclaration[1651-1671]"
    }, {
      "left" : "Object valueHandler",
      "right" : "Object valueHandler",
      "info" : "SingleVariableDeclaration[1685-1704]:SingleVariableDeclaration[1685-1704]"
    }, {
      "left" : "Object typeHandler",
      "right" : "Object typeHandler",
      "info" : "SingleVariableDeclaration[1706-1724]:SingleVariableDeclaration[1706-1724]"
    }, {
      "left" : "boolean asStatic",
      "right" : "boolean asStatic",
      "info" : "SingleVariableDeclaration[1726-1742]:SingleVariableDeclaration[1726-1742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1748-1864]:Block[1748-1864]"
    }, {
      "left" : "super(cls, bindings, superClass, superInts,\n                0, valueHandler, typeHandler, asStatic);",
      "right" : "super(cls, bindings, superClass, superInts,\n                0, valueHandler, typeHandler, asStatic);",
      "info" : "SuperConstructorInvocation[1758-1858]:SuperConstructorInvocation[1758-1858]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1975-1984]:Modifier[1975-1984]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1985-1995]:SimpleName[1985-1995]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1996-2008]:SingleVariableDeclaration[1996-2008]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[2010-2031]:SingleVariableDeclaration[2010-2031]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[2045-2064]:SingleVariableDeclaration[2045-2064]"
    }, {
      "left" : "JavaType[] superInts",
      "right" : "JavaType[] superInts",
      "info" : "SingleVariableDeclaration[2066-2086]:SingleVariableDeclaration[2066-2086]"
    }, {
      "left" : "int extraHash",
      "right" : "int extraHash",
      "info" : "SingleVariableDeclaration[2088-2101]:SingleVariableDeclaration[2088-2101]"
    }, {
      "left" : "Object valueHandler",
      "right" : "Object valueHandler",
      "info" : "SingleVariableDeclaration[2115-2134]:SingleVariableDeclaration[2115-2134]"
    }, {
      "left" : "Object typeHandler",
      "right" : "Object typeHandler",
      "info" : "SingleVariableDeclaration[2136-2154]:SingleVariableDeclaration[2136-2154]"
    }, {
      "left" : "boolean asStatic",
      "right" : "boolean asStatic",
      "info" : "SingleVariableDeclaration[2156-2172]:SingleVariableDeclaration[2156-2172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2178-2303]:Block[2178-2303]"
    }, {
      "left" : "super(cls, bindings, superClass, superInts, \n                extraHash, valueHandler, typeHandler, asStatic);",
      "right" : "super(cls, bindings, superClass, superInts, \n                extraHash, valueHandler, typeHandler, asStatic);",
      "info" : "SuperConstructorInvocation[2188-2297]:SuperConstructorInvocation[2188-2297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2704-2710]:Modifier[2704-2710]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2711-2717]:Modifier[2711-2717]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[2718-2728]:SimpleType[2718-2728]"
    }, {
      "left" : "constructUnsafe",
      "right" : "constructUnsafe",
      "info" : "SimpleName[2729-2744]:SimpleName[2729-2744]"
    }, {
      "left" : "Class<?> raw",
      "right" : "Class<?> raw",
      "info" : "SingleVariableDeclaration[2745-2757]:SingleVariableDeclaration[2745-2757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2759-2943]:Block[2759-2943]"
    }, {
      "left" : "return new SimpleType(raw, null,\n                // 18-Oct-2015, tatu: Should be ok to omit possible super-types, right?\n                null, null, null, null, false);",
      "right" : "return new SimpleType(raw, null,\n                // 18-Oct-2015, tatu: Should be ok to omit possible super-types, right?\n                null, null, null, null, false);",
      "info" : "ReturnStatement[2769-2937]:ReturnStatement[2769-2937]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[3601-3612]:MarkerAnnotation[3601-3612]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3617-3623]:Modifier[3617-3623]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3624-3630]:Modifier[3624-3630]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[3631-3641]:SimpleType[3631-3641]"
    }, {
      "left" : "construct",
      "right" : "construct",
      "info" : "SimpleName[3642-3651]:SimpleName[3642-3651]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[3652-3664]:SingleVariableDeclaration[3652-3664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3670-4506]:Block[3670-4553]"
    }, {
      "left" : "if (Map.class.isAssignableFrom(cls))",
      "right" : "if (Map.class.isAssignableFrom(cls))",
      "info" : "IfStatement[3796-3961]:IfStatement[3796-3961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3833-3961]:Block[3833-3961]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \"+cls.getName()+\")\");",
      "right" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \"+cls.getName()+\")\");",
      "info" : "ThrowStatement[3847-3951]:ThrowStatement[3847-3951]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(cls))",
      "right" : "if (Collection.class.isAssignableFrom(cls))",
      "info" : "IfStatement[3970-4149]:IfStatement[3970-4149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4014-4149]:Block[4014-4149]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \"+cls.getName()+\")\");",
      "right" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \"+cls.getName()+\")\");",
      "info" : "ThrowStatement[4028-4139]:ThrowStatement[4028-4139]"
    }, {
      "left" : "if (cls.isArray())",
      "right" : "if (cls.isArray())",
      "info" : "IfStatement[4220-4370]:IfStatement[4220-4370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4239-4370]:Block[4239-4370]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \"+cls.getName()+\")\");",
      "right" : "throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \"+cls.getName()+\")\");",
      "info" : "ThrowStatement[4253-4360]:ThrowStatement[4253-4360]"
    }, {
      "left" : "return new SimpleType(cls, TypeBindings.emptyBindings(),\n                _bogusSuperClass(cls), null, null, null, false);",
      "right" : "return new SimpleType(cls, b,\n                _buildSuperClass(cls.getSuperclass(), b), null, null, null, false);",
      "info" : "ReturnStatement[4379-4500]:ReturnStatement[4434-4547]"
    }, {
      "left" : "TypeBindings.emptyBindings()",
      "right" : "TypeBindings.emptyBindings()",
      "info" : "MethodInvocation[4406-4434]:MethodInvocation[4396-4424]"
    }, {
      "left" : "cls",
      "right" : "cls",
      "info" : "SimpleName[4469-4472]:SimpleName[4497-4500]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4512-4521]:MarkerAnnotation[4559-4568]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[4526-4537]:MarkerAnnotation[4573-4584]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4542-4551]:Modifier[4589-4598]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[4552-4560]:SimpleType[4599-4607]"
    }, {
      "left" : "_narrow",
      "right" : "_narrow",
      "info" : "SimpleName[4561-4568]:SimpleName[4608-4615]"
    }, {
      "left" : "Class<?> subclass",
      "right" : "Class<?> subclass",
      "info" : "SingleVariableDeclaration[4569-4586]:SingleVariableDeclaration[4616-4633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4592-5276]:Block[4639-5323]"
    }, {
      "left" : "if (_class == subclass)",
      "right" : "if (_class == subclass)",
      "info" : "IfStatement[4602-4662]:IfStatement[4649-4709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4626-4662]:Block[4673-4709]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4640-4652]:ReturnStatement[4687-4699]"
    }, {
      "left" : "return new SimpleType(subclass, _bindings, this, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);",
      "right" : "return new SimpleType(subclass, _bindings, this, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);",
      "info" : "ReturnStatement[5147-5270]:ReturnStatement[5194-5317]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5286-5295]:MarkerAnnotation[5333-5342]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5300-5306]:Modifier[5347-5353]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[5307-5315]:SimpleType[5354-5362]"
    }, {
      "left" : "withContentType",
      "right" : "withContentType",
      "info" : "SimpleName[5316-5331]:SimpleName[5363-5378]"
    }, {
      "left" : "JavaType contentType",
      "right" : "JavaType contentType",
      "info" : "SingleVariableDeclaration[5332-5352]:SingleVariableDeclaration[5379-5399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5354-5475]:Block[5401-5522]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContentType()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContentType()\");",
      "info" : "ThrowStatement[5364-5469]:ThrowStatement[5411-5516]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5485-5494]:MarkerAnnotation[5532-5541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5499-5505]:Modifier[5546-5552]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[5506-5516]:SimpleType[5553-5563]"
    }, {
      "left" : "withTypeHandler",
      "right" : "withTypeHandler",
      "info" : "SimpleName[5517-5532]:SimpleName[5564-5579]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[5533-5541]:SingleVariableDeclaration[5580-5588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5543-5728]:Block[5590-5775]"
    }, {
      "left" : "if (_typeHandler == h)",
      "right" : "if (_typeHandler == h)",
      "info" : "IfStatement[5553-5612]:IfStatement[5600-5659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5576-5612]:Block[5623-5659]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5590-5602]:ReturnStatement[5637-5649]"
    }, {
      "left" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, _valueHandler, h, _asStatic);",
      "right" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, _valueHandler, h, _asStatic);",
      "info" : "ReturnStatement[5621-5722]:ReturnStatement[5668-5769]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5734-5743]:MarkerAnnotation[5781-5790]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5748-5754]:Modifier[5795-5801]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[5755-5763]:SimpleType[5802-5810]"
    }, {
      "left" : "withContentTypeHandler",
      "right" : "withContentTypeHandler",
      "info" : "SimpleName[5764-5786]:SimpleName[5811-5833]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[5787-5795]:SingleVariableDeclaration[5834-5842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5797-5956]:Block[5844-6003]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenTypeHandler()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenTypeHandler()\");",
      "info" : "ThrowStatement[5839-5950]:ThrowStatement[5886-5997]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5962-5971]:MarkerAnnotation[6009-6018]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5976-5982]:Modifier[6023-6029]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[5983-5993]:SimpleType[6030-6040]"
    }, {
      "left" : "withValueHandler",
      "right" : "withValueHandler",
      "info" : "SimpleName[5994-6010]:SimpleName[6041-6057]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[6011-6019]:SingleVariableDeclaration[6058-6066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6021-6206]:Block[6068-6253]"
    }, {
      "left" : "if (h == _valueHandler)",
      "right" : "if (h == _valueHandler)",
      "info" : "IfStatement[6031-6091]:IfStatement[6078-6138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6055-6091]:Block[6102-6138]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6069-6081]:ReturnStatement[6116-6128]"
    }, {
      "left" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, h, _typeHandler, _asStatic);",
      "right" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, h, _typeHandler, _asStatic);",
      "info" : "ReturnStatement[6100-6200]:ReturnStatement[6147-6247]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6216-6225]:MarkerAnnotation[6263-6272]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6230-6236]:Modifier[6277-6283]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[6238-6248]:SimpleType[6285-6295]"
    }, {
      "left" : "withContentValueHandler",
      "right" : "withContentValueHandler",
      "info" : "SimpleName[6249-6272]:SimpleName[6296-6319]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[6273-6281]:SingleVariableDeclaration[6320-6328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6283-6443]:Block[6330-6490]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenValueHandler()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenValueHandler()\");",
      "info" : "ThrowStatement[6325-6437]:ThrowStatement[6372-6484]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6449-6458]:MarkerAnnotation[6496-6505]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6463-6469]:Modifier[6510-6516]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[6470-6480]:SimpleType[6517-6527]"
    }, {
      "left" : "withStaticTyping",
      "right" : "withStaticTyping",
      "info" : "SimpleName[6481-6497]:SimpleName[6528-6544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6500-6658]:Block[6547-6705]"
    }, {
      "left" : "return _asStatic ? this : new SimpleType(_class, _bindings,\n                _superClass, _superInterfaces, _valueHandler, _typeHandler, true);",
      "right" : "return _asStatic ? this : new SimpleType(_class, _bindings,\n                _superClass, _superInterfaces, _valueHandler, _typeHandler, true);",
      "info" : "ReturnStatement[6510-6652]:ReturnStatement[6557-6699]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6664-6673]:MarkerAnnotation[6711-6720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6678-6684]:Modifier[6725-6731]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[6685-6693]:SimpleType[6732-6740]"
    }, {
      "left" : "refine",
      "right" : "refine",
      "info" : "SimpleName[6694-6700]:SimpleName[6741-6747]"
    }, {
      "left" : "Class<?> rawType",
      "right" : "Class<?> rawType",
      "info" : "SingleVariableDeclaration[6701-6717]:SingleVariableDeclaration[6748-6764]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[6719-6740]:SingleVariableDeclaration[6766-6787]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[6754-6773]:SingleVariableDeclaration[6801-6820]"
    }, {
      "left" : "JavaType[] superInterfaces",
      "right" : "JavaType[] superInterfaces",
      "info" : "SingleVariableDeclaration[6775-6801]:SingleVariableDeclaration[6822-6848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6803-6890]:Block[6850-6937]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6872-6884]:ReturnStatement[6919-6931]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6900-6909]:MarkerAnnotation[6947-6956]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6914-6923]:Modifier[6961-6970]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6924-6930]:SimpleType[6971-6977]"
    }, {
      "left" : "buildCanonicalName",
      "right" : "buildCanonicalName",
      "info" : "SimpleName[6931-6949]:SimpleName[6978-6996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6956-7448]:Block[7003-7495]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[6966-7005]:VariableDeclarationStatement[7013-7052]"
    }, {
      "left" : "sb.append(_class.getName());",
      "right" : "sb.append(_class.getName());",
      "info" : "ExpressionStatement[7014-7042]:ExpressionStatement[7061-7089]"
    }, {
      "left" : "final int count = _bindings.size();",
      "right" : "final int count = _bindings.size();",
      "info" : "VariableDeclarationStatement[7052-7087]:VariableDeclarationStatement[7099-7134]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[7096-7412]:IfStatement[7143-7459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7111-7412]:Block[7158-7459]"
    }, {
      "left" : "sb.append('<');",
      "right" : "sb.append('<');",
      "info" : "ExpressionStatement[7125-7140]:ExpressionStatement[7172-7187]"
    }, {
      "left" : "for (int i = 0; i < count; ++i)",
      "right" : "for (int i = 0; i < count; ++i)",
      "info" : "ForStatement[7153-7374]:ForStatement[7200-7421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7185-7374]:Block[7232-7421]"
    }, {
      "left" : "JavaType t = containedType(i);",
      "right" : "JavaType t = containedType(i);",
      "info" : "VariableDeclarationStatement[7203-7233]:VariableDeclarationStatement[7250-7280]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[7250-7316]:IfStatement[7297-7363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7261-7316]:Block[7308-7363]"
    }, {
      "left" : "sb.append(',');",
      "right" : "sb.append(',');",
      "info" : "ExpressionStatement[7283-7298]:ExpressionStatement[7330-7345]"
    }, {
      "left" : "sb.append(t.toCanonical());",
      "right" : "sb.append(t.toCanonical());",
      "info" : "ExpressionStatement[7333-7360]:ExpressionStatement[7380-7407]"
    }, {
      "left" : "sb.append('>');",
      "right" : "sb.append('>');",
      "info" : "ExpressionStatement[7387-7402]:ExpressionStatement[7434-7449]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[7421-7442]:ReturnStatement[7468-7489]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7616-7625]:MarkerAnnotation[7663-7672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7630-7636]:Modifier[7677-7683]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7637-7644]:PrimitiveType[7684-7691]"
    }, {
      "left" : "isContainerType",
      "right" : "isContainerType",
      "info" : "SimpleName[7645-7660]:SimpleName[7692-7707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7663-7680]:Block[7710-7727]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7665-7678]:ReturnStatement[7712-7725]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7686-7695]:MarkerAnnotation[7733-7742]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7700-7706]:Modifier[7747-7753]"
    }, {
      "left" : "StringBuilder",
      "right" : "StringBuilder",
      "info" : "SimpleType[7707-7720]:SimpleType[7754-7767]"
    }, {
      "left" : "getErasedSignature",
      "right" : "getErasedSignature",
      "info" : "SimpleName[7721-7739]:SimpleName[7768-7786]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[7740-7756]:SingleVariableDeclaration[7787-7803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7758-7815]:Block[7805-7862]"
    }, {
      "left" : "return _classSignature(_class, sb, true);",
      "right" : "return _classSignature(_class, sb, true);",
      "info" : "ReturnStatement[7768-7809]:ReturnStatement[7815-7856]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7825-7834]:MarkerAnnotation[7872-7881]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7839-7845]:Modifier[7886-7892]"
    }, {
      "left" : "StringBuilder",
      "right" : "StringBuilder",
      "info" : "SimpleType[7846-7859]:SimpleType[7893-7906]"
    }, {
      "left" : "getGenericSignature",
      "right" : "getGenericSignature",
      "info" : "SimpleName[7860-7879]:SimpleName[7907-7926]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[7880-7896]:SingleVariableDeclaration[7927-7943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7902-8255]:Block[7949-8302]"
    }, {
      "left" : "_classSignature(_class, sb, false);",
      "right" : "_classSignature(_class, sb, false);",
      "info" : "ExpressionStatement[7912-7947]:ExpressionStatement[7959-7994]"
    }, {
      "left" : "final int count = _bindings.size();",
      "right" : "final int count = _bindings.size();",
      "info" : "VariableDeclarationStatement[7957-7992]:VariableDeclarationStatement[8004-8039]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[8001-8206]:IfStatement[8048-8253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8016-8206]:Block[8063-8253]"
    }, {
      "left" : "sb.append('<');",
      "right" : "sb.append('<');",
      "info" : "ExpressionStatement[8030-8045]:ExpressionStatement[8077-8092]"
    }, {
      "left" : "for (int i = 0; i < count; ++i)",
      "right" : "for (int i = 0; i < count; ++i)",
      "info" : "ForStatement[8058-8168]:ForStatement[8105-8215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8090-8168]:Block[8137-8215]"
    }, {
      "left" : "sb = containedType(i).getGenericSignature(sb);",
      "right" : "sb = containedType(i).getGenericSignature(sb);",
      "info" : "ExpressionStatement[8108-8154]:ExpressionStatement[8155-8201]"
    }, {
      "left" : "sb.append('>');",
      "right" : "sb.append('>');",
      "info" : "ExpressionStatement[8181-8196]:ExpressionStatement[8228-8243]"
    }, {
      "left" : "sb.append(';');",
      "right" : "sb.append(';');",
      "info" : "ExpressionStatement[8215-8230]:ExpressionStatement[8262-8277]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[8239-8249]:ReturnStatement[8286-8296]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8772-8781]:MarkerAnnotation[9258-9267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8786-8792]:Modifier[9272-9278]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8793-8799]:SimpleType[9279-9285]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[8800-8808]:SimpleName[9286-9294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8815-8986]:Block[9301-9472]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder(40);",
      "right" : "StringBuilder sb = new StringBuilder(40);",
      "info" : "VariableDeclarationStatement[8825-8866]:VariableDeclarationStatement[9311-9352]"
    }, {
      "left" : "sb.append(\"[simple type, class \").append(buildCanonicalName()).append(']');",
      "right" : "sb.append(\"[simple type, class \").append(buildCanonicalName()).append(']');",
      "info" : "ExpressionStatement[8875-8950]:ExpressionStatement[9361-9436]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[8959-8980]:ReturnStatement[9445-9466]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8992-9001]:MarkerAnnotation[9478-9487]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9006-9012]:Modifier[9492-9498]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9013-9020]:PrimitiveType[9499-9506]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[9021-9027]:SimpleName[9507-9513]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[9028-9036]:SingleVariableDeclaration[9514-9522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9042-9477]:Block[9528-9963]"
    }, {
      "left" : "if (o == this)",
      "right" : "if (o == this)",
      "info" : "IfStatement[9052-9079]:IfStatement[9538-9565]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9067-9079]:ReturnStatement[9553-9565]"
    }, {
      "left" : "if (o == null)",
      "right" : "if (o == null)",
      "info" : "IfStatement[9088-9116]:IfStatement[9574-9602]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9103-9116]:ReturnStatement[9589-9602]"
    }, {
      "left" : "if (o.getClass() != getClass())",
      "right" : "if (o.getClass() != getClass())",
      "info" : "IfStatement[9125-9170]:IfStatement[9611-9656]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9157-9170]:ReturnStatement[9643-9656]"
    }, {
      "left" : "SimpleType other = (SimpleType) o;",
      "right" : "SimpleType other = (SimpleType) o;",
      "info" : "VariableDeclarationStatement[9180-9214]:VariableDeclarationStatement[9666-9700]"
    }, {
      "left" : "if (other._class != this._class)",
      "right" : "if (other._class != this._class)",
      "info" : "IfStatement[9265-9311]:IfStatement[9751-9797]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9298-9311]:ReturnStatement[9784-9797]"
    }, {
      "left" : "TypeBindings b1 = _bindings;",
      "right" : "TypeBindings b1 = _bindings;",
      "info" : "VariableDeclarationStatement[9370-9398]:VariableDeclarationStatement[9856-9884]"
    }, {
      "left" : "TypeBindings b2 = other._bindings;",
      "right" : "TypeBindings b2 = other._bindings;",
      "info" : "VariableDeclarationStatement[9407-9441]:VariableDeclarationStatement[9893-9927]"
    }, {
      "left" : "return b1.equals(b2);",
      "right" : "return b1.equals(b2);",
      "info" : "ReturnStatement[9450-9471]:ReturnStatement[9936-9957]"
    } ]
  },
  "interFileMappings" : { }
}