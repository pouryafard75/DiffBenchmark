{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MultiValueMap",
      "right" : "MultiValueMap",
      "info" : "TypeDeclaration[1694-20273]:TypeDeclaration[1694-20653]"
    }, {
      "left" : "private static final long serialVersionUID = -2214159910087182007L;",
      "right" : "private static final long serialVersionUID = -2214159910087182007L;",
      "info" : "FieldDeclaration[3014-3114]:FieldDeclaration[3014-3114]"
    }, {
      "left" : "private final Factory<? extends Collection<V>> collectionFactory;",
      "right" : "private final Factory<? extends Collection<V>> collectionFactory;",
      "info" : "FieldDeclaration[3120-3240]:FieldDeclaration[3120-3240]"
    }, {
      "left" : "private transient Collection<V> valuesView;",
      "right" : "private transient Collection<V> valuesView;",
      "info" : "FieldDeclaration[3245-3318]:FieldDeclaration[3245-3318]"
    }, {
      "left" : "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)",
      "right" : "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)",
      "info" : "MethodDeclaration[3324-3853]:MethodDeclaration[3324-3853]"
    }, {
      "left" : "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map,\n                                                                                    final Class<C> collectionClass)",
      "right" : "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map,\n                                                                                    final Class<C> collectionClass)",
      "info" : "MethodDeclaration[3859-4605]:MethodDeclaration[3859-4605]"
    }, {
      "left" : "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map,\n            final Factory<C> collectionFactory)",
      "right" : "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map,\n            final Factory<C> collectionFactory)",
      "info" : "MethodDeclaration[4611-5314]:MethodDeclaration[4611-5314]"
    }, {
      "left" : "public MultiValueMap()",
      "right" : "public MultiValueMap()",
      "info" : "MethodDeclaration[5398-5702]:MethodDeclaration[5398-5702]"
    }, {
      "left" : "protected <C extends Collection<V>> MultiValueMap(final Map<K, ? super C> map,\n                                                      final Factory<C> collectionFactory)",
      "right" : "protected <C extends Collection<V>> MultiValueMap(final Map<K, ? super C> map,\n                                                      final Factory<C> collectionFactory)",
      "info" : "MethodDeclaration[5708-6508]:MethodDeclaration[5708-6508]"
    }, {
      "left" : "private void writeObject(final ObjectOutputStream out) throws IOException",
      "right" : "private void writeObject(final ObjectOutputStream out) throws IOException",
      "info" : "MethodDeclaration[6592-6891]:MethodDeclaration[6592-6891]"
    }, {
      "left" : "// (1) should only fail if input stream is incorrect\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException",
      "right" : "// (1) should only fail if input stream is incorrect\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[6897-7362]:MethodDeclaration[6897-7362]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[7446-7960]:MethodDeclaration[7446-7960]"
    }, {
      "left" : "public boolean removeMapping(final Object key, final Object value)",
      "right" : "public boolean removeMapping(final Object key, final Object value)",
      "info" : "MethodDeclaration[7966-8923]:MethodDeclaration[7966-8923]"
    }, {
      "left" : "public boolean containsValue(final Object value)",
      "right" : "public boolean containsValue(final Object value)",
      "info" : "MethodDeclaration[8929-9647]:MethodDeclaration[8929-9647]"
    }, {
      "left" : "public Object put(final K key, final Object value)",
      "right" : "public Object put(final K key, final Object value)",
      "info" : "MethodDeclaration[9653-10771]:MethodDeclaration[9653-10771]"
    }, {
      "left" : "public void putAll(final Map<? extends K, ?> map)",
      "right" : "public void putAll(final Map<? extends K, ?> map)",
      "info" : "MethodDeclaration[10777-11719]:MethodDeclaration[10777-11719]"
    }, {
      "left" : "public Set<Entry<K, Object>> entrySet()",
      "right" : "public Set<Entry<K, Object>> entrySet()",
      "info" : "MethodDeclaration[11725-12136]:MethodDeclaration[11725-12136]"
    }, {
      "left" : "public Collection<Object> values()",
      "right" : "public Collection<Object> values()",
      "info" : "MethodDeclaration[12142-12614]:MethodDeclaration[12142-12614]"
    }, {
      "left" : "public boolean containsValue(final Object key, final Object value)",
      "right" : "public boolean containsValue(final Object key, final Object value)",
      "info" : "MethodDeclaration[12620-13087]:MethodDeclaration[12620-13087]"
    }, {
      "left" : "public Collection<V> getCollection(final Object key)",
      "right" : "public Collection<V> getCollection(final Object key)",
      "info" : "MethodDeclaration[13093-13519]:MethodDeclaration[13093-13519]"
    }, {
      "left" : "public int size(final Object key)",
      "right" : "public int size(final Object key)",
      "info" : "MethodDeclaration[13525-13920]:MethodDeclaration[13525-13920]"
    }, {
      "left" : "public boolean putAll(final K key, final Collection<V> values)",
      "right" : "public boolean putAll(final K key, final Collection<V> values)",
      "info" : "MethodDeclaration[13926-14916]:MethodDeclaration[13926-14916]"
    }, {
      "left" : "public Iterator<V> iterator(final Object key)",
      "right" : "public Iterator<V> iterator(final Object key)",
      "info" : "MethodDeclaration[14922-15347]:MethodDeclaration[14922-15347]"
    }, {
      "left" : "public Iterator<Entry<K, V>> iterator()",
      "right" : "public Iterator<Entry<K, V>> iterator()",
      "info" : "MethodDeclaration[15353-17285]:MethodDeclaration[15353-17285]"
    }, {
      "left" : "protected Iterator<? extends Entry<K, V>> nextIterator(int count)",
      "right" : "protected Iterator<? extends Entry<K, V>> nextIterator(int count)",
      "info" : "MethodDeclaration[16076-17268]:MethodDeclaration[16076-17268]"
    }, {
      "left" : "public Entry<K, V> transform(final V input)",
      "right" : "public Entry<K, V> transform(final V input)",
      "info" : "MethodDeclaration[16436-17135]:MethodDeclaration[16436-17135]"
    }, {
      "left" : "public K getKey()",
      "right" : "public K getKey()",
      "info" : "MethodDeclaration[16591-16722]:MethodDeclaration[16591-16722]"
    }, {
      "left" : "public V getValue()",
      "right" : "public V getValue()",
      "info" : "MethodDeclaration[16751-16886]:MethodDeclaration[16751-16886]"
    }, {
      "left" : "public V setValue(V value)",
      "right" : "public V setValue(V value)",
      "info" : "MethodDeclaration[16915-17086]:MethodDeclaration[16915-17086]"
    }, {
      "left" : "public int totalSize()",
      "right" : "public int totalSize()",
      "info" : "MethodDeclaration[17291-17626]:MethodDeclaration[17291-17626]"
    }, {
      "left" : "protected Collection<V> createCollection(final int size)",
      "right" : "protected Collection<V> createCollection(final int size)",
      "info" : "MethodDeclaration[17632-18072]:MethodDeclaration[17632-18072]"
    }, {
      "left" : "Values",
      "right" : "Values",
      "info" : "TypeDeclaration[18156-18742]:TypeDeclaration[18156-18742]"
    }, {
      "left" : "public Iterator<V> iterator()",
      "right" : "public Iterator<V> iterator()",
      "info" : "MethodDeclaration[18283-18548]:MethodDeclaration[18283-18548]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[18558-18637]:MethodDeclaration[18558-18637]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[18647-18736]:MethodDeclaration[18647-18736]"
    }, {
      "left" : "ValuesIterator",
      "right" : "ValuesIterator",
      "info" : "TypeDeclaration[18748-19564]:TypeDeclaration[18748-19564]"
    }, {
      "left" : "private final Object key;",
      "right" : "private final Object key;",
      "info" : "FieldDeclaration[18880-18905]:FieldDeclaration[18880-18905]"
    }, {
      "left" : "private final Collection<V> values;",
      "right" : "private final Collection<V> values;",
      "info" : "FieldDeclaration[18914-18949]:FieldDeclaration[18914-18949]"
    }, {
      "left" : "private final Iterator<V> iterator;",
      "right" : "private final Iterator<V> iterator;",
      "info" : "FieldDeclaration[18958-18993]:FieldDeclaration[18958-18993]"
    }, {
      "left" : "public ValuesIterator(final Object key)",
      "right" : "public ValuesIterator(final Object key)",
      "info" : "MethodDeclaration[19003-19175]:MethodDeclaration[19003-19175]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[19185-19364]:MethodDeclaration[19185-19364]"
    }, {
      "left" : "public boolean hasNext()",
      "right" : "public boolean hasNext()",
      "info" : "MethodDeclaration[19374-19467]:MethodDeclaration[19374-19467]"
    }, {
      "left" : "public V next()",
      "right" : "public V next()",
      "info" : "MethodDeclaration[19477-19558]:MethodDeclaration[19477-19558]"
    }, {
      "left" : "ReflectionFactory",
      "right" : "ReflectionFactory",
      "info" : "TypeDeclaration[19570-20270]:TypeDeclaration[19570-20650]"
    }, {
      "left" : "private static final long serialVersionUID = 2986114157496788874L;",
      "right" : "private static final long serialVersionUID = 2986114157496788874L;",
      "info" : "FieldDeclaration[19759-19862]:FieldDeclaration[19759-19862]"
    }, {
      "left" : "private final Class<T> clazz;",
      "right" : "private final Class<T> clazz;",
      "info" : "FieldDeclaration[19872-19901]:FieldDeclaration[19872-19901]"
    }, {
      "left" : "public ReflectionFactory(final Class<T> clazz)",
      "right" : "public ReflectionFactory(final Class<T> clazz)",
      "info" : "MethodDeclaration[19911-20001]:MethodDeclaration[19911-20001]"
    }, {
      "left" : "public T create()",
      "right" : "public T create()",
      "info" : "MethodDeclaration[20011-20263]:MethodDeclaration[20011-20263]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3733-3853]:Block[3733-3853]"
    }, {
      "left" : "return MultiValueMap.<K, V, ArrayList> multiValueMap((Map<K, ? super Collection>) map, ArrayList.class);",
      "right" : "return MultiValueMap.<K, V, ArrayList> multiValueMap((Map<K, ? super Collection>) map, ArrayList.class);",
      "info" : "ReturnStatement[3743-3847]:ReturnStatement[3743-3847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4510-4605]:Block[4510-4605]"
    }, {
      "left" : "return new MultiValueMap<K, V>(map, new ReflectionFactory<C>(collectionClass));",
      "right" : "return new MultiValueMap<K, V>(map, new ReflectionFactory<C>(collectionClass));",
      "info" : "ReturnStatement[4520-4599]:ReturnStatement[4520-4599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5243-5314]:Block[5243-5314]"
    }, {
      "left" : "return new MultiValueMap<K, V>(map, collectionFactory);",
      "right" : "return new MultiValueMap<K, V>(map, collectionFactory);",
      "info" : "ReturnStatement[5253-5308]:ReturnStatement[5253-5308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5620-5702]:Block[5620-5702]"
    }, {
      "left" : "this(new HashMap<K, V>(), new ReflectionFactory(ArrayList.class));",
      "right" : "this(new HashMap<K, V>(), new ReflectionFactory(ArrayList.class));",
      "info" : "ConstructorInvocation[5630-5696]:ConstructorInvocation[5630-5696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6281-6508]:Block[6281-6508]"
    }, {
      "left" : "super((Map<K, Object>) map);",
      "right" : "super((Map<K, Object>) map);",
      "info" : "SuperConstructorInvocation[6291-6319]:SuperConstructorInvocation[6291-6319]"
    }, {
      "left" : "if (collectionFactory == null)",
      "right" : "if (collectionFactory == null)",
      "info" : "IfStatement[6328-6450]:IfStatement[6328-6450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6359-6450]:Block[6359-6450]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The factory must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The factory must not be null\");",
      "info" : "ThrowStatement[6373-6440]:ThrowStatement[6373-6440]"
    }, {
      "left" : "this.collectionFactory = collectionFactory;",
      "right" : "this.collectionFactory = collectionFactory;",
      "info" : "ExpressionStatement[6459-6502]:ExpressionStatement[6459-6502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6820-6891]:Block[6820-6891]"
    }, {
      "left" : "out.defaultWriteObject();",
      "right" : "out.defaultWriteObject();",
      "info" : "ExpressionStatement[6830-6855]:ExpressionStatement[6830-6855]"
    }, {
      "left" : "out.writeObject(map);",
      "right" : "out.writeObject(map);",
      "info" : "ExpressionStatement[6864-6885]:ExpressionStatement[6864-6885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7268-7362]:Block[7268-7362]"
    }, {
      "left" : "in.defaultReadObject();",
      "right" : "in.defaultReadObject();",
      "info" : "ExpressionStatement[7278-7301]:ExpressionStatement[7278-7301]"
    }, {
      "left" : "map = (Map<K, Object>) in.readObject();",
      "right" : "map = (Map<K, Object>) in.readObject();",
      "info" : "ExpressionStatement[7310-7349]:ExpressionStatement[7310-7349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7518-7960]:Block[7518-7960]"
    }, {
      "left" : "decorated().clear();",
      "right" : "decorated().clear();",
      "info" : "ExpressionStatement[7934-7954]:ExpressionStatement[7934-7954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8559-8923]:Block[8559-8923]"
    }, {
      "left" : "final Collection<V> valuesForKey = getCollection(key);",
      "right" : "final Collection<V> valuesForKey = getCollection(key);",
      "info" : "VariableDeclarationStatement[8569-8623]:VariableDeclarationStatement[8569-8623]"
    }, {
      "left" : "if (valuesForKey == null)",
      "right" : "if (valuesForKey == null)",
      "info" : "IfStatement[8632-8695]:IfStatement[8632-8695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8658-8695]:Block[8658-8695]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8672-8685]:ReturnStatement[8672-8685]"
    }, {
      "left" : "final boolean removed = valuesForKey.remove(value);",
      "right" : "final boolean removed = valuesForKey.remove(value);",
      "info" : "VariableDeclarationStatement[8704-8755]:VariableDeclarationStatement[8704-8755]"
    }, {
      "left" : "if (removed == false)",
      "right" : "if (removed == false)",
      "info" : "IfStatement[8764-8823]:IfStatement[8764-8823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8786-8823]:Block[8786-8823]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8800-8813]:ReturnStatement[8800-8813]"
    }, {
      "left" : "if (valuesForKey.isEmpty())",
      "right" : "if (valuesForKey.isEmpty())",
      "info" : "IfStatement[8832-8896]:IfStatement[8832-8896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8860-8896]:Block[8860-8896]"
    }, {
      "left" : "remove(key);",
      "right" : "remove(key);",
      "info" : "ExpressionStatement[8874-8886]:ExpressionStatement[8874-8886]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8905-8917]:ReturnStatement[8905-8917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9307-9647]:Block[9307-9647]"
    }, {
      "left" : "final Set<Map.Entry<K, Object>> pairs = decorated().entrySet();",
      "right" : "final Set<Map.Entry<K, Object>> pairs = decorated().entrySet();",
      "info" : "VariableDeclarationStatement[9317-9380]:VariableDeclarationStatement[9317-9380]"
    }, {
      "left" : "if (pairs != null)",
      "right" : "if (pairs != null)",
      "info" : "IfStatement[9389-9619]:IfStatement[9389-9619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9408-9619]:Block[9408-9619]"
    }, {
      "left" : "for (final Map.Entry<K, Object> entry : pairs)",
      "right" : "for (final Map.Entry<K, Object> entry : pairs)",
      "info" : "EnhancedForStatement[9422-9609]:EnhancedForStatement[9422-9609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9469-9609]:Block[9469-9609]"
    }, {
      "left" : "if (((Collection<V>) entry.getValue()).contains(value))",
      "right" : "if (((Collection<V>) entry.getValue()).contains(value))",
      "info" : "IfStatement[9487-9595]:IfStatement[9487-9595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9543-9595]:Block[9543-9595]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9565-9577]:ReturnStatement[9565-9577]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9628-9641]:ReturnStatement[9628-9641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10214-10771]:Block[10214-10771]"
    }, {
      "left" : "boolean result = false;",
      "right" : "boolean result = false;",
      "info" : "VariableDeclarationStatement[10224-10247]:VariableDeclarationStatement[10224-10247]"
    }, {
      "left" : "Collection<V> coll = getCollection(key);",
      "right" : "Collection<V> coll = getCollection(key);",
      "info" : "VariableDeclarationStatement[10256-10296]:VariableDeclarationStatement[10256-10296]"
    }, {
      "left" : "if (coll == null)",
      "right" : "if (coll == null)",
      "info" : "IfStatement[10305-10727]:IfStatement[10305-10727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10323-10668]:Block[10323-10668]"
    }, {
      "left" : "coll = createCollection(1);",
      "right" : "coll = createCollection(1);",
      "info" : "ExpressionStatement[10337-10364]:ExpressionStatement[10337-10364]"
    }, {
      "left" : "coll.add((V) value);",
      "right" : "coll.add((V) value);",
      "info" : "ExpressionStatement[10418-10438]:ExpressionStatement[10418-10438]"
    }, {
      "left" : "if (coll.size() > 0)",
      "right" : "if (coll.size() > 0)",
      "info" : "IfStatement[10451-10658]:IfStatement[10451-10658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10472-10658]:Block[10472-10658]"
    }, {
      "left" : "decorated().put(key, coll);",
      "right" : "decorated().put(key, coll);",
      "info" : "ExpressionStatement[10559-10586]:ExpressionStatement[10559-10586]"
    }, {
      "left" : "result = true;",
      "right" : "result = true;",
      "info" : "ExpressionStatement[10603-10617]:ExpressionStatement[10603-10617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10674-10727]:Block[10674-10727]"
    }, {
      "left" : "result = coll.add((V) value);",
      "right" : "result = coll.add((V) value);",
      "info" : "ExpressionStatement[10688-10717]:ExpressionStatement[10688-10717]"
    }, {
      "left" : "return result ? value : null;",
      "right" : "return result ? value : null;",
      "info" : "ReturnStatement[10736-10765]:ReturnStatement[10736-10765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11305-11719]:Block[11305-11719]"
    }, {
      "left" : "if (map instanceof MultiMap)",
      "right" : "if (map instanceof MultiMap)",
      "info" : "IfStatement[11315-11713]:IfStatement[11315-11713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11344-11552]:Block[11344-11552]"
    }, {
      "left" : "for (final Map.Entry<? extends K, Object> entry : ((MultiMap<? extends K, V>) map).entrySet())",
      "right" : "for (final Map.Entry<? extends K, Object> entry : ((MultiMap<? extends K, V>) map).entrySet())",
      "info" : "EnhancedForStatement[11358-11542]:EnhancedForStatement[11358-11542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11453-11542]:Block[11453-11542]"
    }, {
      "left" : "putAll(entry.getKey(), (Collection<V>) entry.getValue());",
      "right" : "putAll(entry.getKey(), (Collection<V>) entry.getValue());",
      "info" : "ExpressionStatement[11471-11528]:ExpressionStatement[11471-11528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11558-11713]:Block[11558-11713]"
    }, {
      "left" : "for (final Map.Entry<? extends K, ?> entry : map.entrySet())",
      "right" : "for (final Map.Entry<? extends K, ?> entry : map.entrySet())",
      "info" : "EnhancedForStatement[11572-11703]:EnhancedForStatement[11572-11703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11633-11703]:Block[11633-11703]"
    }, {
      "left" : "put(entry.getKey(), entry.getValue());",
      "right" : "put(entry.getKey(), entry.getValue());",
      "info" : "ExpressionStatement[11651-11689]:ExpressionStatement[11651-11689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12096-12136]:Block[12096-12136]"
    }, {
      "left" : "return super.entrySet();",
      "right" : "return super.entrySet();",
      "info" : "ReturnStatement[12106-12130]:ReturnStatement[12106-12130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12477-12614]:Block[12477-12614]"
    }, {
      "left" : "final Collection<V> vs = valuesView;",
      "right" : "final Collection<V> vs = valuesView;",
      "info" : "VariableDeclarationStatement[12487-12523]:VariableDeclarationStatement[12487-12523]"
    }, {
      "left" : "return (Collection<Object>) (vs != null ? vs : (valuesView = new Values()));",
      "right" : "return (Collection<Object>) (vs != null ? vs : (valuesView = new Values()));",
      "info" : "ReturnStatement[12532-12608]:ReturnStatement[12532-12608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12924-13087]:Block[12924-13087]"
    }, {
      "left" : "final Collection<V> coll = getCollection(key);",
      "right" : "final Collection<V> coll = getCollection(key);",
      "info" : "VariableDeclarationStatement[12934-12980]:VariableDeclarationStatement[12934-12980]"
    }, {
      "left" : "if (coll == null)",
      "right" : "if (coll == null)",
      "info" : "IfStatement[12989-13044]:IfStatement[12989-13044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13007-13044]:Block[13007-13044]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13021-13034]:ReturnStatement[13021-13034]"
    }, {
      "left" : "return coll.contains(value);",
      "right" : "return coll.contains(value);",
      "info" : "ReturnStatement[13053-13081]:ReturnStatement[13053-13081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13459-13519]:Block[13459-13519]"
    }, {
      "left" : "return (Collection<V>) decorated().get(key);",
      "right" : "return (Collection<V>) decorated().get(key);",
      "info" : "ReturnStatement[13469-13513]:ReturnStatement[13469-13513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13770-13920]:Block[13770-13920]"
    }, {
      "left" : "final Collection<V> coll = getCollection(key);",
      "right" : "final Collection<V> coll = getCollection(key);",
      "info" : "VariableDeclarationStatement[13780-13826]:VariableDeclarationStatement[13780-13826]"
    }, {
      "left" : "if (coll == null)",
      "right" : "if (coll == null)",
      "info" : "IfStatement[13835-13886]:IfStatement[13835-13886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13853-13886]:Block[13853-13886]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[13867-13876]:ReturnStatement[13867-13876]"
    }, {
      "left" : "return coll.size();",
      "right" : "return coll.size();",
      "info" : "ReturnStatement[13895-13914]:ReturnStatement[13895-13914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14274-14916]:Block[14274-14916]"
    }, {
      "left" : "if (values == null || values.size() == 0)",
      "right" : "if (values == null || values.size() == 0)",
      "info" : "IfStatement[14284-14363]:IfStatement[14284-14363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14326-14363]:Block[14326-14363]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[14340-14353]:ReturnStatement[14340-14353]"
    }, {
      "left" : "boolean result = false;",
      "right" : "boolean result = false;",
      "info" : "VariableDeclarationStatement[14372-14395]:VariableDeclarationStatement[14372-14395]"
    }, {
      "left" : "Collection<V> coll = getCollection(key);",
      "right" : "Collection<V> coll = getCollection(key);",
      "info" : "VariableDeclarationStatement[14404-14444]:VariableDeclarationStatement[14404-14444]"
    }, {
      "left" : "if (coll == null)",
      "right" : "if (coll == null)",
      "info" : "IfStatement[14453-14887]:IfStatement[14453-14887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14471-14828]:Block[14471-14828]"
    }, {
      "left" : "coll = createCollection(values.size());",
      "right" : "coll = createCollection(values.size());",
      "info" : "ExpressionStatement[14485-14524]:ExpressionStatement[14485-14524]"
    }, {
      "left" : "coll.addAll(values);",
      "right" : "coll.addAll(values);",
      "info" : "ExpressionStatement[14578-14598]:ExpressionStatement[14578-14598]"
    }, {
      "left" : "if (coll.size() > 0)",
      "right" : "if (coll.size() > 0)",
      "info" : "IfStatement[14611-14818]:IfStatement[14611-14818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14632-14818]:Block[14632-14818]"
    }, {
      "left" : "decorated().put(key, coll);",
      "right" : "decorated().put(key, coll);",
      "info" : "ExpressionStatement[14719-14746]:ExpressionStatement[14719-14746]"
    }, {
      "left" : "result = true;",
      "right" : "result = true;",
      "info" : "ExpressionStatement[14763-14777]:ExpressionStatement[14763-14777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14834-14887]:Block[14834-14887]"
    }, {
      "left" : "result = coll.addAll(values);",
      "right" : "result = coll.addAll(values);",
      "info" : "ExpressionStatement[14848-14877]:ExpressionStatement[14848-14877]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[14896-14910]:ReturnStatement[14896-14910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15204-15347]:Block[15204-15347]"
    }, {
      "left" : "if (!containsKey(key))",
      "right" : "if (!containsKey(key))",
      "info" : "IfStatement[15214-15301]:IfStatement[15214-15301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15237-15301]:Block[15237-15301]"
    }, {
      "left" : "return EmptyIterator.<V>emptyIterator();",
      "right" : "return EmptyIterator.<V>emptyIterator();",
      "info" : "ReturnStatement[15251-15291]:ReturnStatement[15251-15291]"
    }, {
      "left" : "return new ValuesIterator(key);",
      "right" : "return new ValuesIterator(key);",
      "info" : "ReturnStatement[15310-15341]:ReturnStatement[15310-15341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15881-17285]:Block[15881-17285]"
    }, {
      "left" : "final Collection<K> allKeys = new ArrayList<K>(keySet());",
      "right" : "final Collection<K> allKeys = new ArrayList<K>(keySet());",
      "info" : "VariableDeclarationStatement[15891-15948]:VariableDeclarationStatement[15891-15948]"
    }, {
      "left" : "final Iterator<K> keyIterator = allKeys.iterator();",
      "right" : "final Iterator<K> keyIterator = allKeys.iterator();",
      "info" : "VariableDeclarationStatement[15957-16008]:VariableDeclarationStatement[15957-16008]"
    }, {
      "left" : "return new LazyIteratorChain<Entry<K, V>>() {\n            @Override\n            protected Iterator<? extends Entry<K, V>> nextIterator(int count) {\n                if ( ! keyIterator.hasNext() ) {\n                    return null;\n                }\n                final K key = keyIterator.next();\n                final Transformer<V, Entry<K, V>> transformer = new Transformer<V, Entry<K, V>>() {\n                    @Override\n                    public Entry<K, V> transform(final V input) {\n                        return new Entry<K, V>() {\n                            @Override\n                            public K getKey() {\n                                return key;\n                            }\n                            @Override\n                            public V getValue() {\n                                return input;\n                            }\n                            @Override\n                            public V setValue(V value) {\n                                throw new UnsupportedOperationException();\n                            }\n                        };\n                    }\n                };\n                return new TransformIterator<V, Entry<K, V>>(new ValuesIterator(key), transformer);\n            }\n        };",
      "right" : "return new LazyIteratorChain<Entry<K, V>>() {\n            @Override\n            protected Iterator<? extends Entry<K, V>> nextIterator(int count) {\n                if ( ! keyIterator.hasNext() ) {\n                    return null;\n                }\n                final K key = keyIterator.next();\n                final Transformer<V, Entry<K, V>> transformer = new Transformer<V, Entry<K, V>>() {\n                    @Override\n                    public Entry<K, V> transform(final V input) {\n                        return new Entry<K, V>() {\n                            @Override\n                            public K getKey() {\n                                return key;\n                            }\n                            @Override\n                            public V getValue() {\n                                return input;\n                            }\n                            @Override\n                            public V setValue(V value) {\n                                throw new UnsupportedOperationException();\n                            }\n                        };\n                    }\n                };\n                return new TransformIterator<V, Entry<K, V>>(new ValuesIterator(key), transformer);\n            }\n        };",
      "info" : "ReturnStatement[16018-17279]:ReturnStatement[16018-17279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16164-17268]:Block[16164-17268]"
    }, {
      "left" : "if ( ! keyIterator.hasNext())",
      "right" : "if ( ! keyIterator.hasNext())",
      "info" : "IfStatement[16182-16265]:IfStatement[16182-16265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16213-16265]:Block[16213-16265]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16235-16247]:ReturnStatement[16235-16247]"
    }, {
      "left" : "final K key = keyIterator.next();",
      "right" : "final K key = keyIterator.next();",
      "info" : "VariableDeclarationStatement[16282-16315]:VariableDeclarationStatement[16282-16315]"
    }, {
      "left" : "final Transformer<V, Entry<K, V>> transformer = new Transformer<V, Entry<K, V>>() {\n                    @Override\n                    public Entry<K, V> transform(final V input) {\n                        return new Entry<K, V>() {\n                            @Override\n                            public K getKey() {\n                                return key;\n                            }\n                            @Override\n                            public V getValue() {\n                                return input;\n                            }\n                            @Override\n                            public V setValue(V value) {\n                                throw new UnsupportedOperationException();\n                            }\n                        };\n                    }\n                };",
      "right" : "final Transformer<V, Entry<K, V>> transformer = new Transformer<V, Entry<K, V>>() {\n                    @Override\n                    public Entry<K, V> transform(final V input) {\n                        return new Entry<K, V>() {\n                            @Override\n                            public K getKey() {\n                                return key;\n                            }\n                            @Override\n                            public V getValue() {\n                                return input;\n                            }\n                            @Override\n                            public V setValue(V value) {\n                                throw new UnsupportedOperationException();\n                            }\n                        };\n                    }\n                };",
      "info" : "VariableDeclarationStatement[16332-17154]:VariableDeclarationStatement[16332-17154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16510-17135]:Block[16510-17135]"
    }, {
      "left" : "return new Entry<K, V>() {\n                            @Override\n                            public K getKey() {\n                                return key;\n                            }\n                            @Override\n                            public V getValue() {\n                                return input;\n                            }\n                            @Override\n                            public V setValue(V value) {\n                                throw new UnsupportedOperationException();\n                            }\n                        };",
      "right" : "return new Entry<K, V>() {\n                            @Override\n                            public K getKey() {\n                                return key;\n                            }\n                            @Override\n                            public V getValue() {\n                                return input;\n                            }\n                            @Override\n                            public V setValue(V value) {\n                                throw new UnsupportedOperationException();\n                            }\n                        };",
      "info" : "ReturnStatement[16536-17113]:ReturnStatement[16536-17113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16647-16722]:Block[16647-16722]"
    }, {
      "left" : "return key;",
      "right" : "return key;",
      "info" : "ReturnStatement[16681-16692]:ReturnStatement[16681-16692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16809-16886]:Block[16809-16886]"
    }, {
      "left" : "return input;",
      "right" : "return input;",
      "info" : "ReturnStatement[16843-16856]:ReturnStatement[16843-16856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16980-17086]:Block[16980-17086]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[17014-17056]:ThrowStatement[17014-17056]"
    }, {
      "left" : "return new TransformIterator<V, Entry<K, V>>(new ValuesIterator(key), transformer);",
      "right" : "return new TransformIterator<V, Entry<K, V>>(new ValuesIterator(key), transformer);",
      "info" : "ReturnStatement[17171-17254]:ReturnStatement[17171-17254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17464-17626]:Block[17464-17626]"
    }, {
      "left" : "int total = 0;",
      "right" : "int total = 0;",
      "info" : "VariableDeclarationStatement[17474-17488]:VariableDeclarationStatement[17474-17488]"
    }, {
      "left" : "for (final Object v : decorated().values())",
      "right" : "for (final Object v : decorated().values())",
      "info" : "EnhancedForStatement[17497-17598]:EnhancedForStatement[17497-17598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17541-17598]:Block[17541-17598]"
    }, {
      "left" : "total += CollectionUtils.size(v);",
      "right" : "total += CollectionUtils.size(v);",
      "info" : "ExpressionStatement[17555-17588]:ExpressionStatement[17555-17588]"
    }, {
      "left" : "return total;",
      "right" : "return total;",
      "info" : "ReturnStatement[17607-17620]:ReturnStatement[17607-17620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18022-18072]:Block[18022-18072]"
    }, {
      "left" : "return collectionFactory.create();",
      "right" : "return collectionFactory.create();",
      "info" : "ReturnStatement[18032-18066]:ReturnStatement[18032-18066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18331-18548]:Block[18331-18548]"
    }, {
      "left" : "final IteratorChain<V> chain = new IteratorChain<V>();",
      "right" : "final IteratorChain<V> chain = new IteratorChain<V>();",
      "info" : "VariableDeclarationStatement[18345-18399]:VariableDeclarationStatement[18345-18399]"
    }, {
      "left" : "for (final K k : keySet())",
      "right" : "for (final K k : keySet())",
      "info" : "EnhancedForStatement[18412-18512]:EnhancedForStatement[18412-18512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18439-18512]:Block[18439-18512]"
    }, {
      "left" : "chain.addIterator(new ValuesIterator(k));",
      "right" : "chain.addIterator(new ValuesIterator(k));",
      "info" : "ExpressionStatement[18457-18498]:ExpressionStatement[18457-18498]"
    }, {
      "left" : "return chain;",
      "right" : "return chain;",
      "info" : "ReturnStatement[18525-18538]:ReturnStatement[18525-18538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18594-18637]:Block[18594-18637]"
    }, {
      "left" : "return totalSize();",
      "right" : "return totalSize();",
      "info" : "ReturnStatement[18608-18627]:ReturnStatement[18608-18627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18685-18736]:Block[18685-18736]"
    }, {
      "left" : "MultiValueMap.this.clear();",
      "right" : "MultiValueMap.this.clear();",
      "info" : "ExpressionStatement[18699-18726]:ExpressionStatement[18699-18726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19043-19175]:Block[19043-19175]"
    }, {
      "left" : "this.key = key;",
      "right" : "this.key = key;",
      "info" : "ExpressionStatement[19057-19072]:ExpressionStatement[19057-19072]"
    }, {
      "left" : "this.values = getCollection(key);",
      "right" : "this.values = getCollection(key);",
      "info" : "ExpressionStatement[19085-19118]:ExpressionStatement[19085-19118]"
    }, {
      "left" : "this.iterator = values.iterator();",
      "right" : "this.iterator = values.iterator();",
      "info" : "ExpressionStatement[19131-19165]:ExpressionStatement[19131-19165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19224-19364]:Block[19224-19364]"
    }, {
      "left" : "iterator.remove();",
      "right" : "iterator.remove();",
      "info" : "ExpressionStatement[19238-19256]:ExpressionStatement[19238-19256]"
    }, {
      "left" : "if (values.isEmpty())",
      "right" : "if (values.isEmpty())",
      "info" : "IfStatement[19269-19354]:IfStatement[19269-19354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19291-19354]:Block[19291-19354]"
    }, {
      "left" : "MultiValueMap.this.remove(key);",
      "right" : "MultiValueMap.this.remove(key);",
      "info" : "ExpressionStatement[19309-19340]:ExpressionStatement[19309-19340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19417-19467]:Block[19417-19467]"
    }, {
      "left" : "return iterator.hasNext();",
      "right" : "return iterator.hasNext();",
      "info" : "ReturnStatement[19431-19457]:ReturnStatement[19431-19457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19511-19558]:Block[19511-19558]"
    }, {
      "left" : "return iterator.next();",
      "right" : "return iterator.next();",
      "info" : "ReturnStatement[19525-19548]:ReturnStatement[19525-19548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19958-20001]:Block[19958-20001]"
    }, {
      "left" : "this.clazz = clazz;",
      "right" : "this.clazz = clazz;",
      "info" : "ExpressionStatement[19972-19991]:ExpressionStatement[19972-19991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20047-20263]:Block[20047-20263]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[20061-20253]:TryStatement[20061-20253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20065-20124]:Block[20065-20124]"
    }, {
      "left" : "return clazz.newInstance();",
      "right" : "return clazz.newInstance();",
      "info" : "ReturnStatement[20083-20110]:ReturnStatement[20083-20110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20152-20253]:Block[20152-20253]"
    }, {
      "left" : "throw new FunctorException(\"Cannot instantiate class: \" + clazz, ex);",
      "right" : "throw new FunctorException(\"Cannot instantiate class: \" + clazz, ex);",
      "info" : "ThrowStatement[20170-20239]:ThrowStatement[20170-20239]"
    } ]
  },
  "interFileMappings" : { }
}