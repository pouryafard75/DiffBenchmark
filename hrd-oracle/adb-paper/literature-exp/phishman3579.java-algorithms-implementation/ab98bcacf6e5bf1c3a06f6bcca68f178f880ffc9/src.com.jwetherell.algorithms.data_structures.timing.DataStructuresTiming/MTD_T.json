{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "TypeDeclaration[1586-85441]:TypeDeclaration[1618-72424]"
    }, {
      "left" : "private static final Random RANDOM = new Random();",
      "right" : "private static final Random RANDOM = new Random();",
      "info" : "FieldDeclaration[1627-1677]:FieldDeclaration[1659-1709]"
    }, {
      "left" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"0.##\");",
      "right" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"0.##\");",
      "info" : "FieldDeclaration[1682-1752]:FieldDeclaration[1714-1784]"
    }, {
      "left" : "private static final int NUMBER_OF_TESTS = 3;",
      "right" : "private static final int NUMBER_OF_TESTS = 3;",
      "info" : "FieldDeclaration[1757-1802]:FieldDeclaration[1789-1834]"
    }, {
      "left" : "private static final int ARRAY_SIZE = 1024*20;",
      "right" : "private static final int ARRAY_SIZE = 1024*20;",
      "info" : "FieldDeclaration[1906-1952]:FieldDeclaration[1932-1978]"
    }, {
      "left" : "private static final int RANDOM_SIZE = 1000 * ARRAY_SIZE;",
      "right" : "private static final int RANDOM_SIZE = 1000 * ARRAY_SIZE;",
      "info" : "FieldDeclaration[2023-2080]:FieldDeclaration[2049-2106]"
    }, {
      "left" : "private static final Integer INVALID = RANDOM_SIZE + 10;",
      "right" : "private static final Integer INVALID = RANDOM_SIZE + 10;",
      "info" : "FieldDeclaration[2085-2141]:FieldDeclaration[2111-2167]"
    }, {
      "left" : "private static boolean firstTimeThru = true;",
      "right" : "private static boolean firstTimeThru = true;",
      "info" : "FieldDeclaration[2279-2323]:FieldDeclaration[2878-2922]"
    }, {
      "left" : "private static int debug = 1;",
      "right" : "private static int debug = 1;",
      "info" : "FieldDeclaration[2383-2412]:FieldDeclaration[2462-2491]"
    }, {
      "left" : "private static boolean debugTime = true;",
      "right" : "private static boolean debugTime = true;",
      "info" : "FieldDeclaration[2510-2550]:FieldDeclaration[2589-2629]"
    }, {
      "left" : "private static boolean debugMemory = true;",
      "right" : "private static boolean debugMemory = true;",
      "info" : "FieldDeclaration[2640-2682]:FieldDeclaration[2719-2761]"
    }, {
      "left" : "private static final int TESTS = 39;",
      "right" : "private static final int TESTS = 39;",
      "info" : "FieldDeclaration[2737-2773]:FieldDeclaration[2173-2209]"
    }, {
      "left" : "private static final String[] testNames = new String[TESTS];",
      "right" : "private static final String[] testNames = new String[TESTS];",
      "info" : "FieldDeclaration[2827-2887]:FieldDeclaration[2263-2323]"
    }, {
      "left" : "private static final long[][] testResults = new long[TESTS][];",
      "right" : "private static final long[][] testResults = new long[TESTS][];",
      "info" : "FieldDeclaration[2924-2986]:FieldDeclaration[2360-2422]"
    }, {
      "left" : "private static int testIndex = 0;",
      "right" : "private static int testIndex = 0;",
      "info" : "FieldDeclaration[3025-3058]:FieldDeclaration[2816-2849]"
    }, {
      "left" : "public static void main(String[] args)",
      "right" : "public static void main(String[] args)",
      "info" : "MethodDeclaration[3088-3517]:MethodDeclaration[2983-3372]"
    }, {
      "left" : "private static void generateTestData(int idx, int size, Integer[][] unsorteds, Integer[][] sorteds, String[] strings)",
      "right" : "private static void generateTestData(int idx, int size, Integer[][] unsorteds, Integer[][] sorteds, String[] strings)",
      "info" : "MethodDeclaration[3523-4833]:MethodDeclaration[3378-4694]"
    }, {
      "left" : "private static boolean runTests()",
      "right" : "private static final boolean runTests(Testable testable, int tests, Integer[][] unsorteds, Integer sorteds[][], String[] strings)",
      "info" : "MethodDeclaration[4839-32261]:MethodDeclaration[10174-11212]"
    }, {
      "left" : "private static void handleError(Object obj)",
      "right" : "private static void handleError(String input, Object obj)",
      "info" : "MethodDeclaration[32267-32452]:MethodDeclaration[11218-11416]"
    }, {
      "left" : "private static final BinarySearchTree<Integer> avlTree = new AVLTree<Integer>();",
      "right" : "BinarySearchTree<Integer> avlTree = new AVLTree<Integer>();",
      "info" : "FieldDeclaration[32458-32538]:FieldDeclaration[11764-11823]"
    }, {
      "left" : "private static boolean testAVLTree()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[32543-32808]:MethodDeclaration[12015-12264]"
    }, {
      "left" : "private static final BTree<Integer> bTree = new BTree<Integer>(2);",
      "right" : "BTree<Integer> bTree = new BTree<Integer>(2);",
      "info" : "FieldDeclaration[32814-32880]:FieldDeclaration[12335-12380]"
    }, {
      "left" : "private static boolean testBTree()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[32885-33148]:MethodDeclaration[12568-12817]"
    }, {
      "left" : "private static final BinarySearchTree<Integer> bst = new BinarySearchTree<Integer>();",
      "right" : "BinarySearchTree<Integer> bst = new BinarySearchTree<Integer>();",
      "info" : "FieldDeclaration[33154-33239]:FieldDeclaration[12886-12950]"
    }, {
      "left" : "private static boolean testBST()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[33244-33490]:MethodDeclaration[13133-13382]"
    }, {
      "left" : "private static final BinaryHeap.BinaryHeapArray<Integer> aHeapMin = new BinaryHeap.BinaryHeapArray<Integer>(BinaryHeap.Type.MIN);",
      "right" : "BinaryHeap.BinaryHeapArray<Integer> aHeapMin = new BinaryHeap.BinaryHeapArray<Integer>(BinaryHeap.Type.MIN);",
      "info" : "FieldDeclaration[33496-33625]:FieldDeclaration[13460-13568]"
    }, {
      "left" : "private static boolean testMinHeap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[33762-34252]:MethodDeclaration[14404-14654]"
    }, {
      "left" : "private static final BinaryHeap.BinaryHeapArray<Integer> aHeapMax = new BinaryHeap.BinaryHeapArray<Integer>(BinaryHeap.Type.MAX);",
      "right" : "BinaryHeap.BinaryHeapArray<Integer> aHeapMax = new BinaryHeap.BinaryHeapArray<Integer>(BinaryHeap.Type.MAX);",
      "info" : "FieldDeclaration[34258-34387]:FieldDeclaration[14732-14840]"
    }, {
      "left" : "private static boolean testMaxHeap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[34524-35014]:MethodDeclaration[15676-15926]"
    }, {
      "left" : "private static final HashMap<Integer,String> pHashMap = new HashMap<Integer,String>(HashMap.Type.PROBING, ARRAY_SIZE/2);",
      "right" : "java.util.Map<Integer,String> jMap = pHashMap.toMap();",
      "info" : "FieldDeclaration[35020-35140]:FieldDeclaration[16165-16219]"
    }, {
      "left" : "private static final HashMap<Integer,String> cHashMap = new HashMap<Integer,String>(HashMap.Type.CHAINING, ARRAY_SIZE/2);",
      "right" : "HashMap<Integer,String> cHashMap = new HashMap<Integer,String>(HashMap.Type.CHAINING, ARRAY_SIZE/2);",
      "info" : "FieldDeclaration[35145-35266]:FieldDeclaration[16626-16726]"
    }, {
      "left" : "private static boolean testHashMap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[35271-35662]:MethodDeclaration[16921-17167]"
    }, {
      "left" : "private static final HashArrayMappedTrie<Integer,String> hamt = new HashArrayMappedTrie<Integer,String>();",
      "right" : "HashArrayMappedTrie<Integer,String> hamt = new HashArrayMappedTrie<Integer,String>();",
      "info" : "FieldDeclaration[35668-35774]:FieldDeclaration[17237-17322]"
    }, {
      "left" : "private static boolean testHAMT()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[35779-36014]:MethodDeclaration[17501-17747]"
    }, {
      "left" : "private static final java.util.Map<Integer,String> javaHashMap = new java.util.HashMap<Integer,String>(ARRAY_SIZE/2);",
      "right" : "java.util.Map<Integer,String> javaHashMap = new java.util.HashMap<Integer,String>(ARRAY_SIZE/2);",
      "info" : "FieldDeclaration[36020-36137]:FieldDeclaration[17824-17920]"
    }, {
      "left" : "private static boolean testJavaHashMap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[36142-36334]:MethodDeclaration[18050-18303]"
    }, {
      "left" : "private static final java.util.PriorityQueue<Integer> javaMinArrayHeap = new java.util.PriorityQueue<Integer>(10,\n        new Comparator<Integer>() {\n            @Override\n            public int compare(Integer arg0, Integer arg1) {\n                if (arg0.compareTo(arg1) < 0)\n                    return -1;\n                else if (arg1.compareTo(arg0) < 0)\n                    return 1;\n                return 0;\n            }\n        }\n    );",
      "right" : "java.util.PriorityQueue<Integer> javaMinArrayHeap = new java.util.PriorityQueue<Integer>(10,\n            new Comparator<Integer>() {\n                @Override\n                public int compare(Integer arg0, Integer arg1) {\n                    if (arg0.compareTo(arg1) > 0)\n                        return 1;\n                    else if (arg1.compareTo(arg0) > 0)\n                        return -1;\n                    return 0;\n                }\n            }\n        );",
      "info" : "FieldDeclaration[36340-36787]:FieldDeclaration[18380-18850]"
    }, {
      "left" : "public int compare(Integer arg0, Integer arg1)",
      "right" : "public int compare(Integer arg0, Integer arg1)",
      "info" : "MethodDeclaration[36502-36770]:MethodDeclaration[18529-18825]"
    }, {
      "left" : "private static boolean testJavaMinHeap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[36792-37005]:MethodDeclaration[18989-19241]"
    }, {
      "left" : "private static final java.util.PriorityQueue<Integer> javaMaxArrayHeap = new java.util.PriorityQueue<Integer>(10,\n        new Comparator<Integer>() {\n            @Override\n            public int compare(Integer arg0, Integer arg1) {\n                if (arg0.compareTo(arg1) > 0)\n                    return -1;\n                else if (arg1.compareTo(arg0) > 0)\n                    return 1;\n                return 0;\n            }\n        }\n    );",
      "right" : "java.util.PriorityQueue<Integer> javaMaxArrayHeap = new java.util.PriorityQueue<Integer>(10,\n            new Comparator<Integer>() {\n                @Override\n                public int compare(Integer arg0, Integer arg1) {\n                    if (arg0.compareTo(arg1) > 0)\n                        return -1;\n                    else if (arg1.compareTo(arg0) > 0)\n                        return 1;\n                    return 0;\n                }\n            }\n        );",
      "info" : "FieldDeclaration[37011-37458]:FieldDeclaration[19318-19788]"
    }, {
      "left" : "public int compare(Integer arg0, Integer arg1)",
      "right" : "public int compare(Integer arg0, Integer arg1)",
      "info" : "MethodDeclaration[37173-37441]:MethodDeclaration[19467-19763]"
    }, {
      "left" : "private static boolean testJavaMaxHeap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[37463-37676]:MethodDeclaration[19927-20179]"
    }, {
      "left" : "private static final java.util.List<Integer> javaArrayList = new java.util.ArrayList<Integer>();",
      "right" : "java.util.List<Integer> javaArrayList = new java.util.ArrayList<Integer>();",
      "info" : "FieldDeclaration[37682-37778]:FieldDeclaration[20258-20333]"
    }, {
      "left" : "private static boolean testJavaArrayList()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[37783-37991]:MethodDeclaration[20468-20717]"
    }, {
      "left" : "private static final java.util.List<Integer> javaLinkedList = new java.util.LinkedList<Integer>();",
      "right" : "java.util.List<Integer> javaLinkedList = new java.util.LinkedList<Integer>();",
      "info" : "FieldDeclaration[37997-38095]:FieldDeclaration[20797-20874]"
    }, {
      "left" : "private static boolean testJavaLinkedList()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[38100-38311]:MethodDeclaration[21010-21260]"
    }, {
      "left" : "private static final java.util.Deque<Integer> javaArrayQueue = new java.util.ArrayDeque<Integer>();",
      "right" : "java.util.Deque<Integer> javaArrayQueue = new java.util.ArrayDeque<Integer>();",
      "info" : "FieldDeclaration[38317-38416]:FieldDeclaration[21340-21418]"
    }, {
      "left" : "private static boolean testJavaArrayQueue()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[38421-38632]:MethodDeclaration[21554-21804]"
    }, {
      "left" : "private static final java.util.Deque<Integer> javaLinkedQueue = new java.util.LinkedList<Integer>();",
      "right" : "java.util.Deque<Integer> javaLinkedQueue = new java.util.LinkedList<Integer>();",
      "info" : "FieldDeclaration[38638-38738]:FieldDeclaration[21885-21964]"
    }, {
      "left" : "private static boolean testJavaLinkedQueue()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[38743-38957]:MethodDeclaration[22101-22352]"
    }, {
      "left" : "private static final java.util.TreeSet<Integer> javaRedBlackTreeInteger = new java.util.TreeSet<Integer>();",
      "right" : "java.util.TreeSet<Integer> javaRedBlackTreeInteger = new java.util.TreeSet<Integer>();",
      "info" : "FieldDeclaration[38963-39070]:FieldDeclaration[22441-22527]"
    }, {
      "left" : "private static boolean testJavaRedBlackIntegerTree()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[39075-39305]:MethodDeclaration[22664-22923]"
    }, {
      "left" : "private static final java.util.TreeSet<String> javaRedBlackTreeString = new java.util.TreeSet<String>();",
      "right" : "java.util.TreeSet<String> javaRedBlackTreeString = new java.util.TreeSet<String>();",
      "info" : "FieldDeclaration[39311-39415]:FieldDeclaration[23011-23094]"
    }, {
      "left" : "private static boolean testJavaRedBlackStringTree()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[39420-39646]:MethodDeclaration[23230-23487]"
    }, {
      "left" : "private static final java.util.Stack<Integer> javaStack = new java.util.Stack<Integer>();",
      "right" : "java.util.Stack<Integer> javaStack = new java.util.Stack<Integer>();",
      "info" : "FieldDeclaration[39652-39741]:FieldDeclaration[23562-23630]"
    }, {
      "left" : "private static boolean testJavaStack()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[39746-39947]:MethodDeclaration[23766-24011]"
    }, {
      "left" : "private static final java.util.Map<String,Integer> javaTreeMap = new java.util.TreeMap<String,Integer>();",
      "right" : "String name = \"Java's TreeMap <String>\";",
      "info" : "FieldDeclaration[39953-40058]:FieldDeclaration[24181-24221]"
    }, {
      "left" : "private static boolean testJavaTreeMap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[40063-40253]:MethodDeclaration[24301-24554]"
    }, {
      "left" : "private static final List.ArrayList<Integer> arrayList = new List.ArrayList<Integer>();",
      "right" : "List.ArrayList<Integer> arrayList = new List.ArrayList<Integer>();",
      "info" : "FieldDeclaration[40259-40346]:FieldDeclaration[24629-24695]"
    }, {
      "left" : "private static boolean testArrayList()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[40351-40614]:MethodDeclaration[24891-25138]"
    }, {
      "left" : "private static final List.LinkedList<Integer> linkedList = new List.LinkedList<Integer>();",
      "right" : "List.LinkedList<Integer> linkedList = new List.LinkedList<Integer>();",
      "info" : "FieldDeclaration[40620-40710]:FieldDeclaration[25214-25283]"
    }, {
      "left" : "private static boolean testLinkedList()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[40715-40981]:MethodDeclaration[25481-25728]"
    }, {
      "left" : "private static final PatriciaTrie<String> patriciaTrie = new PatriciaTrie<String>();",
      "right" : "PatriciaTrie<String> patriciaTrie = new PatriciaTrie<String>();",
      "info" : "FieldDeclaration[40987-41071]:FieldDeclaration[25806-25869]"
    }, {
      "left" : "private static boolean testPatriciaTrie()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[41076-41355]:MethodDeclaration[26068-26316]"
    }, {
      "left" : "private static final Queue.ArrayQueue<Integer> arrayQueue = new Queue.ArrayQueue<Integer>();",
      "right" : "Queue.ArrayQueue<Integer> arrayQueue = new Queue.ArrayQueue<Integer>();",
      "info" : "FieldDeclaration[41361-41453]:FieldDeclaration[26392-26463]"
    }, {
      "left" : "private static boolean testArrayQueue()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[41458-41724]:MethodDeclaration[26661-26908]"
    }, {
      "left" : "private static final Queue.LinkedQueue<Integer> linkedQueue = new Queue.LinkedQueue<Integer>();",
      "right" : "Queue.LinkedQueue<Integer> linkedQueue = new Queue.LinkedQueue<Integer>();",
      "info" : "FieldDeclaration[41730-41825]:FieldDeclaration[26985-27059]"
    }, {
      "left" : "private static boolean testLinkedQueue()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[41830-42099]:MethodDeclaration[27259-27506]"
    }, {
      "left" : "private static final RadixTrie<String,Integer> radixTrie = new RadixTrie<String,Integer>();",
      "right" : "RadixTrie<String,Integer> radixTrie = new RadixTrie<String,Integer>();",
      "info" : "FieldDeclaration[42105-42196]:FieldDeclaration[27581-27651]"
    }, {
      "left" : "private static boolean testRadixTrie()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[42201-42441]:MethodDeclaration[27839-28085]"
    }, {
      "left" : "private static final BinarySearchTree<Integer> redBlackTree = new RedBlackTree<Integer>();",
      "right" : "BinarySearchTree<Integer> redBlackTree = new RedBlackTree<Integer>();",
      "info" : "FieldDeclaration[42447-42537]:FieldDeclaration[28163-28232]"
    }, {
      "left" : "private static boolean testRedBlackTree()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[42542-42817]:MethodDeclaration[28435-28684]"
    }, {
      "left" : "private static final NavigableSet<Integer> javaSkipList = new ConcurrentSkipListSet<Integer>();",
      "right" : "NavigableSet<Integer> javaSkipList = new ConcurrentSkipListSet<Integer>();",
      "info" : "FieldDeclaration[42823-42918]:FieldDeclaration[28762-28836]"
    }, {
      "left" : "private static boolean testJavaSkipList()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[42923-43183]:MethodDeclaration[29026-29273]"
    }, {
      "left" : "private static final SkipList<Integer> skipList = new SkipList<Integer>();",
      "right" : "SkipList<Integer> skipList = new SkipList<Integer>();",
      "info" : "FieldDeclaration[43189-43263]:FieldDeclaration[29347-29400]"
    }, {
      "left" : "private static boolean testSkipList()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[43268-43525]:MethodDeclaration[29591-29838]"
    }, {
      "left" : "private static final BinarySearchTree<Integer> splayTree = new SplayTree<Integer>();",
      "right" : "BinarySearchTree<Integer> splayTree = new SplayTree<Integer>();",
      "info" : "FieldDeclaration[43531-43615]:FieldDeclaration[29913-29976]"
    }, {
      "left" : "private static boolean testSplayTree()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[43620-43885]:MethodDeclaration[30172-30421]"
    }, {
      "left" : "private static final Stack.ArrayStack<Integer> arrayStack = new Stack.ArrayStack<Integer>();",
      "right" : "Stack.ArrayStack<Integer> arrayStack = new Stack.ArrayStack<Integer>();",
      "info" : "FieldDeclaration[43891-43983]:FieldDeclaration[30497-30568]"
    }, {
      "left" : "private static boolean testArrayStack()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[43988-44254]:MethodDeclaration[30766-31013]"
    }, {
      "left" : "private static final Stack.LinkedStack<Integer> linkedStack = new Stack.LinkedStack<Integer>();",
      "right" : "Stack.LinkedStack<Integer> linkedStack = new Stack.LinkedStack<Integer>();",
      "info" : "FieldDeclaration[44260-44355]:FieldDeclaration[31090-31164]"
    }, {
      "left" : "private static boolean testLinkedStack()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[44360-44629]:MethodDeclaration[31364-31611]"
    }, {
      "left" : "private static final BinarySearchTree<Integer> treap = new Treap<Integer>();",
      "right" : "BinarySearchTree<Integer> treap = new Treap<Integer>();",
      "info" : "FieldDeclaration[44635-44711]:FieldDeclaration[31682-31737]"
    }, {
      "left" : "private static boolean testTreap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[44716-44972]:MethodDeclaration[31926-32177]"
    }, {
      "left" : "private static final TreeMap<String,Integer> treeMap = new TreeMap<String,Integer>();",
      "right" : "TreeMap<String,Integer> treeMap = new TreeMap<String,Integer>();",
      "info" : "FieldDeclaration[44978-45063]:FieldDeclaration[32250-32314]"
    }, {
      "left" : "private static boolean testTreeMap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[45068-45302]:MethodDeclaration[32498-32744]"
    }, {
      "left" : "private static final Trie<String> trie = new Trie<String>();",
      "right" : "Trie<String> trie = new Trie<String>();",
      "info" : "FieldDeclaration[45308-45368]:FieldDeclaration[32814-32853]"
    }, {
      "left" : "private static boolean testTrie()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[45373-45621]:MethodDeclaration[33037-33286]"
    }, {
      "left" : "private static final TrieMap<String,Integer> trieMap = new TrieMap<String,Integer>();",
      "right" : "TrieMap<String,Integer> trieMap = new TrieMap<String,Integer>();",
      "info" : "FieldDeclaration[45627-45712]:FieldDeclaration[33359-33423]"
    }, {
      "left" : "private static boolean testTrieMap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[45717-45951]:MethodDeclaration[33607-33853]"
    }, {
      "left" : "private static final ConcurrentSkipListMap<String,Integer> javaSkipListMap = new ConcurrentSkipListMap<String,Integer>();",
      "right" : "ConcurrentSkipListMap<String,Integer> javaSkipListMap = new ConcurrentSkipListMap<String,Integer>();",
      "info" : "FieldDeclaration[45957-46078]:FieldDeclaration[33934-34034]"
    }, {
      "left" : "private static boolean testJavaSkipListMap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[46083-46285]:MethodDeclaration[34167-34424]"
    }, {
      "left" : "private static final SkipListMap<String,Integer> skipListMap = new SkipListMap<String,Integer>();",
      "right" : "SkipListMap<String,Integer> skipListMap = new SkipListMap<String,Integer>();",
      "info" : "FieldDeclaration[46291-46388]:FieldDeclaration[34501-34577]"
    }, {
      "left" : "private static boolean testSkipListMap()",
      "right" : "public boolean run(Integer[] unsorted, Integer[] sorted, String input)",
      "info" : "MethodDeclaration[46393-46639]:MethodDeclaration[34769-35015]"
    }, {
      "left" : "private static <T extends Comparable<T>> boolean testJavaCollection(Collection<T> collection, Class<T> type, String name)",
      "right" : "private static <T extends Comparable<T>> boolean testJavaCollection(Collection<T> collection, Class<T> type, String name, Integer[] _unsorted, Integer[] _sorted, String input)",
      "info" : "MethodDeclaration[46645-63158]:MethodDeclaration[35028-51399]"
    }, {
      "left" : "private static <K extends Comparable<K>,V> boolean testJavaMap(java.util.Map<K,V> map, Class<K> keyType, String name)",
      "right" : "private static <K extends Comparable<K>,V> boolean testJavaMap(java.util.Map<K,V> map, Class<K> keyType, Class<V> valueType, String name, Integer[] _unsorted, Integer[] _sorted, String input)",
      "info" : "MethodDeclaration[63164-80064]:MethodDeclaration[51405-67024]"
    }, {
      "left" : "private static final String getTestResults(int number, String[] names, long[][] results)",
      "right" : "private static final String getTestResults(int number, String[] names, long[][] results)",
      "info" : "MethodDeclaration[80070-84613]:MethodDeclaration[67030-71596]"
    }, {
      "left" : "private static final long getMemoryUse()",
      "right" : "private static final long getMemoryUse()",
      "info" : "MethodDeclaration[84619-84892]:MethodDeclaration[71602-71875]"
    }, {
      "left" : "private static final void putOutTheGarbage()",
      "right" : "private static final void putOutTheGarbage()",
      "info" : "MethodDeclaration[84898-85028]:MethodDeclaration[71881-72011]"
    }, {
      "left" : "private static final long fSLEEP_INTERVAL = 100;",
      "right" : "private static final long fSLEEP_INTERVAL = 100;",
      "info" : "FieldDeclaration[85034-85082]:FieldDeclaration[72017-72065]"
    }, {
      "left" : "private static final void collectGarbage()",
      "right" : "private static final void collectGarbage()",
      "info" : "MethodDeclaration[85088-85439]:MethodDeclaration[72071-72422]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1586-1592]:Modifier[1618-1624]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1593-1598]:TYPE_DECLARATION_KIND[1625-1630]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "SimpleName[1599-1619]:SimpleName[1631-1651]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2147-2154]:Modifier[3378-3385]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2155-2161]:Modifier[2990-2996]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[2162-2169]:SimpleType[3434-3441]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[2169-2171]:Dimension[3443-3445]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[2172-2180]:SimpleName[10605-10613]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2193-2200]:Modifier[11704-11711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2201-2207]:Modifier[11429-11435]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[2208-2215]:SimpleType[10265-10272]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[2215-2217]:Dimension[3441-3443]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[2218-2224]:SimpleName[10615-10621]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2237-2244]:Modifier[4700-4707]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2245-2251]:Modifier[3386-3392]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2252-2258]:SimpleType[3478-3484]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[2268-2272]:NullLiteral[11485-11489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3088-3094]:Modifier[2983-2989]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3095-3101]:Modifier[4708-4714]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3102-3106]:PrimitiveType[2997-3001]"
    }, {
      "left" : "main",
      "right" : "main",
      "info" : "SimpleName[3107-3111]:SimpleName[3002-3006]"
    }, {
      "left" : "String[] args",
      "right" : "String[] args",
      "info" : "SingleVariableDeclaration[3112-3125]:SingleVariableDeclaration[3007-3020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3127-3517]:Block[3022-3372]"
    }, {
      "left" : "System.out.println(\"Starting tests.\");",
      "right" : "System.out.println(\"Starting tests.\");",
      "info" : "ExpressionStatement[3137-3175]:ExpressionStatement[3032-3070]"
    }, {
      "left" : "boolean passed = false;",
      "right" : "boolean passed = false;",
      "info" : "VariableDeclarationStatement[3184-3207]:VariableDeclarationStatement[3079-3102]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3216-3368]:TryStatement[3111-3223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3220-3264]:Block[3115-3159]"
    }, {
      "left" : "passed = runTests();",
      "right" : "passed = runTests();",
      "info" : "ExpressionStatement[3234-3254]:ExpressionStatement[3129-3149]"
    }, {
      "left" : "NullPointerException",
      "right" : "NullPointerException",
      "info" : "SimpleType[3272-3292]:SimpleType[3167-3187]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[3293-3294]:SimpleName[3211-3212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3296-3368]:Block[3191-3223]"
    }, {
      "left" : "throw e;",
      "right" : "throw e;",
      "info" : "ThrowStatement[3350-3358]:ThrowStatement[3205-3213]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[3356-3357]:SimpleName[3188-3189]"
    }, {
      "left" : "if (passed)",
      "right" : "if (passed)",
      "info" : "IfStatement[3377-3511]:IfStatement[3232-3366]"
    }, {
      "left" : "System.out.println(\"Tests finished. All passed.\");",
      "right" : "System.out.println(\"Tests finished. All passed.\");",
      "info" : "ExpressionStatement[3389-3439]:ExpressionStatement[3244-3294]"
    }, {
      "left" : "System.err.println(\"Tests finished. Detected a failure.\");",
      "right" : "System.err.println(\"Tests finished. Detected a failure.\");",
      "info" : "ExpressionStatement[3453-3511]:ExpressionStatement[3308-3366]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3523-3530]:Modifier[11218-11225]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3531-3537]:Modifier[11226-11232]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3538-3542]:PrimitiveType[3393-3397]"
    }, {
      "left" : "generateTestData",
      "right" : "generateTestData",
      "info" : "SimpleName[3543-3559]:SimpleName[3398-3414]"
    }, {
      "left" : "int idx",
      "right" : "int idx",
      "info" : "SingleVariableDeclaration[3560-3567]:SingleVariableDeclaration[3415-3422]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[3569-3577]:SingleVariableDeclaration[3424-3432]"
    }, {
      "left" : "Integer[][] unsorteds",
      "right" : "Integer[][] unsorteds",
      "info" : "SingleVariableDeclaration[3579-3600]:SingleVariableDeclaration[3434-3455]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[3579-3586]:SimpleType[10242-10249]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[3586-3588]:Dimension[3484-3486]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[3588-3590]:Dimension[10249-10251]"
    }, {
      "left" : "Integer[][] sorteds",
      "right" : "Integer[][] sorteds",
      "info" : "SingleVariableDeclaration[3602-3621]:SingleVariableDeclaration[3457-3476]"
    }, {
      "left" : "String[] strings",
      "right" : "String[] strings",
      "info" : "SingleVariableDeclaration[3623-3639]:SingleVariableDeclaration[3478-3494]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3623-3629]:SimpleType[10286-10292]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[3629-3631]:Dimension[10251-10253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3641-4833]:Block[3496-4694]"
    }, {
      "left" : "System.out.println(\"Generating data.\");",
      "right" : "System.out.println(\"Generating data.\");",
      "info" : "ExpressionStatement[3651-3690]:ExpressionStatement[3506-3545]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[3699-3743]:VariableDeclarationStatement[3554-3598]"
    }, {
      "left" : "builder.append(\"Array=\");",
      "right" : "builder.append(\"Array=\");",
      "info" : "ExpressionStatement[3752-3777]:ExpressionStatement[3607-3632]"
    }, {
      "left" : "java.util.Set<Integer> set = new java.util.HashSet<Integer>();",
      "right" : "java.util.Set<Integer> set = new java.util.HashSet<Integer>();",
      "info" : "VariableDeclarationStatement[3786-3848]:VariableDeclarationStatement[3641-3703]"
    }, {
      "left" : "unsorteds[idx] = new Integer[size];",
      "right" : "unsorteds[idx] = new Integer[size];",
      "info" : "ExpressionStatement[3857-3892]:ExpressionStatement[3712-3747]"
    }, {
      "left" : "sorteds[idx] = new Integer[size];",
      "right" : "sorteds[idx] = new Integer[size];",
      "info" : "ExpressionStatement[3901-3934]:ExpressionStatement[3756-3789]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[3943-4501]:ForStatement[3798-4356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3974-4501]:Block[3829-4356]"
    }, {
      "left" : "Integer j = RANDOM.nextInt(RANDOM_SIZE);",
      "right" : "Integer j = RANDOM.nextInt(RANDOM_SIZE);",
      "info" : "VariableDeclarationStatement[3988-4028]:VariableDeclarationStatement[3843-3883]"
    }, {
      "left" : "boolean found = true;",
      "right" : "boolean found = true;",
      "info" : "VariableDeclarationStatement[4090-4111]:VariableDeclarationStatement[3945-3966]"
    }, {
      "left" : "while (found)",
      "right" : "while (found)",
      "info" : "WhileStatement[4124-4398]:WhileStatement[3979-4253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4138-4398]:Block[3993-4253]"
    }, {
      "left" : "if (set.contains(j))",
      "right" : "if (set.contains(j))",
      "info" : "IfStatement[4156-4384]:IfStatement[4011-4239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4177-4249]:Block[4032-4104]"
    }, {
      "left" : "j = RANDOM.nextInt(RANDOM_SIZE);",
      "right" : "j = RANDOM.nextInt(RANDOM_SIZE);",
      "info" : "ExpressionStatement[4199-4231]:ExpressionStatement[4054-4086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4255-4384]:Block[4110-4239]"
    }, {
      "left" : "unsorteds[idx][i] = j;",
      "right" : "unsorteds[idx][i] = j;",
      "info" : "ExpressionStatement[4277-4299]:ExpressionStatement[4132-4154]"
    }, {
      "left" : "set.add(j);",
      "right" : "set.add(j);",
      "info" : "ExpressionStatement[4320-4331]:ExpressionStatement[4175-4186]"
    }, {
      "left" : "found = false;",
      "right" : "found = false;",
      "info" : "ExpressionStatement[4352-4366]:ExpressionStatement[4207-4221]"
    }, {
      "left" : "unsorteds[idx][i] = j;",
      "right" : "unsorteds[idx][i] = j;",
      "info" : "ExpressionStatement[4411-4433]:ExpressionStatement[4266-4288]"
    }, {
      "left" : "if (i!=size-1)",
      "right" : "if (i!=size-1)",
      "info" : "IfStatement[4446-4491]:IfStatement[4301-4346]"
    }, {
      "left" : "builder.append(j).append(',');",
      "right" : "builder.append(j).append(',');",
      "info" : "ExpressionStatement[4461-4491]:ExpressionStatement[4316-4346]"
    }, {
      "left" : "set.clear();",
      "right" : "set.clear();",
      "info" : "ExpressionStatement[4510-4522]:ExpressionStatement[4365-4377]"
    }, {
      "left" : "set = null;",
      "right" : "set = null;",
      "info" : "ExpressionStatement[4531-4542]:ExpressionStatement[4386-4397]"
    }, {
      "left" : "builder.append('\\n');",
      "right" : "builder.append('\\n');",
      "info" : "ExpressionStatement[4551-4572]:ExpressionStatement[4406-4427]"
    }, {
      "left" : "strings[idx] = builder.toString();",
      "right" : "strings[idx] = builder.toString();",
      "info" : "ExpressionStatement[4581-4615]:ExpressionStatement[4436-4470]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[4624-4666]:IfStatement[4479-4527]"
    }, {
      "left" : "System.out.println(string);",
      "right" : "System.out.println(strings[idx]);",
      "info" : "ExpressionStatement[4639-4666]:ExpressionStatement[4494-4527]"
    }, {
      "left" : "string",
      "right" : "idx",
      "info" : "SimpleName[4658-4664]:SimpleName[4521-4524]"
    }, {
      "left" : "sorteds[idx] = Arrays.copyOf(unsorteds[idx], unsorteds[idx].length);",
      "right" : "sorteds[idx] = Arrays.copyOf(unsorteds[idx], unsorteds[idx].length);",
      "info" : "ExpressionStatement[4676-4744]:ExpressionStatement[4537-4605]"
    }, {
      "left" : "Arrays.sort(sorteds[idx]);",
      "right" : "Arrays.sort(sorteds[idx]);",
      "info" : "ExpressionStatement[4753-4779]:ExpressionStatement[4614-4640]"
    }, {
      "left" : "System.out.println(\"Generated data.\");",
      "right" : "System.out.println(\"Generated data.\");",
      "info" : "ExpressionStatement[4789-4827]:ExpressionStatement[4650-4688]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4839-4846]:Modifier[10174-10181]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4847-4853]:Modifier[10182-10188]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4854-4861]:PrimitiveType[4715-4722]"
    }, {
      "left" : "runTests",
      "right" : "runTests",
      "info" : "SimpleName[4862-4870]:SimpleName[4723-4731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4873-32261]:Block[10304-11212]"
    }, {
      "left" : "testIndex = 0;",
      "right" : "testIndex = 0;",
      "info" : "ExpressionStatement[4883-4897]:ExpressionStatement[4744-4758]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4907-4914]:PrimitiveType[10195-10202]"
    }, {
      "left" : "int tests = NUMBER_OF_TESTS+1;",
      "right" : "int tests = NUMBER_OF_TESTS+1;",
      "info" : "VariableDeclarationStatement[4999-5029]:VariableDeclarationStatement[4828-4858]"
    }, {
      "left" : "Integer[][] unsorteds = new Integer[tests][];",
      "right" : "Integer[][] unsorteds = new Integer[tests][];",
      "info" : "VariableDeclarationStatement[5038-5083]:VariableDeclarationStatement[4867-4912]"
    }, {
      "left" : "Integer[][] sorteds = new Integer[tests][];",
      "right" : "Integer[][] sorteds = new Integer[tests][];",
      "info" : "VariableDeclarationStatement[5092-5135]:VariableDeclarationStatement[4921-4964]"
    }, {
      "left" : "String[] strings = new String[tests];",
      "right" : "String[] strings = new String[tests];",
      "info" : "VariableDeclarationStatement[5144-5181]:VariableDeclarationStatement[4973-5010]"
    }, {
      "left" : "for (int i=0; i<tests; i++)\n            generateTestData(i, ARRAY_SIZE, unsorteds, sorteds, strings);",
      "right" : "for (int i=0; i<tests; i++)\n            generateTestData(i, ARRAY_SIZE, unsorteds, sorteds, strings);",
      "info" : "ForStatement[5190-5291]:ForStatement[5019-5120]"
    }, {
      "left" : "generateTestData(i, ARRAY_SIZE, unsorteds, sorteds, strings);",
      "right" : "generateTestData(i, ARRAY_SIZE, unsorteds, sorteds, strings);",
      "info" : "ExpressionStatement[5230-5291]:ExpressionStatement[5059-5120]"
    }, {
      "left" : "firstTimeThru",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[5319-5332]:SimpleName[5129-5145]"
    }, {
      "left" : "firstTimeThru = true;",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[5319-5340]:ExpressionStatement[5129-5148]"
    }, {
      "left" : "i",
      "right" : "tests",
      "info" : "SimpleName[5358-5359]:SimpleName[5225-5230]"
    }, {
      "left" : "i",
      "right" : "unsorteds",
      "info" : "SimpleName[5363-5364]:SimpleName[5232-5241]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[5365-5370]:SimpleName[5472-5477]"
    }, {
      "left" : "i",
      "right" : "sorteds",
      "info" : "SimpleName[5372-5373]:SimpleName[5243-5250]"
    }, {
      "left" : "unsorted = unsorteds[i];",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[5413-5437]:ExpressionStatement[5284-5303]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5413-5421]:SimpleName[10451-10459]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[5424-5433]:SimpleName[5602-5611]"
    }, {
      "left" : "i",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[5434-5435]:SimpleName[5284-5300]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[5454-5460]:SimpleName[10502-10508]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[5463-5470]:SimpleName[5613-5620]"
    }, {
      "left" : "string",
      "right" : "runTests",
      "info" : "SimpleName[5491-5497]:SimpleName[5318-5326]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[5500-5507]:SimpleName[5622-5629]"
    }, {
      "left" : "i",
      "right" : "tests",
      "info" : "SimpleName[5508-5509]:SimpleName[5351-5356]"
    }, {
      "left" : "passed",
      "right" : "unsorteds",
      "info" : "SimpleName[5528-5534]:SimpleName[5358-5367]"
    }, {
      "left" : "testJavaRedBlackIntegerTree",
      "right" : "testJavaRedBlackIntegerTree",
      "info" : "SimpleName[5537-5564]:SimpleName[5194-5221]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testRedBlackTree(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[5584-5726]:IfStatement[5313-5401]"
    }, {
      "left" : "passed",
      "right" : "sorteds",
      "info" : "SimpleName[5589-5595]:SimpleName[5369-5376]"
    }, {
      "left" : "System.err.println(\"Java Red-Black [Integer] failed.\")",
      "right" : "runTests(new testRedBlackTree(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[5619-5673]:MethodInvocation[5318-5386]"
    }, {
      "left" : "println",
      "right" : "strings",
      "info" : "SimpleName[5630-5637]:SimpleName[5378-5385]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5695-5708]:ReturnStatement[9981-9994]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[5702-5707]:BooleanLiteral[5516-5521]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[5748-5768]:SimpleName[5444-5452]"
    }, {
      "left" : "NullPointerException",
      "right" : "testAVLTree",
      "info" : "SimpleType[5748-5768]:SimpleType[5457-5468]"
    }, {
      "left" : "e",
      "right" : "unsorteds",
      "info" : "SimpleName[5769-5770]:SimpleName[5479-5488]"
    }, {
      "left" : "System.err.println(string)",
      "right" : "runTests(new testAVLTree(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[5790-5816]:MethodInvocation[5444-5507]"
    }, {
      "left" : "println",
      "right" : "sorteds",
      "info" : "SimpleName[5801-5808]:SimpleName[5490-5497]"
    }, {
      "left" : "string",
      "right" : "strings",
      "info" : "SimpleName[5809-5815]:SimpleName[5499-5506]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[5885-5890]:BooleanLiteral[5877-5882]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "putOutTheGarbage()",
      "info" : "MethodInvocation[5971-6026]:MethodInvocation[5531-5549]"
    }, {
      "left" : "NUMBER_OF_TESTS",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[5986-6001]:SimpleName[5531-5547]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[6062-6081]:ExpressionStatement[5531-5550]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[6062-6078]:SimpleName[6009-6025]"
    }, {
      "left" : "firstTimeThru",
      "right" : "runTests",
      "info" : "SimpleName[6091-6104]:SimpleName[5565-5573]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[6137-6142]:SimpleName[6086-6091]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[6185-6193]:SimpleName[16328-16336]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[6196-6205]:SimpleName[6211-6220]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6226-6232]:SimpleName[16348-16354]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[6235-6242]:SimpleName[6222-6229]"
    }, {
      "left" : "string",
      "right" : "tests",
      "info" : "SimpleName[6263-6269]:SimpleName[5595-5600]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[6272-6279]:SimpleName[6231-6238]"
    }, {
      "left" : "testRedBlackTree",
      "right" : "testRedBlackTree",
      "info" : "SimpleName[6309-6325]:SimpleName[5331-5347]"
    }, {
      "left" : "testRedBlackTree()",
      "right" : "runTests(new testSplayTree(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[6309-6327]:MethodInvocation[5565-5630]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testSplayTree(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[6349-6356]:PrefixExpression[5564-5630]"
    }, {
      "left" : "System.err.println(\"Red-Black Tree failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[6380-6425]:ExpressionStatement[5654-5673]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[6453-6458]:BooleanLiteral[6374-6379]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[6499-6519]:SimpleName[5688-5696]"
    }, {
      "left" : "NullPointerException",
      "right" : "testBTree",
      "info" : "SimpleName[6499-6519]:SimpleName[5701-5710]"
    }, {
      "left" : "string",
      "right" : "sorteds",
      "info" : "SimpleName[6560-6566]:SimpleName[5732-5739]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[6636-6641]:BooleanLiteral[6517-6522]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[6703-6779]:ExpressionStatement[5773-5792]"
    }, {
      "left" : "println",
      "right" : "strings",
      "info" : "SimpleName[6714-6721]:SimpleName[5741-5748]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testBTree(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[6722-6777]:MethodInvocation[5688-5749]"
    }, {
      "left" : "testNames",
      "right" : "tests",
      "info" : "SimpleName[6754-6763]:SimpleName[5714-5719]"
    }, {
      "left" : "testResults",
      "right" : "unsorteds",
      "info" : "SimpleName[6765-6776]:SimpleName[5721-5730]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[6813-6829]:SimpleName[6654-6670]"
    }, {
      "left" : "firstTimeThru",
      "right" : "runTests",
      "info" : "SimpleName[6842-6855]:SimpleName[5807-5815]"
    }, {
      "left" : "i",
      "right" : "tests",
      "info" : "SimpleName[6881-6882]:SimpleName[5833-5838]"
    }, {
      "left" : "i",
      "right" : "unsorteds",
      "info" : "SimpleName[6886-6887]:SimpleName[5840-5849]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[6888-6893]:SimpleName[6864-6869]"
    }, {
      "left" : "i",
      "right" : "sorteds",
      "info" : "SimpleName[6895-6896]:SimpleName[5851-5858]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[6936-6944]:SimpleName[15705-15713]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[6947-6956]:SimpleName[6871-6880]"
    }, {
      "left" : "i",
      "right" : "strings",
      "info" : "SimpleName[6957-6958]:SimpleName[5860-5867]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6977-6983]:SimpleName[15725-15731]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[6986-6993]:SimpleName[6882-6889]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[7023-7030]:SimpleName[7016-7023]"
    }, {
      "left" : "testAVLTree",
      "right" : "testAVLTree",
      "info" : "SimpleName[7060-7071]:SimpleName[5457-5468]"
    }, {
      "left" : "testAVLTree()",
      "right" : "runTests(new testTreap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[7060-7073]:MethodInvocation[5807-5868]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testTreap(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[7095-7102]:PrefixExpression[5806-5868]"
    }, {
      "left" : "System.err.println(\"AVL Tree failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[7126-7165]:ExpressionStatement[5892-5911]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[7193-7198]:BooleanLiteral[7033-7038]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[7239-7259]:SimpleName[5926-5934]"
    }, {
      "left" : "NullPointerException",
      "right" : "testBST",
      "info" : "SimpleName[7239-7259]:SimpleName[5939-5946]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[7376-7381]:BooleanLiteral[7284-7289]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[7443-7519]:ExpressionStatement[6009-6028]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testBST(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[7462-7517]:MethodInvocation[5926-5985]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[7531-7540]:SimpleName[6043-6051]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[7553-7569]:SimpleName[7424-7440]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[7628-7633]:SimpleName[7510-7515]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[7676-7684]:SimpleName[15071-15079]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[7687-7696]:SimpleName[7640-7649]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[7717-7723]:SimpleName[15091-15097]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[7726-7733]:SimpleName[7651-7658]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[7763-7770]:SimpleName[7660-7667]"
    }, {
      "left" : "testSplayTree",
      "right" : "testSplayTree",
      "info" : "SimpleName[7800-7813]:SimpleName[5578-5591]"
    }, {
      "left" : "testSplayTree()",
      "right" : "runTests(new testJavaRedBlackStringTree(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[7800-7815]:MethodInvocation[6043-6121]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testJavaRedBlackStringTree(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[7837-7844]:PrefixExpression[6042-6121]"
    }, {
      "left" : "System.err.println(\"Splay Tree failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[7868-7909]:ExpressionStatement[6145-6164]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[7937-7942]:BooleanLiteral[7805-7810]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[7983-8003]:SimpleName[6179-6187]"
    }, {
      "left" : "NullPointerException",
      "right" : "testTrie",
      "info" : "SimpleName[7983-8003]:SimpleName[6192-6200]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[8120-8125]:BooleanLiteral[7929-7934]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[8187-8263]:ExpressionStatement[6263-6282]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testTrie(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[8206-8261]:MethodInvocation[6179-6239]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[8275-8284]:SimpleName[6297-6305]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[8297-8313]:SimpleName[8091-8107]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[8372-8377]:SimpleName[8285-8290]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[8420-8428]:SimpleName[14433-14441]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[8431-8440]:SimpleName[8292-8301]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[8461-8467]:SimpleName[14453-14459]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[8470-8477]:SimpleName[8303-8310]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[8507-8514]:SimpleName[8437-8444]"
    }, {
      "left" : "testBTree",
      "right" : "testBTree",
      "info" : "SimpleName[8544-8553]:SimpleName[5701-5710]"
    }, {
      "left" : "testBTree()",
      "right" : "runTests(new testPatriciaTrie(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[8544-8555]:MethodInvocation[6297-6365]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testPatriciaTrie(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[8577-8584]:PrefixExpression[6296-6365]"
    }, {
      "left" : "System.err.println(\"B-Tree failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[8608-8645]:ExpressionStatement[6389-6408]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[8673-8678]:BooleanLiteral[8454-8459]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[8719-8739]:SimpleName[6440-6448]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaSkipList",
      "info" : "SimpleName[8719-8739]:SimpleName[6453-6469]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[8856-8861]:BooleanLiteral[8720-8725]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[8923-8999]:ExpressionStatement[6532-6551]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testJavaSkipList(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[8942-8997]:MethodInvocation[6440-6508]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[9011-9020]:SimpleName[6566-6574]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[9033-9049]:SimpleName[8860-8876]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[9108-9113]:SimpleName[8943-8948]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[9156-9164]:SimpleName[13799-13807]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[9167-9176]:SimpleName[9078-9087]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[9197-9203]:SimpleName[13819-13825]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[9206-9213]:SimpleName[9089-9096]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[9243-9250]:SimpleName[9098-9105]"
    }, {
      "left" : "testTreap",
      "right" : "testTreap",
      "info" : "SimpleName[9280-9289]:SimpleName[5820-5829]"
    }, {
      "left" : "testTreap()",
      "right" : "runTests(new testSkipList(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[9280-9291]:MethodInvocation[6566-6630]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testSkipList(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[9313-9320]:PrefixExpression[6565-6630]"
    }, {
      "left" : "System.err.println(\"Treap failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[9344-9380]:ExpressionStatement[6654-6673]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[9408-9413]:BooleanLiteral[9244-9249]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[9454-9474]:SimpleName[6706-6714]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaMinHeap",
      "info" : "SimpleName[9454-9474]:SimpleName[6719-6734]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[9591-9596]:BooleanLiteral[9369-9374]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[9658-9734]:ExpressionStatement[6797-6816]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testJavaMinHeap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[9677-9732]:MethodInvocation[6706-6773]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[9768-9784]:SimpleName[9505-9521]"
    }, {
      "left" : "firstTimeThru",
      "right" : "runTests",
      "info" : "SimpleName[9797-9810]:SimpleName[6831-6839]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[9813-9817]:BooleanLiteral[10157-10161]"
    }, {
      "left" : "i",
      "right" : "testMinHeapArray",
      "info" : "SimpleName[9836-9837]:SimpleName[6844-6860]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[9843-9848]:SimpleName[9690-9695]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[9891-9899]:SimpleName[13162-13170]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[9902-9911]:SimpleName[9697-9706]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[9932-9938]:SimpleName[13182-13188]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[9941-9948]:SimpleName[9708-9715]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[9978-9985]:SimpleName[9846-9853]"
    }, {
      "left" : "testBST",
      "right" : "testBST",
      "info" : "SimpleName[10015-10022]:SimpleName[5939-5946]"
    }, {
      "left" : "testBST()",
      "right" : "runTests(new testMinHeapArray(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[10015-10024]:MethodInvocation[6831-6899]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testMinHeapArray(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[10042-10163]:IfStatement[6826-6914]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10132-10145]:ReturnStatement[9856-9869]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[10227-10254]:ExpressionStatement[6923-6942]"
    }, {
      "left" : "firstTimeThru",
      "right" : "testMinHeapTree",
      "info" : "SimpleName[10306-10319]:SimpleName[6970-6985]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[10322-10327]:BooleanLiteral[10106-10111]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[10389-10465]:ExpressionStatement[7048-7067]"
    }, {
      "left" : "getTestResults",
      "right" : "runTests",
      "info" : "SimpleName[10408-10422]:SimpleName[6957-6965]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testMinHeapTree(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[10408-10463]:MethodInvocation[6957-7024]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[10477-10486]:SimpleName[7082-7090]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[10499-10515]:SimpleName[10121-10137]"
    }, {
      "left" : "firstTimeThru",
      "right" : "firstTimeThru",
      "info" : "SimpleName[10528-10541]:SimpleName[10347-10360]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[10544-10548]:BooleanLiteral[10363-10367]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[10563-10566]:PrimitiveType[10231-10234]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[10569-10570]:NumberLiteral[10388-10389]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[10572-10573]:SimpleName[10391-10392]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[10574-10579]:SimpleName[10062-10067]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[10581-10582]:SimpleName[10519-10520]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[10622-10630]:SimpleName[11650-11658]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[10633-10642]:SimpleName[10069-10078]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[10643-10644]:SimpleName[10472-10473]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[10663-10669]:SimpleName[11670-11676]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[10672-10679]:SimpleName[10080-10087]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[10680-10681]:SimpleName[10386-10387]"
    }, {
      "left" : "string",
      "right" : "string",
      "info" : "SimpleName[10700-10706]:SimpleName[10546-10552]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[10709-10716]:SimpleName[10089-10096]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[10717-10718]:SimpleName[10400-10401]"
    }, {
      "left" : "passed",
      "right" : "passed",
      "info" : "SimpleName[10737-10743]:SimpleName[10322-10328]"
    }, {
      "left" : "testJavaRedBlackStringTree",
      "right" : "testJavaRedBlackStringTree",
      "info" : "SimpleName[10746-10772]:SimpleName[6056-6082]"
    }, {
      "left" : "testJavaRedBlackStringTree()",
      "right" : "runTests(new testJavaMaxHeap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[10746-10774]:MethodInvocation[7082-7149]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testJavaMaxHeap(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[10792-10933]:IfStatement[7077-7164]"
    }, {
      "left" : "passed",
      "right" : "passed",
      "info" : "SimpleName[10797-10803]:SimpleName[10583-10589]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[10827-10837]:METHOD_INVOCATION_RECEIVER[10683-10693]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[10838-10845]:SimpleName[10921-10928]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10902-10915]:ReturnStatement[7151-7164]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[10909-10914]:BooleanLiteral[10331-10336]"
    }, {
      "left" : "NullPointerException",
      "right" : "NullPointerException",
      "info" : "SimpleType[10955-10975]:SimpleType[10868-10888]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[10997-11024]:ExpressionStatement[7173-7192]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[10997-11007]:METHOD_INVOCATION_RECEIVER[10744-10754]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[11008-11015]:SimpleName[10694-10701]"
    }, {
      "left" : "string",
      "right" : "string",
      "info" : "SimpleName[11016-11022]:SimpleName[10623-10629]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[11047-11048]:SimpleName[10889-10890]"
    }, {
      "left" : "firstTimeThru",
      "right" : "runTests",
      "info" : "SimpleName[11076-11089]:SimpleName[7207-7215]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[11092-11097]:BooleanLiteral[9988-9993]"
    }, {
      "left" : "debugTime",
      "right" : "testMaxHeapArray",
      "info" : "SimpleName[11121-11130]:SimpleName[7220-7236]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[11134-11145]:SimpleName[11060-11071]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults))",
      "right" : "putOutTheGarbage()",
      "info" : "MethodInvocation[11159-11234]:MethodInvocation[7299-7317]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[11170-11177]:SimpleName[10755-10762]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "info" : "METHOD_INVOCATION_ARGUMENTS[11178-11233]:METHOD_INVOCATION_ARGUMENTS[11104-11159]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[11247-11256]:SimpleName[11173-11182]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[11269-11288]:ExpressionStatement[7299-7318]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[11269-11285]:SimpleName[10003-10019]"
    }, {
      "left" : "firstTimeThru",
      "right" : "firstTimeThru",
      "info" : "SimpleName[11298-11311]:SimpleName[11002-11015]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[11314-11318]:BooleanLiteral[11201-11205]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11333-11336]:PrimitiveType[10382-10385]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[11337-11338]:SimpleName[10563-10564]"
    }, {
      "left" : "i",
      "right" : "runTests",
      "info" : "SimpleName[11342-11343]:SimpleName[7333-7341]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[11344-11349]:SimpleName[9944-9949]"
    }, {
      "left" : "i",
      "right" : "testMaxHeapTree",
      "info" : "SimpleName[11351-11352]:SimpleName[7346-7361]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[11392-11400]:SimpleName[12597-12605]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[11403-11412]:SimpleName[10462-10471]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[11433-11439]:SimpleName[12617-12623]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[11442-11449]:SimpleName[10511-10518]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[11479-11486]:SimpleName[10555-10562]"
    }, {
      "left" : "passed",
      "right" : "passed",
      "info" : "SimpleName[11507-11513]:SimpleName[10653-10659]"
    }, {
      "left" : "testTrie",
      "right" : "testTrie",
      "info" : "SimpleName[11516-11524]:SimpleName[6192-6200]"
    }, {
      "left" : "testTrie()",
      "right" : "runTests(new testMaxHeapTree(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[11516-11526]:MethodInvocation[7333-7400]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testMaxHeapTree(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[11544-11666]:IfStatement[7328-7415]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[11579-11589]:METHOD_INVOCATION_RECEIVER[10910-10920]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[11590-11597]:SimpleName[11096-11103]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11635-11648]:ReturnStatement[10815-10828]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[11709-11710]:SimpleName[10973-10974]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[11730-11757]:ExpressionStatement[7424-7443]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[11730-11740]:METHOD_INVOCATION_RECEIVER[11286-11296]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[11741-11748]:SimpleName[11297-11304]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[11825-11830]:BooleanLiteral[11018-11023]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[11854-11863]:SimpleName[11047-11056]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[11892-11902]:METHOD_INVOCATION_RECEIVER[11085-11095]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[12002-12018]:SimpleName[9878-9894]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[12077-12082]:SimpleName[9819-9824]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[12125-12133]:SimpleName[12044-12052]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[12136-12145]:SimpleName[9951-9960]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[12166-12172]:SimpleName[12064-12070]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[12175-12182]:SimpleName[9962-9969]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[12212-12219]:SimpleName[9971-9978]"
    }, {
      "left" : "testPatriciaTrie",
      "right" : "testPatriciaTrie",
      "info" : "SimpleName[12249-12265]:SimpleName[6310-6326]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[12392-12397]:BooleanLiteral[9734-9739]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[12438-12458]:SimpleName[7476-7484]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaArrayList",
      "info" : "SimpleName[12438-12458]:SimpleName[7489-7506]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[12575-12580]:BooleanLiteral[9611-9616]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[12752-12768]:SimpleName[9749-9765]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[12814-12818]:BooleanLiteral[12249-12253]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[12844-12849]:SimpleName[9567-9572]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[12892-12900]:SimpleName[12190-12198]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[12903-12912]:SimpleName[9826-9835]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[12933-12939]:SimpleName[12200-12206]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[12942-12949]:SimpleName[9837-9844]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[12979-12986]:SimpleName[9717-9724]"
    }, {
      "left" : "testJavaSkipList",
      "right" : "testJavaSkipList",
      "info" : "SimpleName[13016-13032]:SimpleName[6453-6469]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[13162-13167]:BooleanLiteral[12223-12228]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[13345-13350]:BooleanLiteral[9490-9495]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testJavaArrayList(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[13431-13486]:MethodInvocation[7476-7545]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[13522-13538]:SimpleName[9626-9642]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[13567-13571]:BooleanLiteral[12802-12806]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[13597-13602]:SimpleName[9446-9451]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[13645-13653]:SimpleName[12743-12751]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[13656-13665]:SimpleName[9574-9583]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[13686-13692]:SimpleName[12753-12759]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[13695-13702]:SimpleName[9585-9592]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[13732-13739]:SimpleName[9594-9601]"
    }, {
      "left" : "testSkipList",
      "right" : "testSkipList",
      "info" : "SimpleName[13769-13781]:SimpleName[6579-6591]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testJavaArrayList(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[13801-13928]:IfStatement[7471-7560]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13897-13910]:ReturnStatement[12769-12782]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[13992-14019]:ExpressionStatement[7569-7588]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[14087-14092]:BooleanLiteral[9115-9120]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[14264-14280]:SimpleName[9384-9400]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[14327-14331]:BooleanLiteral[13367-13371]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[14357-14362]:SimpleName[9325-9330]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[14405-14413]:SimpleName[13308-13316]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[14416-14425]:SimpleName[9453-9462]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[14446-14452]:SimpleName[13318-13324]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[14455-14462]:SimpleName[9464-9471]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[14492-14499]:SimpleName[9473-9480]"
    }, {
      "left" : "testJavaMinHeap",
      "right" : "testJavaMinHeap",
      "info" : "SimpleName[14529-14544]:SimpleName[6719-6734]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[14671-14676]:BooleanLiteral[13341-13346]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[14717-14737]:SimpleName[7603-7611]"
    }, {
      "left" : "NullPointerException",
      "right" : "testArrayList",
      "info" : "SimpleType[14717-14737]:SimpleType[7616-7629]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[14854-14859]:BooleanLiteral[8987-8992]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[15031-15047]:SimpleName[9259-9275]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[15076-15080]:BooleanLiteral[14005-14009]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[15106-15111]:SimpleName[9200-9205]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[15154-15162]:SimpleName[13946-13954]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[15165-15174]:SimpleName[9332-9341]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[15195-15201]:SimpleName[13956-13962]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[15204-15211]:SimpleName[9343-9350]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[15241-15248]:SimpleName[9352-9359]"
    }, {
      "left" : "testMinHeap()",
      "right" : "runTests(new testArrayList(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[15278-15291]:MethodInvocation[7603-7668]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testArrayList(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[15309-15435]:IfStatement[7598-7683]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15404-15417]:ReturnStatement[13972-13985]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[15499-15526]:ExpressionStatement[7692-7711]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[15594-15599]:BooleanLiteral[8845-8850]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[15771-15787]:SimpleName[9130-9146]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[15816-15820]:BooleanLiteral[14639-14643]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[15846-15851]:SimpleName[9071-9076]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[15894-15902]:SimpleName[14580-14588]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[15905-15914]:SimpleName[9207-9216]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[15935-15941]:SimpleName[14590-14596]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[15944-15951]:SimpleName[9218-9225]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[15981-15988]:SimpleName[9227-9234]"
    }, {
      "left" : "testJavaMaxHeap",
      "right" : "testJavaMaxHeap",
      "info" : "SimpleName[16018-16033]:SimpleName[7095-7110]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[16160-16165]:BooleanLiteral[14613-14618]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[16206-16226]:SimpleName[7726-7734]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaLinkedList",
      "info" : "SimpleName[16206-16226]:SimpleName[7739-7757]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[16343-16348]:BooleanLiteral[8596-8601]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[16520-16536]:SimpleName[9002-9018]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[16565-16569]:BooleanLiteral[15277-15281]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[16595-16600]:SimpleName[8801-8806]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[16643-16651]:SimpleName[15218-15226]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[16654-16663]:SimpleName[8950-8959]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[16684-16690]:SimpleName[15228-15234]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[16693-16700]:SimpleName[8961-8968]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[16730-16737]:SimpleName[8970-8977]"
    }, {
      "left" : "testMaxHeap()",
      "right" : "runTests(new testJavaLinkedList(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[16767-16780]:MethodInvocation[7726-7796]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testJavaLinkedList(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[16798-16924]:IfStatement[7721-7811]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[16893-16906]:ReturnStatement[15244-15257]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[16988-17015]:ExpressionStatement[7820-7839]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[17083-17088]:BooleanLiteral[8329-8334]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[17260-17276]:SimpleName[8735-8751]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[17323-17327]:BooleanLiteral[15911-15915]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[17353-17358]:SimpleName[8676-8681]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[17401-17409]:SimpleName[15852-15860]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[17412-17421]:SimpleName[8808-8817]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[17442-17448]:SimpleName[15862-15868]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[17451-17458]:SimpleName[8819-8826]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[17488-17495]:SimpleName[8828-8835]"
    }, {
      "left" : "testJavaArrayList",
      "right" : "testJavaArrayList",
      "info" : "SimpleName[17525-17542]:SimpleName[7489-7506]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[17665-17670]:BooleanLiteral[15885-15890]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[17711-17731]:SimpleName[7854-7862]"
    }, {
      "left" : "NullPointerException",
      "right" : "testLinkedList",
      "info" : "SimpleName[17711-17731]:SimpleName[7867-7881]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[17848-17853]:BooleanLiteral[8200-8205]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[18025-18041]:SimpleName[8611-8627]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[18100-18105]:SimpleName[8552-8557]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[18148-18156]:SimpleName[16471-16479]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[18159-18168]:SimpleName[8683-8692]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[18189-18195]:SimpleName[16481-16487]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[18198-18205]:SimpleName[8694-8701]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[18235-18242]:SimpleName[8703-8710]"
    }, {
      "left" : "testArrayList",
      "right" : "testArrayList",
      "info" : "SimpleName[18272-18285]:SimpleName[7616-7629]"
    }, {
      "left" : "testArrayList()",
      "right" : "runTests(new testLinkedList(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[18272-18287]:MethodInvocation[7854-7920]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testLinkedList(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[18305-18427]:IfStatement[7849-7935]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18396-18409]:ReturnStatement[7922-7935]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[18403-18408]:BooleanLiteral[16504-16509]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[18491-18518]:ExpressionStatement[7944-7963]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[18586-18591]:BooleanLiteral[8076-8081]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[18763-18779]:SimpleName[8469-8485]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[18808-18812]:BooleanLiteral[16530-16534]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[18838-18843]:SimpleName[8410-8415]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[18886-18894]:SimpleName[16950-16958]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[18897-18906]:SimpleName[8559-8568]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[18927-18933]:SimpleName[16970-16976]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[18936-18943]:SimpleName[8570-8577]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[18973-18980]:SimpleName[8579-8586]"
    }, {
      "left" : "testJavaLinkedList",
      "right" : "testJavaLinkedList",
      "info" : "SimpleName[19010-19028]:SimpleName[7739-7757]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[19151-19156]:BooleanLiteral[7677-7682]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[19197-19217]:SimpleName[7997-8005]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaArrayQueue",
      "info" : "SimpleName[19197-19217]:SimpleName[8010-8028]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[19334-19339]:BooleanLiteral[17126-17131]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[19511-19527]:SimpleName[8344-8360]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[19556-19560]:BooleanLiteral[17152-17156]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[19581-19582]:NumberLiteral[18805-18806]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[19586-19591]:SimpleName[8156-8161]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[19634-19642]:SimpleName[17530-17538]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[19645-19654]:SimpleName[8417-8426]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[19675-19681]:SimpleName[17550-17556]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[19684-19691]:SimpleName[8428-8435]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[19721-19728]:SimpleName[8312-8319]"
    }, {
      "left" : "testLinkedList",
      "right" : "testLinkedList",
      "info" : "SimpleName[19758-19772]:SimpleName[7867-7881]"
    }, {
      "left" : "testLinkedList()",
      "right" : "runTests(new testJavaArrayQueue(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[19758-19774]:MethodInvocation[7997-8067]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testJavaArrayQueue(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[19792-19914]:IfStatement[7992-8082]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[19883-19896]:ReturnStatement[7547-7560]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[19978-20005]:ExpressionStatement[8091-8110]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[20073-20078]:BooleanLiteral[7409-7414]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[20250-20266]:SimpleName[8215-8231]"
    }, {
      "left" : "firstTimeThru",
      "right" : "runTests",
      "info" : "SimpleName[20298-20311]:SimpleName[8125-8133]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[20314-20318]:BooleanLiteral[17732-17736]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[20339-20340]:NumberLiteral[18651-18652]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[20344-20349]:SimpleName[8032-8037]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[20392-20400]:SimpleName[18079-18087]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[20403-20412]:SimpleName[8163-8172]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[20433-20439]:SimpleName[18099-18105]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[20442-20449]:SimpleName[8174-8181]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[20479-20486]:SimpleName[8183-8190]"
    }, {
      "left" : "testJavaArrayQueue",
      "right" : "testJavaArrayQueue",
      "info" : "SimpleName[20516-20534]:SimpleName[8010-8028]"
    }, {
      "left" : "testJavaArrayQueue()",
      "right" : "runTests(new testArrayQueue(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[20516-20536]:MethodInvocation[8125-8191]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testArrayQueue(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[20558-20565]:PrefixExpression[8124-8191]"
    }, {
      "left" : "System.err.println(\"Java Queue failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[20589-20630]:ExpressionStatement[8215-8234]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[20658-20663]:BooleanLiteral[17706-17711]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[20704-20724]:SimpleName[8249-8257]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaLinkedQueue",
      "info" : "SimpleType[20704-20724]:SimpleType[8262-8281]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[20841-20846]:BooleanLiteral[7158-7163]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[20908-20984]:ExpressionStatement[8344-8363]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testJavaLinkedQueue(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[20927-20982]:MethodInvocation[8249-8320]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[20996-21005]:SimpleName[8378-8386]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[21018-21034]:SimpleName[7944-7960]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[21063-21067]:BooleanLiteral[18288-18292]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[21082-21085]:PrimitiveType[18562-18565]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[21088-21089]:NumberLiteral[18740-18741]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[21093-21098]:SimpleName[7885-7890]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[21141-21149]:SimpleName[18229-18237]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[21152-21161]:SimpleName[8039-8048]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[21182-21188]:SimpleName[18239-18245]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[21191-21198]:SimpleName[8050-8057]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[21228-21235]:SimpleName[8059-8066]"
    }, {
      "left" : "testArrayQueue",
      "right" : "testArrayQueue",
      "info" : "SimpleName[21265-21279]:SimpleName[8138-8152]"
    }, {
      "left" : "testArrayQueue()",
      "right" : "runTests(new testLinkedQueue(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[21265-21281]:MethodInvocation[8378-8445]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testLinkedQueue(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[21303-21310]:PrefixExpression[8377-8445]"
    }, {
      "left" : "System.err.println(\"Queue failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[21334-21370]:ExpressionStatement[8469-8488]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[21398-21403]:BooleanLiteral[18262-18267]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[21444-21464]:SimpleName[8522-8530]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaStack",
      "info" : "SimpleType[21444-21464]:SimpleType[8535-8548]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[21581-21586]:BooleanLiteral[6908-6913]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[21648-21724]:ExpressionStatement[8611-8630]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testJavaStack(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[21667-21722]:MethodInvocation[8522-8587]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[21736-21745]:SimpleName[8645-8653]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[21758-21774]:SimpleName[7820-7836]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[21803-21807]:BooleanLiteral[19226-19230]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[21828-21829]:NumberLiteral[35500-35501]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[21833-21838]:SimpleName[7761-7766]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[21881-21889]:SimpleName[19167-19175]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[21892-21901]:SimpleName[7892-7901]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[21922-21928]:SimpleName[19177-19183]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[21931-21938]:SimpleName[7903-7910]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[21968-21975]:SimpleName[7912-7919]"
    }, {
      "left" : "testJavaLinkedQueue",
      "right" : "testJavaLinkedQueue",
      "info" : "SimpleName[22005-22024]:SimpleName[8262-8281]"
    }, {
      "left" : "testJavaLinkedQueue()",
      "right" : "runTests(new testArrayStack(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[22005-22026]:MethodInvocation[8645-8711]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testArrayStack(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[22048-22055]:PrefixExpression[8644-8711]"
    }, {
      "left" : "System.err.println(\"Java Queue failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[22079-22120]:ExpressionStatement[8735-8754]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[22148-22153]:BooleanLiteral[19200-19205]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[22194-22214]:SimpleName[8769-8777]"
    }, {
      "left" : "NullPointerException",
      "right" : "testLinkedStack",
      "info" : "SimpleType[22194-22214]:SimpleType[8782-8797]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[22331-22336]:BooleanLiteral[6782-6787]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[22398-22474]:ExpressionStatement[8860-8879]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testLinkedStack(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[22417-22472]:MethodInvocation[8769-8836]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[22486-22495]:SimpleName[8911-8919]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[22508-22524]:SimpleName[7692-7708]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[22553-22557]:BooleanLiteral[20164-20168]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[22578-22579]:NumberLiteral[41607-41608]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[22583-22588]:SimpleName[7633-7638]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[22631-22639]:SimpleName[19956-19964]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[22642-22651]:SimpleName[7768-7777]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[22672-22678]:SimpleName[19976-19982]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[22681-22688]:SimpleName[7779-7786]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[22718-22725]:SimpleName[7788-7795]"
    }, {
      "left" : "testLinkedQueue",
      "right" : "testLinkedQueue",
      "info" : "SimpleName[22755-22770]:SimpleName[8391-8406]"
    }, {
      "left" : "testLinkedQueue()",
      "right" : "runTests(new testJavaHashMap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[22755-22772]:MethodInvocation[8911-8978]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testJavaHashMap(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[22790-22913]:IfStatement[8906-8993]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[22882-22895]:ReturnStatement[20131-20144]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[22977-23004]:ExpressionStatement[9002-9021]"
    }, {
      "left" : "firstTimeThru",
      "right" : "testHashMapProbing",
      "info" : "SimpleName[23056-23069]:SimpleName[9049-9067]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[23072-23077]:BooleanLiteral[6639-6644]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[23139-23215]:ExpressionStatement[9130-9149]"
    }, {
      "left" : "getTestResults",
      "right" : "runTests",
      "info" : "SimpleName[23158-23172]:SimpleName[9036-9044]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testHashMapProbing(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[23158-23213]:MethodInvocation[9036-9106]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[23249-23265]:SimpleName[7569-7585]"
    }, {
      "left" : "firstTimeThru",
      "right" : "runTests",
      "info" : "SimpleName[23297-23310]:SimpleName[9164-9172]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[23313-23317]:BooleanLiteral[20702-20706]"
    }, {
      "left" : "i",
      "right" : "testHashMapChaining",
      "info" : "SimpleName[23336-23337]:SimpleName[9177-9196]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[23338-23339]:NumberLiteral[41255-41256]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[23343-23348]:SimpleName[7365-7370]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[23391-23399]:SimpleName[20497-20505]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[23402-23411]:SimpleName[7517-7526]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[23432-23438]:SimpleName[20653-20659]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[23441-23448]:SimpleName[7528-7535]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[23478-23485]:SimpleName[7537-7544]"
    }, {
      "left" : "testJavaStack",
      "right" : "testJavaStack",
      "info" : "SimpleName[23515-23528]:SimpleName[8535-8548]"
    }, {
      "left" : "testJavaStack()",
      "right" : "runTests(new testHashMapChaining(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[23515-23530]:MethodInvocation[9164-9235]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testHashMapChaining(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[23552-23559]:PrefixExpression[9163-9235]"
    }, {
      "left" : "System.err.println(\"Java Stack failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[23583-23624]:ExpressionStatement[9259-9278]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[23652-23657]:BooleanLiteral[20676-20681]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[23698-23718]:SimpleName[9293-9301]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaTreeMap",
      "info" : "SimpleType[23698-23718]:SimpleType[9306-9321]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[23835-23840]:BooleanLiteral[6248-6253]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[23902-23978]:ExpressionStatement[9384-9403]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testJavaTreeMap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[23921-23976]:MethodInvocation[9293-9360]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[23990-23999]:SimpleName[9418-9426]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[24012-24028]:SimpleName[7299-7315]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[24057-24061]:BooleanLiteral[21245-21249]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[24082-24083]:NumberLiteral[40972-40973]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[24087-24092]:SimpleName[7240-7245]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[24135-24143]:SimpleName[21186-21194]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[24146-24155]:SimpleName[7372-7381]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[24176-24182]:SimpleName[21196-21202]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[24185-24192]:SimpleName[7383-7390]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[24222-24229]:SimpleName[7392-7399]"
    }, {
      "left" : "testArrayStack",
      "right" : "testArrayStack",
      "info" : "SimpleName[24259-24273]:SimpleName[8658-8672]"
    }, {
      "left" : "testArrayStack()",
      "right" : "runTests(new testTreeMap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[24259-24275]:MethodInvocation[9418-9481]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testTreeMap(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[24297-24304]:PrefixExpression[9417-9481]"
    }, {
      "left" : "System.err.println(\"Stack failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[24328-24364]:ExpressionStatement[9505-9524]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[24392-24397]:BooleanLiteral[21219-21224]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[24438-24458]:SimpleName[9539-9547]"
    }, {
      "left" : "NullPointerException",
      "right" : "testTrieMap",
      "info" : "SimpleType[24438-24458]:SimpleType[9552-9563]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[24575-24580]:BooleanLiteral[6130-6135]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[24642-24718]:ExpressionStatement[9626-9645]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testTrieMap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[24661-24716]:MethodInvocation[9539-9602]"
    }, {
      "left" : "testIndex",
      "right" : "runTests",
      "info" : "SimpleName[24730-24739]:SimpleName[9660-9668]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[24752-24768]:SimpleName[7173-7189]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[24797-24801]:BooleanLiteral[21789-21793]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[24822-24823]:NumberLiteral[40489-40490]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[24827-24832]:SimpleName[7114-7119]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[24875-24883]:SimpleName[21730-21738]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[24886-24895]:SimpleName[7247-7256]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[24916-24922]:SimpleName[21740-21746]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[24925-24932]:SimpleName[7258-7265]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[24962-24969]:SimpleName[7267-7274]"
    }, {
      "left" : "testLinkedStack",
      "right" : "testLinkedStack",
      "info" : "SimpleName[24999-25014]:SimpleName[8782-8797]"
    }, {
      "left" : "testLinkedStack()",
      "right" : "runTests(new testRadixTrie(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[24999-25016]:MethodInvocation[9660-9725]"
    }, {
      "left" : "!passed",
      "right" : "!runTests(new testRadixTrie(), tests, unsorteds, sorteds, strings)",
      "info" : "PrefixExpression[25038-25045]:PrefixExpression[9659-9725]"
    }, {
      "left" : "System.err.println(\"Stack failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[25069-25105]:ExpressionStatement[9749-9768]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[25133-25138]:BooleanLiteral[21763-21768]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[25179-25199]:SimpleName[9783-9791]"
    }, {
      "left" : "NullPointerException",
      "right" : "testJavaSkipListMap",
      "info" : "SimpleName[25179-25199]:SimpleName[9796-9815]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[25316-25321]:BooleanLiteral[5994-5999]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[25493-25509]:SimpleName[7048-7064]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[25555-25559]:BooleanLiteral[22337-22341]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[25580-25581]:NumberLiteral[39841-39842]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[25585-25590]:SimpleName[6989-6994]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[25633-25641]:SimpleName[22278-22286]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[25644-25653]:SimpleName[7121-7130]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[25674-25680]:SimpleName[22288-22294]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[25683-25690]:SimpleName[7132-7139]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[25720-25727]:SimpleName[7141-7148]"
    }, {
      "left" : "testJavaHashMap",
      "right" : "testJavaHashMap",
      "info" : "SimpleName[25757-25772]:SimpleName[8924-8939]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[25899-25904]:BooleanLiteral[22311-22316]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[26082-26087]:BooleanLiteral[5758-5763]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[26259-26275]:SimpleName[6923-6939]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[26304-26308]:BooleanLiteral[22908-22912]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[26329-26330]:NumberLiteral[39492-39493]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[26334-26339]:SimpleName[6738-6743]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[26382-26390]:SimpleName[23259-23267]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[26393-26402]:SimpleName[6996-7005]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[26423-26429]:SimpleName[23279-23285]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[26432-26439]:SimpleName[7007-7014]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[26469-26476]:SimpleName[6891-6898]"
    }, {
      "left" : "testHashMap()",
      "right" : "runTests(new testJavaSkipListMap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[26506-26519]:MethodInvocation[9783-9854]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testJavaSkipListMap(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[26537-26663]:IfStatement[9778-9869]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[26632-26645]:ReturnStatement[22875-22888]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[26727-26754]:ExpressionStatement[9878-9897]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[26822-26827]:BooleanLiteral[5639-5644]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[26851-26860]:SimpleName[36941-36950]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[26889-26899]:METHOD_INVOCATION_RECEIVER[36471-36481]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[26999-27015]:SimpleName[6797-6813]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[27044-27048]:BooleanLiteral[23472-23476]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27063-27066]:PrimitiveType[35802-35805]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[27069-27070]:NumberLiteral[38966-38967]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[27074-27079]:SimpleName[6595-6600]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[27122-27130]:SimpleName[23795-23803]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[27133-27142]:SimpleName[6745-6754]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[27163-27169]:SimpleName[23815-23821]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[27172-27179]:SimpleName[6756-6763]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[27209-27216]:SimpleName[6765-6772]"
    }, {
      "left" : "testJavaTreeMap",
      "right" : "testJavaTreeMap",
      "info" : "SimpleName[27246-27261]:SimpleName[9306-9321]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[27388-27393]:BooleanLiteral[23446-23451]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[27434-27454]:SimpleName[9912-9920]"
    }, {
      "left" : "NullPointerException",
      "right" : "testSkipListMap",
      "info" : "SimpleName[27434-27454]:SimpleName[9925-9940]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[27571-27576]:BooleanLiteral[23970-23975]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[27600-27609]:SimpleName[40824-40833]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[27638-27648]:METHOD_INVOCATION_RECEIVER[41258-41268]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[27748-27764]:SimpleName[6532-6548]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[27793-27797]:BooleanLiteral[23996-24000]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27812-27815]:PrimitiveType[42414-42417]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[27818-27819]:NumberLiteral[38683-38684]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[27823-27828]:SimpleName[6473-6478]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[27830-27831]:SimpleName[35811-35812]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[27871-27879]:SimpleName[24330-24338]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[27882-27891]:SimpleName[6602-6611]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[27892-27893]:SimpleName[42446-42447]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[27912-27918]:SimpleName[24350-24356]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[27921-27928]:SimpleName[6613-6620]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[27929-27930]:SimpleName[42425-42426]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[27958-27965]:SimpleName[6622-6629]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[27966-27967]:SimpleName[41631-41632]"
    }, {
      "left" : "testTreeMap",
      "right" : "testTreeMap",
      "info" : "SimpleName[27995-28006]:SimpleName[9431-9442]"
    }, {
      "left" : "testTreeMap()",
      "right" : "runTests(new testSkipListMap(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[27995-28008]:MethodInvocation[9912-9979]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testSkipListMap(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[28026-28152]:IfStatement[9907-9994]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[28121-28134]:ReturnStatement[5388-5401]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[28216-28243]:ExpressionStatement[10003-10022]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[28311-28316]:BooleanLiteral[24513-24518]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[28340-28349]:SimpleName[40392-40401]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[28378-28388]:METHOD_INVOCATION_RECEIVER[40975-40985]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[28488-28504]:SimpleName[6389-6405]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[28533-28537]:BooleanLiteral[24539-24543]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[28552-28555]:PrimitiveType[41599-41602]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28556-28557]:SimpleName[40459-40460]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[28558-28559]:NumberLiteral[38151-38152]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28561-28562]:SimpleName[42487-42488]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[28563-28568]:SimpleName[6330-6335]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28570-28571]:SimpleName[41672-41673]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[28611-28619]:SimpleName[24920-24928]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[28622-28631]:SimpleName[6480-6489]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28632-28633]:SimpleName[41610-41611]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[28652-28658]:SimpleName[24940-24946]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[28661-28668]:SimpleName[6491-6498]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28669-28670]:SimpleName[40492-40493]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[28698-28705]:SimpleName[6500-6507]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28706-28707]:SimpleName[40484-40485]"
    }, {
      "left" : "testTrieMap",
      "right" : "testTrieMap",
      "info" : "SimpleName[28735-28746]:SimpleName[9552-9563]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[28812-28819]:SimpleName[36482-36489]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[28868-28873]:BooleanLiteral[5269-5274]"
    }, {
      "left" : "NullPointerException",
      "right" : "runTests",
      "info" : "SimpleName[28914-28934]:SimpleName[10037-10045]"
    }, {
      "left" : "NullPointerException",
      "right" : "testHAMT",
      "info" : "SimpleType[28914-28934]:SimpleType[10050-10058]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[28967-28974]:SimpleName[39506-39513]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[29051-29056]:BooleanLiteral[25097-25102]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[29080-29089]:SimpleName[39332-39341]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[29118-29128]:METHOD_INVOCATION_RECEIVER[39495-39505]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[29129-29136]:SimpleName[41269-41276]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[29228-29244]:SimpleName[6263-6279]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[29273-29277]:BooleanLiteral[25123-25127]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[29292-29295]:PrimitiveType[40455-40458]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[29296-29297]:SimpleName[38962-38963]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[29298-29299]:NumberLiteral[37799-37800]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[29301-29302]:SimpleName[40533-40534]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[29303-29308]:SimpleName[6204-6209]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[29310-29311]:SimpleName[42418-42419]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[29351-29359]:SimpleName[25510-25518]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[29362-29371]:SimpleName[6337-6346]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[29372-29373]:SimpleName[38990-38991]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[29392-29398]:SimpleName[25530-25536]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[29401-29408]:SimpleName[6348-6355]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[29409-29410]:SimpleName[38969-38970]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[29438-29445]:SimpleName[6357-6364]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[29446-29447]:SimpleName[38175-38176]"
    }, {
      "left" : "testRadixTrie",
      "right" : "testRadixTrie",
      "info" : "SimpleName[29475-29488]:SimpleName[9673-9686]"
    }, {
      "left" : "testRadixTrie()",
      "right" : "runTests(new testHAMT(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[29475-29490]:MethodInvocation[10037-10097]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!runTests(new testHAMT(), tests, unsorteds, sorteds, strings))",
      "info" : "IfStatement[29508-29636]:IfStatement[10032-10112]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[29554-29561]:SimpleName[39670-39677]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[29605-29618]:ReturnStatement[25680-25693]"
    }, {
      "left" : "System.err.println(string)",
      "right" : "putOutTheGarbage()",
      "info" : "MethodInvocation[29700-29726]:MethodInvocation[10121-10139]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[29700-29710]:METHOD_INVOCATION_RECEIVER[35335-35345]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[29711-29718]:SimpleName[39873-39880]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[29824-29833]:SimpleName[38892-38901]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[29862-29872]:METHOD_INVOCATION_RECEIVER[38686-38696]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[29873-29880]:SimpleName[39157-39164]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[29972-29988]:SimpleName[6145-6161]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[30017-30021]:BooleanLiteral[25713-25717]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[30036-30039]:PrimitiveType[38958-38961]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30040-30041]:SimpleName[38147-38148]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[30042-30043]:NumberLiteral[37516-37517]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30045-30046]:SimpleName[39031-39032]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[30047-30052]:SimpleName[5950-5955]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30054-30055]:SimpleName[38216-38217]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[30095-30103]:SimpleName[26097-26105]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[30106-30115]:SimpleName[6093-6102]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30116-30117]:SimpleName[38154-38155]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[30136-30142]:SimpleName[26117-26123]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[30145-30152]:SimpleName[6104-6111]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30153-30154]:SimpleName[37036-37037]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[30182-30189]:SimpleName[6113-6120]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30190-30191]:SimpleName[37015-37016]"
    }, {
      "left" : "testJavaSkipListMap",
      "right" : "testJavaSkipListMap",
      "info" : "SimpleName[30219-30238]:SimpleName[9796-9815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30271-30396]:Block[4734-10168]"
    }, {
      "left" : "System.err.println(\"Java's Skip List Map failed.\");",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[30293-30344]:ExpressionStatement[10121-10140]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[30293-30303]:METHOD_INVOCATION_RECEIVER[39862-39872]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[30304-30311]:SimpleName[37959-37966]"
    }, {
      "left" : "return false;",
      "right" : "return true;",
      "info" : "ReturnStatement[30365-30378]:ReturnStatement[10150-10162]"
    }, {
      "left" : "false",
      "right" : "true",
      "info" : "BooleanLiteral[30372-30377]:BooleanLiteral[10157-10161]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[30372-30377]:BooleanLiteral[26275-26280]"
    }, {
      "left" : "NullPointerException",
      "right" : "Testable",
      "info" : "SimpleName[30418-30438]:SimpleName[10212-10220]"
    }, {
      "left" : "NullPointerException e",
      "right" : "String[] strings",
      "info" : "SingleVariableDeclaration[30418-30440]:SingleVariableDeclaration[10286-10302]"
    }, {
      "left" : "e",
      "right" : "testable",
      "info" : "SimpleName[30439-30440]:SimpleName[10221-10229]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[30460-30470]:METHOD_INVOCATION_RECEIVER[39146-39156]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[30471-30478]:SimpleName[38697-38704]"
    }, {
      "left" : "firstTimeThru = false;",
      "right" : "firstTimeThru = true;",
      "info" : "ExpressionStatement[30539-30561]:ExpressionStatement[10347-10368]"
    }, {
      "left" : "false",
      "right" : "true",
      "info" : "BooleanLiteral[30555-30560]:BooleanLiteral[10363-10367]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[30584-30593]:SimpleName[38523-38532]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[30597-30608]:SimpleName[36860-36871]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[30622-30632]:METHOD_INVOCATION_RECEIVER[37948-37958]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[30633-30640]:SimpleName[38346-38353]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[30732-30748]:SimpleName[5892-5908]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[30777-30781]:BooleanLiteral[26301-26305]"
    }, {
      "left" : "int i=0",
      "right" : "int i=0",
      "info" : "VariableDeclarationExpression[30796-30803]:VariableDeclarationExpression[10382-10389]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[30796-30799]:PrimitiveType[38143-38146]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30800-30801]:SimpleName[37008-37009]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[30802-30803]:NumberLiteral[37012-37013]"
    }, {
      "left" : "i<tests",
      "right" : "i<tests",
      "info" : "InfixExpression[30805-30812]:InfixExpression[10391-10398]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30805-30806]:SimpleName[37077-37078]"
    }, {
      "left" : "i++",
      "right" : "i++",
      "info" : "PostfixExpression[30814-30817]:PostfixExpression[10400-10403]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30814-30815]:SimpleName[41603-41604]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[30855-30863]:SimpleName[26690-26698]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[30866-30875]:SimpleName[5957-5966]"
    }, {
      "left" : "unsorteds[i]",
      "right" : "unsorteds[i]",
      "info" : "ArrayAccess[30866-30878]:ArrayAccess[10462-10474]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30876-30877]:SimpleName[35912-35913]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[30896-30902]:SimpleName[26710-26716]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[30905-30912]:SimpleName[5968-5975]"
    }, {
      "left" : "sorteds[i]",
      "right" : "sorteds[i]",
      "info" : "ArrayAccess[30905-30915]:ArrayAccess[10511-10521]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30913-30914]:SimpleName[35934-35935]"
    }, {
      "left" : "string",
      "right" : "String",
      "info" : "SimpleName[30933-30939]:SimpleName[10539-10545]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[30942-30949]:SimpleName[5977-5984]"
    }, {
      "left" : "strings[i]",
      "right" : "strings[i]",
      "info" : "ArrayAccess[30942-30952]:ArrayAccess[10555-10565]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[30950-30951]:SimpleName[35917-35918]"
    }, {
      "left" : "passed = testSkipListMap();",
      "right" : "passed = testable.run(unsorted, sorted, string);",
      "info" : "ExpressionStatement[30970-30997]:ExpressionStatement[10583-10631]"
    }, {
      "left" : "passed",
      "right" : "run",
      "info" : "SimpleName[30970-30976]:SimpleName[10601-10604]"
    }, {
      "left" : "testSkipListMap",
      "right" : "testSkipListMap",
      "info" : "SimpleName[30979-30994]:SimpleName[9925-9940]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[31049-31059]:METHOD_INVOCATION_RECEIVER[39659-39669]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[31060-31067]:SimpleName[35528-35535]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[31121-31126]:BooleanLiteral[26867-26872]"
    }, {
      "left" : "NullPointerException",
      "right" : "testable",
      "info" : "SimpleName[31167-31187]:SimpleName[10702-10710]"
    }, {
      "left" : "e",
      "right" : "getInput",
      "info" : "SimpleName[31188-31189]:SimpleName[10711-10719]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "System.err.println(testable.getInput());",
      "info" : "ExpressionStatement[31209-31236]:ExpressionStatement[10683-10723]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[31209-31219]:METHOD_INVOCATION_RECEIVER[38335-38345]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[31220-31227]:SimpleName[37813-37820]"
    }, {
      "left" : "e",
      "right" : "testable",
      "info" : "SimpleName[31259-31260]:SimpleName[10763-10771]"
    }, {
      "left" : "firstTimeThru",
      "right" : "getName",
      "info" : "SimpleName[31288-31301]:SimpleName[10772-10779]"
    }, {
      "left" : "debugTime && debugMemory",
      "right" : "testable.getName()+\" failed.\"",
      "info" : "InfixExpression[31333-31357]:InfixExpression[10763-10792]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[31333-31342]:SimpleName[38077-38086]"
    }, {
      "left" : "&&",
      "right" : "+",
      "info" : "INFIX_EXPRESSION_OPERATOR[31343-31345]:INFIX_EXPRESSION_OPERATOR[10781-10782]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[31346-31357]:SimpleName[40311-40322]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[31371-31381]:METHOD_INVOCATION_RECEIVER[37802-37812]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[31382-31389]:SimpleName[37196-37203]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "System.err.println(testable.getName()+\" failed.\")",
      "info" : "MethodInvocation[31390-31445]:MethodInvocation[10744-10793]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[31481-31497]:SimpleName[5773-5789]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[31526-31530]:BooleanLiteral[26893-26897]"
    }, {
      "left" : "for (int i=0; i<tests; i++)",
      "right" : "for (int i=0; i<tests; i++)",
      "info" : "ForStatement[31540-32053]:ForStatement[10377-11034]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[31545-31548]:PrimitiveType[37004-37007]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[31549-31550]:SimpleName[35958-35959]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[31551-31552]:NumberLiteral[35914-35915]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[31554-31555]:SimpleName[35984-35985]"
    }, {
      "left" : "tests",
      "right" : "tests",
      "info" : "SimpleName[31556-31561]:SimpleName[10235-10240]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[31563-31564]:SimpleName[35884-35885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31568-32053]:Block[10405-11034]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[31582-32008]:TryStatement[10419-10989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31586-31892]:Block[10423-10860]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[31604-31612]:SimpleName[27288-27296]"
    }, {
      "left" : "unsorteds",
      "right" : "unsorteds",
      "info" : "SimpleName[31615-31624]:SimpleName[10254-10263]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[31625-31626]:SimpleName[35856-35857]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[31645-31651]:SimpleName[27308-27314]"
    }, {
      "left" : "sorteds",
      "right" : "sorteds",
      "info" : "SimpleName[31654-31661]:SimpleName[10273-10280]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[31662-31663]:SimpleName[35830-35831]"
    }, {
      "left" : "strings",
      "right" : "strings",
      "info" : "SimpleName[31691-31698]:SimpleName[10295-10302]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[31699-31700]:SimpleName[35806-35807]"
    }, {
      "left" : "testHAMT",
      "right" : "testHAMT",
      "info" : "SimpleName[31728-31736]:SimpleName[10050-10058]"
    }, {
      "left" : "if (!passed)",
      "right" : "if (!passed)",
      "info" : "IfStatement[31756-31878]:IfStatement[10648-10846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31769-31878]:Block[10661-10846]"
    }, {
      "left" : "System.err.println(\"HAMT failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[31791-31826]:ExpressionStatement[10744-10794]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[31791-31801]:METHOD_INVOCATION_RECEIVER[35517-35527]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[31802-31809]:SimpleName[35346-35353]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[31847-31860]:ReturnStatement[27458-27471]"
    }, {
      "left" : "e",
      "right" : "testable",
      "info" : "SimpleName[31921-31922]:SimpleName[10929-10937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31924-32008]:Block[10892-10989]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "System.err.println(testable.getInput());",
      "info" : "ExpressionStatement[31942-31969]:ExpressionStatement[10910-10950]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[31942-31952]:METHOD_INVOCATION_RECEIVER[37185-37195]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[31953-31960]:SimpleName[37530-37537]"
    }, {
      "left" : "string",
      "right" : "getInput",
      "info" : "SimpleName[31961-31967]:SimpleName[10938-10946]"
    }, {
      "left" : "throw e;",
      "right" : "throw e;",
      "info" : "ThrowStatement[31986-31994]:ThrowStatement[10967-10975]"
    }, {
      "left" : "firstTimeThru = false;",
      "right" : "firstTimeThru = false;",
      "info" : "ExpressionStatement[32021-32043]:ExpressionStatement[11002-11024]"
    }, {
      "left" : "firstTimeThru",
      "right" : "firstTimeThru",
      "info" : "SimpleName[32021-32034]:SimpleName[36561-36574]"
    }, {
      "left" : "if (debugTime && debugMemory)",
      "right" : "if (debugTime && debugMemory)",
      "info" : "IfStatement[32062-32180]:IfStatement[11043-11161]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[32066-32075]:SimpleName[37368-37377]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[32079-32090]:SimpleName[37635-37646]"
    }, {
      "left" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "right" : "System.out.println(getTestResults(NUMBER_OF_TESTS, testNames, testResults));",
      "info" : "ExpressionStatement[32104-32180]:ExpressionStatement[11085-11161]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[32104-32114]:METHOD_INVOCATION_RECEIVER[37519-37529]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[32115-32122]:SimpleName[40986-40993]"
    }, {
      "left" : "getTestResults(NUMBER_OF_TESTS, testNames, testResults)",
      "right" : "runTests(new testMaxHeapArray(), tests, unsorteds, sorteds, strings)",
      "info" : "MethodInvocation[32123-32178]:MethodInvocation[7207-7275]"
    }, {
      "left" : "testIndex++;",
      "right" : "testIndex++;",
      "info" : "ExpressionStatement[32192-32204]:ExpressionStatement[11173-11185]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[32192-32201]:SimpleName[36598-36607]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[32214-32230]:SimpleName[5654-5670]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[32243-32255]:ReturnStatement[11194-11206]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[32250-32254]:BooleanLiteral[27491-27495]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32267-32274]:Modifier[27519-27526]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32275-32281]:Modifier[27527-27533]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32282-32286]:PrimitiveType[11233-11237]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[32287-32298]:SimpleName[11238-11249]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[32299-32309]:SingleVariableDeclaration[11264-11274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32311-32452]:Block[11276-11416]"
    }, {
      "left" : "System.err.println(string);",
      "right" : "System.err.println(input);",
      "info" : "ExpressionStatement[32321-32348]:ExpressionStatement[11286-11312]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[32321-32331]:METHOD_INVOCATION_RECEIVER[40641-40651]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[32332-32339]:SimpleName[40652-40659]"
    }, {
      "left" : "string",
      "right" : "input",
      "info" : "SimpleName[32340-32346]:SimpleName[11305-11310]"
    }, {
      "left" : "System.err.println(obj.toString());",
      "right" : "System.err.println(obj.toString());",
      "info" : "ExpressionStatement[32357-32392]:ExpressionStatement[11321-11356]"
    }, {
      "left" : "throw new RuntimeException(\"Error in test.\");",
      "right" : "throw new RuntimeException(\"Error in test.\");",
      "info" : "ThrowStatement[32401-32446]:ThrowStatement[11365-11410]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32458-32465]:Modifier[26921-26928]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32466-32472]:Modifier[26929-26935]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[32473-32478]:Modifier[10189-10194]"
    }, {
      "left" : "BinarySearchTree",
      "right" : "BinarySearchTree",
      "info" : "SimpleType[32479-32495]:SimpleType[12886-12902]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[32496-32503]:SimpleType[18588-18595]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32543-32550]:Modifier[26329-26336]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32551-32557]:Modifier[26337-26343]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32558-32565]:PrimitiveType[27846-27853]"
    }, {
      "left" : "testAVLTree",
      "right" : "testAVLTree",
      "info" : "SimpleName[32566-32577]:SimpleName[11725-11736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32580-32808]:Block[12086-12264]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32590-32596]:SimpleType[27978-27984]"
    }, {
      "left" : "avlName",
      "right" : "name",
      "info" : "SimpleName[32597-32604]:SimpleName[11839-11843]"
    }, {
      "left" : "avlName = \"AVL Tree <Integer>\"",
      "right" : "name = \"AVL Tree <Integer>\"",
      "info" : "VariableDeclarationFragment[32597-32627]:VariableDeclarationFragment[11839-11866]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[32637-32656]:ParameterizedType[11876-11895]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[32637-32647]:SimpleType[27118-27128]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[32648-32655]:SimpleType[27991-27998]"
    }, {
      "left" : "bstCollection = avlTree.toCollection()",
      "right" : "bstCollection = avlTree.toCollection()",
      "info" : "VariableDeclarationFragment[32657-32695]:VariableDeclarationFragment[11896-11934]"
    }, {
      "left" : "if (!testJavaCollection(bstCollection,Integer.class,avlName))",
      "right" : "if (!testJavaCollection(bstCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[32706-32781]:IfStatement[12132-12229]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[32711-32729]:SimpleName[26783-26801]"
    }, {
      "left" : "bstCollection",
      "right" : "bstCollection",
      "info" : "SimpleName[32730-32743]:SimpleName[26209-26222]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[32744-32757]:TypeLiteral[12170-12183]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[32744-32751]:SimpleType[27858-27865]"
    }, {
      "left" : "avlName",
      "right" : "input",
      "info" : "SimpleName[32758-32765]:SimpleName[12208-12213]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[32768-32781]:ReturnStatement[12216-12229]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[32775-32780]:BooleanLiteral[28044-28049]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[32790-32802]:ReturnStatement[12242-12254]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[32797-32801]:BooleanLiteral[28070-28074]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32814-32821]:Modifier[28098-28105]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32822-32828]:Modifier[28106-28112]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[32841-32848]:SimpleType[18574-18581]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32885-32892]:Modifier[25741-25748]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32893-32899]:Modifier[25749-25755]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32900-32907]:PrimitiveType[27266-27273]"
    }, {
      "left" : "testBTree",
      "right" : "testBTree",
      "info" : "SimpleName[32908-32917]:SimpleName[12298-12307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32920-33148]:Block[12639-12817]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32930-32936]:SimpleType[12389-12395]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32930-32936]:SimpleType[27896-27902]"
    }, {
      "left" : "bTreeName",
      "right" : "name",
      "info" : "SimpleName[32937-32946]:SimpleName[12396-12400]"
    }, {
      "left" : "bTreeName = \"B-Tree <Integer>\"",
      "right" : "name = \"B-Tree <Integer>\"",
      "info" : "VariableDeclarationFragment[32937-32967]:VariableDeclarationFragment[12396-12421]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[32977-32996]:ParameterizedType[12431-12450]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[32977-32987]:SimpleType[28291-28301]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[32988-32995]:SimpleType[28454-28461]"
    }, {
      "left" : "bstCollection = bTree.toCollection()",
      "right" : "bstCollection = bTree.toCollection()",
      "info" : "VariableDeclarationFragment[32997-33033]:VariableDeclarationFragment[12451-12487]"
    }, {
      "left" : "if (!testJavaCollection(bstCollection,Integer.class,bTreeName))",
      "right" : "if (!testJavaCollection(bstCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[33044-33121]:IfStatement[12685-12782]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[33049-33067]:SimpleName[26190-26208]"
    }, {
      "left" : "bstCollection",
      "right" : "bstCollection",
      "info" : "SimpleName[33068-33081]:SimpleName[13274-13287]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[33082-33095]:TypeLiteral[12723-12736]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33082-33089]:SimpleType[28474-28481]"
    }, {
      "left" : "bTreeName",
      "right" : "input",
      "info" : "SimpleName[33096-33105]:SimpleName[12761-12766]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[33108-33121]:ReturnStatement[28636-28649]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[33130-33142]:ReturnStatement[12795-12807]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[33137-33141]:BooleanLiteral[28669-28673]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33154-33161]:Modifier[25151-25158]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33162-33168]:Modifier[25159-25165]"
    }, {
      "left" : "BinarySearchTree",
      "right" : "BinarySearchTree",
      "info" : "SimpleType[33175-33191]:SimpleType[28163-28179]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33192-33199]:SimpleType[28590-28597]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33244-33251]:Modifier[28697-28704]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33252-33258]:Modifier[28705-28711]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33259-33266]:PrimitiveType[28442-28449]"
    }, {
      "left" : "testBST",
      "right" : "testBST",
      "info" : "SimpleName[33267-33274]:SimpleName[12851-12858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33277-33490]:Block[13204-13382]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[33287-33293]:SimpleType[12959-12965]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[33287-33293]:SimpleType[28492-28498]"
    }, {
      "left" : "name = \"BST <Integer>\"",
      "right" : "name = \"BST <Integer>\"",
      "info" : "VariableDeclarationFragment[33294-33316]:VariableDeclarationFragment[12966-12988]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[33326-33345]:ParameterizedType[12998-13017]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[33326-33336]:SimpleType[26521-26531]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33337-33344]:SimpleType[26700-26707]"
    }, {
      "left" : "bstCollection = bst.toCollection()",
      "right" : "bstCollection = bst.toCollection()",
      "info" : "VariableDeclarationFragment[33346-33380]:VariableDeclarationFragment[13018-13052]"
    }, {
      "left" : "if (!testJavaCollection(bstCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(bstCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[33391-33463]:IfStatement[13250-13347]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[33396-33414]:SimpleName[28557-28575]"
    }, {
      "left" : "bstCollection",
      "right" : "bstCollection",
      "info" : "SimpleName[33415-33428]:SimpleName[28576-28589]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[33429-33442]:TypeLiteral[13288-13301]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33429-33436]:SimpleType[22703-22710]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[33443-33447]:SimpleName[28604-28608]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[33450-33463]:ReturnStatement[13334-13347]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[33472-33484]:ReturnStatement[13360-13372]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[33479-33483]:BooleanLiteral[29258-29262]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33496-33503]:Modifier[24567-24574]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33504-33510]:Modifier[24575-24581]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33544-33551]:SimpleType[27412-27419]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33630-33637]:Modifier[24024-24031]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33638-33644]:Modifier[24032-24038]"
    }, {
      "left" : "BinaryHeap.BinaryHeapTree",
      "right" : "BinaryHeap.BinaryHeapTree",
      "info" : "SimpleType[33651-33676]:SimpleType[14097-14122]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33677-33684]:SimpleType[26814-26821]"
    }, {
      "left" : "tHeapMin = new BinaryHeap.BinaryHeapTree<Integer>(BinaryHeap.Type.MIN)",
      "right" : "tHeapMin = new BinaryHeap.BinaryHeapTree<Integer>(BinaryHeap.Type.MIN)",
      "info" : "VariableDeclarationFragment[33686-33756]:VariableDeclarationFragment[14132-14202]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33762-33769]:Modifier[23500-23507]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33770-33776]:Modifier[23508-23514]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33777-33784]:PrimitiveType[29033-29040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33799-34252]:Block[14475-14654]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[33809-33815]:SimpleType[29083-29089]"
    }, {
      "left" : "aNameMin",
      "right" : "name",
      "info" : "SimpleName[33816-33824]:SimpleName[13584-13588]"
    }, {
      "left" : "aNameMin = \"Min-Heap <Integer> [array]\"",
      "right" : "name = \"Min-Heap <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[33816-33855]:VariableDeclarationFragment[13584-13619]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[33865-33884]:ParameterizedType[13629-13648]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[33865-33875]:SimpleType[28899-28909]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33876-33883]:SimpleType[29179-29186]"
    }, {
      "left" : "aCollectionMin = aHeapMin.toCollection()",
      "right" : "aCollectionMin = aHeapMin.toCollection()",
      "info" : "VariableDeclarationFragment[33885-33925]:VariableDeclarationFragment[13649-13689]"
    }, {
      "left" : "if (!testJavaCollection(aCollectionMin,Integer.class,aNameMin))",
      "right" : "if (!testJavaCollection(aCollectionMin,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[33935-34012]:IfStatement[13887-13985]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[33940-33958]:SimpleName[29148-29166]"
    }, {
      "left" : "aCollectionMin",
      "right" : "aCollectionMin",
      "info" : "SimpleName[33959-33973]:SimpleName[13911-13925]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[33974-33987]:TypeLiteral[13926-13939]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[33974-33981]:SimpleType[22683-22690]"
    }, {
      "left" : "aNameMin",
      "right" : "input",
      "info" : "SimpleName[33988-33996]:SimpleName[13964-13969]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[33999-34012]:ReturnStatement[29225-29238]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[34022-34028]:SimpleType[27718-27724]"
    }, {
      "left" : "tNameMin",
      "right" : "name",
      "info" : "SimpleName[34029-34037]:SimpleName[14219-14223]"
    }, {
      "left" : "tNameMin = \"Min-Heap <Integer> [tree]\"",
      "right" : "name = \"Min-Heap <Integer> [tree]\"",
      "info" : "VariableDeclarationFragment[34029-34067]:VariableDeclarationFragment[14219-14253]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[34077-34096]:ParameterizedType[14263-14282]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[34077-34087]:SimpleType[25925-25935]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34088-34095]:SimpleType[29045-29052]"
    }, {
      "left" : "tCollectionMin = tHeapMin.toCollection()",
      "right" : "tCollectionMin = tHeapMin.toCollection()",
      "info" : "VariableDeclarationFragment[34097-34137]:VariableDeclarationFragment[14283-14323]"
    }, {
      "left" : "if (!testJavaCollection(tCollectionMin,Integer.class,tNameMin))",
      "right" : "if (!testJavaCollection(tCollectionMin,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[34147-34224]:IfStatement[14521-14619]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[34152-34170]:SimpleName[25603-25621]"
    }, {
      "left" : "tCollectionMin",
      "right" : "tCollectionMin",
      "info" : "SimpleName[34171-34185]:SimpleName[14545-14559]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[34186-34199]:TypeLiteral[14560-14573]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34186-34193]:SimpleType[22140-22147]"
    }, {
      "left" : "tNameMin",
      "right" : "input",
      "info" : "SimpleName[34200-34208]:SimpleName[14598-14603]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[34211-34224]:ReturnStatement[14606-14619]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[34234-34246]:ReturnStatement[14632-14644]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[34241-34245]:BooleanLiteral[29823-29827]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34258-34265]:Modifier[29286-29293]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34266-34272]:Modifier[29294-29300]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34306-34313]:SimpleType[25634-25641]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34392-34399]:Modifier[22936-22943]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34400-34406]:Modifier[22944-22950]"
    }, {
      "left" : "BinaryHeap.BinaryHeapTree",
      "right" : "BinaryHeap.BinaryHeapTree",
      "info" : "SimpleType[34413-34438]:SimpleType[15369-15394]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34439-34446]:SimpleType[29744-29751]"
    }, {
      "left" : "tHeapMax = new BinaryHeap.BinaryHeapTree<Integer>(BinaryHeap.Type.MAX)",
      "right" : "tHeapMax = new BinaryHeap.BinaryHeapTree<Integer>(BinaryHeap.Type.MAX)",
      "info" : "VariableDeclarationFragment[34448-34518]:VariableDeclarationFragment[15404-15474]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34524-34531]:Modifier[22365-22372]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34532-34538]:Modifier[22373-22379]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[34539-34546]:PrimitiveType[29598-29605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34561-35014]:Block[15747-15926]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[34571-34577]:SimpleType[29648-29654]"
    }, {
      "left" : "aNameMax",
      "right" : "name",
      "info" : "SimpleName[34578-34586]:SimpleName[14856-14860]"
    }, {
      "left" : "aNameMax = \"Max-Heap <Integer> [array]\"",
      "right" : "name = \"Max-Heap <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[34578-34617]:VariableDeclarationFragment[14856-14891]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[34627-34646]:ParameterizedType[14901-14920]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[34627-34637]:SimpleType[29453-29463]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34638-34645]:SimpleType[29610-29617]"
    }, {
      "left" : "aCollectionMax = aHeapMax.toCollection()",
      "right" : "aCollectionMax = aHeapMax.toCollection()",
      "info" : "VariableDeclarationFragment[34647-34687]:VariableDeclarationFragment[14921-14961]"
    }, {
      "left" : "if (!testJavaCollection(aCollectionMax,Integer.class,aNameMax))",
      "right" : "if (!testJavaCollection(aCollectionMax,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[34697-34774]:IfStatement[15159-15257]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[34702-34720]:SimpleName[29713-29731]"
    }, {
      "left" : "aCollectionMax",
      "right" : "aCollectionMax",
      "info" : "SimpleName[34721-34735]:SimpleName[15183-15197]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[34736-34749]:TypeLiteral[15198-15211]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34736-34743]:SimpleType[21593-21600]"
    }, {
      "left" : "aNameMax",
      "right" : "input",
      "info" : "SimpleName[34750-34758]:SimpleName[15236-15241]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[34761-34774]:ReturnStatement[29790-29803]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[34784-34790]:SimpleType[27591-27597]"
    }, {
      "left" : "lNameMax",
      "right" : "name",
      "info" : "SimpleName[34791-34799]:SimpleName[15491-15495]"
    }, {
      "left" : "lNameMax = \"Max-Heap <Integer> [tree]\"",
      "right" : "name = \"Max-Heap <Integer> [tree]\"",
      "info" : "VariableDeclarationFragment[34791-34829]:VariableDeclarationFragment[15491-15525]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[34839-34858]:ParameterizedType[15535-15554]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[34839-34849]:SimpleType[30031-30041]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34850-34857]:SimpleType[26680-26687]"
    }, {
      "left" : "tCollectionMax = tHeapMax.toCollection()",
      "right" : "tCollectionMax = tHeapMax.toCollection()",
      "info" : "VariableDeclarationFragment[34859-34899]:VariableDeclarationFragment[15555-15595]"
    }, {
      "left" : "if (!testJavaCollection(tCollectionMax,Integer.class,lNameMax))",
      "right" : "if (!testJavaCollection(tCollectionMax,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[34909-34986]:IfStatement[15793-15891]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[34914-34932]:SimpleName[25013-25031]"
    }, {
      "left" : "tCollectionMax",
      "right" : "tCollectionMax",
      "info" : "SimpleName[34933-34947]:SimpleName[15817-15831]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[34948-34961]:TypeLiteral[15832-15845]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[34948-34955]:SimpleType[30191-30198]"
    }, {
      "left" : "lNameMax",
      "right" : "input",
      "info" : "SimpleName[34962-34970]:SimpleName[15870-15875]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[34973-34986]:ReturnStatement[15878-15891]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[34980-34985]:BooleanLiteral[30380-30385]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[34996-35008]:ReturnStatement[15904-15916]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[35003-35007]:BooleanLiteral[30406-30410]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35020-35027]:Modifier[29851-29858]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35028-35034]:Modifier[29859-29865]"
    }, {
      "left" : "HashMap<Integer,String>",
      "right" : "HashMap<Integer,String>",
      "info" : "ParameterizedType[35041-35064]:ParameterizedType[16006-16029]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35049-35056]:SimpleType[25044-25051]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35057-35063]:SimpleType[26223-26229]"
    }, {
      "left" : "pHashMap = new HashMap<Integer,String>(HashMap.Type.PROBING, ARRAY_SIZE/2)",
      "right" : "pHashMap = new HashMap<Integer,String>(HashMap.Type.PROBING, ARRAY_SIZE/2)",
      "info" : "VariableDeclarationFragment[35065-35139]:VariableDeclarationFragment[16030-16104]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35145-35152]:Modifier[21817-21824]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35153-35159]:Modifier[21825-21831]"
    }, {
      "left" : "final",
      "right" : "public",
      "info" : "Modifier[35160-35165]:Modifier[16299-16305]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35174-35181]:SimpleType[30327-30334]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35182-35188]:SimpleType[30229-30235]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35271-35278]:Modifier[30434-30441]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35279-35285]:Modifier[30442-30448]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[35286-35293]:PrimitiveType[30179-30186]"
    }, {
      "left" : "testHashMap",
      "right" : "String",
      "info" : "SimpleName[35294-35305]:SimpleName[16735-16741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35308-35662]:Block[16992-17167]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35318-35324]:SimpleType[16735-16741]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35318-35324]:SimpleType[27316-27322]"
    }, {
      "left" : "name = \"Probing HashMap <Integer>\"",
      "right" : "name = \"Probing HashMap <Integer>\"",
      "info" : "VariableDeclarationFragment[35325-35359]:VariableDeclarationFragment[16121-16155]"
    }, {
      "left" : "java.util.Map<Integer,String>",
      "right" : "java.util.Map<Integer,String>",
      "info" : "ParameterizedType[35369-35398]:ParameterizedType[16787-16816]"
    }, {
      "left" : "java.util.Map",
      "right" : "java.util.Map",
      "info" : "SimpleType[35369-35382]:SimpleType[27704-27717]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35383-35390]:SimpleType[26107-26114]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35391-35397]:SimpleType[30703-30709]"
    }, {
      "left" : "jMap = pHashMap.toMap()",
      "right" : "jMap = pHashMap.toMap()",
      "info" : "VariableDeclarationFragment[35399-35422]:VariableDeclarationFragment[16195-16218]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[35438-35449]:SimpleName[27961-27972]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[35450-35454]:SimpleName[17635-17639]"
    }, {
      "left" : "Integer",
      "right" : "String",
      "info" : "SimpleType[35455-35462]:SimpleType[16858-16864]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35455-35462]:SimpleType[30785-30792]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[35469-35473]:SimpleName[29758-29762]"
    }, {
      "left" : "return false;",
      "right" : "return name;",
      "info" : "ReturnStatement[35476-35489]:ReturnStatement[16889-16901]"
    }, {
      "left" : "name = \"Chaining HashMap <Integer>\"",
      "right" : "this.input = input",
      "info" : "Assignment[35499-35534]:Assignment[17006-17024]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[35499-35503]:SimpleName[30341-30345]"
    }, {
      "left" : "\"Chaining HashMap <Integer>\"",
      "right" : "\"Chaining HashMap <Integer>\"",
      "info" : "StringLiteral[35506-35534]:StringLiteral[16749-16777]"
    }, {
      "left" : "jMap = cHashMap.toMap();",
      "right" : "this.input = input;",
      "info" : "ExpressionStatement[35544-35568]:ExpressionStatement[17006-17025]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[35544-35548]:SimpleName[27973-27977]"
    }, {
      "left" : "cHashMap.toMap()",
      "right" : "cHashMap.toMap()",
      "info" : "MethodInvocation[35551-35567]:MethodInvocation[16824-16840]"
    }, {
      "left" : "if (!testJavaMap(jMap,Integer.class,name))",
      "right" : "if (!testJavaMap(jMap,Integer.class,String.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[35578-35634]:IfStatement[17038-17132]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[35583-35594]:SimpleName[24423-24434]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[35595-35599]:SimpleName[17055-17059]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35600-35607]:SimpleType[17060-17067]"
    }, {
      "left" : "Integer",
      "right" : "String",
      "info" : "SimpleName[35600-35607]:SimpleName[17074-17080]"
    }, {
      "left" : "Integer.class",
      "right" : "String.class",
      "info" : "TypeLiteral[35600-35613]:TypeLiteral[17074-17086]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35600-35607]:SimpleType[30805-30812]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[35614-35618]:SimpleName[29193-29197]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35621-35634]:ReturnStatement[17119-17132]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[35628-35633]:BooleanLiteral[30972-30977]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35644-35656]:ReturnStatement[17145-17157]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[35651-35655]:BooleanLiteral[30998-31002]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35668-35675]:Modifier[21273-21280]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35676-35682]:Modifier[21281-21287]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35709-35716]:SimpleType[30919-30926]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35717-35723]:SimpleType[30823-30829]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35779-35786]:Modifier[31026-31033]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35787-35793]:Modifier[31034-31040]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[35794-35801]:PrimitiveType[30773-30780]"
    }, {
      "left" : "testHAMT",
      "right" : "testHAMT",
      "info" : "SimpleName[35802-35810]:SimpleName[17201-17209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35813-36014]:Block[17572-17747]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35823-35829]:SimpleType[17331-17337]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35823-35829]:SimpleType[26718-26724]"
    }, {
      "left" : "hamtName",
      "right" : "name",
      "info" : "SimpleName[35830-35838]:SimpleName[17338-17342]"
    }, {
      "left" : "hamtName = \"HAMT <Integer>\"",
      "right" : "name = \"HAMT <Integer>\"",
      "info" : "VariableDeclarationFragment[35830-35857]:VariableDeclarationFragment[17338-17361]"
    }, {
      "left" : "java.util.Map<Integer,String>",
      "right" : "java.util.Map<Integer,String>",
      "info" : "ParameterizedType[35867-35896]:ParameterizedType[17371-17400]"
    }, {
      "left" : "java.util.Map",
      "right" : "java.util.Map",
      "info" : "SimpleType[35867-35880]:SimpleType[24088-24101]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35881-35888]:SimpleType[26087-26094]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35889-35895]:SimpleType[30109-30115]"
    }, {
      "left" : "jMap = hamt.toMap()",
      "right" : "jMap = hamt.toMap()",
      "info" : "VariableDeclarationFragment[35897-35916]:VariableDeclarationFragment[17401-17420]"
    }, {
      "left" : "if (!testJavaMap(jMap,Integer.class,hamtName))",
      "right" : "if (!testJavaMap(jMap,Integer.class,String.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[35927-35987]:IfStatement[17618-17712]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[35932-35943]:SimpleName[18172-18183]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[35944-35948]:SimpleName[16433-16437]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[35949-35962]:TypeLiteral[17640-17653]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[35949-35956]:SimpleType[21029-21036]"
    }, {
      "left" : "hamtName",
      "right" : "input",
      "info" : "SimpleName[35963-35971]:SimpleName[17691-17696]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35974-35987]:ReturnStatement[17699-17712]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35996-36008]:ReturnStatement[17725-17737]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[36020-36027]:Modifier[20730-20737]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36028-36034]:Modifier[20738-20744]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36055-36062]:SimpleType[24460-24467]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36063-36069]:SimpleType[31421-31427]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[36142-36149]:Modifier[20192-20199]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36150-36156]:Modifier[20200-20206]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[36157-36164]:PrimitiveType[31371-31378]"
    }, {
      "left" : "testJavaHashMap",
      "right" : "testJavaHashMap",
      "info" : "SimpleName[36165-36180]:SimpleName[17781-17796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36183-36334]:Block[18121-18303]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36193-36199]:SimpleType[17929-17935]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36193-36199]:SimpleType[26125-26131]"
    }, {
      "left" : "name = \"Java's HashMap <Integer>\"",
      "right" : "name = \"Java's HashMap <Integer>\"",
      "info" : "VariableDeclarationFragment[36200-36233]:VariableDeclarationFragment[17936-17969]"
    }, {
      "left" : "if (!testJavaMap(javaHashMap,Integer.class,name))",
      "right" : "if (!testJavaMap(javaHashMap,Integer.class,String.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[36244-36307]:IfStatement[18167-18268]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[36249-36260]:SimpleName[17623-17634]"
    }, {
      "left" : "javaHashMap",
      "right" : "javaHashMap",
      "info" : "SimpleName[36261-36272]:SimpleName[18184-18195]"
    }, {
      "left" : "Integer",
      "right" : "String",
      "info" : "SimpleName[36273-36280]:SimpleName[18210-18216]"
    }, {
      "left" : "Integer.class",
      "right" : "String.class",
      "info" : "TypeLiteral[36273-36286]:TypeLiteral[18210-18222]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36273-36280]:SimpleType[31517-31524]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[36287-36291]:SimpleName[31531-31535]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[36294-36307]:ReturnStatement[18255-18268]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[36301-36306]:BooleanLiteral[31570-31575]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[36316-36328]:ReturnStatement[18281-18293]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[36323-36327]:BooleanLiteral[31596-31600]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[36340-36347]:Modifier[31624-31631]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36348-36354]:Modifier[31632-31638]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36385-36392]:SimpleType[23917-23924]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36441-36448]:SimpleType[25520-25527]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36477-36484]:SimpleType[21049-21056]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36502-36511]:MarkerAnnotation[18529-18538]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36524-36530]:Modifier[31856-31862]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[36531-36534]:PrimitiveType[35908-35911]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[36535-36542]:SimpleName[18566-18573]"
    }, {
      "left" : "Integer arg0",
      "right" : "Integer arg0",
      "info" : "SingleVariableDeclaration[36543-36555]:SingleVariableDeclaration[18574-18586]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36543-36550]:SimpleType[30514-30521]"
    }, {
      "left" : "Integer arg1",
      "right" : "Integer arg1",
      "info" : "SingleVariableDeclaration[36557-36569]:SingleVariableDeclaration[18588-18600]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36557-36564]:SimpleType[27725-27732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36571-36770]:Block[18602-18825]"
    }, {
      "left" : "if (arg0.compareTo(arg1) < 0)",
      "right" : "if (arg0.compareTo(arg1) > 0)",
      "info" : "IfStatement[36589-36730]:IfStatement[18624-18777]"
    }, {
      "left" : "<",
      "right" : ">",
      "info" : "INFIX_EXPRESSION_OPERATOR[36614-36615]:INFIX_EXPRESSION_OPERATOR[18649-18650]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[36616-36617]:NumberLiteral[36055-36056]"
    }, {
      "left" : "return -1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[36639-36649]:ReturnStatement[18678-18687]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[36647-36648]:NumberLiteral[18775-18776]"
    }, {
      "left" : "if (arg1.compareTo(arg0) < 0)",
      "right" : "if (arg1.compareTo(arg0) > 0)",
      "info" : "IfStatement[36671-36730]:IfStatement[18713-18777]"
    }, {
      "left" : "<",
      "right" : ">",
      "info" : "INFIX_EXPRESSION_OPERATOR[36696-36697]:INFIX_EXPRESSION_OPERATOR[18738-18739]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[36698-36699]:NumberLiteral[36023-36024]"
    }, {
      "left" : "return 1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[36721-36730]:ReturnStatement[18767-18777]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[36728-36729]:NumberLiteral[18685-18686]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[36747-36756]:ReturnStatement[18798-18807]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[36754-36755]:NumberLiteral[35808-35809]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[36792-36799]:Modifier[19254-19261]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36800-36806]:Modifier[19262-19268]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[36807-36814]:PrimitiveType[31933-31940]"
    }, {
      "left" : "testJavaMinHeap",
      "right" : "testJavaMinHeap",
      "info" : "SimpleName[36815-36830]:SimpleName[18337-18352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36833-37005]:Block[19060-19241]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36843-36849]:SimpleType[18859-18865]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36843-36849]:SimpleType[31983-31989]"
    }, {
      "left" : "name = \"Java's Min-Heap <Integer> [array]\"",
      "right" : "name = \"Java's Min-Heap <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[36850-36892]:VariableDeclarationFragment[18866-18908]"
    }, {
      "left" : "if (!testJavaCollection(javaMinArrayHeap,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaMinArrayHeap,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[36903-36978]:IfStatement[19106-19206]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[36908-36926]:SimpleName[32048-32066]"
    }, {
      "left" : "javaMinArrayHeap",
      "right" : "javaMinArrayHeap",
      "info" : "SimpleName[36927-36943]:SimpleName[19130-19146]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[36944-36957]:TypeLiteral[19147-19160]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[36944-36951]:SimpleType[32083-32090]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[36958-36962]:SimpleName[32097-32101]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[36965-36978]:ReturnStatement[19193-19206]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[36972-36977]:BooleanLiteral[32136-32141]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[36987-36999]:ReturnStatement[19219-19231]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[36994-36998]:BooleanLiteral[32162-32166]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37011-37018]:Modifier[32190-32197]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37019-37025]:Modifier[32198-32204]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[37056-37063]:SimpleType[22829-22836]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37173-37182]:MarkerAnnotation[19467-19476]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37195-37201]:Modifier[19493-19499]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[37202-37205]:PrimitiveType[19500-19503]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[37206-37213]:SimpleName[19504-19511]"
    }, {
      "left" : "Integer arg0",
      "right" : "Integer arg0",
      "info" : "SingleVariableDeclaration[37214-37226]:SingleVariableDeclaration[19512-19524]"
    }, {
      "left" : "Integer arg1",
      "right" : "Integer arg1",
      "info" : "SingleVariableDeclaration[37228-37240]:SingleVariableDeclaration[19526-19538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37242-37441]:Block[19540-19763]"
    }, {
      "left" : "if (arg0.compareTo(arg1) > 0)",
      "right" : "if (arg0.compareTo(arg1) > 0)",
      "info" : "IfStatement[37260-37401]:IfStatement[19562-19715]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[37310-37320]:ReturnStatement[19616-19626]"
    }, {
      "left" : "if (arg1.compareTo(arg0) > 0)",
      "right" : "if (arg1.compareTo(arg0) > 0)",
      "info" : "IfStatement[37342-37401]:IfStatement[19652-19715]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[37392-37401]:ReturnStatement[19706-19715]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[37418-37427]:ReturnStatement[19736-19745]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37463-37470]:Modifier[18316-18323]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37471-37477]:Modifier[18324-18330]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37478-37485]:PrimitiveType[32505-32512]"
    }, {
      "left" : "testJavaMaxHeap",
      "right" : "testJavaMaxHeap",
      "info" : "SimpleName[37486-37501]:SimpleName[19275-19290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37504-37676]:Block[19998-20179]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[37514-37520]:SimpleType[32637-32643]"
    }, {
      "left" : "name = \"Java's Max-Heap <Integer> [array]\"",
      "right" : "name = \"Java's Max-Heap <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[37521-37563]:VariableDeclarationFragment[19804-19846]"
    }, {
      "left" : "if (!testJavaCollection(javaMaxArrayHeap,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaMaxArrayHeap,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[37574-37649]:IfStatement[20044-20144]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[37579-37597]:SimpleName[31486-31504]"
    }, {
      "left" : "javaMaxArrayHeap",
      "right" : "javaMaxArrayHeap",
      "info" : "SimpleName[37598-37614]:SimpleName[20068-20084]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[37615-37628]:TypeLiteral[20085-20098]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[37615-37622]:SimpleType[32537-32544]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[37629-37633]:SimpleName[32664-32668]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[37636-37649]:ReturnStatement[32696-32709]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[37658-37670]:ReturnStatement[20157-20169]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[37665-37669]:BooleanLiteral[32729-32733]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37682-37689]:Modifier[32757-32764]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37690-37696]:Modifier[32765-32771]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[37718-37725]:SimpleType[32650-32657]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37783-37790]:Modifier[17760-17767]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37791-37797]:Modifier[17768-17774]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37798-37805]:PrimitiveType[26668-26675]"
    }, {
      "left" : "testJavaArrayList",
      "right" : "testJavaArrayList",
      "info" : "SimpleName[37806-37823]:SimpleName[20213-20230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37826-37991]:Block[20539-20717]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[37836-37842]:SimpleType[32819-32825]"
    }, {
      "left" : "name = \"Java's List <Integer> [array]\"",
      "right" : "name = \"Java's List <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[37843-37881]:VariableDeclarationFragment[20349-20387]"
    }, {
      "left" : "if (!testJavaCollection(javaArrayList,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaArrayList,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[37892-37964]:IfStatement[20585-20682]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[37897-37915]:SimpleName[30888-30906]"
    }, {
      "left" : "javaArrayList",
      "right" : "javaArrayList",
      "info" : "SimpleName[37916-37929]:SimpleName[20609-20622]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[37930-37943]:TypeLiteral[20623-20636]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[37930-37937]:SimpleType[32517-32524]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[37944-37948]:SimpleName[30933-30937]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[37951-37964]:ReturnStatement[20669-20682]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[37973-37985]:ReturnStatement[20695-20707]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37997-38004]:Modifier[17180-17187]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38005-38011]:Modifier[17188-17194]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[38033-38040]:SimpleType[22258-22265]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38100-38107]:Modifier[16558-16565]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38108-38114]:Modifier[16566-16572]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38115-38122]:PrimitiveType[33044-33051]"
    }, {
      "left" : "testJavaLinkedList",
      "right" : "testJavaLinkedList",
      "info" : "SimpleName[38123-38141]:SimpleName[20751-20769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38144-38311]:Block[21081-21260]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[38154-38160]:SimpleType[20883-20889]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[38154-38160]:SimpleType[33094-33100]"
    }, {
      "left" : "name = \"Java's List <Integer> [linked]\"",
      "right" : "name = \"Java's List <Integer> [linked]\"",
      "info" : "VariableDeclarationFragment[38161-38200]:VariableDeclarationFragment[20890-20929]"
    }, {
      "left" : "if (!testJavaCollection(javaLinkedList,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaLinkedList,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[38211-38284]:IfStatement[21127-21225]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[38216-38234]:SimpleName[33159-33177]"
    }, {
      "left" : "javaLinkedList",
      "right" : "javaLinkedList",
      "info" : "SimpleName[38235-38249]:SimpleName[21151-21165]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[38250-38263]:TypeLiteral[21166-21179]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[38250-38257]:SimpleType[33076-33083]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[38264-38268]:SimpleName[33206-33210]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[38271-38284]:ReturnStatement[21212-21225]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[38278-38283]:BooleanLiteral[33245-33250]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[38293-38305]:ReturnStatement[21238-21250]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[38300-38304]:BooleanLiteral[33271-33275]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38317-38324]:Modifier[15939-15946]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38325-38331]:Modifier[15947-15953]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[38354-38361]:SimpleType[21710-21717]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38421-38428]:Modifier[33299-33306]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38429-38435]:Modifier[33307-33313]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38436-38443]:PrimitiveType[26075-26082]"
    }, {
      "left" : "testJavaArrayQueue",
      "right" : "testJavaArrayQueue",
      "info" : "SimpleName[38444-38462]:SimpleName[21294-21312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38465-38632]:Block[21625-21804]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[38475-38481]:SimpleType[33193-33199]"
    }, {
      "left" : "name = \"Java's Queue <Integer> [array]\"",
      "right" : "name = \"Java's Queue <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[38482-38521]:VariableDeclarationFragment[21434-21473]"
    }, {
      "left" : "if (!testJavaCollection(javaArrayQueue,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaArrayQueue,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[38532-38605]:IfStatement[21671-21769]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[38537-38555]:SimpleName[30294-30312]"
    }, {
      "left" : "javaArrayQueue",
      "right" : "javaArrayQueue",
      "info" : "SimpleName[38556-38570]:SimpleName[21695-21709]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[38571-38578]:SimpleType[19966-19973]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[38571-38584]:TypeLiteral[21710-21723]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[38585-38589]:SimpleName[28005-28009]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[38592-38605]:ReturnStatement[21756-21769]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[38614-38626]:ReturnStatement[21782-21794]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38638-38645]:Modifier[15305-15312]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38646-38652]:Modifier[15313-15319]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[38675-38682]:SimpleType[21166-21173]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38743-38750]:Modifier[14667-14674]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38751-38757]:Modifier[14675-14681]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38758-38765]:PrimitiveType[33614-33621]"
    }, {
      "left" : "testJavaLinkedQueue",
      "right" : "testJavaLinkedQueue",
      "info" : "SimpleName[38766-38785]:SimpleName[21838-21857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38788-38957]:Block[22172-22352]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[38798-38804]:SimpleType[33488-33494]"
    }, {
      "left" : "name = \"Java's Queue <Integer> [linked]\"",
      "right" : "name = \"Java's Queue <Integer> [linked]\"",
      "info" : "VariableDeclarationFragment[38805-38845]:VariableDeclarationFragment[21980-22020]"
    }, {
      "left" : "if (!testJavaCollection(javaLinkedQueue,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaLinkedQueue,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[38856-38930]:IfStatement[22218-22317]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[38861-38879]:SimpleName[23888-23906]"
    }, {
      "left" : "javaLinkedQueue",
      "right" : "javaLinkedQueue",
      "info" : "SimpleName[38880-38895]:SimpleName[22242-22257]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[38896-38909]:TypeLiteral[22258-22271]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[38896-38903]:SimpleType[33646-33653]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[38910-38914]:SimpleName[27426-27430]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[38917-38930]:ReturnStatement[22304-22317]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[38924-38929]:BooleanLiteral[33812-33817]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[38939-38951]:ReturnStatement[22330-22342]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[38946-38950]:BooleanLiteral[33838-33842]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38963-38970]:Modifier[14033-14040]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38971-38977]:Modifier[14041-14047]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[39002-39009]:SimpleType[33759-33766]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39075-39082]:Modifier[33866-33873]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39083-39089]:Modifier[33874-33880]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39090-39097]:PrimitiveType[25488-25495]"
    }, {
      "left" : "testJavaRedBlackIntegerTree",
      "right" : "testJavaRedBlackIntegerTree",
      "info" : "SimpleName[39098-39125]:SimpleName[22386-22413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39128-39305]:Block[22735-22923]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39138-39144]:SimpleType[33746-33752]"
    }, {
      "left" : "name = \"Java's Red-Black Tree <Integer>\"",
      "right" : "name = \"Java's Red-Black Tree <Integer>\"",
      "info" : "VariableDeclarationFragment[39145-39185]:VariableDeclarationFragment[22543-22583]"
    }, {
      "left" : "if (!testJavaCollection(javaRedBlackTreeInteger,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaRedBlackTreeInteger,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[39196-39278]:IfStatement[22781-22888]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[39201-39219]:SimpleName[23352-23370]"
    }, {
      "left" : "javaRedBlackTreeInteger",
      "right" : "javaRedBlackTreeInteger",
      "info" : "SimpleName[39220-39243]:SimpleName[22805-22828]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[39244-39257]:TypeLiteral[22829-22842]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[39244-39251]:SimpleType[33626-33633]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[39258-39262]:SimpleName[33773-33777]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[39265-39278]:ReturnStatement[6901-6914]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[39287-39299]:ReturnStatement[22901-22913]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39311-39318]:Modifier[13395-13402]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39319-39325]:Modifier[13403-13409]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39350-39356]:SimpleType[33956-33962]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39420-39427]:Modifier[12830-12837]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39428-39434]:Modifier[12838-12844]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39435-39442]:PrimitiveType[34174-34181]"
    }, {
      "left" : "testJavaRedBlackStringTree",
      "right" : "testJavaRedBlackStringTree",
      "info" : "SimpleName[39443-39469]:SimpleName[22957-22983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39472-39646]:Block[23301-23487]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39482-39488]:SimpleType[23103-23109]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39482-39488]:SimpleType[32555-32561]"
    }, {
      "left" : "name = \"Java's Red-Black Tree <String>\"",
      "right" : "name = \"Java's Red-Black Tree <String>\"",
      "info" : "VariableDeclarationFragment[39489-39528]:VariableDeclarationFragment[23110-23149]"
    }, {
      "left" : "if (!testJavaCollection(javaRedBlackTreeString,String.class,name))",
      "right" : "if (!testJavaCollection(javaRedBlackTreeString,String.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[39539-39619]:IfStatement[23347-23452]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[39544-39562]:SimpleName[22786-22804]"
    }, {
      "left" : "javaRedBlackTreeString",
      "right" : "javaRedBlackTreeString",
      "info" : "SimpleName[39563-39585]:SimpleName[23371-23393]"
    }, {
      "left" : "String.class",
      "right" : "String.class",
      "info" : "TypeLiteral[39586-39598]:TypeLiteral[23394-23406]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39586-39592]:SimpleType[34224-34230]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[39599-39603]:SimpleName[26828-26832]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[39606-39619]:ReturnStatement[23439-23452]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[39613-39618]:BooleanLiteral[34383-34388]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[39628-39640]:ReturnStatement[23465-23477]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[39635-39639]:BooleanLiteral[34409-34413]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39652-39659]:Modifier[12277-12284]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39660-39666]:Modifier[12285-12291]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[39689-39696]:SimpleType[34330-34337]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39746-39753]:Modifier[34437-34444]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39754-39760]:Modifier[34445-34451]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39761-39768]:PrimitiveType[24898-24905]"
    }, {
      "left" : "testJavaStack",
      "right" : "testJavaStack",
      "info" : "SimpleName[39769-39782]:SimpleName[23521-23534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39785-39947]:Block[23837-24011]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39795-39801]:SimpleType[34317-34323]"
    }, {
      "left" : "name = \"Java's Stack <Integer> [array]\"",
      "right" : "name = \"Java's Stack <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[39802-39841]:VariableDeclarationFragment[23646-23685]"
    }, {
      "left" : "if (!testJavaCollection(javaStack,Integer.class,name))",
      "right" : "if (!testJavaCollection(javaStack,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[39852-39920]:IfStatement[23883-23976]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[39857-39875]:SimpleName[22223-22241]"
    }, {
      "left" : "javaStack",
      "right" : "javaStack",
      "info" : "SimpleName[39876-39885]:SimpleName[23907-23916]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[39886-39899]:TypeLiteral[23917-23930]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[39886-39893]:SimpleType[34206-34213]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[39900-39904]:SimpleName[34344-34348]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[39907-39920]:ReturnStatement[23963-23976]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[39929-39941]:ReturnStatement[23989-24001]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39961-39967]:Modifier[11712-11718]"
    }, {
      "left" : "java.util.Map<String,Integer>",
      "right" : "java.util.Map<String,Integer>",
      "info" : "ParameterizedType[39974-40003]:ParameterizedType[24088-24117]"
    }, {
      "left" : "java.util.Map",
      "right" : "java.util.Map",
      "info" : "SimpleType[39974-39987]:SimpleType[34632-34645]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39988-39994]:SimpleType[34646-34652]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[39995-40002]:SimpleType[20623-20630]"
    }, {
      "left" : "javaTreeMap = new java.util.TreeMap<String,Integer>()",
      "right" : "javaTreeMap = new java.util.TreeMap<String,Integer>()",
      "info" : "VariableDeclarationFragment[40004-40057]:VariableDeclarationFragment[24118-24171]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[40063-40070]:Modifier[24231-24237]"
    }, {
      "left" : "static",
      "right" : "public",
      "info" : "Modifier[40071-40077]:Modifier[24301-24307]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40078-40085]:PrimitiveType[24308-24315]"
    }, {
      "left" : "testJavaTreeMap",
      "right" : "testJavaTreeMap",
      "info" : "SimpleName[40086-40101]:SimpleName[24045-24060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40104-40253]:Block[24372-24554]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40114-40120]:SimpleType[34513-34519]"
    }, {
      "left" : "name = \"Java's TreeMap <String>\"",
      "right" : "name = \"Java's TreeMap <String>\"",
      "info" : "VariableDeclarationFragment[40121-40153]:VariableDeclarationFragment[24188-24220]"
    }, {
      "left" : "if (!testJavaMap(javaTreeMap,String.class,name))",
      "right" : "if (!testJavaMap(javaTreeMap,String.class,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[40164-40226]:IfStatement[24418-24519]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[40169-40180]:SimpleName[34289-34300]"
    }, {
      "left" : "javaTreeMap",
      "right" : "javaTreeMap",
      "info" : "SimpleName[40181-40192]:SimpleName[24435-24446]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40193-40199]:SimpleType[24447-24453]"
    }, {
      "left" : "String",
      "right" : "Integer",
      "info" : "SimpleName[40193-40199]:SimpleName[24460-24467]"
    }, {
      "left" : "String.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[40193-40205]:TypeLiteral[24460-24473]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40193-40199]:SimpleType[34706-34712]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[40206-40210]:SimpleName[26236-26240]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40213-40226]:ReturnStatement[24506-24519]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[40220-40225]:BooleanLiteral[34974-34979]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40235-40247]:ReturnStatement[24532-24544]"
    }, {
      "left" : "true",
      "right" : "true",
      "info" : "BooleanLiteral[40242-40246]:BooleanLiteral[35000-35004]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[40295-40302]:SimpleType[20085-20092]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[40351-40358]:Modifier[35063-35070]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[40359-40365]:Modifier[35071-35077]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40366-40373]:PrimitiveType[34776-34783]"
    }, {
      "left" : "testArrayList",
      "right" : "testArrayList",
      "info" : "SimpleName[40374-40387]:SimpleName[24588-24601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40390-40614]:Block[24962-25138]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40400-40406]:SimpleType[34908-34914]"
    }, {
      "left" : "name = \"List <Integer> [array]\"",
      "right" : "name = \"List <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[40407-40438]:VariableDeclarationFragment[24711-24742]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[40448-40467]:ParameterizedType[24752-24771]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[40448-40458]:SimpleType[31787-31797]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[40459-40466]:SimpleType[34921-34928]"
    }, {
      "left" : "aCollection = arrayList.toCollection()",
      "right" : "aCollection = arrayList.toCollection()",
      "info" : "VariableDeclarationFragment[40468-40506]:VariableDeclarationFragment[24772-24810]"
    }, {
      "left" : "if (!testJavaCollection(aCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(aCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[40517-40587]:IfStatement[25008-25103]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[40522-40540]:SimpleName[21676-21694]"
    }, {
      "left" : "aCollection",
      "right" : "aCollection",
      "info" : "SimpleName[40541-40552]:SimpleName[25032-25043]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[40553-40566]:TypeLiteral[25044-25057]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[40553-40560]:SimpleType[34788-34795]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[40567-40571]:SimpleName[34935-34939]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40574-40587]:ReturnStatement[25090-25103]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[40581-40586]:BooleanLiteral[35452-35457]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40596-40608]:ReturnStatement[25116-25128]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[40657-40664]:SimpleType[19147-19154]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[40715-40722]:Modifier[25481-25487]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40730-40737]:PrimitiveType[23773-23780]"
    }, {
      "left" : "testLinkedList",
      "right" : "testLinkedList",
      "info" : "SimpleName[40738-40752]:SimpleName[25172-25186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40755-40981]:Block[25552-25728]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40765-40771]:SimpleType[25292-25298]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40765-40771]:SimpleType[25538-25544]"
    }, {
      "left" : "name = \"List <Integer> [linked]\"",
      "right" : "name = \"List <Integer> [linked]\"",
      "info" : "VariableDeclarationFragment[40772-40804]:VariableDeclarationFragment[25299-25331]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[40814-40833]:ParameterizedType[25341-25360]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[40814-40824]:SimpleType[32901-32911]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[40825-40832]:SimpleType[25500-25507]"
    }, {
      "left" : "lCollection = linkedList.toCollection()",
      "right" : "lCollection = linkedList.toCollection()",
      "info" : "VariableDeclarationFragment[40834-40873]:VariableDeclarationFragment[25361-25400]"
    }, {
      "left" : "if (!testJavaCollection(lCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(lCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[40884-40954]:IfStatement[25598-25693]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[40889-40907]:SimpleName[21132-21150]"
    }, {
      "left" : "lCollection",
      "right" : "lCollection",
      "info" : "SimpleName[40908-40919]:SimpleName[25622-25633]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[40920-40933]:TypeLiteral[25634-25647]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[40920-40927]:SimpleType[35206-35213]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[40934-40938]:SimpleName[35354-35358]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40941-40954]:ReturnStatement[35624-35637]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40963-40975]:ReturnStatement[25706-25718]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41021-41027]:SimpleType[24704-24710]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41021-41027]:SimpleType[34826-34832]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[41076-41083]:Modifier[26068-26074]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[41091-41098]:PrimitiveType[23237-23244]"
    }, {
      "left" : "testPatriciaTrie",
      "right" : "testPatriciaTrie",
      "info" : "SimpleName[41099-41115]:SimpleName[25762-25778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41118-41355]:Block[26139-26316]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41128-41134]:SimpleType[25878-25884]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41128-41134]:SimpleType[35225-35231]"
    }, {
      "left" : "name = \"PatriciaTrie <String>\"",
      "right" : "name = \"PatriciaTrie <String>\"",
      "info" : "VariableDeclarationFragment[41135-41165]:VariableDeclarationFragment[25885-25915]"
    }, {
      "left" : "Collection<String>",
      "right" : "Collection<String>",
      "info" : "ParameterizedType[41175-41193]:ParameterizedType[25925-25943]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[41175-41185]:SimpleType[31223-31233]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41186-41192]:SimpleType[24358-24364]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41186-41192]:SimpleType[29985-29991]"
    }, {
      "left" : "bstCollection = patriciaTrie.toCollection()",
      "right" : "bstCollection = patriciaTrie.toCollection()",
      "info" : "VariableDeclarationFragment[41194-41237]:VariableDeclarationFragment[25944-25987]"
    }, {
      "left" : "if (!testJavaCollection(bstCollection,String.class,name))",
      "right" : "if (!testJavaCollection(bstCollection,String.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[41257-41328]:IfStatement[26185-26281]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[41262-41280]:SimpleName[20590-20608]"
    }, {
      "left" : "bstCollection",
      "right" : "bstCollection",
      "info" : "SimpleName[41281-41294]:SimpleName[30313-30326]"
    }, {
      "left" : "String.class",
      "right" : "String.class",
      "info" : "TypeLiteral[41295-41307]:TypeLiteral[26223-26235]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41295-41301]:SimpleType[28241-28247]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[41308-41312]:SimpleName[35536-35540]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41315-41328]:ReturnStatement[26268-26281]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[41337-41349]:ReturnStatement[26294-26306]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[41399-41406]:SimpleType[34808-34815]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[41458-41465]:Modifier[26661-26667]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[41473-41480]:PrimitiveType[22671-22678]"
    }, {
      "left" : "testArrayQueue",
      "right" : "testArrayQueue",
      "info" : "SimpleName[41481-41495]:SimpleName[26350-26364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41498-41724]:Block[26732-26908]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41508-41514]:SimpleType[35172-35178]"
    }, {
      "left" : "name = \"Queue <Integer> [array]\"",
      "right" : "name = \"Queue <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[41515-41547]:VariableDeclarationFragment[26479-26511]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[41557-41576]:ParameterizedType[26521-26540]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[41557-41567]:SimpleType[30626-30636]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[41568-41575]:SimpleType[24930-24937]"
    }, {
      "left" : "aCollection = arrayQueue.toCollection()",
      "right" : "aCollection = arrayQueue.toCollection()",
      "info" : "VariableDeclarationFragment[41577-41616]:VariableDeclarationFragment[26541-26580]"
    }, {
      "left" : "if (!testJavaCollection(aCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(aCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[41627-41697]:IfStatement[26778-26873]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[41632-41650]:SimpleName[20049-20067]"
    }, {
      "left" : "aCollection",
      "right" : "aCollection",
      "info" : "SimpleName[41651-41662]:SimpleName[26802-26813]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[41663-41676]:TypeLiteral[26814-26827]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[41663-41670]:SimpleType[35185-35192]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[41677-41681]:SimpleName[25648-25652]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41684-41697]:ReturnStatement[26860-26873]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[41706-41718]:ReturnStatement[26886-26898]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[41769-41776]:SimpleType[34186-34193]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[41830-41837]:Modifier[27259-27265]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[41845-41852]:PrimitiveType[22108-22115]"
    }, {
      "left" : "testLinkedQueue",
      "right" : "testLinkedQueue",
      "info" : "SimpleName[41853-41868]:SimpleName[26942-26957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41871-42099]:Block[27330-27506]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41881-41887]:SimpleType[34586-34592]"
    }, {
      "left" : "name = \"Queue <Integer> [linked]\"",
      "right" : "name = \"Queue <Integer> [linked]\"",
      "info" : "VariableDeclarationFragment[41888-41921]:VariableDeclarationFragment[27075-27108]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[41931-41941]:SimpleType[25341-25351]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[41931-41950]:ParameterizedType[27118-27137]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[41942-41949]:SimpleType[24910-24917]"
    }, {
      "left" : "lCollection = linkedQueue.toCollection()",
      "right" : "lCollection = linkedQueue.toCollection()",
      "info" : "VariableDeclarationFragment[41951-41991]:VariableDeclarationFragment[27138-27178]"
    }, {
      "left" : "if (!testJavaCollection(lCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(lCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[42002-42072]:IfStatement[27376-27471]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[42007-42025]:SimpleName[19111-19129]"
    }, {
      "left" : "lCollection",
      "right" : "lCollection",
      "info" : "SimpleName[42026-42037]:SimpleName[27400-27411]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[42038-42051]:TypeLiteral[27412-27425]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[42038-42045]:SimpleType[34653-34660]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[42052-42056]:SimpleName[34744-34748]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42059-42072]:ReturnStatement[7402-7415]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[42081-42093]:ReturnStatement[27484-27496]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42136-42142]:SimpleType[14849-14855]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42136-42142]:SimpleType[33664-33670]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[42143-42150]:SimpleType[33056-33063]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[42201-42208]:Modifier[27839-27845]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[42216-42223]:PrimitiveType[21561-21568]"
    }, {
      "left" : "testRadixTrie",
      "right" : "testRadixTrie",
      "info" : "SimpleName[42224-42237]:SimpleName[27540-27553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42240-42441]:Block[27910-28085]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42250-42256]:SimpleType[19797-19803]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42250-42256]:SimpleType[34104-34110]"
    }, {
      "left" : "name = \"RadixTrie <String>\"",
      "right" : "name = \"RadixTrie <String>\"",
      "info" : "VariableDeclarationFragment[42257-42284]:VariableDeclarationFragment[27667-27694]"
    }, {
      "left" : "java.util.Map<String,Integer>",
      "right" : "java.util.Map<String,Integer>",
      "info" : "ParameterizedType[42294-42323]:ParameterizedType[27704-27733]"
    }, {
      "left" : "java.util.Map",
      "right" : "java.util.Map",
      "info" : "SimpleType[42294-42307]:SimpleType[33474-33487]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42308-42314]:SimpleType[13577-13583]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42308-42314]:SimpleType[29528-29534]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[42315-42322]:SimpleType[24340-24347]"
    }, {
      "left" : "jMap = radixTrie.toMap()",
      "right" : "jMap = radixTrie.toMap()",
      "info" : "VariableDeclarationFragment[42324-42348]:VariableDeclarationFragment[27734-27758]"
    }, {
      "left" : "if (!testJavaMap(jMap,String.class,name))",
      "right" : "if (!testJavaMap(jMap,String.class,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[42359-42414]:IfStatement[27956-28050]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[42364-42375]:SimpleName[34891-34902]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[42376-42380]:SimpleName[33741-33745]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42381-42387]:SimpleType[11832-11838]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42381-42387]:SimpleType[27776-27782]"
    }, {
      "left" : "String",
      "right" : "Integer",
      "info" : "SimpleName[42381-42387]:SimpleName[27991-27998]"
    }, {
      "left" : "String.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[42381-42393]:TypeLiteral[27991-28004]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[42394-42398]:SimpleName[36611-36615]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42401-42414]:ReturnStatement[28037-28050]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[42423-42435]:ReturnStatement[28063-28075]"
    }, {
      "left" : "BinarySearchTree",
      "right" : "BinarySearchTree",
      "info" : "SimpleType[42468-42484]:SimpleType[31682-31698]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[42485-42492]:SimpleType[31965-31972]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[42542-42549]:Modifier[28435-28441]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[42557-42564]:PrimitiveType[37097-37104]"
    }, {
      "left" : "testRedBlackTree",
      "right" : "testRedBlackTree",
      "info" : "SimpleName[42565-42581]:SimpleName[28119-28135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42584-42817]:Block[28506-28684]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42594-42600]:SimpleType[34043-34049]"
    }, {
      "left" : "name = \"Red-Black Tree <Integer>\"",
      "right" : "name = \"Red-Black Tree <Integer>\"",
      "info" : "VariableDeclarationFragment[42601-42634]:VariableDeclarationFragment[28248-28281]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[42644-42654]:SimpleType[24752-24762]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[42644-42663]:ParameterizedType[28291-28310]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[42655-42662]:SimpleType[24320-24327]"
    }, {
      "left" : "bstCollection = redBlackTree.toCollection()",
      "right" : "bstCollection = redBlackTree.toCollection()",
      "info" : "VariableDeclarationFragment[42664-42707]:VariableDeclarationFragment[28311-28354]"
    }, {
      "left" : "if (!testJavaCollection(bstCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(bstCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[42718-42790]:IfStatement[28552-28649]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[42723-42741]:SimpleName[15798-15816]"
    }, {
      "left" : "bstCollection",
      "right" : "bstCollection",
      "info" : "SimpleName[42742-42755]:SimpleName[12709-12722]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[42756-42769]:TypeLiteral[28590-28603]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[42756-42763]:SimpleType[34520-34527]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[42770-42774]:SimpleName[37204-37208]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42777-42790]:ReturnStatement[37306-37319]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[42799-42811]:ReturnStatement[28662-28674]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[42923-42930]:Modifier[29026-29032]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[42938-42945]:PrimitiveType[21017-21024]"
    }, {
      "left" : "testJavaSkipList",
      "right" : "testJavaSkipList",
      "info" : "SimpleName[42946-42962]:SimpleName[28718-28734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42965-43183]:Block[29097-29273]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42975-42981]:SimpleType[21973-21979]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42975-42981]:SimpleType[33544-33550]"
    }, {
      "left" : "name = \"Java's SkipListSet <Integer>\"",
      "right" : "name = \"Java's SkipListSet <Integer>\"",
      "info" : "VariableDeclarationFragment[42982-43019]:VariableDeclarationFragment[28852-28889]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[43029-43039]:SimpleType[15535-15545]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[43029-43048]:ParameterizedType[28899-28918]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43040-43047]:SimpleType[23805-23812]"
    }, {
      "left" : "lCollection = javaSkipList",
      "right" : "lCollection = javaSkipList",
      "info" : "VariableDeclarationFragment[43049-43075]:VariableDeclarationFragment[28919-28945]"
    }, {
      "left" : "if (!testJavaCollection(lCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(lCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[43086-43156]:IfStatement[29143-29238]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[43091-43109]:SimpleName[15164-15182]"
    }, {
      "left" : "lCollection",
      "right" : "lCollection",
      "info" : "SimpleName[43110-43121]:SimpleName[29167-29178]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[43122-43135]:TypeLiteral[29179-29192]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43122-43129]:SimpleType[33963-33970]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[43136-43140]:SimpleName[37821-37825]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43143-43156]:ReturnStatement[7670-7683]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[43165-43177]:ReturnStatement[29251-29263]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43219-43226]:SimpleType[31945-31952]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[43268-43275]:Modifier[29591-29597]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[43283-43290]:PrimitiveType[20475-20482]"
    }, {
      "left" : "testSkipList",
      "right" : "testSkipList",
      "info" : "SimpleName[43291-43303]:SimpleName[29307-29319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43306-43525]:Block[29662-29838]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[43316-43322]:SimpleType[33432-33438]"
    }, {
      "left" : "name = \"SkipList <Integer>\"",
      "right" : "name = \"SkipList <Integer>\"",
      "info" : "VariableDeclarationFragment[43323-43350]:VariableDeclarationFragment[29416-29443]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[43360-43370]:SimpleType[14901-14911]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[43360-43379]:ParameterizedType[29453-29472]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43371-43378]:SimpleType[23785-23792]"
    }, {
      "left" : "lCollection = skipList.toCollection()",
      "right" : "lCollection = skipList.toCollection()",
      "info" : "VariableDeclarationFragment[43380-43417]:VariableDeclarationFragment[29473-29510]"
    }, {
      "left" : "if (!testJavaCollection(lCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(lCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[43428-43498]:IfStatement[29708-29803]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[43433-43451]:SimpleName[14526-14544]"
    }, {
      "left" : "lCollection",
      "right" : "lCollection",
      "info" : "SimpleName[43452-43463]:SimpleName[29732-29743]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[43464-43477]:TypeLiteral[29744-29757]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43464-43471]:SimpleType[33495-33502]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[43478-43482]:SimpleName[37538-37542]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43485-43498]:ReturnStatement[38461-38474]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[43507-43519]:ReturnStatement[29816-29828]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43569-43576]:SimpleType[31403-31410]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[43620-43627]:Modifier[30172-30178]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[43635-43642]:PrimitiveType[38236-38243]"
    }, {
      "left" : "testSplayTree",
      "right" : "testSplayTree",
      "info" : "SimpleName[43643-43656]:SimpleName[29872-29885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43659-43885]:Block[30243-30421]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[43669-43675]:SimpleType[29985-29991]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[43669-43675]:SimpleType[32974-32980]"
    }, {
      "left" : "name = \"Splay Tree <Integer>\"",
      "right" : "name = \"Splay Tree <Integer>\"",
      "info" : "VariableDeclarationFragment[43676-43705]:VariableDeclarationFragment[29992-30021]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[43715-43725]:SimpleType[14263-14273]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[43715-43734]:ParameterizedType[30031-30050]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43726-43733]:SimpleType[23269-23276]"
    }, {
      "left" : "bstCollection = splayTree.toCollection()",
      "right" : "bstCollection = splayTree.toCollection()",
      "info" : "VariableDeclarationFragment[43735-43775]:VariableDeclarationFragment[30051-30091]"
    }, {
      "left" : "if (!testJavaCollection(bstCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(bstCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[43786-43858]:IfStatement[30289-30386]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[43791-43809]:SimpleName[13892-13910]"
    }, {
      "left" : "bstCollection",
      "right" : "bstCollection",
      "info" : "SimpleName[43810-43823]:SimpleName[12156-12169]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[43824-43837]:TypeLiteral[30327-30340]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43824-43831]:SimpleType[33374-33381]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[43838-43842]:SimpleName[38354-38358]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43845-43858]:ReturnStatement[30373-30386]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[43867-43879]:ReturnStatement[30399-30411]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[43929-43936]:SimpleType[31383-31390]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[43988-43995]:Modifier[30766-30772]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[44003-44010]:PrimitiveType[19934-19941]"
    }, {
      "left" : "testArrayStack",
      "right" : "testArrayStack",
      "info" : "SimpleName[44011-44025]:SimpleName[30455-30469]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44028-44254]:Block[30837-31013]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[44038-44044]:SimpleType[32862-32868]"
    }, {
      "left" : "name = \"Stack <Integer> [array]\"",
      "right" : "name = \"Stack <Integer> [array]\"",
      "info" : "VariableDeclarationFragment[44045-44077]:VariableDeclarationFragment[30584-30616]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[44087-44097]:SimpleType[13629-13639]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[44087-44106]:ParameterizedType[30626-30645]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44098-44105]:SimpleType[23249-23256]"
    }, {
      "left" : "aCollection = arrayStack.toCollection()",
      "right" : "aCollection = arrayStack.toCollection()",
      "info" : "VariableDeclarationFragment[44107-44146]:VariableDeclarationFragment[30646-30685]"
    }, {
      "left" : "if (!testJavaCollection(aCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(aCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[44157-44227]:IfStatement[30883-30978]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[44162-44180]:SimpleName[13255-13273]"
    }, {
      "left" : "aCollection",
      "right" : "aCollection",
      "info" : "SimpleName[44181-44192]:SimpleName[30907-30918]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[44193-44206]:TypeLiteral[30919-30932]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44193-44200]:SimpleType[32386-32393]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[44207-44211]:SimpleName[38705-38709]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44214-44227]:ReturnStatement[30965-30978]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[44221-44226]:BooleanLiteral[39277-39282]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[44236-44248]:ReturnStatement[30991-31003]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44299-44306]:SimpleType[30211-30218]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[44360-44367]:Modifier[31364-31370]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[44375-44382]:PrimitiveType[39051-39058]"
    }, {
      "left" : "testLinkedStack",
      "right" : "testLinkedStack",
      "info" : "SimpleName[44383-44398]:SimpleName[31047-31062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44401-44629]:Block[31435-31611]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[44411-44417]:SimpleType[28241-28247]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[44411-44417]:SimpleType[32435-32441]"
    }, {
      "left" : "name = \"Stack <Integer> [linked]\"",
      "right" : "name = \"Stack <Integer> [linked]\"",
      "info" : "VariableDeclarationFragment[44418-44451]:VariableDeclarationFragment[31180-31213]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[44461-44471]:SimpleType[12998-13008]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[44461-44480]:ParameterizedType[31223-31242]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44472-44479]:SimpleType[22120-22127]"
    }, {
      "left" : "lCollection = linkedStack.toCollection()",
      "right" : "lCollection = linkedStack.toCollection()",
      "info" : "VariableDeclarationFragment[44481-44521]:VariableDeclarationFragment[31243-31283]"
    }, {
      "left" : "if (!testJavaCollection(lCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(lCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[44532-44602]:IfStatement[31481-31576]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[44537-44555]:SimpleName[12690-12708]"
    }, {
      "left" : "lCollection",
      "right" : "lCollection",
      "info" : "SimpleName[44556-44567]:SimpleName[31505-31516]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[44568-44581]:TypeLiteral[31517-31530]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44568-44575]:SimpleType[32265-32272]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[44582-44586]:SimpleName[39165-39169]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44589-44602]:ReturnStatement[31563-31576]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[44596-44601]:BooleanLiteral[39785-39790]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[44611-44623]:ReturnStatement[31589-31601]"
    }, {
      "left" : "BinarySearchTree",
      "right" : "String",
      "info" : "SimpleName[44656-44672]:SimpleName[11506-11512]"
    }, {
      "left" : "BinarySearchTree",
      "right" : "BinarySearchTree",
      "info" : "SimpleType[44656-44672]:SimpleType[11764-11780]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44673-44680]:SimpleType[29630-29637]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[44716-44723]:Modifier[31926-31932]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[44731-44738]:PrimitiveType[18996-19003]"
    }, {
      "left" : "testTreap",
      "right" : "testTreap",
      "info" : "SimpleName[44739-44748]:SimpleName[31645-31654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44751-44972]:Block[31997-32177]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[44761-44767]:SimpleType[32323-32329]"
    }, {
      "left" : "name = \"Treap <Integer>\"",
      "right" : "name = \"Treap <Integer>\"",
      "info" : "VariableDeclarationFragment[44768-44792]:VariableDeclarationFragment[31753-31777]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[44802-44812]:SimpleType[12431-12441]"
    }, {
      "left" : "Collection<Integer>",
      "right" : "Collection<Integer>",
      "info" : "ParameterizedType[44802-44821]:ParameterizedType[31787-31806]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44813-44820]:SimpleType[21573-21580]"
    }, {
      "left" : "treapCollection = treap.toCollection()",
      "right" : "treapCollection = treap.toCollection()",
      "info" : "VariableDeclarationFragment[44822-44860]:VariableDeclarationFragment[31807-31845]"
    }, {
      "left" : "if (!testJavaCollection(treapCollection,Integer.class,name))",
      "right" : "if (!testJavaCollection(treapCollection,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[44871-44945]:IfStatement[32043-32142]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[44876-44894]:SimpleName[12137-12155]"
    }, {
      "left" : "treapCollection",
      "right" : "treapCollection",
      "info" : "SimpleName[44895-44910]:SimpleName[32067-32082]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[44911-44918]:SimpleType[31798-31805]"
    }, {
      "left" : "Integer.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[44911-44924]:TypeLiteral[32083-32096]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[44925-44929]:SimpleName[39514-39518]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44932-44945]:ReturnStatement[32129-32142]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[44939-44944]:BooleanLiteral[39985-39990]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[44954-44966]:ReturnStatement[32155-32167]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45007-45013]:SimpleType[33367-33373]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[45014-45021]:SimpleType[18196-18203]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[45014-45021]:SimpleType[29065-29072]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[45068-45075]:Modifier[32498-32504]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[45083-45090]:PrimitiveType[18057-18064]"
    }, {
      "left" : "testTreeMap",
      "right" : "testTreeMap",
      "info" : "SimpleName[45091-45102]:SimpleName[32211-32222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45105-45302]:Block[32569-32744]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45115-45121]:SimpleType[22536-22542]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45115-45121]:SimpleType[31863-31869]"
    }, {
      "left" : "name = \"TreeMap <String>\"",
      "right" : "name = \"TreeMap <String>\"",
      "info" : "VariableDeclarationFragment[45122-45147]:VariableDeclarationFragment[32330-32355]"
    }, {
      "left" : "java.util.Map<String,Integer>",
      "right" : "java.util.Map<String,Integer>",
      "info" : "ParameterizedType[45157-45186]:ParameterizedType[32365-32394]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45171-45177]:SimpleType[29409-29415]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[45178-45185]:SimpleType[20507-20514]"
    }, {
      "left" : "jMap = treeMap.toMap()",
      "right" : "jMap = treeMap.toMap()",
      "info" : "VariableDeclarationFragment[45187-45209]:VariableDeclarationFragment[32395-32417]"
    }, {
      "left" : "if (!testJavaMap(jMap,String.class,name))",
      "right" : "if (!testJavaMap(jMap,String.class,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[45220-45275]:IfStatement[32615-32709]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[45225-45236]:SimpleName[33729-33740]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[45237-45241]:SimpleName[34903-34907]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45242-45248]:SimpleType[27660-27666]"
    }, {
      "left" : "String",
      "right" : "Integer",
      "info" : "SimpleName[45242-45248]:SimpleName[32650-32657]"
    }, {
      "left" : "String.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[45242-45254]:TypeLiteral[32650-32663]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[45255-45259]:SimpleName[40660-40664]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45262-45275]:ReturnStatement[40762-40775]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[45284-45296]:ReturnStatement[32722-32734]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45334-45340]:SimpleType[32912-32918]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[45373-45380]:Modifier[33037-33043]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[45388-45395]:PrimitiveType[40553-40560]"
    }, {
      "left" : "testTrie",
      "right" : "testTrie",
      "info" : "SimpleName[45396-45404]:SimpleName[32778-32786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45407-45621]:Block[33108-33286]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45417-45423]:SimpleType[31746-31752]"
    }, {
      "left" : "name = \"Trie <String>\"",
      "right" : "name = \"Trie <String>\"",
      "info" : "VariableDeclarationFragment[45424-45446]:VariableDeclarationFragment[32869-32891]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[45456-45466]:SimpleType[11876-11886]"
    }, {
      "left" : "Collection<String>",
      "right" : "Collection<String>",
      "info" : "ParameterizedType[45456-45474]:ParameterizedType[32901-32919]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45467-45473]:SimpleType[20342-20348]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45467-45473]:SimpleType[28963-28969]"
    }, {
      "left" : "trieCollection = trie.toCollection()",
      "right" : "trieCollection = trie.toCollection()",
      "info" : "VariableDeclarationFragment[45475-45511]:VariableDeclarationFragment[32920-32956]"
    }, {
      "left" : "if (!testJavaCollection(trieCollection,String.class,name))",
      "right" : "if (!testJavaCollection(trieCollection,String.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[45522-45594]:IfStatement[33154-33251]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[45527-45545]:SimpleName[35112-35130]"
    }, {
      "left" : "trieCollection",
      "right" : "trieCollection",
      "info" : "SimpleName[45546-45560]:SimpleName[33178-33192]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45561-45567]:SimpleType[21427-21433]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45561-45567]:SimpleType[27196-27202]"
    }, {
      "left" : "String.class",
      "right" : "String.class",
      "info" : "TypeLiteral[45561-45573]:TypeLiteral[33193-33205]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[45574-45578]:SimpleName[40994-40998]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45581-45594]:ReturnStatement[33238-33251]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[45603-45615]:ReturnStatement[33264-33276]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45656-45662]:SimpleType[32379-32385]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[45663-45670]:SimpleType[27878-27885]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[45717-45724]:Modifier[33607-33613]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[45732-45739]:PrimitiveType[17508-17515]"
    }, {
      "left" : "testTrieMap",
      "right" : "testTrieMap",
      "info" : "SimpleName[45740-45751]:SimpleName[33320-33331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45754-45951]:Block[33678-33853]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45764-45770]:SimpleType[29409-29415]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45764-45770]:SimpleType[31301-31307]"
    }, {
      "left" : "name = \"TrieMap <String>\"",
      "right" : "name = \"TrieMap <String>\"",
      "info" : "VariableDeclarationFragment[45771-45796]:VariableDeclarationFragment[33439-33464]"
    }, {
      "left" : "java.util.Map",
      "right" : "java.util.Map",
      "info" : "SimpleType[45806-45819]:SimpleType[17371-17384]"
    }, {
      "left" : "java.util.Map<String,Integer>",
      "right" : "java.util.Map<String,Integer>",
      "info" : "ParameterizedType[45806-45835]:ParameterizedType[33474-33503]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45820-45826]:SimpleType[28845-28851]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[45827-45834]:SimpleType[20487-20494]"
    }, {
      "left" : "jMap = trieMap.toMap()",
      "right" : "jMap = trieMap.toMap()",
      "info" : "VariableDeclarationFragment[45836-45858]:VariableDeclarationFragment[33504-33526]"
    }, {
      "left" : "if (!testJavaMap(jMap,String.class,name))",
      "right" : "if (!testJavaMap(jMap,String.class,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[45869-45924]:IfStatement[33724-33818]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[45874-45885]:SimpleName[32620-32631]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[45886-45890]:SimpleName[32632-32636]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45891-45897]:SimpleType[27068-27074]"
    }, {
      "left" : "String",
      "right" : "Integer",
      "info" : "SimpleName[45891-45897]:SimpleName[33759-33766]"
    }, {
      "left" : "String.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[45891-45903]:TypeLiteral[33759-33772]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[45904-45908]:SimpleName[41277-41281]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45911-45924]:ReturnStatement[33805-33818]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[45918-45923]:BooleanLiteral[41924-41929]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[45933-45945]:ReturnStatement[33831-33843]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46000-46006]:SimpleType[32258-32264]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[46007-46014]:SimpleType[27298-27305]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[46083-46090]:Modifier[34167-34173]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[46098-46105]:PrimitiveType[41692-41699]"
    }, {
      "left" : "testJavaSkipListMap",
      "right" : "testJavaSkipListMap",
      "info" : "SimpleName[46106-46125]:SimpleName[33887-33906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46128-46285]:Block[34238-34424]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46138-46144]:SimpleType[31173-31179]"
    }, {
      "left" : "name = \"Java's SkipListMap <String>\"",
      "right" : "name = \"Java's SkipListMap <String>\"",
      "info" : "VariableDeclarationFragment[46145-46181]:VariableDeclarationFragment[34050-34086]"
    }, {
      "left" : "if (!testJavaMap(javaSkipListMap,String.class,name))",
      "right" : "if (!testJavaMap(javaSkipListMap,String.class,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[46192-46258]:IfStatement[34284-34389]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[46197-46208]:SimpleName[17043-17054]"
    }, {
      "left" : "javaSkipListMap",
      "right" : "javaSkipListMap",
      "info" : "SimpleName[46209-46224]:SimpleName[34301-34316]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46225-46231]:SimpleType[23639-23645]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46225-46231]:SimpleType[26598-26604]"
    }, {
      "left" : "String",
      "right" : "Integer",
      "info" : "SimpleName[46225-46231]:SimpleName[34330-34337]"
    }, {
      "left" : "String.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[46225-46237]:TypeLiteral[34330-34343]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[46238-46242]:SimpleName[41810-41814]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46245-46258]:ReturnStatement[34376-34389]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[46252-46257]:BooleanLiteral[43241-43246]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46267-46279]:ReturnStatement[34402-34414]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46324-46330]:SimpleType[25936-25942]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[46331-46338]:SimpleType[27278-27285]"
    }, {
      "left" : "private",
      "right" : "public",
      "info" : "Modifier[46393-46400]:Modifier[34769-34775]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[46408-46415]:PrimitiveType[16928-16935]"
    }, {
      "left" : "testSkipListMap",
      "right" : "testSkipListMap",
      "info" : "SimpleName[46416-46431]:SimpleName[34458-34473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46434-46639]:Block[34840-35015]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46444-46450]:SimpleType[30577-30583]"
    }, {
      "left" : "name = \"SkipListMap <String>\"",
      "right" : "name = \"SkipListMap <String>\"",
      "info" : "VariableDeclarationFragment[46451-46480]:VariableDeclarationFragment[34593-34622]"
    }, {
      "left" : "java.util.Map",
      "right" : "java.util.Map",
      "info" : "SimpleType[46490-46503]:SimpleType[16787-16800]"
    }, {
      "left" : "java.util.Map<String,Integer>",
      "right" : "java.util.Map<String,Integer>",
      "info" : "ParameterizedType[46490-46519]:ParameterizedType[34632-34661]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46504-46510]:SimpleType[28372-28378]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[46511-46518]:SimpleType[19946-19953]"
    }, {
      "left" : "jMap = skipListMap.toMap()",
      "right" : "jMap = skipListMap.toMap()",
      "info" : "VariableDeclarationFragment[46520-46546]:VariableDeclarationFragment[34662-34688]"
    }, {
      "left" : "if (!testJavaMap(jMap,String.class,name))",
      "right" : "if (!testJavaMap(jMap,String.class,Integer.class,name, unsorted, sorted, input))",
      "info" : "IfStatement[46557-46612]:IfStatement[34886-34980]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[46562-46573]:SimpleName[16421-16432]"
    }, {
      "left" : "jMap",
      "right" : "jMap",
      "info" : "SimpleName[46574-46578]:SimpleName[16817-16821]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46579-46585]:SimpleType[26472-26478]"
    }, {
      "left" : "String",
      "right" : "Integer",
      "info" : "SimpleName[46579-46585]:SimpleName[34921-34928]"
    }, {
      "left" : "String.class",
      "right" : "Integer.class",
      "info" : "TypeLiteral[46579-46591]:TypeLiteral[34921-34934]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[46592-46596]:SimpleName[42161-42165]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46599-46612]:ReturnStatement[34967-34980]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[46606-46611]:BooleanLiteral[42733-42738]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46621-46633]:ReturnStatement[34993-35005]"
    }, {
      "left" : "T extends Comparable<T>",
      "right" : "T extends Comparable<T>",
      "info" : "TypeParameter[46661-46684]:TypeParameter[35079-35102]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[46686-46693]:PrimitiveType[42507-42514]"
    }, {
      "left" : "testJavaCollection",
      "right" : "testJavaCollection",
      "info" : "SimpleName[46694-46712]:SimpleName[27381-27399]"
    }, {
      "left" : "Collection<T> collection",
      "right" : "Collection<T> collection",
      "info" : "SingleVariableDeclaration[46713-46737]:SingleVariableDeclaration[35131-35155]"
    }, {
      "left" : "Class<T> type",
      "right" : "Class<T> type",
      "info" : "SingleVariableDeclaration[46739-46752]:SingleVariableDeclaration[35157-35170]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[46754-46760]:SimpleType[25819-25825]"
    }, {
      "left" : "String name",
      "right" : "String input",
      "info" : "SingleVariableDeclaration[46754-46765]:SingleVariableDeclaration[35225-35237]"
    }, {
      "left" : "name",
      "right" : "input",
      "info" : "SimpleName[46761-46765]:SimpleName[35232-35237]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[46761-46765]:SimpleName[42621-42625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46767-63158]:Block[35239-51399]"
    }, {
      "left" : "if (!collection.isEmpty())",
      "right" : "if (!collection.isEmpty())",
      "info" : "IfStatement[46822-46990]:IfStatement[35294-35468]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[46827-46837]:SimpleName[42693-42703]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[46838-46845]:SimpleName[39630-39637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46849-46990]:Block[35321-35468]"
    }, {
      "left" : "System.err.println(name+\" initial isEmpty() failed.\");",
      "right" : "System.err.println(name+\" initial isEmpty() failed.\");",
      "info" : "ExpressionStatement[46863-46917]:ExpressionStatement[35335-35389]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[46863-46873]:METHOD_INVOCATION_RECEIVER[42602-42612]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[46874-46881]:SimpleName[41802-41809]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[46882-46886]:SimpleName[42970-42974]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[46930-46954]:ExpressionStatement[35402-35432]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[46930-46941]:SimpleName[42675-42686]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[46942-46952]:SimpleName[40729-40739]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46967-46980]:ReturnStatement[35445-35458]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[46974-46979]:BooleanLiteral[44408-44413]"
    }, {
      "left" : "if (collection.size()!=0)",
      "right" : "if (collection.size()!=0)",
      "info" : "IfStatement[46999-47163]:IfStatement[35477-35647]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[47003-47013]:SimpleName[41884-41894]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[47014-47018]:SimpleName[39833-39837]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[47022-47023]:NumberLiteral[42948-42949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47025-47163]:Block[35503-35647]"
    }, {
      "left" : "System.err.println(name+\" initial size() failed.\");",
      "right" : "System.err.println(name+\" initial size() failed.\");",
      "info" : "ExpressionStatement[47039-47090]:ExpressionStatement[35517-35568]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[47039-47049]:METHOD_INVOCATION_RECEIVER[41791-41801]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[47050-47057]:SimpleName[42962-42969]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[47058-47062]:SimpleName[43134-43138]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[47103-47127]:ExpressionStatement[35581-35611]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[47103-47114]:SimpleName[41866-41877]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[47115-47125]:SimpleName[39237-39247]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[47140-47153]:ReturnStatement[43434-43447]"
    }, {
      "left" : "long sortedCount = 0;",
      "right" : "T[] unsorted = (T[]) Array.newInstance(type, _unsorted.length);",
      "info" : "VariableDeclarationStatement[47173-47194]:VariableDeclarationStatement[35657-35720]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47173-47177]:PrimitiveType[36420-36424]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[47178-47189]:SimpleName[42224-42235]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[47192-47193]:NumberLiteral[42139-42140]"
    }, {
      "left" : "long unsortedCount = 0;",
      "right" : "T[] sorted = (T[]) Array.newInstance(type, _sorted.length);",
      "info" : "VariableDeclarationStatement[47203-47226]:VariableDeclarationStatement[35729-35788]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47203-47207]:PrimitiveType[36384-36388]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[47208-47221]:SimpleName[42210-42223]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[47224-47225]:NumberLiteral[42422-42423]"
    }, {
      "left" : "long addTime = 0L;",
      "right" : "long sortedCount = 0;",
      "info" : "VariableDeclarationStatement[47236-47254]:VariableDeclarationStatement[36004-36025]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47236-47240]:PrimitiveType[36353-36357]"
    }, {
      "left" : "addTime",
      "right" : "sortedCount",
      "info" : "SimpleName[47241-47248]:SimpleName[36009-36020]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[47241-47248]:SimpleName[41026-41033]"
    }, {
      "left" : "0L",
      "right" : "0",
      "info" : "NumberLiteral[47251-47253]:NumberLiteral[36023-36024]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47251-47253]:NumberLiteral[42328-42330]"
    }, {
      "left" : "long removeTime = 0L;",
      "right" : "long unsortedCount = 0;",
      "info" : "VariableDeclarationStatement[47263-47284]:VariableDeclarationStatement[36034-36057]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47263-47267]:PrimitiveType[36321-36325]"
    }, {
      "left" : "removeTime",
      "right" : "unsortedCount",
      "info" : "SimpleName[47268-47278]:SimpleName[36039-36052]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[47268-47278]:SimpleName[43005-43015]"
    }, {
      "left" : "0L",
      "right" : "0",
      "info" : "NumberLiteral[47281-47283]:NumberLiteral[36055-36056]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47281-47283]:NumberLiteral[42294-42296]"
    }, {
      "left" : "long beforeAddTime = 0L;",
      "right" : "long addTime = 0L;",
      "info" : "VariableDeclarationStatement[47294-47318]:VariableDeclarationStatement[36067-36085]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47294-47298]:PrimitiveType[36289-36293]"
    }, {
      "left" : "beforeAddTime",
      "right" : "addTime",
      "info" : "SimpleName[47299-47312]:SimpleName[36072-36079]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[47299-47312]:SimpleName[40929-40942]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47315-47317]:NumberLiteral[41513-41515]"
    }, {
      "left" : "long afterAddTime = 0L;",
      "right" : "long removeTime = 0L;",
      "info" : "VariableDeclarationStatement[47327-47350]:VariableDeclarationStatement[36094-36115]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47327-47331]:PrimitiveType[43481-43485]"
    }, {
      "left" : "afterAddTime",
      "right" : "removeTime",
      "info" : "SimpleName[47332-47344]:SimpleName[36099-36109]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[47332-47344]:SimpleName[40914-40926]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47347-47349]:NumberLiteral[41479-41481]"
    }, {
      "left" : "long beforeRemoveTime = 0L;",
      "right" : "long beforeAddTime = 0L;",
      "info" : "VariableDeclarationStatement[47359-47386]:VariableDeclarationStatement[36125-36149]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47359-47363]:PrimitiveType[43514-43518]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[47364-47380]:SimpleName[36130-36143]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[47364-47380]:SimpleName[42902-42918]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47383-47385]:NumberLiteral[40291-40293]"
    }, {
      "left" : "long afterRemoveTime = 0L;",
      "right" : "long afterAddTime = 0L;",
      "info" : "VariableDeclarationStatement[47395-47421]:VariableDeclarationStatement[36158-36181]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47395-47399]:PrimitiveType[43551-43555]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[47400-47415]:SimpleName[36163-36175]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[47400-47415]:SimpleName[42884-42899]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47418-47420]:NumberLiteral[40260-40262]"
    }, {
      "left" : "long memory = 0L;",
      "right" : "long beforeRemoveTime = 0L;",
      "info" : "VariableDeclarationStatement[47431-47448]:VariableDeclarationStatement[36190-36217]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47431-47435]:PrimitiveType[43590-43594]"
    }, {
      "left" : "memory",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[47436-47442]:SimpleName[36195-36211]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[47436-47442]:SimpleName[41311-41317]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47445-47447]:NumberLiteral[40228-40230]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47458-47462]:PrimitiveType[43629-43633]"
    }, {
      "left" : "beforeMemory",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[47463-47475]:SimpleName[36231-36246]"
    }, {
      "left" : "beforeMemory = 0L",
      "right" : "afterRemoveTime = 0L",
      "info" : "VariableDeclarationFragment[47463-47480]:VariableDeclarationFragment[36231-36251]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[47463-47475]:SimpleName[41213-41225]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47478-47480]:NumberLiteral[40198-40200]"
    }, {
      "left" : "long afterMemory = 0L;",
      "right" : "long afterRemoveTime = 0L;",
      "info" : "VariableDeclarationStatement[47490-47512]:VariableDeclarationStatement[36226-36252]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47490-47494]:PrimitiveType[43671-43675]"
    }, {
      "left" : "afterMemory",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[47495-47506]:SimpleName[36231-36246]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[47495-47506]:SimpleName[41199-41210]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47509-47511]:NumberLiteral[38872-38874]"
    }, {
      "left" : "long lookupTime = 0L;",
      "right" : "long memory = 0L;",
      "info" : "VariableDeclarationStatement[47522-47543]:VariableDeclarationStatement[36262-36279]"
    }, {
      "left" : "lookupTime",
      "right" : "memory",
      "info" : "SimpleName[47527-47537]:SimpleName[36267-36273]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[47527-47537]:SimpleName[42196-42206]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47540-47542]:NumberLiteral[43830-43832]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47553-47557]:PrimitiveType[36226-36230]"
    }, {
      "left" : "long beforeLookupTime = 0L;",
      "right" : "long beforeMemory = 0L;",
      "info" : "VariableDeclarationStatement[47553-47580]:VariableDeclarationStatement[36289-36312]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeMemory",
      "info" : "SimpleName[47558-47574]:SimpleName[36294-36306]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[47558-47574]:SimpleName[42093-42109]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47577-47579]:NumberLiteral[43860-43862]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[47589-47593]:PrimitiveType[36190-36194]"
    }, {
      "left" : "long afterLookupTime = 0L;",
      "right" : "long afterLookupTime = 0L;",
      "info" : "VariableDeclarationStatement[47589-47615]:VariableDeclarationStatement[36420-36446]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterMemory",
      "info" : "SimpleName[47594-47609]:SimpleName[36326-36337]"
    }, {
      "left" : "afterLookupTime = 0L",
      "right" : "afterMemory = 0L",
      "info" : "VariableDeclarationFragment[47594-47614]:VariableDeclarationFragment[36326-36342]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[47594-47609]:SimpleName[42075-42090]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47612-47614]:NumberLiteral[43898-43900]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[47625-47665]:IfStatement[36456-36496]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[47629-47634]:SimpleName[42940-42945]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[47637-47638]:NumberLiteral[40481-40482]"
    }, {
      "left" : "System.out.println(name);",
      "right" : "System.out.println(name);",
      "info" : "ExpressionStatement[47640-47665]:ExpressionStatement[36471-36496]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[47640-47650]:METHOD_INVOCATION_RECEIVER[42951-42961]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[47651-47658]:SimpleName[42613-42620]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[47659-47663]:SimpleName[43337-43341]"
    }, {
      "left" : "if (!firstTimeThru)",
      "right" : "if (!firstTimeThru)",
      "info" : "IfStatement[47725-47785]:IfStatement[36556-36616]"
    }, {
      "left" : "firstTimeThru",
      "right" : "firstTimeThru",
      "info" : "SimpleName[47730-47743]:SimpleName[50740-50753]"
    }, {
      "left" : "testNames[testIndex] = name;",
      "right" : "testNames[testIndex] = name;",
      "info" : "ExpressionStatement[47757-47785]:ExpressionStatement[36588-36616]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[47767-47776]:SimpleName[50785-50794]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[47780-47784]:SimpleName[39881-39885]"
    }, {
      "left" : "unsortedCount++;",
      "right" : "unsortedCount++;",
      "info" : "ExpressionStatement[47795-47811]:ExpressionStatement[36626-36642]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[47795-47808]:SimpleName[41321-41334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47820-51331]:Block[36651-40015]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[47901-47919]:ExpressionStatement[36732-36750]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[47901-47913]:SimpleName[37757-37769]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47916-47918]:NumberLiteral[43935-43937]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[47932-47949]:ExpressionStatement[36763-36780]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[47932-47943]:SimpleName[37743-37754]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47946-47948]:NumberLiteral[36747-36749]"
    }, {
      "left" : "beforeAddTime = 0L;",
      "right" : "beforeAddTime = 0L;",
      "info" : "ExpressionStatement[47962-47981]:ExpressionStatement[36793-36812]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[47962-47975]:SimpleName[37473-37486]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[47978-47980]:NumberLiteral[43700-43702]"
    }, {
      "left" : "afterAddTime = 0L;",
      "right" : "afterAddTime = 0L;",
      "info" : "ExpressionStatement[47994-48012]:ExpressionStatement[36825-36843]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[47994-48006]:SimpleName[37458-37470]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[48009-48011]:NumberLiteral[43659-43661]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[48025-48093]:IfStatement[36856-36924]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[48029-48040]:SimpleName[43955-43966]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[48042-48093]:ExpressionStatement[36873-36924]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[48042-48054]:SimpleName[40324-40336]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[48057-48077]:METHOD_INVOCATION_RECEIVER[41136-41156]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[48078-48090]:SimpleName[41157-41169]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[48106-48155]:IfStatement[36937-36986]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[48110-48119]:SimpleName[44036-44045]"
    }, {
      "left" : "beforeAddTime = System.nanoTime();",
      "right" : "beforeAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[48121-48155]:ExpressionStatement[36952-36986]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[48121-48134]:SimpleName[40244-40257]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[48137-48143]:METHOD_INVOCATION_RECEIVER[42835-42841]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[48144-48152]:SimpleName[42842-42850]"
    }, {
      "left" : "for (int i = 0; i < unsorted.length; i++)",
      "right" : "for (int i = 0; i < unsorted.length; i++)",
      "info" : "ForStatement[48168-48573]:ForStatement[36999-37351]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[48173-48176]:PrimitiveType[44105-44108]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[48177-48178]:SimpleName[44135-44136]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[48181-48182]:NumberLiteral[44113-44114]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[48184-48185]:SimpleName[44174-44175]"
    }, {
      "left" : "unsorted.length",
      "right" : "unsorted.length",
      "info" : "QualifiedName[48188-48203]:QualifiedName[40463-40478]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[48205-48206]:SimpleName[44109-44110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48210-48573]:Block[37041-37351]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[48228-48235]:SimpleType[31699-31706]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[48228-48235]:SimpleName[37059-37060]"
    }, {
      "left" : "Integer value = unsorted[i];",
      "right" : "T item = unsorted[i];",
      "info" : "VariableDeclarationStatement[48228-48256]:VariableDeclarationStatement[37059-37080]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[48236-48241]:SimpleName[37061-37065]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[48244-48252]:SimpleName[40524-40532]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[48253-48254]:SimpleName[44116-44117]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean added = collection.add(item);",
      "info" : "VariableDeclarationStatement[48273-48308]:VariableDeclarationStatement[37097-37134]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[48273-48274]:SimpleType[44158-44159]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[48275-48279]:SimpleName[44225-44229]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[48282-48287]:METHOD_INVOCATION_RECEIVER[35963-35968]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[48288-48294]:SimpleName[35969-35975]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[48302-48306]:SimpleName[35988-35992]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[48325-48332]:PrimitiveType[44194-44201]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[48333-48338]:SimpleName[44253-44258]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[48341-48351]:SimpleName[44368-44378]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[48352-48355]:SimpleName[44221-44224]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[48356-48360]:SimpleName[44160-44164]"
    }, {
      "left" : "if (!added)",
      "right" : "if (!added)",
      "info" : "IfStatement[48379-48559]:IfStatement[37151-37337]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[48384-48389]:SimpleName[44202-44207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48391-48559]:Block[37163-37337]"
    }, {
      "left" : "System.err.println(name+\" unsorted add failed.\");",
      "right" : "System.err.println(name+\" unsorted add failed.\");",
      "info" : "ExpressionStatement[48413-48462]:ExpressionStatement[37185-37234]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[48413-48423]:METHOD_INVOCATION_RECEIVER[44282-44292]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[48424-48431]:SimpleName[44649-44656]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[48432-48436]:SimpleName[44301-44305]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[48483-48507]:ExpressionStatement[37255-37285]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[48483-48494]:SimpleName[44350-44361]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[48495-48505]:SimpleName[44210-44220]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[48528-48541]:ReturnStatement[45574-45587]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[48586-48840]:IfStatement[37364-37618]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[48590-48599]:SimpleName[44463-44472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48601-48840]:Block[37379-37618]"
    }, {
      "left" : "afterAddTime = System.nanoTime();",
      "right" : "afterAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[48619-48652]:ExpressionStatement[37397-37430]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[48619-48631]:SimpleName[40276-40288]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[48634-48640]:METHOD_INVOCATION_RECEIVER[44513-44519]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[48641-48649]:SimpleName[44520-44528]"
    }, {
      "left" : "addTime += afterAddTime - beforeAddTime;",
      "right" : "addTime += afterAddTime - beforeAddTime;",
      "info" : "ExpressionStatement[48669-48709]:ExpressionStatement[37447-37487]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[48669-48676]:SimpleName[37570-37577]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[48680-48692]:SimpleName[37397-37409]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[48695-48708]:SimpleName[36952-36965]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[48726-48826]:IfStatement[37504-37604]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[48730-48735]:SimpleName[44912-44917]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[48738-48739]:NumberLiteral[44920-44921]"
    }, {
      "left" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[48741-48826]:ExpressionStatement[37519-37604]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[48741-48751]:METHOD_INVOCATION_RECEIVER[44638-44648]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[48752-48759]:SimpleName[44934-44941]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[48760-48764]:SimpleName[44942-44946]"
    }, {
      "left" : "\" unsorted add time = \"",
      "right" : "\" unsorted add time = \"",
      "info" : "StringLiteral[48765-48788]:StringLiteral[40999-41022]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[48792-48799]:SimpleName[40903-40910]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[48802-48815]:SimpleName[44984-44997]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[48819-48824]:StringLiteral[44718-44723]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[48853-49141]:IfStatement[37631-37919]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[48857-48868]:SimpleName[44756-44767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48870-49141]:Block[37648-37919]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[48888-48938]:ExpressionStatement[37666-37716]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[48888-48899]:SimpleName[44787-44798]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[48902-48922]:METHOD_INVOCATION_RECEIVER[44801-44821]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[48923-48935]:SimpleName[44822-44834]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[48955-48992]:ExpressionStatement[37733-37770]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[48955-48961]:SimpleName[44974-44980]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[48965-48976]:SimpleName[44864-44875]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[48979-48991]:SimpleName[44878-44890]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[49009-49127]:IfStatement[37787-37905]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[49013-49018]:SimpleName[44627-44632]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[49021-49022]:NumberLiteral[44635-44636]"
    }, {
      "left" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[49024-49127]:ExpressionStatement[37802-37905]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[49024-49034]:METHOD_INVOCATION_RECEIVER[45067-45077]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[49035-49042]:SimpleName[43329-43336]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[49043-49047]:SimpleName[44657-44661]"
    }, {
      "left" : "\" unsorted memory use = \"",
      "right" : "\" unsorted memory use = \"",
      "info" : "StringLiteral[49048-49073]:StringLiteral[41282-41307]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[49077-49083]:SimpleName[44854-44860]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[49087-49100]:SimpleName[39562-39575]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[49101-49112]:SimpleName[44998-45009]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[49117-49125]:StringLiteral[45014-45022]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[49155-49212]:IfStatement[37933-37990]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[49159-49164]:SimpleName[42131-42136]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[49167-49168]:NumberLiteral[45064-45065]"
    }, {
      "left" : "System.out.println(collection.toString());",
      "right" : "System.out.println(collection.toString());",
      "info" : "ExpressionStatement[49170-49212]:ExpressionStatement[37948-37990]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[49170-49180]:METHOD_INVOCATION_RECEIVER[44923-44933]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[49181-49188]:SimpleName[44293-44300]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[49189-49199]:METHOD_INVOCATION_RECEIVER[45370-45380]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[49200-49208]:SimpleName[45097-45105]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[49226-49248]:ExpressionStatement[38004-38026]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[49226-49242]:SimpleName[38637-38653]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[49245-49247]:NumberLiteral[45142-45144]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[49261-49282]:ExpressionStatement[38039-38060]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[49261-49276]:SimpleName[38619-38634]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[49279-49281]:NumberLiteral[45176-45178]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[49295-49347]:IfStatement[38073-38125]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[49299-49308]:SimpleName[45196-45205]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[49310-49347]:ExpressionStatement[38088-38125]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[49329-49335]:METHOD_INVOCATION_RECEIVER[42026-42032]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[49336-49344]:SimpleName[42033-42041]"
    }, {
      "left" : "for (int i = 0; i < unsorted.length; i++)",
      "right" : "for (int i = 0; i < unsorted.length; i++)",
      "info" : "ForStatement[49360-49781]:ForStatement[38138-38506]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[49365-49368]:PrimitiveType[45262-45265]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[49369-49370]:SimpleName[45292-45293]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[49373-49374]:NumberLiteral[45270-45271]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[49376-49377]:SimpleName[45331-45332]"
    }, {
      "left" : "unsorted.length",
      "right" : "_unsorted.length",
      "info" : "QualifiedName[49380-49395]:QualifiedName[35702-35718]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[49397-49398]:SimpleName[45266-45267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49402-49781]:Block[38180-38506]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[49420-49427]:SimpleType[31234-31241]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[49420-49427]:SimpleName[38198-38199]"
    }, {
      "left" : "Integer value = unsorted[i];",
      "right" : "T item = unsorted[i];",
      "info" : "VariableDeclarationStatement[49420-49448]:VariableDeclarationStatement[38198-38219]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[49428-49433]:SimpleName[38200-38204]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[49436-49444]:SimpleName[39022-39030]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[49445-49446]:SimpleName[45273-45274]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean contains = collection.contains(item);",
      "info" : "VariableDeclarationStatement[49465-49500]:VariableDeclarationStatement[38236-38281]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[49465-49466]:SimpleType[45315-45316]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[49467-49471]:SimpleName[45390-45394]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[49474-49479]:METHOD_INVOCATION_RECEIVER[35861-35866]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[49480-49486]:SimpleName[35867-35873]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[49494-49498]:SimpleName[35888-35892]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49517-49524]:PrimitiveType[45351-45358]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[49525-49533]:SimpleName[41722-41730]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[49536-49546]:SimpleName[45541-45551]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[49547-49555]:SimpleName[41700-41708]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[49556-49560]:SimpleName[45317-45321]"
    }, {
      "left" : "if (!contains)",
      "right" : "if (!contains)",
      "info" : "IfStatement[49579-49767]:IfStatement[38298-38492]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[49584-49592]:SimpleName[38266-38274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49594-49767]:Block[38313-38492]"
    }, {
      "left" : "System.err.println(name+\" unsorted contains failed.\");",
      "right" : "System.err.println(name+\" unsorted contains failed.\");",
      "info" : "ExpressionStatement[49616-49670]:ExpressionStatement[38335-38389]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[49616-49626]:METHOD_INVOCATION_RECEIVER[45450-45460]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[49627-49634]:SimpleName[45810-45817]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[49635-49639]:SimpleName[45469-45473]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[49691-49715]:ExpressionStatement[38410-38440]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[49691-49702]:SimpleName[45523-45534]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[49703-49713]:SimpleName[45086-45096]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[49736-49749]:ReturnStatement[46393-46406]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[49794-50080]:IfStatement[38519-38805]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[49798-49807]:SimpleName[46015-46024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49809-50080]:Block[38534-38805]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[49827-49863]:ExpressionStatement[38552-38588]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[49827-49842]:SimpleName[45732-45747]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[49845-49851]:METHOD_INVOCATION_RECEIVER[45683-45689]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[49852-49860]:SimpleName[45690-45698]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[49880-49929]:ExpressionStatement[38605-38654]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[49880-49890]:SimpleName[38740-38750]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[49894-49909]:SimpleName[45665-45680]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[49912-49928]:SimpleName[45750-45766]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[49946-50066]:IfStatement[38671-38791]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[49950-49955]:SimpleName[45788-45793]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[49958-49959]:NumberLiteral[46095-46096]"
    }, {
      "left" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[49961-50066]:ExpressionStatement[38686-38791]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[49961-49971]:METHOD_INVOCATION_RECEIVER[45799-45809]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[49972-49979]:SimpleName[45461-45468]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[49980-49984]:SimpleName[45818-45822]"
    }, {
      "left" : "\" unsorted lookup time = \"",
      "right" : "\" unsorted lookup time = \"",
      "info" : "StringLiteral[49985-50011]:StringLiteral[42166-42192]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[50015-50025]:SimpleName[45851-45861]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[50029-50042]:SimpleName[45865-45878]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[50043-50054]:SimpleName[45879-45890]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[50059-50064]:StringLiteral[45895-45900]"
    }, {
      "left" : "beforeRemoveTime = 0L;",
      "right" : "beforeRemoveTime = 0L;",
      "info" : "ExpressionStatement[50094-50116]:ExpressionStatement[38819-38841]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[50094-50110]:SimpleName[39446-39462]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[50113-50115]:NumberLiteral[45995-45997]"
    }, {
      "left" : "afterRemoveTime = 0L;",
      "right" : "afterRemoveTime = 0L;",
      "info" : "ExpressionStatement[50129-50150]:ExpressionStatement[38854-38875]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[50129-50144]:SimpleName[39428-39443]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[50147-50149]:NumberLiteral[45955-45957]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[50163-50215]:IfStatement[38888-38940]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[50167-50176]:SimpleName[46455-46464]"
    }, {
      "left" : "beforeRemoveTime = System.nanoTime();",
      "right" : "beforeRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[50178-50215]:ExpressionStatement[38903-38940]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[50178-50194]:SimpleName[42275-42291]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[50197-50203]:METHOD_INVOCATION_RECEIVER[46508-46514]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[50204-50212]:SimpleName[46515-46523]"
    }, {
      "left" : "for (int i = 0; i < unsorted.length; i++)",
      "right" : "for (int i = 0; i < unsorted.length; i++)",
      "info" : "ForStatement[50228-50643]:ForStatement[38953-39315]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[50233-50236]:PrimitiveType[46087-46090]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[50237-50238]:SimpleName[46156-46157]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[50241-50242]:NumberLiteral[45796-45797]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[50244-50245]:SimpleName[46091-46092]"
    }, {
      "left" : "unsorted.length",
      "right" : "unsorted.length",
      "info" : "QualifiedName[50248-50263]:QualifiedName[42429-42444]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[50265-50266]:SimpleName[46117-46118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50270-50643]:Block[38995-39315]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[50288-50295]:SimpleType[31108-31115]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[50288-50295]:SimpleName[39013-39014]"
    }, {
      "left" : "Integer value = unsorted[i];",
      "right" : "T item = unsorted[i];",
      "info" : "VariableDeclarationStatement[50288-50316]:VariableDeclarationStatement[39013-39034]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[50296-50301]:SimpleName[39015-39019]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[50304-50312]:SimpleName[38207-38215]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[50313-50314]:SimpleName[46098-46099]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean removed = collection.remove(item);",
      "info" : "VariableDeclarationStatement[50333-50368]:VariableDeclarationStatement[39051-39093]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[50333-50334]:SimpleType[46140-46141]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[50335-50339]:SimpleName[46212-46216]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[50362-50366]:SimpleName[35766-35770]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50385-50392]:PrimitiveType[46176-46183]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[50393-50400]:SimpleName[46240-46247]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[50403-50413]:SimpleName[46360-46370]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[50414-50420]:SimpleName[46205-46211]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[50421-50425]:SimpleName[46142-46146]"
    }, {
      "left" : "if (!removed)",
      "right" : "if (!removed)",
      "info" : "IfStatement[50444-50629]:IfStatement[39110-39301]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[50449-50456]:SimpleName[46184-46191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50458-50629]:Block[39124-39301]"
    }, {
      "left" : "System.err.println(name+\" unsorted remove failed.\");",
      "right" : "System.err.println(name+\" unsorted remove failed.\");",
      "info" : "ExpressionStatement[50480-50532]:ExpressionStatement[39146-39198]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[50480-50490]:METHOD_INVOCATION_RECEIVER[46808-46818]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[50491-50498]:SimpleName[46819-46826]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[50499-50503]:SimpleName[46661-46665]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[50553-50577]:ExpressionStatement[39219-39249]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[50553-50564]:SimpleName[46342-46353]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[50565-50575]:SimpleName[46896-46906]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[50598-50611]:ReturnStatement[39270-39283]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[50605-50610]:BooleanLiteral[46932-46937]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[50656-50928]:IfStatement[39328-39600]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[50660-50669]:SimpleName[45636-45645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50671-50928]:Block[39343-39600]"
    }, {
      "left" : "afterRemoveTime = System.nanoTime();",
      "right" : "afterRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[50689-50725]:ExpressionStatement[39361-39397]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[50689-50704]:SimpleName[42310-42325]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[50707-50713]:METHOD_INVOCATION_RECEIVER[38570-38576]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[50714-50722]:SimpleName[38577-38585]"
    }, {
      "left" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "right" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "info" : "ExpressionStatement[50742-50791]:ExpressionStatement[39414-39463]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[50742-50752]:SimpleName[39549-39559]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[50756-50771]:SimpleName[39361-39376]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[50774-50790]:SimpleName[38903-38919]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[50808-50914]:IfStatement[39480-39586]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[50812-50817]:SimpleName[46631-46636]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[50820-50821]:NumberLiteral[46988-46989]"
    }, {
      "left" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[50823-50914]:ExpressionStatement[39495-39586]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[50823-50833]:METHOD_INVOCATION_RECEIVER[46642-46652]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[50834-50841]:SimpleName[47020-47027]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[50842-50846]:SimpleName[47028-47032]"
    }, {
      "left" : "\" unsorted remove time = \"",
      "right" : "\" unsorted remove time = \"",
      "info" : "StringLiteral[50847-50873]:StringLiteral[42975-43001]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[50877-50887]:SimpleName[39414-39424]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[50890-50903]:SimpleName[43018-43031]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[50907-50912]:StringLiteral[46728-46733]"
    }, {
      "left" : "if (!collection.isEmpty())",
      "right" : "if (!collection.isEmpty())",
      "info" : "IfStatement[50942-51127]:IfStatement[39614-39805]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[50947-50957]:SimpleName[38428-38438]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[50958-50965]:SimpleName[46779-46786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50969-51127]:Block[39641-39805]"
    }, {
      "left" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[50987-51042]:ExpressionStatement[39659-39714]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[50987-50997]:METHOD_INVOCATION_RECEIVER[46271-46281]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[50998-51005]:SimpleName[46282-46289]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[51006-51010]:SimpleName[46290-46294]"
    }, {
      "left" : "\" unsorted isEmpty() failed.\"",
      "right" : "\" unsorted isEmpty() failed.\"",
      "info" : "StringLiteral[51011-51040]:StringLiteral[43139-43168]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[51059-51083]:ExpressionStatement[39731-39761]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[51059-51070]:SimpleName[40711-40722]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[51071-51081]:SimpleName[38255-38265]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51100-51113]:ReturnStatement[39778-39791]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[51107-51112]:BooleanLiteral[47130-47135]"
    }, {
      "left" : "if (collection.size()!=0)",
      "right" : "if (collection.size()!=0)",
      "info" : "IfStatement[51140-51321]:IfStatement[39818-40005]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[51144-51154]:SimpleName[37273-37283]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[51155-51159]:SimpleName[46980-46984]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[51163-51164]:NumberLiteral[46639-46640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51166-51321]:Block[39844-40005]"
    }, {
      "left" : "System.err.println(name+\" unsorted size() failed.\");",
      "right" : "System.err.println(name+\" unsorted size() failed.\");",
      "info" : "ExpressionStatement[51184-51236]:ExpressionStatement[39862-39914]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[51184-51194]:METHOD_INVOCATION_RECEIVER[47009-47019]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[51195-51202]:SimpleName[46653-46660]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[51203-51207]:SimpleName[46827-46831]"
    }, {
      "left" : "\" unsorted size() failed.\"",
      "right" : "\" unsorted size() failed.\"",
      "info" : "StringLiteral[51208-51234]:StringLiteral[43342-43368]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[51253-51264]:SimpleName[39219-39230]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[51253-51277]:ExpressionStatement[39931-39961]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[51265-51275]:SimpleName[37113-37123]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51294-51307]:ReturnStatement[39978-39991]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[51301-51306]:BooleanLiteral[47918-47923]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[51341-51354]:SimpleName[38754-38767]"
    }, {
      "left" : "unsortedCount++;",
      "right" : "unsortedCount++;",
      "info" : "ExpressionStatement[51341-51357]:ExpressionStatement[40025-40041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51366-54934]:Block[40050-43471]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[51499-51517]:ExpressionStatement[40183-40201]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[51499-51511]:SimpleName[47478-47490]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[51514-51516]:NumberLiteral[47340-47342]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[51530-51547]:ExpressionStatement[40214-40231]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[51530-51541]:SimpleName[41122-41133]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[51544-51546]:NumberLiteral[47370-47372]"
    }, {
      "left" : "beforeAddTime = 0L;",
      "right" : "beforeAddTime = 0L;",
      "info" : "ExpressionStatement[51560-51579]:ExpressionStatement[40244-40263]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[51560-51573]:SimpleName[40403-40416]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[51576-51578]:NumberLiteral[47408-47410]"
    }, {
      "left" : "afterAddTime = 0L;",
      "right" : "afterAddTime = 0L;",
      "info" : "ExpressionStatement[51592-51610]:ExpressionStatement[40276-40294]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[51592-51604]:SimpleName[40853-40865]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[51607-51609]:NumberLiteral[47445-47447]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[51623-51691]:IfStatement[40307-40375]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[51627-51638]:SimpleName[47465-47476]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[51640-51652]:SimpleName[36873-36885]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[51640-51691]:ExpressionStatement[40324-40375]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[51655-51675]:METHOD_INVOCATION_RECEIVER[37680-37700]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[51676-51688]:SimpleName[37701-37713]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[51704-51753]:IfStatement[40388-40437]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[51708-51717]:SimpleName[47973-47982]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[51719-51732]:SimpleName[36793-36806]"
    }, {
      "left" : "beforeAddTime = System.nanoTime();",
      "right" : "beforeAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[51719-51753]:ExpressionStatement[40403-40437]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[51735-51741]:METHOD_INVOCATION_RECEIVER[48023-48029]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[51742-51750]:SimpleName[48030-48038]"
    }, {
      "left" : "for (int i = unsorted.length - 1; i >= 0; i--)",
      "right" : "for (int i = unsorted.length - 1; i >= 0; i--)",
      "info" : "ForStatement[51766-52176]:ForStatement[40450-40807]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[51771-51774]:PrimitiveType[47615-47618]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[51775-51776]:SimpleName[47645-47646]"
    }, {
      "left" : "unsorted.length",
      "right" : "unsorted.length",
      "info" : "QualifiedName[51779-51794]:QualifiedName[37019-37034]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[51797-51798]:NumberLiteral[41401-41402]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[51800-51801]:SimpleName[47684-47685]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[51805-51806]:NumberLiteral[48145-48146]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[51808-51809]:SimpleName[47619-47620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51813-52176]:Block[40497-40807]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[51831-51838]:SimpleType[30637-30644]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[51831-51838]:SimpleName[40515-40516]"
    }, {
      "left" : "Integer value = unsorted[i];",
      "right" : "T item = unsorted[i];",
      "info" : "VariableDeclarationStatement[51831-51859]:VariableDeclarationStatement[40515-40536]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[51839-51844]:SimpleName[40517-40521]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[51847-51855]:SimpleName[37068-37076]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[51856-51857]:SimpleName[47626-47627]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean added = collection.add(item);",
      "info" : "VariableDeclarationStatement[51876-51911]:VariableDeclarationStatement[40553-40590]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[51876-51877]:SimpleType[47668-47669]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[51878-51882]:SimpleName[47735-47739]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[51905-51909]:SimpleName[35696-35700]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[51928-51935]:PrimitiveType[47704-47711]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[51936-51941]:SimpleName[47712-47717]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[51944-51954]:SimpleName[47878-47888]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[51955-51958]:SimpleName[47731-47734]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[51959-51963]:SimpleName[47670-47674]"
    }, {
      "left" : "if (!added)",
      "right" : "if (!added)",
      "info" : "IfStatement[51982-52162]:IfStatement[40607-40793]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[51987-51992]:SimpleName[47763-47768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51994-52162]:Block[40619-40793]"
    }, {
      "left" : "System.err.println(name+\" unsorted add failed.\");",
      "right" : "System.err.println(name+\" unsorted add failed.\");",
      "info" : "ExpressionStatement[52016-52065]:ExpressionStatement[40641-40690]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[52016-52026]:METHOD_INVOCATION_RECEIVER[47792-47802]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[52027-52034]:SimpleName[48444-48451]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[52035-52039]:SimpleName[48452-48456]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[52086-52110]:ExpressionStatement[40711-40741]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[52086-52097]:SimpleName[47860-47871]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[52098-52108]:SimpleName[47720-47730]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52131-52144]:ReturnStatement[49084-49097]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[52189-52443]:IfStatement[40820-41074]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[52193-52202]:SimpleName[47546-47555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52204-52443]:Block[40835-41074]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[52222-52234]:SimpleName[36825-36837]"
    }, {
      "left" : "afterAddTime = System.nanoTime();",
      "right" : "afterAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[52222-52255]:ExpressionStatement[40853-40886]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[52237-52243]:METHOD_INVOCATION_RECEIVER[37412-37418]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[52244-52252]:SimpleName[37419-37427]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[52272-52279]:SimpleName[37447-37454]"
    }, {
      "left" : "addTime += afterAddTime - beforeAddTime;",
      "right" : "addTime += afterAddTime - beforeAddTime;",
      "info" : "ExpressionStatement[52272-52312]:ExpressionStatement[40903-40943]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[52283-52295]:SimpleName[36163-36175]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[52298-52311]:SimpleName[36130-36143]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[52329-52429]:IfStatement[40960-41060]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[52333-52338]:SimpleName[48422-48427]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[52341-52342]:NumberLiteral[48430-48431]"
    }, {
      "left" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[52344-52429]:ExpressionStatement[40975-41060]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[52344-52354]:METHOD_INVOCATION_RECEIVER[48433-48443]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[52355-52362]:SimpleName[48159-48166]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[52363-52367]:SimpleName[47811-47815]"
    }, {
      "left" : "\" unsorted add time = \"",
      "right" : "\" unsorted add time = \"",
      "info" : "StringLiteral[52368-52391]:StringLiteral[37543-37566]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[52395-52402]:SimpleName[36072-36079]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[52405-52418]:SimpleName[48494-48507]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[52422-52427]:StringLiteral[48228-48233]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[52456-52744]:IfStatement[41087-41375]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[52460-52471]:SimpleName[48266-48277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52473-52744]:Block[41104-41375]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[52491-52541]:ExpressionStatement[41122-41172]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[52491-52502]:SimpleName[48374-48385]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[52505-52525]:METHOD_INVOCATION_RECEIVER[48311-48331]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[52526-52538]:SimpleName[48332-48344]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[52558-52564]:SimpleName[37855-37861]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[52558-52595]:ExpressionStatement[41189-41226]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[52568-52579]:SimpleName[48297-48308]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[52582-52594]:SimpleName[48388-48400]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[52612-52730]:IfStatement[41243-41361]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[52616-52621]:SimpleName[48137-48142]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[52624-52625]:NumberLiteral[48780-48781]"
    }, {
      "left" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[52627-52730]:ExpressionStatement[41258-41361]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[52627-52637]:METHOD_INVOCATION_RECEIVER[48148-48158]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[52638-52645]:SimpleName[43126-43133]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[52646-52650]:SimpleName[48167-48171]"
    }, {
      "left" : "\" unsorted memory use = \"",
      "right" : "\" unsorted memory use = \"",
      "info" : "StringLiteral[52651-52676]:StringLiteral[37826-37851]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[52680-52686]:SimpleName[48484-48490]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[52690-52703]:SimpleName[37580-37593]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[52704-52715]:SimpleName[48508-48519]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[52720-52728]:StringLiteral[48524-48532]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[52758-52815]:IfStatement[41389-41446]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[52762-52767]:SimpleName[41247-41252]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[52770-52771]:NumberLiteral[48574-48575]"
    }, {
      "left" : "System.out.println(collection.toString());",
      "right" : "System.out.println(collection.toString());",
      "info" : "ExpressionStatement[52773-52815]:ExpressionStatement[41404-41446]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[52773-52783]:METHOD_INVOCATION_RECEIVER[42142-42152]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[52784-52791]:SimpleName[48971-48978]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[52792-52802]:SimpleName[49051-49061]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[52803-52811]:SimpleName[48607-48615]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[52829-52851]:ExpressionStatement[41460-41482]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[52829-52845]:SimpleName[45207-45223]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[52848-52850]:NumberLiteral[48686-48688]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[52864-52885]:ExpressionStatement[41495-41516]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[52864-52879]:SimpleName[42008-42023]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[52882-52884]:NumberLiteral[48652-48654]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[52898-52950]:IfStatement[41529-41581]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[52902-52911]:SimpleName[49146-49155]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[52913-52950]:ExpressionStatement[41544-41581]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[52913-52929]:SimpleName[48717-48733]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[52932-52938]:METHOD_INVOCATION_RECEIVER[49193-49199]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[52939-52947]:SimpleName[49200-49208]"
    }, {
      "left" : "for (int i = 0; i < unsorted.length; i++)",
      "right" : "for (int i = 0; i < unsorted.length; i++)",
      "info" : "ForStatement[52963-53384]:ForStatement[41594-41962]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[52968-52971]:PrimitiveType[48772-48775]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[52972-52973]:SimpleName[48802-48803]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[52976-52977]:NumberLiteral[49306-49307]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[52979-52980]:SimpleName[48841-48842]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[53000-53001]:SimpleName[48776-48777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53005-53384]:Block[41636-41962]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[53023-53030]:SimpleType[30042-30049]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[53023-53030]:SimpleName[41654-41655]"
    }, {
      "left" : "Integer value = unsorted[i];",
      "right" : "T item = unsorted[i];",
      "info" : "VariableDeclarationStatement[53023-53051]:VariableDeclarationStatement[41654-41675]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[53031-53036]:SimpleName[41656-41660]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[53039-53047]:SimpleName[35847-35855]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[53048-53049]:SimpleName[48783-48784]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean contains = collection.contains(item);",
      "info" : "VariableDeclarationStatement[53068-53103]:VariableDeclarationStatement[41692-41737]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[53068-53069]:SimpleType[48825-48826]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[53070-53074]:SimpleName[48900-48904]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53120-53127]:PrimitiveType[48861-48868]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[53128-53136]:SimpleName[48869-48877]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[53139-53149]:METHOD_INVOCATION_RECEIVER[48880-48890]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[53150-53158]:SimpleName[48891-48899]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[53159-53163]:SimpleName[48827-48831]"
    }, {
      "left" : "if (!contains)",
      "right" : "if (!contains)",
      "info" : "IfStatement[53182-53370]:IfStatement[41754-41948]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[53187-53195]:SimpleName[48928-48936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53197-53370]:Block[41769-41948]"
    }, {
      "left" : "System.err.println(name+\" unsorted contains failed.\");",
      "right" : "System.err.println(name+\" unsorted contains failed.\");",
      "info" : "ExpressionStatement[53219-53273]:ExpressionStatement[41791-41845]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[53219-53229]:METHOD_INVOCATION_RECEIVER[48960-48970]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[53230-53237]:SimpleName[49320-49327]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[53238-53242]:SimpleName[48979-48983]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[53294-53318]:ExpressionStatement[41866-41896]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[53294-53305]:SimpleName[49033-49044]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[53306-53316]:SimpleName[49709-49719]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53339-53352]:ReturnStatement[41917-41930]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[53346-53351]:BooleanLiteral[49915-49920]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[53397-53683]:IfStatement[41975-42261]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[53401-53410]:SimpleName[49525-49534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53412-53683]:Block[41990-42261]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[53430-53466]:ExpressionStatement[42008-42044]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[53430-53445]:SimpleName[49175-49190]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[53448-53454]:METHOD_INVOCATION_RECEIVER[49561-49567]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[53455-53463]:SimpleName[49568-49576]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[53483-53532]:ExpressionStatement[42061-42110]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[53483-53493]:SimpleName[49361-49371]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[53497-53512]:SimpleName[49242-49257]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[53515-53531]:SimpleName[49260-49276]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[53549-53669]:IfStatement[42127-42247]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[53553-53558]:SimpleName[49298-49303]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[53561-53562]:NumberLiteral[49629-49630]"
    }, {
      "left" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[53564-53669]:ExpressionStatement[42142-42247]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[53564-53574]:METHOD_INVOCATION_RECEIVER[49309-49319]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[53575-53582]:SimpleName[49797-49804]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[53583-53587]:SimpleName[49805-49809]"
    }, {
      "left" : "\" unsorted lookup time = \"",
      "right" : "\" unsorted lookup time = \"",
      "info" : "StringLiteral[53588-53614]:StringLiteral[38710-38736]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[53618-53628]:SimpleName[49228-49238]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[53632-53645]:SimpleName[49375-49388]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[53646-53657]:SimpleName[49389-49400]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[53662-53667]:StringLiteral[49405-49410]"
    }, {
      "left" : "beforeRemoveTime = 0L;",
      "right" : "beforeRemoveTime = 0L;",
      "info" : "ExpressionStatement[53697-53719]:ExpressionStatement[42275-42297]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[53697-53713]:SimpleName[42359-42375]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[53716-53718]:NumberLiteral[49505-49507]"
    }, {
      "left" : "afterRemoveTime = 0L;",
      "right" : "afterRemoveTime = 0L;",
      "info" : "ExpressionStatement[53732-53753]:ExpressionStatement[42310-42331]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[53732-53747]:SimpleName[42817-42832]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[53750-53752]:NumberLiteral[49465-49467]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[53766-53818]:IfStatement[42344-42396]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[53770-53779]:SimpleName[49970-49979]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[53781-53797]:SimpleName[38819-38835]"
    }, {
      "left" : "beforeRemoveTime = System.nanoTime();",
      "right" : "beforeRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[53781-53818]:ExpressionStatement[42359-42396]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[53800-53806]:METHOD_INVOCATION_RECEIVER[50023-50029]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[53807-53815]:SimpleName[50030-50038]"
    }, {
      "left" : "for (int i = 0; i < unsorted.length; i++)",
      "right" : "for (int i = 0; i < unsorted.length; i++)",
      "info" : "ForStatement[53831-54246]:ForStatement[42409-42771]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[53836-53839]:PrimitiveType[49597-49600]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[53840-53841]:SimpleName[49671-49672]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[53844-53845]:NumberLiteral[50154-50155]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[53847-53848]:SimpleName[49601-49602]"
    }, {
      "left" : "unsorted.length",
      "right" : "unsorted.length",
      "info" : "QualifiedName[53851-53866]:QualifiedName[38973-38988]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[53868-53869]:SimpleName[49632-49633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53873-54246]:Block[42451-42771]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[53891-53898]:SimpleType[29930-29937]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[53891-53898]:SimpleName[42469-42470]"
    }, {
      "left" : "Integer value = unsorted[i];",
      "right" : "T item = unsorted[i];",
      "info" : "VariableDeclarationStatement[53891-53919]:VariableDeclarationStatement[42469-42490]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[53899-53904]:SimpleName[42471-42475]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[53907-53915]:SimpleName[34941-34949]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[53916-53917]:SimpleName[49624-49625]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean removed = collection.remove(item);",
      "info" : "VariableDeclarationStatement[53936-53971]:VariableDeclarationStatement[42507-42549]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[53936-53937]:SimpleType[49655-49656]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[53938-53942]:SimpleName[49727-49731]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[53945-53950]:METHOD_INVOCATION_RECEIVER[52381-52386]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[53951-53957]:SimpleName[52387-52393]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53988-53995]:PrimitiveType[49691-49698]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[53996-54003]:SimpleName[49699-49706]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[54006-54016]:SimpleName[39749-39759]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[54017-54023]:SimpleName[49720-49726]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[54024-54028]:SimpleName[49657-49661]"
    }, {
      "left" : "if (!removed)",
      "right" : "if (!removed)",
      "info" : "IfStatement[54047-54232]:IfStatement[42566-42757]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[54052-54059]:SimpleName[49755-49762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54061-54232]:Block[42580-42757]"
    }, {
      "left" : "System.err.println(name+\" unsorted remove failed.\");",
      "right" : "System.err.println(name+\" unsorted remove failed.\");",
      "info" : "ExpressionStatement[54083-54135]:ExpressionStatement[42602-42654]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[54083-54093]:METHOD_INVOCATION_RECEIVER[50524-50534]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[54094-54101]:SimpleName[50535-50542]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[54102-54106]:SimpleName[50543-50547]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[54156-54180]:ExpressionStatement[42675-42705]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[54156-54167]:SimpleName[50591-50602]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[54168-54178]:SimpleName[43075-43085]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54201-54214]:ReturnStatement[42726-42739]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[54208-54213]:BooleanLiteral[50645-50650]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[54259-54531]:IfStatement[42784-43056]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[54263-54272]:SimpleName[48706-48715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54274-54531]:Block[42799-43056]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[54292-54307]:SimpleName[38854-38869]"
    }, {
      "left" : "afterRemoveTime = System.nanoTime();",
      "right" : "afterRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[54292-54328]:ExpressionStatement[42817-42853]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[54310-54316]:METHOD_INVOCATION_RECEIVER[47579-47585]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[54317-54325]:SimpleName[47586-47594]"
    }, {
      "left" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "right" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "info" : "ExpressionStatement[54345-54394]:ExpressionStatement[42870-42919]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[54359-54374]:SimpleName[36231-36246]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[54377-54393]:SimpleName[36195-36211]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[54411-54517]:IfStatement[42936-43042]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[54415-54420]:SimpleName[50146-50151]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[54423-54424]:NumberLiteral[50895-50896]"
    }, {
      "left" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[54426-54517]:ExpressionStatement[42951-43042]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[54426-54436]:METHOD_INVOCATION_RECEIVER[50157-50167]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[54437-54444]:SimpleName[50168-50175]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[54445-54449]:SimpleName[49328-49332]"
    }, {
      "left" : "\" unsorted remove time = \"",
      "right" : "\" unsorted remove time = \"",
      "info" : "StringLiteral[54450-54476]:StringLiteral[39519-39545]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[54480-54490]:SimpleName[50970-50980]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[54493-54506]:SimpleName[41036-41049]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[54510-54515]:StringLiteral[50243-50248]"
    }, {
      "left" : "if (!collection.isEmpty())",
      "right" : "if (!collection.isEmpty())",
      "info" : "IfStatement[54545-54730]:IfStatement[43070-43261]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[54550-54560]:SimpleName[49875-49885]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[54561-54568]:SimpleName[50294-50301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54572-54730]:Block[43097-43261]"
    }, {
      "left" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[54590-54645]:ExpressionStatement[43115-43170]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[54590-54600]:METHOD_INVOCATION_RECEIVER[49786-49796]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[54601-54608]:SimpleName[47803-47810]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[54609-54613]:SimpleName[50176-50180]"
    }, {
      "left" : "\" unsorted isEmpty() failed.\"",
      "right" : "\" unsorted isEmpty() failed.\"",
      "info" : "StringLiteral[54614-54643]:StringLiteral[39683-39712]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[54662-54686]:ExpressionStatement[43187-43217]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[54662-54673]:SimpleName[49857-49868]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[54674-54684]:SimpleName[50609-50619]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54703-54716]:ReturnStatement[43234-43247]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[54710-54715]:BooleanLiteral[50447-50452]"
    }, {
      "left" : "if (collection.size()!=0)",
      "right" : "if (collection.size()!=0)",
      "info" : "IfStatement[54743-54924]:IfStatement[43274-43461]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[54747-54757]:METHOD_INVOCATION_RECEIVER[46194-46204]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[54758-54762]:SimpleName[50495-50499]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[54766-54767]:NumberLiteral[47623-47624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54769-54924]:Block[43300-43461]"
    }, {
      "left" : "System.err.println(name+\" unsorted size() failed.\");",
      "right" : "System.err.println(name+\" unsorted size() failed.\");",
      "info" : "ExpressionStatement[54787-54839]:ExpressionStatement[43318-43370]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[54787-54797]:METHOD_INVOCATION_RECEIVER[50323-50333]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[54798-54805]:SimpleName[50334-50341]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[54806-54810]:SimpleName[50342-50346]"
    }, {
      "left" : "\" unsorted size() failed.\"",
      "right" : "\" unsorted size() failed.\"",
      "info" : "StringLiteral[54811-54837]:StringLiteral[39886-39912]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[54856-54867]:SimpleName[38410-38421]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[54856-54880]:ExpressionStatement[43387-43417]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[54868-54878]:SimpleName[50411-50421]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54897-54910]:ReturnStatement[51817-51830]"
    }, {
      "left" : "long addSortedTime = 0L;",
      "right" : "long addSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[54944-54968]:VariableDeclarationStatement[43481-43505]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[54944-54948]:PrimitiveType[50851-50855]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[54949-54962]:SimpleName[48197-48210]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[54965-54967]:NumberLiteral[38838-38840]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[54977-54981]:PrimitiveType[36158-36162]"
    }, {
      "left" : "long removeSortedTime = 0L;",
      "right" : "long removeSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[54977-55004]:VariableDeclarationStatement[43514-43541]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[54982-54998]:SimpleName[50209-50225]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55001-55003]:NumberLiteral[38057-38059]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[55014-55018]:PrimitiveType[36125-36129]"
    }, {
      "left" : "long beforeAddSortedTime = 0L;",
      "right" : "long beforeAddSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[55014-55044]:VariableDeclarationStatement[43551-43581]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[55019-55038]:SimpleName[48096-48115]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55041-55043]:NumberLiteral[38023-38025]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[55053-55057]:PrimitiveType[36094-36098]"
    }, {
      "left" : "long afterAddSortedTime = 0L;",
      "right" : "long afterAddSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[55053-55082]:VariableDeclarationStatement[43590-43619]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[55058-55076]:SimpleName[48075-48093]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55079-55081]:NumberLiteral[36840-36842]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[55092-55096]:PrimitiveType[36067-36071]"
    }, {
      "left" : "long beforeRemoveSortedTime = 0L;",
      "right" : "long beforeRemoveSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[55092-55125]:VariableDeclarationStatement[43629-43662]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[55097-55119]:SimpleName[50102-50124]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55122-55124]:NumberLiteral[36809-36811]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[55134-55138]:PrimitiveType[36034-36038]"
    }, {
      "left" : "long afterRemoveSortedTime = 0L;",
      "right" : "long afterRemoveSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[55134-55166]:VariableDeclarationStatement[43671-43703]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[55139-55160]:SimpleName[50078-50099]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55163-55165]:NumberLiteral[36777-36779]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[55176-55187]:SimpleName[41335-41346]"
    }, {
      "left" : "sortedCount++;",
      "right" : "sortedCount++;",
      "info" : "ExpressionStatement[55176-55190]:ExpressionStatement[43713-43727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55199-58772]:Block[43736-47160]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[55278-55296]:ExpressionStatement[43815-43833]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[55278-55290]:SimpleName[43968-43980]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55293-55295]:NumberLiteral[43616-43618]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[55309-55320]:SimpleName[37666-37677]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[55309-55326]:ExpressionStatement[43846-43863]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55323-55325]:NumberLiteral[43578-43580]"
    }, {
      "left" : "beforeAddSortedTime = 0L;",
      "right" : "beforeAddSortedTime = 0L;",
      "info" : "ExpressionStatement[55339-55364]:ExpressionStatement[43876-43901]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[55339-55358]:SimpleName[44586-44605]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55361-55363]:NumberLiteral[43538-43540]"
    }, {
      "left" : "afterAddSortedTime = 0L;",
      "right" : "afterAddSortedTime = 0L;",
      "info" : "ExpressionStatement[55377-55401]:ExpressionStatement[43914-43938]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[55377-55395]:SimpleName[44565-44583]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[55398-55400]:NumberLiteral[43502-43504]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[55414-55482]:IfStatement[43951-44019]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[55418-55429]:SimpleName[41091-41102]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[55431-55482]:ExpressionStatement[43968-44019]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[55431-55443]:SimpleName[47325-47337]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[55446-55466]:METHOD_INVOCATION_RECEIVER[47493-47513]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[55467-55479]:SimpleName[47514-47526]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[55495-55550]:IfStatement[44032-44087]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[55499-55508]:SimpleName[42788-42797]"
    }, {
      "left" : "beforeAddSortedTime = System.nanoTime();",
      "right" : "beforeAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[55510-55550]:ExpressionStatement[44047-44087]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[55510-55529]:SimpleName[47386-47405]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[55532-55538]:METHOD_INVOCATION_RECEIVER[40868-40874]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[55539-55547]:SimpleName[40875-40883]"
    }, {
      "left" : "for (int i = 0; i < sorted.length; i++)",
      "right" : "for (int i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[55563-55964]:ForStatement[44100-44446]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55568-55571]:PrimitiveType[52320-52323]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[55572-55573]:SimpleName[52329-52330]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[55576-55577]:NumberLiteral[50503-50504]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[55579-55580]:SimpleName[52376-52377]"
    }, {
      "left" : "sorted.length",
      "right" : "sorted.length",
      "info" : "QualifiedName[55583-55596]:QualifiedName[49605-49618]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[55598-55599]:SimpleName[52349-52350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55603-55964]:Block[44140-44446]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[55621-55628]:SimpleType[29464-29471]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[55621-55628]:SimpleName[44158-44159]"
    }, {
      "left" : "Integer value = unsorted[i];",
      "right" : "T item = sorted[i];",
      "info" : "VariableDeclarationStatement[55621-55649]:VariableDeclarationStatement[44158-44177]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[55629-55634]:SimpleName[44160-44164]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[55637-55645]:SimpleName[34350-34358]"
    }, {
      "left" : "unsorted",
      "right" : "sorted",
      "info" : "SimpleName[55637-55645]:SimpleName[44167-44173]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[55646-55647]:SimpleName[52324-52325]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[55666-55667]:SimpleType[42469-42470]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean added = collection.add(item);",
      "info" : "VariableDeclarationStatement[55666-55701]:VariableDeclarationStatement[44194-44231]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[55668-55672]:SimpleName[42543-42547]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[55675-55680]:METHOD_INVOCATION_RECEIVER[52488-52493]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[55681-55687]:SimpleName[52494-52500]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[55718-55725]:PrimitiveType[16306-16313]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[55726-55731]:SimpleName[40612-40617]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[55734-55744]:METHOD_INVOCATION_RECEIVER[37967-37977]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[55745-55748]:SimpleName[40580-40583]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[55749-55753]:SimpleName[42471-42475]"
    }, {
      "left" : "if (!added)",
      "right" : "if (!added)",
      "info" : "IfStatement[55772-55950]:IfStatement[44248-44432]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[55777-55782]:SimpleName[40561-40566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55784-55950]:Block[44260-44432]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[55806-55816]:METHOD_INVOCATION_RECEIVER[43318-43328]"
    }, {
      "left" : "System.err.println(name+\" sorted add failed.\");",
      "right" : "System.err.println(name+\" sorted add failed.\");",
      "info" : "ExpressionStatement[55806-55853]:ExpressionStatement[44282-44329]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[55817-55824]:SimpleName[51725-51732]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[55825-55829]:SimpleName[51733-51737]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[55874-55898]:ExpressionStatement[44350-44380]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[55874-55885]:SimpleName[46878-46889]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[55886-55896]:SimpleName[39822-39832]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[55919-55932]:ReturnStatement[44401-44414]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[55926-55931]:BooleanLiteral[51989-51994]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[55977-56257]:IfStatement[44459-44739]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[55981-55990]:SimpleName[42348-42357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55992-56257]:Block[44474-44739]"
    }, {
      "left" : "afterAddSortedTime = System.nanoTime();",
      "right" : "afterAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[56010-56049]:ExpressionStatement[44492-44531]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[56010-56028]:SimpleName[47424-47442]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[56031-56037]:METHOD_INVOCATION_RECEIVER[46051-46057]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[56038-56046]:SimpleName[46058-46066]"
    }, {
      "left" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "right" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "info" : "ExpressionStatement[56066-56124]:ExpressionStatement[44548-44606]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[56066-56079]:SimpleName[44687-44700]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[56083-56101]:SimpleName[44492-44510]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[56104-56123]:SimpleName[44047-44066]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[56141-56243]:IfStatement[44623-44725]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[56145-56150]:SimpleName[39484-39489]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[56153-56154]:NumberLiteral[43297-43298]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[56156-56166]:METHOD_INVOCATION_RECEIVER[41404-41414]"
    }, {
      "left" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[56156-56243]:ExpressionStatement[44638-44725]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[56167-56174]:SimpleName[51893-51900]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[56175-56179]:SimpleName[39678-39682]"
    }, {
      "left" : "\" sorted add time = \"",
      "right" : "\" sorted add time = \"",
      "info" : "StringLiteral[56180-56201]:StringLiteral[48172-48193]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[56205-56218]:SimpleName[51041-51054]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[56221-56232]:SimpleName[46713-46724]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[56236-56241]:StringLiteral[43035-43040]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[56270-56556]:IfStatement[44752-45038]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[56274-56285]:SimpleName[53541-53552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56287-56556]:Block[44769-45038]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[56305-56355]:ExpressionStatement[44787-44837]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[56305-56316]:SimpleName[47356-47367]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[56319-56339]:METHOD_INVOCATION_RECEIVER[43983-44003]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[56340-56352]:SimpleName[44004-44016]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[56372-56409]:ExpressionStatement[44854-44891]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[56372-56378]:SimpleName[51275-51281]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[56382-56393]:SimpleName[40214-40225]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[56396-56408]:SimpleName[40183-40195]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[56426-56542]:IfStatement[44908-45024]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[56430-56435]:SimpleName[38675-38680]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[56438-56439]:NumberLiteral[51865-51866]"
    }, {
      "left" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[56441-56542]:ExpressionStatement[44923-45024]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[56441-56451]:METHOD_INVOCATION_RECEIVER[51350-51360]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[56452-56459]:SimpleName[48588-48595]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[56460-56464]:SimpleName[51901-51905]"
    }, {
      "left" : "\" sorted memory use = \"",
      "right" : "\" sorted memory use = \"",
      "info" : "StringLiteral[56465-56488]:StringLiteral[48457-48480]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[56492-56498]:SimpleName[37733-37739]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[56502-56515]:SimpleName[51285-51298]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[56516-56527]:SimpleName[51218-51229]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[56532-56540]:StringLiteral[41351-41359]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[56570-56627]:IfStatement[45052-45109]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[56574-56579]:SimpleName[40964-40969]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[56582-56583]:NumberLiteral[50963-50964]"
    }, {
      "left" : "System.out.println(collection.toString());",
      "right" : "System.out.println(collection.toString());",
      "info" : "ExpressionStatement[56585-56627]:ExpressionStatement[45067-45109]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[56585-56595]:METHOD_INVOCATION_RECEIVER[48577-48587]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[56596-56603]:SimpleName[42153-42160]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[56604-56614]:METHOD_INVOCATION_RECEIVER[48596-48606]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[56615-56623]:SimpleName[41434-41442]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[56641-56657]:SimpleName[41544-41560]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[56641-56663]:ExpressionStatement[45123-45145]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[56660-56662]:NumberLiteral[36443-36445]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[56676-56691]:SimpleName[38552-38567]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[56676-56697]:ExpressionStatement[45158-45179]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[56694-56696]:NumberLiteral[36408-36410]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[56710-56762]:IfStatement[45192-45244]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[56714-56723]:SimpleName[41979-41988]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[56725-56762]:ExpressionStatement[45207-45244]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[56725-56741]:SimpleName[48633-48649]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[56744-56750]:METHOD_INVOCATION_RECEIVER[39379-39385]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[56751-56759]:SimpleName[39386-39394]"
    }, {
      "left" : "for (int i = 0; i < sorted.length; i++)",
      "right" : "for (int i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[56775-57190]:ForStatement[45257-45619]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[56780-56783]:PrimitiveType[52431-52434]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[56784-56785]:SimpleName[52404-52405]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[56788-56789]:NumberLiteral[52437-52438]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[56791-56792]:SimpleName[52435-52436]"
    }, {
      "left" : "sorted.length",
      "right" : "_sorted.length",
      "info" : "QualifiedName[56795-56808]:QualifiedName[35772-35786]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[56810-56811]:SimpleName[52483-52484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56815-57190]:Block[45297-45619]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[56833-56840]:SimpleType[29356-29363]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[56833-56840]:SimpleName[45315-45316]"
    }, {
      "left" : "Integer value = sorted[i];",
      "right" : "T item = sorted[i];",
      "info" : "VariableDeclarationStatement[56833-56859]:VariableDeclarationStatement[45315-45334]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[56841-56846]:SimpleName[45317-45321]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[56849-56855]:SimpleName[47677-47683]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[56856-56857]:SimpleName[52509-52510]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[56876-56877]:SimpleType[41654-41655]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean contains = collection.contains(item);",
      "info" : "VariableDeclarationStatement[56876-56911]:VariableDeclarationStatement[45351-45396]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[56878-56882]:SimpleName[41731-41735]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[56885-56890]:METHOD_INVOCATION_RECEIVER[52597-52602]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[56891-56897]:SimpleName[52603-52609]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[56928-56935]:PrimitiveType[15683-15690]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[56936-56944]:SimpleName[45418-45426]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[56947-56957]:METHOD_INVOCATION_RECEIVER[50484-50494]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[56958-56966]:SimpleName[38303-38311]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[56967-56971]:SimpleName[41656-41660]"
    }, {
      "left" : "if (!contains)",
      "right" : "if (!contains)",
      "info" : "IfStatement[56990-57176]:IfStatement[45413-45605]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[56995-57003]:SimpleName[45359-45367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57005-57176]:Block[45428-45605]"
    }, {
      "left" : "System.err.println(name+\" sorted contains failed.\");",
      "right" : "System.err.println(name+\" sorted contains failed.\");",
      "info" : "ExpressionStatement[57027-57079]:ExpressionStatement[45450-45502]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[57027-57037]:METHOD_INVOCATION_RECEIVER[51714-51724]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[57038-57045]:SimpleName[51361-51368]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[57046-57050]:SimpleName[36490-36494]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[57100-57111]:SimpleName[43387-43398]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[57100-57124]:ExpressionStatement[45523-45553]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[57112-57122]:SimpleName[39619-39629]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[57145-57158]:ReturnStatement[8069-8082]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[57203-57487]:IfStatement[45632-45916]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[57207-57216]:SimpleName[41533-41542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57218-57487]:Block[45647-45916]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[57236-57272]:ExpressionStatement[45665-45701]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[57236-57251]:SimpleName[48668-48683]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[57254-57260]:METHOD_INVOCATION_RECEIVER[45226-45232]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[57261-57269]:SimpleName[45233-45241]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[57289-57338]:ExpressionStatement[45718-45767]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[57289-57299]:SimpleName[51188-51198]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[57303-57318]:SimpleName[41495-41510]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[57321-57337]:SimpleName[41460-41476]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[57355-57473]:IfStatement[45784-45902]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[57359-57364]:SimpleName[37791-37796]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[57367-57368]:NumberLiteral[52655-52656]"
    }, {
      "left" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[57370-57473]:ExpressionStatement[45799-45902]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[57370-57380]:METHOD_INVOCATION_RECEIVER[53219-53229]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[57381-57388]:SimpleName[45078-45085]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[57389-57393]:SimpleName[31901-31905]"
    }, {
      "left" : "\" sorted lookup time = \"",
      "right" : "\" sorted lookup time = \"",
      "info" : "StringLiteral[57394-57418]:StringLiteral[49333-49357]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[57422-57432]:SimpleName[38605-38615]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[57436-57449]:SimpleName[51202-51215]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[57450-57461]:SimpleName[51132-51143]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[57466-57471]:StringLiteral[42240-42245]"
    }, {
      "left" : "beforeRemoveSortedTime = 0L;",
      "right" : "beforeRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[57501-57529]:ExpressionStatement[45930-45958]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[57501-57523]:SimpleName[46587-46609]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[57526-57528]:NumberLiteral[52894-52896]"
    }, {
      "left" : "afterRemoveSortedTime = 0L;",
      "right" : "afterRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[57542-57569]:ExpressionStatement[45971-45998]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[57542-57563]:SimpleName[46563-46584]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[57566-57568]:NumberLiteral[52926-52928]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[57582-57640]:IfStatement[46011-46069]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[57586-57595]:SimpleName[53622-53631]"
    }, {
      "left" : "beforeRemoveSortedTime = System.nanoTime();",
      "right" : "beforeRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[57597-57640]:ExpressionStatement[46026-46069]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[57597-57619]:SimpleName[49440-49462]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[57622-57628]:METHOD_INVOCATION_RECEIVER[48736-48742]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[57629-57637]:SimpleName[48743-48751]"
    }, {
      "left" : "for (int i = 0; i < sorted.length; i++)",
      "right" : "for (int i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[57653-58062]:ForStatement[46082-46438]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[57658-57661]:PrimitiveType[52649-52652]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[57662-57663]:SimpleName[52727-52728]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[57666-57667]:NumberLiteral[52542-52543]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[57669-57670]:SimpleName[52620-52621]"
    }, {
      "left" : "sorted.length",
      "right" : "sorted.length",
      "info" : "QualifiedName[57673-57686]:QualifiedName[48787-48800]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[57688-57689]:SimpleName[52701-52702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57693-58062]:Block[46122-46438]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[57711-57718]:SimpleType[28910-28917]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[57711-57718]:SimpleName[46140-46141]"
    }, {
      "left" : "Integer value = sorted[i];",
      "right" : "T item = sorted[i];",
      "info" : "VariableDeclarationStatement[57711-57737]:VariableDeclarationStatement[46140-46159]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[57719-57724]:SimpleName[46142-46146]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[57734-57735]:SimpleName[52676-52677]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[57754-57755]:SimpleType[40515-40516]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean removed = collection.remove(item);",
      "info" : "VariableDeclarationStatement[57754-57789]:VariableDeclarationStatement[46176-46218]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[57756-57760]:SimpleName[40584-40588]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[57763-57768]:METHOD_INVOCATION_RECEIVER[52706-52711]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[57769-57775]:SimpleName[52712-52718]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57806-57813]:PrimitiveType[15049-15056]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[57814-57821]:SimpleName[42571-42578]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[57824-57834]:METHOD_INVOCATION_RECEIVER[50283-50293]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[57835-57841]:SimpleName[42536-42542]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[57842-57846]:SimpleName[40517-40521]"
    }, {
      "left" : "if (!removed)",
      "right" : "if (!removed)",
      "info" : "IfStatement[57865-58048]:IfStatement[46235-46424]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[57870-57877]:SimpleName[42515-42522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57879-58048]:Block[46249-46424]"
    }, {
      "left" : "System.err.println(name+\" sorted remove failed.\");",
      "right" : "System.err.println(name+\" sorted remove failed.\");",
      "info" : "ExpressionStatement[57901-57951]:ExpressionStatement[46271-46321]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[57901-57911]:METHOD_INVOCATION_RECEIVER[51882-51892]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[57912-57919]:SimpleName[53230-53237]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[57920-57924]:SimpleName[53238-53242]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[57972-57983]:SimpleName[43187-43198]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[57972-57996]:ExpressionStatement[46342-46372]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[57984-57994]:SimpleName[35599-35609]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[58017-58030]:ReturnStatement[7798-7811]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[58075-58373]:IfStatement[46451-46749]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[58079-58088]:SimpleName[53858-53867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58090-58373]:Block[46466-46749]"
    }, {
      "left" : "afterRemoveSortedTime = System.nanoTime();",
      "right" : "afterRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[58108-58150]:ExpressionStatement[46484-46526]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[58108-58129]:SimpleName[49481-49502]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[58132-58138]:METHOD_INVOCATION_RECEIVER[44069-44075]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[58139-58147]:SimpleName[44076-44084]"
    }, {
      "left" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "right" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "info" : "ExpressionStatement[58167-58234]:ExpressionStatement[46543-46610]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[58167-58183]:SimpleName[46694-46710]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[58187-58208]:SimpleName[46484-46505]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[58211-58233]:SimpleName[46026-46048]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[58251-58359]:IfStatement[46627-46735]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[58255-58260]:SimpleName[37508-37513]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[58263-58264]:NumberLiteral[52326-52327]"
    }, {
      "left" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[58266-58359]:ExpressionStatement[46642-46735]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[58266-58276]:METHOD_INVOCATION_RECEIVER[54009-54019]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[58277-58284]:SimpleName[41415-41422]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[58285-58289]:SimpleName[53359-53363]"
    }, {
      "left" : "\" sorted remove time = \"",
      "right" : "\" sorted remove time = \"",
      "info" : "StringLiteral[58290-58314]:StringLiteral[50181-50205]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[58318-58334]:SimpleName[50058-50074]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[58337-58348]:SimpleName[44703-44714]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[58352-58357]:StringLiteral[41053-41058]"
    }, {
      "left" : "if (!collection.isEmpty())",
      "right" : "if (!collection.isEmpty())",
      "info" : "IfStatement[58387-58570]:IfStatement[46763-46952]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[58392-58402]:METHOD_INVOCATION_RECEIVER[42525-42535]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[58403-58410]:SimpleName[43086-43093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58414-58570]:Block[46790-46952]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[58432-58442]:METHOD_INVOCATION_RECEIVER[43115-43125]"
    }, {
      "left" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[58432-58485]:ExpressionStatement[46808-46861]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[58443-58450]:SimpleName[54020-54027]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[58451-58455]:SimpleName[34142-34146]"
    }, {
      "left" : "\" sorted isEmpty() failed.\"",
      "right" : "\" sorted isEmpty() failed.\"",
      "info" : "StringLiteral[58456-58483]:StringLiteral[50347-50374]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[58502-58526]:ExpressionStatement[46878-46908]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[58502-58513]:SimpleName[50393-50404]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[58514-58524]:SimpleName[47094-47104]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[58543-58556]:ReturnStatement[46925-46938]"
    }, {
      "left" : "if (collection.size()!=0)",
      "right" : "if (collection.size()!=0)",
      "info" : "IfStatement[58583-58762]:IfStatement[46965-47150]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[58587-58597]:METHOD_INVOCATION_RECEIVER[41711-41721]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[58598-58602]:SimpleName[43289-43293]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[58606-58607]:NumberLiteral[53693-53694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58609-58762]:Block[46991-47150]"
    }, {
      "left" : "System.err.println(name+\" sorted size() failed.\");",
      "right" : "System.err.println(name+\" sorted size() failed.\");",
      "info" : "ExpressionStatement[58627-58677]:ExpressionStatement[47009-47059]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[58627-58637]:METHOD_INVOCATION_RECEIVER[54645-54655]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[58638-58645]:SimpleName[54303-54310]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[58646-58650]:SimpleName[33582-33586]"
    }, {
      "left" : "\" sorted size() failed.\"",
      "right" : "\" sorted size() failed.\"",
      "info" : "StringLiteral[58651-58675]:StringLiteral[50548-50572]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[58694-58718]:ExpressionStatement[47076-47106]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[58706-58716]:SimpleName[43405-43415]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[58735-58748]:ReturnStatement[47123-47136]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[58742-58747]:BooleanLiteral[54769-54774]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[58782-58793]:SimpleName[38768-38779]"
    }, {
      "left" : "sortedCount++;",
      "right" : "sortedCount++;",
      "info" : "ExpressionStatement[58782-58796]:ExpressionStatement[47170-47184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58805-62434]:Block[47193-50675]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[58937-58955]:ExpressionStatement[47325-47343]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[58937-58949]:SimpleName[53554-53566]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[58952-58954]:NumberLiteral[53521-53523]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[58968-58985]:ExpressionStatement[47356-47373]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[58968-58979]:SimpleName[53444-53455]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[58982-58984]:NumberLiteral[53490-53492]"
    }, {
      "left" : "beforeAddSortedTime = 0L;",
      "right" : "beforeAddSortedTime = 0L;",
      "info" : "ExpressionStatement[58998-59023]:ExpressionStatement[47386-47411]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[58998-59017]:SimpleName[47557-47576]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[59020-59022]:NumberLiteral[53458-53460]"
    }, {
      "left" : "afterAddSortedTime = 0L;",
      "right" : "afterAddSortedTime = 0L;",
      "info" : "ExpressionStatement[59036-59060]:ExpressionStatement[47424-47448]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[59036-59054]:SimpleName[48002-48020]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[59057-59059]:NumberLiteral[53428-53430]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[59073-59141]:IfStatement[47461-47529]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[59077-59088]:SimpleName[54125-54136]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[59090-59141]:ExpressionStatement[47478-47529]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[59090-59102]:SimpleName[53413-53425]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[59105-59125]:METHOD_INVOCATION_RECEIVER[53569-53589]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[59126-59138]:SimpleName[53590-53602]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[59154-59209]:IfStatement[47542-47597]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[59158-59167]:SimpleName[55091-55100]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[59169-59188]:SimpleName[43876-43895]"
    }, {
      "left" : "beforeAddSortedTime = System.nanoTime();",
      "right" : "beforeAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[59169-59209]:ExpressionStatement[47557-47597]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[59191-59197]:METHOD_INVOCATION_RECEIVER[53902-53908]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[59198-59206]:SimpleName[53909-53917]"
    }, {
      "left" : "for (int i = 0; i < sorted.length; i++)",
      "right" : "for (int i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[59222-59621]:ForStatement[47610-47956]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[59227-59230]:PrimitiveType[53685-53688]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[59231-59232]:SimpleName[53689-53690]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[59235-59236]:NumberLiteral[54289-54290]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[59238-59239]:SimpleName[53793-53794]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[59257-59258]:SimpleName[53757-53758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59262-59621]:Block[47650-47956]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[59280-59287]:SimpleType[28302-28309]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[59280-59287]:SimpleName[47668-47669]"
    }, {
      "left" : "Integer value = sorted[i];",
      "right" : "T item = sorted[i];",
      "info" : "VariableDeclarationStatement[59280-59306]:VariableDeclarationStatement[47668-47687]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[59288-59293]:SimpleName[47670-47674]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[59296-59302]:SimpleName[45324-45330]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[59303-59304]:SimpleName[53696-53697]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[59323-59324]:SimpleType[39013-39014]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean added = collection.add(item);",
      "info" : "VariableDeclarationStatement[59323-59358]:VariableDeclarationStatement[47704-47741]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[59325-59329]:SimpleName[39087-39091]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[59332-59337]:METHOD_INVOCATION_RECEIVER[54442-54447]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[59338-59344]:SimpleName[54448-54454]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[59375-59382]:PrimitiveType[14411-14418]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[59383-59388]:SimpleName[37156-37161]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[59391-59401]:METHOD_INVOCATION_RECEIVER[46969-46979]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[59402-59405]:SimpleName[37124-37127]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[59406-59410]:SimpleName[39015-39019]"
    }, {
      "left" : "if (!added)",
      "right" : "if (!added)",
      "info" : "IfStatement[59429-59607]:IfStatement[47758-47942]"
    }, {
      "left" : "added",
      "right" : "added",
      "info" : "SimpleName[59434-59439]:SimpleName[37105-37110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59441-59607]:Block[47770-47942]"
    }, {
      "left" : "System.err.println(name+\" sorted add failed.\");",
      "right" : "System.err.println(name+\" sorted add failed.\");",
      "info" : "ExpressionStatement[59463-59510]:ExpressionStatement[47792-47839]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[59463-59473]:METHOD_INVOCATION_RECEIVER[55631-55641]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[59474-59481]:SimpleName[54656-54663]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[59482-59486]:SimpleName[54311-54315]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[59531-59542]:SimpleName[39931-39942]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[59531-59555]:ExpressionStatement[47860-47890]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[59543-59553]:SimpleName[35420-35430]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[59576-59589]:ReturnStatement[47911-47924]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[59583-59588]:BooleanLiteral[55733-55738]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[59634-59914]:IfStatement[47969-48249]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[59638-59647]:SimpleName[54940-54949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59649-59914]:Block[47984-48249]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[59667-59685]:SimpleName[43914-43932]"
    }, {
      "left" : "afterAddSortedTime = System.nanoTime();",
      "right" : "afterAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[59667-59706]:ExpressionStatement[48002-48041]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[59688-59694]:METHOD_INVOCATION_RECEIVER[53649-53655]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[59695-59703]:SimpleName[53656-53664]"
    }, {
      "left" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "right" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "info" : "ExpressionStatement[59723-59781]:ExpressionStatement[48058-48116]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[59740-59758]:SimpleName[43595-43613]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[59761-59780]:SimpleName[43556-43575]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[59798-59900]:IfStatement[48133-48235]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[59802-59807]:SimpleName[54281-54286]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[59810-59811]:NumberLiteral[54006-54007]"
    }, {
      "left" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[59813-59900]:ExpressionStatement[48148-48235]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[59813-59823]:METHOD_INVOCATION_RECEIVER[54292-54302]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[59824-59831]:SimpleName[54829-54836]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[59832-59836]:SimpleName[54028-54032]"
    }, {
      "left" : "\" sorted add time = \"",
      "right" : "\" sorted add time = \"",
      "info" : "StringLiteral[59837-59858]:StringLiteral[44662-44683]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[59862-59875]:SimpleName[44548-44561]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[59878-59889]:SimpleName[54369-54380]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[59893-59898]:StringLiteral[54087-54092]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[59927-60213]:IfStatement[48262-48548]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[59931-59942]:SimpleName[56637-56648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59944-60213]:Block[48279-48548]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[59962-60012]:ExpressionStatement[48297-48347]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[59962-59973]:SimpleName[54233-54244]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[59976-59996]:METHOD_INVOCATION_RECEIVER[54170-54190]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[59997-60009]:SimpleName[54191-54203]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[60029-60066]:ExpressionStatement[48364-48401]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[60029-60035]:SimpleName[54223-54229]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[60039-60050]:SimpleName[54156-54167]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[60053-60065]:SimpleName[54247-54259]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[60083-60199]:IfStatement[48418-48534]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[60087-60092]:SimpleName[53998-54003]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[60095-60096]:NumberLiteral[52803-52804]"
    }, {
      "left" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[60098-60199]:ExpressionStatement[48433-48534]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[60098-60108]:METHOD_INVOCATION_RECEIVER[54818-54828]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[60109-60116]:SimpleName[55265-55272]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[60117-60121]:SimpleName[54664-54668]"
    }, {
      "left" : "\" sorted memory use = \"",
      "right" : "\" sorted memory use = \"",
      "info" : "StringLiteral[60122-60145]:StringLiteral[44947-44970]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[60149-60155]:SimpleName[54345-54351]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[60159-60172]:SimpleName[54355-54368]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[60173-60184]:SimpleName[51057-51068]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[60189-60197]:StringLiteral[54385-54393]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[60227-60284]:IfStatement[48562-48619]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[60231-60236]:SimpleName[54807-54812]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[60239-60240]:NumberLiteral[49621-49622]"
    }, {
      "left" : "System.out.println(collection.toString());",
      "right" : "System.out.println(collection.toString());",
      "info" : "ExpressionStatement[60242-60284]:ExpressionStatement[48577-48619]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[60242-60252]:METHOD_INVOCATION_RECEIVER[55254-55264]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[60253-60260]:SimpleName[55642-55649]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[60261-60271]:SimpleName[43205-43215]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[60272-60280]:SimpleName[54841-54849]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[60298-60320]:ExpressionStatement[48633-48655]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[60298-60314]:SimpleName[55205-55221]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[60317-60319]:NumberLiteral[54920-54922]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[60333-60354]:ExpressionStatement[48668-48689]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[60333-60348]:SimpleName[55187-55202]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[60351-60353]:NumberLiteral[54886-54888]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[60367-60419]:IfStatement[48702-48754]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[60371-60380]:SimpleName[55391-55400]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[60382-60419]:ExpressionStatement[48717-48754]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[60382-60398]:SimpleName[54951-54967]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[60401-60407]:METHOD_INVOCATION_RECEIVER[55138-55144]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[60408-60416]:SimpleName[55145-55153]"
    }, {
      "left" : "for (int i = 0; i < sorted.length; i++)",
      "right" : "for (int i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[60432-60847]:ForStatement[48767-49129]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[60437-60440]:PrimitiveType[52536-52539]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[60441-60442]:SimpleName[53718-53719]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[60445-60446]:NumberLiteral[55251-55252]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[60448-60449]:SimpleName[52592-52593]"
    }, {
      "left" : "sorted.length",
      "right" : "sorted.length",
      "info" : "QualifiedName[60452-60465]:QualifiedName[46102-46115]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[60467-60468]:SimpleName[55461-55462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60472-60847]:Block[48807-49129]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[60490-60497]:SimpleType[28180-28187]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[60490-60497]:SimpleName[48825-48826]"
    }, {
      "left" : "Integer value = sorted[i];",
      "right" : "T item = sorted[i];",
      "info" : "VariableDeclarationStatement[60490-60516]:VariableDeclarationStatement[48825-48844]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[60498-60503]:SimpleName[48827-48831]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[60506-60512]:SimpleName[44167-44173]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[60513-60514]:SimpleName[55490-55491]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[60533-60534]:SimpleType[38198-38199]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean contains = collection.contains(item);",
      "info" : "VariableDeclarationStatement[60533-60568]:VariableDeclarationStatement[48861-48906]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[60535-60539]:SimpleName[38275-38279]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[60585-60592]:PrimitiveType[54486-54493]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[60593-60601]:SimpleName[54711-54719]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[60604-60614]:METHOD_INVOCATION_RECEIVER[46768-46778]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[60615-60623]:SimpleName[38244-38252]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[60624-60628]:SimpleName[38200-38204]"
    }, {
      "left" : "if (!contains)",
      "right" : "if (!contains)",
      "info" : "IfStatement[60647-60833]:IfStatement[48923-49115]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[60652-60660]:SimpleName[41759-41767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60662-60833]:Block[48938-49115]"
    }, {
      "left" : "System.err.println(name+\" sorted contains failed.\");",
      "right" : "System.err.println(name+\" sorted contains failed.\");",
      "info" : "ExpressionStatement[60684-60736]:ExpressionStatement[48960-49012]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[60684-60694]:METHOD_INVOCATION_RECEIVER[56125-56135]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[60695-60702]:SimpleName[55979-55986]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[60703-60707]:SimpleName[55650-55654]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[60757-60768]:SimpleName[39731-39742]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[60757-60781]:ExpressionStatement[49033-49063]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[60769-60779]:SimpleName[35481-35491]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[60802-60815]:ReturnStatement[56237-56250]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[60860-61144]:IfStatement[49142-49426]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[60864-60873]:SimpleName[55805-55814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60875-61144]:Block[49157-49426]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[60893-60929]:ExpressionStatement[49175-49211]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[60893-60908]:SimpleName[55120-55135]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[60911-60917]:METHOD_INVOCATION_RECEIVER[55852-55858]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[60918-60926]:SimpleName[55859-55867]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[60946-60995]:ExpressionStatement[49228-49277]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[60946-60956]:SimpleName[55173-55183]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[60960-60975]:SimpleName[54902-54917]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[60978-60994]:SimpleName[54867-54883]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[61012-61130]:IfStatement[49294-49412]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[61016-61021]:SimpleName[55957-55962]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[61024-61025]:NumberLiteral[55965-55966]"
    }, {
      "left" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[61027-61130]:ExpressionStatement[49309-49412]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[61027-61037]:METHOD_INVOCATION_RECEIVER[55968-55978]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[61038-61045]:SimpleName[56136-56143]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[61046-61050]:SimpleName[55987-55991]"
    }, {
      "left" : "\" sorted lookup time = \"",
      "right" : "\" sorted lookup time = \"",
      "info" : "StringLiteral[61051-61075]:StringLiteral[45823-45847]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[61079-61089]:SimpleName[55308-55318]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[61093-61106]:SimpleName[55322-55335]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[61107-61118]:SimpleName[55336-55347]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[61123-61128]:StringLiteral[56052-56057]"
    }, {
      "left" : "beforeRemoveSortedTime = 0L;",
      "right" : "beforeRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[61158-61186]:ExpressionStatement[49440-49468]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[61158-61180]:SimpleName[49536-49558]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[61183-61185]:NumberLiteral[53191-53193]"
    }, {
      "left" : "afterRemoveSortedTime = 0L;",
      "right" : "afterRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[61199-61226]:ExpressionStatement[49481-49508]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[61199-61220]:SimpleName[49999-50020]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[61223-61225]:NumberLiteral[53156-53158]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[61239-61297]:IfStatement[49521-49579]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[61243-61252]:SimpleName[56718-56727]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[61254-61276]:SimpleName[45930-45952]"
    }, {
      "left" : "beforeRemoveSortedTime = System.nanoTime();",
      "right" : "beforeRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[61254-61297]:ExpressionStatement[49536-49579]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[61279-61285]:METHOD_INVOCATION_RECEIVER[55421-55427]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[61286-61294]:SimpleName[55428-55436]"
    }, {
      "left" : "for (int i = sorted.length - 1; i >= 0; i--)",
      "right" : "for (int i = sorted.length - 1; i >= 0; i--)",
      "info" : "ForStatement[61310-61724]:ForStatement[49592-49953]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[61315-61318]:PrimitiveType[55457-55460]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[61319-61320]:SimpleName[55529-55530]"
    }, {
      "left" : "sorted.length",
      "right" : "sorted.length",
      "info" : "QualifiedName[61323-61336]:QualifiedName[44120-44133]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[61339-61340]:NumberLiteral[54815-54816]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[61342-61343]:SimpleName[55468-55469]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[61347-61348]:NumberLiteral[56293-56294]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[61350-61351]:SimpleName[52653-52654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61355-61724]:Block[49637-49953]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[61373-61380]:SimpleType[27598-27605]"
    }, {
      "left" : "Integer",
      "right" : "T",
      "info" : "SimpleName[61373-61380]:SimpleName[49655-49656]"
    }, {
      "left" : "Integer value = sorted[i];",
      "right" : "T item = sorted[i];",
      "info" : "VariableDeclarationStatement[61373-61399]:VariableDeclarationStatement[49655-49674]"
    }, {
      "left" : "value",
      "right" : "item",
      "info" : "SimpleName[61381-61386]:SimpleName[49657-49661]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[61389-61395]:SimpleName[35951-35957]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[61396-61397]:SimpleName[52658-52659]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[61416-61417]:SimpleType[37059-37060]"
    }, {
      "left" : "T item = Utils.parseT(value, type);",
      "right" : "boolean removed = collection.remove(item);",
      "info" : "VariableDeclarationStatement[61416-61451]:VariableDeclarationStatement[49691-49733]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[61418-61422]:SimpleName[37128-37132]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[61425-61430]:METHOD_INVOCATION_RECEIVER[57543-57548]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[61431-61437]:SimpleName[57549-57555]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61468-61475]:PrimitiveType[51483-51490]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[61476-61483]:SimpleName[55696-55703]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[61486-61496]:METHOD_INVOCATION_RECEIVER[43278-43288]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[61497-61503]:SimpleName[55563-55569]"
    }, {
      "left" : "item",
      "right" : "item",
      "info" : "SimpleName[61504-61508]:SimpleName[37061-37065]"
    }, {
      "left" : "if (!removed)",
      "right" : "if (!removed)",
      "info" : "IfStatement[61527-61710]:IfStatement[49750-49939]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[61532-61539]:SimpleName[54736-54743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61541-61710]:Block[49764-49939]"
    }, {
      "left" : "System.err.println(name+\" sorted remove failed.\");",
      "right" : "System.err.println(name+\" sorted remove failed.\");",
      "info" : "ExpressionStatement[61563-61613]:ExpressionStatement[49786-49836]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[61563-61573]:METHOD_INVOCATION_RECEIVER[56314-56324]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[61574-61581]:SimpleName[56325-56332]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[61582-61586]:SimpleName[56333-56337]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[61634-61658]:ExpressionStatement[49857-49887]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[61634-61645]:SimpleName[51946-51957]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[61646-61656]:SimpleName[35299-35309]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[61679-61692]:ReturnStatement[49908-49921]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[61686-61691]:BooleanLiteral[56430-56435]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[61737-62035]:IfStatement[49966-50264]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[61741-61750]:SimpleName[56959-56968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61752-62035]:Block[49981-50264]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[61770-61791]:SimpleName[45971-45992]"
    }, {
      "left" : "afterRemoveSortedTime = System.nanoTime();",
      "right" : "afterRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[61770-61812]:ExpressionStatement[49999-50041]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[61794-61800]:METHOD_INVOCATION_RECEIVER[56745-56751]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[61801-61809]:SimpleName[56752-56760]"
    }, {
      "left" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "right" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "info" : "ExpressionStatement[61829-61896]:ExpressionStatement[50058-50125]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[61829-61845]:SimpleName[51113-51129]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[61849-61870]:SimpleName[43676-43697]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[61873-61895]:SimpleName[43634-43656]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[61913-62021]:IfStatement[50142-50250]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[61917-61922]:SimpleName[55243-55248]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[61925-61926]:NumberLiteral[56816-56817]"
    }, {
      "left" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[61928-62021]:ExpressionStatement[50157-50250]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[61928-61938]:METHOD_INVOCATION_RECEIVER[57110-57120]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[61939-61946]:SimpleName[57757-57764]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[61947-61951]:SimpleName[55273-55277]"
    }, {
      "left" : "\" sorted remove time = \"",
      "right" : "\" sorted remove time = \"",
      "info" : "StringLiteral[61952-61976]:StringLiteral[46666-46690]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[61980-61996]:SimpleName[46543-46559]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[61999-62010]:SimpleName[51301-51312]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[62014-62019]:StringLiteral[55352-55357]"
    }, {
      "left" : "if (!collection.isEmpty())",
      "right" : "if (!collection.isEmpty())",
      "info" : "IfStatement[62049-62232]:IfStatement[50278-50467]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[62054-62064]:METHOD_INVOCATION_RECEIVER[40569-40579]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[62065-62072]:SimpleName[56096-56103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62076-62232]:Block[50305-50467]"
    }, {
      "left" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[62094-62147]:ExpressionStatement[50323-50376]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[62094-62104]:METHOD_INVOCATION_RECEIVER[59283-59293]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[62105-62112]:SimpleName[57121-57128]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[62113-62117]:SimpleName[56144-56148]"
    }, {
      "left" : "\" sorted isEmpty() failed.\"",
      "right" : "\" sorted isEmpty() failed.\"",
      "info" : "StringLiteral[62118-62145]:StringLiteral[46832-46859]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[62164-62188]:ExpressionStatement[50393-50423]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[62164-62175]:SimpleName[56383-56394]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[62176-62186]:SimpleName[41423-41433]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62205-62218]:ReturnStatement[50440-50453]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[62212-62217]:BooleanLiteral[59402-59407]"
    }, {
      "left" : "if (collection.size()!=0)",
      "right" : "if (collection.size()!=0)",
      "info" : "IfStatement[62245-62424]:IfStatement[50480-50665]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "METHOD_INVOCATION_RECEIVER[62249-62259]:METHOD_INVOCATION_RECEIVER[39069-39079]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[62260-62264]:SimpleName[56285-56289]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[62268-62269]:NumberLiteral[57107-57108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62271-62424]:Block[50506-50665]"
    }, {
      "left" : "System.err.println(name+\" sorted size() failed.\");",
      "right" : "System.err.println(name+\" sorted size() failed.\");",
      "info" : "ExpressionStatement[62289-62339]:ExpressionStatement[50524-50574]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[62289-62299]:METHOD_INVOCATION_RECEIVER[57746-57756]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[62300-62307]:SimpleName[57404-57411]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[62308-62312]:SimpleName[57129-57133]"
    }, {
      "left" : "\" sorted size() failed.\"",
      "right" : "\" sorted size() failed.\"",
      "info" : "StringLiteral[62313-62337]:StringLiteral[47033-47057]"
    }, {
      "left" : "handleError(collection);",
      "right" : "handleError(input,collection);",
      "info" : "ExpressionStatement[62356-62380]:ExpressionStatement[50591-50621]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[62356-62367]:SimpleName[56197-56208]"
    }, {
      "left" : "collection",
      "right" : "collection",
      "info" : "SimpleName[62368-62378]:SimpleName[39949-39959]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62397-62410]:ReturnStatement[50638-50651]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[62404-62409]:BooleanLiteral[57870-57875]"
    }, {
      "left" : "if (!firstTimeThru)",
      "right" : "if (!firstTimeThru)",
      "info" : "IfStatement[62494-63084]:IfStatement[50735-51325]"
    }, {
      "left" : "firstTimeThru",
      "right" : "firstTimeThru",
      "info" : "SimpleName[62499-62512]:SimpleName[53309-53322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62514-63084]:Block[50755-51325]"
    }, {
      "left" : "if (testResults[testIndex] == null)",
      "right" : "if (testResults[testIndex] == null)",
      "info" : "IfStatement[62528-62618]:IfStatement[50769-50859]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[62532-62543]:SimpleName[51245-51256]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[62544-62553]:SimpleName[51257-51266]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[62558-62562]:NullLiteral[55603-55607]"
    }, {
      "left" : "testResults[testIndex] = new long[6];",
      "right" : "testResults[testIndex] = new long[6];",
      "info" : "ExpressionStatement[62581-62618]:ExpressionStatement[50822-50859]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[62581-62592]:SimpleName[51158-51169]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[62593-62602]:SimpleName[51170-51179]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[62610-62614]:PrimitiveType[53168-53172]"
    }, {
      "left" : "[6]",
      "right" : "[]",
      "info" : "Dimension[62614-62617]:Dimension[52257-52259]"
    }, {
      "left" : "testResults[testIndex][0] += (addTime / unsortedCount);",
      "right" : "testResults[testIndex][0] += (addTime / unsortedCount);",
      "info" : "ExpressionStatement[62631-62686]:ExpressionStatement[50872-50927]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[62631-62642]:SimpleName[51083-51094]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[62643-62652]:SimpleName[51095-51104]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[62654-62655]:NumberLiteral[57390-57391]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[62661-62668]:SimpleName[54060-54067]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[62671-62684]:SimpleName[57171-57184]"
    }, {
      "left" : "testResults[testIndex][1] += (removeTime / unsortedCount);",
      "right" : "testResults[testIndex][1] += (removeTime / unsortedCount);",
      "info" : "ExpressionStatement[62699-62757]:ExpressionStatement[50940-50998]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[62699-62710]:SimpleName[51011-51022]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[62711-62720]:SimpleName[51023-51032]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[62722-62723]:NumberLiteral[56808-56809]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[62729-62739]:SimpleName[56022-56032]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[62742-62755]:SimpleName[57456-57469]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[62770-62781]:SimpleName[50940-50951]"
    }, {
      "left" : "testResults[testIndex][2] += (addSortedTime / sortedCount);",
      "right" : "testResults[testIndex][2] += (addSortedTime / sortedCount);",
      "info" : "ExpressionStatement[62770-62829]:ExpressionStatement[51011-51070]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[62782-62791]:SimpleName[50952-50961]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[62800-62813]:SimpleName[43486-43499]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[62816-62827]:SimpleName[57470-57481]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[62842-62853]:SimpleName[50872-50883]"
    }, {
      "left" : "testResults[testIndex][3] += (removeSortedTime / sortedCount);",
      "right" : "testResults[testIndex][3] += (removeSortedTime / sortedCount);",
      "info" : "ExpressionStatement[62842-62904]:ExpressionStatement[51083-51145]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[62854-62863]:SimpleName[50884-50893]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[62872-62888]:SimpleName[43519-43535]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[62891-62902]:SimpleName[37879-37890]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[62917-62928]:SimpleName[50822-50833]"
    }, {
      "left" : "testResults[testIndex][4] += (lookupTime / (unsortedCount + sortedCount));",
      "right" : "testResults[testIndex][4] += (lookupTime / (unsortedCount + sortedCount));",
      "info" : "ExpressionStatement[62917-62991]:ExpressionStatement[51158-51232]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[62929-62938]:SimpleName[50834-50843]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[62947-62957]:SimpleName[45718-45728]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[62961-62974]:SimpleName[56035-56048]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[62977-62988]:SimpleName[50228-50239]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[63004-63015]:SimpleName[50773-50784]"
    }, {
      "left" : "testResults[testIndex][5] += (memory / (unsortedCount + sortedCount));",
      "right" : "testResults[testIndex][5] += (memory / (unsortedCount + sortedCount));",
      "info" : "ExpressionStatement[63004-63074]:ExpressionStatement[51245-51315]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[63016-63025]:SimpleName[53346-53355]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[63034-63040]:SimpleName[57324-57330]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[63044-63057]:SimpleName[54070-54083]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[63060-63071]:SimpleName[48213-48224]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[63094-63130]:IfStatement[51335-51371]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[63098-63103]:SimpleName[57382-57387]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[63106-63107]:NumberLiteral[57916-57917]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[63109-63130]:ExpressionStatement[51350-51371]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[63109-63119]:METHOD_INVOCATION_RECEIVER[57393-57403]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[63120-63127]:SimpleName[57930-57937]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63140-63152]:ReturnStatement[51381-51393]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[63164-63194]:SingleMemberAnnotation[51405-51435]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[63199-63206]:Modifier[51440-51447]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[63207-63213]:Modifier[51448-51454]"
    }, {
      "left" : "K extends Comparable<K>",
      "right" : "K extends Comparable<K>",
      "info" : "TypeParameter[63215-63238]:TypeParameter[51456-51479]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[63239-63240]:TypeParameter[51480-51481]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63242-63249]:PrimitiveType[57587-57594]"
    }, {
      "left" : "testJavaMap",
      "right" : "testJavaMap",
      "info" : "SimpleName[63250-63261]:SimpleName[51491-51502]"
    }, {
      "left" : "java.util.Map<K,V> map",
      "right" : "java.util.Map<K,V> map",
      "info" : "SingleVariableDeclaration[63262-63284]:SingleVariableDeclaration[51503-51525]"
    }, {
      "left" : "Class<K> keyType",
      "right" : "Class<K> keyType",
      "info" : "SingleVariableDeclaration[63286-63302]:SingleVariableDeclaration[51527-51543]"
    }, {
      "left" : "String name",
      "right" : "String input",
      "info" : "SingleVariableDeclaration[63304-63315]:SingleVariableDeclaration[51618-51630]"
    }, {
      "left" : "name",
      "right" : "input",
      "info" : "SimpleName[63311-63315]:SimpleName[51625-51630]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[63311-63315]:SimpleName[58374-58378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63317-80064]:Block[51632-67024]"
    }, {
      "left" : "if (!map.isEmpty())",
      "right" : "if (!map.isEmpty())",
      "info" : "IfStatement[63365-63519]:IfStatement[51680-51840]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[63370-63373]:METHOD_INVOCATION_RECEIVER[55559-55562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63385-63519]:Block[51700-51840]"
    }, {
      "left" : "System.err.println(name+\" initial isEmpty() failed.\");",
      "right" : "System.err.println(name+\" initial isEmpty() failed.\");",
      "info" : "ExpressionStatement[63399-63453]:ExpressionStatement[51714-51768]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[63399-63409]:METHOD_INVOCATION_RECEIVER[58806-58816]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[63410-63417]:SimpleName[58366-58373]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[63418-63422]:SimpleName[57412-57416]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[63466-63477]:SimpleName[37255-37266]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[63466-63483]:ExpressionStatement[51781-51804]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[63478-63481]:SimpleName[57938-57941]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63496-63509]:ReturnStatement[58901-58914]"
    }, {
      "left" : "if (map.size()!=0)",
      "right" : "if (map.size()!=0)",
      "info" : "IfStatement[63528-63678]:IfStatement[51849-52005]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[63532-63535]:METHOD_INVOCATION_RECEIVER[58142-58145]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[63544-63545]:NumberLiteral[58352-58353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63547-63678]:Block[51868-52005]"
    }, {
      "left" : "System.err.println(name+\" initial size() failed.\");",
      "right" : "System.err.println(name+\" initial size() failed.\");",
      "info" : "ExpressionStatement[63561-63612]:ExpressionStatement[51882-51933]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[63561-63571]:METHOD_INVOCATION_RECEIVER[59472-59482]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[63572-63579]:SimpleName[58817-58824]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[63580-63584]:SimpleName[57765-57769]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[63625-63636]:SimpleName[51781-51792]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[63625-63642]:ExpressionStatement[51946-51969]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[63637-63640]:SimpleName[56914-56917]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63655-63668]:ReturnStatement[51982-51995]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[63662-63667]:BooleanLiteral[59588-59593]"
    }, {
      "left" : "long sortedCount = 0;",
      "right" : "K[] kUnsorted = (K[]) Array.newInstance(keyType, _unsorted.length);",
      "info" : "VariableDeclarationStatement[63688-63709]:VariableDeclarationStatement[52015-52082]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63688-63692]:PrimitiveType[53132-53136]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[63693-63704]:SimpleName[58437-58448]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[63707-63708]:NumberLiteral[55465-55466]"
    }, {
      "left" : "long unsortedCount = 0;",
      "right" : "K[] kSorted = (K[]) Array.newInstance(keyType, _sorted.length);",
      "info" : "VariableDeclarationStatement[63718-63741]:VariableDeclarationStatement[52091-52154]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63718-63722]:PrimitiveType[53101-53105]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[63723-63736]:SimpleName[58423-58436]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[63739-63740]:NumberLiteral[58662-58663]"
    }, {
      "left" : "long addTime = 0L;",
      "right" : "V[] vUnsorted = (V[]) Array.newInstance(valueType, _unsorted.length);",
      "info" : "VariableDeclarationStatement[63751-63769]:VariableDeclarationStatement[52163-52232]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63751-63755]:PrimitiveType[53069-53073]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[63756-63763]:SimpleName[50902-50909]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63766-63768]:NumberLiteral[57987-57989]"
    }, {
      "left" : "long removeTime = 0L;",
      "right" : "V[] vSorted = (V[]) Array.newInstance(valueType, _sorted.length);",
      "info" : "VariableDeclarationStatement[63778-63799]:VariableDeclarationStatement[52241-52306]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63778-63782]:PrimitiveType[53037-53041]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[63783-63793]:SimpleName[55887-55897]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63796-63798]:NumberLiteral[58021-58023]"
    }, {
      "left" : "long beforeAddTime = 0L;",
      "right" : "long sortedCount = 0;",
      "info" : "VariableDeclarationStatement[63809-63833]:VariableDeclarationStatement[52752-52773]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63809-63813]:PrimitiveType[53010-53014]"
    }, {
      "left" : "beforeAddTime",
      "right" : "sortedCount",
      "info" : "SimpleName[63814-63827]:SimpleName[52757-52768]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[63814-63827]:SimpleName[53963-53976]"
    }, {
      "left" : "0L",
      "right" : "0",
      "info" : "NumberLiteral[63830-63832]:NumberLiteral[52771-52772]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63830-63832]:NumberLiteral[58507-58509]"
    }, {
      "left" : "long afterAddTime = 0L;",
      "right" : "long unsortedCount = 0;",
      "info" : "VariableDeclarationStatement[63842-63865]:VariableDeclarationStatement[52782-52805]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63842-63846]:PrimitiveType[52974-52978]"
    }, {
      "left" : "afterAddTime",
      "right" : "unsortedCount",
      "info" : "SimpleName[63847-63859]:SimpleName[52787-52800]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[63847-63859]:SimpleName[53948-53960]"
    }, {
      "left" : "0L",
      "right" : "0",
      "info" : "NumberLiteral[63862-63864]:NumberLiteral[52803-52804]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63862-63864]:NumberLiteral[58541-58543]"
    }, {
      "left" : "long beforeRemoveTime = 0L;",
      "right" : "long addTime = 0L;",
      "info" : "VariableDeclarationStatement[63874-63901]:VariableDeclarationStatement[52815-52833]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63874-63878]:PrimitiveType[52938-52942]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "addTime",
      "info" : "SimpleName[63879-63895]:SimpleName[52820-52827]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[63879-63895]:SimpleName[55919-55935]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63898-63900]:NumberLiteral[56617-56619]"
    }, {
      "left" : "long afterRemoveTime = 0L;",
      "right" : "long removeTime = 0L;",
      "info" : "VariableDeclarationStatement[63910-63936]:VariableDeclarationStatement[52842-52863]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63910-63914]:PrimitiveType[52906-52910]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "removeTime",
      "info" : "SimpleName[63915-63930]:SimpleName[52847-52857]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[63915-63930]:SimpleName[55901-55916]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63933-63935]:NumberLiteral[56586-56588]"
    }, {
      "left" : "long memory = 0L;",
      "right" : "long beforeAddTime = 0L;",
      "info" : "VariableDeclarationStatement[63946-63963]:VariableDeclarationStatement[52873-52897]"
    }, {
      "left" : "memory",
      "right" : "beforeAddTime",
      "info" : "SimpleName[63951-63957]:SimpleName[52878-52891]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[63951-63957]:SimpleName[57446-57452]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63960-63962]:NumberLiteral[56554-56556]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[63973-63977]:PrimitiveType[52842-52846]"
    }, {
      "left" : "long beforeMemory = 0L;",
      "right" : "long afterAddTime = 0L;",
      "info" : "VariableDeclarationStatement[63973-63996]:VariableDeclarationStatement[52906-52929]"
    }, {
      "left" : "beforeMemory",
      "right" : "afterAddTime",
      "info" : "SimpleName[63978-63990]:SimpleName[52911-52923]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[63978-63990]:SimpleName[57348-57360]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[63993-63995]:NumberLiteral[56524-56526]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[64005-64009]:PrimitiveType[52815-52819]"
    }, {
      "left" : "long afterMemory = 0L;",
      "right" : "long beforeRemoveTime = 0L;",
      "info" : "VariableDeclarationStatement[64005-64027]:VariableDeclarationStatement[52938-52965]"
    }, {
      "left" : "afterMemory",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[64010-64021]:SimpleName[52943-52959]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[64010-64021]:SimpleName[57334-57345]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[64024-64026]:NumberLiteral[53119-53121]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[64037-64041]:PrimitiveType[52782-52786]"
    }, {
      "left" : "long lookupTime = 0L;",
      "right" : "long memory = 0L;",
      "info" : "VariableDeclarationStatement[64037-64058]:VariableDeclarationStatement[53010-53027]"
    }, {
      "left" : "lookupTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[64042-64052]:SimpleName[52979-52994]"
    }, {
      "left" : "lookupTime = 0L",
      "right" : "afterRemoveTime = 0L",
      "info" : "VariableDeclarationFragment[64042-64057]:VariableDeclarationFragment[52979-52999]"
    }, {
      "left" : "lookupTime",
      "right" : "memory",
      "info" : "SimpleName[64042-64052]:SimpleName[53015-53021]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[64042-64052]:SimpleName[58409-58419]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[64055-64057]:NumberLiteral[53088-53090]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[64068-64072]:PrimitiveType[52752-52756]"
    }, {
      "left" : "long beforeLookupTime = 0L;",
      "right" : "long beforeMemory = 0L;",
      "info" : "VariableDeclarationStatement[64068-64095]:VariableDeclarationStatement[53037-53060]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeMemory",
      "info" : "SimpleName[64073-64089]:SimpleName[53042-53054]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[64073-64089]:SimpleName[58306-58322]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[64104-64108]:PrimitiveType[36004-36008]"
    }, {
      "left" : "long afterLookupTime = 0L;",
      "right" : "long afterLookupTime = 0L;",
      "info" : "VariableDeclarationStatement[64104-64130]:VariableDeclarationStatement[53168-53194]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterMemory",
      "info" : "SimpleName[64109-64124]:SimpleName[53074-53085]"
    }, {
      "left" : "afterLookupTime = 0L",
      "right" : "afterMemory = 0L",
      "info" : "VariableDeclarationFragment[64109-64129]:VariableDeclarationFragment[53074-53090]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[64109-64124]:SimpleName[58288-58303]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[64127-64129]:NumberLiteral[53024-53026]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[64140-64180]:IfStatement[53204-53244]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[64144-64149]:SimpleName[59115-59120]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[64152-64153]:NumberLiteral[58654-58655]"
    }, {
      "left" : "System.out.println(name);",
      "right" : "System.out.println(name);",
      "info" : "ExpressionStatement[64155-64180]:ExpressionStatement[53219-53244]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[64155-64165]:METHOD_INVOCATION_RECEIVER[59126-59136]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[64166-64173]:SimpleName[59137-59144]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[64174-64178]:SimpleName[58825-58829]"
    }, {
      "left" : "if (!firstTimeThru)",
      "right" : "if (!firstTimeThru)",
      "info" : "IfStatement[64240-64300]:IfStatement[53304-53364]"
    }, {
      "left" : "firstTimeThru",
      "right" : "firstTimeThru",
      "info" : "SimpleName[64245-64258]:SimpleName[66365-66378]"
    }, {
      "left" : "testNames[testIndex] = name;",
      "right" : "testNames[testIndex] = name;",
      "info" : "ExpressionStatement[64272-64300]:ExpressionStatement[53336-53364]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[64282-64291]:SimpleName[66410-66419]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[64295-64299]:SimpleName[59145-59149]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[64310-64323]:SimpleName[37865-37878]"
    }, {
      "left" : "unsortedCount++;",
      "right" : "unsortedCount++;",
      "info" : "ExpressionStatement[64310-64326]:ExpressionStatement[53374-53390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64335-67921]:Block[53399-56460]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[64349-64367]:ExpressionStatement[53413-53431]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[64349-64361]:SimpleName[56650-56662]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[64364-64366]:NumberLiteral[52997-52999]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[64380-64397]:ExpressionStatement[53444-53461]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[64380-64391]:SimpleName[57257-57268]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[64394-64396]:NumberLiteral[52962-52964]"
    }, {
      "left" : "beforeAddTime = 0L;",
      "right" : "beforeAddTime = 0L;",
      "info" : "ExpressionStatement[64410-64429]:ExpressionStatement[53474-53493]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[64410-64423]:SimpleName[56729-56742]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[64426-64428]:NumberLiteral[52860-52862]"
    }, {
      "left" : "afterAddTime = 0L;",
      "right" : "afterAddTime = 0L;",
      "info" : "ExpressionStatement[64442-64460]:ExpressionStatement[53506-53524]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[64442-64454]:SimpleName[56988-57000]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[64457-64459]:NumberLiteral[59649-59651]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[64473-64541]:IfStatement[53537-53605]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[64477-64488]:SimpleName[57226-57237]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[64490-64541]:ExpressionStatement[53554-53605]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[64490-64502]:SimpleName[56509-56521]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[64505-64525]:METHOD_INVOCATION_RECEIVER[57271-57291]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[64526-64538]:SimpleName[57292-57304]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[64554-64603]:IfStatement[53618-53667]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[64558-64567]:SimpleName[58963-58972]"
    }, {
      "left" : "beforeAddTime = System.nanoTime();",
      "right" : "beforeAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[64569-64603]:ExpressionStatement[53633-53667]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[64585-64591]:METHOD_INVOCATION_RECEIVER[59010-59016]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[64592-64600]:SimpleName[59017-59025]"
    }, {
      "left" : "for (int i = 0; i < unsorted.length; i++)",
      "right" : "for (int i = 0; i < kUnsorted.length; i++)",
      "info" : "ForStatement[64616-65189]:ForStatement[53680-53841]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[64621-64624]:PrimitiveType[58627-58630]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[64625-64626]:SimpleName[58631-58632]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[64629-64630]:NumberLiteral[59123-59124]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[64632-64633]:SimpleName[58704-58705]"
    }, {
      "left" : "unsorted.length",
      "right" : "unsorted.length",
      "info" : "QualifiedName[64636-64651]:QualifiedName[38158-38173]"
    }, {
      "left" : "unsorted.length",
      "right" : "kUnsorted.length",
      "info" : "QualifiedName[64636-64651]:QualifiedName[53700-53716]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[64653-64654]:SimpleName[56894-56895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64658-65189]:Block[53723-53841]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[64676-64683]:SimpleType[27129-27136]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[64676-64683]:SimpleName[53741-53742]"
    }, {
      "left" : "Integer item = unsorted[i];",
      "right" : "K k = kUnsorted[i];",
      "info" : "VariableDeclarationStatement[64676-64703]:VariableDeclarationStatement[53741-53760]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[64684-64688]:SimpleName[53743-53744]"
    }, {
      "left" : "item",
      "right" : "kUnsorted",
      "info" : "SimpleName[64684-64688]:SimpleName[53747-53756]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[64691-64699]:SimpleName[33779-33787]"
    }, {
      "left" : "unsorted",
      "right" : "kUnsorted",
      "info" : "SimpleName[64691-64699]:SimpleName[53747-53756]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[64700-64701]:SimpleName[58665-58666]"
    }, {
      "left" : "K",
      "right" : "V",
      "info" : "SimpleName[64720-64721]:SimpleName[53777-53778]"
    }, {
      "left" : "K k = null;",
      "right" : "V v = vUnsorted[i];",
      "info" : "VariableDeclarationStatement[64720-64731]:VariableDeclarationStatement[53777-53796]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[64720-64721]:SimpleType[56842-56843]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[64722-64723]:SimpleName[58745-58746]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[64726-64730]:NullLiteral[58778-58782]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[64748-64749]:SimpleType[52180-52181]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[64750-64751]:SimpleName[56925-56926]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[64754-64758]:NullLiteral[57721-57725]"
    }, {
      "left" : "keyType.isAssignableFrom(Integer.class)",
      "right" : "map.put(k, v)",
      "info" : "MethodInvocation[64780-64819]:MethodInvocation[53813-53826]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[64780-64787]:SimpleName[57565-57572]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[64805-64812]:SimpleType[24109-24116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64821-64957]:Block[53723-53841]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[64843-64844]:SimpleName[53743-53744]"
    }, {
      "left" : "k = (K)Utils.parseT(item, keyType);",
      "right" : "map.put(k, v);",
      "info" : "ExpressionStatement[64843-64878]:ExpressionStatement[53813-53827]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[64848-64849]:SimpleType[55006-55007]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[64869-64876]:SimpleName[52408-52415]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[64899-64900]:SimpleName[56880-56881]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[64904-64905]:SimpleType[57647-57648]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[64925-64931]:SimpleType[51565-51571]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[64967-64974]:SimpleName[54464-54471]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[64992-64998]:SimpleType[26005-26011]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[65029-65030]:SimpleName[60253-60254]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[65034-65035]:SimpleType[60251-60252]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[65055-65062]:SimpleName[52129-52136]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[65085-65086]:SimpleName[60330-60331]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[65090-65091]:SimpleType[60285-60286]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[65111-65118]:SimpleType[21356-21363]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[65161-65164]:METHOD_INVOCATION_RECEIVER[60319-60322]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[65165-65168]:SimpleName[60323-60326]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[65169-65170]:SimpleName[55570-55571]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[65172-65173]:SimpleName[60287-60288]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[65202-65456]:IfStatement[53854-54108]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[65206-65215]:SimpleName[60364-60373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65217-65456]:Block[53869-54108]"
    }, {
      "left" : "afterAddTime = System.nanoTime();",
      "right" : "afterAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[65235-65268]:ExpressionStatement[53887-53920]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[65250-65256]:METHOD_INVOCATION_RECEIVER[60414-60420]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[65257-65265]:SimpleName[60421-60429]"
    }, {
      "left" : "addTime += afterAddTime - beforeAddTime;",
      "right" : "addTime += afterAddTime - beforeAddTime;",
      "info" : "ExpressionStatement[65285-65325]:ExpressionStatement[53937-53977]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[65285-65292]:SimpleName[57038-57045]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[65296-65308]:SimpleName[53506-53518]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[65311-65324]:SimpleName[53474-53487]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[65342-65442]:IfStatement[53994-54094]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[65346-65351]:SimpleName[60528-60533]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[65354-65355]:NumberLiteral[60536-60537]"
    }, {
      "left" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[65357-65442]:ExpressionStatement[54009-54094]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[65357-65367]:METHOD_INVOCATION_RECEIVER[60539-60549]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[65368-65375]:SimpleName[60550-60557]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[65376-65380]:SimpleName[60558-60562]"
    }, {
      "left" : "\" unsorted add time = \"",
      "right" : "\" unsorted add time = \"",
      "info" : "StringLiteral[65381-65404]:StringLiteral[57134-57157]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[65408-65415]:SimpleName[57161-57168]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[65418-65431]:SimpleName[50983-50996]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[65435-65440]:StringLiteral[60619-60624]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[65469-65757]:IfStatement[54121-54409]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[65473-65484]:SimpleName[60657-60668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65486-65757]:Block[54138-54409]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[65504-65554]:ExpressionStatement[54156-54206]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[65504-65515]:SimpleName[60688-60699]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[65518-65538]:METHOD_INVOCATION_RECEIVER[60702-60722]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[65539-65551]:SimpleName[60723-60735]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[65571-65608]:ExpressionStatement[54223-54260]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[65571-65577]:SimpleName[60875-60881]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[65581-65592]:SimpleName[60765-60776]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[65595-65607]:SimpleName[60779-60791]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[65625-65743]:IfStatement[54277-54395]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[65629-65634]:SimpleName[60813-60818]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[65637-65638]:NumberLiteral[60821-60822]"
    }, {
      "left" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[65640-65743]:ExpressionStatement[54292-54395]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[65640-65650]:METHOD_INVOCATION_RECEIVER[60824-60834]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[65651-65658]:SimpleName[60835-60842]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[65659-65663]:SimpleName[60843-60847]"
    }, {
      "left" : "\" unsorted memory use = \"",
      "right" : "\" unsorted memory use = \"",
      "info" : "StringLiteral[65664-65689]:StringLiteral[57417-57442]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[65693-65699]:SimpleName[60755-60761]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[65703-65716]:SimpleName[60885-60898]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[65717-65728]:SimpleName[60899-60910]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[65733-65741]:StringLiteral[60915-60923]"
    }, {
      "left" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "right" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "info" : "VariableDeclarationStatement[65771-65821]:VariableDeclarationStatement[54423-54473]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[65771-65772]:SimpleType[60969-60970]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[65773-65783]:SimpleName[61099-61109]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[65787-65788]:SimpleType[55513-55514]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[65790-65795]:METHOD_INVOCATION_RECEIVER[60972-60977]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[65796-65802]:SimpleName[60978-60984]"
    }, {
      "left" : "INVALID",
      "right" : "INVALID",
      "info" : "SimpleName[65803-65810]:SimpleName[60985-60992]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[65812-65819]:SimpleName[60994-61001]"
    }, {
      "left" : "boolean contains = map.containsKey(invalidKey);",
      "right" : "boolean contains = map.containsKey(invalidKey);",
      "info" : "VariableDeclarationStatement[65834-65881]:VariableDeclarationStatement[54486-54533]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65834-65841]:PrimitiveType[61016-61023]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[65842-65850]:SimpleName[57812-57820]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[65853-65856]:METHOD_INVOCATION_RECEIVER[58734-58737]"
    }, {
      "left" : "containsKey",
      "right" : "containsKey",
      "info" : "SimpleName[65857-65868]:SimpleName[58146-58157]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "METHOD_INVOCATION_ARGUMENTS[65869-65879]:METHOD_INVOCATION_ARGUMENTS[57670-57680]"
    }, {
      "left" : "V removed = map.remove(invalidKey);",
      "right" : "V removed = map.remove(invalidKey);",
      "info" : "VariableDeclarationStatement[65894-65929]:VariableDeclarationStatement[54546-54581]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[65894-65895]:SimpleType[56878-56879]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[65896-65903]:SimpleName[58871-58878]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[65906-65909]:SimpleName[59559-59562]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[65910-65916]:SimpleName[58738-58744]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "METHOD_INVOCATION_ARGUMENTS[65917-65927]:METHOD_INVOCATION_ARGUMENTS[57622-57632]"
    }, {
      "left" : "if (contains || (removed!=null))",
      "right" : "if (contains || (removed!=null))",
      "info" : "IfStatement[65942-66137]:IfStatement[54594-54789]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[65946-65954]:SimpleName[61239-61247]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[65959-65966]:SimpleName[57837-57844]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[65968-65972]:NullLiteral[61150-61154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65975-66137]:Block[54627-54789]"
    }, {
      "left" : "System.err.println(name+\" unsorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "right" : "System.err.println(name+\" unsorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "info" : "ExpressionStatement[65993-66093]:ExpressionStatement[54645-54745]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[65993-66003]:METHOD_INVOCATION_RECEIVER[61175-61185]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[66004-66011]:SimpleName[59483-59490]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[66012-66016]:SimpleName[61194-61198]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[66059-66067]:SimpleName[61128-61136]"
    }, {
      "left" : "\" removed=\"",
      "right" : "\" removed=\"",
      "info" : "StringLiteral[66070-66081]:StringLiteral[61250-61261]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[66084-66091]:SimpleName[61264-61271]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[66110-66123]:ReturnStatement[54762-54775]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[66117-66122]:BooleanLiteral[61297-61302]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[66151-66201]:IfStatement[54803-54853]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[66155-66160]:SimpleName[58344-58349]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[66163-66164]:NumberLiteral[61343-61344]"
    }, {
      "left" : "System.out.println(map.toString());",
      "right" : "System.out.println(map.toString());",
      "info" : "ExpressionStatement[66166-66201]:ExpressionStatement[54818-54853]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[66166-66176]:METHOD_INVOCATION_RECEIVER[58355-58365]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[66177-66184]:SimpleName[61186-61193]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[66185-66188]:METHOD_INVOCATION_RECEIVER[61365-61368]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[66189-66197]:SimpleName[61369-61377]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[66215-66237]:ExpressionStatement[54867-54889]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[66215-66231]:SimpleName[61479-61495]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[66234-66236]:NumberLiteral[61448-61450]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[66250-66271]:ExpressionStatement[54902-54923]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[66250-66265]:SimpleName[61646-61661]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[66268-66270]:NumberLiteral[61414-61416]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[66284-66336]:IfStatement[54936-54988]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[66288-66297]:SimpleName[61617-61626]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[66299-66336]:ExpressionStatement[54951-54988]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[66299-66315]:SimpleName[58052-58068]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[66318-66324]:METHOD_INVOCATION_RECEIVER[61664-61670]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[66325-66333]:SimpleName[61671-61679]"
    }, {
      "left" : "for (Integer item : unsorted)",
      "right" : "for (K k : kUnsorted)",
      "info" : "EnhancedForStatement[66349-66485]:EnhancedForStatement[55001-55074]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[66354-66361]:SimpleType[19028-19035]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleType[66354-66361]:SimpleType[55006-55007]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[66369-66377]:SimpleName[42478-42486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66379-66485]:Block[55023-55074]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[66397-66398]:SimpleType[54439-54440]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[66399-66400]:SimpleName[61583-61584]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[66404-66405]:SimpleType[61534-61535]"
    }, {
      "left" : "Utils",
      "right" : "kUnsorted",
      "info" : "SimpleName[66407-66412]:SimpleName[55012-55021]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.containsKey(k)",
      "info" : "MethodInvocation[66407-66434]:MethodInvocation[55041-55059]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[66426-66433]:SimpleName[52513-52520]"
    }, {
      "left" : "map.containsKey(k);",
      "right" : "map.containsKey(k);",
      "info" : "ExpressionStatement[66452-66471]:ExpressionStatement[55041-55060]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[66452-66455]:METHOD_INVOCATION_RECEIVER[61567-61570]"
    }, {
      "left" : "containsKey",
      "right" : "containsKey",
      "info" : "SimpleName[66456-66467]:SimpleName[61571-61582]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[66468-66469]:SimpleName[60327-60328]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[66498-66784]:IfStatement[55087-55373]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[66502-66511]:SimpleName[61468-61477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66513-66784]:Block[55102-55373]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[66531-66567]:ExpressionStatement[55120-55156]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[66531-66546]:SimpleName[61713-61728]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[66549-66555]:METHOD_INVOCATION_RECEIVER[61498-61504]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[66556-66564]:SimpleName[61505-61513]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[66584-66633]:ExpressionStatement[55173-55222]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[66584-66594]:SimpleName[61699-61709]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[66598-66613]:SimpleName[58221-58236]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[66616-66632]:SimpleName[61731-61747]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[66650-66770]:IfStatement[55239-55359]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[66654-66659]:SimpleName[61769-61774]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[66662-66663]:NumberLiteral[62076-62077]"
    }, {
      "left" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[66665-66770]:ExpressionStatement[55254-55359]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[66665-66675]:METHOD_INVOCATION_RECEIVER[61780-61790]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[66676-66683]:SimpleName[61791-61798]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[66684-66688]:SimpleName[61799-61803]"
    }, {
      "left" : "\" unsorted lookup time = \"",
      "right" : "\" unsorted lookup time = \"",
      "info" : "StringLiteral[66689-66715]:StringLiteral[58379-58405]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[66719-66729]:SimpleName[61832-61842]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[66733-66746]:SimpleName[61846-61859]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[66747-66758]:SimpleName[61860-61871]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[66763-66768]:StringLiteral[61876-61881]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[66798-66850]:IfStatement[55387-55439]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[66802-66811]:SimpleName[61996-62005]"
    }, {
      "left" : "beforeRemoveTime = System.nanoTime();",
      "right" : "beforeRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[66813-66850]:ExpressionStatement[55402-55439]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[66813-66829]:SimpleName[58572-58588]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[66832-66838]:METHOD_INVOCATION_RECEIVER[58239-58245]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[66839-66847]:SimpleName[58246-58254]"
    }, {
      "left" : "for (int i = 0; i < unsorted.length; i++)",
      "right" : "for (int i = 0; i < kUnsorted.length; i++)",
      "info" : "ForStatement[66863-67261]:ForStatement[55452-55788]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[66868-66871]:PrimitiveType[62068-62071]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[66872-66873]:SimpleName[62072-62073]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[66876-66877]:NumberLiteral[61777-61778]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[66879-66880]:SimpleName[62136-62137]"
    }, {
      "left" : "unsorted.length",
      "right" : "unsorted.length",
      "info" : "QualifiedName[66883-66898]:QualifiedName[35813-35828]"
    }, {
      "left" : "unsorted.length",
      "right" : "kUnsorted.length",
      "info" : "QualifiedName[66883-66898]:QualifiedName[55472-55488]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[66900-66901]:SimpleName[60299-60300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66905-67261]:Block[55495-55788]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[66923-66930]:SimpleType[27003-27010]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[66923-66930]:SimpleName[55513-55514]"
    }, {
      "left" : "Integer item = unsorted[i];",
      "right" : "K k = kUnsorted[i];",
      "info" : "VariableDeclarationStatement[66923-66950]:VariableDeclarationStatement[55513-55532]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[66931-66935]:SimpleName[55515-55516]"
    }, {
      "left" : "item",
      "right" : "kUnsorted",
      "info" : "SimpleName[66931-66935]:SimpleName[55519-55528]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[66938-66946]:SimpleName[35661-35669]"
    }, {
      "left" : "unsorted",
      "right" : "kUnsorted",
      "info" : "SimpleName[66938-66946]:SimpleName[55519-55528]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[66947-66948]:SimpleName[62099-62100]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[66967-66968]:SimpleType[62122-62123]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[66969-66970]:SimpleName[62177-62178]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[66974-66975]:SimpleType[58107-58108]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.remove(k)",
      "info" : "MethodInvocation[66977-67004]:MethodInvocation[55559-55572]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[66996-67003]:SimpleName[52055-52062]"
    }, {
      "left" : "removed = map.remove(k);",
      "right" : "removed = map.remove(k);",
      "info" : "ExpressionStatement[67022-67046]:ExpressionStatement[55549-55573]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[67022-67029]:SimpleName[62156-62163]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[67032-67035]:METHOD_INVOCATION_RECEIVER[62166-62169]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[67036-67042]:SimpleName[62170-62176]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[67043-67044]:SimpleName[62124-62125]"
    }, {
      "left" : "if (removed==null)",
      "right" : "if (removed==null)",
      "info" : "IfStatement[67063-67230]:IfStatement[55590-55757]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[67067-67074]:SimpleName[62201-62208]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[67076-67080]:NullLiteral[62210-62214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67082-67230]:Block[55609-55757]"
    }, {
      "left" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "right" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "info" : "ExpressionStatement[67104-67178]:ExpressionStatement[55631-55705]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[67104-67114]:METHOD_INVOCATION_RECEIVER[62238-62248]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[67115-67122]:SimpleName[62593-62600]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[67123-67127]:SimpleName[62601-62605]"
    }, {
      "left" : "\" unsorted invalidity check. removed=\"",
      "right" : "\" unsorted invalidity check. removed=\"",
      "info" : "StringLiteral[67128-67166]:StringLiteral[62262-62300]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[67169-67176]:SimpleName[62303-62310]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[67199-67212]:ReturnStatement[55726-55739]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[67206-67211]:BooleanLiteral[62340-62345]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[67274-67546]:IfStatement[55801-56073]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[67278-67287]:SimpleName[62395-62404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67289-67546]:Block[55816-56073]"
    }, {
      "left" : "afterRemoveTime = System.nanoTime();",
      "right" : "afterRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[67307-67343]:ExpressionStatement[55834-55870]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[67307-67322]:SimpleName[59059-59074]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[67325-67331]:METHOD_INVOCATION_RECEIVER[62448-62454]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[67332-67340]:SimpleName[62455-62463]"
    }, {
      "left" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "right" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "info" : "ExpressionStatement[67360-67409]:ExpressionStatement[55887-55936]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[67360-67370]:SimpleName[59180-59190]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[67374-67389]:SimpleName[58523-58538]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[67392-67408]:SimpleName[58488-58504]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[67426-67532]:IfStatement[55953-56059]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[67430-67435]:SimpleName[62571-62576]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[67438-67439]:NumberLiteral[62579-62580]"
    }, {
      "left" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[67441-67532]:ExpressionStatement[55968-56059]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[67441-67451]:METHOD_INVOCATION_RECEIVER[62582-62592]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[67452-67459]:SimpleName[62939-62946]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[67460-67464]:SimpleName[62947-62951]"
    }, {
      "left" : "\" unsorted remove time = \"",
      "right" : "\" unsorted remove time = \"",
      "info" : "StringLiteral[67465-67491]:StringLiteral[59150-59176]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[67495-67505]:SimpleName[59045-59055]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[67508-67521]:SimpleName[50912-50925]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[67525-67530]:StringLiteral[62668-62673]"
    }, {
      "left" : "if (!map.isEmpty())",
      "right" : "if (!map.isEmpty())",
      "info" : "IfStatement[67560-67731]:IfStatement[56087-56264]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[67565-67568]:SimpleName[62829-62832]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[67569-67576]:SimpleName[62712-62719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67580-67731]:Block[56107-56264]"
    }, {
      "left" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[67598-67653]:ExpressionStatement[56125-56180]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[67598-67608]:METHOD_INVOCATION_RECEIVER[62928-62938]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[67609-67616]:SimpleName[62249-62256]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[67617-67621]:SimpleName[62257-62261]"
    }, {
      "left" : "\" unsorted isEmpty() failed.\"",
      "right" : "\" unsorted isEmpty() failed.\"",
      "info" : "StringLiteral[67622-67651]:StringLiteral[59307-59336]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[67670-67687]:ExpressionStatement[56197-56220]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[67670-67681]:SimpleName[62811-62822]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[67682-67685]:SimpleName[53813-53816]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[67704-67717]:ReturnStatement[63035-63048]"
    }, {
      "left" : "if (map.size()!=0)",
      "right" : "if (map.size()!=0)",
      "info" : "IfStatement[67744-67911]:IfStatement[56277-56450]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[67748-67751]:SimpleName[63013-63016]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[67752-67756]:SimpleName[62899-62903]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[67760-67761]:NumberLiteral[60205-60206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67763-67911]:Block[56296-56450]"
    }, {
      "left" : "System.err.println(name+\" unsorted size() failed.\");",
      "right" : "System.err.println(name+\" unsorted size() failed.\");",
      "info" : "ExpressionStatement[67781-67833]:ExpressionStatement[56314-56366]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[67781-67791]:METHOD_INVOCATION_RECEIVER[62741-62751]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[67792-67799]:SimpleName[62752-62759]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[67800-67804]:SimpleName[62760-62764]"
    }, {
      "left" : "\" unsorted size() failed.\"",
      "right" : "\" unsorted size() failed.\"",
      "info" : "StringLiteral[67805-67831]:StringLiteral[59496-59522]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[67850-67867]:ExpressionStatement[56383-56406]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[67850-67861]:SimpleName[62995-63006]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[67862-67865]:SimpleName[62895-62898]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[67884-67897]:ReturnStatement[56423-56436]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[67891-67896]:BooleanLiteral[62858-62863]"
    }, {
      "left" : "unsortedCount++;",
      "right" : "unsortedCount++;",
      "info" : "ExpressionStatement[67931-67947]:ExpressionStatement[56470-56486]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[67931-67944]:SimpleName[59193-59206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67956-71604]:Block[56495-59618]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[67970-67988]:ExpressionStatement[56509-56527]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[67970-67982]:SimpleName[60060-60072]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[67985-67987]:NumberLiteral[63144-63146]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[68001-68018]:ExpressionStatement[56540-56557]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[68001-68012]:SimpleName[63160-63171]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[68015-68017]:NumberLiteral[63174-63176]"
    }, {
      "left" : "beforeAddTime = 0L;",
      "right" : "beforeAddTime = 0L;",
      "info" : "ExpressionStatement[68031-68050]:ExpressionStatement[56570-56589]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[68031-68044]:SimpleName[57064-57077]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[68047-68049]:NumberLiteral[63212-63214]"
    }, {
      "left" : "afterAddTime = 0L;",
      "right" : "afterAddTime = 0L;",
      "info" : "ExpressionStatement[68063-68081]:ExpressionStatement[56602-56620]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[68063-68075]:SimpleName[57049-57061]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[68078-68080]:NumberLiteral[63249-63251]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[68094-68162]:IfStatement[56633-56701]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[68098-68109]:SimpleName[63269-63280]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[68111-68162]:ExpressionStatement[56650-56701]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[68111-68123]:SimpleName[63282-63294]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[68126-68146]:METHOD_INVOCATION_RECEIVER[63297-63317]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[68147-68159]:SimpleName[63318-63330]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[68175-68224]:IfStatement[56714-56763]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[68179-68188]:SimpleName[63350-63359]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[68190-68203]:SimpleName[56570-56583]"
    }, {
      "left" : "beforeAddTime = System.nanoTime();",
      "right" : "beforeAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[68190-68224]:ExpressionStatement[56729-56763]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[68206-68212]:METHOD_INVOCATION_RECEIVER[57003-57009]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[68213-68221]:SimpleName[57010-57018]"
    }, {
      "left" : "int i = unsorted.length - 1",
      "right" : "int i = kUnsorted.length - 1",
      "info" : "VariableDeclarationExpression[68242-68269]:VariableDeclarationExpression[56781-56809]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[68242-68245]:PrimitiveType[63419-63422]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[68246-68247]:SimpleName[63423-63424]"
    }, {
      "left" : "unsorted.length",
      "right" : "kUnsorted.length",
      "info" : "QualifiedName[68250-68265]:QualifiedName[56789-56805]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[68268-68269]:NumberLiteral[53216-53217]"
    }, {
      "left" : "i >= 0",
      "right" : "i >= 0",
      "info" : "InfixExpression[68271-68277]:InfixExpression[56811-56817]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[68271-68272]:SimpleName[63521-63522]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[68276-68277]:NumberLiteral[63758-63759]"
    }, {
      "left" : "i--",
      "right" : "i--",
      "info" : "PostfixExpression[68279-68282]:PostfixExpression[56819-56822]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[68279-68280]:SimpleName[63487-63488]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[68302-68309]:SimpleType[26532-26539]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[68302-68309]:SimpleName[56842-56843]"
    }, {
      "left" : "Integer item = unsorted[i];",
      "right" : "K k = kUnsorted[i];",
      "info" : "VariableDeclarationStatement[68302-68329]:VariableDeclarationStatement[56842-56861]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[68310-68314]:SimpleName[56844-56845]"
    }, {
      "left" : "item",
      "right" : "kUnsorted",
      "info" : "SimpleName[68310-68314]:SimpleName[56848-56857]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[68317-68325]:SimpleName[34798-34806]"
    }, {
      "left" : "unsorted",
      "right" : "kUnsorted",
      "info" : "SimpleName[68317-68325]:SimpleName[56848-56857]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[68326-68327]:SimpleName[63450-63451]"
    }, {
      "left" : "K",
      "right" : "V",
      "info" : "SimpleName[68346-68347]:SimpleName[56878-56879]"
    }, {
      "left" : "K k = null;",
      "right" : "V v = vUnsorted[i];",
      "info" : "VariableDeclarationStatement[68346-68357]:VariableDeclarationStatement[56878-56897]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[68346-68347]:SimpleType[63473-63474]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[68348-68349]:SimpleName[63549-63550]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[68352-68356]:NullLiteral[54620-54624]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[68374-68375]:SimpleType[63507-63508]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[68376-68377]:SimpleName[63552-63553]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[68380-68384]:NullLiteral[50799-50803]"
    }, {
      "left" : "keyType.isAssignableFrom(Integer.class)",
      "right" : "map.put(k, v)",
      "info" : "MethodInvocation[68406-68445]:MethodInvocation[56914-56927]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[68431-68438]:SimpleType[23578-23585]"
    }, {
      "left" : "k = (K)Utils.parseT(item, keyType)",
      "right" : "afterAddTime = System.nanoTime()",
      "info" : "Assignment[68469-68503]:Assignment[56988-57020]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[68469-68470]:SimpleName[63475-63476]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[68474-68475]:SimpleType[57524-57525]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "System.nanoTime()",
      "info" : "MethodInvocation[68476-68503]:MethodInvocation[57003-57020]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[68525-68526]:SimpleName[63509-63510]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[68530-68531]:SimpleType[54546-54547]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[68551-68557]:SimpleType[25878-25884]"
    }, {
      "left" : "keyType",
      "right" : "keyType",
      "info" : "SimpleName[68593-68600]:SimpleName[64216-64223]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[68618-68624]:SimpleType[25418-25424]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[68655-68656]:SimpleName[61536-61537]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[68660-68661]:SimpleType[64191-64192]"
    }, {
      "left" : "Utils",
      "right" : "Utils",
      "info" : "METHOD_INVOCATION_RECEIVER[68662-68667]:METHOD_INVOCATION_RECEIVER[64194-64199]"
    }, {
      "left" : "parseT",
      "right" : "parseT",
      "info" : "SimpleName[68668-68674]:SimpleName[64200-64206]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[68711-68712]:SimpleName[53824-53825]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[68716-68717]:SimpleType[64298-64299]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[68737-68744]:SimpleType[20812-20819]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[68787-68790]:METHOD_INVOCATION_RECEIVER[63541-63544]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[68791-68794]:SimpleName[63545-63548]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[68795-68796]:SimpleName[58690-58691]"
    }, {
      "left" : "v",
      "right" : "v",
      "info" : "SimpleName[68798-68799]:SimpleName[53779-53780]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[68828-69082]:IfStatement[56955-57209]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[68832-68841]:SimpleName[63586-63595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68843-69082]:Block[56970-57209]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[68861-68873]:SimpleName[56602-56614]"
    }, {
      "left" : "afterAddTime = System.nanoTime();",
      "right" : "afterAddTime = System.nanoTime();",
      "info" : "ExpressionStatement[68861-68894]:ExpressionStatement[56988-57021]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[68876-68882]:METHOD_INVOCATION_RECEIVER[63636-63642]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[68883-68891]:SimpleName[63643-63651]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[68911-68918]:SimpleName[53937-53944]"
    }, {
      "left" : "addTime += afterAddTime - beforeAddTime;",
      "right" : "addTime += afterAddTime - beforeAddTime;",
      "info" : "ExpressionStatement[68911-68951]:ExpressionStatement[57038-57078]"
    }, {
      "left" : "afterAddTime",
      "right" : "afterAddTime",
      "info" : "SimpleName[68922-68934]:SimpleName[52911-52923]"
    }, {
      "left" : "beforeAddTime",
      "right" : "beforeAddTime",
      "info" : "SimpleName[68937-68950]:SimpleName[52878-52891]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[68968-69068]:IfStatement[57095-57195]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[68972-68977]:SimpleName[64035-64040]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[68980-68981]:NumberLiteral[64043-64044]"
    }, {
      "left" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted add time = \" + (addTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[68983-69068]:ExpressionStatement[57110-57195]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[68983-68993]:METHOD_INVOCATION_RECEIVER[64046-64056]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[68994-69001]:SimpleName[64408-64415]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[69002-69006]:SimpleName[64065-64069]"
    }, {
      "left" : "\" unsorted add time = \"",
      "right" : "\" unsorted add time = \"",
      "info" : "StringLiteral[69007-69030]:StringLiteral[54033-54056]"
    }, {
      "left" : "addTime",
      "right" : "addTime",
      "info" : "SimpleName[69034-69041]:SimpleName[52820-52827]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[69044-69057]:SimpleName[64107-64120]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[69061-69066]:StringLiteral[63841-63846]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[69095-69383]:IfStatement[57222-57510]"
    }, {
      "left" : "debugMemory",
      "right" : "debugMemory",
      "info" : "SimpleName[69099-69110]:SimpleName[63879-63890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69112-69383]:Block[57239-57510]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[69130-69180]:ExpressionStatement[57257-57307]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[69130-69141]:SimpleName[59938-59949]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[69144-69164]:METHOD_INVOCATION_RECEIVER[56665-56685]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[69165-69177]:SimpleName[56686-56698]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[69197-69234]:ExpressionStatement[57324-57361]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[69197-69203]:SimpleName[63977-63983]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[69207-69218]:SimpleName[36763-36774]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[69221-69233]:SimpleName[36732-36744]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[69251-69369]:IfStatement[57378-57496]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[69255-69260]:SimpleName[63750-63755]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[69263-69264]:NumberLiteral[63427-63428]"
    }, {
      "left" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" unsorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[69266-69369]:ExpressionStatement[57393-57496]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[69266-69276]:METHOD_INVOCATION_RECEIVER[63761-63771]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[69277-69284]:SimpleName[59294-59301]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[69285-69289]:SimpleName[63780-63784]"
    }, {
      "left" : "\" unsorted memory use = \"",
      "right" : "\" unsorted memory use = \"",
      "info" : "StringLiteral[69290-69315]:StringLiteral[54316-54341]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[69319-69325]:SimpleName[64097-64103]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[69329-69342]:SimpleName[53374-53387]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[69343-69354]:SimpleName[64121-64132]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[69359-69367]:StringLiteral[64137-64145]"
    }, {
      "left" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "right" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "info" : "VariableDeclarationStatement[69397-69447]:VariableDeclarationStatement[57524-57574]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[69397-69398]:SimpleType[58688-58689]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[69399-69409]:SimpleName[61051-61061]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[69413-69414]:SimpleType[53741-53742]"
    }, {
      "left" : "INVALID",
      "right" : "INVALID",
      "info" : "SimpleName[69429-69436]:SimpleName[64207-64214]"
    }, {
      "left" : "boolean contains = map.containsKey(invalidKey);",
      "right" : "boolean contains = map.containsKey(invalidKey);",
      "info" : "VariableDeclarationStatement[69460-69507]:VariableDeclarationStatement[57587-57634]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[69460-69467]:PrimitiveType[64238-64245]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[69468-69476]:SimpleName[45381-45389]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[69479-69482]:METHOD_INVOCATION_RECEIVER[64789-64792]"
    }, {
      "left" : "containsKey",
      "right" : "containsKey",
      "info" : "SimpleName[69483-69494]:SimpleName[55045-55056]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "METHOD_INVOCATION_ARGUMENTS[69495-69505]:METHOD_INVOCATION_ARGUMENTS[54569-54579]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[69520-69521]:SimpleType[53777-53778]"
    }, {
      "left" : "V removed = map.remove(invalidKey);",
      "right" : "V removed = map.remove(invalidKey);",
      "info" : "VariableDeclarationStatement[69520-69555]:VariableDeclarationStatement[57647-57682]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[69522-69529]:SimpleName[64486-64493]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[69532-69535]:METHOD_INVOCATION_RECEIVER[64587-64590]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[69536-69542]:SimpleName[39080-39086]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "METHOD_INVOCATION_ARGUMENTS[69543-69553]:METHOD_INVOCATION_ARGUMENTS[54521-54531]"
    }, {
      "left" : "if (contains || (removed!=null))",
      "right" : "if (contains || (removed!=null))",
      "info" : "IfStatement[69568-69763]:IfStatement[57695-57890]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[69572-69580]:SimpleName[64350-64358]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[69585-69592]:SimpleName[64363-64370]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[69594-69598]:NullLiteral[64372-64376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69601-69763]:Block[57728-57890]"
    }, {
      "left" : "System.err.println(name+\" unsorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "right" : "System.err.println(name+\" unsorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "info" : "ExpressionStatement[69619-69719]:ExpressionStatement[57746-57846]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[69619-69629]:METHOD_INVOCATION_RECEIVER[64397-64407]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[69630-69637]:SimpleName[65013-65020]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[69638-69642]:SimpleName[65021-65025]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[69685-69693]:SimpleName[57595-57603]"
    }, {
      "left" : "\" removed=\"",
      "right" : "\" removed=\"",
      "info" : "StringLiteral[69696-69707]:StringLiteral[64472-64483]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[69710-69717]:SimpleName[39115-39122]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[69736-69749]:ReturnStatement[57863-57876]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[69743-69748]:BooleanLiteral[64519-64524]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[69777-69827]:IfStatement[57904-57954]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[69781-69786]:SimpleName[64991-64996]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[69789-69790]:NumberLiteral[65315-65316]"
    }, {
      "left" : "System.out.println(map.toString());",
      "right" : "System.out.println(map.toString());",
      "info" : "ExpressionStatement[69792-69827]:ExpressionStatement[57919-57954]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[69792-69802]:METHOD_INVOCATION_RECEIVER[65002-65012]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[69803-69810]:SimpleName[64057-64064]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[69811-69814]:METHOD_INVOCATION_RECEIVER[65393-65396]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[69815-69823]:SimpleName[64591-64599]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[69841-69863]:ExpressionStatement[57968-57990]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[69841-69857]:SimpleName[64617-64633]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[69860-69862]:NumberLiteral[60027-60029]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[69876-69897]:ExpressionStatement[58003-58024]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[69876-69891]:SimpleName[64652-64667]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[69894-69896]:NumberLiteral[59990-59992]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[69910-69962]:IfStatement[58037-58089]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[69914-69923]:SimpleName[65218-65227]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[69925-69962]:ExpressionStatement[58052-58089]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[69925-69941]:SimpleName[61395-61411]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[69944-69950]:METHOD_INVOCATION_RECEIVER[64886-64892]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[69951-69959]:SimpleName[64893-64901]"
    }, {
      "left" : "for (Integer item : unsorted)",
      "right" : "for (K k : kUnsorted)",
      "info" : "EnhancedForStatement[69975-70111]:EnhancedForStatement[58102-58175]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[69980-69987]:SimpleType[19008-19015]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleType[69980-69987]:SimpleType[58107-58108]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[69995-70003]:SimpleName[41663-41671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70005-70111]:Block[58124-58175]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[70023-70024]:SimpleType[65349-65350]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[70025-70026]:SimpleName[65404-65405]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[70030-70031]:SimpleType[64175-64176]"
    }, {
      "left" : "Utils",
      "right" : "kUnsorted",
      "info" : "SimpleName[70033-70038]:SimpleName[58113-58122]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.containsKey(k)",
      "info" : "MethodInvocation[70033-70060]:MethodInvocation[58142-58160]"
    }, {
      "left" : "map.containsKey(k);",
      "right" : "map.containsKey(k);",
      "info" : "ExpressionStatement[70078-70097]:ExpressionStatement[58142-58161]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[70078-70081]:METHOD_INVOCATION_RECEIVER[64310-64313]"
    }, {
      "left" : "containsKey",
      "right" : "containsKey",
      "info" : "SimpleName[70082-70093]:SimpleName[61039-61050]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[70094-70095]:SimpleName[65351-65352]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[70124-70410]:IfStatement[58188-58474]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[70128-70137]:SimpleName[65622-65631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70139-70410]:Block[58203-58474]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[70157-70193]:ExpressionStatement[58221-58257]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[70157-70172]:SimpleName[61430-61445]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[70175-70181]:METHOD_INVOCATION_RECEIVER[58071-58077]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[70182-70190]:SimpleName[58078-58086]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[70210-70259]:ExpressionStatement[58274-58323]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[70210-70220]:SimpleName[65054-65064]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[70224-70239]:SimpleName[38039-38054]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[70242-70258]:SimpleName[38004-38020]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[70276-70396]:IfStatement[58340-58460]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[70280-70285]:SimpleName[65798-65803]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[70288-70289]:NumberLiteral[65806-65807]"
    }, {
      "left" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[70291-70396]:ExpressionStatement[58355-58460]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[70291-70301]:METHOD_INVOCATION_RECEIVER[65809-65819]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[70302-70309]:SimpleName[65476-65483]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[70310-70314]:SimpleName[65828-65832]"
    }, {
      "left" : "\" unsorted lookup time = \"",
      "right" : "\" unsorted lookup time = \"",
      "info" : "StringLiteral[70315-70341]:StringLiteral[55278-55304]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[70345-70355]:SimpleName[64921-64931]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[70359-70372]:SimpleName[65068-65081]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[70373-70384]:SimpleName[65082-65093]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[70389-70394]:StringLiteral[65895-65900]"
    }, {
      "left" : "beforeRemoveTime = 0L;",
      "right" : "beforeRemoveTime = 0L;",
      "info" : "ExpressionStatement[70424-70446]:ExpressionStatement[58488-58510]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[70424-70440]:SimpleName[59077-59093]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[70443-70445]:NumberLiteral[59952-59954]"
    }, {
      "left" : "afterRemoveTime = 0L;",
      "right" : "afterRemoveTime = 0L;",
      "info" : "ExpressionStatement[70459-70480]:ExpressionStatement[58523-58544]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[70459-70474]:SimpleName[58992-59007]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[70477-70479]:NumberLiteral[59922-59924]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[70493-70545]:IfStatement[58557-58609]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[70497-70506]:SimpleName[64839-64848]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[70508-70524]:SimpleName[55402-55418]"
    }, {
      "left" : "beforeRemoveTime = System.nanoTime();",
      "right" : "beforeRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[70508-70545]:ExpressionStatement[58572-58609]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[70527-70533]:METHOD_INVOCATION_RECEIVER[65675-65681]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[70534-70542]:SimpleName[65682-65690]"
    }, {
      "left" : "for (int i = unsorted.length - 1; i >= 0; i--)",
      "right" : "for (int i = kUnsorted.length - 1; i >= 0; i--)",
      "info" : "ForStatement[70558-70944]:ForStatement[58622-58946]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[70563-70566]:PrimitiveType[65290-65293]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[70567-70568]:SimpleName[65326-65327]"
    }, {
      "left" : "unsorted.length",
      "right" : "kUnsorted.length",
      "info" : "QualifiedName[70571-70586]:QualifiedName[58635-58651]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[70589-70590]:NumberLiteral[64565-64566]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[70592-70593]:SimpleName[65363-65364]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[70597-70598]:NumberLiteral[64999-65000]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[70600-70601]:SimpleName[60265-60266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70605-70944]:Block[58670-58946]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[70623-70630]:SimpleType[26409-26416]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[70623-70630]:SimpleName[58688-58689]"
    }, {
      "left" : "Integer item = unsorted[i];",
      "right" : "K k = kUnsorted[i];",
      "info" : "VariableDeclarationStatement[70623-70650]:VariableDeclarationStatement[58688-58707]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[70631-70635]:SimpleName[58690-58691]"
    }, {
      "left" : "item",
      "right" : "kUnsorted",
      "info" : "SimpleName[70631-70635]:SimpleName[58694-58703]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[70638-70646]:SimpleName[34196-34204]"
    }, {
      "left" : "unsorted",
      "right" : "kUnsorted",
      "info" : "SimpleName[70638-70646]:SimpleName[58694-58703]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[70647-70648]:SimpleName[65318-65319]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[70667-70668]:SimpleType[52106-52107]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[70669-70670]:SimpleName[64805-64806]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[70674-70675]:SimpleType[60953-60954]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.remove(k)",
      "info" : "MethodInvocation[70677-70704]:MethodInvocation[58734-58747]"
    }, {
      "left" : "removed = map.remove(k);",
      "right" : "removed = map.remove(k);",
      "info" : "ExpressionStatement[70722-70746]:ExpressionStatement[58724-58748]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[70722-70729]:SimpleName[65383-65390]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[70732-70735]:SimpleName[51799-51802]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[70736-70742]:SimpleName[61092-61098]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[70743-70744]:SimpleName[53821-53822]"
    }, {
      "left" : "if (removed==null)",
      "right" : "if (removed==null)",
      "info" : "IfStatement[70763-70930]:IfStatement[58765-58932]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[70767-70774]:SimpleName[61141-61148]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[70776-70780]:NullLiteral[65437-65441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70782-70930]:Block[58784-58932]"
    }, {
      "left" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "right" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "info" : "ExpressionStatement[70804-70878]:ExpressionStatement[58806-58880]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[70804-70814]:METHOD_INVOCATION_RECEIVER[66155-66165]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[70815-70822]:SimpleName[66166-66173]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[70823-70827]:SimpleName[26043-26047]"
    }, {
      "left" : "\" unsorted invalidity check. removed=\"",
      "right" : "\" unsorted invalidity check. removed=\"",
      "info" : "StringLiteral[70828-70866]:StringLiteral[65489-65527]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[70869-70876]:SimpleName[61078-61085]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[70899-70912]:ReturnStatement[58901-58914]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[70899-70912]:ReturnStatement[66262-66275]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[70957-71229]:IfStatement[58959-59231]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[70961-70970]:SimpleName[64690-64699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70972-71229]:Block[58974-59231]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[70990-71005]:SimpleName[55834-55849]"
    }, {
      "left" : "afterRemoveTime = System.nanoTime();",
      "right" : "afterRemoveTime = System.nanoTime();",
      "info" : "ExpressionStatement[70990-71026]:ExpressionStatement[58992-59028]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[71008-71014]:METHOD_INVOCATION_RECEIVER[54970-54976]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[71015-71023]:SimpleName[54977-54985]"
    }, {
      "left" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "right" : "removeTime += afterRemoveTime - beforeRemoveTime;",
      "info" : "ExpressionStatement[71043-71092]:ExpressionStatement[59045-59094]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[71043-71053]:SimpleName[66595-66605]"
    }, {
      "left" : "afterRemoveTime",
      "right" : "afterRemoveTime",
      "info" : "SimpleName[71057-71072]:SimpleName[52979-52994]"
    }, {
      "left" : "beforeRemoveTime",
      "right" : "beforeRemoveTime",
      "info" : "SimpleName[71075-71091]:SimpleName[52943-52959]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[71109-71215]:IfStatement[59111-59217]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[71113-71118]:SimpleName[64557-64562]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[71121-71122]:NumberLiteral[66520-66521]"
    }, {
      "left" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" unsorted remove time = \" + (removeTime / unsortedCount) + \" ns\");",
      "info" : "ExpressionStatement[71124-71215]:ExpressionStatement[59126-59217]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[71124-71134]:METHOD_INVOCATION_RECEIVER[64568-64578]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[71135-71142]:SimpleName[65820-65827]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[71143-71147]:SimpleName[31339-31343]"
    }, {
      "left" : "\" unsorted remove time = \"",
      "right" : "\" unsorted remove time = \"",
      "info" : "StringLiteral[71148-71174]:StringLiteral[55992-56018]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[71178-71188]:SimpleName[36099-36109]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[71191-71204]:SimpleName[56470-56483]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[71208-71213]:StringLiteral[65098-65103]"
    }, {
      "left" : "if (!map.isEmpty())",
      "right" : "if (!map.isEmpty())",
      "info" : "IfStatement[71243-71414]:IfStatement[59245-59422]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[71248-71251]:SimpleName[66056-66059]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[71252-71259]:SimpleName[65939-65946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71263-71414]:Block[59265-59422]"
    }, {
      "left" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" unsorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[71281-71336]:ExpressionStatement[59283-59338]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[71281-71291]:METHOD_INVOCATION_RECEIVER[65465-65475]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[71292-71299]:SimpleName[63772-63779]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[71300-71304]:SimpleName[65484-65488]"
    }, {
      "left" : "\" unsorted isEmpty() failed.\"",
      "right" : "\" unsorted isEmpty() failed.\"",
      "info" : "StringLiteral[71305-71334]:StringLiteral[56149-56178]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[71353-71370]:ExpressionStatement[59355-59378]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[71353-71364]:SimpleName[66038-66049]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[71365-71368]:SimpleName[62708-62711]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[71387-71400]:ReturnStatement[59395-59408]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[71394-71399]:BooleanLiteral[65567-65572]"
    }, {
      "left" : "if (map.size()!=0)",
      "right" : "if (map.size()!=0)",
      "info" : "IfStatement[71427-71594]:IfStatement[59435-59608]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[71431-71434]:SimpleName[66240-66243]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[71435-71439]:SimpleName[66126-66130]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[71443-71444]:NumberLiteral[66134-66135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71446-71594]:Block[59454-59608]"
    }, {
      "left" : "System.err.println(name+\" unsorted size() failed.\");",
      "right" : "System.err.println(name+\" unsorted size() failed.\");",
      "info" : "ExpressionStatement[71464-71516]:ExpressionStatement[59472-59524]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[71464-71474]:METHOD_INVOCATION_RECEIVER[65968-65978]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[71475-71482]:SimpleName[65979-65986]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[71483-71487]:SimpleName[66174-66178]"
    }, {
      "left" : "\" unsorted size() failed.\"",
      "right" : "\" unsorted size() failed.\"",
      "info" : "StringLiteral[71488-71514]:StringLiteral[56338-56364]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[71533-71550]:ExpressionStatement[59541-59564]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[71533-71544]:SimpleName[66222-66233]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[71545-71548]:SimpleName[61088-61091]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[71567-71580]:ReturnStatement[59581-59594]"
    }, {
      "left" : "false",
      "right" : "false",
      "info" : "BooleanLiteral[71574-71579]:BooleanLiteral[66085-66090]"
    }, {
      "left" : "long addSortedTime = 0L;",
      "right" : "long addSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[71614-71638]:VariableDeclarationStatement[59628-59652]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[71614-71618]:PrimitiveType[66476-66480]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[71619-71632]:SimpleName[60588-60601]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71635-71637]:NumberLiteral[64636-64638]"
    }, {
      "left" : "long removeSortedTime = 0L;",
      "right" : "long removeSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[71647-71674]:VariableDeclarationStatement[59661-59688]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[71647-71651]:PrimitiveType[59818-59822]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[71652-71668]:SimpleName[62634-62650]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71671-71673]:NumberLiteral[64670-64672]"
    }, {
      "left" : "long beforeAddSortedTime = 0L;",
      "right" : "long beforeAddSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[71684-71714]:VariableDeclarationStatement[59698-59728]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[71684-71688]:PrimitiveType[59776-59780]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[71689-71708]:SimpleName[60487-60506]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71711-71713]:NumberLiteral[65158-65160]"
    }, {
      "left" : "long afterAddSortedTime = 0L;",
      "right" : "long afterAddSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[71723-71752]:VariableDeclarationStatement[59737-59766]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[71728-71746]:SimpleName[60466-60484]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71749-71751]:NumberLiteral[65198-65200]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[71762-71766]:PrimitiveType[59698-59702]"
    }, {
      "left" : "long beforeRemoveSortedTime = 0L;",
      "right" : "long beforeRemoveSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[71762-71795]:VariableDeclarationStatement[59776-59809]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[71767-71789]:SimpleName[62527-62549]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71792-71794]:NumberLiteral[61976-61978]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[71804-71808]:PrimitiveType[59661-59665]"
    }, {
      "left" : "long afterRemoveSortedTime = 0L;",
      "right" : "long afterRemoveSortedTime = 0L;",
      "info" : "VariableDeclarationStatement[71804-71836]:VariableDeclarationStatement[59818-59850]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[71809-71830]:SimpleName[62503-62524]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71833-71835]:NumberLiteral[61936-61938]"
    }, {
      "left" : "sortedCount++;",
      "right" : "sortedCount++;",
      "info" : "ExpressionStatement[71846-71860]:ExpressionStatement[59860-59874]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[71846-71857]:SimpleName[65880-65891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71869-75585]:Block[59883-63072]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[71893-71911]:ExpressionStatement[59907-59925]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[71893-71905]:SimpleName[64001-64013]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71908-71910]:NumberLiteral[59847-59849]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[71924-71941]:ExpressionStatement[59938-59955]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[71924-71935]:SimpleName[63910-63921]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71938-71940]:NumberLiteral[59806-59808]"
    }, {
      "left" : "beforeAddSortedTime = 0L;",
      "right" : "beforeAddSortedTime = 0L;",
      "info" : "ExpressionStatement[71954-71979]:ExpressionStatement[59968-59993]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[71954-71973]:SimpleName[63361-63380]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[71976-71978]:NumberLiteral[59763-59765]"
    }, {
      "left" : "afterAddSortedTime = 0L;",
      "right" : "afterAddSortedTime = 0L;",
      "info" : "ExpressionStatement[71992-72016]:ExpressionStatement[60006-60030]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[71992-72010]:SimpleName[63615-63633]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[72013-72015]:NumberLiteral[59725-59727]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[72029-72097]:IfStatement[60043-60111]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[72046-72058]:SimpleName[59907-59919]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[72046-72097]:ExpressionStatement[60060-60111]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[72061-72081]:METHOD_INVOCATION_RECEIVER[63924-63944]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[72082-72094]:SimpleName[63945-63957]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[72110-72165]:IfStatement[60124-60179]"
    }, {
      "left" : "beforeAddSortedTime = System.nanoTime();",
      "right" : "beforeAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[72125-72165]:ExpressionStatement[60139-60179]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[72147-72153]:METHOD_INVOCATION_RECEIVER[65254-65260]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[72154-72162]:SimpleName[65261-65269]"
    }, {
      "left" : "for (int i = 0; i < sorted.length; i++)",
      "right" : "for (int i = 0; i < kSorted.length; i++)",
      "info" : "ForStatement[72178-72747]:ForStatement[60192-60347]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[72187-72188]:SimpleName[63430-63431]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[72191-72192]:NumberLiteral[65323-65324]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[72194-72195]:SimpleName[56858-56859]"
    }, {
      "left" : "sorted.length",
      "right" : "sorted.length",
      "info" : "QualifiedName[72198-72211]:QualifiedName[45277-45290]"
    }, {
      "left" : "sorted.length",
      "right" : "kSorted.length",
      "info" : "QualifiedName[72198-72211]:QualifiedName[60212-60226]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[72213-72214]:SimpleName[65294-65295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72218-72747]:Block[60233-60347]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[72236-72243]:SimpleType[25352-25359]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[72236-72243]:SimpleName[60251-60252]"
    }, {
      "left" : "Integer item = sorted[i];",
      "right" : "K k = kSorted[i];",
      "info" : "VariableDeclarationStatement[72236-72261]:VariableDeclarationStatement[60251-60268]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[72244-72248]:SimpleName[60253-60254]"
    }, {
      "left" : "item",
      "right" : "kSorted",
      "info" : "SimpleName[72244-72248]:SimpleName[60257-60264]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[72251-72257]:SimpleName[34951-34957]"
    }, {
      "left" : "sorted",
      "right" : "kSorted",
      "info" : "SimpleName[72251-72257]:SimpleName[60257-60264]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[72258-72259]:SimpleName[60228-60229]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[72278-72279]:SimpleType[52032-52033]"
    }, {
      "left" : "K",
      "right" : "V",
      "info" : "SimpleType[72278-72279]:SimpleType[60285-60286]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[72280-72281]:SimpleName[58158-58159]"
    }, {
      "left" : "k = null",
      "right" : "v = vSorted[i]",
      "info" : "VariableDeclarationFragment[72280-72288]:VariableDeclarationFragment[60287-60301]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[72284-72288]:NullLiteral[66424-66428]"
    }, {
      "left" : "V v = null;",
      "right" : "V v = vSorted[i];",
      "info" : "VariableDeclarationStatement[72306-72317]:VariableDeclarationStatement[60285-60302]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[72306-72307]:SimpleType[61076-61077]"
    }, {
      "left" : "keyType.isAssignableFrom(Integer.class)",
      "right" : "map.put(k, v)",
      "info" : "MethodInvocation[72338-72377]:MethodInvocation[60319-60332]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[72363-72370]:SimpleType[22459-22466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72379-72515]:Block[60233-60347]"
    }, {
      "left" : "k = (K)Utils.parseT(item, keyType);",
      "right" : "map.put(k, v);",
      "info" : "ExpressionStatement[72401-72436]:ExpressionStatement[60319-60333]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[72401-72402]:SimpleName[64758-64759]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[72406-72407]:SimpleType[54423-54424]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[72462-72463]:SimpleType[52241-52242]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[72483-72489]:SimpleType[24704-24710]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[72550-72556]:SimpleType[25292-25298]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[72587-72588]:SimpleName[58109-58110]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[72592-72593]:SimpleType[52091-52092]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[72648-72649]:SimpleType[52163-52164]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[72669-72676]:SimpleType[20273-20280]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[72719-72722]:METHOD_INVOCATION_RECEIVER[61035-61038]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[72723-72726]:SimpleName[56918-56921]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[72727-72728]:SimpleName[56922-56923]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[72760-73040]:IfStatement[60360-60640]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[72764-72773]:SimpleName[58561-58570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72775-73040]:Block[60375-60640]"
    }, {
      "left" : "afterAddSortedTime = System.nanoTime();",
      "right" : "afterAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[72793-72832]:ExpressionStatement[60393-60432]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[72814-72820]:METHOD_INVOCATION_RECEIVER[42378-42384]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[72821-72829]:SimpleName[42385-42393]"
    }, {
      "left" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "right" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "info" : "ExpressionStatement[72849-72907]:ExpressionStatement[60449-60507]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[72849-72862]:SimpleName[66666-66679]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[72866-72884]:SimpleName[60006-60024]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[72887-72906]:SimpleName[59968-59987]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[72924-73026]:IfStatement[60524-60626]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[72928-72933]:SimpleName[48566-48571]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[72936-72937]:NumberLiteral[62907-62908]"
    }, {
      "left" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[72939-73026]:ExpressionStatement[60539-60626]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[72939-72949]:METHOD_INVOCATION_RECEIVER[61346-61356]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[72950-72957]:SimpleName[64579-64586]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[72958-72962]:SimpleName[30741-30745]"
    }, {
      "left" : "\" sorted add time = \"",
      "right" : "\" sorted add time = \"",
      "info" : "StringLiteral[72963-72984]:StringLiteral[63785-63806]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[72988-73001]:SimpleName[60449-60462]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[73004-73015]:SimpleName[66757-66768]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[73019-73024]:StringLiteral[59210-59215]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[73053-73339]:IfStatement[60653-60939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73070-73339]:Block[60670-60939]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[73088-73099]:SimpleName[56540-56551]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[73088-73138]:ExpressionStatement[60688-60738]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[73102-73122]:METHOD_INVOCATION_RECEIVER[40339-40359]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[73123-73135]:SimpleName[40360-40372]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[73155-73192]:ExpressionStatement[60755-60792]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[73155-73161]:SimpleName[66900-66906]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[73165-73176]:SimpleName[53074-53085]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[73179-73191]:SimpleName[53042-53054]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[73209-73325]:IfStatement[60809-60925]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[73213-73218]:SimpleName[45056-45061]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[73221-73222]:NumberLiteral[59451-59452]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[73224-73234]:METHOD_INVOCATION_RECEIVER[57919-57929]"
    }, {
      "left" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[73224-73325]:ExpressionStatement[60824-60925]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[73235-73242]:SimpleName[61357-61364]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[73243-73247]:SimpleName[30147-30151]"
    }, {
      "left" : "\" sorted memory use = \"",
      "right" : "\" sorted memory use = \"",
      "info" : "StringLiteral[73248-73271]:StringLiteral[64070-64093]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[73275-73281]:SimpleName[53015-53021]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[73285-73298]:SimpleName[52787-52800]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[73299-73310]:SimpleName[52757-52768]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[73315-73323]:StringLiteral[57486-57494]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[73353-73354]:SimpleType[57540-57541]"
    }, {
      "left" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "right" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "info" : "VariableDeclarationStatement[73353-73403]:VariableDeclarationStatement[60953-61003]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[73355-73365]:SimpleName[64273-64283]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[73369-73370]:SimpleType[64756-64757]"
    }, {
      "left" : "INVALID",
      "right" : "INVALID",
      "info" : "SimpleName[73385-73392]:SimpleName[57556-57563]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[73416-73423]:PrimitiveType[13777-13784]"
    }, {
      "left" : "boolean contains = map.containsKey(invalidKey);",
      "right" : "boolean contains = map.containsKey(invalidKey);",
      "info" : "VariableDeclarationStatement[73416-73463]:VariableDeclarationStatement[61016-61063]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[73424-73432]:SimpleName[64461-64469]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[73435-73438]:SimpleName[59373-59376]"
    }, {
      "left" : "containsKey",
      "right" : "containsKey",
      "info" : "SimpleName[73439-73450]:SimpleName[64793-64804]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[73451-73461]:SimpleName[64177-64187]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[73476-73477]:SimpleType[52256-52257]"
    }, {
      "left" : "V removed = map.remove(invalidKey);",
      "right" : "V removed = map.remove(invalidKey);",
      "info" : "VariableDeclarationStatement[73476-73511]:VariableDeclarationStatement[61076-61111]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[73478-73485]:SimpleName[65428-65435]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[73488-73491]:SimpleName[56401-56404]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[73492-73498]:SimpleName[65397-65403]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[73499-73509]:SimpleName[60955-60965]"
    }, {
      "left" : "if (contains || (removed!=null))",
      "right" : "if (contains || (removed!=null))",
      "info" : "IfStatement[73524-73717]:IfStatement[61124-61317]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[73528-73536]:SimpleName[64246-64254]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[73541-73548]:SimpleName[58769-58776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73557-73717]:Block[61157-61317]"
    }, {
      "left" : "System.err.println(name+\" sorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "right" : "System.err.println(name+\" sorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "info" : "ExpressionStatement[73575-73673]:ExpressionStatement[61175-61273]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[73586-73593]:SimpleName[66986-66993]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[73594-73598]:SimpleName[65987-65991]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[73639-73647]:SimpleName[54598-54606]"
    }, {
      "left" : "\" removed=\"",
      "right" : "\" removed=\"",
      "info" : "StringLiteral[73650-73661]:StringLiteral[57823-57834]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[73664-73671]:SimpleName[39059-39066]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73690-73703]:ReturnStatement[61290-61303]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[73731-73781]:IfStatement[61331-61381]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[73743-73744]:NumberLiteral[37945-37946]"
    }, {
      "left" : "System.out.println(map.toString());",
      "right" : "System.out.println(map.toString());",
      "info" : "ExpressionStatement[73746-73781]:ExpressionStatement[61346-61381]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[73746-73756]:METHOD_INVOCATION_RECEIVER[66975-66985]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[73765-73768]:METHOD_INVOCATION_RECEIVER[59439-59442]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[73769-73777]:SimpleName[57942-57950]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[73795-73817]:ExpressionStatement[61395-61417]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[73795-73811]:SimpleName[64701-64717]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[73814-73816]:NumberLiteral[59685-59687]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[73830-73851]:ExpressionStatement[61430-61451]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[73830-73845]:SimpleName[64868-64883]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[73848-73850]:NumberLiteral[52830-52832]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[73864-73916]:IfStatement[61464-61516]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[73868-73877]:SimpleName[58192-58201]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[73879-73895]:SimpleName[57968-57984]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[73879-73916]:ExpressionStatement[61479-61516]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[73898-73904]:METHOD_INVOCATION_RECEIVER[64720-64726]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[73905-73913]:SimpleName[64727-64735]"
    }, {
      "left" : "for (Integer item : sorted)",
      "right" : "for (K k : kSorted)",
      "info" : "EnhancedForStatement[73929-74063]:EnhancedForStatement[61529-61600]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[73934-73941]:SimpleType[51599-51606]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[73934-73941]:SimpleName[61534-61535]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[73949-73955]:SimpleName[49664-49670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73957-74063]:Block[61549-61600]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[73975-73976]:SimpleType[52015-52016]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[73977-73978]:SimpleName[56844-56845]"
    }, {
      "left" : "K",
      "right" : "kSorted",
      "info" : "SimpleName[73982-73983]:SimpleName[61540-61547]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.containsKey(k)",
      "info" : "MethodInvocation[73985-74012]:MethodInvocation[61567-61585]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[74030-74033]:METHOD_INVOCATION_RECEIVER[59250-59253]"
    }, {
      "left" : "map.containsKey(k);",
      "right" : "map.containsKey(k);",
      "info" : "ExpressionStatement[74030-74049]:ExpressionStatement[61567-61586]"
    }, {
      "left" : "containsKey",
      "right" : "containsKey",
      "info" : "SimpleName[74034-74045]:SimpleName[57610-57621]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[74046-74047]:SimpleName[55515-55516]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[74076-74360]:IfStatement[61613-61897]"
    }, {
      "left" : "debugTime",
      "right" : "debugTime",
      "info" : "SimpleName[74080-74089]:SimpleName[58041-58050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74091-74360]:Block[61628-61897]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[74109-74124]:SimpleName[58003-58018]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[74109-74145]:ExpressionStatement[61646-61682]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[74127-74133]:METHOD_INVOCATION_RECEIVER[41563-41569]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[74134-74142]:SimpleName[41570-41578]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[74162-74211]:ExpressionStatement[61699-61748]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[74162-74172]:SimpleName[66813-66823]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[74176-74191]:SimpleName[53173-53188]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[74194-74210]:SimpleName[53137-53153]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[74228-74346]:IfStatement[61765-61883]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[74232-74237]:SimpleName[41393-41398]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[74240-74241]:NumberLiteral[52771-52772]"
    }, {
      "left" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[74243-74346]:ExpressionStatement[61780-61883]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[74262-74266]:SimpleName[29566-29570]"
    }, {
      "left" : "\" sorted lookup time = \"",
      "right" : "\" sorted lookup time = \"",
      "info" : "StringLiteral[74267-74291]:StringLiteral[65026-65050]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[74295-74305]:SimpleName[53106-53116]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[74309-74322]:SimpleName[40025-40038]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[74323-74334]:SimpleName[47170-47181]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[74339-74344]:StringLiteral[58453-58458]"
    }, {
      "left" : "beforeRemoveSortedTime = 0L;",
      "right" : "beforeRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[74374-74402]:ExpressionStatement[61911-61939]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[74374-74396]:SimpleName[65229-65251]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[74399-74401]:NumberLiteral[36371-36373]"
    }, {
      "left" : "afterRemoveSortedTime = 0L;",
      "right" : "afterRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[74415-74442]:ExpressionStatement[61952-61979]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[74415-74436]:SimpleName[65651-65672]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[74439-74441]:NumberLiteral[36340-36342]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[74455-74513]:IfStatement[61992-62050]"
    }, {
      "left" : "beforeRemoveSortedTime = System.nanoTime();",
      "right" : "beforeRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[74470-74513]:ExpressionStatement[62007-62050]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[74495-74501]:METHOD_INVOCATION_RECEIVER[63383-63389]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[74502-74510]:SimpleName[63390-63398]"
    }, {
      "left" : "for (int i = 0; i < sorted.length; i++)",
      "right" : "for (int i = 0; i < kSorted.length; i++)",
      "info" : "ForStatement[74526-74903]:ForStatement[62063-62378]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[74531-74534]:PrimitiveType[56781-56784]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[74535-74536]:SimpleName[62079-62080]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[74542-74543]:SimpleName[60201-60202]"
    }, {
      "left" : "sorted.length",
      "right" : "sorted.length",
      "info" : "QualifiedName[74546-74559]:QualifiedName[35919-35932]"
    }, {
      "left" : "sorted.length",
      "right" : "kSorted.length",
      "info" : "QualifiedName[74546-74559]:QualifiedName[62083-62097]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[74561-74562]:SimpleName[56785-56786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74566-74903]:Block[62104-62378]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[74584-74591]:SimpleType[25230-25237]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[74584-74591]:SimpleName[62122-62123]"
    }, {
      "left" : "Integer item = sorted[i];",
      "right" : "K k = kSorted[i];",
      "info" : "VariableDeclarationStatement[74584-74609]:VariableDeclarationStatement[62122-62139]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[74592-74596]:SimpleName[62124-62125]"
    }, {
      "left" : "item",
      "right" : "kSorted",
      "info" : "SimpleName[74592-74596]:SimpleName[62128-62135]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[74599-74605]:SimpleName[34360-34366]"
    }, {
      "left" : "sorted",
      "right" : "kSorted",
      "info" : "SimpleName[74599-74605]:SimpleName[62128-62135]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[74606-74607]:SimpleName[58657-58658]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[74628-74629]:SimpleName[55057-55058]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.remove(k)",
      "info" : "MethodInvocation[74636-74663]:MethodInvocation[62166-62179]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[74681-74688]:SimpleName[58724-58731]"
    }, {
      "left" : "removed = map.remove(k);",
      "right" : "removed = map.remove(k);",
      "info" : "ExpressionStatement[74681-74705]:ExpressionStatement[62156-62180]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[74691-74694]:METHOD_INVOCATION_RECEIVER[51853-51856]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[74695-74701]:SimpleName[57663-57669]"
    }, {
      "left" : "k",
      "right" : "k",
      "info" : "SimpleName[74702-74703]:SimpleName[55008-55009]"
    }, {
      "left" : "if (removed==null)",
      "right" : "if (removed==null)",
      "info" : "IfStatement[74722-74889]:IfStatement[62197-62364]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[74726-74733]:SimpleName[57712-57719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74741-74889]:Block[62216-62364]"
    }, {
      "left" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "right" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "info" : "ExpressionStatement[74763-74837]:ExpressionStatement[62238-62312]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[74782-74786]:SimpleName[51572-51576]"
    }, {
      "left" : "\" unsorted invalidity check. removed=\"",
      "right" : "\" unsorted invalidity check. removed=\"",
      "info" : "StringLiteral[74787-74825]:StringLiteral[58830-58868]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[74828-74835]:SimpleName[57649-57656]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[74858-74871]:ReturnStatement[62333-62346]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[74916-75214]:IfStatement[62391-62689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74931-75214]:Block[62406-62689]"
    }, {
      "left" : "afterRemoveSortedTime = System.nanoTime();",
      "right" : "afterRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[74949-74991]:ExpressionStatement[62424-62466]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[74973-74979]:METHOD_INVOCATION_RECEIVER[40419-40425]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[74980-74988]:SimpleName[40426-40434]"
    }, {
      "left" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "right" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "info" : "ExpressionStatement[75008-75075]:ExpressionStatement[62483-62550]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[75008-75024]:SimpleName[66738-66754]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[75028-75049]:SimpleName[61952-61973]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[75052-75074]:SimpleName[61911-61933]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[75092-75200]:IfStatement[62567-62675]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[75096-75101]:SimpleName[37937-37942]"
    }, {
      "left" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[75107-75200]:ExpressionStatement[62582-62675]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[75126-75130]:SimpleName[29001-29005]"
    }, {
      "left" : "\" sorted remove time = \"",
      "right" : "\" sorted remove time = \"",
      "info" : "StringLiteral[75131-75155]:StringLiteral[65833-65857]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[75159-75175]:SimpleName[62483-62499]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[75178-75189]:SimpleName[66682-66693]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[75193-75198]:StringLiteral[57188-57193]"
    }, {
      "left" : "if (!map.isEmpty())",
      "right" : "if (!map.isEmpty())",
      "info" : "IfStatement[75228-75397]:IfStatement[62703-62878]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[75233-75236]:SimpleName[56215-56218]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[75237-75244]:SimpleName[59254-59261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75248-75397]:Block[62723-62878]"
    }, {
      "left" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[75266-75319]:ExpressionStatement[62741-62794]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[75285-75289]:SimpleName[64416-64420]"
    }, {
      "left" : "\" sorted isEmpty() failed.\"",
      "right" : "\" sorted isEmpty() failed.\"",
      "info" : "StringLiteral[75290-75317]:StringLiteral[65992-66019]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[75336-75347]:SimpleName[59541-59552]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[75336-75353]:ExpressionStatement[62811-62834]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[75348-75351]:SimpleName[57659-57662]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[75370-75383]:ReturnStatement[62851-62864]"
    }, {
      "left" : "if (map.size()!=0)",
      "right" : "if (map.size()!=0)",
      "info" : "IfStatement[75410-75575]:IfStatement[62891-63062]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[75414-75417]:METHOD_INVOCATION_RECEIVER[55041-55044]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[75418-75422]:SimpleName[59443-59447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75429-75575]:Block[62910-63062]"
    }, {
      "left" : "System.err.println(name+\" sorted size() failed.\");",
      "right" : "System.err.println(name+\" sorted size() failed.\");",
      "info" : "ExpressionStatement[75447-75497]:ExpressionStatement[62928-62978]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[75466-75470]:SimpleName[59491-59495]"
    }, {
      "left" : "\" sorted size() failed.\"",
      "right" : "\" sorted size() failed.\"",
      "info" : "StringLiteral[75471-75495]:StringLiteral[66179-66203]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[75514-75525]:SimpleName[59355-59366]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[75514-75531]:ExpressionStatement[62995-63018]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[75526-75529]:SimpleName[57606-57609]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[75548-75561]:ReturnStatement[8980-8993]"
    }, {
      "left" : "sortedCount++;",
      "right" : "sortedCount++;",
      "info" : "ExpressionStatement[75595-75609]:ExpressionStatement[63082-63096]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[75595-75606]:SimpleName[63826-63837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75618-79340]:Block[63105-66300]"
    }, {
      "left" : "beforeMemory = 0L;",
      "right" : "beforeMemory = 0L;",
      "info" : "ExpressionStatement[75642-75660]:ExpressionStatement[63129-63147]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[75657-75659]:NumberLiteral[36309-36311]"
    }, {
      "left" : "afterMemory = 0L;",
      "right" : "afterMemory = 0L;",
      "info" : "ExpressionStatement[75673-75690]:ExpressionStatement[63160-63177]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[75673-75684]:SimpleName[63987-63998]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[75687-75689]:NumberLiteral[36276-36278]"
    }, {
      "left" : "beforeAddSortedTime = 0L;",
      "right" : "beforeAddSortedTime = 0L;",
      "info" : "ExpressionStatement[75703-75728]:ExpressionStatement[63190-63215]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[75703-75722]:SimpleName[63709-63728]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[75725-75727]:NumberLiteral[36249-36251]"
    }, {
      "left" : "afterAddSortedTime = 0L;",
      "right" : "afterAddSortedTime = 0L;",
      "info" : "ExpressionStatement[75741-75765]:ExpressionStatement[63228-63252]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[75741-75759]:SimpleName[63688-63706]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[75762-75764]:NumberLiteral[36214-36216]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[75778-75846]:IfStatement[63265-63333]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[75795-75807]:SimpleName[43815-43827]"
    }, {
      "left" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "beforeMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[75795-75846]:ExpressionStatement[63282-63333]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[75810-75830]:METHOD_INVOCATION_RECEIVER[60075-60095]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[75831-75843]:SimpleName[60096-60108]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[75859-75914]:IfStatement[63346-63401]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[75874-75893]:SimpleName[63190-63209]"
    }, {
      "left" : "beforeAddSortedTime = System.nanoTime();",
      "right" : "beforeAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[75874-75914]:ExpressionStatement[63361-63401]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[75896-75902]:METHOD_INVOCATION_RECEIVER[62032-62038]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[75903-75911]:SimpleName[62039-62047]"
    }, {
      "left" : "int i = 0",
      "right" : "int i = 0",
      "info" : "VariableDeclarationExpression[75932-75941]:VariableDeclarationExpression[63419-63428]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[75936-75937]:SimpleName[56819-56820]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[75943-75944]:SimpleName[60208-60209]"
    }, {
      "left" : "i < sorted.length",
      "right" : "i < kSorted.length",
      "info" : "InfixExpression[75943-75960]:InfixExpression[63430-63448]"
    }, {
      "left" : "sorted.length",
      "right" : "kSorted.length",
      "info" : "QualifiedName[75947-75960]:QualifiedName[63434-63448]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[75962-75963]:SimpleName[56811-56812]"
    }, {
      "left" : "i++",
      "right" : "i++",
      "info" : "PostfixExpression[75962-75965]:PostfixExpression[63450-63453]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[75985-75992]:SimpleType[24763-24770]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[75985-75992]:SimpleName[63473-63474]"
    }, {
      "left" : "Integer item = sorted[i];",
      "right" : "K k = kSorted[i];",
      "info" : "VariableDeclarationStatement[75985-76010]:VariableDeclarationStatement[63473-63490]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[75993-75997]:SimpleName[63475-63476]"
    }, {
      "left" : "item",
      "right" : "kSorted",
      "info" : "SimpleName[75993-75997]:SimpleName[63479-63486]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[76000-76006]:SimpleName[35733-35739]"
    }, {
      "left" : "sorted",
      "right" : "kSorted",
      "info" : "SimpleName[76000-76006]:SimpleName[63479-63486]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[76007-76008]:SimpleName[52565-52566]"
    }, {
      "left" : "K k = null;",
      "right" : "V v = vSorted[i];",
      "info" : "VariableDeclarationStatement[76027-76038]:VariableDeclarationStatement[63507-63524]"
    }, {
      "left" : "k",
      "right" : "vSorted",
      "info" : "SimpleName[76029-76030]:SimpleName[63513-63520]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[76055-76056]:SimpleType[51551-51552]"
    }, {
      "left" : "keyType.isAssignableFrom(Integer.class)",
      "right" : "map.put(k, v)",
      "info" : "MethodInvocation[76087-76126]:MethodInvocation[63541-63554]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[76112-76119]:SimpleType[21901-21908]"
    }, {
      "left" : "k = (K)Utils.parseT(item, keyType)",
      "right" : "afterAddSortedTime = System.nanoTime()",
      "info" : "Assignment[76150-76184]:Assignment[63615-63653]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "System.nanoTime()",
      "info" : "MethodInvocation[76157-76184]:MethodInvocation[63636-63653]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[76232-76238]:SimpleType[67051-67057]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[76299-76305]:SimpleType[24828-24834]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[76418-76425]:SimpleType[19342-19349]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[76468-76471]:METHOD_INVOCATION_RECEIVER[56281-56284]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[76472-76475]:SimpleName[53817-53820]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[76509-76789]:IfStatement[63582-63862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76524-76789]:Block[63597-63862]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[76542-76560]:SimpleName[63228-63246]"
    }, {
      "left" : "afterAddSortedTime = System.nanoTime();",
      "right" : "afterAddSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[76542-76581]:ExpressionStatement[63615-63654]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[76563-76569]:METHOD_INVOCATION_RECEIVER[38922-38928]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[76570-76578]:SimpleName[38929-38937]"
    }, {
      "left" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "right" : "addSortedTime += afterAddSortedTime - beforeAddSortedTime;",
      "info" : "ExpressionStatement[76598-76656]:ExpressionStatement[63671-63729]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[76598-76611]:SimpleName[63810-63823]"
    }, {
      "left" : "afterAddSortedTime",
      "right" : "afterAddSortedTime",
      "info" : "SimpleName[76615-76633]:SimpleName[59742-59760]"
    }, {
      "left" : "beforeAddSortedTime",
      "right" : "beforeAddSortedTime",
      "info" : "SimpleName[76636-76655]:SimpleName[59703-59722]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[76673-76775]:IfStatement[63746-63848]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[76677-76682]:SimpleName[66964-66969]"
    }, {
      "left" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted add time = \" + (addSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[76688-76775]:ExpressionStatement[63761-63848]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[76707-76711]:SimpleName[28410-28414]"
    }, {
      "left" : "\" sorted add time = \"",
      "right" : "\" sorted add time = \"",
      "info" : "StringLiteral[76712-76733]:StringLiteral[60563-60584]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[76737-76750]:SimpleName[59633-59646]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[76753-76764]:SimpleName[63082-63093]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[76768-76773]:StringLiteral[39579-39584]"
    }, {
      "left" : "if (debugMemory)",
      "right" : "if (debugMemory)",
      "info" : "IfStatement[76802-77088]:IfStatement[63875-64161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76819-77088]:Block[63892-64161]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[76837-76848]:SimpleName[43846-43857]"
    }, {
      "left" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "right" : "afterMemory = DataStructuresTiming.getMemoryUse();",
      "info" : "ExpressionStatement[76837-76887]:ExpressionStatement[63910-63960]"
    }, {
      "left" : "DataStructuresTiming",
      "right" : "DataStructuresTiming",
      "info" : "METHOD_INVOCATION_RECEIVER[76851-76871]:METHOD_INVOCATION_RECEIVER[36888-36908]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[76872-76884]:SimpleName[36909-36921]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[76904-76910]:SimpleName[48364-48370]"
    }, {
      "left" : "memory += afterMemory - beforeMemory;",
      "right" : "memory += afterMemory - beforeMemory;",
      "info" : "ExpressionStatement[76904-76941]:ExpressionStatement[63977-64014]"
    }, {
      "left" : "afterMemory",
      "right" : "afterMemory",
      "info" : "SimpleName[76914-76925]:SimpleName[36326-36337]"
    }, {
      "left" : "beforeMemory",
      "right" : "beforeMemory",
      "info" : "SimpleName[76928-76940]:SimpleName[36294-36306]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[76958-77074]:IfStatement[64031-64147]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[76962-76967]:SimpleName[53208-53213]"
    }, {
      "left" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "right" : "System.out.println(name+\" sorted memory use = \" + (memory / (unsortedCount+sortedCount)) + \" bytes\");",
      "info" : "ExpressionStatement[76973-77074]:ExpressionStatement[64046-64147]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[76992-76996]:SimpleName[27814-27818]"
    }, {
      "left" : "\" sorted memory use = \"",
      "right" : "\" sorted memory use = \"",
      "info" : "StringLiteral[76997-77020]:StringLiteral[60848-60871]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[77024-77030]:SimpleName[36267-36273]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[77034-77047]:SimpleName[36626-36639]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[77048-77059]:SimpleName[43713-43724]"
    }, {
      "left" : "\" bytes\"",
      "right" : "\" bytes\"",
      "info" : "StringLiteral[77064-77072]:StringLiteral[37895-37903]"
    }, {
      "left" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "right" : "K invalidKey = (K) Utils.parseT(INVALID, keyType);",
      "info" : "VariableDeclarationStatement[77102-77152]:VariableDeclarationStatement[64175-64225]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[77104-77114]:SimpleName[64321-64331]"
    }, {
      "left" : "INVALID",
      "right" : "INVALID",
      "info" : "SimpleName[77134-77141]:SimpleName[54455-54462]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[77165-77172]:PrimitiveType[35104-35111]"
    }, {
      "left" : "boolean contains = map.containsKey(invalidKey);",
      "right" : "boolean contains = map.containsKey(invalidKey);",
      "info" : "VariableDeclarationStatement[77165-77212]:VariableDeclarationStatement[64238-64285]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[77173-77181]:SimpleName[61024-61032]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[77184-77187]:METHOD_INVOCATION_RECEIVER[54837-54840]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[77200-77210]:SimpleName[57526-57536]"
    }, {
      "left" : "V removed = map.remove(invalidKey);",
      "right" : "V removed = map.remove(invalidKey);",
      "info" : "VariableDeclarationStatement[77225-77260]:VariableDeclarationStatement[64298-64333]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[77227-77234]:SimpleName[65530-65537]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[77237-77240]:METHOD_INVOCATION_RECEIVER[66122-66125]"
    }, {
      "left" : "invalidKey",
      "right" : "invalidKey",
      "info" : "SimpleName[77248-77258]:SimpleName[54425-54435]"
    }, {
      "left" : "if (contains || (removed!=null))",
      "right" : "if (contains || (removed!=null))",
      "info" : "IfStatement[77273-77466]:IfStatement[64346-64539]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[77277-77285]:SimpleName[57699-57707]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[77290-77297]:SimpleName[55594-55601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77306-77466]:Block[64379-64539]"
    }, {
      "left" : "System.err.println(name+\" sorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "right" : "System.err.println(name+\" sorted invalidity check. contains=\" + contains + \" removed=\" + removed);",
      "info" : "ExpressionStatement[77324-77422]:ExpressionStatement[64397-64495]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[77343-77347]:SimpleName[59302-59306]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[77388-77396]:SimpleName[54494-54502]"
    }, {
      "left" : "\" removed=\"",
      "right" : "\" removed=\"",
      "info" : "StringLiteral[77399-77410]:StringLiteral[54722-54733]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[77413-77420]:SimpleName[64300-64307]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[77439-77452]:ReturnStatement[64512-64525]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[77480-77530]:IfStatement[64553-64603]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[77484-77489]:SimpleName[57908-57913]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[77492-77493]:NumberLiteral[66972-66973]"
    }, {
      "left" : "System.out.println(map.toString());",
      "right" : "System.out.println(map.toString());",
      "info" : "ExpressionStatement[77495-77530]:ExpressionStatement[64568-64603]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[77514-77517]:METHOD_INVOCATION_RECEIVER[56092-56095]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[77518-77526]:SimpleName[37978-37986]"
    }, {
      "left" : "beforeLookupTime = 0L;",
      "right" : "beforeLookupTime = 0L;",
      "info" : "ExpressionStatement[77544-77566]:ExpressionStatement[64617-64639]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[77544-77560]:SimpleName[64953-64969]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[77563-77565]:NumberLiteral[36178-36180]"
    }, {
      "left" : "afterLookupTime = 0L;",
      "right" : "afterLookupTime = 0L;",
      "info" : "ExpressionStatement[77579-77600]:ExpressionStatement[64652-64673]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[77579-77594]:SimpleName[64935-64950]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[77597-77599]:NumberLiteral[36146-36148]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[77613-77665]:IfStatement[64686-64738]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[77628-77644]:SimpleName[45123-45139]"
    }, {
      "left" : "beforeLookupTime = System.nanoTime();",
      "right" : "beforeLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[77628-77665]:ExpressionStatement[64701-64738]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[77647-77653]:METHOD_INVOCATION_RECEIVER[60161-60167]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[77654-77662]:SimpleName[60168-60176]"
    }, {
      "left" : "for (Integer item : sorted)",
      "right" : "for (K k : kSorted)",
      "info" : "EnhancedForStatement[77678-77812]:EnhancedForStatement[64751-64822]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[77683-77690]:SimpleType[51578-51585]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[77683-77690]:SimpleName[64756-64757]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[77698-77704]:SimpleName[48834-48840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77706-77812]:Block[64771-64822]"
    }, {
      "left" : "K",
      "right" : "kSorted",
      "info" : "SimpleName[77724-77725]:SimpleName[64762-64769]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.containsKey(k)",
      "info" : "MethodInvocation[77734-77761]:MethodInvocation[64789-64807]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[77779-77782]:METHOD_INVOCATION_RECEIVER[54558-54561]"
    }, {
      "left" : "map.containsKey(k);",
      "right" : "map.containsKey(k);",
      "info" : "ExpressionStatement[77779-77798]:ExpressionStatement[64789-64808]"
    }, {
      "left" : "containsKey",
      "right" : "containsKey",
      "info" : "SimpleName[77783-77794]:SimpleName[54509-54520]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[77825-78109]:IfStatement[64835-65119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77840-78109]:Block[64850-65119]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[77858-77873]:SimpleName[45158-45173]"
    }, {
      "left" : "afterLookupTime = System.nanoTime();",
      "right" : "afterLookupTime = System.nanoTime();",
      "info" : "ExpressionStatement[77858-77894]:ExpressionStatement[64868-64904]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[77876-77882]:METHOD_INVOCATION_RECEIVER[38107-38113]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[77883-77891]:SimpleName[38114-38122]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[77911-77921]:SimpleName[58274-58284]"
    }, {
      "left" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "right" : "lookupTime += afterLookupTime - beforeLookupTime;",
      "info" : "ExpressionStatement[77911-77960]:ExpressionStatement[64921-64970]"
    }, {
      "left" : "afterLookupTime",
      "right" : "afterLookupTime",
      "info" : "SimpleName[77925-77940]:SimpleName[36425-36440]"
    }, {
      "left" : "beforeLookupTime",
      "right" : "beforeLookupTime",
      "info" : "SimpleName[77943-77959]:SimpleName[36389-36405]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[77977-78095]:IfStatement[64987-65105]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[77981-77986]:SimpleName[51339-51344]"
    }, {
      "left" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "right" : "System.out.println(name+\" sorted lookup time = \" + (lookupTime / (unsortedCount+sortedCount)) + \" ns\");",
      "info" : "ExpressionStatement[77992-78095]:ExpressionStatement[65002-65105]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[78011-78015]:SimpleName[27234-27238]"
    }, {
      "left" : "\" sorted lookup time = \"",
      "right" : "\" sorted lookup time = \"",
      "info" : "StringLiteral[78016-78040]:StringLiteral[61804-61828]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[78044-78054]:SimpleName[36358-36368]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[78058-78071]:SimpleName[36039-36052]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[78072-78083]:SimpleName[36009-36020]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[78088-78093]:StringLiteral[38784-38789]"
    }, {
      "left" : "beforeRemoveSortedTime = 0L;",
      "right" : "beforeRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[78123-78151]:ExpressionStatement[65133-65161]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[78123-78145]:SimpleName[65754-65776]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[78148-78150]:NumberLiteral[36112-36114]"
    }, {
      "left" : "afterRemoveSortedTime = 0L;",
      "right" : "afterRemoveSortedTime = 0L;",
      "info" : "ExpressionStatement[78164-78191]:ExpressionStatement[65174-65201]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[78164-78185]:SimpleName[65730-65751]"
    }, {
      "left" : "0L",
      "right" : "0L",
      "info" : "NumberLiteral[78188-78190]:NumberLiteral[36082-36084]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[78204-78262]:IfStatement[65214-65272]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[78219-78241]:SimpleName[65133-65155]"
    }, {
      "left" : "beforeRemoveSortedTime = System.nanoTime();",
      "right" : "beforeRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[78219-78262]:ExpressionStatement[65229-65272]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[78244-78250]:METHOD_INVOCATION_RECEIVER[58591-58597]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[78251-78259]:SimpleName[58598-58606]"
    }, {
      "left" : "for (int i = sorted.length - 1; i >= 0; i--)",
      "right" : "for (int i = kSorted.length - 1; i >= 0; i--)",
      "info" : "ForStatement[78275-78657]:ForStatement[65285-65605]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[78284-78285]:SimpleName[52540-52541]"
    }, {
      "left" : "sorted.length",
      "right" : "kSorted.length",
      "info" : "QualifiedName[78288-78301]:QualifiedName[65298-65312]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[78304-78305]:NumberLiteral[51347-51348]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[78307-78308]:SimpleName[52545-52546]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[78315-78316]:SimpleName[52458-52459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78320-78657]:Block[65331-65605]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[78338-78345]:SimpleType[24644-24651]"
    }, {
      "left" : "Integer",
      "right" : "K",
      "info" : "SimpleName[78338-78345]:SimpleName[65349-65350]"
    }, {
      "left" : "Integer item = sorted[i];",
      "right" : "K k = kSorted[i];",
      "info" : "VariableDeclarationStatement[78338-78363]:VariableDeclarationStatement[65349-65366]"
    }, {
      "left" : "item",
      "right" : "k",
      "info" : "SimpleName[78346-78350]:SimpleName[65351-65352]"
    }, {
      "left" : "item",
      "right" : "kSorted",
      "info" : "SimpleName[78346-78350]:SimpleName[65355-65362]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[78353-78359]:SimpleName[34818-34824]"
    }, {
      "left" : "sorted",
      "right" : "kSorted",
      "info" : "SimpleName[78353-78359]:SimpleName[65355-65362]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[78360-78361]:SimpleName[52440-52441]"
    }, {
      "left" : "Utils.parseT(item, keyType)",
      "right" : "map.remove(k)",
      "info" : "MethodInvocation[78390-78417]:MethodInvocation[65393-65406]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[78435-78442]:SimpleName[55549-55556]"
    }, {
      "left" : "removed = map.remove(k);",
      "right" : "removed = map.remove(k);",
      "info" : "ExpressionStatement[78435-78459]:ExpressionStatement[65383-65407]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[78445-78448]:METHOD_INVOCATION_RECEIVER[51685-51688]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[78449-78455]:SimpleName[54562-54568]"
    }, {
      "left" : "if (removed==null)",
      "right" : "if (removed==null)",
      "info" : "IfStatement[78476-78643]:IfStatement[65424-65591]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[78480-78487]:SimpleName[54611-54618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78495-78643]:Block[65443-65591]"
    }, {
      "left" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "right" : "System.err.println(name+\" unsorted invalidity check. removed=\" + removed);",
      "info" : "ExpressionStatement[78517-78591]:ExpressionStatement[65465-65539]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[78536-78540]:SimpleName[35179-35183]"
    }, {
      "left" : "\" unsorted invalidity check. removed=\"",
      "right" : "\" unsorted invalidity check. removed=\"",
      "info" : "StringLiteral[78541-78579]:StringLiteral[55655-55693]"
    }, {
      "left" : "removed",
      "right" : "removed",
      "info" : "SimpleName[78582-78589]:SimpleName[54548-54555]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[78612-78625]:ReturnStatement[65560-65573]"
    }, {
      "left" : "if (debugTime)",
      "right" : "if (debugTime)",
      "info" : "IfStatement[78670-78968]:IfStatement[65618-65916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78685-78968]:Block[65633-65916]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[78703-78724]:SimpleName[65174-65195]"
    }, {
      "left" : "afterRemoveSortedTime = System.nanoTime();",
      "right" : "afterRemoveSortedTime = System.nanoTime();",
      "info" : "ExpressionStatement[78703-78745]:ExpressionStatement[65651-65693]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[78727-78733]:METHOD_INVOCATION_RECEIVER[36968-36974]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[78734-78742]:SimpleName[36975-36983]"
    }, {
      "left" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "right" : "removeSortedTime += afterRemoveSortedTime - beforeRemoveSortedTime;",
      "info" : "ExpressionStatement[78762-78829]:ExpressionStatement[65710-65777]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[78762-78778]:SimpleName[65861-65877]"
    }, {
      "left" : "afterRemoveSortedTime",
      "right" : "afterRemoveSortedTime",
      "info" : "SimpleName[78782-78803]:SimpleName[59823-59844]"
    }, {
      "left" : "beforeRemoveSortedTime",
      "right" : "beforeRemoveSortedTime",
      "info" : "SimpleName[78806-78828]:SimpleName[59781-59803]"
    }, {
      "left" : "if (debug > 0)",
      "right" : "if (debug > 0)",
      "info" : "IfStatement[78846-78954]:IfStatement[65794-65902]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[78850-78855]:SimpleName[36460-36465]"
    }, {
      "left" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "right" : "System.out.println(name+\" sorted remove time = \" + (removeSortedTime / sortedCount) + \" ns\");",
      "info" : "ExpressionStatement[78861-78954]:ExpressionStatement[65809-65902]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[78880-78884]:SimpleName[26636-26640]"
    }, {
      "left" : "\" sorted remove time = \"",
      "right" : "\" sorted remove time = \"",
      "info" : "StringLiteral[78885-78909]:StringLiteral[62606-62630]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[78913-78929]:SimpleName[59666-59682]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[78932-78943]:SimpleName[59860-59871]"
    }, {
      "left" : "\" ns\"",
      "right" : "\" ns\"",
      "info" : "StringLiteral[78947-78952]:StringLiteral[37597-37602]"
    }, {
      "left" : "if (!map.isEmpty())",
      "right" : "if (!map.isEmpty())",
      "info" : "IfStatement[78982-79151]:IfStatement[65930-66105]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[78991-78998]:SimpleName[35310-35317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79002-79151]:Block[65950-66105]"
    }, {
      "left" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "right" : "System.err.println(name+\" sorted isEmpty() failed.\");",
      "info" : "ExpressionStatement[79020-79073]:ExpressionStatement[65968-66021]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[79039-79043]:SimpleName[33012-33016]"
    }, {
      "left" : "\" sorted isEmpty() failed.\"",
      "right" : "\" sorted isEmpty() failed.\"",
      "info" : "StringLiteral[79044-79071]:StringLiteral[62765-62792]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[79090-79101]:SimpleName[35581-35592]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[79090-79107]:ExpressionStatement[66038-66061]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[79102-79105]:SimpleName[54505-54508]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[79124-79137]:ReturnStatement[66078-66091]"
    }, {
      "left" : "if (map.size()!=0)",
      "right" : "if (map.size()!=0)",
      "info" : "IfStatement[79164-79329]:IfStatement[66118-66289]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "METHOD_INVOCATION_RECEIVER[79168-79171]:METHOD_INVOCATION_RECEIVER[64257-64260]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[79172-79176]:SimpleName[35492-35496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79183-79329]:Block[66137-66289]"
    }, {
      "left" : "System.err.println(name+\" sorted size() failed.\");",
      "right" : "System.err.println(name+\" sorted size() failed.\");",
      "info" : "ExpressionStatement[79201-79251]:ExpressionStatement[66155-66205]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[79220-79224]:SimpleName[32473-32477]"
    }, {
      "left" : "\" sorted size() failed.\"",
      "right" : "\" sorted size() failed.\"",
      "info" : "StringLiteral[79225-79249]:StringLiteral[62952-62976]"
    }, {
      "left" : "handleError",
      "right" : "handleError",
      "info" : "SimpleName[79268-79279]:SimpleName[35402-35413]"
    }, {
      "left" : "handleError(map);",
      "right" : "handleError(input,map);",
      "info" : "ExpressionStatement[79268-79285]:ExpressionStatement[66222-66245]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[79280-79283]:SimpleName[51964-51967]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[79302-79315]:ReturnStatement[10099-10112]"
    }, {
      "left" : "if (!firstTimeThru)",
      "right" : "if (!firstTimeThru)",
      "info" : "IfStatement[79400-79990]:IfStatement[66360-66950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79420-79990]:Block[66380-66950]"
    }, {
      "left" : "if (testResults[testIndex] == null)",
      "right" : "if (testResults[testIndex] == null)",
      "info" : "IfStatement[79434-79524]:IfStatement[66394-66484]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79438-79449]:SimpleName[66870-66881]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[79450-79459]:SimpleName[66882-66891]"
    }, {
      "left" : "testResults[testIndex] = new long[6];",
      "right" : "testResults[testIndex] = new long[6];",
      "info" : "ExpressionStatement[79487-79524]:ExpressionStatement[66447-66484]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79487-79498]:SimpleName[66783-66794]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[79499-79508]:SimpleName[66795-66804]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[79516-79520]:PrimitiveType[59628-59632]"
    }, {
      "left" : "testResults[testIndex][0] += (addTime / unsortedCount);",
      "right" : "testResults[testIndex][0] += (addTime / unsortedCount);",
      "info" : "ExpressionStatement[79537-79592]:ExpressionStatement[66497-66552]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79537-79548]:SimpleName[66708-66719]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[79549-79558]:SimpleName[66720-66729]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[79577-79590]:SimpleName[66827-66840]"
    }, {
      "left" : "testResults[testIndex][1] += (removeTime / unsortedCount);",
      "right" : "testResults[testIndex][1] += (removeTime / unsortedCount);",
      "info" : "ExpressionStatement[79605-79663]:ExpressionStatement[66565-66623]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79605-79616]:SimpleName[66636-66647]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[79617-79626]:SimpleName[66648-66657]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[79628-79629]:NumberLiteral[36468-36469]"
    }, {
      "left" : "removeTime",
      "right" : "removeTime",
      "info" : "SimpleName[79635-79645]:SimpleName[52847-52857]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[79648-79661]:SimpleName[66910-66923]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79676-79687]:SimpleName[66565-66576]"
    }, {
      "left" : "testResults[testIndex][2] += (addSortedTime / sortedCount);",
      "right" : "testResults[testIndex][2] += (addSortedTime / sortedCount);",
      "info" : "ExpressionStatement[79676-79735]:ExpressionStatement[66636-66695]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[79688-79697]:SimpleName[66577-66586]"
    }, {
      "left" : "addSortedTime",
      "right" : "addSortedTime",
      "info" : "SimpleName[79706-79719]:SimpleName[63671-63684]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[79722-79733]:SimpleName[62653-62664]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79748-79759]:SimpleName[66497-66508]"
    }, {
      "left" : "testResults[testIndex][3] += (removeSortedTime / sortedCount);",
      "right" : "testResults[testIndex][3] += (removeSortedTime / sortedCount);",
      "info" : "ExpressionStatement[79748-79810]:ExpressionStatement[66708-66770]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[79760-79769]:SimpleName[66509-66518]"
    }, {
      "left" : "removeSortedTime",
      "right" : "removeSortedTime",
      "info" : "SimpleName[79778-79794]:SimpleName[65710-65726]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[79797-79808]:SimpleName[60604-60615]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79823-79834]:SimpleName[66447-66458]"
    }, {
      "left" : "testResults[testIndex][4] += (lookupTime / (unsortedCount + sortedCount));",
      "right" : "testResults[testIndex][4] += (lookupTime / (unsortedCount + sortedCount));",
      "info" : "ExpressionStatement[79823-79897]:ExpressionStatement[66783-66857]"
    }, {
      "left" : "testIndex",
      "right" : "testIndex",
      "info" : "SimpleName[79835-79844]:SimpleName[66459-66468]"
    }, {
      "left" : "lookupTime",
      "right" : "lookupTime",
      "info" : "SimpleName[79853-79863]:SimpleName[42061-42071]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[79867-79880]:SimpleName[66608-66621]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[79883-79894]:SimpleName[66926-66937]"
    }, {
      "left" : "testResults",
      "right" : "testResults",
      "info" : "SimpleName[79910-79921]:SimpleName[66398-66409]"
    }, {
      "left" : "testResults[testIndex][5] += (memory / (unsortedCount + sortedCount));",
      "right" : "testResults[testIndex][5] += (memory / (unsortedCount + sortedCount));",
      "info" : "ExpressionStatement[79910-79980]:ExpressionStatement[66870-66940]"
    }, {
      "left" : "memory",
      "right" : "memory",
      "info" : "SimpleName[79940-79946]:SimpleName[41189-41195]"
    }, {
      "left" : "unsortedCount",
      "right" : "unsortedCount",
      "info" : "SimpleName[79950-79963]:SimpleName[66537-66550]"
    }, {
      "left" : "sortedCount",
      "right" : "sortedCount",
      "info" : "SimpleName[79966-79977]:SimpleName[66843-66854]"
    }, {
      "left" : "if (debug > 1)",
      "right" : "if (debug > 1)",
      "info" : "IfStatement[80000-80036]:IfStatement[66960-66996]"
    }, {
      "left" : "debug",
      "right" : "debug",
      "info" : "SimpleName[80004-80009]:SimpleName[57099-57104]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[80012-80013]:NumberLiteral[66588-66589]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[80015-80036]:ExpressionStatement[66975-66996]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[80046-80058]:ReturnStatement[67006-67018]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[80070-80077]:Modifier[67030-67037]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[80078-80084]:Modifier[67038-67044]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[80085-80090]:Modifier[67045-67050]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[80091-80097]:SimpleType[24948-24954]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[80091-80097]:SimpleType[67051-67057]"
    }, {
      "left" : "getTestResults",
      "right" : "getTestResults",
      "info" : "SimpleName[80098-80112]:SimpleName[67058-67072]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[80113-80123]:SingleVariableDeclaration[67073-67083]"
    }, {
      "left" : "String[] names",
      "right" : "String[] names",
      "info" : "SingleVariableDeclaration[80125-80139]:SingleVariableDeclaration[67085-67099]"
    }, {
      "left" : "long[][] results",
      "right" : "long[][] results",
      "info" : "SingleVariableDeclaration[80141-80157]:SingleVariableDeclaration[67101-67117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80159-84613]:Block[67119-71596]"
    }, {
      "left" : "StringBuilder resultsBuilder = new StringBuilder();",
      "right" : "StringBuilder resultsBuilder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[80169-80220]:VariableDeclarationStatement[67129-67180]"
    }, {
      "left" : "String format = \"%-35s %-10s %-15s %-15s %-25s %-15s %-15s\\n\";",
      "right" : "String format = \"%-35s %-10s %-15s %-15s %-25s %-15s %-15s\\n\";",
      "info" : "VariableDeclarationStatement[80229-80291]:VariableDeclarationStatement[67189-67251]"
    }, {
      "left" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "right" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "info" : "VariableDeclarationStatement[80300-80363]:VariableDeclarationStatement[67260-67323]"
    }, {
      "left" : "formatter.format(format, \"Data Structure\", \"Add time\", \"Remove time\", \"Sorted add time\", \"Sorted remove time\", \"Lookup time\", \"Size\");",
      "right" : "formatter.format(format, \"Data Structure (\"+ARRAY_SIZE+\" items)\", \"Add time\", \"Remove time\", \"Sorted add time\", \"Sorted remove time\", \"Lookup time\", \"Size\");",
      "info" : "ExpressionStatement[80372-80506]:ExpressionStatement[67332-67489]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[80389-80395]:SimpleName[67349-67355]"
    }, {
      "left" : "\"Data Structure\"",
      "right" : "\" items)\"",
      "info" : "StringLiteral[80397-80413]:StringLiteral[67387-67396]"
    }, {
      "left" : "\"Add time\"",
      "right" : "\"Add time\"",
      "info" : "StringLiteral[80415-80425]:StringLiteral[67398-67408]"
    }, {
      "left" : "\"Remove time\"",
      "right" : "\"Remove time\"",
      "info" : "StringLiteral[80427-80440]:StringLiteral[67410-67423]"
    }, {
      "left" : "\"Sorted add time\"",
      "right" : "\"Sorted add time\"",
      "info" : "StringLiteral[80442-80459]:StringLiteral[67425-67442]"
    }, {
      "left" : "\"Sorted remove time\"",
      "right" : "\"Sorted remove time\"",
      "info" : "StringLiteral[80461-80481]:StringLiteral[67444-67464]"
    }, {
      "left" : "\"Lookup time\"",
      "right" : "\"Lookup time\"",
      "info" : "StringLiteral[80483-80496]:StringLiteral[67466-67479]"
    }, {
      "left" : "\"Size\"",
      "right" : "\"Size\"",
      "info" : "StringLiteral[80498-80504]:StringLiteral[67481-67487]"
    }, {
      "left" : "double KB = 1000;",
      "right" : "double KB = 1000;",
      "info" : "VariableDeclarationStatement[80516-80533]:VariableDeclarationStatement[67499-67516]"
    }, {
      "left" : "double MB = 1000 * KB;",
      "right" : "double MB = 1000 * KB;",
      "info" : "VariableDeclarationStatement[80542-80564]:VariableDeclarationStatement[67525-67547]"
    }, {
      "left" : "double MILLIS = 1000000;",
      "right" : "double MILLIS = 1000000;",
      "info" : "VariableDeclarationStatement[80574-80598]:VariableDeclarationStatement[67557-67581]"
    }, {
      "left" : "double SECOND = 1000;",
      "right" : "double SECOND = 1000;",
      "info" : "VariableDeclarationStatement[80607-80628]:VariableDeclarationStatement[67590-67611]"
    }, {
      "left" : "double MINUTES = 60 * SECOND;",
      "right" : "double MINUTES = 60 * SECOND;",
      "info" : "VariableDeclarationStatement[80637-80666]:VariableDeclarationStatement[67620-67649]"
    }, {
      "left" : "for (int i=0; i<TESTS; i++)",
      "right" : "for (int i=0; i<TESTS; i++)",
      "info" : "ForStatement[80676-84537]:ForStatement[67659-71520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80704-84537]:Block[67687-71520]"
    }, {
      "left" : "String name = names[i];",
      "right" : "String name = names[i];",
      "info" : "VariableDeclarationStatement[80718-80741]:VariableDeclarationStatement[67701-67724]"
    }, {
      "left" : "long[] result = results[i];",
      "right" : "long[] result = results[i];",
      "info" : "VariableDeclarationStatement[80754-80781]:VariableDeclarationStatement[67737-67764]"
    }, {
      "left" : "if (name != null && result != null)",
      "right" : "if (name != null && result != null)",
      "info" : "IfStatement[80794-84527]:IfStatement[67777-71510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80830-84527]:Block[67813-71510]"
    }, {
      "left" : "double addTime = result[0] / MILLIS;",
      "right" : "double addTime = result[0] / MILLIS;",
      "info" : "VariableDeclarationStatement[80848-80884]:VariableDeclarationStatement[67831-67867]"
    }, {
      "left" : "addTime /= number;",
      "right" : "addTime /= number;",
      "info" : "ExpressionStatement[80901-80919]:ExpressionStatement[67884-67902]"
    }, {
      "left" : "String addTimeString = null;",
      "right" : "String addTimeString = null;",
      "info" : "VariableDeclarationStatement[80936-80964]:VariableDeclarationStatement[67919-67947]"
    }, {
      "left" : "if (addTime > MINUTES)",
      "right" : "if (addTime > MINUTES)",
      "info" : "IfStatement[80981-81376]:IfStatement[67964-68359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81004-81130]:Block[67987-68113]"
    }, {
      "left" : "addTime /= MINUTES;",
      "right" : "addTime /= MINUTES;",
      "info" : "ExpressionStatement[81026-81045]:ExpressionStatement[68009-68028]"
    }, {
      "left" : "addTimeString = FORMAT.format(addTime) + \" m\";",
      "right" : "addTimeString = FORMAT.format(addTime) + \" m\";",
      "info" : "ExpressionStatement[81066-81112]:ExpressionStatement[68049-68095]"
    }, {
      "left" : "if (addTime > SECOND)",
      "right" : "if (addTime > SECOND)",
      "info" : "IfStatement[81136-81376]:IfStatement[68119-68359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81158-81283]:Block[68141-68266]"
    }, {
      "left" : "addTime /= SECOND;",
      "right" : "addTime /= SECOND;",
      "info" : "ExpressionStatement[81180-81198]:ExpressionStatement[68163-68181]"
    }, {
      "left" : "addTimeString = FORMAT.format(addTime) + \" s\";",
      "right" : "addTimeString = FORMAT.format(addTime) + \" s\";",
      "info" : "ExpressionStatement[81219-81265]:ExpressionStatement[68202-68248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81289-81376]:Block[68272-68359]"
    }, {
      "left" : "addTimeString = FORMAT.format(addTime) + \" ms\";",
      "right" : "addTimeString = FORMAT.format(addTime) + \" ms\";",
      "info" : "ExpressionStatement[81311-81358]:ExpressionStatement[68294-68341]"
    }, {
      "left" : "double removeTime = result[1] / MILLIS;",
      "right" : "double removeTime = result[1] / MILLIS;",
      "info" : "VariableDeclarationStatement[81394-81433]:VariableDeclarationStatement[68377-68416]"
    }, {
      "left" : "removeTime /= number;",
      "right" : "removeTime /= number;",
      "info" : "ExpressionStatement[81450-81471]:ExpressionStatement[68433-68454]"
    }, {
      "left" : "String removeTimeString = null;",
      "right" : "String removeTimeString = null;",
      "info" : "VariableDeclarationStatement[81488-81519]:VariableDeclarationStatement[68471-68502]"
    }, {
      "left" : "if (removeTime > MINUTES)",
      "right" : "if (removeTime > MINUTES)",
      "info" : "IfStatement[81536-81961]:IfStatement[68519-68944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81562-81697]:Block[68545-68680]"
    }, {
      "left" : "removeTime /= MINUTES;",
      "right" : "removeTime /= MINUTES;",
      "info" : "ExpressionStatement[81584-81606]:ExpressionStatement[68567-68589]"
    }, {
      "left" : "removeTimeString = FORMAT.format(removeTime) + \" m\";",
      "right" : "removeTimeString = FORMAT.format(removeTime) + \" m\";",
      "info" : "ExpressionStatement[81627-81679]:ExpressionStatement[68610-68662]"
    }, {
      "left" : "if (removeTime > SECOND)",
      "right" : "if (removeTime > SECOND)",
      "info" : "IfStatement[81703-81961]:IfStatement[68686-68944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81728-81862]:Block[68711-68845]"
    }, {
      "left" : "removeTime /= SECOND;",
      "right" : "removeTime /= SECOND;",
      "info" : "ExpressionStatement[81750-81771]:ExpressionStatement[68733-68754]"
    }, {
      "left" : "removeTimeString = FORMAT.format(removeTime) + \" s\";",
      "right" : "removeTimeString = FORMAT.format(removeTime) + \" s\";",
      "info" : "ExpressionStatement[81792-81844]:ExpressionStatement[68775-68827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81868-81961]:Block[68851-68944]"
    }, {
      "left" : "removeTimeString = FORMAT.format(removeTime) + \" ms\";",
      "right" : "removeTimeString = FORMAT.format(removeTime) + \" ms\";",
      "info" : "ExpressionStatement[81890-81943]:ExpressionStatement[68873-68926]"
    }, {
      "left" : "double addSortedTime = result[2] / MILLIS;",
      "right" : "double addSortedTime = result[2] / MILLIS;",
      "info" : "VariableDeclarationStatement[82005-82047]:VariableDeclarationStatement[68988-69030]"
    }, {
      "left" : "addSortedTime /= number;",
      "right" : "addSortedTime /= number;",
      "info" : "ExpressionStatement[82064-82088]:ExpressionStatement[69047-69071]"
    }, {
      "left" : "String sortedAddTimeString = null;",
      "right" : "String sortedAddTimeString = null;",
      "info" : "VariableDeclarationStatement[82105-82139]:VariableDeclarationStatement[69088-69122]"
    }, {
      "left" : "if (addSortedTime > MINUTES)",
      "right" : "if (addSortedTime > MINUTES)",
      "info" : "IfStatement[82156-82611]:IfStatement[69139-69594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82185-82329]:Block[69168-69312]"
    }, {
      "left" : "addSortedTime /= MINUTES;",
      "right" : "addSortedTime /= MINUTES;",
      "info" : "ExpressionStatement[82207-82232]:ExpressionStatement[69190-69215]"
    }, {
      "left" : "sortedAddTimeString = FORMAT.format(addSortedTime) + \" m\";",
      "right" : "sortedAddTimeString = FORMAT.format(addSortedTime) + \" m\";",
      "info" : "ExpressionStatement[82253-82311]:ExpressionStatement[69236-69294]"
    }, {
      "left" : "if (addSortedTime > SECOND)",
      "right" : "if (addSortedTime > SECOND)",
      "info" : "IfStatement[82335-82611]:IfStatement[69318-69594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82363-82506]:Block[69346-69489]"
    }, {
      "left" : "addSortedTime /= SECOND;",
      "right" : "addSortedTime /= SECOND;",
      "info" : "ExpressionStatement[82385-82409]:ExpressionStatement[69368-69392]"
    }, {
      "left" : "sortedAddTimeString = FORMAT.format(addSortedTime) + \" s\";",
      "right" : "sortedAddTimeString = FORMAT.format(addSortedTime) + \" s\";",
      "info" : "ExpressionStatement[82430-82488]:ExpressionStatement[69413-69471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82512-82611]:Block[69495-69594]"
    }, {
      "left" : "sortedAddTimeString = FORMAT.format(addSortedTime) + \" ms\";",
      "right" : "sortedAddTimeString = FORMAT.format(addSortedTime) + \" ms\";",
      "info" : "ExpressionStatement[82534-82593]:ExpressionStatement[69517-69576]"
    }, {
      "left" : "double removeSortedTime = result[3] / MILLIS;",
      "right" : "double removeSortedTime = result[3] / MILLIS;",
      "info" : "VariableDeclarationStatement[82629-82674]:VariableDeclarationStatement[69612-69657]"
    }, {
      "left" : "removeSortedTime /= number;",
      "right" : "removeSortedTime /= number;",
      "info" : "ExpressionStatement[82691-82718]:ExpressionStatement[69674-69701]"
    }, {
      "left" : "String sortedRemoveTimeString = null;",
      "right" : "String sortedRemoveTimeString = null;",
      "info" : "VariableDeclarationStatement[82735-82772]:VariableDeclarationStatement[69718-69755]"
    }, {
      "left" : "if (removeSortedTime > MINUTES)",
      "right" : "if (removeSortedTime > MINUTES)",
      "info" : "IfStatement[82789-83274]:IfStatement[69772-70257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82821-82974]:Block[69804-69957]"
    }, {
      "left" : "removeSortedTime /= MINUTES;",
      "right" : "removeSortedTime /= MINUTES;",
      "info" : "ExpressionStatement[82843-82871]:ExpressionStatement[69826-69854]"
    }, {
      "left" : "sortedRemoveTimeString = FORMAT.format(removeSortedTime) + \" m\";",
      "right" : "sortedRemoveTimeString = FORMAT.format(removeSortedTime) + \" m\";",
      "info" : "ExpressionStatement[82892-82956]:ExpressionStatement[69875-69939]"
    }, {
      "left" : "if (removeSortedTime > SECOND)",
      "right" : "if (removeSortedTime > SECOND)",
      "info" : "IfStatement[82980-83274]:IfStatement[69963-70257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83011-83163]:Block[69994-70146]"
    }, {
      "left" : "removeSortedTime /= SECOND;",
      "right" : "removeSortedTime /= SECOND;",
      "info" : "ExpressionStatement[83033-83060]:ExpressionStatement[70016-70043]"
    }, {
      "left" : "sortedRemoveTimeString = FORMAT.format(removeSortedTime) + \" s\";",
      "right" : "sortedRemoveTimeString = FORMAT.format(removeSortedTime) + \" s\";",
      "info" : "ExpressionStatement[83081-83145]:ExpressionStatement[70064-70128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83169-83274]:Block[70152-70257]"
    }, {
      "left" : "sortedRemoveTimeString = FORMAT.format(removeSortedTime) + \" ms\";",
      "right" : "sortedRemoveTimeString = FORMAT.format(removeSortedTime) + \" ms\";",
      "info" : "ExpressionStatement[83191-83256]:ExpressionStatement[70174-70239]"
    }, {
      "left" : "double lookupTime = result[4] / MILLIS;",
      "right" : "double lookupTime = result[4] / MILLIS;",
      "info" : "VariableDeclarationStatement[83292-83331]:VariableDeclarationStatement[70275-70314]"
    }, {
      "left" : "lookupTime /= number;",
      "right" : "lookupTime /= number;",
      "info" : "ExpressionStatement[83348-83369]:ExpressionStatement[70331-70352]"
    }, {
      "left" : "String lookupTimeString = null;",
      "right" : "String lookupTimeString = null;",
      "info" : "VariableDeclarationStatement[83386-83417]:VariableDeclarationStatement[70369-70400]"
    }, {
      "left" : "if (lookupTime > MINUTES)",
      "right" : "if (lookupTime > MINUTES)",
      "info" : "IfStatement[83434-83859]:IfStatement[70417-70842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83460-83595]:Block[70443-70578]"
    }, {
      "left" : "lookupTime /= MINUTES;",
      "right" : "lookupTime /= MINUTES;",
      "info" : "ExpressionStatement[83482-83504]:ExpressionStatement[70465-70487]"
    }, {
      "left" : "lookupTimeString = FORMAT.format(lookupTime) + \" m\";",
      "right" : "lookupTimeString = FORMAT.format(lookupTime) + \" m\";",
      "info" : "ExpressionStatement[83525-83577]:ExpressionStatement[70508-70560]"
    }, {
      "left" : "if (lookupTime > SECOND)",
      "right" : "if (lookupTime > SECOND)",
      "info" : "IfStatement[83601-83859]:IfStatement[70584-70842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83626-83760]:Block[70609-70743]"
    }, {
      "left" : "lookupTime /= SECOND;",
      "right" : "lookupTime /= SECOND;",
      "info" : "ExpressionStatement[83648-83669]:ExpressionStatement[70631-70652]"
    }, {
      "left" : "lookupTimeString = FORMAT.format(lookupTime) + \" s\";",
      "right" : "lookupTimeString = FORMAT.format(lookupTime) + \" s\";",
      "info" : "ExpressionStatement[83690-83742]:ExpressionStatement[70673-70725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83766-83859]:Block[70749-70842]"
    }, {
      "left" : "lookupTimeString = FORMAT.format(lookupTime) + \" ms\";",
      "right" : "lookupTimeString = FORMAT.format(lookupTime) + \" ms\";",
      "info" : "ExpressionStatement[83788-83841]:ExpressionStatement[70771-70824]"
    }, {
      "left" : "double size = result[5];",
      "right" : "double size = result[5];",
      "info" : "VariableDeclarationStatement[83877-83901]:VariableDeclarationStatement[70860-70884]"
    }, {
      "left" : "size /= number;",
      "right" : "size /= number;",
      "info" : "ExpressionStatement[83918-83933]:ExpressionStatement[70901-70916]"
    }, {
      "left" : "String sizeString = null;",
      "right" : "String sizeString = null;",
      "info" : "VariableDeclarationStatement[83950-83975]:VariableDeclarationStatement[70933-70958]"
    }, {
      "left" : "if (size > MB)",
      "right" : "if (size > MB)",
      "info" : "IfStatement[83992-84356]:IfStatement[70975-71339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84007-84126]:Block[70990-71109]"
    }, {
      "left" : "size = size / MB;",
      "right" : "size = size / MB;",
      "info" : "ExpressionStatement[84029-84046]:ExpressionStatement[71012-71029]"
    }, {
      "left" : "sizeString = FORMAT.format(size) + \" MB\";",
      "right" : "sizeString = FORMAT.format(size) + \" MB\";",
      "info" : "ExpressionStatement[84067-84108]:ExpressionStatement[71050-71091]"
    }, {
      "left" : "if (size > KB)",
      "right" : "if (size > KB)",
      "info" : "IfStatement[84132-84356]:IfStatement[71115-71339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84147-84266]:Block[71130-71249]"
    }, {
      "left" : "size = size / KB;",
      "right" : "size = size / KB;",
      "info" : "ExpressionStatement[84169-84186]:ExpressionStatement[71152-71169]"
    }, {
      "left" : "sizeString = FORMAT.format(size) + \" KB\";",
      "right" : "sizeString = FORMAT.format(size) + \" KB\";",
      "info" : "ExpressionStatement[84207-84248]:ExpressionStatement[71190-71231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84272-84356]:Block[71255-71339]"
    }, {
      "left" : "sizeString = FORMAT.format(size) + \" Bytes\";",
      "right" : "sizeString = FORMAT.format(size) + \" Bytes\";",
      "info" : "ExpressionStatement[84294-84338]:ExpressionStatement[71277-71321]"
    }, {
      "left" : "formatter.format(format, name, addTimeString, removeTimeString, sortedAddTimeString, sortedRemoveTimeString, lookupTimeString, sizeString);",
      "right" : "formatter.format(format, name, addTimeString, removeTimeString, sortedAddTimeString, sortedRemoveTimeString, lookupTimeString, sizeString);",
      "info" : "ExpressionStatement[84374-84513]:ExpressionStatement[71357-71496]"
    }, {
      "left" : "formatter.close();",
      "right" : "formatter.close();",
      "info" : "ExpressionStatement[84546-84564]:ExpressionStatement[71529-71547]"
    }, {
      "left" : "return resultsBuilder.toString();",
      "right" : "return resultsBuilder.toString();",
      "info" : "ReturnStatement[84574-84607]:ReturnStatement[71557-71590]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[84619-84626]:Modifier[71602-71609]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[84627-84633]:Modifier[71610-71616]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[84634-84639]:Modifier[71617-71622]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[84640-84644]:PrimitiveType[71623-71627]"
    }, {
      "left" : "getMemoryUse",
      "right" : "getMemoryUse",
      "info" : "SimpleName[84645-84657]:SimpleName[71628-71640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84660-84892]:Block[71643-71875]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[84670-84689]:ExpressionStatement[71653-71672]"
    }, {
      "left" : "long totalMemory = Runtime.getRuntime().totalMemory();",
      "right" : "long totalMemory = Runtime.getRuntime().totalMemory();",
      "info" : "VariableDeclarationStatement[84698-84752]:VariableDeclarationStatement[71681-71735]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[84762-84781]:ExpressionStatement[71745-71764]"
    }, {
      "left" : "long freeMemory = Runtime.getRuntime().freeMemory();",
      "right" : "long freeMemory = Runtime.getRuntime().freeMemory();",
      "info" : "VariableDeclarationStatement[84790-84842]:VariableDeclarationStatement[71773-71825]"
    }, {
      "left" : "return (totalMemory - freeMemory);",
      "right" : "return (totalMemory - freeMemory);",
      "info" : "ReturnStatement[84852-84886]:ReturnStatement[71835-71869]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[84898-84905]:Modifier[71881-71888]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[84906-84912]:Modifier[71889-71895]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[84913-84918]:Modifier[71896-71901]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[84919-84923]:PrimitiveType[71902-71906]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[84924-84940]:SimpleName[71907-71923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84943-85028]:Block[71926-72011]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[84953-84970]:ExpressionStatement[71936-71953]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[84979-84996]:ExpressionStatement[71962-71979]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[85005-85022]:ExpressionStatement[71988-72005]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[85088-85095]:Modifier[72071-72078]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[85096-85102]:Modifier[72079-72085]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[85103-85108]:Modifier[72086-72091]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[85109-85113]:PrimitiveType[72092-72096]"
    }, {
      "left" : "collectGarbage",
      "right" : "collectGarbage",
      "info" : "SimpleName[85114-85128]:SimpleName[72097-72111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85131-85439]:Block[72114-72422]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[85141-85433]:TryStatement[72124-72416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85145-85355]:Block[72128-72338]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[85159-85171]:ExpressionStatement[72142-72154]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[85184-85196]:ExpressionStatement[72167-72179]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[85209-85221]:ExpressionStatement[72192-72204]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[85234-85264]:ExpressionStatement[72217-72247]"
    }, {
      "left" : "System.runFinalization();",
      "right" : "System.runFinalization();",
      "info" : "ExpressionStatement[85277-85302]:ExpressionStatement[72260-72285]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[85315-85345]:ExpressionStatement[72298-72328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85388-85433]:Block[72371-72416]"
    }, {
      "left" : "ex.printStackTrace();",
      "right" : "ex.printStackTrace();",
      "info" : "ExpressionStatement[85402-85423]:ExpressionStatement[72385-72406]"
    } ]
  },
  "interFileMappings" : { }
}