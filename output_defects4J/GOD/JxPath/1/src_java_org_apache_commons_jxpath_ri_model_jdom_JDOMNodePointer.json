{
  "matchedElements" : [
 {
    "left" : "class : JDOMNodePointer",
    "right" : "class : JDOMNodePointer",
    "info" : "TypeDeclaration[1823-24937]:TypeDeclaration[1823-24969]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[1987-2054]:FieldDeclaration[1987-2054]"
  }, {
    "left" : "node",
    "right" : "node",
    "info" : "FieldDeclaration[2064-2084]:FieldDeclaration[2064-2084]"
  }, {
    "left" : "id",
    "right" : "id",
    "info" : "FieldDeclaration[2089-2107]:FieldDeclaration[2089-2107]"
  }, {
    "left" : "XML_NAMESPACE_URI",
    "right" : "XML_NAMESPACE_URI",
    "info" : "FieldDeclaration[2113-2211]:FieldDeclaration[2113-2211]"
  }, {
    "left" : "XMLNS_NAMESPACE_URI",
    "right" : "XMLNS_NAMESPACE_URI",
    "info" : "FieldDeclaration[2216-2309]:FieldDeclaration[2216-2309]"
  }, {
    "left" : "public JDOMNodePointer(node , locale )",
    "right" : "public JDOMNodePointer(node , locale )",
    "info" : "MethodDeclaration[2315-2428]:MethodDeclaration[2315-2428]"
  }, {
    "left" : "public JDOMNodePointer(node , locale , id )",
    "right" : "public JDOMNodePointer(node , locale , id )",
    "info" : "MethodDeclaration[2434-2580]:MethodDeclaration[2434-2580]"
  }, {
    "left" : "public JDOMNodePointer(parent , node )",
    "right" : "public JDOMNodePointer(parent , node )",
    "info" : "MethodDeclaration[2586-2698]:MethodDeclaration[2586-2698]"
  }, {
    "left" : "public childIterator(test , reverse boolean, startWith ) : ",
    "right" : "public childIterator(test , reverse boolean, startWith ) : ",
    "info" : "MethodDeclaration[2704-2899]:MethodDeclaration[2704-2899]"
  }, {
    "left" : "public attributeIterator(name ) : ",
    "right" : "public attributeIterator(name ) : ",
    "info" : "MethodDeclaration[2905-3016]:MethodDeclaration[2905-3016]"
  }, {
    "left" : "public namespaceIterator() : ",
    "right" : "public namespaceIterator() : ",
    "info" : "MethodDeclaration[3022-3117]:MethodDeclaration[3022-3117]"
  }, {
    "left" : "public namespacePointer(prefix ) : ",
    "right" : "public namespacePointer(prefix ) : ",
    "info" : "MethodDeclaration[3123-3236]:MethodDeclaration[3123-3236]"
  }, {
    "left" : "public getNamespaceURI() : ",
    "right" : "public getNamespaceURI() : ",
    "info" : "MethodDeclaration[3242-3319]:MethodDeclaration[3242-3319]"
  }, {
    "left" : "private getNamespaceURI(node ) : ",
    "right" : "private getNamespaceURI(node ) : ",
    "info" : "MethodDeclaration[3329-3665]:MethodDeclaration[3329-3665]"
  }, {
    "left" : "public getNamespaceURI(prefix ) : ",
    "right" : "public getNamespaceURI(prefix ) : ",
    "info" : "MethodDeclaration[3671-4242]:MethodDeclaration[3671-4242]"
  }, {
    "left" : "public compareChildNodePointers(pointer1 , pointer2 ) : int",
    "right" : "public compareChildNodePointers(pointer1 , pointer2 ) : int",
    "info" : "MethodDeclaration[4248-5842]:MethodDeclaration[4248-5842]"
  }, {
    "left" : "public getBaseValue() : ",
    "right" : "public getBaseValue() : ",
    "info" : "MethodDeclaration[5849-5996]:MethodDeclaration[5849-5996]"
  }, {
    "left" : "public isCollection() : boolean",
    "right" : "public isCollection() : boolean",
    "info" : "MethodDeclaration[6002-6061]:MethodDeclaration[6002-6061]"
  }, {
    "left" : "public getLength() : int",
    "right" : "public getLength() : int",
    "info" : "MethodDeclaration[6071-6119]:MethodDeclaration[6071-6119]"
  }, {
    "left" : "public isLeaf() : boolean",
    "right" : "public isLeaf() : boolean",
    "info" : "MethodDeclaration[6129-6410]:MethodDeclaration[6129-6410]"
  }, {
    "left" : "public getName() : ",
    "right" : "public getName() : ",
    "info" : "MethodDeclaration[6416-6984]:MethodDeclaration[6416-6984]"
  }, {
    "left" : "public getImmediateNode() : ",
    "right" : "public getImmediateNode() : ",
    "info" : "MethodDeclaration[6990-7136]:MethodDeclaration[6990-7136]"
  }, {
    "left" : "public getValue() : ",
    "right" : "public getValue() : ",
    "info" : "MethodDeclaration[7142-7953]:MethodDeclaration[7142-7953]"
  }, {
    "left" : "public setValue(value ) : void",
    "right" : "public setValue(value ) : void",
    "info" : "MethodDeclaration[7959-9694]:MethodDeclaration[7959-9694]"
  }, {
    "left" : "private addContent(content ) : void",
    "right" : "private addContent(content ) : void",
    "info" : "MethodDeclaration[9707-10780]:MethodDeclaration[9707-10780]"
  }, {
    "left" : "public testNode(test ) : boolean",
    "right" : "public testNode(test ) : boolean",
    "info" : "MethodDeclaration[10790-10879]:MethodDeclaration[10790-10879]"
  }, {
    "left" : "public testNode(pointer , node , test ) : boolean",
    "right" : "public testNode(pointer , node , test ) : boolean",
    "info" : "MethodDeclaration[10889-12851]:MethodDeclaration[10889-12883]"
  }, {
    "left" : "private equalStrings(s1 , s2 ) : boolean",
    "right" : "private equalStrings(s1 , s2 ) : boolean",
    "info" : "MethodDeclaration[12857-13191]:MethodDeclaration[12889-13223]"
  }, {
    "left" : "public getPrefix(node ) : ",
    "right" : "public getPrefix(node ) : ",
    "info" : "MethodDeclaration[13197-13658]:MethodDeclaration[13229-13690]"
  }, {
    "left" : "public getLocalName(node ) : ",
    "right" : "public getLocalName(node ) : ",
    "info" : "MethodDeclaration[13668-13944]:MethodDeclaration[13700-13976]"
  }, {
    "left" : "public isLanguage(lang ) : boolean",
    "right" : "public isLanguage(lang ) : boolean",
    "info" : "MethodDeclaration[13950-14409]:MethodDeclaration[13982-14441]"
  }, {
    "left" : "protected getLanguage() : ",
    "right" : "protected getLanguage() : ",
    "info" : "MethodDeclaration[14415-14874]:MethodDeclaration[14447-14906]"
  }, {
    "left" : "private nodeParent(node ) : ",
    "right" : "private nodeParent(node ) : ",
    "info" : "MethodDeclaration[14884-15629]:MethodDeclaration[14916-15661]"
  }, {
    "left" : "public createChild(context , name , index int) : ",
    "right" : "public createChild(context , name , index int) : ",
    "info" : "MethodDeclaration[15635-16744]:MethodDeclaration[15667-16776]"
  }, {
    "left" : "public createChild(context , name , index int, value ) : ",
    "right" : "public createChild(context , name , index int, value ) : ",
    "info" : "MethodDeclaration[16750-16975]:MethodDeclaration[16782-17007]"
  }, {
    "left" : "public createAttribute(context , name ) : ",
    "right" : "public createAttribute(context , name ) : ",
    "info" : "MethodDeclaration[16981-17985]:MethodDeclaration[17013-18017]"
  }, {
    "left" : "public remove() : void",
    "right" : "public remove() : void",
    "info" : "MethodDeclaration[17991-18215]:MethodDeclaration[18023-18247]"
  }, {
    "left" : "public asPath() : ",
    "right" : "public asPath() : ",
    "info" : "MethodDeclaration[18221-20664]:MethodDeclaration[18253-20696]"
  }, {
    "left" : "private escape(string ) : ",
    "right" : "private escape(string ) : ",
    "info" : "MethodDeclaration[20670-21273]:MethodDeclaration[20702-21305]"
  }, {
    "left" : "private getRelativePositionByName() : int",
    "right" : "private getRelativePositionByName() : int",
    "info" : "MethodDeclaration[21279-22098]:MethodDeclaration[21311-22130]"
  }, {
    "left" : "private getRelativePositionOfElement() : int",
    "right" : "private getRelativePositionOfElement() : int",
    "info" : "MethodDeclaration[22108-22790]:MethodDeclaration[22140-22822]"
  }, {
    "left" : "private getRelativePositionOfTextNode() : int",
    "right" : "private getRelativePositionOfTextNode() : int",
    "info" : "MethodDeclaration[22796-23493]:MethodDeclaration[22828-23525]"
  }, {
    "left" : "private getRelativePositionOfPI(target ) : int",
    "right" : "private getRelativePositionOfPI(target ) : int",
    "info" : "MethodDeclaration[23499-24204]:MethodDeclaration[23531-24236]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[24210-24285]:MethodDeclaration[24242-24317]"
  }, {
    "left" : "public equals(object ) : boolean",
    "right" : "public equals(object ) : boolean",
    "info" : "MethodDeclaration[24291-24583]:MethodDeclaration[24323-24615]"
  }, {
    "left" : "private getAbstractFactory(context ) : ",
    "right" : "private getAbstractFactory(context ) : ",
    "info" : "MethodDeclaration[24588-24935]:MethodDeclaration[24620-24967]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1932-1938]:Modifier[1932-1938]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1939-1944]:TYPE_DECLARATION_KIND[1939-1944]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2315-2321]:Modifier[2315-2321]"
  }, {
    "left" : "JDOMNodePointer",
    "right" : "JDOMNodePointer",
    "info" : "SimpleName[2322-2337]:SimpleName[2322-2337]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[2338-2349]:SingleVariableDeclaration[2338-2349]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[2351-2364]:SingleVariableDeclaration[2351-2364]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2366-2428]:Block[2366-2428]"
  }, {
    "left" : "super(null, locale);",
    "right" : "super(null, locale);",
    "info" : "SuperConstructorInvocation[2376-2396]:SuperConstructorInvocation[2376-2396]"
  }, {
    "left" : "this.node = node;",
    "right" : "this.node = node;",
    "info" : "ExpressionStatement[2405-2422]:ExpressionStatement[2405-2422]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2434-2440]:Modifier[2434-2440]"
  }, {
    "left" : "JDOMNodePointer",
    "right" : "JDOMNodePointer",
    "info" : "SimpleName[2441-2456]:SimpleName[2441-2456]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[2457-2468]:SingleVariableDeclaration[2457-2468]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[2470-2483]:SingleVariableDeclaration[2470-2483]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[2485-2494]:SingleVariableDeclaration[2485-2494]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2496-2580]:Block[2496-2580]"
  }, {
    "left" : "super(null, locale);",
    "right" : "super(null, locale);",
    "info" : "SuperConstructorInvocation[2506-2526]:SuperConstructorInvocation[2506-2526]"
  }, {
    "left" : "this.node = node;",
    "right" : "this.node = node;",
    "info" : "ExpressionStatement[2535-2552]:ExpressionStatement[2535-2552]"
  }, {
    "left" : "this.id = id;",
    "right" : "this.id = id;",
    "info" : "ExpressionStatement[2561-2574]:ExpressionStatement[2561-2574]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2586-2592]:Modifier[2586-2592]"
  }, {
    "left" : "JDOMNodePointer",
    "right" : "JDOMNodePointer",
    "info" : "SimpleName[2593-2608]:SimpleName[2593-2608]"
  }, {
    "left" : "NodePointer parent",
    "right" : "NodePointer parent",
    "info" : "SingleVariableDeclaration[2609-2627]:SingleVariableDeclaration[2609-2627]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[2629-2640]:SingleVariableDeclaration[2629-2640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2642-2698]:Block[2642-2698]"
  }, {
    "left" : "super(parent);",
    "right" : "super(parent);",
    "info" : "SuperConstructorInvocation[2652-2666]:SuperConstructorInvocation[2652-2666]"
  }, {
    "left" : "this.node = node;",
    "right" : "this.node = node;",
    "info" : "ExpressionStatement[2675-2692]:ExpressionStatement[2675-2692]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2704-2710]:Modifier[2704-2710]"
  }, {
    "left" : "NodeIterator",
    "right" : "NodeIterator",
    "info" : "SimpleType[2711-2723]:SimpleType[2711-2723]"
  }, {
    "left" : "childIterator",
    "right" : "childIterator",
    "info" : "SimpleName[2724-2737]:SimpleName[2724-2737]"
  }, {
    "left" : "NodeTest test",
    "right" : "NodeTest test",
    "info" : "SingleVariableDeclaration[2747-2760]:SingleVariableDeclaration[2747-2760]"
  }, {
    "left" : "boolean reverse",
    "right" : "boolean reverse",
    "info" : "SingleVariableDeclaration[2770-2785]:SingleVariableDeclaration[2770-2785]"
  }, {
    "left" : "NodePointer startWith",
    "right" : "NodePointer startWith",
    "info" : "SingleVariableDeclaration[2795-2816]:SingleVariableDeclaration[2795-2816]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2823-2899]:Block[2823-2899]"
  }, {
    "left" : "return new JDOMNodeIterator(this, test, reverse, startWith);",
    "right" : "return new JDOMNodeIterator(this, test, reverse, startWith);",
    "info" : "ReturnStatement[2833-2893]:ReturnStatement[2833-2893]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2905-2911]:Modifier[2905-2911]"
  }, {
    "left" : "NodeIterator",
    "right" : "NodeIterator",
    "info" : "SimpleType[2912-2924]:SimpleType[2912-2924]"
  }, {
    "left" : "attributeIterator",
    "right" : "attributeIterator",
    "info" : "SimpleName[2925-2942]:SimpleName[2925-2942]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[2943-2953]:SingleVariableDeclaration[2943-2953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2955-3016]:Block[2955-3016]"
  }, {
    "left" : "return new JDOMAttributeIterator(this, name);",
    "right" : "return new JDOMAttributeIterator(this, name);",
    "info" : "ReturnStatement[2965-3010]:ReturnStatement[2965-3010]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3022-3028]:Modifier[3022-3028]"
  }, {
    "left" : "NodeIterator",
    "right" : "NodeIterator",
    "info" : "SimpleType[3029-3041]:SimpleType[3029-3041]"
  }, {
    "left" : "namespaceIterator",
    "right" : "namespaceIterator",
    "info" : "SimpleName[3042-3059]:SimpleName[3042-3059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3062-3117]:Block[3062-3117]"
  }, {
    "left" : "return new JDOMNamespaceIterator(this);",
    "right" : "return new JDOMNamespaceIterator(this);",
    "info" : "ReturnStatement[3072-3111]:ReturnStatement[3072-3111]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3123-3129]:Modifier[3123-3129]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[3130-3141]:SimpleType[3130-3141]"
  }, {
    "left" : "namespacePointer",
    "right" : "namespacePointer",
    "info" : "SimpleName[3142-3158]:SimpleName[3142-3158]"
  }, {
    "left" : "String prefix",
    "right" : "String prefix",
    "info" : "SingleVariableDeclaration[3159-3172]:SingleVariableDeclaration[3159-3172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3174-3236]:Block[3174-3236]"
  }, {
    "left" : "return new JDOMNamespacePointer(this, prefix);",
    "right" : "return new JDOMNamespacePointer(this, prefix);",
    "info" : "ReturnStatement[3184-3230]:ReturnStatement[3184-3230]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3242-3248]:Modifier[3242-3248]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3249-3255]:SimpleType[3249-3255]"
  }, {
    "left" : "getNamespaceURI",
    "right" : "getNamespaceURI",
    "info" : "SimpleName[3256-3271]:SimpleName[3256-3271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3274-3319]:Block[3274-3319]"
  }, {
    "left" : "return getNamespaceURI(node);",
    "right" : "return getNamespaceURI(node);",
    "info" : "ReturnStatement[3284-3313]:ReturnStatement[3284-3313]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3329-3336]:Modifier[3329-3336]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3337-3343]:Modifier[3337-3343]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3344-3350]:SimpleType[3344-3350]"
  }, {
    "left" : "getNamespaceURI",
    "right" : "getNamespaceURI",
    "info" : "SimpleName[3351-3366]:SimpleName[3351-3366]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[3367-3378]:SingleVariableDeclaration[3367-3378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3380-3665]:Block[3380-3665]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[3390-3638]:IfStatement[3390-3638]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3419-3638]:Block[3419-3638]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[3433-3466]:VariableDeclarationStatement[3433-3466]"
  }, {
    "left" : "String ns = element.getNamespaceURI();",
    "right" : "String ns = element.getNamespaceURI();",
    "info" : "VariableDeclarationStatement[3479-3517]:VariableDeclarationStatement[3479-3517]"
  }, {
    "left" : "if (ns != null && ns.equals(\"\"))",
    "right" : "if (ns != null && ns.equals(\"\"))",
    "info" : "IfStatement[3530-3605]:IfStatement[3530-3605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3563-3605]:Block[3563-3605]"
  }, {
    "left" : "ns = null;",
    "right" : "ns = null;",
    "info" : "ExpressionStatement[3581-3591]:ExpressionStatement[3581-3591]"
  }, {
    "left" : "return ns;",
    "right" : "return ns;",
    "info" : "ReturnStatement[3618-3628]:ReturnStatement[3618-3628]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[3647-3659]:ReturnStatement[3647-3659]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3671-3677]:Modifier[3671-3677]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3678-3684]:SimpleType[3678-3684]"
  }, {
    "left" : "getNamespaceURI",
    "right" : "getNamespaceURI",
    "info" : "SimpleName[3685-3700]:SimpleName[3685-3700]"
  }, {
    "left" : "String prefix",
    "right" : "String prefix",
    "info" : "SingleVariableDeclaration[3701-3714]:SingleVariableDeclaration[3701-3714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3716-4242]:Block[3716-4242]"
  }, {
    "left" : "if (node instanceof Document)",
    "right" : "if (node instanceof Document)",
    "info" : "IfStatement[3726-4215]:IfStatement[3726-4215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3756-3970]:Block[3756-3970]"
  }, {
    "left" : "Element element = ((Document)node).getRootElement();",
    "right" : "Element element = ((Document)node).getRootElement();",
    "info" : "VariableDeclarationStatement[3770-3822]:VariableDeclarationStatement[3770-3822]"
  }, {
    "left" : "Namespace ns = element.getNamespace(prefix);",
    "right" : "Namespace ns = element.getNamespace(prefix);",
    "info" : "VariableDeclarationStatement[3836-3880]:VariableDeclarationStatement[3836-3880]"
  }, {
    "left" : "if (ns != null)",
    "right" : "if (ns != null)",
    "info" : "IfStatement[3893-3960]:IfStatement[3893-3960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3909-3960]:Block[3909-3960]"
  }, {
    "left" : "return ns.getURI();",
    "right" : "return ns.getURI();",
    "info" : "ReturnStatement[3927-3946]:ReturnStatement[3927-3946]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[3992-4215]:IfStatement[3992-4215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4021-4215]:Block[4021-4215]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[4035-4068]:VariableDeclarationStatement[4035-4068]"
  }, {
    "left" : "Namespace ns = element.getNamespace(prefix);",
    "right" : "Namespace ns = element.getNamespace(prefix);",
    "info" : "VariableDeclarationStatement[4081-4125]:VariableDeclarationStatement[4081-4125]"
  }, {
    "left" : "if (ns != null)",
    "right" : "if (ns != null)",
    "info" : "IfStatement[4138-4205]:IfStatement[4138-4205]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4154-4205]:Block[4154-4205]"
  }, {
    "left" : "return ns.getURI();",
    "right" : "return ns.getURI();",
    "info" : "ReturnStatement[4172-4191]:ReturnStatement[4172-4191]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[4224-4236]:ReturnStatement[4224-4236]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4248-4254]:Modifier[4248-4254]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4255-4258]:PrimitiveType[4255-4258]"
  }, {
    "left" : "compareChildNodePointers",
    "right" : "compareChildNodePointers",
    "info" : "SimpleName[4259-4283]:SimpleName[4259-4283]"
  }, {
    "left" : "NodePointer pointer1",
    "right" : "NodePointer pointer1",
    "info" : "SingleVariableDeclaration[4293-4313]:SingleVariableDeclaration[4293-4313]"
  }, {
    "left" : "NodePointer pointer2",
    "right" : "NodePointer pointer2",
    "info" : "SingleVariableDeclaration[4323-4343]:SingleVariableDeclaration[4323-4343]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4350-5842]:Block[4350-5842]"
  }, {
    "left" : "Object node1 = pointer1.getBaseValue();",
    "right" : "Object node1 = pointer1.getBaseValue();",
    "info" : "VariableDeclarationStatement[4360-4399]:VariableDeclarationStatement[4360-4399]"
  }, {
    "left" : "Object node2 = pointer2.getBaseValue();",
    "right" : "Object node2 = pointer2.getBaseValue();",
    "info" : "VariableDeclarationStatement[4408-4447]:VariableDeclarationStatement[4408-4447]"
  }, {
    "left" : "if (node1 == node2)",
    "right" : "if (node1 == node2)",
    "info" : "IfStatement[4456-4509]:IfStatement[4456-4509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4476-4509]:Block[4476-4509]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[4490-4499]:ReturnStatement[4490-4499]"
  }, {
    "left" : "if ((node1 instanceof Attribute) && !(node2 instanceof Attribute))",
    "right" : "if ((node1 instanceof Attribute) && !(node2 instanceof Attribute))",
    "info" : "IfStatement[4519-5266]:IfStatement[4519-5266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4586-4620]:Block[4586-4620]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[4600-4610]:ReturnStatement[4600-4610]"
  }, {
    "left" : "if (\n            !(node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "right" : "if (\n            !(node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "info" : "IfStatement[4634-5266]:IfStatement[4634-5266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4714-4747]:Block[4714-4747]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[4728-4737]:ReturnStatement[4728-4737]"
  }, {
    "left" : "if (\n            (node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "right" : "if (\n            (node1 instanceof Attribute) && (node2 instanceof Attribute))",
    "info" : "IfStatement[4761-5266]:IfStatement[4761-5266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4840-5266]:Block[4840-5266]"
  }, {
    "left" : "List list = ((Element) getNode()).getAttributes();",
    "right" : "List list = ((Element) getNode()).getAttributes();",
    "info" : "VariableDeclarationStatement[4854-4904]:VariableDeclarationStatement[4854-4904]"
  }, {
    "left" : "int length = list.size();",
    "right" : "int length = list.size();",
    "info" : "VariableDeclarationStatement[4917-4942]:VariableDeclarationStatement[4917-4942]"
  }, {
    "left" : "for (int i = 0; i < length; i++)",
    "right" : "for (int i = 0; i < length; i++)",
    "info" : "ForStatement[4955-5213]:ForStatement[4955-5213]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4988-5213]:Block[4988-5213]"
  }, {
    "left" : "Object n = list.get(i);",
    "right" : "Object n = list.get(i);",
    "info" : "VariableDeclarationStatement[5006-5029]:VariableDeclarationStatement[5006-5029]"
  }, {
    "left" : "if (n == node1)",
    "right" : "if (n == node1)",
    "info" : "IfStatement[5046-5199]:IfStatement[5046-5199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5062-5112]:Block[5062-5112]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[5084-5094]:ReturnStatement[5084-5094]"
  }, {
    "left" : "if (n == node2)",
    "right" : "if (n == node2)",
    "info" : "IfStatement[5134-5199]:IfStatement[5134-5199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5150-5199]:Block[5150-5199]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[5172-5181]:ReturnStatement[5172-5181]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[5226-5235]:ReturnStatement[5226-5235]"
  }, {
    "left" : "if (!(node instanceof Element))",
    "right" : "if (!(node instanceof Element))",
    "info" : "IfStatement[5276-5484]:IfStatement[5276-5484]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5308-5484]:Block[5308-5484]"
  }, {
    "left" : "throw new RuntimeException(\n                \"JXPath internal error: \"\n                    + \"compareChildNodes called for \"\n                    + node);",
    "right" : "throw new RuntimeException(\n                \"JXPath internal error: \"\n                    + \"compareChildNodes called for \"\n                    + node);",
    "info" : "ThrowStatement[5322-5474]:ThrowStatement[5322-5474]"
  }, {
    "left" : "List children = ((Element) node).getContent();",
    "right" : "List children = ((Element) node).getContent();",
    "info" : "VariableDeclarationStatement[5494-5540]:VariableDeclarationStatement[5494-5540]"
  }, {
    "left" : "int length = children.size();",
    "right" : "int length = children.size();",
    "info" : "VariableDeclarationStatement[5549-5578]:VariableDeclarationStatement[5549-5578]"
  }, {
    "left" : "for (int i = 0; i < length; i++)",
    "right" : "for (int i = 0; i < length; i++)",
    "info" : "ForStatement[5587-5817]:ForStatement[5587-5817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5620-5817]:Block[5620-5817]"
  }, {
    "left" : "Object n = children.get(i);",
    "right" : "Object n = children.get(i);",
    "info" : "VariableDeclarationStatement[5634-5661]:VariableDeclarationStatement[5634-5661]"
  }, {
    "left" : "if (n == node1)",
    "right" : "if (n == node1)",
    "info" : "IfStatement[5674-5807]:IfStatement[5674-5807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5690-5732]:Block[5690-5732]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[5708-5718]:ReturnStatement[5708-5718]"
  }, {
    "left" : "if (n == node2)",
    "right" : "if (n == node2)",
    "info" : "IfStatement[5750-5807]:IfStatement[5750-5807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5766-5807]:Block[5766-5807]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[5784-5793]:ReturnStatement[5784-5793]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[5827-5836]:ReturnStatement[5827-5836]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5939-5945]:Modifier[5939-5945]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[5946-5952]:SimpleType[5946-5952]"
  }, {
    "left" : "getBaseValue",
    "right" : "getBaseValue",
    "info" : "SimpleName[5953-5965]:SimpleName[5953-5965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5968-5996]:Block[5968-5996]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[5978-5990]:ReturnStatement[5978-5990]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6002-6008]:Modifier[6002-6008]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6009-6016]:PrimitiveType[6009-6016]"
  }, {
    "left" : "isCollection",
    "right" : "isCollection",
    "info" : "SimpleName[6017-6029]:SimpleName[6017-6029]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6032-6061]:Block[6032-6061]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6042-6055]:ReturnStatement[6042-6055]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6071-6077]:Modifier[6071-6077]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[6078-6081]:PrimitiveType[6078-6081]"
  }, {
    "left" : "getLength",
    "right" : "getLength",
    "info" : "SimpleName[6082-6091]:SimpleName[6082-6091]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6094-6119]:Block[6094-6119]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[6104-6113]:ReturnStatement[6104-6113]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6129-6135]:Modifier[6129-6135]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6136-6143]:PrimitiveType[6136-6143]"
  }, {
    "left" : "isLeaf",
    "right" : "isLeaf",
    "info" : "SimpleName[6144-6150]:SimpleName[6144-6150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6153-6410]:Block[6153-6410]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[6163-6383]:IfStatement[6163-6383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6192-6265]:Block[6192-6265]"
  }, {
    "left" : "return ((Element) node).getContent().size() == 0;",
    "right" : "return ((Element) node).getContent().size() == 0;",
    "info" : "ReturnStatement[6206-6255]:ReturnStatement[6206-6255]"
  }, {
    "left" : "if (node instanceof Document)",
    "right" : "if (node instanceof Document)",
    "info" : "IfStatement[6279-6383]:IfStatement[6279-6383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6309-6383]:Block[6309-6383]"
  }, {
    "left" : "return ((Document) node).getContent().size() == 0;",
    "right" : "return ((Document) node).getContent().size() == 0;",
    "info" : "ReturnStatement[6323-6373]:ReturnStatement[6323-6373]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[6392-6404]:ReturnStatement[6392-6404]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6501-6507]:Modifier[6501-6507]"
  }, {
    "left" : "QName",
    "right" : "QName",
    "info" : "SimpleType[6508-6513]:SimpleType[6508-6513]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[6514-6521]:SimpleName[6514-6521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6524-6984]:Block[6524-6984]"
  }, {
    "left" : "String ns = null;",
    "right" : "String ns = null;",
    "info" : "VariableDeclarationStatement[6534-6551]:VariableDeclarationStatement[6534-6551]"
  }, {
    "left" : "String ln = null;",
    "right" : "String ln = null;",
    "info" : "VariableDeclarationStatement[6560-6577]:VariableDeclarationStatement[6560-6577]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[6586-6944]:IfStatement[6586-6944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6615-6815]:Block[6615-6815]"
  }, {
    "left" : "ns = ((Element) node).getNamespacePrefix();",
    "right" : "ns = ((Element) node).getNamespacePrefix();",
    "info" : "ExpressionStatement[6629-6672]:ExpressionStatement[6629-6672]"
  }, {
    "left" : "if (ns != null && ns.equals(\"\"))",
    "right" : "if (ns != null && ns.equals(\"\"))",
    "info" : "IfStatement[6685-6760]:IfStatement[6685-6760]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6718-6760]:Block[6718-6760]"
  }, {
    "left" : "ns = null;",
    "right" : "ns = null;",
    "info" : "ExpressionStatement[6736-6746]:ExpressionStatement[6736-6746]"
  }, {
    "left" : "ln = ((Element) node).getName();",
    "right" : "ln = ((Element) node).getName();",
    "info" : "ExpressionStatement[6773-6805]:ExpressionStatement[6773-6805]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[6829-6944]:IfStatement[6829-6944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6872-6944]:Block[6872-6944]"
  }, {
    "left" : "ln = ((ProcessingInstruction) node).getTarget();",
    "right" : "ln = ((ProcessingInstruction) node).getTarget();",
    "info" : "ExpressionStatement[6886-6934]:ExpressionStatement[6886-6934]"
  }, {
    "left" : "return new QName(ns, ln);",
    "right" : "return new QName(ns, ln);",
    "info" : "ReturnStatement[6953-6978]:ReturnStatement[6953-6978]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7075-7081]:Modifier[7075-7081]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[7082-7088]:SimpleType[7082-7088]"
  }, {
    "left" : "getImmediateNode",
    "right" : "getImmediateNode",
    "info" : "SimpleName[7089-7105]:SimpleName[7089-7105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7108-7136]:Block[7108-7136]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[7118-7130]:ReturnStatement[7118-7130]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7142-7148]:Modifier[7142-7148]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[7149-7155]:SimpleType[7149-7155]"
  }, {
    "left" : "getValue",
    "right" : "getValue",
    "info" : "SimpleName[7156-7164]:SimpleName[7156-7164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7167-7953]:Block[7167-7953]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[7177-7926]:IfStatement[7177-7926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7206-7268]:Block[7206-7268]"
  }, {
    "left" : "return ((Element) node).getTextTrim();",
    "right" : "return ((Element) node).getTextTrim();",
    "info" : "ReturnStatement[7220-7258]:ReturnStatement[7220-7258]"
  }, {
    "left" : "if (node instanceof Comment)",
    "right" : "if (node instanceof Comment)",
    "info" : "IfStatement[7282-7926]:IfStatement[7282-7926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7311-7483]:Block[7311-7483]"
  }, {
    "left" : "String text = ((Comment) node).getText();",
    "right" : "String text = ((Comment) node).getText();",
    "info" : "VariableDeclarationStatement[7325-7366]:VariableDeclarationStatement[7325-7366]"
  }, {
    "left" : "if (text != null)",
    "right" : "if (text != null)",
    "info" : "IfStatement[7379-7448]:IfStatement[7379-7448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7397-7448]:Block[7397-7448]"
  }, {
    "left" : "text = text.trim();",
    "right" : "text = text.trim();",
    "info" : "ExpressionStatement[7415-7434]:ExpressionStatement[7415-7434]"
  }, {
    "left" : "return text;",
    "right" : "return text;",
    "info" : "ReturnStatement[7461-7473]:ReturnStatement[7461-7473]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[7497-7926]:IfStatement[7497-7926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7523-7582]:Block[7523-7582]"
  }, {
    "left" : "return ((Text) node).getTextTrim();",
    "right" : "return ((Text) node).getTextTrim();",
    "info" : "ReturnStatement[7537-7572]:ReturnStatement[7537-7572]"
  }, {
    "left" : "if (node instanceof CDATA)",
    "right" : "if (node instanceof CDATA)",
    "info" : "IfStatement[7596-7926]:IfStatement[7596-7926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7623-7683]:Block[7623-7683]"
  }, {
    "left" : "return ((CDATA) node).getTextTrim();",
    "right" : "return ((CDATA) node).getTextTrim();",
    "info" : "ReturnStatement[7637-7673]:ReturnStatement[7637-7673]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[7697-7926]:IfStatement[7697-7926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7740-7926]:Block[7740-7926]"
  }, {
    "left" : "String text = ((ProcessingInstruction) node).getData();",
    "right" : "String text = ((ProcessingInstruction) node).getData();",
    "info" : "VariableDeclarationStatement[7754-7809]:VariableDeclarationStatement[7754-7809]"
  }, {
    "left" : "if (text != null)",
    "right" : "if (text != null)",
    "info" : "IfStatement[7822-7891]:IfStatement[7822-7891]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7840-7891]:Block[7840-7891]"
  }, {
    "left" : "text = text.trim();",
    "right" : "text = text.trim();",
    "info" : "ExpressionStatement[7858-7877]:ExpressionStatement[7858-7877]"
  }, {
    "left" : "return text;",
    "right" : "return text;",
    "info" : "ReturnStatement[7904-7916]:ReturnStatement[7904-7916]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[7935-7947]:ReturnStatement[7935-7947]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7959-7965]:Modifier[7959-7965]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7966-7970]:PrimitiveType[7966-7970]"
  }, {
    "left" : "setValue",
    "right" : "setValue",
    "info" : "SimpleName[7971-7979]:SimpleName[7971-7979]"
  }, {
    "left" : "Object value",
    "right" : "Object value",
    "info" : "SingleVariableDeclaration[7980-7992]:SingleVariableDeclaration[7980-7992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7994-9694]:Block[7994-9694]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[8004-9688]:IfStatement[8004-9688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8030-8329]:Block[8030-8329]"
  }, {
    "left" : "String string = (String) TypeUtils.convert(value, String.class);",
    "right" : "String string = (String) TypeUtils.convert(value, String.class);",
    "info" : "VariableDeclarationStatement[8044-8108]:VariableDeclarationStatement[8044-8108]"
  }, {
    "left" : "if (string != null && !string.equals(\"\"))",
    "right" : "if (string != null && !string.equals(\"\"))",
    "info" : "IfStatement[8121-8319]:IfStatement[8121-8319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8163-8225]:Block[8163-8225]"
  }, {
    "left" : "((Text) node).setText(string);",
    "right" : "((Text) node).setText(string);",
    "info" : "ExpressionStatement[8181-8211]:ExpressionStatement[8181-8211]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8243-8319]:Block[8243-8319]"
  }, {
    "left" : "nodeParent(node).removeContent((Text) node);",
    "right" : "nodeParent(node).removeContent((Text) node);",
    "info" : "ExpressionStatement[8261-8305]:ExpressionStatement[8261-8305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8343-9688]:Block[8343-9688]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[8357-8390]:VariableDeclarationStatement[8357-8390]"
  }, {
    "left" : "element.getContent().clear();",
    "right" : "element.getContent().clear();",
    "info" : "ExpressionStatement[8403-8432]:ExpressionStatement[8403-8432]"
  }, {
    "left" : "if (value instanceof Element)",
    "right" : "if (value instanceof Element)",
    "info" : "IfStatement[8446-9678]:IfStatement[8446-9678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8476-8602]:Block[8476-8602]"
  }, {
    "left" : "Element valueElement = (Element) value;",
    "right" : "Element valueElement = (Element) value;",
    "info" : "VariableDeclarationStatement[8494-8533]:VariableDeclarationStatement[8494-8533]"
  }, {
    "left" : "addContent(valueElement.getContent());",
    "right" : "addContent(valueElement.getContent());",
    "info" : "ExpressionStatement[8550-8588]:ExpressionStatement[8550-8588]"
  }, {
    "left" : "if (value instanceof Document)",
    "right" : "if (value instanceof Document)",
    "info" : "IfStatement[8620-9678]:IfStatement[8620-9678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8651-8781]:Block[8651-8781]"
  }, {
    "left" : "Document valueDocument = (Document) value;",
    "right" : "Document valueDocument = (Document) value;",
    "info" : "VariableDeclarationStatement[8669-8711]:VariableDeclarationStatement[8669-8711]"
  }, {
    "left" : "addContent(valueDocument.getContent());",
    "right" : "addContent(valueDocument.getContent());",
    "info" : "ExpressionStatement[8728-8767]:ExpressionStatement[8728-8767]"
  }, {
    "left" : "if (value instanceof Text || value instanceof CDATA)",
    "right" : "if (value instanceof Text || value instanceof CDATA)",
    "info" : "IfStatement[8799-9678]:IfStatement[8799-9678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8852-8979]:Block[8852-8979]"
  }, {
    "left" : "String string = ((Text) value).getText();",
    "right" : "String string = ((Text) value).getText();",
    "info" : "VariableDeclarationStatement[8870-8911]:VariableDeclarationStatement[8870-8911]"
  }, {
    "left" : "element.addContent(new Text(string));",
    "right" : "element.addContent(new Text(string));",
    "info" : "ExpressionStatement[8928-8965]:ExpressionStatement[8928-8965]"
  }, {
    "left" : "if (value instanceof ProcessingInstruction)",
    "right" : "if (value instanceof ProcessingInstruction)",
    "info" : "IfStatement[8997-9678]:IfStatement[8997-9678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9041-9249]:Block[9041-9249]"
  }, {
    "left" : "ProcessingInstruction pi =\n                    (ProcessingInstruction) ((ProcessingInstruction) value)\n                        .clone();",
    "right" : "ProcessingInstruction pi =\n                    (ProcessingInstruction) ((ProcessingInstruction) value)\n                        .clone();",
    "info" : "VariableDeclarationStatement[9059-9195]:VariableDeclarationStatement[9059-9195]"
  }, {
    "left" : "element.addContent(pi);",
    "right" : "element.addContent(pi);",
    "info" : "ExpressionStatement[9212-9235]:ExpressionStatement[9212-9235]"
  }, {
    "left" : "if (value instanceof Comment)",
    "right" : "if (value instanceof Comment)",
    "info" : "IfStatement[9267-9678]:IfStatement[9267-9678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9297-9428]:Block[9297-9428]"
  }, {
    "left" : "Comment comment = (Comment) ((Comment) value).clone();",
    "right" : "Comment comment = (Comment) ((Comment) value).clone();",
    "info" : "VariableDeclarationStatement[9315-9369]:VariableDeclarationStatement[9315-9369]"
  }, {
    "left" : "element.addContent(comment);",
    "right" : "element.addContent(comment);",
    "info" : "ExpressionStatement[9386-9414]:ExpressionStatement[9386-9414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9446-9678]:Block[9446-9678]"
  }, {
    "left" : "String string = (String) TypeUtils.convert(value, String.class);",
    "right" : "String string = (String) TypeUtils.convert(value, String.class);",
    "info" : "VariableDeclarationStatement[9464-9528]:VariableDeclarationStatement[9464-9528]"
  }, {
    "left" : "if (string != null && !string.equals(\"\"))",
    "right" : "if (string != null && !string.equals(\"\"))",
    "info" : "IfStatement[9545-9664]:IfStatement[9545-9664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9587-9664]:Block[9587-9664]"
  }, {
    "left" : "element.addContent(new Text(string));",
    "right" : "element.addContent(new Text(string));",
    "info" : "ExpressionStatement[9609-9646]:ExpressionStatement[9609-9646]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[9707-9714]:Modifier[9707-9714]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9715-9719]:PrimitiveType[9715-9719]"
  }, {
    "left" : "addContent",
    "right" : "addContent",
    "info" : "SimpleName[9720-9730]:SimpleName[9720-9730]"
  }, {
    "left" : "List content",
    "right" : "List content",
    "info" : "SingleVariableDeclaration[9731-9743]:SingleVariableDeclaration[9731-9743]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9745-10780]:Block[9745-10780]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[9755-9788]:VariableDeclarationStatement[9755-9788]"
  }, {
    "left" : "int count = content.size();",
    "right" : "int count = content.size();",
    "info" : "VariableDeclarationStatement[9797-9824]:VariableDeclarationStatement[9797-9824]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[9834-10774]:ForStatement[9834-10774]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9866-10774]:Block[9866-10774]"
  }, {
    "left" : "Object child = content.get(i);",
    "right" : "Object child = content.get(i);",
    "info" : "VariableDeclarationStatement[9880-9910]:VariableDeclarationStatement[9880-9910]"
  }, {
    "left" : "if (child instanceof Element)",
    "right" : "if (child instanceof Element)",
    "info" : "IfStatement[9923-10764]:IfStatement[9923-10764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9953-10072]:Block[9953-10072]"
  }, {
    "left" : "child = ((Element) child).clone();",
    "right" : "child = ((Element) child).clone();",
    "info" : "ExpressionStatement[9971-10005]:ExpressionStatement[9971-10005]"
  }, {
    "left" : "element.addContent((Element) child);",
    "right" : "element.addContent((Element) child);",
    "info" : "ExpressionStatement[10022-10058]:ExpressionStatement[10022-10058]"
  }, {
    "left" : "if (child instanceof Text)",
    "right" : "if (child instanceof Text)",
    "info" : "IfStatement[10090-10764]:IfStatement[10090-10764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10117-10230]:Block[10117-10230]"
  }, {
    "left" : "child = ((Text) child).clone();",
    "right" : "child = ((Text) child).clone();",
    "info" : "ExpressionStatement[10135-10166]:ExpressionStatement[10135-10166]"
  }, {
    "left" : "element.addContent((Text) child);",
    "right" : "element.addContent((Text) child);",
    "info" : "ExpressionStatement[10183-10216]:ExpressionStatement[10183-10216]"
  }, {
    "left" : "if (node instanceof CDATA)",
    "right" : "if (node instanceof CDATA)",
    "info" : "IfStatement[10248-10764]:IfStatement[10248-10764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10275-10390]:Block[10275-10390]"
  }, {
    "left" : "child = ((CDATA) child).clone();",
    "right" : "child = ((CDATA) child).clone();",
    "info" : "ExpressionStatement[10293-10325]:ExpressionStatement[10293-10325]"
  }, {
    "left" : "element.addContent((CDATA) child);",
    "right" : "element.addContent((CDATA) child);",
    "info" : "ExpressionStatement[10342-10376]:ExpressionStatement[10342-10376]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[10408-10764]:IfStatement[10408-10764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10451-10598]:Block[10451-10598]"
  }, {
    "left" : "child = ((ProcessingInstruction) child).clone();",
    "right" : "child = ((ProcessingInstruction) child).clone();",
    "info" : "ExpressionStatement[10469-10517]:ExpressionStatement[10469-10517]"
  }, {
    "left" : "element.addContent((ProcessingInstruction) child);",
    "right" : "element.addContent((ProcessingInstruction) child);",
    "info" : "ExpressionStatement[10534-10584]:ExpressionStatement[10534-10584]"
  }, {
    "left" : "if (node instanceof Comment)",
    "right" : "if (node instanceof Comment)",
    "info" : "IfStatement[10616-10764]:IfStatement[10616-10764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10645-10764]:Block[10645-10764]"
  }, {
    "left" : "child = ((Comment) child).clone();",
    "right" : "child = ((Comment) child).clone();",
    "info" : "ExpressionStatement[10663-10697]:ExpressionStatement[10663-10697]"
  }, {
    "left" : "element.addContent((Comment) child);",
    "right" : "element.addContent((Comment) child);",
    "info" : "ExpressionStatement[10714-10750]:ExpressionStatement[10714-10750]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10790-10796]:Modifier[10790-10796]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[10797-10804]:PrimitiveType[10797-10804]"
  }, {
    "left" : "testNode",
    "right" : "testNode",
    "info" : "SimpleName[10805-10813]:SimpleName[10805-10813]"
  }, {
    "left" : "NodeTest test",
    "right" : "NodeTest test",
    "info" : "SingleVariableDeclaration[10814-10827]:SingleVariableDeclaration[10814-10827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10829-10879]:Block[10829-10879]"
  }, {
    "left" : "return testNode(this, node, test);",
    "right" : "return testNode(this, node, test);",
    "info" : "ReturnStatement[10839-10873]:ReturnStatement[10839-10873]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10889-10895]:Modifier[10889-10895]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10896-10902]:Modifier[10896-10902]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[10903-10910]:PrimitiveType[10903-10910]"
  }, {
    "left" : "testNode",
    "right" : "testNode",
    "info" : "SimpleName[10911-10919]:SimpleName[10911-10919]"
  }, {
    "left" : "NodePointer pointer",
    "right" : "NodePointer pointer",
    "info" : "SingleVariableDeclaration[10929-10948]:SingleVariableDeclaration[10929-10948]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[10958-10969]:SingleVariableDeclaration[10958-10969]"
  }, {
    "left" : "NodeTest test",
    "right" : "NodeTest test",
    "info" : "SingleVariableDeclaration[10979-10992]:SingleVariableDeclaration[10979-10992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10999-12851]:Block[10999-12883]"
  }, {
    "left" : "if (test == null)",
    "right" : "if (test == null)",
    "info" : "IfStatement[11009-12822]:IfStatement[11009-12854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11027-11063]:Block[11027-11063]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[11041-11053]:ReturnStatement[11041-11053]"
  }, {
    "left" : "if (test instanceof NodeNameTest)",
    "right" : "if (test instanceof NodeNameTest)",
    "info" : "IfStatement[11077-12822]:IfStatement[11077-12854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11111-11882]:Block[11111-11882]"
  }, {
    "left" : "if (!(node instanceof Element))",
    "right" : "if (!(node instanceof Element))",
    "info" : "IfStatement[11125-11202]:IfStatement[11125-11202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11157-11202]:Block[11157-11202]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[11175-11188]:ReturnStatement[11175-11188]"
  }, {
    "left" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
    "right" : "NodeNameTest nodeNameTest = (NodeNameTest) test;",
    "info" : "VariableDeclarationStatement[11216-11264]:VariableDeclarationStatement[11216-11264]"
  }, {
    "left" : "QName testName = nodeNameTest.getNodeName();",
    "right" : "QName testName = nodeNameTest.getNodeName();",
    "info" : "VariableDeclarationStatement[11277-11321]:VariableDeclarationStatement[11277-11321]"
  }, {
    "left" : "String namespaceURI = nodeNameTest.getNamespaceURI();",
    "right" : "String namespaceURI = nodeNameTest.getNamespaceURI();",
    "info" : "VariableDeclarationStatement[11334-11387]:VariableDeclarationStatement[11334-11387]"
  }, {
    "left" : "boolean wildcard = nodeNameTest.isWildcard();",
    "right" : "boolean wildcard = nodeNameTest.isWildcard();",
    "info" : "VariableDeclarationStatement[11400-11445]:VariableDeclarationStatement[11400-11445]"
  }, {
    "left" : "String testPrefix = testName.getPrefix();",
    "right" : "String testPrefix = testName.getPrefix();",
    "info" : "VariableDeclarationStatement[11458-11499]:VariableDeclarationStatement[11458-11499]"
  }, {
    "left" : "if (wildcard && testPrefix == null)",
    "right" : "if (wildcard && testPrefix == null)",
    "info" : "IfStatement[11512-11592]:IfStatement[11512-11592]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11548-11592]:Block[11548-11592]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[11566-11578]:ReturnStatement[11566-11578]"
  }, {
    "left" : "if (wildcard\n                || testName.getName()\n                        .equals(JDOMNodePointer.getLocalName(node)))",
    "right" : "if (wildcard\n                || testName.getName()\n                        .equals(JDOMNodePointer.getLocalName(node)))",
    "info" : "IfStatement[11606-11871]:IfStatement[11606-11871]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11726-11871]:Block[11726-11871]"
  }, {
    "left" : "String nodeNS = JDOMNodePointer.getNamespaceURI(node);",
    "right" : "String nodeNS = JDOMNodePointer.getNamespaceURI(node);",
    "info" : "VariableDeclarationStatement[11744-11798]:VariableDeclarationStatement[11744-11798]"
  }, {
    "left" : "return equalStrings(namespaceURI, nodeNS);",
    "right" : "return equalStrings(namespaceURI, nodeNS);",
    "info" : "ReturnStatement[11815-11857]:ReturnStatement[11815-11857]"
  }, {
    "left" : "if (test instanceof NodeTypeTest)",
    "right" : "if (test instanceof NodeTypeTest)",
    "info" : "IfStatement[11896-12822]:IfStatement[11896-12854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11930-12477]:Block[11930-12509]"
  }, {
    "left" : "switch (((NodeTypeTest) test).getNodeType()) {\n                case Compiler.NODE_TYPE_NODE :\n                    return node instanceof Element;\n                case Compiler.NODE_TYPE_TEXT :\n                    return (node instanceof Text) || (node instanceof CDATA);\n                case Compiler.NODE_TYPE_COMMENT :\n                    return node instanceof Comment;\n                case Compiler.NODE_TYPE_PI :\n                    return node instanceof ProcessingInstruction;\n            }",
    "right" : "switch (((NodeTypeTest) test).getNodeType()) {\n                case Compiler.NODE_TYPE_NODE :\n                    return (node instanceof Element) || (node instanceof Document);\n                case Compiler.NODE_TYPE_TEXT :\n                    return (node instanceof Text) || (node instanceof CDATA);\n                case Compiler.NODE_TYPE_COMMENT :\n                    return node instanceof Comment;\n                case Compiler.NODE_TYPE_PI :\n                    return node instanceof ProcessingInstruction;\n            }",
    "info" : "SwitchStatement[11944-12441]:SwitchStatement[11944-12473]"
  }, {
    "left" : "case Compiler.NODE_TYPE_NODE :",
    "right" : "case Compiler.NODE_TYPE_NODE :",
    "info" : "SwitchCase[12007-12037]:SwitchCase[12007-12037]"
  }, {
    "left" : "return node instanceof Element;",
    "right" : "return (node instanceof Element) || (node instanceof Document);",
    "info" : "ReturnStatement[12058-12089]:ReturnStatement[12058-12121]"
  }, {
    "left" : "node instanceof Element",
    "right" : "node instanceof Element",
    "info" : "InstanceofExpression[12065-12088]:InstanceofExpression[12066-12089]"
  }, {
    "left" : "case Compiler.NODE_TYPE_TEXT :",
    "right" : "case Compiler.NODE_TYPE_TEXT :",
    "info" : "SwitchCase[12106-12136]:SwitchCase[12138-12168]"
  }, {
    "left" : "return (node instanceof Text) || (node instanceof CDATA);",
    "right" : "return (node instanceof Text) || (node instanceof CDATA);",
    "info" : "ReturnStatement[12157-12214]:ReturnStatement[12189-12246]"
  }, {
    "left" : "case Compiler.NODE_TYPE_COMMENT :",
    "right" : "case Compiler.NODE_TYPE_COMMENT :",
    "info" : "SwitchCase[12231-12264]:SwitchCase[12263-12296]"
  }, {
    "left" : "return node instanceof Comment;",
    "right" : "return node instanceof Comment;",
    "info" : "ReturnStatement[12285-12316]:ReturnStatement[12317-12348]"
  }, {
    "left" : "case Compiler.NODE_TYPE_PI :",
    "right" : "case Compiler.NODE_TYPE_PI :",
    "info" : "SwitchCase[12333-12361]:SwitchCase[12365-12393]"
  }, {
    "left" : "return node instanceof ProcessingInstruction;",
    "right" : "return node instanceof ProcessingInstruction;",
    "info" : "ReturnStatement[12382-12427]:ReturnStatement[12414-12459]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[12454-12467]:ReturnStatement[12486-12499]"
  }, {
    "left" : "if (test instanceof ProcessingInstructionTest)",
    "right" : "if (test instanceof ProcessingInstructionTest)",
    "info" : "IfStatement[12491-12822]:IfStatement[12523-12854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12538-12822]:Block[12570-12854]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[12552-12812]:IfStatement[12584-12844]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12595-12812]:Block[12627-12844]"
  }, {
    "left" : "String testPI = ((ProcessingInstructionTest) test).getTarget();",
    "right" : "String testPI = ((ProcessingInstructionTest) test).getTarget();",
    "info" : "VariableDeclarationStatement[12613-12676]:VariableDeclarationStatement[12645-12708]"
  }, {
    "left" : "String nodePI = ((ProcessingInstruction) node).getTarget();",
    "right" : "String nodePI = ((ProcessingInstruction) node).getTarget();",
    "info" : "VariableDeclarationStatement[12693-12752]:VariableDeclarationStatement[12725-12784]"
  }, {
    "left" : "return testPI.equals(nodePI);",
    "right" : "return testPI.equals(nodePI);",
    "info" : "ReturnStatement[12769-12798]:ReturnStatement[12801-12830]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[12832-12845]:ReturnStatement[12864-12877]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12857-12864]:Modifier[12889-12896]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12865-12871]:Modifier[12897-12903]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12872-12879]:PrimitiveType[12904-12911]"
  }, {
    "left" : "equalStrings",
    "right" : "equalStrings",
    "info" : "SimpleName[12880-12892]:SimpleName[12912-12924]"
  }, {
    "left" : "String s1",
    "right" : "String s1",
    "info" : "SingleVariableDeclaration[12893-12902]:SingleVariableDeclaration[12925-12934]"
  }, {
    "left" : "String s2",
    "right" : "String s2",
    "info" : "SingleVariableDeclaration[12904-12913]:SingleVariableDeclaration[12936-12945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12915-13191]:Block[12947-13223]"
  }, {
    "left" : "if (s1 == null && s2 != null)",
    "right" : "if (s1 == null && s2 != null)",
    "info" : "IfStatement[12925-12992]:IfStatement[12957-13024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12955-12992]:Block[12987-13024]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[12969-12982]:ReturnStatement[13001-13014]"
  }, {
    "left" : "if (s1 != null && s2 == null)",
    "right" : "if (s1 != null && s2 == null)",
    "info" : "IfStatement[13001-13068]:IfStatement[13033-13100]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13031-13068]:Block[13063-13100]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[13045-13058]:ReturnStatement[13077-13090]"
  }, {
    "left" : "if (s1 != null && !s1.trim().equals(s2.trim()))",
    "right" : "if (s1 != null && !s1.trim().equals(s2.trim()))",
    "info" : "IfStatement[13078-13163]:IfStatement[13110-13195]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13126-13163]:Block[13158-13195]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[13140-13153]:ReturnStatement[13172-13185]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[13173-13185]:ReturnStatement[13205-13217]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13197-13203]:Modifier[13229-13235]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13204-13210]:Modifier[13236-13242]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[13211-13217]:SimpleType[13243-13249]"
  }, {
    "left" : "getPrefix",
    "right" : "getPrefix",
    "info" : "SimpleName[13218-13227]:SimpleName[13250-13259]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[13228-13239]:SingleVariableDeclaration[13260-13271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13241-13658]:Block[13273-13690]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[13251-13631]:IfStatement[13283-13663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13280-13432]:Block[13312-13464]"
  }, {
    "left" : "String prefix = ((Element) node).getNamespacePrefix();",
    "right" : "String prefix = ((Element) node).getNamespacePrefix();",
    "info" : "VariableDeclarationStatement[13294-13348]:VariableDeclarationStatement[13326-13380]"
  }, {
    "left" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "right" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "info" : "ReturnStatement[13361-13422]:ReturnStatement[13393-13454]"
  }, {
    "left" : "if (node instanceof Attribute)",
    "right" : "if (node instanceof Attribute)",
    "info" : "IfStatement[13446-13631]:IfStatement[13478-13663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13477-13631]:Block[13509-13663]"
  }, {
    "left" : "String prefix = ((Attribute) node).getNamespacePrefix();",
    "right" : "String prefix = ((Attribute) node).getNamespacePrefix();",
    "info" : "VariableDeclarationStatement[13491-13547]:VariableDeclarationStatement[13523-13579]"
  }, {
    "left" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "right" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
    "info" : "ReturnStatement[13560-13621]:ReturnStatement[13592-13653]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[13640-13652]:ReturnStatement[13672-13684]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13668-13674]:Modifier[13700-13706]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13675-13681]:Modifier[13707-13713]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[13682-13688]:SimpleType[13714-13720]"
  }, {
    "left" : "getLocalName",
    "right" : "getLocalName",
    "info" : "SimpleName[13689-13701]:SimpleName[13721-13733]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[13702-13713]:SingleVariableDeclaration[13734-13745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13715-13944]:Block[13747-13976]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[13725-13917]:IfStatement[13757-13949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13754-13812]:Block[13786-13844]"
  }, {
    "left" : "return ((Element) node).getName();",
    "right" : "return ((Element) node).getName();",
    "info" : "ReturnStatement[13768-13802]:ReturnStatement[13800-13834]"
  }, {
    "left" : "if (node instanceof Attribute)",
    "right" : "if (node instanceof Attribute)",
    "info" : "IfStatement[13826-13917]:IfStatement[13858-13949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13857-13917]:Block[13889-13949]"
  }, {
    "left" : "return ((Attribute) node).getName();",
    "right" : "return ((Attribute) node).getName();",
    "info" : "ReturnStatement[13871-13907]:ReturnStatement[13903-13939]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[13926-13938]:ReturnStatement[13958-13970]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14170-14176]:Modifier[14202-14208]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[14177-14184]:PrimitiveType[14209-14216]"
  }, {
    "left" : "isLanguage",
    "right" : "isLanguage",
    "info" : "SimpleName[14185-14195]:SimpleName[14217-14227]"
  }, {
    "left" : "String lang",
    "right" : "String lang",
    "info" : "SingleVariableDeclaration[14196-14207]:SingleVariableDeclaration[14228-14239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14209-14409]:Block[14241-14441]"
  }, {
    "left" : "String current = getLanguage();",
    "right" : "String current = getLanguage();",
    "info" : "VariableDeclarationStatement[14219-14250]:VariableDeclarationStatement[14251-14282]"
  }, {
    "left" : "if (current == null)",
    "right" : "if (current == null)",
    "info" : "IfStatement[14259-14334]:IfStatement[14291-14366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14280-14334]:Block[14312-14366]"
  }, {
    "left" : "return super.isLanguage(lang);",
    "right" : "return super.isLanguage(lang);",
    "info" : "ReturnStatement[14294-14324]:ReturnStatement[14326-14356]"
  }, {
    "left" : "return current.toUpperCase().startsWith(lang.toUpperCase());",
    "right" : "return current.toUpperCase().startsWith(lang.toUpperCase());",
    "info" : "ReturnStatement[14343-14403]:ReturnStatement[14375-14435]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[14415-14424]:Modifier[14447-14456]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[14425-14431]:SimpleType[14457-14463]"
  }, {
    "left" : "getLanguage",
    "right" : "getLanguage",
    "info" : "SimpleName[14432-14443]:SimpleName[14464-14475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14446-14874]:Block[14478-14906]"
  }, {
    "left" : "Object n = node;",
    "right" : "Object n = node;",
    "info" : "VariableDeclarationStatement[14456-14472]:VariableDeclarationStatement[14488-14504]"
  }, {
    "left" : "while (n != null)",
    "right" : "while (n != null)",
    "info" : "WhileStatement[14481-14847]:WhileStatement[14513-14879]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14499-14847]:Block[14531-14879]"
  }, {
    "left" : "if (n instanceof Element)",
    "right" : "if (n instanceof Element)",
    "info" : "IfStatement[14513-14806]:IfStatement[14545-14838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14539-14806]:Block[14571-14838]"
  }, {
    "left" : "Element e = (Element) n;",
    "right" : "Element e = (Element) n;",
    "info" : "VariableDeclarationStatement[14557-14581]:VariableDeclarationStatement[14589-14613]"
  }, {
    "left" : "String attr =\n                    e.getAttributeValue(\"lang\", Namespace.XML_NAMESPACE);",
    "right" : "String attr =\n                    e.getAttributeValue(\"lang\", Namespace.XML_NAMESPACE);",
    "info" : "VariableDeclarationStatement[14598-14685]:VariableDeclarationStatement[14630-14717]"
  }, {
    "left" : "if (attr != null && !attr.equals(\"\"))",
    "right" : "if (attr != null && !attr.equals(\"\"))",
    "info" : "IfStatement[14702-14792]:IfStatement[14734-14824]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14740-14792]:Block[14772-14824]"
  }, {
    "left" : "return attr;",
    "right" : "return attr;",
    "info" : "ReturnStatement[14762-14774]:ReturnStatement[14794-14806]"
  }, {
    "left" : "n = nodeParent(n);",
    "right" : "n = nodeParent(n);",
    "info" : "ExpressionStatement[14819-14837]:ExpressionStatement[14851-14869]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[14856-14868]:ReturnStatement[14888-14900]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14884-14891]:Modifier[14916-14923]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[14892-14899]:SimpleType[14924-14931]"
  }, {
    "left" : "nodeParent",
    "right" : "nodeParent",
    "info" : "SimpleName[14900-14910]:SimpleName[14932-14942]"
  }, {
    "left" : "Object node",
    "right" : "Object node",
    "info" : "SingleVariableDeclaration[14911-14922]:SingleVariableDeclaration[14943-14954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14924-15629]:Block[14956-15661]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[14934-15602]:IfStatement[14966-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14963-15132]:Block[14995-15164]"
  }, {
    "left" : "Object parent = ((Element) node).getParent();",
    "right" : "Object parent = ((Element) node).getParent();",
    "info" : "VariableDeclarationStatement[14977-15022]:VariableDeclarationStatement[15009-15054]"
  }, {
    "left" : "if (parent instanceof Element)",
    "right" : "if (parent instanceof Element)",
    "info" : "IfStatement[15035-15122]:IfStatement[15067-15154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15066-15122]:Block[15098-15154]"
  }, {
    "left" : "return (Element) parent;",
    "right" : "return (Element) parent;",
    "info" : "ReturnStatement[15084-15108]:ReturnStatement[15116-15140]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[15146-15602]:IfStatement[15178-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15172-15239]:Block[15204-15271]"
  }, {
    "left" : "return (Element) ((Text) node).getParent();",
    "right" : "return (Element) ((Text) node).getParent();",
    "info" : "ReturnStatement[15186-15229]:ReturnStatement[15218-15261]"
  }, {
    "left" : "if (node instanceof CDATA)",
    "right" : "if (node instanceof CDATA)",
    "info" : "IfStatement[15253-15602]:IfStatement[15285-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15280-15348]:Block[15312-15380]"
  }, {
    "left" : "return (Element) ((CDATA) node).getParent();",
    "right" : "return (Element) ((CDATA) node).getParent();",
    "info" : "ReturnStatement[15294-15338]:ReturnStatement[15326-15370]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[15362-15602]:IfStatement[15394-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15405-15489]:Block[15437-15521]"
  }, {
    "left" : "return (Element) ((ProcessingInstruction) node).getParent();",
    "right" : "return (Element) ((ProcessingInstruction) node).getParent();",
    "info" : "ReturnStatement[15419-15479]:ReturnStatement[15451-15511]"
  }, {
    "left" : "if (node instanceof Comment)",
    "right" : "if (node instanceof Comment)",
    "info" : "IfStatement[15503-15602]:IfStatement[15535-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15532-15602]:Block[15564-15634]"
  }, {
    "left" : "return (Element) ((Comment) node).getParent();",
    "right" : "return (Element) ((Comment) node).getParent();",
    "info" : "ReturnStatement[15546-15592]:ReturnStatement[15578-15624]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[15611-15623]:ReturnStatement[15643-15655]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15635-15641]:Modifier[15667-15673]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[15642-15653]:SimpleType[15674-15685]"
  }, {
    "left" : "createChild",
    "right" : "createChild",
    "info" : "SimpleName[15654-15665]:SimpleName[15686-15697]"
  }, {
    "left" : "JXPathContext context",
    "right" : "JXPathContext context",
    "info" : "SingleVariableDeclaration[15675-15696]:SingleVariableDeclaration[15707-15728]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[15706-15716]:SingleVariableDeclaration[15738-15748]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[15726-15735]:SingleVariableDeclaration[15758-15767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15742-16744]:Block[15774-16776]"
  }, {
    "left" : "if (index == WHOLE_COLLECTION)",
    "right" : "if (index == WHOLE_COLLECTION)",
    "info" : "IfStatement[15752-15817]:IfStatement[15784-15849]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15783-15817]:Block[15815-15849]"
  }, {
    "left" : "index = 0;",
    "right" : "index = 0;",
    "info" : "ExpressionStatement[15797-15807]:ExpressionStatement[15829-15839]"
  }, {
    "left" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
    "right" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
    "info" : "VariableDeclarationStatement[15826-16023]:VariableDeclarationStatement[15858-16055]"
  }, {
    "left" : "if (success)",
    "right" : "if (success)",
    "info" : "IfStatement[16032-16549]:IfStatement[16064-16581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16045-16549]:Block[16077-16581]"
  }, {
    "left" : "NodeTest nodeTest;",
    "right" : "NodeTest nodeTest;",
    "info" : "VariableDeclarationStatement[16059-16077]:VariableDeclarationStatement[16091-16109]"
  }, {
    "left" : "String prefix = name.getPrefix();",
    "right" : "String prefix = name.getPrefix();",
    "info" : "VariableDeclarationStatement[16090-16123]:VariableDeclarationStatement[16122-16155]"
  }, {
    "left" : "String namespaceURI = prefix != null \n                ? context.getNamespaceURI(prefix) \n                : context.getDefaultNamespaceURI();",
    "right" : "String namespaceURI = prefix != null \n                ? context.getNamespaceURI(prefix) \n                : context.getDefaultNamespaceURI();",
    "info" : "VariableDeclarationStatement[16136-16276]:VariableDeclarationStatement[16168-16308]"
  }, {
    "left" : "nodeTest = new NodeNameTest(name, namespaceURI);",
    "right" : "nodeTest = new NodeNameTest(name, namespaceURI);",
    "info" : "ExpressionStatement[16289-16337]:ExpressionStatement[16321-16369]"
  }, {
    "left" : "NodeIterator it =\n                childIterator(nodeTest, false, null);",
    "right" : "NodeIterator it =\n                childIterator(nodeTest, false, null);",
    "info" : "VariableDeclarationStatement[16351-16422]:VariableDeclarationStatement[16383-16454]"
  }, {
    "left" : "if (it != null && it.setPosition(index + 1))",
    "right" : "if (it != null && it.setPosition(index + 1))",
    "info" : "IfStatement[16435-16539]:IfStatement[16467-16571]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16480-16539]:Block[16512-16571]"
  }, {
    "left" : "return it.getNodePointer();",
    "right" : "return it.getNodePointer();",
    "info" : "ReturnStatement[16498-16525]:ReturnStatement[16530-16557]"
  }, {
    "left" : "throw new JXPathAbstractFactoryException(\"Factory could not create \"\n                + \"a child node for path: \" + asPath() + \"/\" + name + \"[\"\n                + (index + 1) + \"]\");",
    "right" : "throw new JXPathAbstractFactoryException(\"Factory could not create \"\n                + \"a child node for path: \" + asPath() + \"/\" + name + \"[\"\n                + (index + 1) + \"]\");",
    "info" : "ThrowStatement[16558-16738]:ThrowStatement[16590-16770]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16750-16756]:Modifier[16782-16788]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[16757-16768]:SimpleType[16789-16800]"
  }, {
    "left" : "createChild",
    "right" : "createChild",
    "info" : "SimpleName[16769-16780]:SimpleName[16801-16812]"
  }, {
    "left" : "JXPathContext context",
    "right" : "JXPathContext context",
    "info" : "SingleVariableDeclaration[16794-16815]:SingleVariableDeclaration[16826-16847]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[16817-16827]:SingleVariableDeclaration[16849-16859]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[16829-16838]:SingleVariableDeclaration[16861-16870]"
  }, {
    "left" : "Object value",
    "right" : "Object value",
    "info" : "SingleVariableDeclaration[16840-16852]:SingleVariableDeclaration[16872-16884]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16858-16975]:Block[16890-17007]"
  }, {
    "left" : "NodePointer ptr = createChild(context, name, index);",
    "right" : "NodePointer ptr = createChild(context, name, index);",
    "info" : "VariableDeclarationStatement[16868-16920]:VariableDeclarationStatement[16900-16952]"
  }, {
    "left" : "ptr.setValue(value);",
    "right" : "ptr.setValue(value);",
    "info" : "ExpressionStatement[16929-16949]:ExpressionStatement[16961-16981]"
  }, {
    "left" : "return ptr;",
    "right" : "return ptr;",
    "info" : "ReturnStatement[16958-16969]:ReturnStatement[16990-17001]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16981-16987]:Modifier[17013-17019]"
  }, {
    "left" : "NodePointer",
    "right" : "NodePointer",
    "info" : "SimpleType[16988-16999]:SimpleType[17020-17031]"
  }, {
    "left" : "createAttribute",
    "right" : "createAttribute",
    "info" : "SimpleName[17000-17015]:SimpleName[17032-17047]"
  }, {
    "left" : "JXPathContext context",
    "right" : "JXPathContext context",
    "info" : "SingleVariableDeclaration[17016-17037]:SingleVariableDeclaration[17048-17069]"
  }, {
    "left" : "QName name",
    "right" : "QName name",
    "info" : "SingleVariableDeclaration[17039-17049]:SingleVariableDeclaration[17071-17081]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17051-17985]:Block[17083-18017]"
  }, {
    "left" : "if (!(node instanceof Element))",
    "right" : "if (!(node instanceof Element))",
    "info" : "IfStatement[17061-17161]:IfStatement[17093-17193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17093-17161]:Block[17125-17193]"
  }, {
    "left" : "return super.createAttribute(context, name);",
    "right" : "return super.createAttribute(context, name);",
    "info" : "ReturnStatement[17107-17151]:ReturnStatement[17139-17183]"
  }, {
    "left" : "Element element = (Element) node;",
    "right" : "Element element = (Element) node;",
    "info" : "VariableDeclarationStatement[17171-17204]:VariableDeclarationStatement[17203-17236]"
  }, {
    "left" : "String prefix = name.getPrefix();",
    "right" : "String prefix = name.getPrefix();",
    "info" : "VariableDeclarationStatement[17213-17246]:VariableDeclarationStatement[17245-17278]"
  }, {
    "left" : "if (prefix != null)",
    "right" : "if (prefix != null)",
    "info" : "IfStatement[17255-17865]:IfStatement[17287-17897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17275-17669]:Block[17307-17701]"
  }, {
    "left" : "Namespace ns = element.getNamespace(prefix);",
    "right" : "Namespace ns = element.getNamespace(prefix);",
    "info" : "VariableDeclarationStatement[17289-17333]:VariableDeclarationStatement[17321-17365]"
  }, {
    "left" : "if (ns == null)",
    "right" : "if (ns == null)",
    "info" : "IfStatement[17346-17480]:IfStatement[17378-17512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17362-17480]:Block[17394-17512]"
  }, {
    "left" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
    "right" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
    "info" : "ThrowStatement[17380-17466]:ThrowStatement[17412-17498]"
  }, {
    "left" : "Attribute attr = element.getAttribute(name.getName(), ns);",
    "right" : "Attribute attr = element.getAttribute(name.getName(), ns);",
    "info" : "VariableDeclarationStatement[17493-17551]:VariableDeclarationStatement[17525-17583]"
  }, {
    "left" : "if (attr == null)",
    "right" : "if (attr == null)",
    "info" : "IfStatement[17564-17659]:IfStatement[17596-17691]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17582-17659]:Block[17614-17691]"
  }, {
    "left" : "element.setAttribute(name.getName(), \"\", ns);",
    "right" : "element.setAttribute(name.getName(), \"\", ns);",
    "info" : "ExpressionStatement[17600-17645]:ExpressionStatement[17632-17677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17683-17865]:Block[17715-17897]"
  }, {
    "left" : "Attribute attr = element.getAttribute(name.getName());",
    "right" : "Attribute attr = element.getAttribute(name.getName());",
    "info" : "VariableDeclarationStatement[17697-17751]:VariableDeclarationStatement[17729-17783]"
  }, {
    "left" : "if (attr == null)",
    "right" : "if (attr == null)",
    "info" : "IfStatement[17764-17855]:IfStatement[17796-17887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17782-17855]:Block[17814-17887]"
  }, {
    "left" : "element.setAttribute(name.getName(), \"\");",
    "right" : "element.setAttribute(name.getName(), \"\");",
    "info" : "ExpressionStatement[17800-17841]:ExpressionStatement[17832-17873]"
  }, {
    "left" : "NodeIterator it = attributeIterator(name);",
    "right" : "NodeIterator it = attributeIterator(name);",
    "info" : "VariableDeclarationStatement[17874-17916]:VariableDeclarationStatement[17906-17948]"
  }, {
    "left" : "it.setPosition(1);",
    "right" : "it.setPosition(1);",
    "info" : "ExpressionStatement[17925-17943]:ExpressionStatement[17957-17975]"
  }, {
    "left" : "return it.getNodePointer();",
    "right" : "return it.getNodePointer();",
    "info" : "ReturnStatement[17952-17979]:ReturnStatement[17984-18011]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17991-17997]:Modifier[18023-18029]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17998-18002]:PrimitiveType[18030-18034]"
  }, {
    "left" : "remove",
    "right" : "remove",
    "info" : "SimpleName[18003-18009]:SimpleName[18035-18041]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18012-18215]:Block[18044-18247]"
  }, {
    "left" : "Element parent = nodeParent(node);",
    "right" : "Element parent = nodeParent(node);",
    "info" : "VariableDeclarationStatement[18022-18056]:VariableDeclarationStatement[18054-18088]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[18065-18167]:IfStatement[18097-18199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18085-18167]:Block[18117-18199]"
  }, {
    "left" : "throw new JXPathException(\"Cannot remove root JDOM node\");",
    "right" : "throw new JXPathException(\"Cannot remove root JDOM node\");",
    "info" : "ThrowStatement[18099-18157]:ThrowStatement[18131-18189]"
  }, {
    "left" : "parent.getContent().remove(node);",
    "right" : "parent.getContent().remove(node);",
    "info" : "ExpressionStatement[18176-18209]:ExpressionStatement[18208-18241]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18221-18227]:Modifier[18253-18259]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[18228-18234]:SimpleType[18260-18266]"
  }, {
    "left" : "asPath",
    "right" : "asPath",
    "info" : "SimpleName[18235-18241]:SimpleName[18267-18273]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18244-20664]:Block[18276-20696]"
  }, {
    "left" : "if (id != null)",
    "right" : "if (id != null)",
    "info" : "IfStatement[18254-18328]:IfStatement[18286-18360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18270-18328]:Block[18302-18360]"
  }, {
    "left" : "return \"id('\" + escape(id) + \"')\";",
    "right" : "return \"id('\" + escape(id) + \"')\";",
    "info" : "ReturnStatement[18284-18318]:ReturnStatement[18316-18350]"
  }, {
    "left" : "StringBuffer buffer = new StringBuffer();",
    "right" : "StringBuffer buffer = new StringBuffer();",
    "info" : "VariableDeclarationStatement[18338-18379]:VariableDeclarationStatement[18370-18411]"
  }, {
    "left" : "if (parent != null)",
    "right" : "if (parent != null)",
    "info" : "IfStatement[18388-18463]:IfStatement[18420-18495]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18408-18463]:Block[18440-18495]"
  }, {
    "left" : "buffer.append(parent.asPath());",
    "right" : "buffer.append(parent.asPath());",
    "info" : "ExpressionStatement[18422-18453]:ExpressionStatement[18454-18485]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[18472-20624]:IfStatement[18504-20656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18501-20066]:Block[18533-20098]"
  }, {
    "left" : "if (parent instanceof JDOMNodePointer)",
    "right" : "if (parent instanceof JDOMNodePointer)",
    "info" : "IfStatement[18684-20056]:IfStatement[18716-20088]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18723-20056]:Block[18755-20088]"
  }, {
    "left" : "if (buffer.length() == 0\n                    || buffer.charAt(buffer.length() - 1) != '/')",
    "right" : "if (buffer.length() == 0\n                    || buffer.charAt(buffer.length() - 1) != '/')",
    "info" : "IfStatement[18741-18891]:IfStatement[18773-18923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18832-18891]:Block[18864-18923]"
  }, {
    "left" : "buffer.append('/');",
    "right" : "buffer.append('/');",
    "info" : "ExpressionStatement[18854-18873]:ExpressionStatement[18886-18905]"
  }, {
    "left" : "String nsURI = getNamespaceURI();",
    "right" : "String nsURI = getNamespaceURI();",
    "info" : "VariableDeclarationStatement[18908-18941]:VariableDeclarationStatement[18940-18973]"
  }, {
    "left" : "String ln = JDOMNodePointer.getLocalName(node);",
    "right" : "String ln = JDOMNodePointer.getLocalName(node);",
    "info" : "VariableDeclarationStatement[18958-19005]:VariableDeclarationStatement[18990-19037]"
  }, {
    "left" : "if (equalStrings(nsURI, \n                        getNamespaceResolver().getDefaultNamespaceURI()))",
    "right" : "if (equalStrings(nsURI, \n                        getNamespaceResolver().getDefaultNamespaceURI()))",
    "info" : "IfStatement[19039-20041]:IfStatement[19071-20073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19138-19312]:Block[19170-19344]"
  }, {
    "left" : "buffer.append(ln);",
    "right" : "buffer.append(ln);",
    "info" : "ExpressionStatement[19160-19178]:ExpressionStatement[19192-19210]"
  }, {
    "left" : "buffer.append('[');",
    "right" : "buffer.append('[');",
    "info" : "ExpressionStatement[19199-19218]:ExpressionStatement[19231-19250]"
  }, {
    "left" : "buffer.append(getRelativePositionByName()).append(']');",
    "right" : "buffer.append(getRelativePositionByName()).append(']');",
    "info" : "ExpressionStatement[19239-19294]:ExpressionStatement[19271-19326]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19334-20041]:Block[19366-20073]"
  }, {
    "left" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
    "right" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
    "info" : "VariableDeclarationStatement[19356-19412]:VariableDeclarationStatement[19388-19444]"
  }, {
    "left" : "if (prefix != null)",
    "right" : "if (prefix != null)",
    "info" : "IfStatement[19433-20023]:IfStatement[19465-20055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19453-19766]:Block[19485-19798]"
  }, {
    "left" : "buffer.append(prefix);",
    "right" : "buffer.append(prefix);",
    "info" : "ExpressionStatement[19479-19501]:ExpressionStatement[19511-19533]"
  }, {
    "left" : "buffer.append(':');",
    "right" : "buffer.append(':');",
    "info" : "ExpressionStatement[19526-19545]:ExpressionStatement[19558-19577]"
  }, {
    "left" : "buffer.append(ln);",
    "right" : "buffer.append(ln);",
    "info" : "ExpressionStatement[19570-19588]:ExpressionStatement[19602-19620]"
  }, {
    "left" : "buffer.append('[');",
    "right" : "buffer.append('[');",
    "info" : "ExpressionStatement[19613-19632]:ExpressionStatement[19645-19664]"
  }, {
    "left" : "buffer.append(getRelativePositionByName());",
    "right" : "buffer.append(getRelativePositionByName());",
    "info" : "ExpressionStatement[19657-19700]:ExpressionStatement[19689-19732]"
  }, {
    "left" : "buffer.append(']');",
    "right" : "buffer.append(']');",
    "info" : "ExpressionStatement[19725-19744]:ExpressionStatement[19757-19776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19792-20023]:Block[19824-20055]"
  }, {
    "left" : "buffer.append(\"node()\");",
    "right" : "buffer.append(\"node()\");",
    "info" : "ExpressionStatement[19818-19842]:ExpressionStatement[19850-19874]"
  }, {
    "left" : "buffer.append('[');",
    "right" : "buffer.append('[');",
    "info" : "ExpressionStatement[19867-19886]:ExpressionStatement[19899-19918]"
  }, {
    "left" : "buffer.append(getRelativePositionOfElement());",
    "right" : "buffer.append(getRelativePositionOfElement());",
    "info" : "ExpressionStatement[19911-19957]:ExpressionStatement[19943-19989]"
  }, {
    "left" : "buffer.append(']');",
    "right" : "buffer.append(']');",
    "info" : "ExpressionStatement[19982-20001]:ExpressionStatement[20014-20033]"
  }, {
    "left" : "if (node instanceof Text || node instanceof CDATA)",
    "right" : "if (node instanceof Text || node instanceof CDATA)",
    "info" : "IfStatement[20080-20624]:IfStatement[20112-20656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20131-20281]:Block[20163-20313]"
  }, {
    "left" : "buffer.append(\"/text()\");",
    "right" : "buffer.append(\"/text()\");",
    "info" : "ExpressionStatement[20145-20170]:ExpressionStatement[20177-20202]"
  }, {
    "left" : "buffer.append('[').append(getRelativePositionOfTextNode()).append(\n                ']');",
    "right" : "buffer.append('[').append(getRelativePositionOfTextNode()).append(\n                ']');",
    "info" : "ExpressionStatement[20183-20271]:ExpressionStatement[20215-20303]"
  }, {
    "left" : "if (node instanceof ProcessingInstruction)",
    "right" : "if (node instanceof ProcessingInstruction)",
    "info" : "IfStatement[20295-20624]:IfStatement[20327-20656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20338-20624]:Block[20370-20656]"
  }, {
    "left" : "String target = ((ProcessingInstruction) node).getTarget();",
    "right" : "String target = ((ProcessingInstruction) node).getTarget();",
    "info" : "VariableDeclarationStatement[20352-20411]:VariableDeclarationStatement[20384-20443]"
  }, {
    "left" : "buffer.append(\"/processing-instruction(\\'\").append(target).append(\n                \"')\");",
    "right" : "buffer.append(\"/processing-instruction(\\'\").append(target).append(\n                \"')\");",
    "info" : "ExpressionStatement[20424-20513]:ExpressionStatement[20456-20545]"
  }, {
    "left" : "buffer.append('[').append(getRelativePositionOfPI(target)).append(\n                ']');",
    "right" : "buffer.append('[').append(getRelativePositionOfPI(target)).append(\n                ']');",
    "info" : "ExpressionStatement[20526-20614]:ExpressionStatement[20558-20646]"
  }, {
    "left" : "return buffer.toString();",
    "right" : "return buffer.toString();",
    "info" : "ReturnStatement[20633-20658]:ReturnStatement[20665-20690]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20670-20677]:Modifier[20702-20709]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[20678-20684]:SimpleType[20710-20716]"
  }, {
    "left" : "escape",
    "right" : "escape",
    "info" : "SimpleName[20685-20691]:SimpleName[20717-20723]"
  }, {
    "left" : "String string",
    "right" : "String string",
    "info" : "SingleVariableDeclaration[20692-20705]:SingleVariableDeclaration[20724-20737]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20707-21273]:Block[20739-21305]"
  }, {
    "left" : "int index = string.indexOf('\\'');",
    "right" : "int index = string.indexOf('\\'');",
    "info" : "VariableDeclarationStatement[20717-20750]:VariableDeclarationStatement[20749-20782]"
  }, {
    "left" : "while (index != -1)",
    "right" : "while (index != -1)",
    "info" : "WhileStatement[20759-20978]:WhileStatement[20791-21010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20779-20978]:Block[20811-21010]"
  }, {
    "left" : "string =\n                string.substring(0, index)\n                    + \"&apos;\"\n                    + string.substring(index + 1);",
    "right" : "string =\n                string.substring(0, index)\n                    + \"&apos;\"\n                    + string.substring(index + 1);",
    "info" : "ExpressionStatement[20793-20926]:ExpressionStatement[20825-20958]"
  }, {
    "left" : "index = string.indexOf('\\'');",
    "right" : "index = string.indexOf('\\'');",
    "info" : "ExpressionStatement[20939-20968]:ExpressionStatement[20971-21000]"
  }, {
    "left" : "index = string.indexOf('\\\"');",
    "right" : "index = string.indexOf('\\\"');",
    "info" : "ExpressionStatement[20987-21016]:ExpressionStatement[21019-21048]"
  }, {
    "left" : "while (index != -1)",
    "right" : "while (index != -1)",
    "info" : "WhileStatement[21025-21244]:WhileStatement[21057-21276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21045-21244]:Block[21077-21276]"
  }, {
    "left" : "string =\n                string.substring(0, index)\n                    + \"&quot;\"\n                    + string.substring(index + 1);",
    "right" : "string =\n                string.substring(0, index)\n                    + \"&quot;\"\n                    + string.substring(index + 1);",
    "info" : "ExpressionStatement[21059-21192]:ExpressionStatement[21091-21224]"
  }, {
    "left" : "index = string.indexOf('\\\"');",
    "right" : "index = string.indexOf('\\\"');",
    "info" : "ExpressionStatement[21205-21234]:ExpressionStatement[21237-21266]"
  }, {
    "left" : "return string;",
    "right" : "return string;",
    "info" : "ReturnStatement[21253-21267]:ReturnStatement[21285-21299]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21279-21286]:Modifier[21311-21318]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[21287-21290]:PrimitiveType[21319-21322]"
  }, {
    "left" : "getRelativePositionByName",
    "right" : "getRelativePositionByName",
    "info" : "SimpleName[21291-21316]:SimpleName[21323-21348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21319-22098]:Block[21351-22130]"
  }, {
    "left" : "if (node instanceof Element)",
    "right" : "if (node instanceof Element)",
    "info" : "IfStatement[21329-22074]:IfStatement[21361-22106]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21358-22074]:Block[21390-22106]"
  }, {
    "left" : "Object parent = ((Element) node).getParent();",
    "right" : "Object parent = ((Element) node).getParent();",
    "info" : "VariableDeclarationStatement[21372-21417]:VariableDeclarationStatement[21404-21449]"
  }, {
    "left" : "if (!(parent instanceof Element))",
    "right" : "if (!(parent instanceof Element))",
    "info" : "IfStatement[21430-21505]:IfStatement[21462-21537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21464-21505]:Block[21496-21537]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[21482-21491]:ReturnStatement[21514-21523]"
  }, {
    "left" : "List children = ((Element)parent).getContent();",
    "right" : "List children = ((Element)parent).getContent();",
    "info" : "VariableDeclarationStatement[21531-21578]:VariableDeclarationStatement[21563-21610]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[21591-21605]:VariableDeclarationStatement[21623-21637]"
  }, {
    "left" : "String name = ((Element) node).getQualifiedName();",
    "right" : "String name = ((Element) node).getQualifiedName();",
    "info" : "VariableDeclarationStatement[21618-21668]:VariableDeclarationStatement[21650-21700]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[21681-22038]:ForStatement[21713-22070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21723-22038]:Block[21755-22070]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[21741-21772]:VariableDeclarationStatement[21773-21804]"
  }, {
    "left" : "if ((child instanceof Element)\n                    && ((Element) child).getQualifiedName().equals(name))",
    "right" : "if ((child instanceof Element)\n                    && ((Element) child).getQualifiedName().equals(name))",
    "info" : "IfStatement[21789-21942]:IfStatement[21821-21974]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21894-21942]:Block[21926-21974]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[21916-21924]:ExpressionStatement[21948-21956]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[21959-22024]:IfStatement[21991-22056]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21978-22024]:Block[22010-22056]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22000-22006]:BreakStatement[22032-22038]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[22051-22064]:ReturnStatement[22083-22096]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[22083-22092]:ReturnStatement[22115-22124]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22108-22115]:Modifier[22140-22147]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[22116-22119]:PrimitiveType[22148-22151]"
  }, {
    "left" : "getRelativePositionOfElement",
    "right" : "getRelativePositionOfElement",
    "info" : "SimpleName[22120-22148]:SimpleName[22152-22180]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22151-22790]:Block[22183-22822]"
  }, {
    "left" : "Object parent = ((Element) node).getParent();",
    "right" : "Object parent = ((Element) node).getParent();",
    "info" : "VariableDeclarationStatement[22161-22206]:VariableDeclarationStatement[22193-22238]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[22215-22268]:IfStatement[22247-22300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22235-22268]:Block[22267-22300]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[22249-22258]:ReturnStatement[22281-22290]"
  }, {
    "left" : "List children;",
    "right" : "List children;",
    "info" : "VariableDeclarationStatement[22277-22291]:VariableDeclarationStatement[22309-22323]"
  }, {
    "left" : "if (parent instanceof Element)",
    "right" : "if (parent instanceof Element)",
    "info" : "IfStatement[22300-22480]:IfStatement[22332-22512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22331-22398]:Block[22363-22430]"
  }, {
    "left" : "children = ((Element) parent).getContent();",
    "right" : "children = ((Element) parent).getContent();",
    "info" : "ExpressionStatement[22345-22388]:ExpressionStatement[22377-22420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22412-22480]:Block[22444-22512]"
  }, {
    "left" : "children = ((Document) parent).getContent();",
    "right" : "children = ((Document) parent).getContent();",
    "info" : "ExpressionStatement[22426-22470]:ExpressionStatement[22458-22502]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[22489-22503]:VariableDeclarationStatement[22521-22535]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[22512-22762]:ForStatement[22544-22794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22554-22762]:Block[22586-22794]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[22568-22599]:VariableDeclarationStatement[22600-22631]"
  }, {
    "left" : "if (child instanceof Element)",
    "right" : "if (child instanceof Element)",
    "info" : "IfStatement[22612-22682]:IfStatement[22644-22714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22642-22682]:Block[22674-22714]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[22660-22668]:ExpressionStatement[22692-22700]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[22695-22752]:IfStatement[22727-22784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22714-22752]:Block[22746-22784]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22732-22738]:BreakStatement[22764-22770]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[22771-22784]:ReturnStatement[22803-22816]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22796-22803]:Modifier[22828-22835]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[22804-22807]:PrimitiveType[22836-22839]"
  }, {
    "left" : "getRelativePositionOfTextNode",
    "right" : "getRelativePositionOfTextNode",
    "info" : "SimpleName[22808-22837]:SimpleName[22840-22869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22840-23493]:Block[22872-23525]"
  }, {
    "left" : "Element parent;",
    "right" : "Element parent;",
    "info" : "VariableDeclarationStatement[22850-22865]:VariableDeclarationStatement[22882-22897]"
  }, {
    "left" : "if (node instanceof Text)",
    "right" : "if (node instanceof Text)",
    "info" : "IfStatement[22874-23053]:IfStatement[22906-23085]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22900-22969]:Block[22932-23001]"
  }, {
    "left" : "parent = (Element) ((Text) node).getParent();",
    "right" : "parent = (Element) ((Text) node).getParent();",
    "info" : "ExpressionStatement[22914-22959]:ExpressionStatement[22946-22991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22983-23053]:Block[23015-23085]"
  }, {
    "left" : "parent = (Element) ((CDATA) node).getParent();",
    "right" : "parent = (Element) ((CDATA) node).getParent();",
    "info" : "ExpressionStatement[22997-23043]:ExpressionStatement[23029-23075]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[23062-23115]:IfStatement[23094-23147]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23082-23115]:Block[23114-23147]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[23096-23105]:ReturnStatement[23128-23137]"
  }, {
    "left" : "List children = parent.getContent();",
    "right" : "List children = parent.getContent();",
    "info" : "VariableDeclarationStatement[23124-23160]:VariableDeclarationStatement[23156-23192]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[23169-23183]:VariableDeclarationStatement[23201-23215]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[23192-23465]:ForStatement[23224-23497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23234-23465]:Block[23266-23497]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[23248-23279]:VariableDeclarationStatement[23280-23311]"
  }, {
    "left" : "if (child instanceof Text || child instanceof CDATA)",
    "right" : "if (child instanceof Text || child instanceof CDATA)",
    "info" : "IfStatement[23292-23385]:IfStatement[23324-23417]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23345-23385]:Block[23377-23417]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[23363-23371]:ExpressionStatement[23395-23403]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[23398-23455]:IfStatement[23430-23487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23417-23455]:Block[23449-23487]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23435-23441]:BreakStatement[23467-23473]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[23474-23487]:ReturnStatement[23506-23519]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23499-23506]:Modifier[23531-23538]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[23507-23510]:PrimitiveType[23539-23542]"
  }, {
    "left" : "getRelativePositionOfPI",
    "right" : "getRelativePositionOfPI",
    "info" : "SimpleName[23511-23534]:SimpleName[23543-23566]"
  }, {
    "left" : "String target",
    "right" : "String target",
    "info" : "SingleVariableDeclaration[23535-23548]:SingleVariableDeclaration[23567-23580]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23550-24204]:Block[23582-24236]"
  }, {
    "left" : "Element parent = (Element) ((ProcessingInstruction) node).getParent();",
    "right" : "Element parent = (Element) ((ProcessingInstruction) node).getParent();",
    "info" : "VariableDeclarationStatement[23560-23630]:VariableDeclarationStatement[23592-23662]"
  }, {
    "left" : "if (parent == null)",
    "right" : "if (parent == null)",
    "info" : "IfStatement[23639-23692]:IfStatement[23671-23724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23659-23692]:Block[23691-23724]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[23673-23682]:ReturnStatement[23705-23714]"
  }, {
    "left" : "List children = parent.getContent();",
    "right" : "List children = parent.getContent();",
    "info" : "VariableDeclarationStatement[23701-23737]:VariableDeclarationStatement[23733-23769]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[23746-23760]:VariableDeclarationStatement[23778-23792]"
  }, {
    "left" : "for (int i = 0; i < children.size(); i++)",
    "right" : "for (int i = 0; i < children.size(); i++)",
    "info" : "ForStatement[23769-24176]:ForStatement[23801-24208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23811-24176]:Block[23843-24208]"
  }, {
    "left" : "Object child = children.get(i);",
    "right" : "Object child = children.get(i);",
    "info" : "VariableDeclarationStatement[23825-23856]:VariableDeclarationStatement[23857-23888]"
  }, {
    "left" : "if (child instanceof ProcessingInstruction\n                && (target == null\n                    || target.equals(\n                        ((ProcessingInstruction) child).getTarget())))",
    "right" : "if (child instanceof ProcessingInstruction\n                && (target == null\n                    || target.equals(\n                        ((ProcessingInstruction) child).getTarget())))",
    "info" : "IfStatement[23869-24096]:IfStatement[23901-24128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24056-24096]:Block[24088-24128]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[24074-24082]:ExpressionStatement[24106-24114]"
  }, {
    "left" : "if (child == node)",
    "right" : "if (child == node)",
    "info" : "IfStatement[24109-24166]:IfStatement[24141-24198]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24128-24166]:Block[24160-24198]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24146-24152]:BreakStatement[24178-24184]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[24185-24198]:ReturnStatement[24217-24230]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24210-24216]:Modifier[24242-24248]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[24217-24220]:PrimitiveType[24249-24252]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[24221-24229]:SimpleName[24253-24261]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24232-24285]:Block[24264-24317]"
  }, {
    "left" : "return System.identityHashCode(node);",
    "right" : "return System.identityHashCode(node);",
    "info" : "ReturnStatement[24242-24279]:ReturnStatement[24274-24311]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24291-24297]:Modifier[24323-24329]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[24298-24305]:PrimitiveType[24330-24337]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[24306-24312]:SimpleName[24338-24344]"
  }, {
    "left" : "Object object",
    "right" : "Object object",
    "info" : "SingleVariableDeclaration[24313-24326]:SingleVariableDeclaration[24345-24358]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24328-24583]:Block[24360-24615]"
  }, {
    "left" : "if (object == this)",
    "right" : "if (object == this)",
    "info" : "IfStatement[24338-24394]:IfStatement[24370-24426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24358-24394]:Block[24390-24426]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[24372-24384]:ReturnStatement[24404-24416]"
  }, {
    "left" : "if (!(object instanceof JDOMNodePointer))",
    "right" : "if (!(object instanceof JDOMNodePointer))",
    "info" : "IfStatement[24404-24483]:IfStatement[24436-24515]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24446-24483]:Block[24478-24515]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[24460-24473]:ReturnStatement[24492-24505]"
  }, {
    "left" : "JDOMNodePointer other = (JDOMNodePointer) object;",
    "right" : "JDOMNodePointer other = (JDOMNodePointer) object;",
    "info" : "VariableDeclarationStatement[24493-24542]:VariableDeclarationStatement[24525-24574]"
  }, {
    "left" : "return node == other.node;",
    "right" : "return node == other.node;",
    "info" : "ReturnStatement[24551-24577]:ReturnStatement[24583-24609]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[24588-24595]:Modifier[24620-24627]"
  }, {
    "left" : "AbstractFactory",
    "right" : "AbstractFactory",
    "info" : "SimpleType[24596-24611]:SimpleType[24628-24643]"
  }, {
    "left" : "getAbstractFactory",
    "right" : "getAbstractFactory",
    "info" : "SimpleName[24612-24630]:SimpleName[24644-24662]"
  }, {
    "left" : "JXPathContext context",
    "right" : "JXPathContext context",
    "info" : "SingleVariableDeclaration[24631-24652]:SingleVariableDeclaration[24663-24684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24654-24935]:Block[24686-24967]"
  }, {
    "left" : "AbstractFactory factory = context.getFactory();",
    "right" : "AbstractFactory factory = context.getFactory();",
    "info" : "VariableDeclarationStatement[24664-24711]:VariableDeclarationStatement[24696-24743]"
  }, {
    "left" : "if (factory == null)",
    "right" : "if (factory == null)",
    "info" : "IfStatement[24720-24905]:IfStatement[24752-24937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24741-24905]:Block[24773-24937]"
  }, {
    "left" : "throw new JXPathException(\n                \"Factory is not set on the JXPathContext - cannot create path: \"\n                    + asPath());",
    "right" : "throw new JXPathException(\n                \"Factory is not set on the JXPathContext - cannot create path: \"\n                    + asPath());",
    "info" : "ThrowStatement[24755-24895]:ThrowStatement[24787-24927]"
  }, {
    "left" : "return factory;",
    "right" : "return factory;",
    "info" : "ReturnStatement[24914-24929]:ReturnStatement[24946-24961]"
  } ]
}