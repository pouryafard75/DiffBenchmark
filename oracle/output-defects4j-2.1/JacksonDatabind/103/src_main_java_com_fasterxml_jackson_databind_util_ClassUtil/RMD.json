{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ClassUtil",
      "right" : "ClassUtil",
      "info" : "TypeDeclaration[474-42825]:TypeDeclaration[533-43111]"
    }, {
      "left" : "private final static Class<?> CLS_OBJECT = Object.class;",
      "right" : "private final static Class<?> CLS_OBJECT = Object.class;",
      "info" : "FieldDeclaration[509-565]:FieldDeclaration[568-624]"
    }, {
      "left" : "private final static Annotation[] NO_ANNOTATIONS = new Annotation[0];",
      "right" : "private final static Annotation[] NO_ANNOTATIONS = new Annotation[0];",
      "info" : "FieldDeclaration[571-640]:FieldDeclaration[630-699]"
    }, {
      "left" : "private final static Ctor[] NO_CTORS = new Ctor[0];",
      "right" : "private final static Ctor[] NO_CTORS = new Ctor[0];",
      "info" : "FieldDeclaration[645-696]:FieldDeclaration[704-755]"
    }, {
      "left" : "private final static Iterator<?> EMPTY_ITERATOR = Collections.emptyIterator();",
      "right" : "private final static Iterator<?> EMPTY_ITERATOR = Collections.emptyIterator();",
      "info" : "FieldDeclaration[702-780]:FieldDeclaration[761-839]"
    }, {
      "left" : "public static <T> Iterator<T> emptyIterator()",
      "right" : "public static <T> Iterator<T> emptyIterator()",
      "info" : "MethodDeclaration[960-1127]:MethodDeclaration[1019-1186]"
    }, {
      "left" : "public static List<JavaType> findSuperTypes(JavaType type, Class<?> endBefore,\n            boolean addClassItself)",
      "right" : "public static List<JavaType> findSuperTypes(JavaType type, Class<?> endBefore,\n            boolean addClassItself)",
      "info" : "MethodDeclaration[1319-2432]:MethodDeclaration[1378-2491]"
    }, {
      "left" : "public static List<Class<?>> findRawSuperTypes(Class<?> cls, Class<?> endBefore, boolean addClassItself)",
      "right" : "public static List<Class<?>> findRawSuperTypes(Class<?> cls, Class<?> endBefore, boolean addClassItself)",
      "info" : "MethodDeclaration[2438-2864]:MethodDeclaration[2497-2923]"
    }, {
      "left" : "public static List<Class<?>> findSuperClasses(Class<?> cls, Class<?> endBefore,\n            boolean addClassItself)",
      "right" : "public static List<Class<?>> findSuperClasses(Class<?> cls, Class<?> endBefore,\n            boolean addClassItself)",
      "info" : "MethodDeclaration[2870-3692]:MethodDeclaration[2929-3751]"
    }, {
      "left" : "// since 2.7\n    public static List<Class<?>> findSuperTypes(Class<?> cls, Class<?> endBefore)",
      "right" : "// since 2.7\n    public static List<Class<?>> findSuperTypes(Class<?> cls, Class<?> endBefore)",
      "info" : "MethodDeclaration[3698-3887]:MethodDeclaration[3757-3946]"
    }, {
      "left" : "// since 2.7\n    public static List<Class<?>> findSuperTypes(Class<?> cls, Class<?> endBefore, List<Class<?>> result)",
      "right" : "// since 2.7\n    public static List<Class<?>> findSuperTypes(Class<?> cls, Class<?> endBefore, List<Class<?>> result)",
      "info" : "MethodDeclaration[3893-4111]:MethodDeclaration[3952-4170]"
    }, {
      "left" : "private static void _addSuperTypes(JavaType type, Class<?> endBefore, Collection<JavaType> result,\n            boolean addClassItself)",
      "right" : "private static void _addSuperTypes(JavaType type, Class<?> endBefore, Collection<JavaType> result,\n            boolean addClassItself)",
      "info" : "MethodDeclaration[4117-4823]:MethodDeclaration[4176-4882]"
    }, {
      "left" : "private static void _addRawSuperTypes(Class<?> cls, Class<?> endBefore, Collection<Class<?>> result, boolean addClassItself)",
      "right" : "private static void _addRawSuperTypes(Class<?> cls, Class<?> endBefore, Collection<Class<?>> result, boolean addClassItself)",
      "info" : "MethodDeclaration[4829-5428]:MethodDeclaration[4888-5487]"
    }, {
      "left" : "public static String canBeABeanType(Class<?> type)",
      "right" : "public static String canBeABeanType(Class<?> type)",
      "info" : "MethodDeclaration[5614-6214]:MethodDeclaration[5673-6273]"
    }, {
      "left" : "public static String isLocalType(Class<?> type, boolean allowNonStatic)",
      "right" : "public static String isLocalType(Class<?> type, boolean allowNonStatic)",
      "info" : "MethodDeclaration[6224-7326]:MethodDeclaration[6283-7385]"
    }, {
      "left" : "public static Class<?> getOuterClass(Class<?> type)",
      "right" : "public static Class<?> getOuterClass(Class<?> type)",
      "info" : "MethodDeclaration[7332-7876]:MethodDeclaration[7391-7935]"
    }, {
      "left" : "public static boolean isProxyType(Class<?> type)",
      "right" : "public static boolean isProxyType(Class<?> type)",
      "info" : "MethodDeclaration[7891-8673]:MethodDeclaration[7950-8732]"
    }, {
      "left" : "public static boolean isConcrete(Class<?> type)",
      "right" : "public static boolean isConcrete(Class<?> type)",
      "info" : "MethodDeclaration[8679-8982]:MethodDeclaration[8738-9041]"
    }, {
      "left" : "public static boolean isConcrete(Member member)",
      "right" : "public static boolean isConcrete(Member member)",
      "info" : "MethodDeclaration[8988-9158]:MethodDeclaration[9047-9217]"
    }, {
      "left" : "public static boolean isCollectionMapOrArray(Class<?> type)",
      "right" : "public static boolean isCollectionMapOrArray(Class<?> type)",
      "info" : "MethodDeclaration[9168-9427]:MethodDeclaration[9227-9486]"
    }, {
      "left" : "public static boolean isBogusClass(Class<?> cls)",
      "right" : "public static boolean isBogusClass(Class<?> cls)",
      "info" : "MethodDeclaration[9433-9627]:MethodDeclaration[9492-9686]"
    }, {
      "left" : "public static boolean isNonStaticInnerClass(Class<?> cls)",
      "right" : "public static boolean isNonStaticInnerClass(Class<?> cls)",
      "info" : "MethodDeclaration[9633-9805]:MethodDeclaration[9692-9864]"
    }, {
      "left" : "public static boolean isObjectOrPrimitive(Class<?> cls)",
      "right" : "public static boolean isObjectOrPrimitive(Class<?> cls)",
      "info" : "MethodDeclaration[9811-9965]:MethodDeclaration[9870-10024]"
    }, {
      "left" : "public static boolean hasClass(Object inst, Class<?> raw)",
      "right" : "public static boolean hasClass(Object inst, Class<?> raw)",
      "info" : "MethodDeclaration[9971-10252]:MethodDeclaration[10030-10311]"
    }, {
      "left" : "public static void verifyMustOverride(Class<?> expType, Object instance,\n            String method)",
      "right" : "public static void verifyMustOverride(Class<?> expType, Object instance,\n            String method)",
      "info" : "MethodDeclaration[10258-10670]:MethodDeclaration[10317-10729]"
    }, {
      "left" : "// since 2.6\n    public static boolean hasGetterSignature(Method m)",
      "right" : "// since 2.6\n    public static boolean hasGetterSignature(Method m)",
      "info" : "MethodDeclaration[10857-11493]:MethodDeclaration[10916-11552]"
    }, {
      "left" : "public static Throwable throwIfError(Throwable t)",
      "right" : "public static Throwable throwIfError(Throwable t)",
      "info" : "MethodDeclaration[11686-11999]:MethodDeclaration[11745-12058]"
    }, {
      "left" : "public static Throwable throwIfRTE(Throwable t)",
      "right" : "public static Throwable throwIfRTE(Throwable t)",
      "info" : "MethodDeclaration[12005-12349]:MethodDeclaration[12064-12408]"
    }, {
      "left" : "public static Throwable throwIfIOE(Throwable t) throws IOException",
      "right" : "public static Throwable throwIfIOE(Throwable t) throws IOException",
      "info" : "MethodDeclaration[12355-12703]:MethodDeclaration[12414-12762]"
    }, {
      "left" : "public static Throwable getRootCause(Throwable t)",
      "right" : "public static Throwable getRootCause(Throwable t)",
      "info" : "MethodDeclaration[12890-13171]:MethodDeclaration[12949-13230]"
    }, {
      "left" : "public static Throwable throwRootCauseIfIOE(Throwable t) throws IOException",
      "right" : "public static Throwable throwRootCauseIfIOE(Throwable t) throws IOException",
      "info" : "MethodDeclaration[13177-13498]:MethodDeclaration[13236-13557]"
    }, {
      "left" : "public static void throwAsIAE(Throwable t)",
      "right" : "public static void throwAsIAE(Throwable t)",
      "info" : "MethodDeclaration[13504-13769]:MethodDeclaration[13563-13828]"
    }, {
      "left" : "public static void throwAsIAE(Throwable t, String msg)",
      "right" : "public static void throwAsIAE(Throwable t, String msg)",
      "info" : "MethodDeclaration[13775-14153]:MethodDeclaration[13834-14212]"
    }, {
      "left" : "public static <T> T throwAsMappingException(DeserializationContext ctxt,\n            IOException e0) throws JsonMappingException",
      "right" : "public static <T> T throwAsMappingException(DeserializationContext ctxt,\n            IOException e0) throws JsonMappingException",
      "info" : "MethodDeclaration[14159-14559]:MethodDeclaration[14218-14618]"
    }, {
      "left" : "public static void unwrapAndThrowAsIAE(Throwable t)",
      "right" : "public static void unwrapAndThrowAsIAE(Throwable t)",
      "info" : "MethodDeclaration[14565-14908]:MethodDeclaration[14624-14967]"
    }, {
      "left" : "public static void unwrapAndThrowAsIAE(Throwable t, String msg)",
      "right" : "public static void unwrapAndThrowAsIAE(Throwable t, String msg)",
      "info" : "MethodDeclaration[14914-15274]:MethodDeclaration[14973-15333]"
    }, {
      "left" : "public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)\n        throws IOException",
      "right" : "public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)\n        throws IOException",
      "info" : "MethodDeclaration[15280-16217]:MethodDeclaration[15339-16276]"
    }, {
      "left" : "public static void closeOnFailAndThrowAsIOE(JsonGenerator g,\n            Closeable toClose, Exception fail)\n        throws IOException",
      "right" : "public static void closeOnFailAndThrowAsIOE(JsonGenerator g,\n            Closeable toClose, Exception fail)\n        throws IOException",
      "info" : "MethodDeclaration[16223-17297]:MethodDeclaration[16282-17356]"
    }, {
      "left" : "public static <T> T createInstance(Class<T> cls, boolean canFixAccess)\n        throws IllegalArgumentException",
      "right" : "public static <T> T createInstance(Class<T> cls, boolean canFixAccess)\n        throws IllegalArgumentException",
      "info" : "MethodDeclaration[17468-18602]:MethodDeclaration[17527-18661]"
    }, {
      "left" : "public static <T> Constructor<T> findConstructor(Class<T> cls, boolean forceAccess)\n        throws IllegalArgumentException",
      "right" : "public static <T> Constructor<T> findConstructor(Class<T> cls, boolean forceAccess)\n        throws IllegalArgumentException",
      "info" : "MethodDeclaration[18608-19551]:MethodDeclaration[18667-19610]"
    }, {
      "left" : "public static Class<?> classOf(Object inst)",
      "right" : "public static Class<?> classOf(Object inst)",
      "info" : "MethodDeclaration[19739-19919]:MethodDeclaration[19798-19978]"
    }, {
      "left" : "public static Class<?> rawClass(JavaType t)",
      "right" : "public static Class<?> rawClass(JavaType t)",
      "info" : "MethodDeclaration[19929-20106]:MethodDeclaration[19988-20165]"
    }, {
      "left" : "public static <T> T nonNull(T valueOrNull, T defaultValue)",
      "right" : "public static <T> T nonNull(T valueOrNull, T defaultValue)",
      "info" : "MethodDeclaration[20112-20279]:MethodDeclaration[20171-20338]"
    }, {
      "left" : "public static String nullOrToString(Object value)",
      "right" : "public static String nullOrToString(Object value)",
      "info" : "MethodDeclaration[20285-20473]:MethodDeclaration[20344-20532]"
    }, {
      "left" : "public static String nonNullString(String str)",
      "right" : "public static String nonNullString(String str)",
      "info" : "MethodDeclaration[20479-20647]:MethodDeclaration[20538-20706]"
    }, {
      "left" : "public static String quotedOr(Object str, String forNull)",
      "right" : "public static String quotedOr(Object str, String forNull)",
      "info" : "MethodDeclaration[20653-21004]:MethodDeclaration[20712-21063]"
    }, {
      "left" : "public static String getClassDescription(Object classOrInstance)",
      "right" : "public static String getClassDescription(Object classOrInstance)",
      "info" : "MethodDeclaration[21204-21709]:MethodDeclaration[21263-21768]"
    }, {
      "left" : "public static String classNameOf(Object inst)",
      "right" : "public static String classNameOf(Object inst)",
      "info" : "MethodDeclaration[21715-22090]:MethodDeclaration[21774-22149]"
    }, {
      "left" : "public static String nameOf(Class<?> cls)",
      "right" : "public static String nameOf(Class<?> cls)",
      "info" : "MethodDeclaration[22096-22798]:MethodDeclaration[22155-22857]"
    }, {
      "left" : "public static String nameOf(Named named)",
      "right" : "public static String nameOf(Named named)",
      "info" : "MethodDeclaration[22804-23123]:MethodDeclaration[22863-23182]"
    }, {
      "left" : "public static String backticked(String text)",
      "right" : "public static String backticked(String text)",
      "info" : "MethodDeclaration[23318-23617]:MethodDeclaration[23377-23676]"
    }, {
      "left" : "public static Object defaultValue(Class<?> cls)",
      "right" : "public static Object defaultValue(Class<?> cls)",
      "info" : "MethodDeclaration[24191-25127]:MethodDeclaration[24477-25413]"
    }, {
      "left" : "public static Class<?> wrapperType(Class<?> primitiveType)",
      "right" : "public static Class<?> wrapperType(Class<?> primitiveType)",
      "info" : "MethodDeclaration[25133-26126]:MethodDeclaration[25419-26412]"
    }, {
      "left" : "public static Class<?> primitiveType(Class<?> type)",
      "right" : "public static Class<?> primitiveType(Class<?> type)",
      "info" : "MethodDeclaration[26132-27131]:MethodDeclaration[26418-27417]"
    }, {
      "left" : "public static void checkAndFixAccess(Member member)",
      "right" : "public static void checkAndFixAccess(Member member)",
      "info" : "MethodDeclaration[27321-27623]:MethodDeclaration[27607-27909]"
    }, {
      "left" : "public static void checkAndFixAccess(Member member, boolean force)",
      "right" : "public static void checkAndFixAccess(Member member, boolean force)",
      "info" : "MethodDeclaration[27629-29285]:MethodDeclaration[27915-29571]"
    }, {
      "left" : "public static Class<? extends Enum<?>> findEnumType(EnumSet<?> s)",
      "right" : "public static Class<? extends Enum<?>> findEnumType(EnumSet<?> s)",
      "info" : "MethodDeclaration[29462-30046]:MethodDeclaration[29748-30332]"
    }, {
      "left" : "public static Class<? extends Enum<?>> findEnumType(EnumMap<?,?> m)",
      "right" : "public static Class<? extends Enum<?>> findEnumType(EnumMap<?,?> m)",
      "info" : "MethodDeclaration[30052-30584]:MethodDeclaration[30338-30870]"
    }, {
      "left" : "public static Class<? extends Enum<?>> findEnumType(Enum<?> en)",
      "right" : "public static Class<? extends Enum<?>> findEnumType(Enum<?> en)",
      "info" : "MethodDeclaration[30590-31212]:MethodDeclaration[30876-31498]"
    }, {
      "left" : "public static Class<? extends Enum<?>> findEnumType(Class<?> cls)",
      "right" : "public static Class<? extends Enum<?>> findEnumType(Class<?> cls)",
      "info" : "MethodDeclaration[31218-31842]:MethodDeclaration[31504-32128]"
    }, {
      "left" : "public static <T extends Annotation> Enum<?> findFirstAnnotatedEnumValue(Class<Enum<?>> enumClass, Class<T> annotationClass)",
      "right" : "public static <T extends Annotation> Enum<?> findFirstAnnotatedEnumValue(Class<Enum<?>> enumClass, Class<T> annotationClass)",
      "info" : "MethodDeclaration[31848-33221]:MethodDeclaration[32134-33507]"
    }, {
      "left" : "public static boolean isJacksonStdImpl(Object impl)",
      "right" : "public static boolean isJacksonStdImpl(Object impl)",
      "info" : "MethodDeclaration[33401-33977]:MethodDeclaration[33687-34263]"
    }, {
      "left" : "public static boolean isJacksonStdImpl(Class<?> implClass)",
      "right" : "public static boolean isJacksonStdImpl(Class<?> implClass)",
      "info" : "MethodDeclaration[33983-34121]:MethodDeclaration[34269-34407]"
    }, {
      "left" : "public static String getPackageName(Class<?> cls)",
      "right" : "public static String getPackageName(Class<?> cls)",
      "info" : "MethodDeclaration[34500-34684]:MethodDeclaration[34786-34970]"
    }, {
      "left" : "public static boolean hasEnclosingMethod(Class<?> cls)",
      "right" : "public static boolean hasEnclosingMethod(Class<?> cls)",
      "info" : "MethodDeclaration[34690-34866]:MethodDeclaration[34976-35152]"
    }, {
      "left" : "public static Field[] getDeclaredFields(Class<?> cls)",
      "right" : "public static Field[] getDeclaredFields(Class<?> cls)",
      "info" : "MethodDeclaration[34872-35007]:MethodDeclaration[35158-35293]"
    }, {
      "left" : "public static Method[] getDeclaredMethods(Class<?> cls)",
      "right" : "public static Method[] getDeclaredMethods(Class<?> cls)",
      "info" : "MethodDeclaration[35013-35151]:MethodDeclaration[35299-35437]"
    }, {
      "left" : "public static Annotation[] findClassAnnotations(Class<?> cls)",
      "right" : "public static Annotation[] findClassAnnotations(Class<?> cls)",
      "info" : "MethodDeclaration[35157-35390]:MethodDeclaration[35443-35676]"
    }, {
      "left" : "public static Method[] getClassMethods(Class<?> cls)",
      "right" : "public static Method[] getClassMethods(Class<?> cls)",
      "info" : "MethodDeclaration[35396-36541]:MethodDeclaration[35682-36827]"
    }, {
      "left" : "public static Ctor[] getConstructors(Class<?> cls)",
      "right" : "public static Ctor[] getConstructors(Class<?> cls)",
      "info" : "MethodDeclaration[36551-37146]:MethodDeclaration[36837-37432]"
    }, {
      "left" : "public static Class<?> getDeclaringClass(Class<?> cls)",
      "right" : "public static Class<?> getDeclaringClass(Class<?> cls)",
      "info" : "MethodDeclaration[37299-37469]:MethodDeclaration[37585-37755]"
    }, {
      "left" : "public static Type getGenericSuperclass(Class<?> cls)",
      "right" : "public static Type getGenericSuperclass(Class<?> cls)",
      "info" : "MethodDeclaration[37475-37613]:MethodDeclaration[37761-37899]"
    }, {
      "left" : "public static Type[] getGenericInterfaces(Class<?> cls)",
      "right" : "public static Type[] getGenericInterfaces(Class<?> cls)",
      "info" : "MethodDeclaration[37619-37759]:MethodDeclaration[37905-38045]"
    }, {
      "left" : "public static Class<?> getEnclosingClass(Class<?> cls)",
      "right" : "public static Class<?> getEnclosingClass(Class<?> cls)",
      "info" : "MethodDeclaration[37765-37997]:MethodDeclaration[38051-38283]"
    }, {
      "left" : "private static Class<?>[] _interfaces(Class<?> cls)",
      "right" : "private static Class<?>[] _interfaces(Class<?> cls)",
      "info" : "MethodDeclaration[38003-38098]:MethodDeclaration[38289-38384]"
    }, {
      "left" : "EnumTypeLocator",
      "right" : "EnumTypeLocator",
      "info" : "TypeDeclaration[38270-41115]:TypeDeclaration[38556-41401]"
    }, {
      "left" : "final static EnumTypeLocator instance = new EnumTypeLocator();",
      "right" : "final static EnumTypeLocator instance = new EnumTypeLocator();",
      "info" : "FieldDeclaration[38480-38542]:FieldDeclaration[38766-38828]"
    }, {
      "left" : "private final Field enumSetTypeField;",
      "right" : "private final Field enumSetTypeField;",
      "info" : "FieldDeclaration[38552-38589]:FieldDeclaration[38838-38875]"
    }, {
      "left" : "private final Field enumMapTypeField;",
      "right" : "private final Field enumMapTypeField;",
      "info" : "FieldDeclaration[38598-38635]:FieldDeclaration[38884-38921]"
    }, {
      "left" : "private EnumTypeLocator()",
      "right" : "private EnumTypeLocator()",
      "info" : "MethodDeclaration[38650-38995]:MethodDeclaration[38936-39281]"
    }, {
      "left" : "public Class<? extends Enum<?>> enumTypeFor(EnumSet<?> set)",
      "right" : "public Class<? extends Enum<?>> enumTypeFor(EnumSet<?> set)",
      "info" : "MethodDeclaration[39005-39362]:MethodDeclaration[39291-39648]"
    }, {
      "left" : "public Class<? extends Enum<?>> enumTypeFor(EnumMap<?,?> set)",
      "right" : "public Class<? extends Enum<?>> enumTypeFor(EnumMap<?,?> set)",
      "info" : "MethodDeclaration[39372-39731]:MethodDeclaration[39658-40017]"
    }, {
      "left" : "private Object get(Object bean, Field field)",
      "right" : "private Object get(Object bean, Field field)",
      "info" : "MethodDeclaration[39746-39973]:MethodDeclaration[40032-40259]"
    }, {
      "left" : "private static Field locateField(Class<?> fromClass, String expectedName, Class<?> type)",
      "right" : "private static Field locateField(Class<?> fromClass, String expectedName, Class<?> type)",
      "info" : "MethodDeclaration[39988-41109]:MethodDeclaration[40274-41395]"
    }, {
      "left" : "Ctor",
      "right" : "Ctor",
      "info" : "TypeDeclaration[41304-42823]:TypeDeclaration[41590-43109]"
    }, {
      "left" : "public final Constructor<?> _ctor;",
      "right" : "public final Constructor<?> _ctor;",
      "info" : "FieldDeclaration[41547-41581]:FieldDeclaration[41833-41867]"
    }, {
      "left" : "private Annotation[] _annotations;",
      "right" : "private Annotation[] _annotations;",
      "info" : "FieldDeclaration[41591-41625]:FieldDeclaration[41877-41911]"
    }, {
      "left" : "private  Annotation[][] _paramAnnotations;",
      "right" : "private  Annotation[][] _paramAnnotations;",
      "info" : "FieldDeclaration[41635-41677]:FieldDeclaration[41921-41963]"
    }, {
      "left" : "private int _paramCount = -1;",
      "right" : "private int _paramCount = -1;",
      "info" : "FieldDeclaration[41695-41724]:FieldDeclaration[41981-42010]"
    }, {
      "left" : "public Ctor(Constructor<?> ctor)",
      "right" : "public Ctor(Constructor<?> ctor)",
      "info" : "MethodDeclaration[41742-41812]:MethodDeclaration[42028-42098]"
    }, {
      "left" : "public Constructor<?> getConstructor()",
      "right" : "public Constructor<?> getConstructor()",
      "info" : "MethodDeclaration[41822-41898]:MethodDeclaration[42108-42184]"
    }, {
      "left" : "public int getParamCount()",
      "right" : "public int getParamCount()",
      "info" : "MethodDeclaration[41908-42127]:MethodDeclaration[42194-42413]"
    }, {
      "left" : "public Class<?> getDeclaringClass()",
      "right" : "public Class<?> getDeclaringClass()",
      "info" : "MethodDeclaration[42137-42230]:MethodDeclaration[42423-42516]"
    }, {
      "left" : "public Annotation[] getDeclaredAnnotations()",
      "right" : "public Annotation[] getDeclaredAnnotations()",
      "info" : "MethodDeclaration[42240-42515]:MethodDeclaration[42526-42801]"
    }, {
      "left" : "public  Annotation[][] getParameterAnnotations()",
      "right" : "public  Annotation[][] getParameterAnnotations()",
      "info" : "MethodDeclaration[42525-42817]:MethodDeclaration[42811-43103]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1075-1127]:Block[1134-1186]"
    }, {
      "left" : "return (Iterator<T>) EMPTY_ITERATOR;",
      "right" : "return (Iterator<T>) EMPTY_ITERATOR;",
      "info" : "ReturnStatement[1085-1121]:ReturnStatement[1144-1180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2128-2432]:Block[2187-2491]"
    }, {
      "left" : "if ((type == null) || type.hasRawClass(endBefore) || type.hasRawClass(Object.class))",
      "right" : "if ((type == null) || type.hasRawClass(endBefore) || type.hasRawClass(Object.class))",
      "info" : "IfStatement[2138-2278]:IfStatement[2197-2337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2223-2278]:Block[2282-2337]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[2237-2268]:ReturnStatement[2296-2327]"
    }, {
      "left" : "List<JavaType> result = new ArrayList<JavaType>(8);",
      "right" : "List<JavaType> result = new ArrayList<JavaType>(8);",
      "info" : "VariableDeclarationStatement[2287-2338]:VariableDeclarationStatement[2346-2397]"
    }, {
      "left" : "_addSuperTypes(type, endBefore, result, addClassItself);",
      "right" : "_addSuperTypes(type, endBefore, result, addClassItself);",
      "info" : "ExpressionStatement[2347-2403]:ExpressionStatement[2406-2462]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[2412-2426]:ReturnStatement[2471-2485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2577-2864]:Block[2636-2923]"
    }, {
      "left" : "if ((cls == null) || (cls == endBefore) || (cls == Object.class))",
      "right" : "if ((cls == null) || (cls == endBefore) || (cls == Object.class))",
      "info" : "IfStatement[2587-2708]:IfStatement[2646-2767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2653-2708]:Block[2712-2767]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[2667-2698]:ReturnStatement[2726-2757]"
    }, {
      "left" : "List<Class<?>> result = new ArrayList<Class<?>>(8);",
      "right" : "List<Class<?>> result = new ArrayList<Class<?>>(8);",
      "info" : "VariableDeclarationStatement[2717-2768]:VariableDeclarationStatement[2776-2827]"
    }, {
      "left" : "_addRawSuperTypes(cls, endBefore, result, addClassItself);",
      "right" : "_addRawSuperTypes(cls, endBefore, result, addClassItself);",
      "info" : "ExpressionStatement[2777-2835]:ExpressionStatement[2836-2894]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[2844-2858]:ReturnStatement[2903-2917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3269-3692]:Block[3328-3751]"
    }, {
      "left" : "List<Class<?>> result = new LinkedList<Class<?>>();",
      "right" : "List<Class<?>> result = new LinkedList<Class<?>>();",
      "info" : "VariableDeclarationStatement[3279-3330]:VariableDeclarationStatement[3338-3389]"
    }, {
      "left" : "if ((cls != null) && (cls != endBefore))",
      "right" : "if ((cls != null) && (cls != endBefore))",
      "info" : "IfStatement[3339-3663]:IfStatement[3398-3722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3381-3663]:Block[3440-3722]"
    }, {
      "left" : "if (addClassItself)",
      "right" : "if (addClassItself)",
      "info" : "IfStatement[3395-3463]:IfStatement[3454-3522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3415-3463]:Block[3474-3522]"
    }, {
      "left" : "result.add(cls);",
      "right" : "result.add(cls);",
      "info" : "ExpressionStatement[3433-3449]:ExpressionStatement[3492-3508]"
    }, {
      "left" : "while ((cls = cls.getSuperclass()) != null)",
      "right" : "while ((cls = cls.getSuperclass()) != null)",
      "info" : "WhileStatement[3476-3653]:WhileStatement[3535-3712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3520-3653]:Block[3579-3712]"
    }, {
      "left" : "if (cls == endBefore)",
      "right" : "if (cls == endBefore)",
      "info" : "IfStatement[3538-3606]:IfStatement[3597-3665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3560-3606]:Block[3619-3665]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3582-3588]:BreakStatement[3641-3647]"
    }, {
      "left" : "result.add(cls);",
      "right" : "result.add(cls);",
      "info" : "ExpressionStatement[3623-3639]:ExpressionStatement[3682-3698]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[3672-3686]:ReturnStatement[3731-3745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3805-3887]:Block[3864-3946]"
    }, {
      "left" : "return findSuperTypes(cls, endBefore, new ArrayList<Class<?>>(8));",
      "right" : "return findSuperTypes(cls, endBefore, new ArrayList<Class<?>>(8));",
      "info" : "ReturnStatement[3815-3881]:ReturnStatement[3874-3940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4023-4111]:Block[4082-4170]"
    }, {
      "left" : "_addRawSuperTypes(cls, endBefore, result, false);",
      "right" : "_addRawSuperTypes(cls, endBefore, result, false);",
      "info" : "ExpressionStatement[4033-4082]:ExpressionStatement[4092-4141]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[4091-4105]:ReturnStatement[4150-4164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4256-4823]:Block[4315-4882]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[4266-4315]:IfStatement[4325-4374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4284-4315]:Block[4343-4374]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4298-4305]:ReturnStatement[4357-4364]"
    }, {
      "left" : "final Class<?> cls = type.getRawClass();",
      "right" : "final Class<?> cls = type.getRawClass();",
      "info" : "VariableDeclarationStatement[4324-4364]:VariableDeclarationStatement[4383-4423]"
    }, {
      "left" : "if (cls == endBefore || cls == Object.class)",
      "right" : "if (cls == endBefore || cls == Object.class)",
      "info" : "IfStatement[4373-4429]:IfStatement[4432-4488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4418-4429]:Block[4477-4488]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4420-4427]:ReturnStatement[4479-4486]"
    }, {
      "left" : "if (addClassItself)",
      "right" : "if (addClassItself)",
      "info" : "IfStatement[4438-4620]:IfStatement[4497-4679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4458-4620]:Block[4517-4679]"
    }, {
      "left" : "if (result.contains(type))",
      "right" : "if (result.contains(type))",
      "info" : "IfStatement[4472-4580]:IfStatement[4531-4639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4499-4580]:Block[4558-4639]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4559-4566]:ReturnStatement[4618-4625]"
    }, {
      "left" : "result.add(type);",
      "right" : "result.add(type);",
      "info" : "ExpressionStatement[4593-4610]:ExpressionStatement[4652-4669]"
    }, {
      "left" : "for (JavaType intCls : type.getInterfaces())",
      "right" : "for (JavaType intCls : type.getInterfaces())",
      "info" : "EnhancedForStatement[4629-4746]:EnhancedForStatement[4688-4805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4674-4746]:Block[4733-4805]"
    }, {
      "left" : "_addSuperTypes(intCls, endBefore, result, true);",
      "right" : "_addSuperTypes(intCls, endBefore, result, true);",
      "info" : "ExpressionStatement[4688-4736]:ExpressionStatement[4747-4795]"
    }, {
      "left" : "_addSuperTypes(type.getSuperClass(), endBefore, result, true);",
      "right" : "_addSuperTypes(type.getSuperClass(), endBefore, result, true);",
      "info" : "ExpressionStatement[4755-4817]:ExpressionStatement[4814-4876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4954-5428]:Block[5013-5487]"
    }, {
      "left" : "if (cls == endBefore || cls == null || cls == Object.class)",
      "right" : "if (cls == endBefore || cls == null || cls == Object.class)",
      "info" : "IfStatement[4964-5035]:IfStatement[5023-5094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5024-5035]:Block[5083-5094]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5026-5033]:ReturnStatement[5085-5092]"
    }, {
      "left" : "if (addClassItself)",
      "right" : "if (addClassItself)",
      "info" : "IfStatement[5044-5224]:IfStatement[5103-5283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5064-5224]:Block[5123-5283]"
    }, {
      "left" : "if (result.contains(cls))",
      "right" : "if (result.contains(cls))",
      "info" : "IfStatement[5078-5185]:IfStatement[5137-5244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5104-5185]:Block[5163-5244]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5164-5171]:ReturnStatement[5223-5230]"
    }, {
      "left" : "result.add(cls);",
      "right" : "result.add(cls);",
      "info" : "ExpressionStatement[5198-5214]:ExpressionStatement[5257-5273]"
    }, {
      "left" : "for (Class<?> intCls : _interfaces(cls))",
      "right" : "for (Class<?> intCls : _interfaces(cls))",
      "info" : "EnhancedForStatement[5233-5349]:EnhancedForStatement[5292-5408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5274-5349]:Block[5333-5408]"
    }, {
      "left" : "_addRawSuperTypes(intCls, endBefore, result, true);",
      "right" : "_addRawSuperTypes(intCls, endBefore, result, true);",
      "info" : "ExpressionStatement[5288-5339]:ExpressionStatement[5347-5398]"
    }, {
      "left" : "_addRawSuperTypes(cls.getSuperclass(), endBefore, result, true);",
      "right" : "_addRawSuperTypes(cls.getSuperclass(), endBefore, result, true);",
      "info" : "ExpressionStatement[5358-5422]:ExpressionStatement[5417-5481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5797-6214]:Block[5856-6273]"
    }, {
      "left" : "if (type.isAnnotation())",
      "right" : "if (type.isAnnotation())",
      "info" : "IfStatement[5863-5932]:IfStatement[5922-5991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5888-5932]:Block[5947-5991]"
    }, {
      "left" : "return \"annotation\";",
      "right" : "return \"annotation\";",
      "info" : "ReturnStatement[5902-5922]:ReturnStatement[5961-5981]"
    }, {
      "left" : "if (type.isArray())",
      "right" : "if (type.isArray())",
      "info" : "IfStatement[5941-6000]:IfStatement[6000-6059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5961-6000]:Block[6020-6059]"
    }, {
      "left" : "return \"array\";",
      "right" : "return \"array\";",
      "info" : "ReturnStatement[5975-5990]:ReturnStatement[6034-6049]"
    }, {
      "left" : "if (type.isEnum())",
      "right" : "if (type.isEnum())",
      "info" : "IfStatement[6009-6066]:IfStatement[6068-6125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6028-6066]:Block[6087-6125]"
    }, {
      "left" : "return \"enum\";",
      "right" : "return \"enum\";",
      "info" : "ReturnStatement[6042-6056]:ReturnStatement[6101-6115]"
    }, {
      "left" : "if (type.isPrimitive())",
      "right" : "if (type.isPrimitive())",
      "info" : "IfStatement[6075-6142]:IfStatement[6134-6201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6099-6142]:Block[6158-6201]"
    }, {
      "left" : "return \"primitive\";",
      "right" : "return \"primitive\";",
      "info" : "ReturnStatement[6113-6132]:ReturnStatement[6172-6191]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6196-6208]:ReturnStatement[6255-6267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6300-7326]:Block[6359-7385]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6529-7299]:TryStatement[6588-7358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6533-7216]:Block[6592-7275]"
    }, {
      "left" : "if (hasEnclosingMethod(type))",
      "right" : "if (hasEnclosingMethod(type))",
      "info" : "IfStatement[6612-6699]:IfStatement[6671-6758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6642-6699]:Block[6701-6758]"
    }, {
      "left" : "return \"local/anonymous\";",
      "right" : "return \"local/anonymous\";",
      "info" : "ReturnStatement[6660-6685]:ReturnStatement[6719-6744]"
    }, {
      "left" : "if (!allowNonStatic)",
      "right" : "if (!allowNonStatic)",
      "info" : "IfStatement[6950-7206]:IfStatement[7009-7265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6971-7206]:Block[7030-7265]"
    }, {
      "left" : "if (!Modifier.isStatic(type.getModifiers()))",
      "right" : "if (!Modifier.isStatic(type.getModifiers()))",
      "info" : "IfStatement[6989-7192]:IfStatement[7048-7251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7034-7192]:Block[7093-7251]"
    }, {
      "left" : "if (getEnclosingClass(type) != null)",
      "right" : "if (getEnclosingClass(type) != null)",
      "info" : "IfStatement[7056-7174]:IfStatement[7115-7233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7093-7174]:Block[7152-7233]"
    }, {
      "left" : "return \"non-static member class\";",
      "right" : "return \"non-static member class\";",
      "info" : "ReturnStatement[7119-7152]:ReturnStatement[7178-7211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7253-7256]:Block[7312-7315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7296-7299]:Block[7355-7358]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7308-7320]:ReturnStatement[7367-7379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7475-7876]:Block[7534-7935]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7529-7849]:TryStatement[7588-7908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7533-7817]:Block[7592-7876]"
    }, {
      "left" : "if (hasEnclosingMethod(type))",
      "right" : "if (hasEnclosingMethod(type))",
      "info" : "IfStatement[7612-7686]:IfStatement[7671-7745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7642-7686]:Block[7701-7745]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7660-7672]:ReturnStatement[7719-7731]"
    }, {
      "left" : "if (!Modifier.isStatic(type.getModifiers()))",
      "right" : "if (!Modifier.isStatic(type.getModifiers()))",
      "info" : "IfStatement[7699-7807]:IfStatement[7758-7866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7744-7807]:Block[7803-7866]"
    }, {
      "left" : "return getEnclosingClass(type);",
      "right" : "return getEnclosingClass(type);",
      "info" : "ReturnStatement[7762-7793]:ReturnStatement[7821-7852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7846-7849]:Block[7905-7908]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7858-7870]:ReturnStatement[7917-7929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8157-8673]:Block[8216-8732]"
    }, {
      "left" : "String name = type.getName();",
      "right" : "String name = type.getName();",
      "info" : "VariableDeclarationStatement[8378-8407]:VariableDeclarationStatement[8437-8466]"
    }, {
      "left" : "if (name.startsWith(\"net.sf.cglib.proxy.\")\n            || name.startsWith(\"org.hibernate.proxy.\"))",
      "right" : "if (name.startsWith(\"net.sf.cglib.proxy.\")\n            || name.startsWith(\"org.hibernate.proxy.\"))",
      "info" : "IfStatement[8467-8602]:IfStatement[8526-8661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8566-8602]:Block[8625-8661]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8580-8592]:ReturnStatement[8639-8651]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8654-8667]:ReturnStatement[8713-8726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8866-8982]:Block[8925-9041]"
    }, {
      "left" : "int mod = type.getModifiers();",
      "right" : "int mod = type.getModifiers();",
      "info" : "VariableDeclarationStatement[8876-8906]:VariableDeclarationStatement[8935-8965]"
    }, {
      "left" : "return (mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0;",
      "right" : "return (mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0;",
      "info" : "ReturnStatement[8915-8976]:ReturnStatement[8974-9035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9040-9158]:Block[9099-9217]"
    }, {
      "left" : "int mod = member.getModifiers();",
      "right" : "int mod = member.getModifiers();",
      "info" : "VariableDeclarationStatement[9050-9082]:VariableDeclarationStatement[9109-9141]"
    }, {
      "left" : "return (mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0;",
      "right" : "return (mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0;",
      "info" : "ReturnStatement[9091-9152]:ReturnStatement[9150-9211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9232-9427]:Block[9291-9486]"
    }, {
      "left" : "if (type.isArray())",
      "right" : "if (type.isArray())",
      "info" : "IfStatement[9242-9274]:IfStatement[9301-9333]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9262-9274]:ReturnStatement[9321-9333]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(type))",
      "right" : "if (Collection.class.isAssignableFrom(type))",
      "info" : "IfStatement[9283-9340]:IfStatement[9342-9399]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9328-9340]:ReturnStatement[9387-9399]"
    }, {
      "left" : "if (Map.class.isAssignableFrom(type))",
      "right" : "if (Map.class.isAssignableFrom(type))",
      "info" : "IfStatement[9349-9399]:IfStatement[9408-9458]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9387-9399]:ReturnStatement[9446-9458]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9408-9421]:ReturnStatement[9467-9480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9482-9627]:Block[9541-9686]"
    }, {
      "left" : "return (cls == Void.class || cls == Void.TYPE\n                || cls == com.fasterxml.jackson.databind.annotation.NoClass.class);",
      "right" : "return (cls == Void.class || cls == Void.TYPE\n                || cls == com.fasterxml.jackson.databind.annotation.NoClass.class);",
      "info" : "ReturnStatement[9492-9621]:ReturnStatement[9551-9680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9691-9805]:Block[9750-9864]"
    }, {
      "left" : "return !Modifier.isStatic(cls.getModifiers())\n                && (getEnclosingClass(cls) != null);",
      "right" : "return !Modifier.isStatic(cls.getModifiers())\n                && (getEnclosingClass(cls) != null);",
      "info" : "ReturnStatement[9701-9799]:ReturnStatement[9760-9858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9901-9965]:Block[9960-10024]"
    }, {
      "left" : "return (cls == CLS_OBJECT) || cls.isPrimitive();",
      "right" : "return (cls == CLS_OBJECT) || cls.isPrimitive();",
      "info" : "ReturnStatement[9911-9959]:ReturnStatement[9970-10018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10063-10252]:Block[10122-10311]"
    }, {
      "left" : "return (inst != null) && (inst.getClass() == raw);",
      "right" : "return (inst != null) && (inst.getClass() == raw);",
      "info" : "ReturnStatement[10196-10246]:ReturnStatement[10255-10305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10396-10670]:Block[10455-10729]"
    }, {
      "left" : "if (instance.getClass() != expType)",
      "right" : "if (instance.getClass() != expType)",
      "info" : "IfStatement[10406-10664]:IfStatement[10465-10723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10442-10664]:Block[10501-10723]"
    }, {
      "left" : "throw new IllegalStateException(String.format(\n                    \"Sub-class %s (of class %s) must override method '%s'\",\n                instance.getClass().getName(), expType.getName(), method));",
      "right" : "throw new IllegalStateException(String.format(\n                    \"Sub-class %s (of class %s) must override method '%s'\",\n                instance.getClass().getName(), expType.getName(), method));",
      "info" : "ThrowStatement[10456-10654]:ThrowStatement[10515-10713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11022-11493]:Block[11081-11552]"
    }, {
      "left" : "if (Modifier.isStatic(m.getModifiers()))",
      "right" : "if (Modifier.isStatic(m.getModifiers()))",
      "info" : "IfStatement[11082-11160]:IfStatement[11141-11219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11123-11160]:Block[11182-11219]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11137-11150]:ReturnStatement[11196-11209]"
    }, {
      "left" : "Class<?>[] pts = m.getParameterTypes();",
      "right" : "Class<?>[] pts = m.getParameterTypes();",
      "info" : "VariableDeclarationStatement[11198-11237]:VariableDeclarationStatement[11257-11296]"
    }, {
      "left" : "if (pts != null && pts.length != 0)",
      "right" : "if (pts != null && pts.length != 0)",
      "info" : "IfStatement[11246-11319]:IfStatement[11305-11378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11282-11319]:Block[11341-11378]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11296-11309]:ReturnStatement[11355-11368]"
    }, {
      "left" : "if (Void.TYPE == m.getReturnType())",
      "right" : "if (Void.TYPE == m.getReturnType())",
      "info" : "IfStatement[11362-11435]:IfStatement[11421-11494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11398-11435]:Block[11457-11494]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11412-11425]:ReturnStatement[11471-11484]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11475-11487]:ReturnStatement[11534-11546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11901-11999]:Block[11960-12058]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[11911-11975]:IfStatement[11970-12034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11935-11975]:Block[11994-12034]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[11949-11965]:ThrowStatement[12008-12024]"
    }, {
      "left" : "return t;",
      "right" : "return t;",
      "info" : "ReturnStatement[11984-11993]:ReturnStatement[12043-12052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12229-12349]:Block[12288-12408]"
    }, {
      "left" : "if (t instanceof RuntimeException)",
      "right" : "if (t instanceof RuntimeException)",
      "info" : "IfStatement[12239-12325]:IfStatement[12298-12384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12274-12325]:Block[12333-12384]"
    }, {
      "left" : "throw (RuntimeException) t;",
      "right" : "throw (RuntimeException) t;",
      "info" : "ThrowStatement[12288-12315]:ThrowStatement[12347-12374]"
    }, {
      "left" : "return t;",
      "right" : "return t;",
      "info" : "ReturnStatement[12334-12343]:ReturnStatement[12393-12402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12593-12703]:Block[12652-12762]"
    }, {
      "left" : "if (t instanceof IOException)",
      "right" : "if (t instanceof IOException)",
      "info" : "IfStatement[12603-12679]:IfStatement[12662-12738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12633-12679]:Block[12692-12738]"
    }, {
      "left" : "throw (IOException) t;",
      "right" : "throw (IOException) t;",
      "info" : "ThrowStatement[12647-12669]:ThrowStatement[12706-12728]"
    }, {
      "left" : "return t;",
      "right" : "return t;",
      "info" : "ReturnStatement[12688-12697]:ReturnStatement[12747-12756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13067-13171]:Block[13126-13230]"
    }, {
      "left" : "while (t.getCause() != null)",
      "right" : "while (t.getCause() != null)",
      "info" : "WhileStatement[13077-13147]:WhileStatement[13136-13206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13106-13147]:Block[13165-13206]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[13120-13137]:ExpressionStatement[13179-13196]"
    }, {
      "left" : "return t;",
      "right" : "return t;",
      "info" : "ReturnStatement[13156-13165]:ReturnStatement[13215-13224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13447-13498]:Block[13506-13557]"
    }, {
      "left" : "return throwIfIOE(getRootCause(t));",
      "right" : "return throwIfIOE(getRootCause(t));",
      "info" : "ReturnStatement[13457-13492]:ReturnStatement[13516-13551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13723-13769]:Block[13782-13828]"
    }, {
      "left" : "throwAsIAE(t, t.getMessage());",
      "right" : "throwAsIAE(t, t.getMessage());",
      "info" : "ExpressionStatement[13733-13763]:ExpressionStatement[13792-13822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14046-14153]:Block[14105-14212]"
    }, {
      "left" : "throwIfRTE(t);",
      "right" : "throwIfRTE(t);",
      "info" : "ExpressionStatement[14056-14070]:ExpressionStatement[14115-14129]"
    }, {
      "left" : "throwIfError(t);",
      "right" : "throwIfError(t);",
      "info" : "ExpressionStatement[14079-14095]:ExpressionStatement[14138-14154]"
    }, {
      "left" : "throw new IllegalArgumentException(msg, t);",
      "right" : "throw new IllegalArgumentException(msg, t);",
      "info" : "ThrowStatement[14104-14147]:ThrowStatement[14163-14206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14322-14559]:Block[14381-14618]"
    }, {
      "left" : "if (e0 instanceof JsonMappingException)",
      "right" : "if (e0 instanceof JsonMappingException)",
      "info" : "IfStatement[14332-14428]:IfStatement[14391-14487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14372-14428]:Block[14431-14487]"
    }, {
      "left" : "throw (JsonMappingException) e0;",
      "right" : "throw (JsonMappingException) e0;",
      "info" : "ThrowStatement[14386-14418]:ThrowStatement[14445-14477]"
    }, {
      "left" : "JsonMappingException e = JsonMappingException.from(ctxt, e0.getMessage());",
      "right" : "JsonMappingException e = JsonMappingException.from(ctxt, e0.getMessage());",
      "info" : "VariableDeclarationStatement[14437-14511]:VariableDeclarationStatement[14496-14570]"
    }, {
      "left" : "e.initCause(e0);",
      "right" : "e.initCause(e0);",
      "info" : "ExpressionStatement[14520-14536]:ExpressionStatement[14579-14595]"
    }, {
      "left" : "throw e;",
      "right" : "throw e;",
      "info" : "ThrowStatement[14545-14553]:ThrowStatement[14604-14612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14864-14908]:Block[14923-14967]"
    }, {
      "left" : "throwAsIAE(getRootCause(t));",
      "right" : "throwAsIAE(getRootCause(t));",
      "info" : "ExpressionStatement[14874-14902]:ExpressionStatement[14933-14961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15225-15274]:Block[15284-15333]"
    }, {
      "left" : "throwAsIAE(getRootCause(t), msg);",
      "right" : "throwAsIAE(getRootCause(t), msg);",
      "info" : "ExpressionStatement[15235-15268]:ExpressionStatement[15294-15327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15795-16217]:Block[15854-16276]"
    }, {
      "left" : "g.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);",
      "right" : "g.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);",
      "info" : "ExpressionStatement[15946-16003]:ExpressionStatement[16005-16062]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16012-16117]:TryStatement[16071-16176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16016-16050]:Block[16075-16109]"
    }, {
      "left" : "g.close();",
      "right" : "g.close();",
      "info" : "ExpressionStatement[16030-16040]:ExpressionStatement[16089-16099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16071-16117]:Block[16130-16176]"
    }, {
      "left" : "fail.addSuppressed(e);",
      "right" : "fail.addSuppressed(e);",
      "info" : "ExpressionStatement[16085-16107]:ExpressionStatement[16144-16166]"
    }, {
      "left" : "throwIfIOE(fail);",
      "right" : "throwIfIOE(fail);",
      "info" : "ExpressionStatement[16126-16143]:ExpressionStatement[16185-16202]"
    }, {
      "left" : "throwIfRTE(fail);",
      "right" : "throwIfRTE(fail);",
      "info" : "ExpressionStatement[16152-16169]:ExpressionStatement[16211-16228]"
    }, {
      "left" : "throw new RuntimeException(fail);",
      "right" : "throw new RuntimeException(fail);",
      "info" : "ThrowStatement[16178-16211]:ThrowStatement[16237-16270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16776-17297]:Block[16835-17356]"
    }, {
      "left" : "if (g != null)",
      "right" : "if (g != null)",
      "info" : "IfStatement[16786-17016]:IfStatement[16845-17075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16801-17016]:Block[16860-17075]"
    }, {
      "left" : "g.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);",
      "right" : "g.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);",
      "info" : "ExpressionStatement[16815-16872]:ExpressionStatement[16874-16931]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16885-17006]:TryStatement[16944-17065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16889-16931]:Block[16948-16990]"
    }, {
      "left" : "g.close();",
      "right" : "g.close();",
      "info" : "ExpressionStatement[16907-16917]:ExpressionStatement[16966-16976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16952-17006]:Block[17011-17065]"
    }, {
      "left" : "fail.addSuppressed(e);",
      "right" : "fail.addSuppressed(e);",
      "info" : "ExpressionStatement[16970-16992]:ExpressionStatement[17029-17051]"
    }, {
      "left" : "if (toClose != null)",
      "right" : "if (toClose != null)",
      "info" : "IfStatement[17025-17197]:IfStatement[17084-17256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17046-17197]:Block[17105-17256]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17060-17187]:TryStatement[17119-17246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17064-17112]:Block[17123-17171]"
    }, {
      "left" : "toClose.close();",
      "right" : "toClose.close();",
      "info" : "ExpressionStatement[17082-17098]:ExpressionStatement[17141-17157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17133-17187]:Block[17192-17246]"
    }, {
      "left" : "fail.addSuppressed(e);",
      "right" : "fail.addSuppressed(e);",
      "info" : "ExpressionStatement[17151-17173]:ExpressionStatement[17210-17232]"
    }, {
      "left" : "throwIfIOE(fail);",
      "right" : "throwIfIOE(fail);",
      "info" : "ExpressionStatement[17206-17223]:ExpressionStatement[17265-17282]"
    }, {
      "left" : "throwIfRTE(fail);",
      "right" : "throwIfRTE(fail);",
      "info" : "ExpressionStatement[17232-17249]:ExpressionStatement[17291-17308]"
    }, {
      "left" : "throw new RuntimeException(fail);",
      "right" : "throw new RuntimeException(fail);",
      "info" : "ThrowStatement[17258-17291]:ThrowStatement[17317-17350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18139-18602]:Block[18198-18661]"
    }, {
      "left" : "Constructor<T> ctor = findConstructor(cls, canFixAccess);",
      "right" : "Constructor<T> ctor = findConstructor(cls, canFixAccess);",
      "info" : "VariableDeclarationStatement[18149-18206]:VariableDeclarationStatement[18208-18265]"
    }, {
      "left" : "if (ctor == null)",
      "right" : "if (ctor == null)",
      "info" : "IfStatement[18215-18355]:IfStatement[18274-18414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18233-18355]:Block[18292-18414]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Class \"+cls.getName()+\" has no default (no arg) constructor\");",
      "right" : "throw new IllegalArgumentException(\"Class \"+cls.getName()+\" has no default (no arg) constructor\");",
      "info" : "ThrowStatement[18247-18345]:ThrowStatement[18306-18404]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18364-18596]:TryStatement[18423-18655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18368-18418]:Block[18427-18477]"
    }, {
      "left" : "return ctor.newInstance();",
      "right" : "return ctor.newInstance();",
      "info" : "ReturnStatement[18382-18408]:ReturnStatement[18441-18467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18439-18596]:Block[18498-18655]"
    }, {
      "left" : "ClassUtil.unwrapAndThrowAsIAE(e, \"Failed to instantiate class \"+cls.getName()+\", problem: \"+e.getMessage());",
      "right" : "ClassUtil.unwrapAndThrowAsIAE(e, \"Failed to instantiate class \"+cls.getName()+\", problem: \"+e.getMessage());",
      "info" : "ExpressionStatement[18453-18561]:ExpressionStatement[18512-18620]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18574-18586]:ReturnStatement[18633-18645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18736-19551]:Block[18795-19610]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18746-19524]:TryStatement[18805-19583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18750-19297]:Block[18809-19356]"
    }, {
      "left" : "Constructor<T> ctor = cls.getDeclaredConstructor();",
      "right" : "Constructor<T> ctor = cls.getDeclaredConstructor();",
      "info" : "VariableDeclarationStatement[18764-18815]:VariableDeclarationStatement[18823-18874]"
    }, {
      "left" : "if (forceAccess)",
      "right" : "if (forceAccess)",
      "info" : "IfStatement[18828-19262]:IfStatement[18887-19321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18845-18914]:Block[18904-18973]"
    }, {
      "left" : "checkAndFixAccess(ctor, forceAccess);",
      "right" : "checkAndFixAccess(ctor, forceAccess);",
      "info" : "ExpressionStatement[18863-18900]:ExpressionStatement[18922-18959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18920-19262]:Block[18979-19321]"
    }, {
      "left" : "if (!Modifier.isPublic(ctor.getModifiers()))",
      "right" : "if (!Modifier.isPublic(ctor.getModifiers()))",
      "info" : "IfStatement[18977-19248]:IfStatement[19036-19307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19022-19248]:Block[19081-19307]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Default constructor for \"+cls.getName()+\" is not accessible (non-public?): not allowed to try modify access via Reflection: cannot instantiate type\");",
      "right" : "throw new IllegalArgumentException(\"Default constructor for \"+cls.getName()+\" is not accessible (non-public?): not allowed to try modify access via Reflection: cannot instantiate type\");",
      "info" : "ThrowStatement[19044-19230]:ThrowStatement[19103-19289]"
    }, {
      "left" : "return ctor;",
      "right" : "return ctor;",
      "info" : "ReturnStatement[19275-19287]:ReturnStatement[19334-19346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19330-19355]:Block[19389-19414]"
    }, {
      "left" : ";",
      "right" : ";",
      "info" : "EmptyStatement[19344-19345]:EmptyStatement[19403-19404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19376-19524]:Block[19435-19583]"
    }, {
      "left" : "ClassUtil.unwrapAndThrowAsIAE(e, \"Failed to find default constructor of class \"+cls.getName()+\", problem: \"+e.getMessage());",
      "right" : "ClassUtil.unwrapAndThrowAsIAE(e, \"Failed to find default constructor of class \"+cls.getName()+\", problem: \"+e.getMessage());",
      "info" : "ExpressionStatement[19390-19514]:ExpressionStatement[19449-19573]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19533-19545]:ReturnStatement[19592-19604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19817-19919]:Block[19876-19978]"
    }, {
      "left" : "if (inst == null)",
      "right" : "if (inst == null)",
      "info" : "IfStatement[19827-19881]:IfStatement[19886-19940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19845-19881]:Block[19904-19940]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19859-19871]:ReturnStatement[19918-19930]"
    }, {
      "left" : "return inst.getClass();",
      "right" : "return inst.getClass();",
      "info" : "ReturnStatement[19890-19913]:ReturnStatement[19949-19972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20007-20106]:Block[20066-20165]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[20017-20068]:IfStatement[20076-20127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20032-20068]:Block[20091-20127]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20046-20058]:ReturnStatement[20105-20117]"
    }, {
      "left" : "return t.getRawClass();",
      "right" : "return t.getRawClass();",
      "info" : "ReturnStatement[20077-20100]:ReturnStatement[20136-20159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20205-20279]:Block[20264-20338]"
    }, {
      "left" : "return (valueOrNull == null) ? defaultValue : valueOrNull;",
      "right" : "return (valueOrNull == null) ? defaultValue : valueOrNull;",
      "info" : "ReturnStatement[20215-20273]:ReturnStatement[20274-20332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20369-20473]:Block[20428-20532]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[20379-20434]:IfStatement[20438-20493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20398-20434]:Block[20457-20493]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20412-20424]:ReturnStatement[20471-20483]"
    }, {
      "left" : "return value.toString();",
      "right" : "return value.toString();",
      "info" : "ReturnStatement[20443-20467]:ReturnStatement[20502-20526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20560-20647]:Block[20619-20706]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[20570-20621]:IfStatement[20629-20680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20587-20621]:Block[20646-20680]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[20601-20611]:ReturnStatement[20660-20670]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[20630-20641]:ReturnStatement[20689-20700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20887-21004]:Block[20946-21063]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[20897-20953]:IfStatement[20956-21012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20914-20953]:Block[20973-21012]"
    }, {
      "left" : "return forNull;",
      "right" : "return forNull;",
      "info" : "ReturnStatement[20928-20943]:ReturnStatement[20987-21002]"
    }, {
      "left" : "return String.format(\"\\\"%s\\\"\", str);",
      "right" : "return String.format(\"\\\"%s\\\"\", str);",
      "info" : "ReturnStatement[20962-20998]:ReturnStatement[21021-21057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21463-21709]:Block[21522-21768]"
    }, {
      "left" : "if (classOrInstance == null)",
      "right" : "if (classOrInstance == null)",
      "info" : "IfStatement[21473-21543]:IfStatement[21532-21602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21502-21543]:Block[21561-21602]"
    }, {
      "left" : "return \"unknown\";",
      "right" : "return \"unknown\";",
      "info" : "ReturnStatement[21516-21533]:ReturnStatement[21575-21592]"
    }, {
      "left" : "Class<?> cls = (classOrInstance instanceof Class<?>) ?\n            (Class<?>) classOrInstance : classOrInstance.getClass();",
      "right" : "Class<?> cls = (classOrInstance instanceof Class<?>) ?\n            (Class<?>) classOrInstance : classOrInstance.getClass();",
      "info" : "VariableDeclarationStatement[21552-21675]:VariableDeclarationStatement[21611-21734]"
    }, {
      "left" : "return nameOf(cls);",
      "right" : "return nameOf(cls);",
      "info" : "ReturnStatement[21684-21703]:ReturnStatement[21743-21762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21976-22090]:Block[22035-22149]"
    }, {
      "left" : "if (inst == null)",
      "right" : "if (inst == null)",
      "info" : "IfStatement[21986-22044]:IfStatement[22045-22103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22004-22044]:Block[22063-22103]"
    }, {
      "left" : "return \"[null]\";",
      "right" : "return \"[null]\";",
      "info" : "ReturnStatement[22018-22034]:ReturnStatement[22077-22093]"
    }, {
      "left" : "return nameOf(inst.getClass());",
      "right" : "return nameOf(inst.getClass());",
      "info" : "ReturnStatement[22053-22084]:ReturnStatement[22112-22143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22275-22798]:Block[22334-22857]"
    }, {
      "left" : "if (cls == null)",
      "right" : "if (cls == null)",
      "info" : "IfStatement[22285-22342]:IfStatement[22344-22401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22302-22342]:Block[22361-22401]"
    }, {
      "left" : "return \"[null]\";",
      "right" : "return \"[null]\";",
      "info" : "ReturnStatement[22316-22332]:ReturnStatement[22375-22391]"
    }, {
      "left" : "int index = 0;",
      "right" : "int index = 0;",
      "info" : "VariableDeclarationStatement[22351-22365]:VariableDeclarationStatement[22410-22424]"
    }, {
      "left" : "while (cls.isArray())",
      "right" : "while (cls.isArray())",
      "info" : "WhileStatement[22374-22470]:WhileStatement[22433-22529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22396-22470]:Block[22455-22529]"
    }, {
      "left" : "++index;",
      "right" : "++index;",
      "info" : "ExpressionStatement[22410-22418]:ExpressionStatement[22469-22477]"
    }, {
      "left" : "cls = cls.getComponentType();",
      "right" : "cls = cls.getComponentType();",
      "info" : "ExpressionStatement[22431-22460]:ExpressionStatement[22490-22519]"
    }, {
      "left" : "String base = cls.isPrimitive() ? cls.getSimpleName() : cls.getName();",
      "right" : "String base = cls.isPrimitive() ? cls.getSimpleName() : cls.getName();",
      "info" : "VariableDeclarationStatement[22479-22549]:VariableDeclarationStatement[22538-22608]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[22558-22759]:IfStatement[22617-22818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22573-22759]:Block[22632-22818]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder(base);",
      "right" : "StringBuilder sb = new StringBuilder(base);",
      "info" : "VariableDeclarationStatement[22587-22630]:VariableDeclarationStatement[22646-22689]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[22643-22715]:DoStatement[22702-22774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22646-22694]:Block[22705-22753]"
    }, {
      "left" : "sb.append(\"[]\");",
      "right" : "sb.append(\"[]\");",
      "info" : "ExpressionStatement[22664-22680]:ExpressionStatement[22723-22739]"
    }, {
      "left" : "base = sb.toString();",
      "right" : "base = sb.toString();",
      "info" : "ExpressionStatement[22728-22749]:ExpressionStatement[22787-22808]"
    }, {
      "left" : "return backticked(base);",
      "right" : "return backticked(base);",
      "info" : "ReturnStatement[22768-22792]:ReturnStatement[22827-22851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23004-23123]:Block[23063-23182]"
    }, {
      "left" : "if (named == null)",
      "right" : "if (named == null)",
      "info" : "IfStatement[23014-23073]:IfStatement[23073-23132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23033-23073]:Block[23092-23132]"
    }, {
      "left" : "return \"[null]\";",
      "right" : "return \"[null]\";",
      "info" : "ReturnStatement[23047-23063]:ReturnStatement[23106-23122]"
    }, {
      "left" : "return backticked(named.getName());",
      "right" : "return backticked(named.getName());",
      "info" : "ReturnStatement[23082-23117]:ReturnStatement[23141-23176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23444-23617]:Block[23503-23676]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[23454-23512]:IfStatement[23513-23571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23472-23512]:Block[23531-23571]"
    }, {
      "left" : "return \"[null]\";",
      "right" : "return \"[null]\";",
      "info" : "ReturnStatement[23486-23502]:ReturnStatement[23545-23561]"
    }, {
      "left" : "return new StringBuilder(text.length()+2).append('`').append(text).append('`').toString();",
      "right" : "return new StringBuilder(text.length()+2).append('`').append(text).append('`').toString();",
      "info" : "ReturnStatement[23521-23611]:ReturnStatement[23580-23670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24371-25127]:Block[24657-25413]"
    }, {
      "left" : "if (cls == Integer.TYPE)",
      "right" : "if (cls == Integer.TYPE)",
      "info" : "IfStatement[24381-24456]:IfStatement[24667-24742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24406-24456]:Block[24692-24742]"
    }, {
      "left" : "return Integer.valueOf(0);",
      "right" : "return Integer.valueOf(0);",
      "info" : "ReturnStatement[24420-24446]:ReturnStatement[24706-24732]"
    }, {
      "left" : "if (cls == Long.TYPE)",
      "right" : "if (cls == Long.TYPE)",
      "info" : "IfStatement[24465-24535]:IfStatement[24751-24821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24487-24535]:Block[24773-24821]"
    }, {
      "left" : "return Long.valueOf(0L);",
      "right" : "return Long.valueOf(0L);",
      "info" : "ReturnStatement[24501-24525]:ReturnStatement[24787-24811]"
    }, {
      "left" : "if (cls == Boolean.TYPE)",
      "right" : "if (cls == Boolean.TYPE)",
      "info" : "IfStatement[24544-24614]:IfStatement[24830-24900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24569-24614]:Block[24855-24900]"
    }, {
      "left" : "return Boolean.FALSE;",
      "right" : "return Boolean.FALSE;",
      "info" : "ReturnStatement[24583-24604]:ReturnStatement[24869-24890]"
    }, {
      "left" : "if (cls == Double.TYPE)",
      "right" : "if (cls == Double.TYPE)",
      "info" : "IfStatement[24623-24698]:IfStatement[24909-24984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24647-24698]:Block[24933-24984]"
    }, {
      "left" : "return Double.valueOf(0.0);",
      "right" : "return Double.valueOf(0.0);",
      "info" : "ReturnStatement[24661-24688]:ReturnStatement[24947-24974]"
    }, {
      "left" : "if (cls == Float.TYPE)",
      "right" : "if (cls == Float.TYPE)",
      "info" : "IfStatement[24707-24781]:IfStatement[24993-25067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24730-24781]:Block[25016-25067]"
    }, {
      "left" : "return Float.valueOf(0.0f);",
      "right" : "return Float.valueOf(0.0f);",
      "info" : "ReturnStatement[24744-24771]:ReturnStatement[25030-25057]"
    }, {
      "left" : "if (cls == Byte.TYPE)",
      "right" : "if (cls == Byte.TYPE)",
      "info" : "IfStatement[24790-24866]:IfStatement[25076-25152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24812-24866]:Block[25098-25152]"
    }, {
      "left" : "return Byte.valueOf((byte) 0);",
      "right" : "return Byte.valueOf((byte) 0);",
      "info" : "ReturnStatement[24826-24856]:ReturnStatement[25112-25142]"
    }, {
      "left" : "if (cls == Short.TYPE)",
      "right" : "if (cls == Short.TYPE)",
      "info" : "IfStatement[24875-24954]:IfStatement[25161-25240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24898-24954]:Block[25184-25240]"
    }, {
      "left" : "return Short.valueOf((short) 0);",
      "right" : "return Short.valueOf((short) 0);",
      "info" : "ReturnStatement[24912-24944]:ReturnStatement[25198-25230]"
    }, {
      "left" : "if (cls == Character.TYPE)",
      "right" : "if (cls == Character.TYPE)",
      "info" : "IfStatement[24963-25026]:IfStatement[25249-25312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24990-25026]:Block[25276-25312]"
    }, {
      "left" : "return '\\0';",
      "right" : "return '\\0';",
      "info" : "ReturnStatement[25004-25016]:ReturnStatement[25290-25302]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Class \"+cls.getName()+\" is not a primitive type\");",
      "right" : "throw new IllegalArgumentException(\"Class \"+cls.getName()+\" is not a primitive type\");",
      "info" : "ThrowStatement[25035-25121]:ThrowStatement[25321-25407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25320-26126]:Block[25606-26412]"
    }, {
      "left" : "if (primitiveType == Integer.TYPE)",
      "right" : "if (primitiveType == Integer.TYPE)",
      "info" : "IfStatement[25330-25410]:IfStatement[25616-25696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25365-25410]:Block[25651-25696]"
    }, {
      "left" : "return Integer.class;",
      "right" : "return Integer.class;",
      "info" : "ReturnStatement[25379-25400]:ReturnStatement[25665-25686]"
    }, {
      "left" : "if (primitiveType == Long.TYPE)",
      "right" : "if (primitiveType == Long.TYPE)",
      "info" : "IfStatement[25419-25493]:IfStatement[25705-25779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25451-25493]:Block[25737-25779]"
    }, {
      "left" : "return Long.class;",
      "right" : "return Long.class;",
      "info" : "ReturnStatement[25465-25483]:ReturnStatement[25751-25769]"
    }, {
      "left" : "if (primitiveType == Boolean.TYPE)",
      "right" : "if (primitiveType == Boolean.TYPE)",
      "info" : "IfStatement[25502-25582]:IfStatement[25788-25868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25537-25582]:Block[25823-25868]"
    }, {
      "left" : "return Boolean.class;",
      "right" : "return Boolean.class;",
      "info" : "ReturnStatement[25551-25572]:ReturnStatement[25837-25858]"
    }, {
      "left" : "if (primitiveType == Double.TYPE)",
      "right" : "if (primitiveType == Double.TYPE)",
      "info" : "IfStatement[25591-25669]:IfStatement[25877-25955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25625-25669]:Block[25911-25955]"
    }, {
      "left" : "return Double.class;",
      "right" : "return Double.class;",
      "info" : "ReturnStatement[25639-25659]:ReturnStatement[25925-25945]"
    }, {
      "left" : "if (primitiveType == Float.TYPE)",
      "right" : "if (primitiveType == Float.TYPE)",
      "info" : "IfStatement[25678-25754]:IfStatement[25964-26040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25711-25754]:Block[25997-26040]"
    }, {
      "left" : "return Float.class;",
      "right" : "return Float.class;",
      "info" : "ReturnStatement[25725-25744]:ReturnStatement[26011-26030]"
    }, {
      "left" : "if (primitiveType == Byte.TYPE)",
      "right" : "if (primitiveType == Byte.TYPE)",
      "info" : "IfStatement[25763-25837]:IfStatement[26049-26123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25795-25837]:Block[26081-26123]"
    }, {
      "left" : "return Byte.class;",
      "right" : "return Byte.class;",
      "info" : "ReturnStatement[25809-25827]:ReturnStatement[26095-26113]"
    }, {
      "left" : "if (primitiveType == Short.TYPE)",
      "right" : "if (primitiveType == Short.TYPE)",
      "info" : "IfStatement[25846-25922]:IfStatement[26132-26208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25879-25922]:Block[26165-26208]"
    }, {
      "left" : "return Short.class;",
      "right" : "return Short.class;",
      "info" : "ReturnStatement[25893-25912]:ReturnStatement[26179-26198]"
    }, {
      "left" : "if (primitiveType == Character.TYPE)",
      "right" : "if (primitiveType == Character.TYPE)",
      "info" : "IfStatement[25931-26015]:IfStatement[26217-26301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25968-26015]:Block[26254-26301]"
    }, {
      "left" : "return Character.class;",
      "right" : "return Character.class;",
      "info" : "ReturnStatement[25982-26005]:ReturnStatement[26268-26291]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Class \"+primitiveType.getName()+\" is not a primitive type\");",
      "right" : "throw new IllegalArgumentException(\"Class \"+primitiveType.getName()+\" is not a primitive type\");",
      "info" : "ThrowStatement[26024-26120]:ThrowStatement[26310-26406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26403-27131]:Block[26689-27417]"
    }, {
      "left" : "if (type.isPrimitive())",
      "right" : "if (type.isPrimitive())",
      "info" : "IfStatement[26413-26473]:IfStatement[26699-26759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26437-26473]:Block[26723-26759]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[26451-26463]:ReturnStatement[26737-26749]"
    }, {
      "left" : "if (type == Integer.class)",
      "right" : "if (type == Integer.class)",
      "info" : "IfStatement[26491-26562]:IfStatement[26777-26848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26518-26562]:Block[26804-26848]"
    }, {
      "left" : "return Integer.TYPE;",
      "right" : "return Integer.TYPE;",
      "info" : "ReturnStatement[26532-26552]:ReturnStatement[26818-26838]"
    }, {
      "left" : "if (type == Long.class)",
      "right" : "if (type == Long.class)",
      "info" : "IfStatement[26571-26636]:IfStatement[26857-26922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26595-26636]:Block[26881-26922]"
    }, {
      "left" : "return Long.TYPE;",
      "right" : "return Long.TYPE;",
      "info" : "ReturnStatement[26609-26626]:ReturnStatement[26895-26912]"
    }, {
      "left" : "if (type == Boolean.class)",
      "right" : "if (type == Boolean.class)",
      "info" : "IfStatement[26645-26716]:IfStatement[26931-27002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26672-26716]:Block[26958-27002]"
    }, {
      "left" : "return Boolean.TYPE;",
      "right" : "return Boolean.TYPE;",
      "info" : "ReturnStatement[26686-26706]:ReturnStatement[26972-26992]"
    }, {
      "left" : "if (type == Double.class)",
      "right" : "if (type == Double.class)",
      "info" : "IfStatement[26725-26794]:IfStatement[27011-27080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26751-26794]:Block[27037-27080]"
    }, {
      "left" : "return Double.TYPE;",
      "right" : "return Double.TYPE;",
      "info" : "ReturnStatement[26765-26784]:ReturnStatement[27051-27070]"
    }, {
      "left" : "if (type == Float.class)",
      "right" : "if (type == Float.class)",
      "info" : "IfStatement[26803-26870]:IfStatement[27089-27156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26828-26870]:Block[27114-27156]"
    }, {
      "left" : "return Float.TYPE;",
      "right" : "return Float.TYPE;",
      "info" : "ReturnStatement[26842-26860]:ReturnStatement[27128-27146]"
    }, {
      "left" : "if (type == Byte.class)",
      "right" : "if (type == Byte.class)",
      "info" : "IfStatement[26879-26944]:IfStatement[27165-27230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26903-26944]:Block[27189-27230]"
    }, {
      "left" : "return Byte.TYPE;",
      "right" : "return Byte.TYPE;",
      "info" : "ReturnStatement[26917-26934]:ReturnStatement[27203-27220]"
    }, {
      "left" : "if (type == Short.class)",
      "right" : "if (type == Short.class)",
      "info" : "IfStatement[26953-27020]:IfStatement[27239-27306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26978-27020]:Block[27264-27306]"
    }, {
      "left" : "return Short.TYPE;",
      "right" : "return Short.TYPE;",
      "info" : "ReturnStatement[26992-27010]:ReturnStatement[27278-27296]"
    }, {
      "left" : "if (type == Character.class)",
      "right" : "if (type == Character.class)",
      "info" : "IfStatement[27029-27104]:IfStatement[27315-27390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27058-27104]:Block[27344-27390]"
    }, {
      "left" : "return Character.TYPE;",
      "right" : "return Character.TYPE;",
      "info" : "ReturnStatement[27072-27094]:ReturnStatement[27358-27380]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[27113-27125]:ReturnStatement[27399-27411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27574-27623]:Block[27860-27909]"
    }, {
      "left" : "checkAndFixAccess(member, false);",
      "right" : "checkAndFixAccess(member, false);",
      "info" : "ExpressionStatement[27584-27617]:ExpressionStatement[27870-27903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28172-29285]:Block[28458-29571]"
    }, {
      "left" : "AccessibleObject ao = (AccessibleObject) member;",
      "right" : "AccessibleObject ao = (AccessibleObject) member;",
      "info" : "VariableDeclarationStatement[28244-28292]:VariableDeclarationStatement[28530-28578]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28538-29279]:TryStatement[28824-29565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28542-28793]:Block[28828-29079]"
    }, {
      "left" : "if (force || \n                    (!Modifier.isPublic(member.getModifiers())\n                            || !Modifier.isPublic(member.getDeclaringClass().getModifiers())))",
      "right" : "if (force || \n                    (!Modifier.isPublic(member.getModifiers())\n                            || !Modifier.isPublic(member.getDeclaringClass().getModifiers())))",
      "info" : "IfStatement[28556-28783]:IfStatement[28842-29069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28728-28783]:Block[29014-29069]"
    }, {
      "left" : "ao.setAccessible(true);",
      "right" : "ao.setAccessible(true);",
      "info" : "ExpressionStatement[28746-28769]:ExpressionStatement[29032-29055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28823-29279]:Block[29109-29565]"
    }, {
      "left" : "if (!ao.isAccessible())",
      "right" : "if (!ao.isAccessible())",
      "info" : "IfStatement[29009-29269]:IfStatement[29295-29555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29033-29269]:Block[29319-29555]"
    }, {
      "left" : "Class<?> declClass = member.getDeclaringClass();",
      "right" : "Class<?> declClass = member.getDeclaringClass();",
      "info" : "VariableDeclarationStatement[29051-29099]:VariableDeclarationStatement[29337-29385]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Cannot access \"+member+\" (from class \"+declClass.getName()+\"; failed to set access: \"+se.getMessage());",
      "right" : "throw new IllegalArgumentException(\"Cannot access \"+member+\" (from class \"+declClass.getName()+\"; failed to set access: \"+se.getMessage());",
      "info" : "ThrowStatement[29116-29255]:ThrowStatement[29402-29541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29768-30046]:Block[30054-30332]"
    }, {
      "left" : "if (!s.isEmpty())",
      "right" : "if (!s.isEmpty())",
      "info" : "IfStatement[29841-29924]:IfStatement[30127-30210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29859-29924]:Block[30145-30210]"
    }, {
      "left" : "return findEnumType(s.iterator().next());",
      "right" : "return findEnumType(s.iterator().next());",
      "info" : "ReturnStatement[29873-29914]:ReturnStatement[30159-30200]"
    }, {
      "left" : "return EnumTypeLocator.instance.enumTypeFor(s);",
      "right" : "return EnumTypeLocator.instance.enumTypeFor(s);",
      "info" : "ReturnStatement[29993-30040]:ReturnStatement[30279-30326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30360-30584]:Block[30646-30870]"
    }, {
      "left" : "if (!m.isEmpty())",
      "right" : "if (!m.isEmpty())",
      "info" : "IfStatement[30370-30462]:IfStatement[30656-30748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30388-30462]:Block[30674-30748]"
    }, {
      "left" : "return findEnumType(m.keySet().iterator().next());",
      "right" : "return findEnumType(m.keySet().iterator().next());",
      "info" : "ReturnStatement[30402-30452]:ReturnStatement[30688-30738]"
    }, {
      "left" : "return EnumTypeLocator.instance.enumTypeFor(m);",
      "right" : "return EnumTypeLocator.instance.enumTypeFor(m);",
      "info" : "ReturnStatement[30531-30578]:ReturnStatement[30817-30864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30978-31212]:Block[31264-31498]"
    }, {
      "left" : "Class<?> ec = en.getClass();",
      "right" : "Class<?> ec = en.getClass();",
      "info" : "VariableDeclarationStatement[31049-31077]:VariableDeclarationStatement[31335-31363]"
    }, {
      "left" : "if (ec.getSuperclass() != Enum.class)",
      "right" : "if (ec.getSuperclass() != Enum.class)",
      "info" : "IfStatement[31083-31163]:IfStatement[31369-31449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31121-31163]:Block[31407-31449]"
    }, {
      "left" : "ec = ec.getSuperclass();",
      "right" : "ec = ec.getSuperclass();",
      "info" : "ExpressionStatement[31132-31156]:ExpressionStatement[31418-31442]"
    }, {
      "left" : "return (Class<? extends Enum<?>>) ec;",
      "right" : "return (Class<? extends Enum<?>>) ec;",
      "info" : "ReturnStatement[31169-31206]:ReturnStatement[31455-31492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31626-31842]:Block[31912-32128]"
    }, {
      "left" : "if (cls.getSuperclass() != Enum.class)",
      "right" : "if (cls.getSuperclass() != Enum.class)",
      "info" : "IfStatement[31700-31789]:IfStatement[31986-32075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31739-31789]:Block[32025-32075]"
    }, {
      "left" : "cls = cls.getSuperclass();",
      "right" : "cls = cls.getSuperclass();",
      "info" : "ExpressionStatement[31753-31779]:ExpressionStatement[32039-32065]"
    }, {
      "left" : "return (Class<? extends Enum<?>>) cls;",
      "right" : "return (Class<? extends Enum<?>>) cls;",
      "info" : "ReturnStatement[31798-31836]:ReturnStatement[32084-32122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32584-33221]:Block[32870-33507]"
    }, {
      "left" : "Field[] fields = getDeclaredFields(enumClass);",
      "right" : "Field[] fields = getDeclaredFields(enumClass);",
      "info" : "VariableDeclarationStatement[32594-32640]:VariableDeclarationStatement[32880-32926]"
    }, {
      "left" : "for (Field field : fields)",
      "right" : "for (Field field : fields)",
      "info" : "EnhancedForStatement[32649-33194]:EnhancedForStatement[32935-33480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32676-33194]:Block[32962-33480]"
    }, {
      "left" : "if (field.isEnumConstant())",
      "right" : "if (field.isEnumConstant())",
      "info" : "IfStatement[32690-33184]:IfStatement[32976-33470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32718-33184]:Block[33004-33470]"
    }, {
      "left" : "Annotation defaultValueAnnotation = field.getAnnotation(annotationClass);",
      "right" : "Annotation defaultValueAnnotation = field.getAnnotation(annotationClass);",
      "info" : "VariableDeclarationStatement[32736-32809]:VariableDeclarationStatement[33022-33095]"
    }, {
      "left" : "if (defaultValueAnnotation != null)",
      "right" : "if (defaultValueAnnotation != null)",
      "info" : "IfStatement[32826-33170]:IfStatement[33112-33456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32862-33170]:Block[33148-33456]"
    }, {
      "left" : "final String name = field.getName();",
      "right" : "final String name = field.getName();",
      "info" : "VariableDeclarationStatement[32884-32920]:VariableDeclarationStatement[33170-33206]"
    }, {
      "left" : "for (Enum<?> enumValue : enumClass.getEnumConstants())",
      "right" : "for (Enum<?> enumValue : enumClass.getEnumConstants())",
      "info" : "EnhancedForStatement[32941-33152]:EnhancedForStatement[33227-33438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32996-33152]:Block[33282-33438]"
    }, {
      "left" : "if (name.equals(enumValue.name()))",
      "right" : "if (name.equals(enumValue.name()))",
      "info" : "IfStatement[33022-33130]:IfStatement[33308-33416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33057-33130]:Block[33343-33416]"
    }, {
      "left" : "return enumValue;",
      "right" : "return enumValue;",
      "info" : "ReturnStatement[33087-33104]:ReturnStatement[33373-33390]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[33203-33215]:ReturnStatement[33489-33501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33902-33977]:Block[34188-34263]"
    }, {
      "left" : "return (impl == null) || isJacksonStdImpl(impl.getClass());",
      "right" : "return (impl == null) || isJacksonStdImpl(impl.getClass());",
      "info" : "ReturnStatement[33912-33971]:ReturnStatement[34198-34257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34042-34121]:Block[34328-34407]"
    }, {
      "left" : "return (implClass.getAnnotation(JacksonStdImpl.class) != null);",
      "right" : "return (implClass.getAnnotation(JacksonStdImpl.class) != null);",
      "info" : "ReturnStatement[34052-34115]:ReturnStatement[34338-34401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34584-34684]:Block[34870-34970]"
    }, {
      "left" : "Package pkg = cls.getPackage();",
      "right" : "Package pkg = cls.getPackage();",
      "info" : "VariableDeclarationStatement[34594-34625]:VariableDeclarationStatement[34880-34911]"
    }, {
      "left" : "return (pkg == null) ? null : pkg.getName();",
      "right" : "return (pkg == null) ? null : pkg.getName();",
      "info" : "ReturnStatement[34634-34678]:ReturnStatement[34920-34964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34779-34866]:Block[35065-35152]"
    }, {
      "left" : "return !isObjectOrPrimitive(cls) && (cls.getEnclosingMethod() != null);",
      "right" : "return !isObjectOrPrimitive(cls) && (cls.getEnclosingMethod() != null);",
      "info" : "ReturnStatement[34789-34860]:ReturnStatement[35075-35146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34960-35007]:Block[35246-35293]"
    }, {
      "left" : "return cls.getDeclaredFields();",
      "right" : "return cls.getDeclaredFields();",
      "info" : "ReturnStatement[34970-35001]:ReturnStatement[35256-35287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35103-35151]:Block[35389-35437]"
    }, {
      "left" : "return cls.getDeclaredMethods();",
      "right" : "return cls.getDeclaredMethods();",
      "info" : "ReturnStatement[35113-35145]:ReturnStatement[35399-35431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35253-35390]:Block[35539-35676]"
    }, {
      "left" : "if (isObjectOrPrimitive(cls))",
      "right" : "if (isObjectOrPrimitive(cls))",
      "info" : "IfStatement[35263-35339]:IfStatement[35549-35625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35293-35339]:Block[35579-35625]"
    }, {
      "left" : "return NO_ANNOTATIONS;",
      "right" : "return NO_ANNOTATIONS;",
      "info" : "ReturnStatement[35307-35329]:ReturnStatement[35593-35615]"
    }, {
      "left" : "return cls.getDeclaredAnnotations();",
      "right" : "return cls.getDeclaredAnnotations();",
      "info" : "ReturnStatement[35348-35384]:ReturnStatement[35634-35670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35684-36541]:Block[35970-36827]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[35694-36535]:TryStatement[35980-36821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35698-35763]:Block[35984-36049]"
    }, {
      "left" : "return ClassUtil.getDeclaredMethods(cls);",
      "right" : "return ClassUtil.getDeclaredMethods(cls);",
      "info" : "ReturnStatement[35712-35753]:ReturnStatement[35998-36039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35802-36535]:Block[36088-36821]"
    }, {
      "left" : "final ClassLoader loader = Thread.currentThread().getContextClassLoader();",
      "right" : "final ClassLoader loader = Thread.currentThread().getContextClassLoader();",
      "info" : "VariableDeclarationStatement[36003-36077]:VariableDeclarationStatement[36289-36363]"
    }, {
      "left" : "if (loader == null)",
      "right" : "if (loader == null)",
      "info" : "IfStatement[36090-36205]:IfStatement[36376-36491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36109-36205]:Block[36395-36491]"
    }, {
      "left" : "throw ex;",
      "right" : "throw ex;",
      "info" : "ThrowStatement[36182-36191]:ThrowStatement[36468-36477]"
    }, {
      "left" : "final Class<?> contextClass;",
      "right" : "final Class<?> contextClass;",
      "info" : "VariableDeclarationStatement[36218-36246]:VariableDeclarationStatement[36504-36532]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[36259-36454]:TryStatement[36545-36740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36263-36342]:Block[36549-36628]"
    }, {
      "left" : "contextClass = loader.loadClass(cls.getName());",
      "right" : "contextClass = loader.loadClass(cls.getName());",
      "info" : "ExpressionStatement[36281-36328]:ExpressionStatement[36567-36614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36376-36454]:Block[36662-36740]"
    }, {
      "left" : "ex.addSuppressed(e);",
      "right" : "ex.addSuppressed(e);",
      "info" : "ExpressionStatement[36394-36414]:ExpressionStatement[36680-36700]"
    }, {
      "left" : "throw ex;",
      "right" : "throw ex;",
      "info" : "ThrowStatement[36431-36440]:ThrowStatement[36717-36726]"
    }, {
      "left" : "return contextClass.getDeclaredMethods();",
      "right" : "return contextClass.getDeclaredMethods();",
      "info" : "ReturnStatement[36467-36508]:ReturnStatement[36753-36794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36636-37146]:Block[36922-37432]"
    }, {
      "left" : "if (cls.isInterface() || isObjectOrPrimitive(cls))",
      "right" : "if (cls.isInterface() || isObjectOrPrimitive(cls))",
      "info" : "IfStatement[36782-36873]:IfStatement[37068-37159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36833-36873]:Block[37119-37159]"
    }, {
      "left" : "return NO_CTORS;",
      "right" : "return NO_CTORS;",
      "info" : "ReturnStatement[36847-36863]:ReturnStatement[37133-37149]"
    }, {
      "left" : "Constructor<?>[] rawCtors = cls.getDeclaredConstructors();",
      "right" : "Constructor<?>[] rawCtors = cls.getDeclaredConstructors();",
      "info" : "VariableDeclarationStatement[36882-36940]:VariableDeclarationStatement[37168-37226]"
    }, {
      "left" : "final int len = rawCtors.length;",
      "right" : "final int len = rawCtors.length;",
      "info" : "VariableDeclarationStatement[36949-36981]:VariableDeclarationStatement[37235-37267]"
    }, {
      "left" : "Ctor[] result = new Ctor[len];",
      "right" : "Ctor[] result = new Ctor[len];",
      "info" : "VariableDeclarationStatement[36990-37020]:VariableDeclarationStatement[37276-37306]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[37029-37117]:ForStatement[37315-37403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37059-37117]:Block[37345-37403]"
    }, {
      "left" : "result[i] = new Ctor(rawCtors[i]);",
      "right" : "result[i] = new Ctor(rawCtors[i]);",
      "info" : "ExpressionStatement[37073-37107]:ExpressionStatement[37359-37393]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[37126-37140]:ReturnStatement[37412-37426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37388-37469]:Block[37674-37755]"
    }, {
      "left" : "return isObjectOrPrimitive(cls) ? null : cls.getDeclaringClass();",
      "right" : "return isObjectOrPrimitive(cls) ? null : cls.getDeclaringClass();",
      "info" : "ReturnStatement[37398-37463]:ReturnStatement[37684-37749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37563-37613]:Block[37849-37899]"
    }, {
      "left" : "return cls.getGenericSuperclass();",
      "right" : "return cls.getGenericSuperclass();",
      "info" : "ReturnStatement[37573-37607]:ReturnStatement[37859-37893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37709-37759]:Block[37995-38045]"
    }, {
      "left" : "return cls.getGenericInterfaces();",
      "right" : "return cls.getGenericInterfaces();",
      "info" : "ReturnStatement[37719-37753]:ReturnStatement[38005-38039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37854-37997]:Block[38140-38283]"
    }, {
      "left" : "return isObjectOrPrimitive(cls) ? null : cls.getEnclosingClass();",
      "right" : "return isObjectOrPrimitive(cls) ? null : cls.getEnclosingClass();",
      "info" : "ReturnStatement[37926-37991]:ReturnStatement[38212-38277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38055-38098]:Block[38341-38384]"
    }, {
      "left" : "return cls.getInterfaces();",
      "right" : "return cls.getInterfaces();",
      "info" : "ReturnStatement[38065-38092]:ReturnStatement[38351-38378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38676-38995]:Block[38962-39281]"
    }, {
      "left" : "enumSetTypeField = locateField(EnumSet.class, \"elementType\", Class.class);",
      "right" : "enumSetTypeField = locateField(EnumSet.class, \"elementType\", Class.class);",
      "info" : "ExpressionStatement[38823-38897]:ExpressionStatement[39109-39183]"
    }, {
      "left" : "enumMapTypeField = locateField(EnumMap.class, \"elementType\", Class.class);",
      "right" : "enumMapTypeField = locateField(EnumMap.class, \"elementType\", Class.class);",
      "info" : "ExpressionStatement[38911-38985]:ExpressionStatement[39197-39271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39112-39362]:Block[39398-39648]"
    }, {
      "left" : "if (enumSetTypeField != null)",
      "right" : "if (enumSetTypeField != null)",
      "info" : "IfStatement[39126-39249]:IfStatement[39412-39535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39156-39249]:Block[39442-39535]"
    }, {
      "left" : "return (Class<? extends Enum<?>>) get(set, enumSetTypeField);",
      "right" : "return (Class<? extends Enum<?>>) get(set, enumSetTypeField);",
      "info" : "ReturnStatement[39174-39235]:ReturnStatement[39460-39521]"
    }, {
      "left" : "throw new IllegalStateException(\"Cannot figure out type for EnumSet (odd JDK platform?)\");",
      "right" : "throw new IllegalStateException(\"Cannot figure out type for EnumSet (odd JDK platform?)\");",
      "info" : "ThrowStatement[39262-39352]:ThrowStatement[39548-39638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39481-39731]:Block[39767-40017]"
    }, {
      "left" : "if (enumMapTypeField != null)",
      "right" : "if (enumMapTypeField != null)",
      "info" : "IfStatement[39495-39618]:IfStatement[39781-39904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39525-39618]:Block[39811-39904]"
    }, {
      "left" : "return (Class<? extends Enum<?>>) get(set, enumMapTypeField);",
      "right" : "return (Class<? extends Enum<?>>) get(set, enumMapTypeField);",
      "info" : "ReturnStatement[39543-39604]:ReturnStatement[39829-39890]"
    }, {
      "left" : "throw new IllegalStateException(\"Cannot figure out type for EnumMap (odd JDK platform?)\");",
      "right" : "throw new IllegalStateException(\"Cannot figure out type for EnumMap (odd JDK platform?)\");",
      "info" : "ThrowStatement[39631-39721]:ThrowStatement[39917-40007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39799-39973]:Block[40085-40259]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[39813-39963]:TryStatement[40099-40249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39817-39872]:Block[40103-40158]"
    }, {
      "left" : "return field.get(bean);",
      "right" : "return field.get(bean);",
      "info" : "ReturnStatement[39835-39858]:ReturnStatement[40121-40144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39893-39963]:Block[40179-40249]"
    }, {
      "left" : "throw new IllegalArgumentException(e);",
      "right" : "throw new IllegalArgumentException(e);",
      "info" : "ThrowStatement[39911-39949]:ThrowStatement[40197-40235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40085-41109]:Block[40371-41395]"
    }, {
      "left" : "Field found = null;",
      "right" : "Field found = null;",
      "info" : "VariableDeclarationStatement[40099-40118]:VariableDeclarationStatement[40385-40404]"
    }, {
      "left" : "Field[] fields = getDeclaredFields(fromClass);",
      "right" : "Field[] fields = getDeclaredFields(fromClass);",
      "info" : "VariableDeclarationStatement[40192-40238]:VariableDeclarationStatement[40478-40524]"
    }, {
      "left" : "for (Field f : fields)",
      "right" : "for (Field f : fields)",
      "info" : "EnhancedForStatement[40252-40450]:EnhancedForStatement[40538-40736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40275-40450]:Block[40561-40736]"
    }, {
      "left" : "if (expectedName.equals(f.getName()) && f.getType() == type)",
      "right" : "if (expectedName.equals(f.getName()) && f.getType() == type)",
      "info" : "IfStatement[40294-40435]:IfStatement[40580-40721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40355-40435]:Block[40641-40721]"
    }, {
      "left" : "found = f;",
      "right" : "found = f;",
      "info" : "ExpressionStatement[40378-40388]:ExpressionStatement[40664-40674]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[40410-40416]:BreakStatement[40696-40702]"
    }, {
      "left" : "if (found == null)",
      "right" : "if (found == null)",
      "info" : "IfStatement[40545-40864]:IfStatement[40831-41150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40564-40864]:Block[40850-41150]"
    }, {
      "left" : "for (Field f : fields)",
      "right" : "for (Field f : fields)",
      "info" : "EnhancedForStatement[40583-40849]:EnhancedForStatement[40869-41135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40606-40849]:Block[40892-41135]"
    }, {
      "left" : "if (f.getType() == type)",
      "right" : "if (f.getType() == type)",
      "info" : "IfStatement[40629-40830]:IfStatement[40915-41116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40654-40830]:Block[40940-41116]"
    }, {
      "left" : "if (found != null)",
      "right" : "if (found != null)",
      "info" : "IfStatement[40740-40771]:IfStatement[41026-41057]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[40759-40771]:ReturnStatement[41045-41057]"
    }, {
      "left" : "found = f;",
      "right" : "found = f;",
      "info" : "ExpressionStatement[40797-40807]:ExpressionStatement[41083-41093]"
    }, {
      "left" : "if (found != null)",
      "right" : "if (found != null)",
      "info" : "IfStatement[40878-41072]:IfStatement[41164-41358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40897-41072]:Block[41183-41358]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[40961-41057]:TryStatement[41247-41343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40965-41033]:Block[41251-41319]"
    }, {
      "left" : "found.setAccessible(true);",
      "right" : "found.setAccessible(true);",
      "info" : "ExpressionStatement[40988-41014]:ExpressionStatement[41274-41300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41054-41057]:Block[41340-41343]"
    }, {
      "left" : "return found;",
      "right" : "return found;",
      "info" : "ReturnStatement[41086-41099]:ReturnStatement[41372-41385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41775-41812]:Block[42061-42098]"
    }, {
      "left" : "_ctor = ctor;",
      "right" : "_ctor = ctor;",
      "info" : "ExpressionStatement[41789-41802]:ExpressionStatement[42075-42088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41861-41898]:Block[42147-42184]"
    }, {
      "left" : "return _ctor;",
      "right" : "return _ctor;",
      "info" : "ReturnStatement[41875-41888]:ReturnStatement[42161-42174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41935-42127]:Block[42221-42413]"
    }, {
      "left" : "int c = _paramCount;",
      "right" : "int c = _paramCount;",
      "info" : "VariableDeclarationStatement[41949-41969]:VariableDeclarationStatement[42235-42255]"
    }, {
      "left" : "if (c < 0)",
      "right" : "if (c < 0)",
      "info" : "IfStatement[41982-42095]:IfStatement[42268-42381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41993-42095]:Block[42279-42381]"
    }, {
      "left" : "c = _ctor.getParameterTypes().length;",
      "right" : "c = _ctor.getParameterTypes().length;",
      "info" : "ExpressionStatement[42011-42048]:ExpressionStatement[42297-42334]"
    }, {
      "left" : "_paramCount = c;",
      "right" : "_paramCount = c;",
      "info" : "ExpressionStatement[42065-42081]:ExpressionStatement[42351-42367]"
    }, {
      "left" : "return c;",
      "right" : "return c;",
      "info" : "ReturnStatement[42108-42117]:ReturnStatement[42394-42403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42173-42230]:Block[42459-42516]"
    }, {
      "left" : "return _ctor.getDeclaringClass();",
      "right" : "return _ctor.getDeclaringClass();",
      "info" : "ReturnStatement[42187-42220]:ReturnStatement[42473-42506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42285-42515]:Block[42571-42801]"
    }, {
      "left" : "Annotation[] result = _annotations;",
      "right" : "Annotation[] result = _annotations;",
      "info" : "VariableDeclarationStatement[42299-42334]:VariableDeclarationStatement[42585-42620]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[42347-42478]:IfStatement[42633-42764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42367-42478]:Block[42653-42764]"
    }, {
      "left" : "result = _ctor.getDeclaredAnnotations();",
      "right" : "result = _ctor.getDeclaredAnnotations();",
      "info" : "ExpressionStatement[42385-42425]:ExpressionStatement[42671-42711]"
    }, {
      "left" : "_annotations = result;",
      "right" : "_annotations = result;",
      "info" : "ExpressionStatement[42442-42464]:ExpressionStatement[42728-42750]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[42491-42505]:ReturnStatement[42777-42791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42574-42817]:Block[42860-43103]"
    }, {
      "left" : "Annotation[][] result = _paramAnnotations;",
      "right" : "Annotation[][] result = _paramAnnotations;",
      "info" : "VariableDeclarationStatement[42588-42630]:VariableDeclarationStatement[42874-42916]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[42643-42780]:IfStatement[42929-43066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42663-42780]:Block[42949-43066]"
    }, {
      "left" : "result = _ctor.getParameterAnnotations();",
      "right" : "result = _ctor.getParameterAnnotations();",
      "info" : "ExpressionStatement[42681-42722]:ExpressionStatement[42967-43008]"
    }, {
      "left" : "_paramAnnotations = result;",
      "right" : "_paramAnnotations = result;",
      "info" : "ExpressionStatement[42739-42766]:ExpressionStatement[43025-43052]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[42793-42807]:ReturnStatement[43079-43093]"
    } ]
  },
  "interFileMappings" : { }
}