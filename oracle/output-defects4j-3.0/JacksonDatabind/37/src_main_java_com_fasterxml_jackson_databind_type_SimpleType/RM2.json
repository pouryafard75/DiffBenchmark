{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "TypeDeclaration[116-9033]:TypeDeclaration[116-9026]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[460-508]:FieldDeclaration[460-508]"
    }, {
      "left" : "protected SimpleType(Class<?> cls)",
      "right" : "protected SimpleType(Class<?> cls)",
      "info" : "MethodDeclaration[676-1128]:MethodDeclaration[676-1128]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts)",
      "info" : "MethodDeclaration[1134-1325]:MethodDeclaration[1134-1325]"
    }, {
      "left" : "protected SimpleType(TypeBase base)",
      "right" : "protected SimpleType(TypeBase base)",
      "info" : "MethodDeclaration[1331-1554]:MethodDeclaration[1331-1554]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "info" : "MethodDeclaration[1560-1864]:MethodDeclaration[1560-1864]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts, int extraHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts, int extraHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "info" : "MethodDeclaration[1870-2303]:MethodDeclaration[1870-2303]"
    }, {
      "left" : "public static SimpleType constructUnsafe(Class<?> raw)",
      "right" : "public static SimpleType constructUnsafe(Class<?> raw)",
      "info" : "MethodDeclaration[2313-2943]:MethodDeclaration[2313-2943]"
    }, {
      "left" : "public static SimpleType construct(Class<?> cls)",
      "right" : "public static SimpleType construct(Class<?> cls)",
      "info" : "MethodDeclaration[2949-4412]:MethodDeclaration[2949-4412]"
    }, {
      "left" : "protected JavaType _narrow(Class<?> subclass)",
      "right" : "protected JavaType _narrow(Class<?> subclass)",
      "info" : "MethodDeclaration[4418-5173]:MethodDeclaration[4418-5166]"
    }, {
      "left" : "public JavaType withContentType(JavaType contentType)",
      "right" : "public JavaType withContentType(JavaType contentType)",
      "info" : "MethodDeclaration[5183-5372]:MethodDeclaration[5176-5365]"
    }, {
      "left" : "public SimpleType withTypeHandler(Object h)",
      "right" : "public SimpleType withTypeHandler(Object h)",
      "info" : "MethodDeclaration[5382-5625]:MethodDeclaration[5375-5618]"
    }, {
      "left" : "public JavaType withContentTypeHandler(Object h)",
      "right" : "public JavaType withContentTypeHandler(Object h)",
      "info" : "MethodDeclaration[5631-5853]:MethodDeclaration[5624-5846]"
    }, {
      "left" : "public SimpleType withValueHandler(Object h)",
      "right" : "public SimpleType withValueHandler(Object h)",
      "info" : "MethodDeclaration[5859-6103]:MethodDeclaration[5852-6096]"
    }, {
      "left" : "public  SimpleType withContentValueHandler(Object h)",
      "right" : "public  SimpleType withContentValueHandler(Object h)",
      "info" : "MethodDeclaration[6113-6340]:MethodDeclaration[6106-6333]"
    }, {
      "left" : "public SimpleType withStaticTyping()",
      "right" : "public SimpleType withStaticTyping()",
      "info" : "MethodDeclaration[6346-6555]:MethodDeclaration[6339-6548]"
    }, {
      "left" : "public JavaType refine(Class<?> rawType, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInterfaces)",
      "right" : "public JavaType refine(Class<?> rawType, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInterfaces)",
      "info" : "MethodDeclaration[6561-6787]:MethodDeclaration[6554-6780]"
    }, {
      "left" : "protected String buildCanonicalName()",
      "right" : "protected String buildCanonicalName()",
      "info" : "MethodDeclaration[6797-7345]:MethodDeclaration[6790-7338]"
    }, {
      "left" : "public boolean isContainerType()",
      "right" : "public boolean isContainerType()",
      "info" : "MethodDeclaration[7513-7577]:MethodDeclaration[7506-7570]"
    }, {
      "left" : "public StringBuilder getErasedSignature(StringBuilder sb)",
      "right" : "public StringBuilder getErasedSignature(StringBuilder sb)",
      "info" : "MethodDeclaration[7583-7712]:MethodDeclaration[7576-7705]"
    }, {
      "left" : "public StringBuilder getGenericSignature(StringBuilder sb)",
      "right" : "public StringBuilder getGenericSignature(StringBuilder sb)",
      "info" : "MethodDeclaration[7722-8152]:MethodDeclaration[7715-8145]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[8326-8540]:MethodDeclaration[8319-8533]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[8546-9031]:MethodDeclaration[8539-9024]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[380-386]:Modifier[380-386]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[387-392]:TYPE_DECLARATION_KIND[387-392]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[393-403]:SimpleName[393-403]"
    }, {
      "left" : "TypeBase",
      "right" : "TypeBase",
      "info" : "SimpleType[445-453]:SimpleType[445-453]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1025-1034]:Modifier[1025-1034]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1035-1045]:SimpleName[1035-1045]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1046-1058]:SingleVariableDeclaration[1046-1058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1060-1128]:Block[1060-1128]"
    }, {
      "left" : "this(cls, TypeBindings.emptyBindings(), null, null);",
      "right" : "this(cls, TypeBindings.emptyBindings(), null, null);",
      "info" : "ConstructorInvocation[1070-1122]:ConstructorInvocation[1070-1122]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1134-1143]:Modifier[1134-1143]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1144-1154]:SimpleName[1144-1154]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1155-1167]:SingleVariableDeclaration[1155-1167]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[1169-1190]:SingleVariableDeclaration[1169-1190]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[1204-1223]:SingleVariableDeclaration[1204-1223]"
    }, {
      "left" : "JavaType[] superInts",
      "right" : "JavaType[] superInts",
      "info" : "SingleVariableDeclaration[1225-1245]:SingleVariableDeclaration[1225-1245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1247-1325]:Block[1247-1325]"
    }, {
      "left" : "this(cls, bindings, superClass, superInts, null, null, false);",
      "right" : "this(cls, bindings, superClass, superInts, null, null, false);",
      "info" : "ConstructorInvocation[1257-1319]:ConstructorInvocation[1257-1319]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1490-1499]:Modifier[1490-1499]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1500-1510]:SimpleName[1500-1510]"
    }, {
      "left" : "TypeBase base",
      "right" : "TypeBase base",
      "info" : "SingleVariableDeclaration[1511-1524]:SingleVariableDeclaration[1511-1524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1526-1554]:Block[1526-1554]"
    }, {
      "left" : "super(base);",
      "right" : "super(base);",
      "info" : "SuperConstructorInvocation[1536-1548]:SuperConstructorInvocation[1536-1548]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1560-1569]:Modifier[1560-1569]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1570-1580]:SimpleName[1570-1580]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1581-1593]:SingleVariableDeclaration[1581-1593]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[1595-1616]:SingleVariableDeclaration[1595-1616]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[1630-1649]:SingleVariableDeclaration[1630-1649]"
    }, {
      "left" : "JavaType[] superInts",
      "right" : "JavaType[] superInts",
      "info" : "SingleVariableDeclaration[1651-1671]:SingleVariableDeclaration[1651-1671]"
    }, {
      "left" : "Object valueHandler",
      "right" : "Object valueHandler",
      "info" : "SingleVariableDeclaration[1685-1704]:SingleVariableDeclaration[1685-1704]"
    }, {
      "left" : "Object typeHandler",
      "right" : "Object typeHandler",
      "info" : "SingleVariableDeclaration[1706-1724]:SingleVariableDeclaration[1706-1724]"
    }, {
      "left" : "boolean asStatic",
      "right" : "boolean asStatic",
      "info" : "SingleVariableDeclaration[1726-1742]:SingleVariableDeclaration[1726-1742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1748-1864]:Block[1748-1864]"
    }, {
      "left" : "super(cls, bindings, superClass, superInts,\n                0, valueHandler, typeHandler, asStatic);",
      "right" : "super(cls, bindings, superClass, superInts,\n                0, valueHandler, typeHandler, asStatic);",
      "info" : "SuperConstructorInvocation[1758-1858]:SuperConstructorInvocation[1758-1858]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1975-1984]:Modifier[1975-1984]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleName[1985-1995]:SimpleName[1985-1995]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[1996-2008]:SingleVariableDeclaration[1996-2008]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[2010-2031]:SingleVariableDeclaration[2010-2031]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[2045-2064]:SingleVariableDeclaration[2045-2064]"
    }, {
      "left" : "JavaType[] superInts",
      "right" : "JavaType[] superInts",
      "info" : "SingleVariableDeclaration[2066-2086]:SingleVariableDeclaration[2066-2086]"
    }, {
      "left" : "int extraHash",
      "right" : "int extraHash",
      "info" : "SingleVariableDeclaration[2088-2101]:SingleVariableDeclaration[2088-2101]"
    }, {
      "left" : "Object valueHandler",
      "right" : "Object valueHandler",
      "info" : "SingleVariableDeclaration[2115-2134]:SingleVariableDeclaration[2115-2134]"
    }, {
      "left" : "Object typeHandler",
      "right" : "Object typeHandler",
      "info" : "SingleVariableDeclaration[2136-2154]:SingleVariableDeclaration[2136-2154]"
    }, {
      "left" : "boolean asStatic",
      "right" : "boolean asStatic",
      "info" : "SingleVariableDeclaration[2156-2172]:SingleVariableDeclaration[2156-2172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2178-2303]:Block[2178-2303]"
    }, {
      "left" : "super(cls, bindings, superClass, superInts, \n                extraHash, valueHandler, typeHandler, asStatic);",
      "right" : "super(cls, bindings, superClass, superInts, \n                extraHash, valueHandler, typeHandler, asStatic);",
      "info" : "SuperConstructorInvocation[2188-2297]:SuperConstructorInvocation[2188-2297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2704-2710]:Modifier[2704-2710]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2711-2717]:Modifier[2711-2717]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[2718-2728]:SimpleType[2718-2728]"
    }, {
      "left" : "constructUnsafe",
      "right" : "constructUnsafe",
      "info" : "SimpleName[2729-2744]:SimpleName[2729-2744]"
    }, {
      "left" : "Class<?> raw",
      "right" : "Class<?> raw",
      "info" : "SingleVariableDeclaration[2745-2757]:SingleVariableDeclaration[2745-2757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2759-2943]:Block[2759-2943]"
    }, {
      "left" : "return new SimpleType(raw, null,\n                // 18-Oct-2015, tatu: Should be ok to omit possible super-types, right?\n                null, null, null, null, false);",
      "right" : "return new SimpleType(raw, null,\n                // 18-Oct-2015, tatu: Should be ok to omit possible super-types, right?\n                null, null, null, null, false);",
      "info" : "ReturnStatement[2769-2937]:ReturnStatement[2769-2937]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[3601-3612]:MarkerAnnotation[3601-3612]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3617-3623]:Modifier[3617-3623]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3624-3630]:Modifier[3624-3630]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[3631-3641]:SimpleType[3631-3641]"
    }, {
      "left" : "construct",
      "right" : "construct",
      "info" : "SimpleName[3642-3651]:SimpleName[3642-3651]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[3652-3664]:SingleVariableDeclaration[3652-3664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3670-4412]:Block[3670-4412]"
    }, {
      "left" : "if (Map.class.isAssignableFrom(cls))",
      "right" : "if (Map.class.isAssignableFrom(cls))",
      "info" : "IfStatement[3796-3961]:IfStatement[3796-3961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3833-3961]:Block[3833-3961]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \"+cls.getName()+\")\");",
      "right" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Map (class: \"+cls.getName()+\")\");",
      "info" : "ThrowStatement[3847-3951]:ThrowStatement[3847-3951]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(cls))",
      "right" : "if (Collection.class.isAssignableFrom(cls))",
      "info" : "IfStatement[3970-4149]:IfStatement[3970-4149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4014-4149]:Block[4014-4149]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \"+cls.getName()+\")\");",
      "right" : "throw new IllegalArgumentException(\"Can not construct SimpleType for a Collection (class: \"+cls.getName()+\")\");",
      "info" : "ThrowStatement[4028-4139]:ThrowStatement[4028-4139]"
    }, {
      "left" : "if (cls.isArray())",
      "right" : "if (cls.isArray())",
      "info" : "IfStatement[4220-4370]:IfStatement[4220-4370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4239-4370]:Block[4239-4370]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \"+cls.getName()+\")\");",
      "right" : "throw new IllegalArgumentException(\"Can not construct SimpleType for an array (class: \"+cls.getName()+\")\");",
      "info" : "ThrowStatement[4253-4360]:ThrowStatement[4253-4360]"
    }, {
      "left" : "return new SimpleType(cls);",
      "right" : "return new SimpleType(cls);",
      "info" : "ReturnStatement[4379-4406]:ReturnStatement[4379-4406]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4432-4441]:Modifier[4432-4441]"
    }, {
      "left" : "_narrow",
      "right" : "_narrow",
      "info" : "SimpleName[4451-4458]:SimpleName[4451-4458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4482-5173]:Block[4482-5166]"
    }, {
      "left" : "if (_class == subclass)",
      "right" : "if (_class == subclass)",
      "info" : "IfStatement[4492-4552]:IfStatement[4492-4552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4516-4552]:Block[4516-4552]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4530-4542]:ReturnStatement[4530-4542]"
    }, {
      "left" : "return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);",
      "right" : "return new SimpleType(subclass, _bindings, this, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);",
      "info" : "ReturnStatement[5037-5167]:ReturnStatement[5037-5160]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5183-5192]:MarkerAnnotation[5176-5185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5197-5203]:Modifier[5190-5196]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[5204-5212]:SimpleType[5197-5205]"
    }, {
      "left" : "withContentType",
      "right" : "withContentType",
      "info" : "SimpleName[5213-5228]:SimpleName[5206-5221]"
    }, {
      "left" : "JavaType contentType",
      "right" : "JavaType contentType",
      "info" : "SingleVariableDeclaration[5229-5249]:SingleVariableDeclaration[5222-5242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5251-5372]:Block[5244-5365]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContentType()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContentType()\");",
      "info" : "ThrowStatement[5261-5366]:ThrowStatement[5254-5359]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5382-5391]:MarkerAnnotation[5375-5384]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5396-5402]:Modifier[5389-5395]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[5403-5413]:SimpleType[5396-5406]"
    }, {
      "left" : "withTypeHandler",
      "right" : "withTypeHandler",
      "info" : "SimpleName[5414-5429]:SimpleName[5407-5422]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[5430-5438]:SingleVariableDeclaration[5423-5431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5440-5625]:Block[5433-5618]"
    }, {
      "left" : "if (_typeHandler == h)",
      "right" : "if (_typeHandler == h)",
      "info" : "IfStatement[5450-5509]:IfStatement[5443-5502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5473-5509]:Block[5466-5502]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5487-5499]:ReturnStatement[5480-5492]"
    }, {
      "left" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, _valueHandler, h, _asStatic);",
      "right" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, _valueHandler, h, _asStatic);",
      "info" : "ReturnStatement[5518-5619]:ReturnStatement[5511-5612]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5631-5640]:MarkerAnnotation[5624-5633]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5645-5651]:Modifier[5638-5644]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[5652-5660]:SimpleType[5645-5653]"
    }, {
      "left" : "withContentTypeHandler",
      "right" : "withContentTypeHandler",
      "info" : "SimpleName[5661-5683]:SimpleName[5654-5676]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[5684-5692]:SingleVariableDeclaration[5677-5685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5694-5853]:Block[5687-5846]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenTypeHandler()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenTypeHandler()\");",
      "info" : "ThrowStatement[5736-5847]:ThrowStatement[5729-5840]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5859-5868]:MarkerAnnotation[5852-5861]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5873-5879]:Modifier[5866-5872]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[5880-5890]:SimpleType[5873-5883]"
    }, {
      "left" : "withValueHandler",
      "right" : "withValueHandler",
      "info" : "SimpleName[5891-5907]:SimpleName[5884-5900]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[5908-5916]:SingleVariableDeclaration[5901-5909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5918-6103]:Block[5911-6096]"
    }, {
      "left" : "if (h == _valueHandler)",
      "right" : "if (h == _valueHandler)",
      "info" : "IfStatement[5928-5988]:IfStatement[5921-5981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5952-5988]:Block[5945-5981]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5966-5978]:ReturnStatement[5959-5971]"
    }, {
      "left" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, h, _typeHandler, _asStatic);",
      "right" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, h, _typeHandler, _asStatic);",
      "info" : "ReturnStatement[5997-6097]:ReturnStatement[5990-6090]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6113-6122]:MarkerAnnotation[6106-6115]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6127-6133]:Modifier[6120-6126]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[6135-6145]:SimpleType[6128-6138]"
    }, {
      "left" : "withContentValueHandler",
      "right" : "withContentValueHandler",
      "info" : "SimpleName[6146-6169]:SimpleName[6139-6162]"
    }, {
      "left" : "Object h",
      "right" : "Object h",
      "info" : "SingleVariableDeclaration[6170-6178]:SingleVariableDeclaration[6163-6171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6180-6340]:Block[6173-6333]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenValueHandler()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenValueHandler()\");",
      "info" : "ThrowStatement[6222-6334]:ThrowStatement[6215-6327]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6346-6355]:MarkerAnnotation[6339-6348]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6360-6366]:Modifier[6353-6359]"
    }, {
      "left" : "SimpleType",
      "right" : "SimpleType",
      "info" : "SimpleType[6367-6377]:SimpleType[6360-6370]"
    }, {
      "left" : "withStaticTyping",
      "right" : "withStaticTyping",
      "info" : "SimpleName[6378-6394]:SimpleName[6371-6387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6397-6555]:Block[6390-6548]"
    }, {
      "left" : "return _asStatic ? this : new SimpleType(_class, _bindings,\n                _superClass, _superInterfaces, _valueHandler, _typeHandler, true);",
      "right" : "return _asStatic ? this : new SimpleType(_class, _bindings,\n                _superClass, _superInterfaces, _valueHandler, _typeHandler, true);",
      "info" : "ReturnStatement[6407-6549]:ReturnStatement[6400-6542]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6561-6570]:MarkerAnnotation[6554-6563]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6575-6581]:Modifier[6568-6574]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[6582-6590]:SimpleType[6575-6583]"
    }, {
      "left" : "refine",
      "right" : "refine",
      "info" : "SimpleName[6591-6597]:SimpleName[6584-6590]"
    }, {
      "left" : "Class<?> rawType",
      "right" : "Class<?> rawType",
      "info" : "SingleVariableDeclaration[6598-6614]:SingleVariableDeclaration[6591-6607]"
    }, {
      "left" : "TypeBindings bindings",
      "right" : "TypeBindings bindings",
      "info" : "SingleVariableDeclaration[6616-6637]:SingleVariableDeclaration[6609-6630]"
    }, {
      "left" : "JavaType superClass",
      "right" : "JavaType superClass",
      "info" : "SingleVariableDeclaration[6651-6670]:SingleVariableDeclaration[6644-6663]"
    }, {
      "left" : "JavaType[] superInterfaces",
      "right" : "JavaType[] superInterfaces",
      "info" : "SingleVariableDeclaration[6672-6698]:SingleVariableDeclaration[6665-6691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6700-6787]:Block[6693-6780]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6769-6781]:ReturnStatement[6762-6774]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6797-6806]:MarkerAnnotation[6790-6799]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6811-6820]:Modifier[6804-6813]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6821-6827]:SimpleType[6814-6820]"
    }, {
      "left" : "buildCanonicalName",
      "right" : "buildCanonicalName",
      "info" : "SimpleName[6828-6846]:SimpleName[6821-6839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6853-7345]:Block[6846-7338]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[6863-6902]:VariableDeclarationStatement[6856-6895]"
    }, {
      "left" : "sb.append(_class.getName());",
      "right" : "sb.append(_class.getName());",
      "info" : "ExpressionStatement[6911-6939]:ExpressionStatement[6904-6932]"
    }, {
      "left" : "final int count = _bindings.size();",
      "right" : "final int count = _bindings.size();",
      "info" : "VariableDeclarationStatement[6949-6984]:VariableDeclarationStatement[6942-6977]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[6993-7309]:IfStatement[6986-7302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7008-7309]:Block[7001-7302]"
    }, {
      "left" : "sb.append('<');",
      "right" : "sb.append('<');",
      "info" : "ExpressionStatement[7022-7037]:ExpressionStatement[7015-7030]"
    }, {
      "left" : "for (int i = 0; i < count; ++i)",
      "right" : "for (int i = 0; i < count; ++i)",
      "info" : "ForStatement[7050-7271]:ForStatement[7043-7264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7082-7271]:Block[7075-7264]"
    }, {
      "left" : "JavaType t = containedType(i);",
      "right" : "JavaType t = containedType(i);",
      "info" : "VariableDeclarationStatement[7100-7130]:VariableDeclarationStatement[7093-7123]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[7147-7213]:IfStatement[7140-7206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7158-7213]:Block[7151-7206]"
    }, {
      "left" : "sb.append(',');",
      "right" : "sb.append(',');",
      "info" : "ExpressionStatement[7180-7195]:ExpressionStatement[7173-7188]"
    }, {
      "left" : "sb.append(t.toCanonical());",
      "right" : "sb.append(t.toCanonical());",
      "info" : "ExpressionStatement[7230-7257]:ExpressionStatement[7223-7250]"
    }, {
      "left" : "sb.append('>');",
      "right" : "sb.append('>');",
      "info" : "ExpressionStatement[7284-7299]:ExpressionStatement[7277-7292]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[7318-7339]:ReturnStatement[7311-7332]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7513-7522]:MarkerAnnotation[7506-7515]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7527-7533]:Modifier[7520-7526]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7534-7541]:PrimitiveType[7527-7534]"
    }, {
      "left" : "isContainerType",
      "right" : "isContainerType",
      "info" : "SimpleName[7542-7557]:SimpleName[7535-7550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7560-7577]:Block[7553-7570]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7562-7575]:ReturnStatement[7555-7568]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7583-7592]:MarkerAnnotation[7576-7585]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7597-7603]:Modifier[7590-7596]"
    }, {
      "left" : "StringBuilder",
      "right" : "StringBuilder",
      "info" : "SimpleType[7604-7617]:SimpleType[7597-7610]"
    }, {
      "left" : "getErasedSignature",
      "right" : "getErasedSignature",
      "info" : "SimpleName[7618-7636]:SimpleName[7611-7629]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[7637-7653]:SingleVariableDeclaration[7630-7646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7655-7712]:Block[7648-7705]"
    }, {
      "left" : "return _classSignature(_class, sb, true);",
      "right" : "return _classSignature(_class, sb, true);",
      "info" : "ReturnStatement[7665-7706]:ReturnStatement[7658-7699]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7722-7731]:MarkerAnnotation[7715-7724]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7736-7742]:Modifier[7729-7735]"
    }, {
      "left" : "StringBuilder",
      "right" : "StringBuilder",
      "info" : "SimpleType[7743-7756]:SimpleType[7736-7749]"
    }, {
      "left" : "getGenericSignature",
      "right" : "getGenericSignature",
      "info" : "SimpleName[7757-7776]:SimpleName[7750-7769]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[7777-7793]:SingleVariableDeclaration[7770-7786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7799-8152]:Block[7792-8145]"
    }, {
      "left" : "_classSignature(_class, sb, false);",
      "right" : "_classSignature(_class, sb, false);",
      "info" : "ExpressionStatement[7809-7844]:ExpressionStatement[7802-7837]"
    }, {
      "left" : "final int count = _bindings.size();",
      "right" : "final int count = _bindings.size();",
      "info" : "VariableDeclarationStatement[7854-7889]:VariableDeclarationStatement[7847-7882]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[7898-8103]:IfStatement[7891-8096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7913-8103]:Block[7906-8096]"
    }, {
      "left" : "sb.append('<');",
      "right" : "sb.append('<');",
      "info" : "ExpressionStatement[7927-7942]:ExpressionStatement[7920-7935]"
    }, {
      "left" : "for (int i = 0; i < count; ++i)",
      "right" : "for (int i = 0; i < count; ++i)",
      "info" : "ForStatement[7955-8065]:ForStatement[7948-8058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7987-8065]:Block[7980-8058]"
    }, {
      "left" : "sb = containedType(i).getGenericSignature(sb);",
      "right" : "sb = containedType(i).getGenericSignature(sb);",
      "info" : "ExpressionStatement[8005-8051]:ExpressionStatement[7998-8044]"
    }, {
      "left" : "sb.append('>');",
      "right" : "sb.append('>');",
      "info" : "ExpressionStatement[8078-8093]:ExpressionStatement[8071-8086]"
    }, {
      "left" : "sb.append(';');",
      "right" : "sb.append(';');",
      "info" : "ExpressionStatement[8112-8127]:ExpressionStatement[8105-8120]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[8136-8146]:ReturnStatement[8129-8139]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8326-8335]:MarkerAnnotation[8319-8328]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8340-8346]:Modifier[8333-8339]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8347-8353]:SimpleType[8340-8346]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[8354-8362]:SimpleName[8347-8355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8369-8540]:Block[8362-8533]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder(40);",
      "right" : "StringBuilder sb = new StringBuilder(40);",
      "info" : "VariableDeclarationStatement[8379-8420]:VariableDeclarationStatement[8372-8413]"
    }, {
      "left" : "sb.append(\"[simple type, class \").append(buildCanonicalName()).append(']');",
      "right" : "sb.append(\"[simple type, class \").append(buildCanonicalName()).append(']');",
      "info" : "ExpressionStatement[8429-8504]:ExpressionStatement[8422-8497]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[8513-8534]:ReturnStatement[8506-8527]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8546-8555]:MarkerAnnotation[8539-8548]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8560-8566]:Modifier[8553-8559]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8567-8574]:PrimitiveType[8560-8567]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[8575-8581]:SimpleName[8568-8574]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[8582-8590]:SingleVariableDeclaration[8575-8583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8596-9031]:Block[8589-9024]"
    }, {
      "left" : "if (o == this)",
      "right" : "if (o == this)",
      "info" : "IfStatement[8606-8633]:IfStatement[8599-8626]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8621-8633]:ReturnStatement[8614-8626]"
    }, {
      "left" : "if (o == null)",
      "right" : "if (o == null)",
      "info" : "IfStatement[8642-8670]:IfStatement[8635-8663]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8657-8670]:ReturnStatement[8650-8663]"
    }, {
      "left" : "if (o.getClass() != getClass())",
      "right" : "if (o.getClass() != getClass())",
      "info" : "IfStatement[8679-8724]:IfStatement[8672-8717]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8711-8724]:ReturnStatement[8704-8717]"
    }, {
      "left" : "SimpleType other = (SimpleType) o;",
      "right" : "SimpleType other = (SimpleType) o;",
      "info" : "VariableDeclarationStatement[8734-8768]:VariableDeclarationStatement[8727-8761]"
    }, {
      "left" : "if (other._class != this._class)",
      "right" : "if (other._class != this._class)",
      "info" : "IfStatement[8819-8865]:IfStatement[8812-8858]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8852-8865]:ReturnStatement[8845-8858]"
    }, {
      "left" : "TypeBindings b1 = _bindings;",
      "right" : "TypeBindings b1 = _bindings;",
      "info" : "VariableDeclarationStatement[8924-8952]:VariableDeclarationStatement[8917-8945]"
    }, {
      "left" : "TypeBindings b2 = other._bindings;",
      "right" : "TypeBindings b2 = other._bindings;",
      "info" : "VariableDeclarationStatement[8961-8995]:VariableDeclarationStatement[8954-8988]"
    }, {
      "left" : "return b1.equals(b2);",
      "right" : "return b1.equals(b2);",
      "info" : "ReturnStatement[9004-9025]:ReturnStatement[8997-9018]"
    } ]
  },
  "interFileMappings" : { }
}